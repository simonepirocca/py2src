{"total_count": 64, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/python/typed_ast/issues/143", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/143/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/143/events", "html_url": "https://github.com/python/typed_ast/issues/143", "id": 668757876, "node_id": "MDU6SXNzdWU2Njg3NTc4NzY=", "number": 143, "title": "typed_ast causes `IndentationError` when using \"sphinx-autodoc-typehints\" package", "user": {"login": "demitri", "id": 64314, "node_id": "MDQ6VXNlcjY0MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/64314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demitri", "html_url": "https://github.com/demitri", "followers_url": "https://api.github.com/users/demitri/followers", "following_url": "https://api.github.com/users/demitri/following{/other_user}", "gists_url": "https://api.github.com/users/demitri/gists{/gist_id}", "starred_url": "https://api.github.com/users/demitri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demitri/subscriptions", "organizations_url": "https://api.github.com/users/demitri/orgs", "repos_url": "https://api.github.com/users/demitri/repos", "events_url": "https://api.github.com/users/demitri/events{/privacy}", "received_events_url": "https://api.github.com/users/demitri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T13:58:11Z", "updated_at": "2020-07-30T16:40:01Z", "closed_at": "2020-07-30T16:40:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Details of issue are here: https://github.com/agronholm/sphinx-autodoc-typehints/issues/139\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/141", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/141/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/141/events", "html_url": "https://github.com/python/typed_ast/issues/141", "id": 648707392, "node_id": "MDU6SXNzdWU2NDg3MDczOTI=", "number": 141, "title": "Wheel support for aarch64", "user": {"login": "odidev", "id": 40816837, "node_id": "MDQ6VXNlcjQwODE2ODM3", "avatar_url": "https://avatars2.githubusercontent.com/u/40816837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odidev", "html_url": "https://github.com/odidev", "followers_url": "https://api.github.com/users/odidev/followers", "following_url": "https://api.github.com/users/odidev/following{/other_user}", "gists_url": "https://api.github.com/users/odidev/gists{/gist_id}", "starred_url": "https://api.github.com/users/odidev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odidev/subscriptions", "organizations_url": "https://api.github.com/users/odidev/orgs", "repos_url": "https://api.github.com/users/odidev/repos", "events_url": "https://api.github.com/users/odidev/events{/privacy}", "received_events_url": "https://api.github.com/users/odidev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-01T06:21:22Z", "updated_at": "2020-07-16T04:46:19Z", "closed_at": "2020-07-15T18:28:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Summary**\r\nInstalling typed-ast on aarch64 via pip using command \"pip3 install typed-ast\" tries to build wheel from source code\r\n\r\n**Problem description**\r\ntyped-ast don't have wheel for aarch64 on PyPI repository. So, while installing typed-ast via pip on aarch64, pip builds wheel for same resulting in it takes more time to install typed-ast. Making wheel available for aarch64 will benefit aarch64 users by minimizing typed-ast installation time.\r\n\r\n**Expected Output**\r\nPip should be able to download typed-ast wheel from PyPI repository rather than building it from source code.\r\n\r\n@typed-ast-team, please let me know if I can help you building wheel/uploading to PyPI repository. I am curious to make typed-ast wheel available for aarch64. It will be a great opportunity for me to work with you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/140", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/140/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/140/events", "html_url": "https://github.com/python/typed_ast/issues/140", "id": 630108046, "node_id": "MDU6SXNzdWU2MzAxMDgwNDY=", "number": 140, "title": "Error Installing Pybinsim on Windows with Python 3.8", "user": {"login": "hmza09", "id": 66377106, "node_id": "MDQ6VXNlcjY2Mzc3MTA2", "avatar_url": "https://avatars0.githubusercontent.com/u/66377106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmza09", "html_url": "https://github.com/hmza09", "followers_url": "https://api.github.com/users/hmza09/followers", "following_url": "https://api.github.com/users/hmza09/following{/other_user}", "gists_url": "https://api.github.com/users/hmza09/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmza09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmza09/subscriptions", "organizations_url": "https://api.github.com/users/hmza09/orgs", "repos_url": "https://api.github.com/users/hmza09/repos", "events_url": "https://api.github.com/users/hmza09/events{/privacy}", "received_events_url": "https://api.github.com/users/hmza09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T15:43:34Z", "updated_at": "2020-06-03T16:24:38Z", "closed_at": "2020-06-03T16:24:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered the following error while installing pybinsim using anaconda. I'm using Windows 10 and Python 3.8\r\n`$ conda create --name binsim python=3.5 numpy\r\n$ source activate binsim\r\n$ pip install pybinsim`\r\n\r\nIt run into following error\r\n>  ERROR: Command errored out with exit status 1:\r\n   command: 'c:\\python3.8\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\ihmza\\\\AppData\\\\Local\\\\Temp\\\\pip-install-ub5pe6rl\\\\pyaudio\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\ihmza\\\\AppData\\\\Local\\\\Temp\\\\pip-install-ub5pe6rl\\\\pyaudio\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d 'C:\\Users\\ihmza\\AppData\\Local\\Temp\\pip-wheel-_udtfpya'\r\n       cwd: C:\\Users\\ihmza\\AppData\\Local\\Temp\\pip-install-ub5pe6rl\\pyaudio\\\r\n  Complete output (9 lines):\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build\\lib.win32-3.8\r\n  copying src\\pyaudio.py -> build\\lib.win32-3.8\r\n  running build_ext\r\n  building '_portaudio' extension\r\n  error: Microsoft Visual C++ 14.0 is required. Get it with \"Build Tools for Visual Studio\": https://visualstudio.microsoft.com/downloads/\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for pyaudio\r\n\r\nThe MS Visual C++ error was gone when I downloaded the VS Build Tools 2019 but it lead to another error along with the top error\r\n\r\n> error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.26.28801\\\\bin\\\\HostX86\\\\x86\\\\cl.exe' failed with exit status 2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/136", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/136/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/136/events", "html_url": "https://github.com/python/typed_ast/issues/136", "id": 608969543, "node_id": "MDU6SXNzdWU2MDg5Njk1NDM=", "number": 136, "title": "Chokes on annotated unparenthesised tuples", "user": {"login": "retnikt", "id": 24581770, "node_id": "MDQ6VXNlcjI0NTgxNzcw", "avatar_url": "https://avatars1.githubusercontent.com/u/24581770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retnikt", "html_url": "https://github.com/retnikt", "followers_url": "https://api.github.com/users/retnikt/followers", "following_url": "https://api.github.com/users/retnikt/following{/other_user}", "gists_url": "https://api.github.com/users/retnikt/gists{/gist_id}", "starred_url": "https://api.github.com/users/retnikt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retnikt/subscriptions", "organizations_url": "https://api.github.com/users/retnikt/orgs", "repos_url": "https://api.github.com/users/retnikt/repos", "events_url": "https://api.github.com/users/retnikt/events{/privacy}", "received_events_url": "https://api.github.com/users/retnikt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-29T11:09:37Z", "updated_at": "2020-04-29T19:05:15Z", "closed_at": "2020-04-29T15:54:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "## How to reproduce\r\nCall `typed_ast.ast3.parse(\"foo: tuple = 5,\")`\r\n\r\n## Expected behaviour\r\nReturn:\r\n```\r\nModule(\r\n    body=[\r\n        AnnAsign(\r\n            target=Name(\r\n                id=\"foo\"\r\n            ),\r\n            simple=1,\r\n            value=Tuple(\r\n                elts=[\r\n                    Constant(\r\n                        n=5,\r\n                        s=5,\r\n                        kind=\"\"\r\n                    )\r\n                ]\r\n            ),\r\n            annotation=Name(\r\n                    id=\"tuple\"\r\n            )\r\n        )\r\n    ],\r\n    type_ignores=[]\r\n)\r\n```\r\n## Actual Behaviour\r\n```\r\n>>> typed_ast.ast3.parse(\"foo: tuple = 5,\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \".../lib/python3.8/site-packages/typed_ast/ast3.py\", line 62, in parse\r\n    return _ast3._parse(source, filename, mode, feature_version)\r\n  File \"<unknown>\", line 1\r\n    foo: tuple = 5,\r\n                  ^\r\nSyntaxError: invalid syntax\r\n```\r\nThis behaviour does not occur with normal stdlib `ast`, or when removing the annotation, or when removing the comma to make it a simple value, or when putting the tuple in parentheses.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/130", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/130/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/130/events", "html_url": "https://github.com/python/typed_ast/issues/130", "id": 550025082, "node_id": "MDU6SXNzdWU1NTAwMjUwODI=", "number": 130, "title": "Linker error in debug build on Windows", "user": {"login": "danielmenzel", "id": 8415713, "node_id": "MDQ6VXNlcjg0MTU3MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8415713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielmenzel", "html_url": "https://github.com/danielmenzel", "followers_url": "https://api.github.com/users/danielmenzel/followers", "following_url": "https://api.github.com/users/danielmenzel/following{/other_user}", "gists_url": "https://api.github.com/users/danielmenzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielmenzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielmenzel/subscriptions", "organizations_url": "https://api.github.com/users/danielmenzel/orgs", "repos_url": "https://api.github.com/users/danielmenzel/repos", "events_url": "https://api.github.com/users/danielmenzel/events{/privacy}", "received_events_url": "https://api.github.com/users/danielmenzel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-15T07:59:54Z", "updated_at": "2020-01-17T04:40:07Z", "closed_at": "2020-01-17T04:40:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried building a debug version of typed-ast on Windows (Python 3.7.5, Visual Studio 2015):\r\n```cmd\r\n> cd D:\\Repos\\github.com\\python\\typed_ast\r\n> c:\\Python37\\python_d.exe setup.py build --debug\r\n```\r\n\r\nI first get a warning about inconsistent DLL linkage\r\n```cmd\r\nD:\\Repos\\github.com\\python\\typed_ast\\ast27\\Parser\\parser.c(18): warning C4273: 'Py_DebugFlag': inconsistent dll linkage\r\nc:\\python37\\include\\pydebug.h(10): note: see previous definition of 'Py_DebugFlag'\r\n```\r\n\r\nand then a linker error:\r\n```cmd\r\nCreating library build\\temp.win-amd64-3.7-pydebug\\Debug\\ast27/Parser\\_ast27_d.cp37-win_amd64.lib and object build\\temp.win-amd64-3.7-pydebug\\Debug\\ast27/Parser\\_ast27_d.cp37-win_amd64.exp\r\nparser.obj : error LNK2001: unresolved external symbol Py_DebugFlag\r\nbuild\\lib.win-amd64-3.7-pydebug\\typed_ast\\_ast27_d.cp37-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\BIN\\\\amd64\\\\link.exe' failed with exit status 1120\r\n```\r\n\r\n(this also happens with Visual Studio 2019)\r\n\r\nI was able to fix it by changing the line\r\n```python\r\nextern int Py_DebugFlag;\r\n```\r\n\r\nto\r\n```python\r\nPyAPI_DATA(int) Py_DebugFlag;\r\n```\r\n\r\nin `ast27/Parser/parser.c` and `ast3/Parser/parser.c`. However I am not sure if that is the correct approach as I have not a lot of knowledge about the CPython internals.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/129", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/129/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/129/events", "html_url": "https://github.com/python/typed_ast/issues/129", "id": 525626101, "node_id": "MDU6SXNzdWU1MjU2MjYxMDE=", "number": 129, "title": "It's probably time for a release", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-20T07:32:06Z", "updated_at": "2020-01-15T17:09:26Z", "closed_at": "2020-01-15T04:29:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 3.9a1 just came out and `pip3 install typed_ast` fails. It's fixed by #128.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/126", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/126/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/126/events", "html_url": "https://github.com/python/typed_ast/issues/126", "id": 507753032, "node_id": "MDU6SXNzdWU1MDc3NTMwMzI=", "number": 126, "title": "Error installing on Windows with Python 3.8", "user": {"login": "zed-g", "id": 43435505, "node_id": "MDQ6VXNlcjQzNDM1NTA1", "avatar_url": "https://avatars2.githubusercontent.com/u/43435505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zed-g", "html_url": "https://github.com/zed-g", "followers_url": "https://api.github.com/users/zed-g/followers", "following_url": "https://api.github.com/users/zed-g/following{/other_user}", "gists_url": "https://api.github.com/users/zed-g/gists{/gist_id}", "starred_url": "https://api.github.com/users/zed-g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zed-g/subscriptions", "organizations_url": "https://api.github.com/users/zed-g/orgs", "repos_url": "https://api.github.com/users/zed-g/repos", "events_url": "https://api.github.com/users/zed-g/events{/privacy}", "received_events_url": "https://api.github.com/users/zed-g/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-16T10:11:58Z", "updated_at": "2019-10-17T12:09:40Z", "closed_at": "2019-10-16T20:30:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered this problem trying to install mypy: When I try to install Typed AST in Windows 7 in a new Python 3.8 environment with\r\n\r\n`python.exe -m pip install --user typed-ast`\r\n\r\nI run into an error:\r\n\r\n```\r\nCollecting typed-ast\r\n  Using cached https://files.pythonhosted.org/packages/34/de/d0cfe2ea7ddfd8b2b8374ed2e04eeb08b6ee6e1e84081d151341bba596e5/typed_ast-1.4.0.tar.gz\r\nInstalling collected packages: typed-ast\r\n    Running setup.py install for typed-ast: started\r\n    Running setup.py install for typed-ast: finished with status 'error'\r\n    ERROR: Command errored out with exit status 1:\r\n     command: 'C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38-32\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\pip-install-iwbwixcb\\\\typed-ast\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\pip-install-iwbwixcb\\\\typed-ast\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\user\\AppData\\Local\\Temp\\pip-record-r3_rbm3b\\install-record.txt' --single-version-externally-managed --compile --user --prefix=\r\n         cwd: C:\\Users\\user\\AppData\\Local\\Temp\\pip-install-iwbwixcb\\typed-ast\\\r\n    Complete output (75 lines):\r\n    running install\r\n    running build\r\n    [...]\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.22.27905\\bin\\HostX86\\x86\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38-32\\libs /LIBPATH:C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38-32\\PCbuild\\win32 \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.22.27905\\lib\\x86\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\ucrt\\x86\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.18362.0\\um\\x86\" /EXPORT:PyInit__ast27 build\\temp.win32-3.8\\Release\\ast27/Parser/acceler.obj build\\temp.win32-3.8\\Release\\ast27/Parser/bitset.obj build\\temp.win32-3.8\\Release\\ast27/Parser/grammar.obj build\\temp.win32-3.8\\Release\\ast27/Parser/grammar1.obj build\\temp.win32-3.8\\Release\\ast27/Parser/node.obj build\\temp.win32-3.8\\Release\\ast27/Parser/parser.obj build\\temp.win32-3.8\\Release\\ast27/Parser/parsetok.obj build\\temp.win32-3.8\\Release\\ast27/Parser/tokenizer.obj build\\temp.win32-3.8\\Release\\ast27/Python/asdl.obj build\\temp.win32-3.8\\Release\\ast27/Python/ast.obj build\\temp.win32-3.8\\Release\\ast27/Python/graminit.obj build\\temp.win32-3.8\\Release\\ast27/Python/mystrtoul.obj build\\temp.win32-3.8\\Release\\ast27/Python/Python-ast.obj build\\temp.win32-3.8\\Release\\ast27/Custom/typed_ast.obj /OUT:build\\lib.win32-3.8\\typed_ast\\_ast27.cp38-win32.pyd /IMPLIB:build\\temp.win32-3.8\\Release\\ast27/Parser\\_ast27.cp38-win32.lib\r\n\r\n    build\\temp.win32-3.8\\Release\\ast27\\Parser\\grammar.obj : fatal error LNK1000: Internal error during IMAGE::Pass1\r\n\r\n      Version 14.22.27905.0\r\n\r\n      ExceptionCode            = C0000005\r\n      ExceptionFlags           = 00000000\r\n      ExceptionAddress         = 639B77BE (639A0000) \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.22.27905\\bin\\HostX86\\x86\\tbbmalloc.dll\"\r\n      NumberParameters         = 00000002\r\n      ExceptionInformation[ 0] = 00000000\r\n      ExceptionInformation[ 1] = A39D44F8\r\n\r\n    CONTEXT:\r\n      Eax    = 0FFFFFFE  Esp    = 003FE304\r\n      Ebx    = 639C0E20  Ebp    = 02523B80\r\n      Ecx    = 00000000  Esi    = 02553FA0\r\n      Edx    = 02523BE0  Edi    = 02523B80\r\n      Eip    = 639B77BE  EFlags = 00010A02\r\n      SegCs  = 00000023  SegDs  = 0000002B\r\n      SegSs  = 0000002B  SegEs  = 0000002B\r\n      SegFs  = 00000053  SegGs  = 0000002B\r\n      Dr0    = 00000000  Dr3    = 00000000\r\n      Dr1    = 00000000  Dr6    = 00000000\r\n      Dr2    = 00000000  Dr7    = 00000000\r\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.22.27905\\\\bin\\\\HostX86\\\\x86\\\\link.exe' failed with exit status 1000\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: 'C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python38-32\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\pip-install-iwbwixcb\\\\typed-ast\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\pip-install-iwbwixcb\\\\typed-ast\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\user\\AppData\\Local\\Temp\\pip-record-r3_rbm3b\\install-record.txt' --single-version-externally-managed --compile --user --prefix= Check the logs for full command output.\r\n```\r\n\r\nI have attached the [full output](https://github.com/python/typed_ast/files/3733671/output.txt). Maybe this is similar to #102, since <https://pypi.org/project/typed-ast/#files> shows no wheels at all for Python 3.8?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/124", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/124/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/124/events", "html_url": "https://github.com/python/typed_ast/issues/124", "id": 456309611, "node_id": "MDU6SXNzdWU0NTYzMDk2MTE=", "number": 124, "title": "Python 3.8 build fails", "user": {"login": "HarrySky", "id": 8982851, "node_id": "MDQ6VXNlcjg5ODI4NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8982851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarrySky", "html_url": "https://github.com/HarrySky", "followers_url": "https://api.github.com/users/HarrySky/followers", "following_url": "https://api.github.com/users/HarrySky/following{/other_user}", "gists_url": "https://api.github.com/users/HarrySky/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarrySky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarrySky/subscriptions", "organizations_url": "https://api.github.com/users/HarrySky/orgs", "repos_url": "https://api.github.com/users/HarrySky/repos", "events_url": "https://api.github.com/users/HarrySky/events{/privacy}", "received_events_url": "https://api.github.com/users/HarrySky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-06-14T15:33:11Z", "updated_at": "2020-08-04T17:10:25Z", "closed_at": "2019-07-31T00:52:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "After commit [bd75088ea9b03df1618f1e0b8423a496412ae663](https://github.com/python/typed_ast/commit/bd75088ea9b03df1618f1e0b8423a496412ae663) (I guess, because it changes `_PyObject_FastCall` related code) build fails with this message:\r\n\r\n```\r\ngcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -DTHREAD_STACK_SIZE=0x100000 -fPIC -Iast3/Include -I/usr/local/include/python3.8 -c ast3/Python/ast.c -o build/temp.linux-x86_64-3.8/ast3/Python/ast.o\r\n    ast3/Python/ast.c:22:1: error: conflicting types for '_PyObject_FastCall'\r\n     _PyObject_FastCall(PyObject *func, PyObject *const *args, int nargs)\r\n     ^~~~~~~~~~~~~~~~~~\r\n    In file included from /usr/local/include/python3.8/abstract.h:837,\r\n                     from /usr/local/include/python3.8/Python.h:147,\r\n                     from ast3/Python/ast.c:6:\r\n    /usr/local/include/python3.8/cpython/abstract.h:142:1: note: previous definition of '_PyObject_FastCall' was here\r\n     _PyObject_FastCall(PyObject *func, PyObject *const *args, Py_ssize_t nargs)\r\n     ^~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nEnvironment: [Docker Alpine 3.9 Python 3.8](https://hub.docker.com/_/python/) (3.8-rc-alpine3.9)\r\nRelated [bug report](https://bugzilla.redhat.com/show_bug.cgi?id=1717656) in Red Hat tracker", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/122", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/122/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/122/events", "html_url": "https://github.com/python/typed_ast/issues/122", "id": 452925140, "node_id": "MDU6SXNzdWU0NTI5MjUxNDA=", "number": 122, "title": "Version 1.4.0 requires Microsoft Windows SDK 7.1", "user": {"login": "jgsogo", "id": 1406456, "node_id": "MDQ6VXNlcjE0MDY0NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1406456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgsogo", "html_url": "https://github.com/jgsogo", "followers_url": "https://api.github.com/users/jgsogo/followers", "following_url": "https://api.github.com/users/jgsogo/following{/other_user}", "gists_url": "https://api.github.com/users/jgsogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgsogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgsogo/subscriptions", "organizations_url": "https://api.github.com/users/jgsogo/orgs", "repos_url": "https://api.github.com/users/jgsogo/repos", "events_url": "https://api.github.com/users/jgsogo/events{/privacy}", "received_events_url": "https://api.github.com/users/jgsogo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-06-06T09:26:24Z", "updated_at": "2019-06-06T19:48:38Z", "closed_at": "2019-06-06T09:44:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, we recently found in our CI that in order to install `typed-ast` for python 3.4 in Windows we need a newer Microsoft Windows SDK (v 7.1). Is it intentional? Can it be reverted? Our main issue is not with our CI, sure we can install the new SDK, but with our users that can find the same error when installing our product.\r\n\r\nFull log [output](https://conan-ci.jfrog.info/blue/organizations/jenkins/ConanNightly/detail/ConanNightly/518/pipeline):\r\n\r\n```\r\n  Running setup.py install for typed-ast: started\r\n    Running setup.py install for typed-ast: finished with status 'error'\r\n    ERROR: Complete output from command 'd:\\j\\t\\9f6d\\py34\\disabled_revisions\\venv\\scripts\\python.exe' -u -c 'import setuptools, tokenize;__file__='\"'\"'C:\\\\Users\\\\Jenkins\\\\AppData\\\\Local\\\\Temp\\\\2\\\\pip-install-2jlu6nis\\\\typed-ast\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\Jenkins\\AppData\\Local\\Temp\\2\\pip-record-r0fif5f_\\install-record.txt' --single-version-externally-managed --compile --install-headers 'd:\\j\\t\\9f6d\\py34\\disabled_revisions\\venv\\include\\site\\python3.4\\typed-ast':\r\n    ERROR: running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win32-3.4\r\n    creating build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\ast27.py -> build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\ast3.py -> build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\conversions.py -> build\\lib.win32-3.4\\typed_ast\r\n    copying typed_ast\\__init__.py -> build\\lib.win32-3.4\\typed_ast\r\n    package init file 'ast3\\tests\\__init__.py' not found (or not a regular file)\r\n    creating build\\lib.win32-3.4\\typed_ast\\tests\r\n    copying ast3\\tests\\test_basics.py -> build\\lib.win32-3.4\\typed_ast\\tests\r\n    running build_ext\r\n    building '_ast27' extension\r\n    error: Microsoft Visual C++ 10.0 is required. Get it with \"Microsoft Windows SDK 7.1\": www.microsoft.com/download/details.aspx?id=8279\r\n```\r\n\r\nAs this is a transitive dependency of `astroid` lib I'm writing to them too.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/121", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/121/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/121/events", "html_url": "https://github.com/python/typed_ast/issues/121", "id": 452915877, "node_id": "MDU6SXNzdWU0NTI5MTU4Nzc=", "number": 121, "title": "MSVC 10.0 build failing for ast27/Python/ast.c", "user": {"login": "vladak", "id": 2934284, "node_id": "MDQ6VXNlcjI5MzQyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2934284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladak", "html_url": "https://github.com/vladak", "followers_url": "https://api.github.com/users/vladak/followers", "following_url": "https://api.github.com/users/vladak/following{/other_user}", "gists_url": "https://api.github.com/users/vladak/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladak/subscriptions", "organizations_url": "https://api.github.com/users/vladak/orgs", "repos_url": "https://api.github.com/users/vladak/repos", "events_url": "https://api.github.com/users/vladak/events{/privacy}", "received_events_url": "https://api.github.com/users/vladak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-06T09:07:25Z", "updated_at": "2019-07-24T02:18:09Z", "closed_at": "2019-06-06T15:41:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The MSVC 10.0 compilation of ast27/Python/ast.c seems to have started failing couple of days ago with:\r\n```\r\n c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\projects\\opengrok\\opengrok-tools\\target\\env\\include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Python/ast.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Python/ast.obj\r\n    ast.c\r\n    ast27/Python/ast.c(303) : error C2275: 'type_ignore_ty' : illegal use of this type as an expression\r\n            ast27/Include\\Python-ast.h(36) : see declaration of 'type_ignore_ty'\r\n    ast27/Python/ast.c(303) : error C2146: syntax error : missing ';' before identifier 'ti'\r\n    ast27/Python/ast.c(303) : error C2065: 'ti' : undeclared identifier\r\n    ast27/Python/ast.c(303) : warning C4047: '=' : 'int' differs in levels of indirection from 'type_ignore_ty'\r\n    ast27/Python/ast.c(304) : error C2065: 'ti' : undeclared identifier\r\n    ast27/Python/ast.c(306) : error C2065: 'ti' : undeclared identifier\r\n    ast27/Python/ast.c(306) : warning C4047: '=' : 'void *' differs in levels of indirection from 'int'\r\n    error: command 'c:\\\\Program Files (x86)\\\\Microsoft Visual Studio 10.0\\\\VC\\\\BIN\\\\cl.exe' failed with exit status 2\r\n```\r\n\r\nsee https://ci.appveyor.com/api/buildjobs/80p1fa1y6lompwt8/log for full log.\r\n\r\nI see a change has been made to the file via #116 some 2 days ago: https://github.com/python/typed_ast/blame/master/ast27/Python/ast.c#L300 and it looks like MSVC C compiler does not like variable declarations in the middle of a block. In this case it is the `type_ignore_ty ti` definition.\r\n\r\nThere have been some related fixups in the past like #47 so this seems to be just another case.\r\n\r\nSorry about not providing a fix, this is happening in our AppVeyor build; normally I don't have access to Windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/115", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/115/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/115/events", "html_url": "https://github.com/python/typed_ast/issues/115", "id": 447108511, "node_id": "MDU6SXNzdWU0NDcxMDg1MTE=", "number": 115, "title": "Source tar gz uses hyphen instead of underscore", "user": {"login": "Ultimation", "id": 873755, "node_id": "MDQ6VXNlcjg3Mzc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/873755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ultimation", "html_url": "https://github.com/Ultimation", "followers_url": "https://api.github.com/users/Ultimation/followers", "following_url": "https://api.github.com/users/Ultimation/following{/other_user}", "gists_url": "https://api.github.com/users/Ultimation/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ultimation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ultimation/subscriptions", "organizations_url": "https://api.github.com/users/Ultimation/orgs", "repos_url": "https://api.github.com/users/Ultimation/repos", "events_url": "https://api.github.com/users/Ultimation/events{/privacy}", "received_events_url": "https://api.github.com/users/Ultimation/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T12:31:18Z", "updated_at": "2019-06-04T21:47:51Z", "closed_at": "2019-06-04T21:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not consistent with all the other packages.\r\n\r\nhttps://pypi.org/project/typed-ast/#files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/113", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/113/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/113/events", "html_url": "https://github.com/python/typed_ast/issues/113", "id": 446269243, "node_id": "MDU6SXNzdWU0NDYyNjkyNDM=", "number": 113, "title": "Drop support for Python 3.4", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-20T19:17:37Z", "updated_at": "2019-05-20T19:32:00Z", "closed_at": "2019-05-20T19:32:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 3.4 has reached its EOL, so we can stop testing it on Travis-CI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/111", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/111/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/111/events", "html_url": "https://github.com/python/typed_ast/issues/111", "id": 445202015, "node_id": "MDU6SXNzdWU0NDUyMDIwMTU=", "number": 111, "title": "still doesn't build on pypy3 7.0", "user": {"login": "glyph", "id": 716529, "node_id": "MDQ6VXNlcjcxNjUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/716529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glyph", "html_url": "https://github.com/glyph", "followers_url": "https://api.github.com/users/glyph/followers", "following_url": "https://api.github.com/users/glyph/following{/other_user}", "gists_url": "https://api.github.com/users/glyph/gists{/gist_id}", "starred_url": "https://api.github.com/users/glyph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glyph/subscriptions", "organizations_url": "https://api.github.com/users/glyph/orgs", "repos_url": "https://api.github.com/users/glyph/repos", "events_url": "https://api.github.com/users/glyph/events{/privacy}", "received_events_url": "https://api.github.com/users/glyph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-16T23:34:59Z", "updated_at": "2019-05-21T00:46:26Z", "closed_at": "2019-05-21T00:46:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "following up from #97:\r\n\r\n\r\n```\r\nCollecting git+https://github.com/python/typed_ast\r\n  Cloning https://github.com/python/typed_ast to /private/var/folders/5z/sbg483yj7031bkxcptzpyh5w0000gn/T/pip-req-build-39y_vwx6\r\nBuilding wheels for collected packages: typed-ast\r\n  Running setup.py bdist_wheel for typed-ast ... error\r\n  Complete output from command /Users/glyph/.virtualenvs/tmp-57d83c9d1ed6ccb/bin/pypy3 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/5z/sbg483yj7031bkxcptzpyh5w0000gn/T/pip-req-build-39y_vwx6/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /private/var/folders/5z/sbg483yj7031bkxcptzpyh5w0000gn/T/pip-wheel-sxm1s6jn --python-tag pp370:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.macosx-10.14-x86_64-3.6\r\n  creating build/lib.macosx-10.14-x86_64-3.6/typed_ast\r\n  copying typed_ast/conversions.py -> build/lib.macosx-10.14-x86_64-3.6/typed_ast\r\n  copying typed_ast/__init__.py -> build/lib.macosx-10.14-x86_64-3.6/typed_ast\r\n  copying typed_ast/ast3.py -> build/lib.macosx-10.14-x86_64-3.6/typed_ast\r\n  copying typed_ast/ast27.py -> build/lib.macosx-10.14-x86_64-3.6/typed_ast\r\n  package init file 'ast3/tests/__init__.py' not found (or not a regular file)\r\n  creating build/lib.macosx-10.14-x86_64-3.6/typed_ast/tests\r\n  copying ast3/tests/test_basics.py -> build/lib.macosx-10.14-x86_64-3.6/typed_ast/tests\r\n  running build_ext\r\n  building '_ast27' extension\r\n  creating build/temp.macosx-10.14-x86_64-3.6\r\n  creating build/temp.macosx-10.14-x86_64-3.6/ast27\r\n  creating build/temp.macosx-10.14-x86_64-3.6/ast27/Parser\r\n  creating build/temp.macosx-10.14-x86_64-3.6/ast27/Python\r\n  creating build/temp.macosx-10.14-x86_64-3.6/ast27/Custom\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/acceler.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/acceler.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/bitset.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/bitset.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/grammar.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/grammar.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/grammar1.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/grammar1.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/node.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/node.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/parser.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/parser.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/parsetok.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/parsetok.o\r\n  gcc -pthread -arch x86_64 -DNDEBUG -O2 -fPIC -Iast27/Include -I/usr/local/Cellar/pypy3/7.0.0/libexec/include -c ast27/Parser/tokenizer.c -o build/temp.macosx-10.14-x86_64-3.6/ast27/Parser/tokenizer.o\r\n  ast27/Parser/tokenizer.c:17:10: fatal error: 'codecs.h' file not found\r\n  #include \"codecs.h\"\r\n           ^~~~~~~~~~\r\n  1 error generated.\r\n  error: command 'gcc' failed with exit status 1\r\n```\r\n\r\nIt looks like the inclusion of `codecs.h` was intended to be removed based on discussion on the previous issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/110", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/110/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/110/events", "html_url": "https://github.com/python/typed_ast/issues/110", "id": 445142824, "node_id": "MDU6SXNzdWU0NDUxNDI4MjQ=", "number": 110, "title": "ast27 reference to basestring breaks literal_eval", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-16T20:22:40Z", "updated_at": "2019-05-20T19:28:28Z", "closed_at": "2019-05-20T19:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following sinppet fails:\r\n\r\n```py\r\nfrom typed_ast import ast27\r\nast27.literal_eval(\"a\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/108", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/108/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/108/events", "html_url": "https://github.com/python/typed_ast/issues/108", "id": 444659744, "node_id": "MDU6SXNzdWU0NDQ2NTk3NDQ=", "number": 108, "title": "Fix compatibility with Python 3.8+", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-15T21:45:51Z", "updated_at": "2019-05-15T22:19:05Z", "closed_at": "2019-05-15T22:19:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, sdist build fails: https://travis-ci.com/aio-libs/multidict/jobs/200520595#L341-L368\r\n\r\nAnd it looks like it tries to build `_ast27` which (I assume) is related to Python 2.7. Why is it needed under Python 3?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/107", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/107/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/107/events", "html_url": "https://github.com/python/typed_ast/issues/107", "id": 443822100, "node_id": "MDU6SXNzdWU0NDM4MjIxMDA=", "number": 107, "title": "add typed_ast server", "user": {"login": "jgirardet", "id": 30120358, "node_id": "MDQ6VXNlcjMwMTIwMzU4", "avatar_url": "https://avatars3.githubusercontent.com/u/30120358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgirardet", "html_url": "https://github.com/jgirardet", "followers_url": "https://api.github.com/users/jgirardet/followers", "following_url": "https://api.github.com/users/jgirardet/following{/other_user}", "gists_url": "https://api.github.com/users/jgirardet/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgirardet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgirardet/subscriptions", "organizations_url": "https://api.github.com/users/jgirardet/orgs", "repos_url": "https://api.github.com/users/jgirardet/repos", "events_url": "https://api.github.com/users/jgirardet/events{/privacy}", "received_events_url": "https://api.github.com/users/jgirardet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-14T09:58:34Z", "updated_at": "2019-05-15T03:01:43Z", "closed_at": "2019-05-14T14:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have to use old python version but parse ast of newer python version.\r\nI was thinking to create a simple http server (ala blackd) under latest python version which would  deal with ast and return tree/node.\r\nThis should be a binary (for example using pyinstaller) to make it run without the latest python version installed.\r\nbefore I start it in my own, would you be interested to add it to typed_ast ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/106", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/106/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/106/events", "html_url": "https://github.com/python/typed_ast/issues/106", "id": 441935574, "node_id": "MDU6SXNzdWU0NDE5MzU1NzQ=", "number": 106, "title": "\"py36\" AST needed", "user": {"login": "ambv", "id": 55281, "node_id": "MDQ6VXNlcjU1Mjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/55281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambv", "html_url": "https://github.com/ambv", "followers_url": "https://api.github.com/users/ambv/followers", "following_url": "https://api.github.com/users/ambv/following{/other_user}", "gists_url": "https://api.github.com/users/ambv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambv/subscriptions", "organizations_url": "https://api.github.com/users/ambv/orgs", "repos_url": "https://api.github.com/users/ambv/repos", "events_url": "https://api.github.com/users/ambv/events{/privacy}", "received_events_url": "https://api.github.com/users/ambv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T21:16:17Z", "updated_at": "2019-05-08T21:32:03Z", "closed_at": "2019-05-08T21:32:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think because of async and await handling, typed_ast needs to grow a third AST option: `py36` for handling Python 3.0 - 3.6.\r\n\r\nRationale:\r\n- we need async and await as pseudo-keywords for handling 3.0 - 3.6 code with annotations and \"async\" and/or \"await\" names;\r\n- with LL(1) we need async and await as keywords for handling all 3.7+ cases of async generators and parens-less await expressions.\r\n\r\nThis should be easy to accomplish and maintain, \"py3\" requires no changes, \"py36\" would be what you had before merging changes from Python 3.7.\r\n\r\nIs there a different way in which the same compatibility is accomplished by, say, mypy?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/105", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/105/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/105/events", "html_url": "https://github.com/python/typed_ast/issues/105", "id": 438235727, "node_id": "MDU6SXNzdWU0MzgyMzU3Mjc=", "number": 105, "title": "Error installing pylint for python3.7 on cygwin", "user": {"login": "pjtallon", "id": 16851376, "node_id": "MDQ6VXNlcjE2ODUxMzc2", "avatar_url": "https://avatars0.githubusercontent.com/u/16851376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjtallon", "html_url": "https://github.com/pjtallon", "followers_url": "https://api.github.com/users/pjtallon/followers", "following_url": "https://api.github.com/users/pjtallon/following{/other_user}", "gists_url": "https://api.github.com/users/pjtallon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjtallon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjtallon/subscriptions", "organizations_url": "https://api.github.com/users/pjtallon/orgs", "repos_url": "https://api.github.com/users/pjtallon/repos", "events_url": "https://api.github.com/users/pjtallon/events{/privacy}", "received_events_url": "https://api.github.com/users/pjtallon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-29T09:56:29Z", "updated_at": "2019-04-30T15:25:43Z", "closed_at": "2019-04-30T15:25:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI had an issue that looked almost the same as https://github.com/python/typed_ast/issues/63 when trying to install pylint for python3.7 on cygwin.\r\n\r\nHere is the issue I originally opened to pylint : https://github.com/PyCQA/pylint/issues/2886\r\n\r\nAs additional information :\r\npjtallon@------- ~\r\n$ which gcc\r\n/usr/bin/gcc\r\n\r\npjtallon@------- ~\r\n$ gcc --version\r\ngcc (GCC) 7.4.0\r\n\r\nBest,\r\nJulien\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/103", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/103/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/103/events", "html_url": "https://github.com/python/typed_ast/issues/103", "id": 437850377, "node_id": "MDU6SXNzdWU0Mzc4NTAzNzc=", "number": 103, "title": "Segfaults on python 3.4/3.5 with non-ASCII identifiers", "user": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-04-26T21:20:43Z", "updated_at": "2019-04-28T20:22:48Z", "closed_at": "2019-04-28T20:22:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Running this program\r\n```\r\nimport typed_ast.ast3\r\nassert typed_ast.ast3.parse(\"top\u00ecc_name\").body[0].value.id == \"top\u00ecc_name\"\r\nassert typed_ast.ast3.parse(\"top\u00ecc_name\").body[0].value.id == \"top\u00ecc_name\"\r\n```\r\nconsistently dumps core on my Ubuntu 18.04 machine when run with 3.4 and 3.5. 3.6 and 3.7 are fine.\r\n\r\nDiscovered via https://github.com/zulip/zulip/pull/12139", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/102", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/102/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/102/events", "html_url": "https://github.com/python/typed_ast/issues/102", "id": 434708085, "node_id": "MDU6SXNzdWU0MzQ3MDgwODU=", "number": 102, "title": "missing wheels for windows", "user": {"login": "danielhrisca", "id": 20952040, "node_id": "MDQ6VXNlcjIwOTUyMDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20952040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhrisca", "html_url": "https://github.com/danielhrisca", "followers_url": "https://api.github.com/users/danielhrisca/followers", "following_url": "https://api.github.com/users/danielhrisca/following{/other_user}", "gists_url": "https://api.github.com/users/danielhrisca/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhrisca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhrisca/subscriptions", "organizations_url": "https://api.github.com/users/danielhrisca/orgs", "repos_url": "https://api.github.com/users/danielhrisca/repos", "events_url": "https://api.github.com/users/danielhrisca/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhrisca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-04-18T10:50:08Z", "updated_at": "2019-04-18T15:36:47Z", "closed_at": "2019-04-18T15:36:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are no Windows wheels for release 1.3.4 on PyPi \r\n\r\n![image](https://user-images.githubusercontent.com/20952040/56356212-d96eda00-61e0-11e9-8bc1-fd685507cd20.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/100", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/100/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/100/events", "html_url": "https://github.com/python/typed_ast/issues/100", "id": 433210191, "node_id": "MDU6SXNzdWU0MzMyMTAxOTE=", "number": 100, "title": ".travis.yml: The 'sudo' tag is now deprecated in Travis CI", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-15T10:35:45Z", "updated_at": "2019-05-15T23:14:26Z", "closed_at": "2019-05-15T23:14:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).\n\n\"_If you currently specify __sudo: false__ in your __.travis.yml__, we recommend removing that configuration_\" ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/97", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/97/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/97/events", "html_url": "https://github.com/python/typed_ast/issues/97", "id": 415733934, "node_id": "MDU6SXNzdWU0MTU3MzM5MzQ=", "number": 97, "title": "Fails to build on pypy 7.0 (stdlib 3.5) as pgenheaders.h doesn't exist in pypy", "user": {"login": "Russell-Jones-OxPhys", "id": 7836261, "node_id": "MDQ6VXNlcjc4MzYyNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7836261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Russell-Jones-OxPhys", "html_url": "https://github.com/Russell-Jones-OxPhys", "followers_url": "https://api.github.com/users/Russell-Jones-OxPhys/followers", "following_url": "https://api.github.com/users/Russell-Jones-OxPhys/following{/other_user}", "gists_url": "https://api.github.com/users/Russell-Jones-OxPhys/gists{/gist_id}", "starred_url": "https://api.github.com/users/Russell-Jones-OxPhys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Russell-Jones-OxPhys/subscriptions", "organizations_url": "https://api.github.com/users/Russell-Jones-OxPhys/orgs", "repos_url": "https://api.github.com/users/Russell-Jones-OxPhys/repos", "events_url": "https://api.github.com/users/Russell-Jones-OxPhys/events{/privacy}", "received_events_url": "https://api.github.com/users/Russell-Jones-OxPhys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-28T17:17:53Z", "updated_at": "2019-04-18T02:58:40Z", "closed_at": "2019-04-18T01:33:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this should be filed against typed_ast or pypy, as I can't find many references to pgenheaders.h and no documentation for it. Is this perhaps a situation similar to https://bitbucket.org/pypy/pypy/issues/2687/pypy3-is-missing-pystrhexh-breaking-pysha3 where it's a header file for an internal API?\r\n\r\n```\r\n(pypy3ve) user@host:/home/user/pypy3ve$ pypy3-c --version\r\nPython 3.5.3 (1f86f25937b6ae6c8b25236c35228fac587678bf, Feb 12 2019, 13:00:04)\r\n[PyPy 7.1.0-alpha0 with GCC 7.3.0]\r\n(pypy3ve) user@host:/home/user/pypy3ve$ pypy3-c -m pip install --upgrade typed_ast\r\nCollecting typed_ast\r\n  Using cached https://files.pythonhosted.org/packages/fc/c6/61d6410fc70fda073bd1810f9b7f7022f00146b108f278a0c00041bfe5b0/typed-ast-1.3.1.tar.gz\r\nBuilding wheels for collected packages: typed-ast\r\n  Building wheel for typed-ast (setup.py) ... error\r\n  Complete output from command /home/user/pypy3ve/bin/pypy3-c -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-usaqh1q6/typed-ast/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/pip-wheel-3s26ar_9 --python-tag pp371:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.5\r\n  creating build/lib.linux-x86_64-3.5/typed_ast\r\n  copying typed_ast/conversions.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n  copying typed_ast/ast27.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n  copying typed_ast/__init__.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n  copying typed_ast/ast3.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n  running build_ext\r\n  building '_ast27' extension\r\n  creating build/temp.linux-x86_64-3.5\r\n  creating build/temp.linux-x86_64-3.5/ast27\r\n  creating build/temp.linux-x86_64-3.5/ast27/Parser\r\n  creating build/temp.linux-x86_64-3.5/ast27/Python\r\n  creating build/temp.linux-x86_64-3.5/ast27/Custom\r\n  gcc -pthread -DNDEBUG -O2 -fPIC -Iast27/Include -I/home/user/pypy3ve/include -I/home/user/pypy3/include -c ast27/Parser/acceler.c -o build/temp.linux-x86_64-3.5/ast27/Parser/acceler.o\r\n  ast27/Parser/acceler.c:13:10: fatal error: pgenheaders.h: No such file or directory\r\n   #include \"pgenheaders.h\"\r\n            ^~~~~~~~~~~~~~~\r\n  compilation terminated.\r\n  error: command 'gcc' failed with exit status 1\r\n  \r\n  ----------------------------------------\r\n  Failed building wheel for typed-ast\r\n  Running setup.py clean for typed-ast\r\nFailed to build typed-ast\r\nInstalling collected packages: typed-ast\r\n  Running setup.py install for typed-ast ... error\r\n    Complete output from command /home/user/pypy3ve/bin/pypy3-c -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-usaqh1q6/typed-ast/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-drrzuuwb/install-record.txt --single-version-externally-managed --compile --install-headers /home/user/pypy3ve/include/site/python3.5/typed-ast:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.5\r\n    creating build/lib.linux-x86_64-3.5/typed_ast\r\n    copying typed_ast/conversions.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n    copying typed_ast/ast27.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n    copying typed_ast/__init__.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n    copying typed_ast/ast3.py -> build/lib.linux-x86_64-3.5/typed_ast\r\n    running build_ext\r\n    building '_ast27' extension\r\n    creating build/temp.linux-x86_64-3.5\r\n    creating build/temp.linux-x86_64-3.5/ast27\r\n    creating build/temp.linux-x86_64-3.5/ast27/Parser\r\n    creating build/temp.linux-x86_64-3.5/ast27/Python\r\n    creating build/temp.linux-x86_64-3.5/ast27/Custom\r\n    gcc -pthread -DNDEBUG -O2 -fPIC -Iast27/Include -I/home/user/pypy3ve/include -I/home/user/pypy3/include -c ast27/Parser/acceler.c -o build/temp.linux-x86_64-3.5/ast27/Parser/acceler.o\r\n    ast27/Parser/acceler.c:13:10: fatal error: pgenheaders.h: No such file or directory\r\n     #include \"pgenheaders.h\"\r\n              ^~~~~~~~~~~~~~~\r\n    compilation terminated.\r\n    error: command 'gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"/home/user/pypy3ve/bin/pypy3-c -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-usaqh1q6/typed-ast/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-drrzuuwb/install-record.txt --single-version-externally-managed --compile --install-headers /home/user/pypy3ve/include/site/python3.5/typed-ast\" failed with error code 1 in /tmp/pip-install-usaqh1q6/typed-ast/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/96", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/96/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/96/events", "html_url": "https://github.com/python/typed_ast/issues/96", "id": 415666645, "node_id": "MDU6SXNzdWU0MTU2NjY2NDU=", "number": 96, "title": "Version not matching - typed-ast", "user": {"login": "superdev810", "id": 20223963, "node_id": "MDQ6VXNlcjIwMjIzOTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/20223963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superdev810", "html_url": "https://github.com/superdev810", "followers_url": "https://api.github.com/users/superdev810/followers", "following_url": "https://api.github.com/users/superdev810/following{/other_user}", "gists_url": "https://api.github.com/users/superdev810/gists{/gist_id}", "starred_url": "https://api.github.com/users/superdev810/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superdev810/subscriptions", "organizations_url": "https://api.github.com/users/superdev810/orgs", "repos_url": "https://api.github.com/users/superdev810/repos", "events_url": "https://api.github.com/users/superdev810/events{/privacy}", "received_events_url": "https://api.github.com/users/superdev810/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-28T15:01:00Z", "updated_at": "2019-06-04T23:43:51Z", "closed_at": "2019-06-04T23:43:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--\r\n    NOTE: This issue should be for problems with PyPI itself, including:\r\n    * pypi.org\r\n    * test.pypi.org\r\n    * files.pythonhosted.org\r\n\r\n    This issue should NOT be for a project installed from PyPI. If you are\r\n    having an issue with a specific package, you should reach out to the\r\n    maintainers of that project directly instead.\r\n\r\n    Furthermore, this issue should NOT be for any non-PyPI properties (like\r\n    python.org, docs.python.org, etc.)\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description the bug -->\r\nI installed typed-ast 1.3.1 a few days without any issue, from today when installing it says typed-ast version not matching like following screenshot.\r\n![image](https://user-images.githubusercontent.com/20223963/53574349-2a882780-3bbb-11e9-942f-0595b3b61a0e.png)\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen -->\r\npipenv install should be installed correctly without issue.\r\n\r\n**To Reproduce**\r\n<!-- Steps to reproduce the bug, or a link to PyPI where the bug is visible -->\r\npipenv install typed-ast\r\n**My Platform**\r\n<!--\r\n    Any details about your specific platform:\r\n    * If the problem is in the browser, what browser, version, and OS?\r\n    * If the problem is with a command-line tool, what version of that tool?\r\n    * If the problem is with connecting to PyPI, include some details about\r\n      your network, including SSL/TLS implementation in use, internet service\r\n      provider, and if there are any firewalls or proxies in use.\r\n-->\r\nUbuntu 18.04\r\nPython3.6.7\r\nPi 19.0.3\r\nSSL/TLS implemented\r\n\r\n**Additional context**\r\n<!-- Add any other context, links, etc. about the feature here. -->\r\nMy Pipfile:\r\n```\r\n[[source]]\r\nurl = \"https://pypi.python.org/simple\"\r\nverify_ssl = true\r\n\r\n[dev-packages]\r\n\"autopep8\" = \"*\"\r\n\"gprof2dot\" = \"*\"\r\n\"pep8\" = \"*\"\r\n\"pyprof2calltree\" = \"*\"\r\n\"urllib3\" = \"*\"\r\nasynctest = \"*\"\r\nautoflake = \"*\"\r\nawscli = \"*\"\r\ncertifi = \"*\"\r\ncrayons = \"*\"\r\ncython = \"*\"\r\nipython = \"*\"\r\nisort = \"*\"\r\njsonschema = \"*\"\r\njupyter = \"*\"\r\nline-profiler = \"*\"\r\nmypy = \"*\"\r\npre-commit = \"*\"\r\nprogress = \"*\"\r\npydevd = \"*\"\r\npylint = \"*\"\r\npytest = \"==3.10.0\"\r\npytest-asyncio = \"==0.9.0\"\r\npytest-console-scripts = \"==0.1.7\"\r\npytest-cov = \"==2.6.0\"\r\npytest-docker = \"==0.6.1\"\r\npytest-mock = \"==1.10.0\"\r\npytest-profiling = \"*\"\r\npytest-pylint = \"*\"\r\npytest-sanic = \"*\"\r\npytest-timeout = \"*\"\r\npython-rapidjson = \"*\"\r\nrequests = \"*\"\r\nyapf = \"*\"\r\nfuncy = \"*\"\r\nvprof = \"*\"\r\n\r\n[packages]\r\naiodns = \"*\"\r\naiohttp = \"*\"\r\naredis = \"*\"\r\ncchardet = \"*\"\r\nconfigargparse = \"*\"\r\ncytoolz = \"*\"\r\nhiredis = \"*\"\r\npipenv = \"*\"\r\npygtrie = \"*\"\r\npython-json-logger = \"*\"\r\npython-rapidjson = \"*\"\r\nsanic = \"*\"\r\nstructlog = \"*\"\r\nujson = \"*\"\r\nuvloop = \"*\"\r\nwebsockets = \"*\"\r\nasync-timeout = \"*\"\r\ntyped-ast = \"*\"\r\n\r\n[requires]\r\npython_version = \"3.6\"\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/95", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/95/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/95/events", "html_url": "https://github.com/python/typed_ast/issues/95", "id": 408417732, "node_id": "MDU6SXNzdWU0MDg0MTc3MzI=", "number": 95, "title": "Build failure against Python 3.6 (adddfa function signature conflict)", "user": {"login": "ony", "id": 11265, "node_id": "MDQ6VXNlcjExMjY1", "avatar_url": "https://avatars3.githubusercontent.com/u/11265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ony", "html_url": "https://github.com/ony", "followers_url": "https://api.github.com/users/ony/followers", "following_url": "https://api.github.com/users/ony/following{/other_user}", "gists_url": "https://api.github.com/users/ony/gists{/gist_id}", "starred_url": "https://api.github.com/users/ony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ony/subscriptions", "organizations_url": "https://api.github.com/users/ony/orgs", "repos_url": "https://api.github.com/users/ony/repos", "events_url": "https://api.github.com/users/ony/events{/privacy}", "received_events_url": "https://api.github.com/users/ony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-09T10:10:32Z", "updated_at": "2019-02-09T10:34:29Z", "closed_at": "2019-02-09T10:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "v1.3.1 fails build for Python 3.6 using gcc 8.2.0:\r\n\r\n```\r\npushd /var/tmp/paludis/build/dev-python-typed-ast-1.3.1/work/PYTHON_ABIS/3.6/typed-ast-1.3.1\r\npython3.6 -B setup.py build\r\nrunning build\r\nrunning build_py\r\ncreating build\r\ncreating build/lib.linux-x86_64-3.6\r\ncreating build/lib.linux-x86_64-3.6/typed_ast\r\ncopying typed_ast/ast27.py -> build/lib.linux-x86_64-3.6/typed_ast\r\ncopying typed_ast/ast3.py -> build/lib.linux-x86_64-3.6/typed_ast\r\ncopying typed_ast/__init__.py -> build/lib.linux-x86_64-3.6/typed_ast\r\ncopying typed_ast/conversions.py -> build/lib.linux-x86_64-3.6/typed_ast\r\nrunning build_ext\r\nwarning: build_py: byte-compiling is disabled, skipping.\r\n\r\nbuilding '_ast27' extension\r\ncreating build/temp.linux-x86_64-3.6\r\ncreating build/temp.linux-x86_64-3.6/ast27\r\ncreating build/temp.linux-x86_64-3.6/ast27/Parser\r\ncreating build/temp.linux-x86_64-3.6/ast27/Python\r\ncreating build/temp.linux-x86_64-3.6/ast27/Custom\r\nx86_64-pc-linux-gnu-cc -DNDEBUG -fwrapv -I/usr/x86_64-pc-linux-gnu/include/python3.6m -pipe -march=native -mtune=native -O2 -fdiagnostics-color=always -fPIC -Iast27/Include -I/usr/include/python3.6m -c ast27/Parser/acceler.c -o build/temp.linux-x86_64-3.6/ast27/Parser/acceler.o\r\nast27/Parser/acceler.c: In function 'fixstate':\r\nast27/Parser/acceler.c:88:23: warning: implicit declaration of function 'Ta27Grammar_FindDFA'; did you mean 'PyGrammar_FindDFA'? [-Wimplicit-function-declaration]\r\n             dfa *d1 = Ta27Grammar_FindDFA(g, type);\r\n                       ^~~~~~~~~~~~~~~~~~~\r\n                       PyGrammar_FindDFA\r\nast27/Parser/acceler.c:88:23: warning: initialization of 'dfa *' {aka 'struct <anonymous> *'} from 'int' makes pointer from integer without a cast [-Wint-conversion]\r\nx86_64-pc-linux-gnu-cc -DNDEBUG -fwrapv -I/usr/x86_64-pc-linux-gnu/include/python3.6m -pipe -march=native -mtune=native -O2 -fdiagnostics-color=always -fPIC -Iast27/Include -I/usr/include/python3.6m -c ast27/Parser/bitset.c -o build/temp.linux-x86_64-3.6/ast27/Parser/bitset.o\r\nx86_64-pc-linux-gnu-cc -DNDEBUG -fwrapv -I/usr/x86_64-pc-linux-gnu/include/python3.6m -pipe -march=native -mtune=native -O2 -fdiagnostics-color=always -fPIC -Iast27/Include -I/usr/include/python3.6m -c ast27/Parser/grammar.c -o build/temp.linux-x86_64-3.6/ast27/Parser/grammar.o\r\nIn file included from ast27/Parser/grammar.c:5:\r\n/usr/x86_64-pc-linux-gnu/include/python3.6m/pgenheaders.h:19:16: error: conflicting types for '_Py_adddfa'\r\n #define adddfa _Py_adddfa\r\n                ^~~~~~~~~~\r\nast27/Parser/grammar.c:36:1: note: in expansion of macro 'adddfa'\r\n adddfa(grammar *g, int type, char *name)\r\n ^~~~~~\r\n/usr/x86_64-pc-linux-gnu/include/python3.6m/pgenheaders.h:19:16: note: previous declaration of '_Py_adddfa' was here\r\n #define adddfa _Py_adddfa\r\n                ^~~~~~~~~~\r\n/usr/x86_64-pc-linux-gnu/include/python3.6m/grammar.h:73:6: note: in expansion of macro 'adddfa'\r\n dfa *adddfa(grammar *g, int type, const char *name);\r\n      ^~~~~~\r\n```\r\n\r\nI don't see `pgenheaders.h` anywhere in source folder. I expect that it should be gneerated with entries like:\r\n```c\r\n #define adddfa _Py27_adddfa  /* ast27 */\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/88", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/88/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/88/events", "html_url": "https://github.com/python/typed_ast/issues/88", "id": 403614464, "node_id": "MDU6SXNzdWU0MDM2MTQ0NjQ=", "number": 88, "title": "Support end line and end column?", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-28T00:37:28Z", "updated_at": "2019-04-29T18:10:44Z", "closed_at": "2019-04-29T18:10:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Recently support for end line and end column of AST nodes was merged in Python 3.8. I think it would be great to support it in `typed_ast` (to have it on older Python versions too). If we agree this makes sense, then I can make a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/84", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/84/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/84/events", "html_url": "https://github.com/python/typed_ast/issues/84", "id": 402095414, "node_id": "MDU6SXNzdWU0MDIwOTU0MTQ=", "number": 84, "title": "rename the extension modules from toplevel _ast27 and _ast3 into the typed_ast namespace", "user": {"login": "keszybz", "id": 349618, "node_id": "MDQ6VXNlcjM0OTYxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/349618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keszybz", "html_url": "https://github.com/keszybz", "followers_url": "https://api.github.com/users/keszybz/followers", "following_url": "https://api.github.com/users/keszybz/following{/other_user}", "gists_url": "https://api.github.com/users/keszybz/gists{/gist_id}", "starred_url": "https://api.github.com/users/keszybz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keszybz/subscriptions", "organizations_url": "https://api.github.com/users/keszybz/orgs", "repos_url": "https://api.github.com/users/keszybz/repos", "events_url": "https://api.github.com/users/keszybz/events{/privacy}", "received_events_url": "https://api.github.com/users/keszybz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-23T06:50:20Z", "updated_at": "2019-01-24T06:59:29Z", "closed_at": "2019-01-23T22:57:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "That's nicer because:\r\n- the package is more self-contained after installation\r\n- the global namespace is less polluted and there's less chance of conflicts with other packages\r\n\r\nFollow-up for #18. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/81", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/81/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/81/events", "html_url": "https://github.com/python/typed_ast/issues/81", "id": 402067570, "node_id": "MDU6SXNzdWU0MDIwNjc1NzA=", "number": 81, "title": "Base version numbers on Python releases?", "user": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-23T04:34:58Z", "updated_at": "2019-04-28T22:36:03Z", "closed_at": "2019-04-28T22:36:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Since typed_ast is a fork of `ast`s from specific python versions, I think it would make sense to make the version numbers be tied to the Python release that it was forked from, with a minor version and a patch number appended.\r\n\r\nThis would make the upcoming release be `3.7.2.0.0` (which by PEP 440 can be abbreviated as `3.7.2`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/76", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/76/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/76/events", "html_url": "https://github.com/python/typed_ast/issues/76", "id": 400567365, "node_id": "MDU6SXNzdWU0MDA1NjczNjU=", "number": 76, "title": "await in function with type comment on new line causes SyntaxError", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-18T04:25:41Z", "updated_at": "2019-01-23T18:47:48Z", "closed_at": "2019-01-23T18:47:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I found this when trying to write tests. :-)\r\n\r\nThese all work:\r\n```\r\nasync def foo():\r\n    return await bar()\r\n\r\nasync def foo() -> int:\r\n    return await bar()\r\n\r\nasync def foo():\r\n    # comment\r\n    return await bar()\r\n\r\nasync def foo(): # type: () -> int\r\n    return await bar()\r\n\r\nasync def foo(): # type: () -> int\r\n    return 0\r\n```\r\nBut this gives a syntax error on the `await`:\r\n```\r\nasync def foo():\r\n    # type: () -> int\r\n    return await bar()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/74", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/74/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/74/events", "html_url": "https://github.com/python/typed_ast/issues/74", "id": 399661218, "node_id": "MDU6SXNzdWUzOTk2NjEyMTg=", "number": 74, "title": "Str.kind exists but Bytes.kind doesn't - what's the design here?", "user": {"login": "mbdevpl", "id": 1270332, "node_id": "MDQ6VXNlcjEyNzAzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1270332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbdevpl", "html_url": "https://github.com/mbdevpl", "followers_url": "https://api.github.com/users/mbdevpl/followers", "following_url": "https://api.github.com/users/mbdevpl/following{/other_user}", "gists_url": "https://api.github.com/users/mbdevpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbdevpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbdevpl/subscriptions", "organizations_url": "https://api.github.com/users/mbdevpl/orgs", "repos_url": "https://api.github.com/users/mbdevpl/repos", "events_url": "https://api.github.com/users/mbdevpl/events{/privacy}", "received_events_url": "https://api.github.com/users/mbdevpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T06:08:20Z", "updated_at": "2019-01-23T07:07:58Z", "closed_at": "2019-01-23T07:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if it's a bug, or a feature, but at least to me the following:\r\n\r\n>     - `Str` has a `kind` string field which preserves the original string\r\n>      prefix, so that `ast3.parse('u\"test\"').body[0].value.kind == 'u'`. \r\n\r\nfrom https://github.com/python/typed_ast/blob/master/typed_ast/ast3.py#L24 suggests that raw strings are also supported, and indeed they are. However, in case of raw bytes the prefix is lost. Is this by design?\r\n\r\nCurrently it's like this:\r\n\r\n```\r\nIn [1]: import typed_ast                                                                                 \r\n\r\nIn [2]: typed_ast.__version__                                                                            \r\nOut[2]: '1.2.0'\r\n\r\nIn [3]: from typed_ast.ast3 import parse, dump                                                           \r\n\r\nIn [4]: dump(parse('''r\"spam\"'''))                                                                       \r\nOut[4]: \"Module(body=[Expr(value=Str(s='spam', kind='r'))], type_ignores=[])\"\r\n\r\nIn [5]: dump(parse('''rb\"spam\"'''))                                                                      \r\nOut[5]: \"Module(body=[Expr(value=Bytes(s=b'spam'))], type_ignores=[])\"\r\n```\r\n\r\nPreserving the original prefix of string is useful for many reasons, same can be said about preserving the original bytes prefix, i.e. parsing `rb\"spam\"` into for example `Bytes(s=b'spam', kind='rb')`.\r\n\r\nHowever, as I'm not sure what was the reason behind adding that `kind` field to `Str`, I'm not sure if the same reason can be applied to `Bytes` as well. And by the way, is there any place where the choice of preserving `kind` at all is explained?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/66", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/66/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/66/events", "html_url": "https://github.com/python/typed_ast/issues/66", "id": 397069672, "node_id": "MDU6SXNzdWUzOTcwNjk2NzI=", "number": 66, "title": "conversions.py2to3 doesn't work if there are unicode strings", "user": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-08T20:18:15Z", "updated_at": "2019-01-09T00:42:27Z", "closed_at": "2019-01-09T00:42:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The `Str` case doesn't pass the second `kind` field introduced by #49, so it will crash", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/65", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/65/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/65/events", "html_url": "https://github.com/python/typed_ast/issues/65", "id": 384284073, "node_id": "MDU6SXNzdWUzODQyODQwNzM=", "number": 65, "title": "Issue with string length using Latin-1 encoding", "user": {"login": "Lucas-C", "id": 925560, "node_id": "MDQ6VXNlcjkyNTU2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/925560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucas-C", "html_url": "https://github.com/Lucas-C", "followers_url": "https://api.github.com/users/Lucas-C/followers", "following_url": "https://api.github.com/users/Lucas-C/following{/other_user}", "gists_url": "https://api.github.com/users/Lucas-C/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucas-C/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucas-C/subscriptions", "organizations_url": "https://api.github.com/users/Lucas-C/orgs", "repos_url": "https://api.github.com/users/Lucas-C/repos", "events_url": "https://api.github.com/users/Lucas-C/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucas-C/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-26T11:18:03Z", "updated_at": "2018-11-26T17:34:41Z", "closed_at": "2018-11-26T17:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nI'm working on a bug affecting `pylint`, which uses `astroid`, which uses `typed_ast`:\r\nhttps://github.com/PyCQA/pylint/issues/2610\r\n\r\nWhat troubles me is the `.col_offset` value of a `Str` node containing a non-ASCII character with Latin1 encoding.\r\n\r\nHere is a minimal code example:\r\n```\r\n# coding: latin_1\r\nfrom typed_ast import ast3\r\nprint(ast3.parse(\"'a'+'A'\").body[0].value.right.col_offset)  # print: 4\r\nprint(ast3.parse(\"'\u00e0'+'A'\").body[0].value.right.col_offset)  # print: 5\r\n```\r\n\r\nFrom my understanding a \"`\u00e9`\" character as a length of 1 in Latin-1:\r\nhttps://en.wikipedia.org/wiki/ISO/IEC_8859-1#Code_page_layout\r\n\r\nHence, could someone help me understanding why the `.col_offset` is higher in that case, please ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/64", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/64/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/64/events", "html_url": "https://github.com/python/typed_ast/issues/64", "id": 362952074, "node_id": "MDU6SXNzdWUzNjI5NTIwNzQ=", "number": 64, "title": "Inconsistent parsing of f-strings between typed_ast and the builtin ast ", "user": {"login": "PCManticore", "id": 448166, "node_id": "MDQ6VXNlcjQ0ODE2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/448166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PCManticore", "html_url": "https://github.com/PCManticore", "followers_url": "https://api.github.com/users/PCManticore/followers", "following_url": "https://api.github.com/users/PCManticore/following{/other_user}", "gists_url": "https://api.github.com/users/PCManticore/gists{/gist_id}", "starred_url": "https://api.github.com/users/PCManticore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PCManticore/subscriptions", "organizations_url": "https://api.github.com/users/PCManticore/orgs", "repos_url": "https://api.github.com/users/PCManticore/repos", "events_url": "https://api.github.com/users/PCManticore/events{/privacy}", "received_events_url": "https://api.github.com/users/PCManticore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-23T15:34:23Z", "updated_at": "2019-01-23T04:25:47Z", "closed_at": "2019-01-23T04:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey folks!\r\n\r\nI've noticed that `typed_ast` doesn't parse f-strings in the same way as the builtin `ast` module does. For instance in the following example, we only get a `FormattedValue` while the builtin `ast` module returns a `JoinedStr`:\r\n```\r\nimport typed_ast.ast3 as typed_ast\r\nimport ast\r\n\r\nf = typed_ast.parse(\"f'{a}'\")\r\nprint(f.body[0].value)\r\n\r\nf = ast.parse(\"f'{a}'\")\r\nprint(f.body[0].value)\r\n\r\n# going to print the following\r\n<_ast3.FormattedValue object at 0x1040a09e8>\r\n<_ast.JoinedStr object at 0x1040a0b00>\r\n```\r\n\r\nIt would be great to have the same output as the builtin ast module. They both return a `JoinedStr` if the variable interpolation element is followed by one or more characters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/63", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/63/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/63/events", "html_url": "https://github.com/python/typed_ast/issues/63", "id": 342345893, "node_id": "MDU6SXNzdWUzNDIzNDU4OTM=", "number": 63, "title": "typed-ast 1.1 adds new gcc requirement", "user": {"login": "eighthave", "id": 143465, "node_id": "MDQ6VXNlcjE0MzQ2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/143465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eighthave", "html_url": "https://github.com/eighthave", "followers_url": "https://api.github.com/users/eighthave/followers", "following_url": "https://api.github.com/users/eighthave/following{/other_user}", "gists_url": "https://api.github.com/users/eighthave/gists{/gist_id}", "starred_url": "https://api.github.com/users/eighthave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eighthave/subscriptions", "organizations_url": "https://api.github.com/users/eighthave/orgs", "repos_url": "https://api.github.com/users/eighthave/repos", "events_url": "https://api.github.com/users/eighthave/events{/privacy}", "received_events_url": "https://api.github.com/users/eighthave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-18T14:10:47Z", "updated_at": "2018-07-18T15:09:48Z", "closed_at": "2018-07-18T15:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use typed-ast indirectly via _pylint_ -> _asteroid_ -> _typed-ast_ for lightweight CI tests.  They run in a super minimal Alpine Linux setup to keep it fast and light.  Up until _typed-ast_ 1.1, it worked fine without _gcc_ installed.  With 1.1, it says _gcc_ is required.  It would be really useful to not enforce that again, like in 1.0.4.\r\n\r\nhttps://gitlab.com/eighthave/fdroidserver/-/jobs/82274815\r\n```\r\nInstalling collected packages: pycodestyle, pyflakes, mccabe, six, typed-ast, wrapt, lazy-object-proxy, astroid, isort, pylint, Click, chardet, certifi, urllib3, idna, requests, pyparsing, packaging, pyyaml, dparse, safety\r\n  Running setup.py install for typed-ast: started\r\n    Running setup.py install for typed-ast: finished with status 'error'\r\n    Complete output from command /usr/bin/python3.6 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-du7x283w/typed-ast/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-kpm5idph-record/install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.6\r\n    creating build/lib.linux-x86_64-3.6/typed_ast\r\n    copying typed_ast/ast3.py -> build/lib.linux-x86_64-3.6/typed_ast\r\n    copying typed_ast/ast27.py -> build/lib.linux-x86_64-3.6/typed_ast\r\n    copying typed_ast/__init__.py -> build/lib.linux-x86_64-3.6/typed_ast\r\n    copying typed_ast/conversions.py -> build/lib.linux-x86_64-3.6/typed_ast\r\n    running build_ext\r\n    building '_ast27' extension\r\n    creating build/temp.linux-x86_64-3.6\r\n    creating build/temp.linux-x86_64-3.6/ast27\r\n    creating build/temp.linux-x86_64-3.6/ast27/Parser\r\n    creating build/temp.linux-x86_64-3.6/ast27/Python\r\n    creating build/temp.linux-x86_64-3.6/ast27/Custom\r\n    gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -Os -fomit-frame-pointer -g -Os -fomit-frame-pointer -g -Os -fomit-frame-pointer -g -DTHREAD_STACK_SIZE=0x100000 -fPIC -Iast27/Include -I/usr/include/python3.6m -c ast27/Parser/acceler.c -o build/temp.linux-x86_64-3.6/ast27/Parser/acceler.o\r\n    unable to execute 'gcc': No such file or directory\r\n    error: command 'gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"/usr/bin/python3.6 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-du7x283w/typed-ast/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-kpm5idph-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-du7x283w/typed-ast/\r\nYou are using pip version 9.0.1, however version 10.0.1 is available.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/62", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/62/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/62/events", "html_url": "https://github.com/python/typed_ast/issues/62", "id": 341506161, "node_id": "MDU6SXNzdWUzNDE1MDYxNjE=", "number": 62, "title": "Misplaced type annotation when \"type:\" appears anywhere in a comment", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-16T12:52:16Z", "updated_at": "2018-07-16T21:01:10Z", "closed_at": "2018-07-16T20:26:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I originally opened https://github.com/PyCQA/pylint/issues/2299 but it looks like this belongs here. I'm not sure how much of this is actually intended (or in some PEP), vs. what's actually how things are implemented in typed-ast, though.\r\n\r\nI have some comments like those which raise a syntax error:\r\n\r\n```python\r\n# The Mozilla Developer Network says:\r\n# type: This attribute defines the styling language as a MIME type\r\n# (charset should not be specified). This attribute is optional and\r\n# default to text/css if it's missing.\r\n# https://developer.mozilla.org/en/docs/Web/HTML/Element/style\r\n```\r\n\r\n```python\r\n# At least in init(), we can get errors like this:\r\n# type: ConnectionError\r\n# database text: out of memory\r\n# driver text: Error opening database\r\n# error code: -1\r\n```\r\n\r\ni.e. `type:` just happens to appear in those comments without actually being type comments. Unfortunately, even indenting those lines (`#     type: ConnectionError`) or adding some other text before it (`# > type: ConnectionError`) still makes it fail.\r\n\r\nNot sure what the best solution here is, though - it seems to me that at least, only `# type: ...` should actually name a type, but not `# some other stuff type: ...`, no?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/60", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/60/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/60/events", "html_url": "https://github.com/python/typed_ast/issues/60", "id": 316643658, "node_id": "MDU6SXNzdWUzMTY2NDM2NTg=", "number": 60, "title": "Support 3.7", "user": {"login": "Mattwmaster58", "id": 26337069, "node_id": "MDQ6VXNlcjI2MzM3MDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/26337069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mattwmaster58", "html_url": "https://github.com/Mattwmaster58", "followers_url": "https://api.github.com/users/Mattwmaster58/followers", "following_url": "https://api.github.com/users/Mattwmaster58/following{/other_user}", "gists_url": "https://api.github.com/users/Mattwmaster58/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mattwmaster58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mattwmaster58/subscriptions", "organizations_url": "https://api.github.com/users/Mattwmaster58/orgs", "repos_url": "https://api.github.com/users/Mattwmaster58/repos", "events_url": "https://api.github.com/users/Mattwmaster58/events{/privacy}", "received_events_url": "https://api.github.com/users/Mattwmaster58/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 22, "created_at": "2018-04-23T02:46:08Z", "updated_at": "2019-01-23T04:29:09Z", "closed_at": "2019-01-23T04:29:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently python 3.7 is unsupported. Is it to early to introduce support right now? @ethanhs seems to be making progress, not sure if it's stable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/59", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/59/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/59/events", "html_url": "https://github.com/python/typed_ast/issues/59", "id": 264999362, "node_id": "MDU6SXNzdWUyNjQ5OTkzNjI=", "number": 59, "title": "Misplaced type annotations should be a warning or list", "user": {"login": "Wilfred", "id": 70800, "node_id": "MDQ6VXNlcjcwODAw", "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wilfred", "html_url": "https://github.com/Wilfred", "followers_url": "https://api.github.com/users/Wilfred/followers", "following_url": "https://api.github.com/users/Wilfred/following{/other_user}", "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions", "organizations_url": "https://api.github.com/users/Wilfred/orgs", "repos_url": "https://api.github.com/users/Wilfred/repos", "events_url": "https://api.github.com/users/Wilfred/events{/privacy}", "received_events_url": "https://api.github.com/users/Wilfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-12T16:06:59Z", "updated_at": "2019-04-28T23:15:44Z", "closed_at": "2019-04-28T23:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the Python code:\r\n\r\n```python\r\ndef wrong1():\r\n    \"A docstring.\"\r\n    # type: () -> int\r\n    return 42\r\n\r\n\r\ndef wrong2():\r\n    \"A docstring.\"\r\n    # type: () -> int\r\n    return 42\r\n```\r\n\r\ntyped_ast raises a `SyntaxError` on the first misplaced comment:\r\n\r\n```\r\nIn [8]: ast27.parse(\"\"\"def wrong1():\r\n   ...:     \"A docstring.\"\r\n   ...:     # type: () -> int\r\n   ...:     return 42\r\n   ...:\r\n   ...:\r\n   ...: def wrong2():\r\n   ...:     \"A docstring.\"\r\n   ...:     # type: () -> int\r\n   ...:     return 42\r\n   ...: \"\"\")\r\nTraceback (most recent call last):\r\n\r\n  File \"/users/wilfred/.conda/envs/ast_scratch/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n\r\n  File \"<ipython-input-8-ebf02dacb9b0>\", line 11, in <module>\r\n    \"\"\")\r\n\r\n  File \"/users/wilfred/.conda/envs/ast_scratch/lib/python3.6/site-packages/typed_ast/ast27.py\", line 51, in parse\r\n    return _ast27.parse(source, filename, mode)\r\n\r\n  File \"<unknown>\", line 3\r\n    # type: () -> int\r\n                    ^\r\nSyntaxError: misplaced type annotation\r\n```\r\n\r\nThis means that it's not possible to get a list of all the misplaced type annotations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/58", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/58/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/58/events", "html_url": "https://github.com/python/typed_ast/issues/58", "id": 260499002, "node_id": "MDU6SXNzdWUyNjA0OTkwMDI=", "number": 58, "title": "SyntaxError when parsing per-argument type comments with comma on the next line", "user": {"login": "mbdevpl", "id": 1270332, "node_id": "MDQ6VXNlcjEyNzAzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1270332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbdevpl", "html_url": "https://github.com/mbdevpl", "followers_url": "https://api.github.com/users/mbdevpl/followers", "following_url": "https://api.github.com/users/mbdevpl/following{/other_user}", "gists_url": "https://api.github.com/users/mbdevpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbdevpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbdevpl/subscriptions", "organizations_url": "https://api.github.com/users/mbdevpl/orgs", "repos_url": "https://api.github.com/users/mbdevpl/repos", "events_url": "https://api.github.com/users/mbdevpl/events{/privacy}", "received_events_url": "https://api.github.com/users/mbdevpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-26T05:52:26Z", "updated_at": "2017-09-27T00:58:03Z", "closed_at": "2017-09-26T15:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the PR adding per-argument type comment support https://github.com/python/typed_ast/pull/5 there is an unhandled case when comma for an argument is after the type comment, therefore the current version of `typed_ast` errors out on the following.\r\n\r\n```\r\nIn [1]: import inspect\r\n\r\nIn [2]: import typed_ast.ast3\r\n\r\nIn [3]: def lovely(spam  # type: bool\r\n   ...:         , eggs  # type: int\r\n   ...:         , ham  # type: str\r\n   ...:         ):\r\n   ...:     # type: (...) -> bool\r\n   ...:     return spam\r\n   ...: \r\n\r\nIn [4]: typed_ast.ast3.parse(inspect.getsource(lovely))\r\n  File \"<unknown>\", line 2\r\n    , eggs  # type: int\r\n    ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nAre there any plans to support this case?\r\n\r\n```\r\nIn [5]: import ast\r\n\r\nIn [6]: ast.parse(inspect.getsource(lovely))\r\nOut[6]: <_ast.Module at 0x7fb9584b84e0>\r\n```\r\n\r\nThe built-in `ast` succeeds, which seems to be in conflict with the [development philosophy](https://github.com/python/typed_ast#development-philosophy) of `typed_ast`.\r\n\r\n> This project is a drop-in replacement for the builtin ast module. It is intended to be bug-for-bug compatible and behave identically, except for the presence of a few additional fields on the returned classes and a few additional optional arguments to the parse call.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/56", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/56/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/56/events", "html_url": "https://github.com/python/typed_ast/issues/56", "id": 257922860, "node_id": "MDU6SXNzdWUyNTc5MjI4NjA=", "number": 56, "title": "Copy f-string line/col fix from CPython", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-09-15T04:14:04Z", "updated_at": "2019-01-23T04:28:08Z", "closed_at": "2019-01-23T04:28:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There's an issue with f-string line/column numbers which was reported for [mypy](https://github.com/python/mypy/issues/3562) but is actually an ast bug that also exists upstream. (We don't want to get in the business of fixing those independently from upstream.)\r\n\r\nIt's been fixed upstream in https://github.com/python/cpython/pull/1800 ([bpo-30465](https://bugs.python.org/issue30465)) so the fix should be incorporated here so we can eventually declare victory in mypy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/50", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/50/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/50/events", "html_url": "https://github.com/python/typed_ast/issues/50", "id": 252807703, "node_id": "MDU6SXNzdWUyNTI4MDc3MDM=", "number": 50, "title": "Expose more information about function line numbers", "user": {"login": "ethanhs", "id": 9504279, "node_id": "MDQ6VXNlcjk1MDQyNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanhs", "html_url": "https://github.com/ethanhs", "followers_url": "https://api.github.com/users/ethanhs/followers", "following_url": "https://api.github.com/users/ethanhs/following{/other_user}", "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions", "organizations_url": "https://api.github.com/users/ethanhs/orgs", "repos_url": "https://api.github.com/users/ethanhs/repos", "events_url": "https://api.github.com/users/ethanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanhs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-25T06:15:08Z", "updated_at": "2019-04-29T00:47:54Z", "closed_at": "2019-04-29T00:47:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In hopes of solving https://github.com/python/mypy/issues/3871 we probably need to modify typed_ast to expose more information about function line numbers.\r\n\r\nIf the return type annotation of a function is absent, the `FunctionDef` node will have `returns` as `None`, which means mypy cannot get the line number of where the return type annotation should be. Additionally the actual `def` line number may be impossible to calculate based on given ast data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/46", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/46/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/46/events", "html_url": "https://github.com/python/typed_ast/issues/46", "id": 243195748, "node_id": "MDU6SXNzdWUyNDMxOTU3NDg=", "number": 46, "title": "The latest version 1.0.4 installation fails under Python 3.4 in Windows", "user": {"login": "webknjaz", "id": 578543, "node_id": "MDQ6VXNlcjU3ODU0Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/578543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webknjaz", "html_url": "https://github.com/webknjaz", "followers_url": "https://api.github.com/users/webknjaz/followers", "following_url": "https://api.github.com/users/webknjaz/following{/other_user}", "gists_url": "https://api.github.com/users/webknjaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webknjaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webknjaz/subscriptions", "organizations_url": "https://api.github.com/users/webknjaz/orgs", "repos_url": "https://api.github.com/users/webknjaz/repos", "events_url": "https://api.github.com/users/webknjaz/events{/privacy}", "received_events_url": "https://api.github.com/users/webknjaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-07-15T19:40:22Z", "updated_at": "2017-08-25T11:49:49Z", "closed_at": "2017-07-15T20:20:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See this Appveyor build: https://ci.appveyor.com/project/asvetlov/multidict/build/1.0.0a0.dev477/job/isj75vxav52hwf3j#L262", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/36", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/36/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/36/events", "html_url": "https://github.com/python/typed_ast/issues/36", "id": 218626147, "node_id": "MDU6SXNzdWUyMTg2MjYxNDc=", "number": 36, "title": "Uninitialized memory read related to type_comment for *args or **kwds", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ddfisher", "id": 245905, "node_id": "MDQ6VXNlcjI0NTkwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddfisher", "html_url": "https://github.com/ddfisher", "followers_url": "https://api.github.com/users/ddfisher/followers", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "repos_url": "https://api.github.com/users/ddfisher/repos", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ddfisher", "id": 245905, "node_id": "MDQ6VXNlcjI0NTkwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddfisher", "html_url": "https://github.com/ddfisher", "followers_url": "https://api.github.com/users/ddfisher/followers", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "repos_url": "https://api.github.com/users/ddfisher/repos", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-03-31T21:52:11Z", "updated_at": "2017-04-08T20:59:21Z", "closed_at": "2017-04-08T20:58:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I believe I've found a very shy error due to an uninitialized memory read in typed_ast.\r\n\r\nThe repro conditions are murky, it only works on a particular rev of a particular codebase. The problem manifests itself in one of two ways:\r\n\r\n- `SystemError: <built-in function _parse> returned a result with an error set` with a traceback ending at line 54 in ast3.py; I suspect it is getting the type_comment from a struct that doesn't have that field and reading nonsense. (Most of the time the memory was freshly allocated and the nonsense happens to look like a NULL pointer which then gets treated as intended, but apparently in some scenarios it returns non-NULL garbage.)\r\n\r\n- `Function has duplicate type signatures` from make_argument() in transform_args() in mypy/fastparse.py; this for a line that is actually correct; so far all examples I've seen involve `*args` and I suspect the true cause is a similar scenario as the first bullet, a non-NULL piece of garbage.\r\n\r\nISTR we fixed a similar issue in the past.\r\n\r\nI will investigate more next week.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/35", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/35/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/35/events", "html_url": "https://github.com/python/typed_ast/issues/35", "id": 217619642, "node_id": "MDU6SXNzdWUyMTc2MTk2NDI=", "number": 35, "title": "mypy --fast-parser error even when dependency is satisfied?", "user": {"login": "Integralist", "id": 180050, "node_id": "MDQ6VXNlcjE4MDA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/180050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Integralist", "html_url": "https://github.com/Integralist", "followers_url": "https://api.github.com/users/Integralist/followers", "following_url": "https://api.github.com/users/Integralist/following{/other_user}", "gists_url": "https://api.github.com/users/Integralist/gists{/gist_id}", "starred_url": "https://api.github.com/users/Integralist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Integralist/subscriptions", "organizations_url": "https://api.github.com/users/Integralist/orgs", "repos_url": "https://api.github.com/users/Integralist/repos", "events_url": "https://api.github.com/users/Integralist/events{/privacy}", "received_events_url": "https://api.github.com/users/Integralist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-28T16:33:41Z", "updated_at": "2017-03-28T17:04:53Z", "closed_at": "2017-03-28T16:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following `Dockerfile`:\r\n\r\n```Dockerfile\r\nFROM python:3.6.1\r\n\r\nWORKDIR /tmp\r\n\r\nRUN apt-get update -y\r\nRUN apt-get install -y git\r\nRUN git clone https://github.com/vim/vim.git && cd vim && ./configure && apt install ncurses-dev && make && make install\r\nRUN vim --version | head -n 1\r\n\r\nADD ./requirements.txt /app/requirements.txt\r\nRUN pip install -r /app/requirements.txt\r\n\r\nCOPY .vim /root/.vim\r\nCOPY .vimrc /root/.vimrc\r\n\r\nWORKDIR /app\r\n```\r\n\r\nHere is my requirements file:\r\n\r\n```text\r\nflake8==3.2.1\r\nflake8-deprecated==1.1\r\nflake8-docstrings==1.0.3\r\nflake8-mock==0.3\r\nflake8-quotes==0.9.0\r\nmypy==0.470\r\npep8-naming==0.4.1\r\npylint==1.6.4\r\npytest==3.0.5\r\n```\r\n\r\nWhen I open a Python file inside the container I see the message:\r\n\r\n```\r\nYou must install the typed_ast package before you can run mypy with `--fast-parser`.\r\nYou can do this with `python3 -m pip install typed-ast`.\r\n```\r\n\r\nBut if I install that as suggested I see:\r\n\r\n```\r\nRequirement already satisfied: typed-ast in /usr/local/lib/python3.6/site-packages\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/34", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/34/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/34/events", "html_url": "https://github.com/python/typed_ast/issues/34", "id": 214091307, "node_id": "MDU6SXNzdWUyMTQwOTEzMDc=", "number": 34, "title": "parsing f-strings -- opening brace gets duplicated when backslash is followed by an expression", "user": {"login": "mbdevpl", "id": 1270332, "node_id": "MDQ6VXNlcjEyNzAzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1270332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbdevpl", "html_url": "https://github.com/mbdevpl", "followers_url": "https://api.github.com/users/mbdevpl/followers", "following_url": "https://api.github.com/users/mbdevpl/following{/other_user}", "gists_url": "https://api.github.com/users/mbdevpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbdevpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbdevpl/subscriptions", "organizations_url": "https://api.github.com/users/mbdevpl/orgs", "repos_url": "https://api.github.com/users/mbdevpl/repos", "events_url": "https://api.github.com/users/mbdevpl/events{/privacy}", "received_events_url": "https://api.github.com/users/mbdevpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-14T14:33:35Z", "updated_at": "2017-03-15T16:26:27Z", "closed_at": "2017-03-14T19:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "with Python 3.6.0 and typed-ast 1.0.2, I get the following:\r\n\r\n```\r\n#!/usr/bin/env python3.6\r\n\r\nimport typed_ast.ast3 as ast\r\n\r\ncode1 = '''\"\\\\{x}\"'''\r\ncode2 = '''f\"\\\\{x}\"'''\r\n\r\ntree1 = ast.parse(code1, mode='eval')\r\nprint(ast.dump(tree1))\r\ntree2 = ast.parse(code2, mode='eval')\r\nprint(ast.dump(tree2))\r\n```\r\n\r\noutput:\r\n\r\n```\r\nExpression(body=Str(s='\\\\{x}'))\r\nExpression(body=JoinedStr(values=[Str(s='\\\\{'), FormattedValue(value=Name(id='x', ctx=Load()), conversion=-1, format_spec=None)]))\r\n```\r\n\r\nTherefore, the normal string is `'\\\\{x}'`.\r\nBut the f-string has two parts: `'\\\\{'` and an expression `Name(id='x', ctx=Load())`.\r\n\r\nWhere does the `{` in the string part of f-string come from? This happens also with built-in ast. I can't believe this is the intended behavior... Is it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/31", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/31/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/31/events", "html_url": "https://github.com/python/typed_ast/issues/31", "id": 208232424, "node_id": "MDU6SXNzdWUyMDgyMzI0MjQ=", "number": 31, "title": "mypy --fast-parser option broken with 1.0.0", "user": {"login": "sseg", "id": 7399139, "node_id": "MDQ6VXNlcjczOTkxMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7399139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sseg", "html_url": "https://github.com/sseg", "followers_url": "https://api.github.com/users/sseg/followers", "following_url": "https://api.github.com/users/sseg/following{/other_user}", "gists_url": "https://api.github.com/users/sseg/gists{/gist_id}", "starred_url": "https://api.github.com/users/sseg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sseg/subscriptions", "organizations_url": "https://api.github.com/users/sseg/orgs", "repos_url": "https://api.github.com/users/sseg/repos", "events_url": "https://api.github.com/users/sseg/events{/privacy}", "received_events_url": "https://api.github.com/users/sseg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-16T20:12:33Z", "updated_at": "2017-02-18T15:49:59Z", "closed_at": "2017-02-17T11:40:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running in a Python 3.6.0 virtual environment, running mypy with --fast-parser option does not work with typed-ast==1.0.0:\r\n```\r\n$ pip freeze | grep 'mypy\\|typed-ast'\r\nmypy-lang==0.4.6\r\ntyped-ast==1.0.0\r\n\r\n$ mypy --fast-parser .\r\nYou must install the typed_ast package before you can run mypy with `--fast-parser`.\r\nYou can do this with `python3 -m pip install typed-ast`.\r\n```\r\n\r\nThe same run works with typed-ast==0.6.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/30", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/30/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/30/events", "html_url": "https://github.com/python/typed_ast/issues/30", "id": 208099187, "node_id": "MDU6SXNzdWUyMDgwOTkxODc=", "number": 30, "title": "Segfault on f-string in ast3", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-16T11:48:09Z", "updated_at": "2017-02-17T11:36:04Z", "closed_at": "2017-02-17T11:36:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This happens:\r\n```\r\nPython 3.5.1 |Anaconda custom (x86_64)| (default, Dec  7 2015, 11:24:55) \r\n[GCC 4.2.1 (Apple Inc. build 5577)] on darwin\r\n\r\n>>> from typed_ast import ast3\r\n>>> ast3.parse(\"x = f'Hi {x}'\")\r\nSegmentation fault: 11\r\n```\r\nUnfortunately, I could not test this on other versions of Python now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/29", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/29/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/29/events", "html_url": "https://github.com/python/typed_ast/issues/29", "id": 204412660, "node_id": "MDU6SXNzdWUyMDQ0MTI2NjA=", "number": 29, "title": "Add ast36", "user": {"login": "telendt", "id": 85191, "node_id": "MDQ6VXNlcjg1MTkx", "avatar_url": "https://avatars2.githubusercontent.com/u/85191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/telendt", "html_url": "https://github.com/telendt", "followers_url": "https://api.github.com/users/telendt/followers", "following_url": "https://api.github.com/users/telendt/following{/other_user}", "gists_url": "https://api.github.com/users/telendt/gists{/gist_id}", "starred_url": "https://api.github.com/users/telendt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/telendt/subscriptions", "organizations_url": "https://api.github.com/users/telendt/orgs", "repos_url": "https://api.github.com/users/telendt/repos", "events_url": "https://api.github.com/users/telendt/events{/privacy}", "received_events_url": "https://api.github.com/users/telendt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-31T20:20:27Z", "updated_at": "2017-02-13T00:40:42Z", "closed_at": "2017-02-13T00:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just tried `mypy --fast-parser --python-version 3.6` on code that utilizes some new Python 3.6 features and it failed.\r\n\r\nBreaking features:\r\n* formatted string literals, [PEP 498](https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep498) -- `error: invalid syntax`\r\n* asynchronous generators, [PEP 525](https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep525) -- `error: 'yield' in async function`\r\n* asynchronous comprehensions, [PEP 530](https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-pep530) -- `error: invalid syntax`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/27", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/27/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/27/events", "html_url": "https://github.com/python/typed_ast/issues/27", "id": 202284689, "node_id": "MDU6SXNzdWUyMDIyODQ2ODk=", "number": 27, "title": "No type comments on AsyncWith/AsyncFor?", "user": {"login": "afrieder", "id": 8473729, "node_id": "MDQ6VXNlcjg0NzM3Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8473729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afrieder", "html_url": "https://github.com/afrieder", "followers_url": "https://api.github.com/users/afrieder/followers", "following_url": "https://api.github.com/users/afrieder/following{/other_user}", "gists_url": "https://api.github.com/users/afrieder/gists{/gist_id}", "starred_url": "https://api.github.com/users/afrieder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afrieder/subscriptions", "organizations_url": "https://api.github.com/users/afrieder/orgs", "repos_url": "https://api.github.com/users/afrieder/repos", "events_url": "https://api.github.com/users/afrieder/events{/privacy}", "received_events_url": "https://api.github.com/users/afrieder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-21T02:29:53Z", "updated_at": "2017-02-13T00:42:24Z", "closed_at": "2017-02-13T00:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "From Python.asdl in ast35:\r\n\r\n`For(expr target, expr iter, stmt* body, stmt* orelse, string? type_comment)`\r\n`With(withitem* items, stmt* body, string? type_comment)`\r\nbut\r\n`AsyncFor(expr target, expr iter, stmt* body, stmt* orelse)`\r\n`AsyncWith(withitem* items, stmt* body)`\r\n\r\nI don't believe there's anything against using type comments in async withs/fors, and this limits how MyPy can analyze them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/26", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/26/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/26/events", "html_url": "https://github.com/python/typed_ast/issues/26", "id": 202276945, "node_id": "MDU6SXNzdWUyMDIyNzY5NDU=", "number": 26, "title": "Parse error for Long octal literals in ast27", "user": {"login": "ddfisher", "id": 245905, "node_id": "MDQ6VXNlcjI0NTkwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddfisher", "html_url": "https://github.com/ddfisher", "followers_url": "https://api.github.com/users/ddfisher/followers", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "repos_url": "https://api.github.com/users/ddfisher/repos", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-21T00:50:19Z", "updated_at": "2017-01-27T15:58:28Z", "closed_at": "2017-01-27T15:58:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`01L` is a perfectly valid Python 2 long literal, but for some reason ast27 refuses to parse it and instead gives `ValueError: invalid literal for int() with base 0: '01'`.  `01` and `1L` both work fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/25", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/25/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/25/events", "html_url": "https://github.com/python/typed_ast/issues/25", "id": 200589408, "node_id": "MDU6SXNzdWUyMDA1ODk0MDg=", "number": 25, "title": "any way of turning an AST instance back into Python source code?", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-13T09:56:20Z", "updated_at": "2017-01-13T10:05:13Z", "closed_at": "2017-01-13T10:03:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/24", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/24/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/24/events", "html_url": "https://github.com/python/typed_ast/issues/24", "id": 199411556, "node_id": "MDU6SXNzdWUxOTk0MTE1NTY=", "number": 24, "title": "Fails to build with Visual Studio 2010", "user": {"login": "ethanhs", "id": 9504279, "node_id": "MDQ6VXNlcjk1MDQyNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9504279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethanhs", "html_url": "https://github.com/ethanhs", "followers_url": "https://api.github.com/users/ethanhs/followers", "following_url": "https://api.github.com/users/ethanhs/following{/other_user}", "gists_url": "https://api.github.com/users/ethanhs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethanhs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethanhs/subscriptions", "organizations_url": "https://api.github.com/users/ethanhs/orgs", "repos_url": "https://api.github.com/users/ethanhs/repos", "events_url": "https://api.github.com/users/ethanhs/events{/privacy}", "received_events_url": "https://api.github.com/users/ethanhs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-08T08:59:57Z", "updated_at": "2017-09-01T20:39:51Z", "closed_at": "2017-02-13T04:39:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was working on appveyor builds of mypy, and when I initially tested Python 3.3 and 3.4, which use the older Visual Studio 2010 compiler, compilation failed. It'd be great if typed_ast were to compile for Python 3.3 and 3.4 on Windows\r\n\r\nhere is the log:\r\n```shell\r\n$ py -3.4 setup.py install\r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\nwriting top-level names to typed_ast.egg-info\\top_level.txt\r\nwriting typed_ast.egg-info\\PKG-INFO\r\nwriting dependency_links to typed_ast.egg-info\\dependency_links.txt\r\nreading manifest file 'typed_ast.egg-info\\SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'typed_ast.egg-info\\SOURCES.txt'\r\ninstalling library code to build\\bdist.win32\\egg\r\nrunning install_lib\r\nrunning build_py\r\nrunning build_ext\r\nbuilding '_ast27' extension\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/acceler.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/acceler.obj\r\nacceler.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/bitset.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/bitset.obj\r\nbitset.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/grammar.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/grammar.obj\r\ngrammar.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/grammar1.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/grammar1.obj\r\ngrammar1.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/node.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/node.obj\r\nnode.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/parser.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/parser.obj\r\nparser.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/parsetok.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/parsetok.obj\r\nparsetok.c\r\nc:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Iast27/Include -IC:\\Python34\\include -IC:\\Python34\\include /Tcast27/Parser/tokenizer.c /Fobuild\\temp.win32-3.4\\Release\\ast27/Parser/tokenizer.obj\r\ntokenizer.c\r\nast27/Parser/tokenizer.c(1380) : error C2143: syntax error : missing ';' before 'const'\r\nast27/Parser/tokenizer.c(1381) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1381) : warning C4047: '=' : 'int' differs in levels of indirection from 'char *'\r\nast27/Parser/tokenizer.c(1382) : error C2065: 'prefix' : undeclared identifier\r\nast27/Parser/tokenizer.c(1382) : warning C4047: '=' : 'int' differs in levels of indirection from 'const char *'\r\nast27/Parser/tokenizer.c(1383) : error C2065: 'prefix' : undeclared identifier\r\nast27/Parser/tokenizer.c(1383) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1383) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1383) : warning C4047: '<' : 'int' differs in levels of indirection from 'char *'\r\nast27/Parser/tokenizer.c(1384) : error C2065: 'prefix' : undeclared identifier\r\nast27/Parser/tokenizer.c(1384) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1385) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1385) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1385) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1385) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1386) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1387) : error C2065: 'prefix' : undeclared identifier\r\nast27/Parser/tokenizer.c(1387) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1387) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1387) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1388) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1393) : error C2065: 'prefix' : undeclared identifier\r\nast27/Parser/tokenizer.c(1397) : error C2065: 'prefix' : undeclared identifier\r\nast27/Parser/tokenizer.c(1397) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1401) : error C2065: 'type_start' : undeclared identifier\r\nast27/Parser/tokenizer.c(1401) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1403) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1403) : warning C4047: '>=' : 'char *' differs in levels of indirection from 'int'\r\nast27/Parser/tokenizer.c(1403) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1403) : warning C4022: 'memcmp' : pointer mismatch for actual parameter 1\r\nast27/Parser/tokenizer.c(1404) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1405) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1405) : warning C4047: '<' : 'int' differs in levels of indirection from 'char *'\r\nast27/Parser/tokenizer.c(1406) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1406) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1408) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1408) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1408) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1408) : error C2100: illegal indirection\r\nast27/Parser/tokenizer.c(1409) : error C2065: 'p' : undeclared identifier\r\nast27/Parser/tokenizer.c(1420) : error C2065: 'type_start' : undeclared identifier\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/23", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/23/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/23/events", "html_url": "https://github.com/python/typed_ast/issues/23", "id": 197656213, "node_id": "MDU6SXNzdWUxOTc2NTYyMTM=", "number": 23, "title": "What's the point of inserting a space character in the dump before extra fields?", "user": {"login": "mbdevpl", "id": 1270332, "node_id": "MDQ6VXNlcjEyNzAzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1270332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbdevpl", "html_url": "https://github.com/mbdevpl", "followers_url": "https://api.github.com/users/mbdevpl/followers", "following_url": "https://api.github.com/users/mbdevpl/following{/other_user}", "gists_url": "https://api.github.com/users/mbdevpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbdevpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbdevpl/subscriptions", "organizations_url": "https://api.github.com/users/mbdevpl/orgs", "repos_url": "https://api.github.com/users/mbdevpl/repos", "events_url": "https://api.github.com/users/mbdevpl/events{/privacy}", "received_events_url": "https://api.github.com/users/mbdevpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-27T06:49:45Z", "updated_at": "2017-01-05T23:31:48Z", "closed_at": "2017-01-05T23:31:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `dump()` function, there's the following expression [in line 116](https://github.com/dropbox/typed_ast/blob/master/typed_ast/ast35.py#L116):\r\n\r\n    rv += fields and ', ' or ' '\r\n\r\nThe space character literal at the end of the expression causes the dump of e.g. `Pass` to be:\r\n\r\n    Pass( lineno=44, col_offset=4)\r\n\r\nIs there a point to this? Or, could it be that this space should be removed, so that the dump is:\r\n\r\n    Pass(lineno=44, col_offset=4)\r\n\r\n?\r\n\r\nI've done this in this commit, should I PR? https://github.com/mbdevpl/typed_ast/commit/589d064ff427b372c8550839719aa6fd21290e42", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/20", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/20/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/20/events", "html_url": "https://github.com/python/typed_ast/issues/20", "id": 183223987, "node_id": "MDU6SXNzdWUxODMyMjM5ODc=", "number": 20, "title": "Does not compile under MSVC 14", "user": {"login": "oyarsa", "id": 12749211, "node_id": "MDQ6VXNlcjEyNzQ5MjEx", "avatar_url": "https://avatars0.githubusercontent.com/u/12749211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oyarsa", "html_url": "https://github.com/oyarsa", "followers_url": "https://api.github.com/users/oyarsa/followers", "following_url": "https://api.github.com/users/oyarsa/following{/other_user}", "gists_url": "https://api.github.com/users/oyarsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/oyarsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oyarsa/subscriptions", "organizations_url": "https://api.github.com/users/oyarsa/orgs", "repos_url": "https://api.github.com/users/oyarsa/repos", "events_url": "https://api.github.com/users/oyarsa/events{/privacy}", "received_events_url": "https://api.github.com/users/oyarsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-15T18:10:42Z", "updated_at": "2017-01-05T23:20:05Z", "closed_at": "2017-01-05T23:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I tried to install the package using pip, I received the following error: http://pastebin.com/fDNWdR7Z\n\nPython 3.5.0\npip 8.1.2\nVisual Studio 14 Update 3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/19", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/19/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/19/events", "html_url": "https://github.com/python/typed_ast/issues/19", "id": 180388367, "node_id": "MDU6SXNzdWUxODAzODgzNjc=", "number": 19, "title": "Please tag and push 0.6.1 from master", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-30T19:52:23Z", "updated_at": "2016-09-30T20:41:15Z", "closed_at": "2016-09-30T20:41:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think the typed-ast 0.6.0 you uploaded to pypi is missing something.\n\nYou seem to have tagged commit 6157371, which seems to be a detached head representing Ivan's development branch, not the squashed master. Therefore it does not contain the \"has_b\" flag on the ast27.Str class which I need to experiment with bytes/str/unicode. Would you mind tagging master with 0.6.1 and pushing a new version to PyPI?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/18", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/18/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/18/events", "html_url": "https://github.com/python/typed_ast/issues/18", "id": 179646289, "node_id": "MDU6SXNzdWUxNzk2NDYyODk=", "number": 18, "title": "Change names of ast* modules", "user": {"login": "ddfisher", "id": 245905, "node_id": "MDQ6VXNlcjI0NTkwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddfisher", "html_url": "https://github.com/ddfisher", "followers_url": "https://api.github.com/users/ddfisher/followers", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "repos_url": "https://api.github.com/users/ddfisher/repos", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-09-27T23:54:26Z", "updated_at": "2019-01-23T05:18:54Z", "closed_at": "2019-01-23T04:29:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Instead of adding a new `ast3x` module for every new Python version, we're now planning on updating the `ast35` module with the Python changes.  Accordingly, the `ast27` and `ast35` modules should probably be renamed to `ast2` and `ast3`, respectively.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/15", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/15/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/15/events", "html_url": "https://github.com/python/typed_ast/issues/15", "id": 175969516, "node_id": "MDU6SXNzdWUxNzU5Njk1MTY=", "number": 15, "title": "pgen instructions in readme", "user": {"login": "fyquah95", "id": 6006469, "node_id": "MDQ6VXNlcjYwMDY0Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6006469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fyquah95", "html_url": "https://github.com/fyquah95", "followers_url": "https://api.github.com/users/fyquah95/followers", "following_url": "https://api.github.com/users/fyquah95/following{/other_user}", "gists_url": "https://api.github.com/users/fyquah95/gists{/gist_id}", "starred_url": "https://api.github.com/users/fyquah95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fyquah95/subscriptions", "organizations_url": "https://api.github.com/users/fyquah95/orgs", "repos_url": "https://api.github.com/users/fyquah95/repos", "events_url": "https://api.github.com/users/fyquah95/events{/privacy}", "received_events_url": "https://api.github.com/users/fyquah95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-09T09:43:27Z", "updated_at": "2017-02-13T01:59:23Z", "closed_at": "2017-02-13T01:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the instructions to get a working `pgen` binary and ran into the following compilation error:\n\n``` bash\nParser/grammar1.c: In function \u2018PyGrammar_LabelRepr\u2019:\nParser/grammar1.c:50:20: error: \u2018_PyParser_TokenNames\u2019 undeclared (first use in this function)\n             return _PyParser_TokenNames[lb->lb_type];\n                    ^\nParser/grammar1.c:50:20: note: each undeclared identifier is reported only once for each function it appears in\nParser/grammar1.c:61:1: warning: control reaches end of non-void function [-Wreturn-type]\n }\n```\n\nIt is mentioned in the README that we need to overwrite Include/token.h, Include/compile.h, and Parser/tokenizer.c, I assume that's referring to replacing those in cpython with those in typed_ast/ast35 right?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/12", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/12/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/12/events", "html_url": "https://github.com/python/typed_ast/issues/12", "id": 171208378, "node_id": "MDU6SXNzdWUxNzEyMDgzNzg=", "number": 12, "title": "License appears to be incompatible with Python source from which it was derived", "user": {"login": "mr-c", "id": 1330696, "node_id": "MDQ6VXNlcjEzMzA2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1330696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mr-c", "html_url": "https://github.com/mr-c", "followers_url": "https://api.github.com/users/mr-c/followers", "following_url": "https://api.github.com/users/mr-c/following{/other_user}", "gists_url": "https://api.github.com/users/mr-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/mr-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mr-c/subscriptions", "organizations_url": "https://api.github.com/users/mr-c/orgs", "repos_url": "https://api.github.com/users/mr-c/repos", "events_url": "https://api.github.com/users/mr-c/events{/privacy}", "received_events_url": "https://api.github.com/users/mr-c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-15T16:35:56Z", "updated_at": "2016-08-23T23:18:16Z", "closed_at": "2016-08-23T23:18:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please fix or clarify so I can package typed_ast for Debian. Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/11", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/11/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/11/events", "html_url": "https://github.com/python/typed_ast/issues/11", "id": 171018289, "node_id": "MDU6SXNzdWUxNzEwMTgyODk=", "number": 11, "title": "Does not compile under Cygwin", "user": {"login": "Herst", "id": 1042176, "node_id": "MDQ6VXNlcjEwNDIxNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1042176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Herst", "html_url": "https://github.com/Herst", "followers_url": "https://api.github.com/users/Herst/followers", "following_url": "https://api.github.com/users/Herst/following{/other_user}", "gists_url": "https://api.github.com/users/Herst/gists{/gist_id}", "starred_url": "https://api.github.com/users/Herst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Herst/subscriptions", "organizations_url": "https://api.github.com/users/Herst/orgs", "repos_url": "https://api.github.com/users/Herst/repos", "events_url": "https://api.github.com/users/Herst/events{/privacy}", "received_events_url": "https://api.github.com/users/Herst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-13T17:21:40Z", "updated_at": "2017-01-06T20:14:51Z", "closed_at": "2017-01-06T10:33:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a Python 3 inside Cygwin, meaning that it was installed over the Cygwin package manager and is not a Windows one accessed from Cygwin, `python3 setup.py build` will fail:\n\n```\nrunning build\nrunning build_py\nrunning build_ext\nbuilding '_ast27' extension\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/acceler.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/acceler.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/bitset.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/bitset.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/grammar.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/grammar.o\nast27/Parser/grammar.c:16:12: warning: \u2018Py_DebugFlag\u2019 redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]\n extern int Py_DebugFlag;\n            ^\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/grammar1.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/grammar1.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/node.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/node.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/parser.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/parser.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/parsetok.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/parsetok.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Parser/tokenizer.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/tokenizer.o\nast27/Parser/tokenizer.c:41:7: warning: \u2018_Ta27Parser_TokenNames\u2019 redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]\n char *_Ta27Parser_TokenNames[] = {\n       ^\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Python/ast.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Python/graminit.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/graminit.o\nast27/Python/graminit.c:2332:9: warning: \u2018_Ta27Parser_Grammar\u2019 redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]\n grammar _Ta27Parser_Grammar = {\n         ^\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Python/mystrtoul.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/mystrtoul.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Python/Python-ast.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/Python-ast.o\ngcc -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -ggdb -O2 -pipe -Wimplicit-function-declaration -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/build=/usr/src/debug/python3-3.4.3-1 -fdebug-prefix-map=/usr/src/ports/python3/python3-3.4.3-1.x86_64/src/Python-3.4.3=/usr/src/debug/python3-3.4.3-1 -Iast27/Include -I/usr/include/python3.4m -c ast27/Custom/typed_ast.c -o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Custom/typed_ast.o\ngcc -shared -Wl,--enable-auto-image-base build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/acceler.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/bitset.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/grammar.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/grammar1.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/node.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/parser.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/parsetok.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/tokenizer.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/graminit.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/mystrtoul.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/Python-ast.o build/temp.cygwin-2.6.0-x86_64-3.4/ast27/Custom/typed_ast.o -L/usr/lib/python3.4/config -L/usr/lib -lpython3.4m -o build/lib.cygwin-2.6.0-x86_64-3.4/_ast27.cpython-34m.dll\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/grammar.o: In function `_Py_translatelabels':\n/home/phili/typed_ast/ast27/Parser/grammar.c:144: undefined reference to `__imp__Ta27Parser_TokenNames'\n/home/phili/typed_ast/ast27/Parser/grammar.c:144:(.text+0x3ac): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `__imp__Ta27Parser_TokenNames'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Parser/grammar1.o: In function `Ta27Grammar_LabelRepr':\n/home/phili/typed_ast/ast27/Parser/grammar1.c:52: undefined reference to `__imp__Ta27Parser_TokenNames'\n/home/phili/typed_ast/ast27/Parser/grammar1.c:52:(.text+0x48): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `__imp__Ta27Parser_TokenNames'\n/home/phili/typed_ast/ast27/Parser/grammar1.c:50: undefined reference to `__imp__Ta27Parser_TokenNames'\n/home/phili/typed_ast/ast27/Parser/grammar1.c:50:(.text+0xb3): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `__imp__Ta27Parser_TokenNames'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o: In function `compiler_complex_args':\n/home/phili/typed_ast/ast27/Python/ast.c:681: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:681:(.text+0x8ec): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_seq_new'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o: In function `ast_for_exprlist':\n/home/phili/typed_ast/ast27/Python/ast.c:2448: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:2448:(.text+0x117f): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_seq_new'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o: In function `ast_for_expr':\n/home/phili/typed_ast/ast27/Python/ast.c:1992: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:1992:(.text+0x131b): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:2028: undefined reference to `_Py_asdl_int_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:2028:(.text+0x15ac): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_int_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:2031: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:2031:(.text+0x15cf): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_seq_new'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o: In function `ast_for_atom':\n/home/phili/typed_ast/ast27/Python/ast.c:1597: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:1597:(.text+0x17dc): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:1601: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:1601:(.text+0x17f3): relocation truncated to fit: R_X86_64_PC32 against undefined symbol `_Py_asdl_seq_new'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o: In function `ast_for_trailer':\n/home/phili/typed_ast/ast27/Python/ast.c:1817: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/ast.c:1817:(.text+0x193a): additional relocation overflows omitted from the output\n/home/phili/typed_ast/ast27/Python/ast.c:1833: undefined reference to `_Py_asdl_seq_new'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/ast.o:/home/phili/typed_ast/ast27/Python/ast.c:1578: more undefined references to `_Py_asdl_seq_new' follow\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/Python-ast.o: In function `obj2ast_expr':\n/home/phili/typed_ast/ast27/Python/Python-ast.c:5516: undefined reference to `_Py_asdl_int_seq_new'\n/home/phili/typed_ast/ast27/Python/Python-ast.c:5593: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/Python-ast.c:5541: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/Python-ast.c:5618: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/Python-ast.c:5880: undefined reference to `_Py_asdl_seq_new'\n/home/phili/typed_ast/ast27/Python/Python-ast.c:5929: undefined reference to `_Py_asdl_seq_new'\nbuild/temp.cygwin-2.6.0-x86_64-3.4/ast27/Python/Python-ast.o:/home/phili/typed_ast/ast27/Python/Python-ast.c:5284: more undefined references to `_Py_asdl_seq_new' follow\ncollect2: error: ld returned 1 exit status\nerror: command 'gcc' failed with exit status 1\n```\n\n/edit: Same for 32 Bit and MSYS2.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/10", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/10/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/10/events", "html_url": "https://github.com/python/typed_ast/issues/10", "id": 170326188, "node_id": "MDU6SXNzdWUxNzAzMjYxODg=", "number": 10, "title": "Distinguish between b'x' and 'x' in Python 2", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-10T04:36:36Z", "updated_at": "2016-09-20T18:29:30Z", "closed_at": "2016-09-20T18:29:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For https://github.com/python/typing/issues/208 I'd like to distinguish between bytes, str and unicode, but the Python 2 tokenizer erases the difference between b'x' and 'x' in an early stage.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/8", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/8/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/8/events", "html_url": "https://github.com/python/typed_ast/issues/8", "id": 162744744, "node_id": "MDU6SXNzdWUxNjI3NDQ3NDQ=", "number": 8, "title": "tag releases so they're visible on GitHub", "user": {"login": "timabbott", "id": 2746074, "node_id": "MDQ6VXNlcjI3NDYwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2746074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timabbott", "html_url": "https://github.com/timabbott", "followers_url": "https://api.github.com/users/timabbott/followers", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "organizations_url": "https://api.github.com/users/timabbott/orgs", "repos_url": "https://api.github.com/users/timabbott/repos", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "received_events_url": "https://api.github.com/users/timabbott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-28T17:44:41Z", "updated_at": "2016-08-29T18:27:02Z", "closed_at": "2016-06-30T00:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "You should add git tags to the release commits (e.g. `v0.5.5`) so that it's easy to see what the releases have been.  (might also be worth adding a changelog, but that's more work).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/7", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/7/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/7/events", "html_url": "https://github.com/python/typed_ast/issues/7", "id": 162309099, "node_id": "MDU6SXNzdWUxNjIzMDkwOTk=", "number": 7, "title": "Error when trying to install with Python 2 pip is really bad", "user": {"login": "rwbarton", "id": 22628, "node_id": "MDQ6VXNlcjIyNjI4", "avatar_url": "https://avatars1.githubusercontent.com/u/22628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwbarton", "html_url": "https://github.com/rwbarton", "followers_url": "https://api.github.com/users/rwbarton/followers", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "repos_url": "https://api.github.com/users/rwbarton/repos", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-26T02:26:37Z", "updated_at": "2016-06-30T00:38:01Z", "closed_at": "2016-06-30T00:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I accidentally ran `pip install typed_ast` using Python 2 and got these errors:\n\n```\n[many more errors from gcc skipped]\n\nast27/Parser/tokenizer.c:512:45: error: \u2018PyId_readline\u2019 undeclared (first use in this function)\n\n     readline = _PyObject_GetAttrId(stream, &PyId_readline);\n\n                                             ^\n\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n----------------------------------------\nCleaning up...\nCommand /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip-build-uAt4J4/typed-ast/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-oRixWl-record/install-record.txt --single-version-externally-managed --compile failed with error code 1 in /tmp/pip-build-uAt4J4/typed-ast\nTraceback (most recent call last):\n  File \"/usr/bin/pip\", line 9, in <module>\n    load_entry_point('pip==1.5.6', 'console_scripts', 'pip')()\n  File \"/usr/lib/python2.7/dist-packages/pip/__init__.py\", line 248, in main\n    return command.main(cmd_args)\n  File \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 161, in main\n    text = '\\n'.join(complete_log)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 41: ordinal not in range(128)\n```\n\nSurely the terrible final error message is not typed_ast's fault, but can the package just be marked as Python 3-only on PyPI somehow?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/6", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/6/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/6/events", "html_url": "https://github.com/python/typed_ast/issues/6", "id": 160731750, "node_id": "MDU6SXNzdWUxNjA3MzE3NTA=", "number": 6, "title": "consider parsing type comments as expressions", "user": {"login": "ddfisher", "id": 245905, "node_id": "MDQ6VXNlcjI0NTkwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddfisher", "html_url": "https://github.com/ddfisher", "followers_url": "https://api.github.com/users/ddfisher/followers", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "repos_url": "https://api.github.com/users/ddfisher/repos", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-16T18:43:48Z", "updated_at": "2016-06-30T00:46:36Z", "closed_at": "2016-06-30T00:46:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Pros:\n- Easier to understand API. (This has already caused some user confusion; see #4.)\n\nCons:\n- Errors in type comments will become syntax errors.  (But misplaced type comments are already syntax errors, so maybe this makes sense.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/4", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/4/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/4/events", "html_url": "https://github.com/python/typed_ast/issues/4", "id": 160411140, "node_id": "MDU6SXNzdWUxNjA0MTExNDA=", "number": 4, "title": "Are there any specs for the typed AST?", "user": {"login": "mbdevpl", "id": 1270332, "node_id": "MDQ6VXNlcjEyNzAzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1270332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbdevpl", "html_url": "https://github.com/mbdevpl", "followers_url": "https://api.github.com/users/mbdevpl/followers", "following_url": "https://api.github.com/users/mbdevpl/following{/other_user}", "gists_url": "https://api.github.com/users/mbdevpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbdevpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbdevpl/subscriptions", "organizations_url": "https://api.github.com/users/mbdevpl/orgs", "repos_url": "https://api.github.com/users/mbdevpl/repos", "events_url": "https://api.github.com/users/mbdevpl/events{/privacy}", "received_events_url": "https://api.github.com/users/mbdevpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-15T12:34:58Z", "updated_at": "2016-06-24T15:01:35Z", "closed_at": "2016-06-23T11:41:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've started experimenting with this project and it works really nice so far, but what I find that is missing is the description of the typed AST. For ordinary AST there is some effort going on here: https://greentreesnakes.readthedocs.io/en/latest/nodes.html . However, is there any kind of documentation with regard to how `typed_ast.ast35` should look?\n\nE.g. `type_comment` seems to be treated as just a string. However what is done e.g. in [mypy](https://github.com/python/mypy) is the type comment is treated as code. Is that intended?\n\n```\nmy_string = None # type: typing.Optional[str]\n```\n\n```\nModule(\n  body=[Assign(\n    targets=[Name(\n      id='my_string',\n      ctx=Store())],\n    value=NameConstant(value=None),\n    type_comment='typing.Optional[str]')],\n  type_ignores=[])\n```\n\nAnother example is here, where type annotations are not treated as strings, but are parsed normally:\n\n```\ndef function(a: int, b: int) -> int:\n    return a + b\n```\n\n```\nModule(\n  body=[FunctionDef(\n    name='function',\n    args=arguments(\n      args=[\n        arg(\n          arg='a',\n          annotation=Name(\n            id='int',\n            ctx=Load())),\n        arg(\n          arg='b',\n          annotation=Name(\n            id='int',\n            ctx=Load()))],\n      vararg=None,\n      kwonlyargs=[],\n      kw_defaults=[],\n      kwarg=None,\n      defaults=[]),\n    body=[Return(value=BinOp(\n      left=Name(\n        id='a',\n        ctx=Load()),\n      op=Add(),\n      right=Name(\n        id='b',\n        ctx=Load())))],\n    decorator_list=[],\n    returns=Name(\n      id='int',\n      ctx=Load()),\n    type_comment=None)],\n  type_ignores=[])\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/3", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/3/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/3/events", "html_url": "https://github.com/python/typed_ast/issues/3", "id": 154268513, "node_id": "MDU6SXNzdWUxNTQyNjg1MTM=", "number": 3, "title": "switch to setuptools and provide wheels.", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-05-11T15:12:06Z", "updated_at": "2017-02-13T05:01:29Z", "closed_at": "2017-02-13T05:01:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python/typed_ast/issues/2", "repository_url": "https://api.github.com/repos/python/typed_ast", "labels_url": "https://api.github.com/repos/python/typed_ast/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/python/typed_ast/issues/2/comments", "events_url": "https://api.github.com/repos/python/typed_ast/issues/2/events", "html_url": "https://github.com/python/typed_ast/issues/2", "id": 136866844, "node_id": "MDU6SXNzdWUxMzY4NjY4NDQ=", "number": 2, "title": "tests needed", "user": {"login": "ddfisher", "id": 245905, "node_id": "MDQ6VXNlcjI0NTkwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddfisher", "html_url": "https://github.com/ddfisher", "followers_url": "https://api.github.com/users/ddfisher/followers", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "repos_url": "https://api.github.com/users/ddfisher/repos", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-27T02:27:23Z", "updated_at": "2019-06-04T23:45:38Z", "closed_at": "2019-06-04T23:45:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Once this is fully integrated with mypy, we can run the mypy tests to check that things are being parsed correctly.\n\nIt may be also worth checking if CPython has tests for the AST module we can use.\n", "performed_via_github_app": null, "score": 1.0}]}