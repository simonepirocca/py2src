{"total_count": 53, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/fatiando/pooch/issues/190", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/190/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/190/events", "html_url": "https://github.com/fatiando/pooch/issues/190", "id": 653875377, "node_id": "MDU6SXNzdWU2NTM4NzUzNzc=", "number": 190, "title": "More stable tests for FTP downloads", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-09T08:36:20Z", "updated_at": "2020-07-14T13:53:13Z", "closed_at": "2020-07-14T13:53:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\nOur FTP downloader is tested on free ftp test websites. As seen recently in #189 and #165, we\u2019ve been getting connection problems on CI from those services. It would be good to have another way of testing this that didn\u2019t rely on these websites. \r\nSome possible alternatives:\r\n\r\n1. Use an actual FTP data server run by a government organisation (NOAA or UNACO for example). But that still doesn\u2019t solve the problem of things being out of our control on those websites as well.\r\n2. Mock the FTP libraries and download a different data set instead. This would be more robust to failure but wouldn\u2019t really test correct usage of the ftp libraries.\r\n\r\nI\u2019m open to other suggestions, particularly since neither of the above solve all our problems.\r\n\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/188", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/188/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/188/events", "html_url": "https://github.com/fatiando/pooch/issues/188", "id": 642908897, "node_id": "MDU6SXNzdWU2NDI5MDg4OTc=", "number": 188, "title": "Documentation section with tips & tricks / FAQ", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2153277914, "node_id": "MDU6TGFiZWwyMTUzMjc3OTE0", "url": "https://api.github.com/repos/fatiando/pooch/labels/documentation", "name": "documentation", "color": "f2ff00", "default": true, "description": "Issue or suggestion for documentation"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-22T09:28:50Z", "updated_at": "2020-08-06T17:24:30Z", "closed_at": "2020-08-06T17:24:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\nThere are some little tricks that we've been covering in replies to issues that are not included in the docs (or not very well documented). For example, #185 had trouble because of zip files containing a date that changed every time (even though the file contents didn't change). It would be useful to have a section dedicated to these little tricks/gotchas (not sure what to call it). We just need to start it at this point and included the notice about zip files. We can build it up slowly as these things pop up.\r\n\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes but would welcome anyone else who wants to do this\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/186", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/186/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/186/events", "html_url": "https://github.com/fatiando/pooch/issues/186", "id": 642639766, "node_id": "MDU6SXNzdWU2NDI2Mzk3NjY=", "number": 186, "title": "Problem downloading a file via http: SSLCertVerificationError", "user": {"login": "MarkWieczorek", "id": 8697285, "node_id": "MDQ6VXNlcjg2OTcyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8697285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkWieczorek", "html_url": "https://github.com/MarkWieczorek", "followers_url": "https://api.github.com/users/MarkWieczorek/followers", "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}", "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions", "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs", "repos_url": "https://api.github.com/users/MarkWieczorek/repos", "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-21T20:57:22Z", "updated_at": "2020-06-22T15:00:00Z", "closed_at": "2020-06-22T09:23:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having problems using pooch to download files of the Earth's magnetic field from the SWARM mission that are available on an ESA web site. The filename is \r\n\r\nhttps://swarm-diss.eo.esa.int/?do=download&file=swarm%2FLevel2longterm%2FMLI%2FSW_OPER_MLI_SHA_2D_00000000T000000_99999999T999999_0501.ZIP\r\n\r\nand the errors include\r\n```\r\nSSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)\r\n```\r\nand \r\n```\r\nSSLError: HTTPSConnectionPool(host='swarm-diss.eo.esa.int', port=443): Max retries exceeded with url: /?do=download&file=swarm%2FLevel2longterm%2FMLI%2FSW_OPER_MLI_SHA_2D_00000000T000000_99999999T999999_0501.ZIP (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1076)')))\r\n```\r\nI tried using pythons `requests` to do this manually, and got similar errors. \r\n\r\nWith `requests`, I found that I could specify the option `verify=False`, which according to the docs\r\n> verify \u2013 (optional) Either a boolean, in which case it controls whether we verify the server\u2019s TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to True.` \r\n\r\nSo, if there is not a simple solution to this problem, perhaps pooch could allow you to specify `verify` as an optional variable which then gets passed on to requests. I understand that this is non ideal, and this generates the warning\r\n\r\n```\r\nresponse = requests.get('https://swarm-diss.eo.esa.int/?do=download&file=swarm%2FLevel2longterm%2FMLI%2FSW_OPER_MLI_SHA_2D_00000000T000000_99999999T999999_0501.ZIP', verify=False)\r\n/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py:1004: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning,\r\n```\r\nHowever, if we are verifying the hash of the file, then there is no security issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/185", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/185/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/185/events", "html_url": "https://github.com/fatiando/pooch/issues/185", "id": 640582299, "node_id": "MDU6SXNzdWU2NDA1ODIyOTk=", "number": 185, "title": "Problem verifying the hash of a downloaded zip file from ICGEM", "user": {"login": "MarkWieczorek", "id": 8697285, "node_id": "MDQ6VXNlcjg2OTcyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8697285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkWieczorek", "html_url": "https://github.com/MarkWieczorek", "followers_url": "https://api.github.com/users/MarkWieczorek/followers", "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}", "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions", "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs", "repos_url": "https://api.github.com/users/MarkWieczorek/repos", "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-17T16:33:16Z", "updated_at": "2020-06-22T09:30:19Z", "closed_at": "2020-06-22T09:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having a problem verifying the hash of zip file downloaded from the ICGEM website. I have downloaded zip files with pooch from other repositories, so in principle, I should be doing everything ok.\r\n\r\nFirst, on the [ICGEM website](http://icgem.gfz-potsdam.de/tom_longtime), you can download a file in gfc format (which works fine for me with pooch) or a zipped version. If I copy the link from the website for the zipped version of EGM2008, I get\r\n\r\nhttp://icgem.gfz-potsdam.de/getmodel/zip/c50128797a9cb62e936337c890e4425f03f0461d7329b09a8cc8561504465340\r\n\r\nUsing this link in a browser downloads and saves the file: EGM2008.zip (from which I computed the sha256 hash).\r\n\r\nUsing pooch the file is download to the filename\r\n\r\nd99404d2e294332575026111bd03dbf3-c50128797a9cb62e936337c890e4425f03f0461d7329b09a8cc8561504465340\r\n\r\nPooch however complains that the hash of the file doesn't match\r\n\r\n```ValueError: SHA256 hash of downloaded file (d99404d2e294332575026111bd03dbf3-c50128797a9cb62e936337c890e4425f03f0461d7329b09a8cc8561504465340) does not match the known hash: expected sha256:9393a9100a61bab4353d8f8d429cbc3b344153690adfbf5ac678eec92ab9fdef but got 92d03699ad51510b4faf815a9c3c59db8211c9a8d18c576717a90a4ece493153. Deleted download for safety. The downloaded file may have been corrupted or the known hash may be outdated.```\r\n\r\nI do not want to unzip the file (it will be unzipped on the fly when needed).\r\n\r\nAny ideas?\r\n\r\nHere is the code\r\n```\r\nfname = retrieve(url=\"http://icgem.gfz-potsdam.de/getmodel/zip/c50128797a9cb62e936337c890e4425f03f0461d7329b09a8cc8561504465340\", known_hash=\"sha256:9393a9100a61bab4353d8f8d429cbc3b344153690adfbf5ac678eec92ab9fdef\", downloader=HTTPDownloader(progressbar=True))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/184", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/184/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/184/events", "html_url": "https://github.com/fatiando/pooch/issues/184", "id": 636050194, "node_id": "MDU6SXNzdWU2MzYwNTAxOTQ=", "number": 184, "title": "Point users to Unzip/Untar in Decompress error messages", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/4", "html_url": "https://github.com/fatiando/pooch/milestone/4", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/4/labels", "id": 5714746, "node_id": "MDk6TWlsZXN0b25lNTcxNDc0Ng==", "number": 4, "title": "1.2.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 1, "state": "open", "created_at": "2020-07-30T08:58:46Z", "updated_at": "2020-07-30T15:03:31Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-06-10T08:36:10Z", "updated_at": "2020-07-30T15:03:31Z", "closed_at": "2020-07-30T15:03:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\n`pooch.Decompress` doesn't unpack zip or tar files but the name can lead users to think that it would. Currently, the error message would just say that zip/tar files are not supported. Instead, we should detect those extensions and point users to Unzip/Untar instead. Something like \"To unpack a zip file, use 'pooch.Unzip' instead.\".\r\n\r\nThe changes would need to happen on this private method: https://github.com/fatiando/pooch/blob/master/pooch/processors.py#L254 The message should be added to the current messages instead of replacing them completely. \r\n\r\n**Are you willing to help implement and maintain this feature?** Yes but very time limited so would welcome anyone else to do this instead :slightly_smiling_face: \r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/183", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/183/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/183/events", "html_url": "https://github.com/fatiando/pooch/issues/183", "id": 633787671, "node_id": "MDU6SXNzdWU2MzM3ODc2NzE=", "number": 183, "title": "Add support for zip files.", "user": {"login": "MarkWieczorek", "id": 8697285, "node_id": "MDQ6VXNlcjg2OTcyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8697285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkWieczorek", "html_url": "https://github.com/MarkWieczorek", "followers_url": "https://api.github.com/users/MarkWieczorek/followers", "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}", "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions", "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs", "repos_url": "https://api.github.com/users/MarkWieczorek/repos", "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-07T21:38:53Z", "updated_at": "2020-06-10T08:36:35Z", "closed_at": "2020-06-09T10:53:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to download `.zip` file using pooch, along with `processor=Decompress()`, I received the following error:\r\n\r\n```\r\nUnrecognized extension '.zip'. Must be one of '['.xz', '.gz', '.bz2']'.\r\n```\r\n\r\nZip files are common, so it would be great to support this format.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/178", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/178/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/178/events", "html_url": "https://github.com/fatiando/pooch/issues/178", "id": 630710294, "node_id": "MDU6SXNzdWU2MzA3MTAyOTQ=", "number": 178, "title": "HTTPError: 403 Client Error: Forbidden for url:", "user": {"login": "MarkWieczorek", "id": 8697285, "node_id": "MDQ6VXNlcjg2OTcyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8697285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkWieczorek", "html_url": "https://github.com/MarkWieczorek", "followers_url": "https://api.github.com/users/MarkWieczorek/followers", "following_url": "https://api.github.com/users/MarkWieczorek/following{/other_user}", "gists_url": "https://api.github.com/users/MarkWieczorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkWieczorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkWieczorek/subscriptions", "organizations_url": "https://api.github.com/users/MarkWieczorek/orgs", "repos_url": "https://api.github.com/users/MarkWieczorek/repos", "events_url": "https://api.github.com/users/MarkWieczorek/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkWieczorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-04T10:39:07Z", "updated_at": "2020-06-10T08:39:34Z", "closed_at": "2020-06-10T08:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to download a text file that is part of the online supplemental materials for a recent JGR article, but I am receiving an error `HTTPError: 403 Client Error: Forbidden for url:` The file exists, as you can verify by copying the url into a browser.\r\n\r\nThough I have no idea what the problem is, I am guessing that it might have something to do with the odd file name with lots of control characters in it.\r\n\r\nI am using the latest version on pypi (please note that `pooch.__version__` is not defined and that `pooch.version` does not return a version string).\r\n\r\n```\r\nIn [1]: from pooch import retrieve\r\nIn [2]: from pooch import HTTPDownloader\r\nIn [3]: fname = retrieve(\r\n   ...:     url=\"https://agupubs.onlinelibrary.wiley.com/action/downloadSupplement?doi=10.1029%2F2018JE005854&f\r\n   ...: ile=jgre21147-sup-0003-Table_SI-S01.txt\",  # noqa: E501\r\n   ...:     known_hash=\"sha256:a2c89bb3af70cd76654f6ab6b4e0844f972055970b593ec29153d59ecc78180c\",  # noqa: E501\r\n   ...:\r\n   ...:     downloader=HTTPDownloader(progressbar=True),\r\n   ...: )\r\nDownloading data from 'https://agupubs.onlinelibrary.wiley.com/action/downloadSupplement?doi=10.1029%2F2018JE005854&file=jgre21147-sup-0003-Table_SI-S01.txt' to file '/Users/lunokhod/Library/Caches/pooch/0394b1ebfc19775b033e2e61fafffb1e-downloadSupplement'.\r\n---------------------------------------------------------------------------\r\nHTTPError                                 Traceback (most recent call last)\r\n<ipython-input-4-452acbd9d492> in <module>\r\n      2     url=\"https://agupubs.onlinelibrary.wiley.com/action/downloadSupplement?doi=10.1029%2F2018JE005854&file=jgre21147-sup-0003-Table_SI-S01.txt\",  # noqa: E501\r\n      3     known_hash=\"sha256:a2c89bb3af70cd76654f6ab6b4e0844f972055970b593ec29153d59ecc78180c\",  # noqa: E501\r\n----> 4     downloader=HTTPDownloader(progressbar=True),\r\n      5 )\r\n\r\n/usr/local/lib/python3.7/site-packages/pooch/core.py in retrieve(url, known_hash, fname, path, processor, downloader)\r\n    216             downloader = choose_downloader(url)\r\n    217\r\n--> 218         stream_download(url, full_path, known_hash, downloader, pooch=None)\r\n    219\r\n    220         if known_hash is None:\r\n\r\n/usr/local/lib/python3.7/site-packages/pooch/core.py in stream_download(url, fname, known_hash, downloader, pooch)\r\n    745     # before overwriting the original.\r\n    746     with temporary_file(path=str(fname.parent)) as tmp:\r\n--> 747         downloader(url, tmp, pooch)\r\n    748         hash_matches(tmp, known_hash, strict=True, source=str(fname.name))\r\n    749         shutil.move(tmp, str(fname))\r\n\r\n/usr/local/lib/python3.7/site-packages/pooch/downloaders.py in __call__(self, url, output_file, pooch)\r\n    166         try:\r\n    167             response = requests.get(url, **kwargs)\r\n--> 168             response.raise_for_status()\r\n    169             content = response.iter_content(chunk_size=self.chunk_size)\r\n    170             if self.progressbar:\r\n\r\n/usr/local/lib/python3.7/site-packages/requests/models.py in raise_for_status(self)\r\n    939\r\n    940         if http_error_msg:\r\n--> 941             raise HTTPError(http_error_msg, response=self)\r\n    942\r\n    943     def close(self):\r\n\r\nHTTPError: 403 Client Error: Forbidden for url: https://agupubs.onlinelibrary.wiley.com/action/downloadSupplement?doi=10.1029%2F2018JE005854&file=jgre21147-sup-0003-Table_SI-S01.txt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/176", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/176/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/176/events", "html_url": "https://github.com/fatiando/pooch/issues/176", "id": 629587984, "node_id": "MDU6SXNzdWU2Mjk1ODc5ODQ=", "number": 176, "title": "Comments in registry file?", "user": {"login": "mathause", "id": 10194086, "node_id": "MDQ6VXNlcjEwMTk0MDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/10194086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathause", "html_url": "https://github.com/mathause", "followers_url": "https://api.github.com/users/mathause/followers", "following_url": "https://api.github.com/users/mathause/following{/other_user}", "gists_url": "https://api.github.com/users/mathause/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathause/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathause/subscriptions", "organizations_url": "https://api.github.com/users/mathause/orgs", "repos_url": "https://api.github.com/users/mathause/repos", "events_url": "https://api.github.com/users/mathause/events{/privacy}", "received_events_url": "https://api.github.com/users/mathause/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-02T23:46:22Z", "updated_at": "2020-06-05T08:38:46Z", "closed_at": "2020-06-05T08:38:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It could be worthwhile to support comments in registry files. For simplicity comments one could require that they need to be on a new line:\r\n\r\n```\r\n# this ressource\r\nc137.csv 19uheidhlkjdwhoiwuhc0uhcwljchw9ochwochw89dcgw9dcgwc\r\n# that ressource\r\ncronen.csv 1upodh2ioduhw9celdjhlfvhksgdwikdgcowjhcwoduchowjg8w\r\n```\r\nHowever, it's probably not really possible to use this in a backward-compatible way...\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/172", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/172/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/172/events", "html_url": "https://github.com/fatiando/pooch/issues/172", "id": 615708120, "node_id": "MDU6SXNzdWU2MTU3MDgxMjA=", "number": 172, "title": "Delay cache folder creation to Pooch.fetch", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T08:53:28Z", "updated_at": "2020-05-14T09:57:36Z", "closed_at": "2020-05-14T09:57:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\n`pooch.create` tries to ensure that the cache folder exists by creating it and trying to write to it through   `pooch.utils.make_local_storage`. This can cause problems if users call `create` to make a module global variable (since it will run at import time). If the import is run in parallel, this can lead to a race condition. #171 tried to fix this but it's not ideal since we shouldn't be writing to disk at import time anyway. A better approach would be to delay the folder creation to `Pooch.fetch` (which already does this https://github.com/fatiando/pooch/blob/master/pooch/core.py#L548). \r\n\r\nIn this case, `make_local_storage` needs to be modified to only create the folder name (it would probably need to be renamed). This would also make #150 and comments in there unnecessary since we don't need to check for permission error if we're not writing to disk until `fetch` time. `retrieve` will also need to be modified to create the cache folder as well (like `fetch` does). We might want to wrap the folder creation so that we can check for permission error and add a message about the environment variable to the exception.\r\n\r\nThere might be unintended consequences to not checking if the cache folder is writable at import time. #22 is when we decided to do this in the first place.\r\n\r\nSee scikit-image/scikit-image#4660\r\n\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/170", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/170/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/170/events", "html_url": "https://github.com/fatiando/pooch/issues/170", "id": 614677517, "node_id": "MDU6SXNzdWU2MTQ2Nzc1MTc=", "number": 170, "title": "Crash on import when running in parallel", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939395, "node_id": "MDU6TGFiZWw5OTM5MzkzOTU=", "url": "https://api.github.com/repos/fatiando/pooch/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T11:14:15Z", "updated_at": "2020-05-09T11:47:13Z", "closed_at": "2020-05-09T11:47:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the problem**\r\n<!--\r\nPlease be as detailed as you can when describing an issue. The more information\r\nwe have, the easier it will be for us to track this down.\r\n-->\r\n\r\nWe recommend a workflow of keeping a `Pooch` as a global variable by calling `pooch.create` at import time. This is problematic when running in parallel and the cache folder has not been created yet. Each parallel process/thread will try to create it at the same time leading to a crash.\r\n\r\nFor our users, this is particularly bad since their packages crash on `import` even if there is no use of the sample datasets. \r\n\r\nNot sure exactly what we can do on our end except:\r\n\r\n1. Add a warning in the docs about this issue.\r\n2. Change our recommended workflow to wrapping `pooch.create` in a function. This way the crash wouldn't happen at `import` but only when trying to fetch a dataset in parallel. This gives packages a chance to warn users not to load sample data for the first time in parallel.\r\n\r\nPerhaps an ideal solution would be for Pooch to create the cache folder at install time. But that would mean hooking into `setup.py` (which is complicated) and I don't know if we could even do this with conda.\r\n\r\n**Full code that generated the error**\r\n\r\nSee scikit-image/scikit-image#4660\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/164", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/164/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/164/events", "html_url": "https://github.com/fatiando/pooch/issues/164", "id": 603966210, "node_id": "MDU6SXNzdWU2MDM5NjYyMTA=", "number": 164, "title": "Custom URL Example", "user": {"login": "achapkowski", "id": 5131271, "node_id": "MDQ6VXNlcjUxMzEyNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achapkowski", "html_url": "https://github.com/achapkowski", "followers_url": "https://api.github.com/users/achapkowski/followers", "following_url": "https://api.github.com/users/achapkowski/following{/other_user}", "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions", "organizations_url": "https://api.github.com/users/achapkowski/orgs", "repos_url": "https://api.github.com/users/achapkowski/repos", "events_url": "https://api.github.com/users/achapkowski/events{/privacy}", "received_events_url": "https://api.github.com/users/achapkowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-21T12:40:34Z", "updated_at": "2020-04-21T17:11:37Z", "closed_at": "2020-04-21T17:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If my data is being hosted here: https://www.arcgis.com/sharing/rest/content/items/ae25571c60d94ce5b7fcbf74e27c00e0/data\r\n\r\nThe result is a zipfile.  \r\n\r\nAlso, I do not know the sha/md5.\r\n\r\nCan I use Pooch to manage this type of data?  Can I create a registry.txt for these types of data?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/155", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/155/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/155/events", "html_url": "https://github.com/fatiando/pooch/issues/155", "id": 590514562, "node_id": "MDU6SXNzdWU1OTA1MTQ1NjI=", "number": 155, "title": "SFTP Downloader", "user": {"login": "andersy005", "id": 13301940, "node_id": "MDQ6VXNlcjEzMzAxOTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/13301940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andersy005", "html_url": "https://github.com/andersy005", "followers_url": "https://api.github.com/users/andersy005/followers", "following_url": "https://api.github.com/users/andersy005/following{/other_user}", "gists_url": "https://api.github.com/users/andersy005/gists{/gist_id}", "starred_url": "https://api.github.com/users/andersy005/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andersy005/subscriptions", "organizations_url": "https://api.github.com/users/andersy005/orgs", "repos_url": "https://api.github.com/users/andersy005/repos", "events_url": "https://api.github.com/users/andersy005/events{/privacy}", "received_events_url": "https://api.github.com/users/andersy005/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T18:53:08Z", "updated_at": "2020-07-24T09:17:14Z", "closed_at": "2020-07-24T09:17:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\nA while ago, we added an FTP Downloader to pooch. I've been wondering whether it would reasonable to add an `SFTP Downloader` as well. For SSH Authentication, I am thinking that we could use [paramiko](https://github.com/paramiko/paramiko). \r\n\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes/No\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n\r\nYes\r\n\r\nIn case there's no demand/interest for this feature, I am happy to wait until there is a need. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/154", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/154/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/154/events", "html_url": "https://github.com/fatiando/pooch/issues/154", "id": 584661142, "node_id": "MDU6SXNzdWU1ODQ2NjExNDI=", "number": 154, "title": "Unused pooch argument on Downloaders.__call__ methods", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T19:55:18Z", "updated_at": "2020-03-20T13:14:12Z", "closed_at": "2020-03-20T13:14:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the problem**\r\n\r\nBoth `HTTPDownloader` and `FTPDownloader` classes have a `__call__` method used for downloading the desire file through the corresponding protocol. The method ask for the url of the file, the output file where it should be saved to and a `pooch` argument.\r\nAccording to the documentation, this `pooch` argument should be the `Pooch` instance that is calling the method, although it is not used inside it.\r\nIs it an unused argument that should be removed or is there a reason for it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/150", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/150/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/150/events", "html_url": "https://github.com/fatiando/pooch/issues/150", "id": 580093240, "node_id": "MDU6SXNzdWU1ODAwOTMyNDA=", "number": 150, "title": "Raise exception instead of warning when cache isn't writable", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T17:21:22Z", "updated_at": "2020-05-09T11:47:13Z", "closed_at": "2020-05-09T11:47:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\nAs pointed out by @danshapero in #149, when the cache folder isn't writable we warn the user through an error message but don't re-raise the `PermissionError` that is generated. This might be OK for interactive environments like Jupyter but it would cause an error for a script and the actual warning would be lost in the traceback.\r\n\r\nA more sensible thing to do would be to add the message we create to the exception and re-raise it instead of logging. \r\n\r\nThe code for this is in `pooch/core.py` in the `make_local_storage` function (after #149 is merged). \r\n\r\n\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/147", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/147/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/147/events", "html_url": "https://github.com/fatiando/pooch/issues/147", "id": 577484516, "node_id": "MDU6SXNzdWU1Nzc0ODQ1MTY=", "number": 147, "title": "Create a function to fetch a single file", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}, {"id": 993939401, "node_id": "MDU6TGFiZWw5OTM5Mzk0MDE=", "url": "https://api.github.com/repos/fatiando/pooch/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-08T11:16:36Z", "updated_at": "2020-04-08T17:47:58Z", "closed_at": "2020-04-08T17:47:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\n<!--\r\nPlease be as detailed as you can in your description. If possible, include an\r\nexample of how you would like to use this feature (even better if it's a code\r\nexample).\r\n-->\r\n\r\nConsider the following use case: \r\n\r\n> I'm a scientist/educator writing a notebook and I need to get data from this one file on the internet. I'm on Jupyter Lab, possibly on a remote server. I don't know the hash of the file and don't need to download many files, just this one. I want the file to be cached locally and not downloaded multiple times. After the first download, I want to set the hash so that I can make sure future runs of the notebook use the same version of the data. \r\n\r\nRight now, if you want to use Pooch for that you need to write this code:\r\n\r\n```python\r\nfrom unittest import mock\r\n\r\nurl = \"https://www.ngdc.noaa.gov/mgg/ocean_age/data/2008/grids/age/age.3.6.nc.bz2\"\r\nremote_file = url.split(\"/\")[-1]\r\n\r\nfname = pooch.create(\r\n    path=pooch.os_cache(\"meh\"), \r\n    base_url=\"\", \r\n    registry={remote_file: mock.ANY}, \r\n    urls={remote_file: url}\r\n).fetch(remote_file)\r\n\r\nprint(pooch.file_hash(fname))\r\n# Copy and paste the hash in the registry above for future runs.\r\n```\r\nThere is a lot of repetition and feels like a hack. The same thing in fsspec would look like:\r\n\r\n```python\r\n# files is a not-yet-open OpenFile object. The \"with\" context actually opens it\r\nwith fsspec.open(url, mode=\"r\") as f:\r\n    # Read in the data\r\n```\r\n\r\nwhich is much more readable but it doesn't seem to cache automatically (requiring further setup) and doesn't have a hash checking mechanism (at least not that I could find in the docs).\r\n\r\n**Proposal**\r\n\r\nAdd a function `pooch.retrieve` that would make the code above:\r\n\r\n```python\r\nfname = pooch.retrieve(url, hash=None)\r\n# hash of downloaded file logged to screen and copy+pasted above for future runs\r\n```\r\n\r\n* Automatically cache to a `pooch.os_cache(\"pooch\")` location without further setup.\r\n* File names would be set to a short hash of the file content to make sure no overwriting happens. \r\n* The return is the file name only, keeping with the pooch way of not trying to do anything fancy. \r\n* Automatically printing out the hash makes it easier to download first then make sure future downloads are the same.\r\n* Cache location and file name can be set by user if desired.\r\n* Function takes `downloader` and `processor` arguments like `pooch.Pooch.fetch`.\r\n\r\nThis makes it easy to have all the features of Pooch for single file downloads in very little code.\r\n\r\nThe name `pooch.fetch` is nicer but it may cause confusion with `pooch.Pooch.fetch` so `retrieve` is a good alternative.\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n\r\n<!--\r\nEvery feature we add is code that we will have to maintain and keep updated.\r\nThis takes a lot of effort. If you are willing to be involved in the project\r\nand help maintain your feature, it will make it easier for us to accept it.\r\n-->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/146", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/146/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/146/events", "html_url": "https://github.com/fatiando/pooch/issues/146", "id": 572861099, "node_id": "MDU6SXNzdWU1NzI4NjEwOTk=", "number": 146, "title": "How do you pull data from master?", "user": {"login": "achapkowski", "id": 5131271, "node_id": "MDQ6VXNlcjUxMzEyNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achapkowski", "html_url": "https://github.com/achapkowski", "followers_url": "https://api.github.com/users/achapkowski/followers", "following_url": "https://api.github.com/users/achapkowski/following{/other_user}", "gists_url": "https://api.github.com/users/achapkowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/achapkowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achapkowski/subscriptions", "organizations_url": "https://api.github.com/users/achapkowski/orgs", "repos_url": "https://api.github.com/users/achapkowski/repos", "events_url": "https://api.github.com/users/achapkowski/events{/privacy}", "received_events_url": "https://api.github.com/users/achapkowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939401, "node_id": "MDU6TGFiZWw5OTM5Mzk0MDE=", "url": "https://api.github.com/repos/fatiando/pooch/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-28T16:30:12Z", "updated_at": "2020-03-04T15:25:56Z", "closed_at": "2020-03-04T09:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to use this package to just pull down data from a separate repository, so having it just pull from master is fine.  What I set version='master', I get an error.  \r\n\r\nAny ideas how to get around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/131", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/131/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/131/events", "html_url": "https://github.com/fatiando/pooch/issues/131", "id": 534549124, "node_id": "MDU6SXNzdWU1MzQ1NDkxMjQ=", "number": 131, "title": "JOSS Paper Review", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-08T14:25:36Z", "updated_at": "2020-01-10T14:28:10Z", "closed_at": "2020-01-10T14:28:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "xref: https://github.com/openjournals/joss-reviews/issues/1943\r\n\r\nLooks good. \r\n\r\n* Scientficit software is also used to \"Capture\" or \"Acquire\" data\r\n* \"The usual\" -> \"One common approach\" when talking about smaller datasets.\r\n* The sentence that describes the challenge with including datasets in the github repo should come before the \"Larger datasets [...]\" sentence.\r\n* HTTP -> HTTPS\r\n* You state that people are recreating the same code, but maybe give a few examples?\r\n\r\n\r\nParagraph 2:\r\n* [ ] It isn't clear what the registery holds: local file name, hash, remote file url should be clearly listed.\r\n* [ ] I \"minimal dependencies\" is the selling point to packagers. The selling point to users is that it is easily installable with standard python distributinos PyPi and Conda, and a wide array of python versions (2.7, 3.5->3.8).\r\n\r\nParagraph 3:\r\n* [ ] the functionality to unzip files is understated and should be made more explicit. It probably deserves a paragraph of its own.\r\n\r\nParagraph 4:\r\n* [ ] You should elaborate on what exactly makes intake harder to setup. It seems like Pooch is \"files only\", while intake is \"files + metadata\" which is a larger hurdle to overcome.\r\n\r\nParagraph 5:\r\n* [ ] I think you can show off a little bit explaining the motivation in terms of install size this would have on scikit-image. The numbers are listed in the PR\r\n\r\n\r\n\r\nI guess I'll go through the checklist when the review officially starts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/130", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/130/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/130/events", "html_url": "https://github.com/fatiando/pooch/issues/130", "id": 528933355, "node_id": "MDU6SXNzdWU1Mjg5MzMzNTU=", "number": 130, "title": "Create registry file without local copies of the files", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-26T19:40:48Z", "updated_at": "2020-07-24T16:25:28Z", "closed_at": "2020-07-24T16:25:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nWhen trying to fetch a large number of data files from a website, it's generally faster to download them programatically rather than doing it manually. Pooch seems a nice tool to make this process easier without having to write code for download, store and/or decompress the data before it can be loaded as we desire. Nevertheless, we need to have the hashes for the wanted files before Pooch being able to download them programatically, what can be a problem if we don't actually have local copies of those files. So, the solution so far is to write a script to download the files,  run `pooch.make_registry()` in order to compute the hashes and create the registry file. After these steps Pooch is ready to be used for fetching any file we want.\r\n\r\nWould be nice if we can spare ourselves from writing the downloader script and allow Pooch to manage the entire process by simply passing the files we would like to fetch and the base url from which they can be downloaded. This feature would not be intended for the normal usage of Pooch, but  for one time only: when we need to download the files in order to compute the hashes and create the registry file.\r\n\r\nI'm thinking we could write a function that gets a `pooch.Pooch` instance without a `registry`, a list of the files that wants to be downloaded and the path where the registry file will be saved. It should download every file in the list from the `base_url`, compute the hashes and then creating the registry.\r\nMaybe it can be a method of `pooch.Pooch` class instead of an independent function.\r\n\r\nAny idea or comment is welcome.\r\n\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n\r\n\r\n<!-- Every feature we add is code that we will have to maintain and keep updated. This takes a lot of effort. If you are willing to be involved in the project and help maintain your feature, it will make it easier for us to accept it. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/121", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/121/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/121/events", "html_url": "https://github.com/fatiando/pooch/issues/121", "id": 520182623, "node_id": "MDU6SXNzdWU1MjAxODI2MjM=", "number": 121, "title": "Wrap all docstrings to 79 characters", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-08T19:02:30Z", "updated_at": "2019-11-18T11:29:13Z", "closed_at": "2019-11-18T11:29:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nAfter fatiando/verde#177 raised by @prisae, fatiando/contributing#9 and fatiando/contributing#10 it has been decided that all docstrings must be wrapped to 79 characters per line.\r\nWe should warp all the existing docstrings in Pooch to 79 characters and also configure flake8 to check for this when running the style checks.\r\n\r\nSadly, there's no way (yet) to automatically change all docstrings, but at least we can use flake8 to raise lines that fail. This can be done by setting `max-doc-length` to 79 characters on the flake8 configuration under `setup.cfg`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/114", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/114/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/114/events", "html_url": "https://github.com/fatiando/pooch/issues/114", "id": 512643433, "node_id": "MDU6SXNzdWU1MTI2NDM0MzM=", "number": 114, "title": "Use logging instead of warnings for user feedback", "user": {"login": "danshapero", "id": 3905742, "node_id": "MDQ6VXNlcjM5MDU3NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3905742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danshapero", "html_url": "https://github.com/danshapero", "followers_url": "https://api.github.com/users/danshapero/followers", "following_url": "https://api.github.com/users/danshapero/following{/other_user}", "gists_url": "https://api.github.com/users/danshapero/gists{/gist_id}", "starred_url": "https://api.github.com/users/danshapero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danshapero/subscriptions", "organizations_url": "https://api.github.com/users/danshapero/orgs", "repos_url": "https://api.github.com/users/danshapero/repos", "events_url": "https://api.github.com/users/danshapero/events{/privacy}", "received_events_url": "https://api.github.com/users/danshapero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 3, "created_at": "2019-10-25T17:56:53Z", "updated_at": "2020-01-21T21:39:19Z", "closed_at": "2020-01-21T21:39:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nPooch currently uses warnings to give feedback to users when a file is being downloaded, an archive unpacked, etc. The logging module from the Python standard library is a better fit for this purpose.\r\n\r\n* More easily adjust how important the feedback is -- downloading a file is information, not having permission to create a destination directory is a warning or error\r\n* Users can choose to silence feedback from pooch without silencing warnings from other libraries\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/112", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/112/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/112/events", "html_url": "https://github.com/fatiando/pooch/issues/112", "id": 511421220, "node_id": "MDU6SXNzdWU1MTE0MjEyMjA=", "number": 112, "title": "JOSS paper", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939401, "node_id": "MDU6TGFiZWw5OTM5Mzk0MDE=", "url": "https://api.github.com/repos/fatiando/pooch/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 9, "created_at": "2019-10-23T15:55:20Z", "updated_at": "2019-12-02T17:00:55Z", "closed_at": "2019-12-02T17:00:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I hadn't been considering getting a JOSS paper for Pooch because I thought it wouldn't qualify as \"research software\". But I just noticed that [tqdm has a JOSS paper](https://joss.theoj.org/papers/10.21105/joss.01277), so I think we can make a case for Pooch. After all, other research software would cite Pooch in their papers (ideally). **What do others think? Is this worth pursuing?**\r\n\r\nThe criteria for authorship that seems reasonable to me would be:\r\n\r\n1. Have contributed code or documentation to Pooch beyond typo fixes \r\n2. Read/edit the JOSS paper and give their :+1:\r\n\r\nThis would basically mean anyone [listed on Github](https://github.com/fatiando/pooch/graphs/contributors) that at least reads and OKs the paper. \r\n\r\nAs for the order, we could go with the GitHub contributor order (I think it's by number of commit?), and do alphabetical for a tie break. But I'm not entirely sure how to proceed with this one. Any input would be welcome.\r\n\r\nRight now, potential authors would be me @santisoler @remram44 @hugovk @matthewturk @jrleeman @matthewturk @danshapero. If any of you are interested, please reply to this thread with your consent, affiliation, and ORCID. Also, whether you think it's worth submitting (the paper itself will take ~1h to write copying from our docs).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/105", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/105/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/105/events", "html_url": "https://github.com/fatiando/pooch/issues/105", "id": 508386168, "node_id": "MDU6SXNzdWU1MDgzODYxNjg=", "number": 105, "title": "Release schedule for dropping 2.7 and v1.0.0", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939401, "node_id": "MDU6TGFiZWw5OTM5Mzk0MDE=", "url": "https://api.github.com/repos/fatiando/pooch/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 10, "created_at": "2019-10-17T10:34:58Z", "updated_at": "2020-01-28T14:25:57Z", "closed_at": "2020-01-28T14:25:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The fall of 2019 is here and we can finally drop Python 2.7 (as we had promised). We already have #100 ready to be merged do to just that. We probably shouldn't drop 2.7 without a big warning and we have #97 that works on 2.7 but still hasn't been released. Here is a tentative schedule for the next 2 releases:\r\n\r\n* Make a 0.6.0 release now (before merging #100). It will include #97 and update the warning message to say that this is the last release supporting 2.7 (a PR adding this message is welcome). This version is pretty stable and we haven't broken backwards compatibility in a while.\r\n* After the release, merge #100 (maybe update warnings).\r\n* Release 1.0.0 :confetti_ball:  between now and the end of 2019 with support for Python 3.5+ (and any new features/fixes implemented until then). Our API is pretty stable and we've been good about retaining backwards compatibility. The downloaders and processors mean that Pooch is easily extensible.\r\n\r\nOf course, all of this is up for debate and I'm open to suggestions/critique.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/99", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/99/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/99/events", "html_url": "https://github.com/fatiando/pooch/issues/99", "id": 502627733, "node_id": "MDU6SXNzdWU1MDI2Mjc3MzM=", "number": 99, "title": "Drop support for Python 2.7", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-04T13:09:20Z", "updated_at": "2019-10-22T09:27:24Z", "closed_at": "2019-10-22T09:27:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nWith Unidata/MetPy#1163 on its way and other projects that depend on us not using 2.7 any more, I think we can aim to ditch 2.7 on our next release. We probably don't need many code changes. A few things that come to mind:\r\n\r\n* Remove 2.7 builds from CIs\r\n* Remove 2.7 dependencies and edit `setup.py`\r\n* Remove import code for backports of some modules\r\n* Edit the conda-forge recipe to build `noarch` since we no longer need different dependencies depending on Python version.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/96", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/96/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/96/events", "html_url": "https://github.com/fatiando/pooch/issues/96", "id": 467723082, "node_id": "MDU6SXNzdWU0Njc3MjMwODI=", "number": 96, "title": "Make error when hash doesn't match more informative", "user": {"login": "hmaarrfk", "id": 90008, "node_id": "MDQ6VXNlcjkwMDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/90008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmaarrfk", "html_url": "https://github.com/hmaarrfk", "followers_url": "https://api.github.com/users/hmaarrfk/followers", "following_url": "https://api.github.com/users/hmaarrfk/following{/other_user}", "gists_url": "https://api.github.com/users/hmaarrfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmaarrfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmaarrfk/subscriptions", "organizations_url": "https://api.github.com/users/hmaarrfk/orgs", "repos_url": "https://api.github.com/users/hmaarrfk/repos", "events_url": "https://api.github.com/users/hmaarrfk/events{/privacy}", "received_events_url": "https://api.github.com/users/hmaarrfk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1622032122, "node_id": "MDU6TGFiZWwxNjIyMDMyMTIy", "url": "https://api.github.com/repos/fatiando/pooch/labels/hacktoberfest", "name": "hacktoberfest", "color": "fcbace", "default": false, "description": "Good issues for Hacktoberfest"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 2, "created_at": "2019-07-13T13:54:14Z", "updated_at": "2019-11-26T13:47:59Z", "closed_at": "2019-11-26T13:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n    def _check_download_hash(self, fname, downloaded):\r\n        \"\"\"\r\n        Check the hash of the downloaded file against the one in the registry.\r\n    \r\n        Parameters\r\n        ----------\r\n        fname : str\r\n            The file name in the registry.\r\n        downloaded : str\r\n            The pull path to the downloaded file.\r\n    \r\n        Raises\r\n        ------\r\n        :class:`ValueError`\r\n            If the hashes don't match.\r\n    \r\n        \"\"\"\r\n        tmphash = file_hash(downloaded)\r\n        if tmphash != self.registry[fname]:\r\n            raise ValueError(\r\n                \"Hash of downloaded file '{}' doesn't match the entry in the registry:\"\r\n                \" Expected '{}' and got '{}'.\".format(\r\n>                   downloaded, self.registry[fname], tmphash\r\n                )\r\n            )\r\nE           ValueError: Hash of downloaded file '/home/mark/.cache/scikit-image/tmpydrsiovh' doesn't match the entry in the registry: Expected '8cd81c5fccdbcca6b623a5f157e71b27e91907e667626a0e07da279745e12d19' and got '03097789a3dcbb0e40d20b9ef82537dbc3b670b6a7f2268d735470f22e003a91'.\r\n```\r\n\r\nI think the `fname` should be printed, at least that is probably more related than a tempfile name", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/92", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/92/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/92/events", "html_url": "https://github.com/fatiando/pooch/issues/92", "id": 453289884, "node_id": "MDU6SXNzdWU0NTMyODk4ODQ=", "number": 92, "title": "Re-enable Python 3.5 builds", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-07T00:14:32Z", "updated_at": "2019-06-25T03:32:48Z", "closed_at": "2019-06-25T02:18:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nScikit-image is looking into using Pooch (scikit-image/scikit-image#3945) but they need Python 3.5 still. The code works under 3.5 so there aren't any changes needed to get this working. It's mostly a matter of setting `python_requires` in `setup.py` and enabling the CI builds of 3.5. \r\n\r\nThe problem is that we won't be able to build packages for conda-forge since Pooch isn't a `noarch` package there (because of extra dependencies required for 2.7).\r\n\r\nPinging @stefanv @hmaarrfk. Is this something worth pursuing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/91", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/91/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/91/events", "html_url": "https://github.com/fatiando/pooch/issues/91", "id": 452621001, "node_id": "MDU6SXNzdWU0NTI2MjEwMDE=", "number": 91, "title": "Add progress bar for downloads", "user": {"login": "danshapero", "id": 3905742, "node_id": "MDQ6VXNlcjM5MDU3NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3905742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danshapero", "html_url": "https://github.com/danshapero", "followers_url": "https://api.github.com/users/danshapero/followers", "following_url": "https://api.github.com/users/danshapero/following{/other_user}", "gists_url": "https://api.github.com/users/danshapero/gists{/gist_id}", "starred_url": "https://api.github.com/users/danshapero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danshapero/subscriptions", "organizations_url": "https://api.github.com/users/danshapero/orgs", "repos_url": "https://api.github.com/users/danshapero/repos", "events_url": "https://api.github.com/users/danshapero/events{/privacy}", "received_events_url": "https://api.github.com/users/danshapero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-05T17:18:06Z", "updated_at": "2019-10-17T10:17:15Z", "closed_at": "2019-10-17T10:17:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nAdd a progress bar for downloads using, say, [tqdm](https://github.com/tqdm/tqdm) or [python-progressbar](https://github.com/WoLpH/python-progressbar).\r\nGetting this level of feedback is nice especially if you're on a slow connection.\r\n\r\nCurrently pooch issues a warning when something is being downloaded.\r\nThis is useful feedback because the dataset will be only be downloaded the first time you fetch it.\r\nIf there's more than one way to provide feedback, some changes to the API might be necessary to specify which one.\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/90", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/90/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/90/events", "html_url": "https://github.com/fatiando/pooch/issues/90", "id": 452353713, "node_id": "MDU6SXNzdWU0NTIzNTM3MTM=", "number": 90, "title": "pooch doesn't install on Ubuntu 16.04.6 LTS", "user": {"login": "jafrado", "id": 11479564, "node_id": "MDQ6VXNlcjExNDc5NTY0", "avatar_url": "https://avatars1.githubusercontent.com/u/11479564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jafrado", "html_url": "https://github.com/jafrado", "followers_url": "https://api.github.com/users/jafrado/followers", "following_url": "https://api.github.com/users/jafrado/following{/other_user}", "gists_url": "https://api.github.com/users/jafrado/gists{/gist_id}", "starred_url": "https://api.github.com/users/jafrado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jafrado/subscriptions", "organizations_url": "https://api.github.com/users/jafrado/orgs", "repos_url": "https://api.github.com/users/jafrado/repos", "events_url": "https://api.github.com/users/jafrado/events{/privacy}", "received_events_url": "https://api.github.com/users/jafrado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-05T07:33:18Z", "updated_at": "2019-07-11T05:38:49Z", "closed_at": "2019-07-11T05:38:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description of the problem**\r\n\r\n`pip install pooch` or `pip install .` (from source) fails with an error.\r\n\r\n**Full code that generated the error**\r\n\r\n```python\r\npip install pooch\r\n```\r\n\r\n**Full error message**\r\n\r\n```\r\npip install pooch\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nCollecting pooch\r\n  Using cached https://files.pythonhosted.org/packages/61/59/73a2b4788e1cde829e83277039ac70f2b8f1a4d73dd56c9070ce5c5ccc2c/pooch-0.5.1.tar.gz\r\nRequirement already satisfied: requests in /usr/local/lib/python2.7/dist-packages (from pooch) (2.22.0)\r\nRequirement already satisfied: packaging in /usr/local/lib/python2.7/dist-packages (from pooch) (19.0)\r\nRequirement already satisfied: appdirs in /usr/local/lib/python2.7/dist-packages (from pooch) (1.4.3)\r\nRequirement already satisfied: pathlib; python_version < \"3.5\" in /usr/local/lib/python2.7/dist-packages (from pooch) (1.0.1)\r\nRequirement already satisfied: backports.tempfile; python_version < \"3.5\" in /usr/local/lib/python2.7/dist-packages (from pooch) (1.0)\r\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python2.7/dist-packages (from requests->pooch) (1.25.3)\r\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python2.7/dist-packages (from requests->pooch) (2019.3.9)\r\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python2.7/dist-packages (from requests->pooch) (3.0.4)\r\nRequirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python2.7/dist-packages (from requests->pooch) (2.8)\r\nRequirement already satisfied: six in /usr/local/lib/python2.7/dist-packages (from packaging->pooch) (1.12.0)\r\nRequirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python2.7/dist-packages (from packaging->pooch) (2.4.0)\r\nRequirement already satisfied: backports.weakref in /usr/local/lib/python2.7/dist-packages (from backports.tempfile; python_version < \"3.5\"->pooch) (1.0.post1)\r\nBuilding wheels for collected packages: pooch\r\n  Building wheel for pooch (setup.py) ... error\r\n  ERROR: Complete output from command /usr/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-ww2Yi8/pooch/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-E84pYU --python-tag cp27:\r\n  ERROR: /usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n    warnings.warn(msg)\r\n  /usr/lib/python2.7/dist-packages/setuptools/dist.py:285: UserWarning: Normalizing 'v0.5.1' to '0.5.1'\r\n    normalized_version,\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-2.7\r\n  creating build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/processors.py -> build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/downloaders.py -> build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/core.py -> build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/utils.py -> build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/_version.py -> build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/__init__.py -> build/lib.linux-x86_64-2.7/pooch\r\n  copying pooch/version.py -> build/lib.linux-x86_64-2.7/pooch\r\n  creating build/lib.linux-x86_64-2.7/pooch/tests\r\n  copying pooch/tests/test_utils.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n  copying pooch/tests/utils.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n  copying pooch/tests/test_processors.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n  copying pooch/tests/test_core.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n  copying pooch/tests/test_integration.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n  copying pooch/tests/__init__.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n  creating build/lib.linux-x86_64-2.7/pooch/tests/data\r\n  copying pooch/tests/data/tiny-data.zip -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n  copying pooch/tests/data/tiny-data.txt -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n  copying pooch/tests/data/store.tar.gz -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n  copying pooch/tests/data/tiny-data.tar.gz -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n  error: can't copy 'pooch/tests/data/store': doesn't exist or not a regular file\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for pooch\r\n  Running setup.py clean for pooch\r\nFailed to build pooch\r\nInstalling collected packages: pooch\r\n  Running setup.py install for pooch ... error\r\n    ERROR: Complete output from command /usr/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-ww2Yi8/pooch/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-XDe0Vd/install-record.txt --single-version-externally-managed --compile:\r\n    ERROR: /usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n      warnings.warn(msg)\r\n    /usr/lib/python2.7/dist-packages/setuptools/dist.py:285: UserWarning: Normalizing 'v0.5.1' to '0.5.1'\r\n      normalized_version,\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-2.7\r\n    creating build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/processors.py -> build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/downloaders.py -> build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/core.py -> build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/utils.py -> build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/_version.py -> build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/__init__.py -> build/lib.linux-x86_64-2.7/pooch\r\n    copying pooch/version.py -> build/lib.linux-x86_64-2.7/pooch\r\n    creating build/lib.linux-x86_64-2.7/pooch/tests\r\n    copying pooch/tests/test_utils.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n    copying pooch/tests/utils.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n    copying pooch/tests/test_processors.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n    copying pooch/tests/test_core.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n    copying pooch/tests/test_integration.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n    copying pooch/tests/__init__.py -> build/lib.linux-x86_64-2.7/pooch/tests\r\n    creating build/lib.linux-x86_64-2.7/pooch/tests/data\r\n    copying pooch/tests/data/tiny-data.zip -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n    copying pooch/tests/data/tiny-data.txt -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n    copying pooch/tests/data/store.tar.gz -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n    copying pooch/tests/data/tiny-data.tar.gz -> build/lib.linux-x86_64-2.7/pooch/tests/data\r\n    error: can't copy 'pooch/tests/data/store': doesn't exist or not a regular file\r\n    ----------------------------------------\r\nERROR: Command \"/usr/bin/python -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-ww2Yi8/pooch/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-XDe0Vd/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-ww2Yi8/pooch/\r\n```\r\n\r\n**System information**\r\n\r\n* Ubuntu 16.04.6 LTS\r\n* Python 2.7.2 (sudo apt-get install python)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/89", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/89/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/89/events", "html_url": "https://github.com/fatiando/pooch/issues/89", "id": 452281875, "node_id": "MDU6SXNzdWU0NTIyODE4NzU=", "number": 89, "title": "Check for empty lines in registry files", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1622032122, "node_id": "MDU6TGFiZWwxNjIyMDMyMTIy", "url": "https://api.github.com/repos/fatiando/pooch/labels/hacktoberfest", "name": "hacktoberfest", "color": "fcbace", "default": false, "description": "Good issues for Hacktoberfest"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 0, "created_at": "2019-06-05T02:00:34Z", "updated_at": "2020-01-24T10:15:19Z", "closed_at": "2020-01-24T10:15:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nPooch reads in the files and their hashes from *registry files* using `Pooch.load_registry`. Right now, it fails if there is a blank line anywhere in the file (see https://github.com/fatiando/pooch/blob/master/pooch/core.py#L444).\r\n\r\nIdeally, the code should skip any lines for which `line.strip()` is empty. While we're at it, the line number reported in the error message is off by one because `enumerate` starts from 0 so we should add one to it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/88", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/88/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/88/events", "html_url": "https://github.com/fatiando/pooch/issues/88", "id": 452129777, "node_id": "MDU6SXNzdWU0NTIxMjk3Nzc=", "number": 88, "title": "Improve error message for Pooch.load_registry", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1622032122, "node_id": "MDU6TGFiZWwxNjIyMDMyMTIy", "url": "https://api.github.com/repos/fatiando/pooch/labels/hacktoberfest", "name": "hacktoberfest", "color": "fcbace", "default": false, "description": "Good issues for Hacktoberfest"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 0, "created_at": "2019-06-04T17:56:13Z", "updated_at": "2019-11-26T13:42:03Z", "closed_at": "2019-11-26T13:42:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nThe [error message](https://github.com/fatiando/pooch/blob/master/pooch/core.py#L446) when a registry file cannot be read is not very informative. It should also state the file name and indicate that the error came from trying to parse a pooch registry file.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/83", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/83/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/83/events", "html_url": "https://github.com/fatiando/pooch/issues/83", "id": 446748175, "node_id": "MDU6SXNzdWU0NDY3NDgxNzU=", "number": 83, "title": "Add a section to Training your Pooch about Decompress", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-21T17:53:12Z", "updated_at": "2019-05-21T22:32:42Z", "closed_at": "2019-05-21T22:32:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nNeed an extra paragraph to the \"Post-processing hooks\" section explaining the difference between `Decompress` and `Unzip`/`Untar`. Mainly that it just decompresses a single file, while the others unpack the entire archive (or select members).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/82", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/82/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/82/events", "html_url": "https://github.com/fatiando/pooch/issues/82", "id": 446747610, "node_id": "MDU6SXNzdWU0NDY3NDc2MTA=", "number": 82, "title": "Fix wrong import on \"Training your Pooch\"", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-21T17:51:50Z", "updated_at": "2019-05-21T18:09:57Z", "closed_at": "2019-05-21T18:09:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the problem**\r\n\r\nIn the \"Post-processing hooks\" section there is an import of `UnzipSingle` which doesn't exist anymore and needs to be replaced with `Unzip`. The next import of `Unzip` isn't needed in that case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/76", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/76/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/76/events", "html_url": "https://github.com/fatiando/pooch/issues/76", "id": 442037294, "node_id": "MDU6SXNzdWU0NDIwMzcyOTQ=", "number": 76, "title": "Add an Untar processor", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-09T03:52:06Z", "updated_at": "2019-05-17T21:36:54Z", "closed_at": "2019-05-17T21:36:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nThe `pooch.Unzip` processor unpacks a zip archive to a folder in the local file system after it's downloaded. We need a `pooch.Untar` processor that does the same thing but for `.tar` archives. The [tarfile](https://docs.python.org/3/library/tarfile.html) module can be used with the bonus that it supports compressed archives out of the box.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/73", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/73/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/73/events", "html_url": "https://github.com/fatiando/pooch/issues/73", "id": 439395896, "node_id": "MDU6SXNzdWU0MzkzOTU4OTY=", "number": 73, "title": "Add decompression processors", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-02T01:19:03Z", "updated_at": "2019-05-21T03:54:56Z", "closed_at": "2019-05-21T03:54:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the desired feature**\r\n\r\nMany times, downloaded files will be compressed to save space in storage and during download. But it's sometimes a hassle to decompress them every time before reading the file. In the case of netCDF grids, decompressing into a temporary file makes it impossible to have `xarray` lazily load the grid. \r\n\r\n#59 introduced processor hooks and #72 introduced the `Unzip` processor. Following this logic, it would be good to have a `Decompress` processor that decompresses the downloaded file. It can guess the compression method from the file name or be given it explicitly as an `__init__` argument. \r\n\r\nThe class would look something like this: \r\n\r\n```python\r\nclass Decompress:\r\n    def __init__(self, method=\"auto\"):\r\n        self.method = method\r\n    def __call__(self, fname, action, pooch):\r\n        ...\r\n        return decompressed\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/65", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/65/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/65/events", "html_url": "https://github.com/fatiando/pooch/issues/65", "id": 436933152, "node_id": "MDU6SXNzdWU0MzY5MzMxNTI=", "number": 65, "title": "Fetching data that requires a username + password", "user": {"login": "danshapero", "id": 3905742, "node_id": "MDQ6VXNlcjM5MDU3NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3905742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danshapero", "html_url": "https://github.com/danshapero", "followers_url": "https://api.github.com/users/danshapero/followers", "following_url": "https://api.github.com/users/danshapero/following{/other_user}", "gists_url": "https://api.github.com/users/danshapero/gists{/gist_id}", "starred_url": "https://api.github.com/users/danshapero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danshapero/subscriptions", "organizations_url": "https://api.github.com/users/danshapero/orgs", "repos_url": "https://api.github.com/users/danshapero/repos", "events_url": "https://api.github.com/users/danshapero/events{/privacy}", "received_events_url": "https://api.github.com/users/danshapero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T22:24:38Z", "updated_at": "2019-05-01T23:29:59Z", "closed_at": "2019-05-01T23:29:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some data sets, such as those hosted by the [Global Hydrology Resource Center](https://ghrc.nsstc.nasa.gov/home/) or the [National Snow and Ice Data Center](https://nsidc.org/), require a username and password for access. It would be really convenient if pooch had a way to ask the user for a password when the example data require it. The repo owner would probably have to specify something in the registry to let pooch know that authentication needs to happen.\r\n\r\nThe requests library includes support for [authentication](http://2.python-requests.org/en/master/user/authentication/), which should be useful. I can help implement this but I don't have a great idea of what the API should be.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/63", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/63/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/63/events", "html_url": "https://github.com/fatiando/pooch/issues/63", "id": 433951329, "node_id": "MDU6SXNzdWU0MzM5NTEzMjk=", "number": 63, "title": "demo of preferrred way to get a hash value to match the one in remote for thousands of file.", "user": {"login": "JustinGOSSES", "id": 11600445, "node_id": "MDQ6VXNlcjExNjAwNDQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/11600445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustinGOSSES", "html_url": "https://github.com/JustinGOSSES", "followers_url": "https://api.github.com/users/JustinGOSSES/followers", "following_url": "https://api.github.com/users/JustinGOSSES/following{/other_user}", "gists_url": "https://api.github.com/users/JustinGOSSES/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustinGOSSES/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustinGOSSES/subscriptions", "organizations_url": "https://api.github.com/users/JustinGOSSES/orgs", "repos_url": "https://api.github.com/users/JustinGOSSES/repos", "events_url": "https://api.github.com/users/JustinGOSSES/events{/privacy}", "received_events_url": "https://api.github.com/users/JustinGOSSES/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-16T19:38:15Z", "updated_at": "2019-04-19T19:09:43Z", "closed_at": "2019-04-19T17:12:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add example to readme of how to get a hash values to match ones in remote repo for thousands of files. Specifically, code you might run in the command line.\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes, test.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/60", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/60/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/60/events", "html_url": "https://github.com/fatiando/pooch/issues/60", "id": 427681976, "node_id": "MDU6SXNzdWU0Mjc2ODE5NzY=", "number": 60, "title": "Typo on create function docstring", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T12:39:32Z", "updated_at": "2019-04-01T18:32:37Z", "closed_at": "2019-04-01T18:32:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Description of the problem**\r\n\r\nWhere says \"projection\" should say \"project\" ([L34](https://github.com/fatiando/pooch/blob/86cd59982ac79ea8eaec75f74d5e1e009c1f9c09/pooch/core.py#L34)).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/47", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/47/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/47/events", "html_url": "https://github.com/fatiando/pooch/issues/47", "id": 423039946, "node_id": "MDU6SXNzdWU0MjMwMzk5NDY=", "number": 47, "title": "Drop support for Python 3.5", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-20T02:44:28Z", "updated_at": "2019-03-27T22:38:03Z", "closed_at": "2019-03-27T22:38:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Conda-forge is no longer building 3.5 packages [since October 2018](http://conda-forge.org/docs/user/introduction.html#pinned-announcements). We should probably remove it from our CIs and officially drop support for new releases. This will mean updating:\r\n\r\n* `doc/install.rst`\r\n* `setup.py` \r\n* `.travis.yml` and `.appveyor.yml`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/46", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/46/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/46/events", "html_url": "https://github.com/fatiando/pooch/issues/46", "id": 414768334, "node_id": "MDU6SXNzdWU0MTQ3NjgzMzQ=", "number": 46, "title": "Check availability of remote files", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-26T19:02:32Z", "updated_at": "2019-03-26T03:18:22Z", "closed_at": "2019-03-26T03:18:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Feedback or description of feature requested\r\n\r\nWould be nice to have a method inside `Pooch` to check if any file from the `registry` is available in the remote url. The idea is not to fetch the entire file, but only snoop if it's available for download (like `wget --spider` does).\r\n\r\nThis feature could help to build test functions involving `Pooch` objects in case of big files or huge registries. In some cases it's only necessary to test if the data is available online instead of downloading the entire set of files, what could take a lot of time.\r\nAlso, this feature could be a fast way to test if the host is up.\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/43", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/43/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/43/events", "html_url": "https://github.com/fatiando/pooch/issues/43", "id": 411692997, "node_id": "MDU6SXNzdWU0MTE2OTI5OTc=", "number": 43, "title": "Use the XDG_CACHE_HOME environment variable if it exists", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-19T00:21:02Z", "updated_at": "2019-03-23T03:31:02Z", "closed_at": "2019-03-23T03:29:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Following the discussion in #26, we need to make some changes to the `os_cache` function in [pooch/utils.py](https://github.com/fatiando/pooch/blob/master/pooch/utils.py) function to be compliant with the FreeDesktop standards:\r\n\r\n* Add an option `check_environment` to the function that defaults to `False`\r\n* If `check_environment == True`, check if the `XDG_CACHE_HOME` environment variable is defined.\r\n* If it is, use it to define the default cache location instead of `~/.cache` on Linux.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/40", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/40/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/40/events", "html_url": "https://github.com/fatiando/pooch/issues/40", "id": 402749003, "node_id": "MDU6SXNzdWU0MDI3NDkwMDM=", "number": 40, "title": "Typo in Pooch docstring", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-24T15:04:15Z", "updated_at": "2019-01-24T16:30:31Z", "closed_at": "2019-01-24T16:30:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Typo in docstring\r\n\r\nThere's a typo on `load_registry` method of `Pooch` class on [this line](https://github.com/fatiando/pooch/blob/master/pooch/core.py#L330): should say `from` instead of `form`.\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/39", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/39/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/39/events", "html_url": "https://github.com/fatiando/pooch/issues/39", "id": 400267594, "node_id": "MDU6SXNzdWU0MDAyNjc1OTQ=", "number": 39, "title": "Project logo", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-17T13:03:05Z", "updated_at": "2019-03-29T04:27:50Z", "closed_at": "2019-03-29T04:27:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Pooch currently has no logo. I'm not the best designer and would really welcome any contributions or ideas on this front. A few requirements of the logo:\r\n\r\n* Simple design with the minimum number of colors\r\n* Look good in large and small sizes\r\n* Work with dark or light backgrounds\r\n* Square proportions (so it can work in a banner, profile picture, favicon, sticker, etc)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/36", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/36/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/36/events", "html_url": "https://github.com/fatiando/pooch/issues/36", "id": 379271535, "node_id": "MDU6SXNzdWUzNzkyNzE1MzU=", "number": 36, "title": "Unwanted ~ directory creation in current directory", "user": {"login": "santisoler", "id": 11541317, "node_id": "MDQ6VXNlcjExNTQxMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/11541317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santisoler", "html_url": "https://github.com/santisoler", "followers_url": "https://api.github.com/users/santisoler/followers", "following_url": "https://api.github.com/users/santisoler/following{/other_user}", "gists_url": "https://api.github.com/users/santisoler/gists{/gist_id}", "starred_url": "https://api.github.com/users/santisoler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santisoler/subscriptions", "organizations_url": "https://api.github.com/users/santisoler/orgs", "repos_url": "https://api.github.com/users/santisoler/repos", "events_url": "https://api.github.com/users/santisoler/events{/privacy}", "received_events_url": "https://api.github.com/users/santisoler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-09T18:26:20Z", "updated_at": "2018-11-15T19:27:19Z", "closed_at": "2018-11-15T19:27:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Unwanted ~ directory creation in current directory\r\n\r\nWhen a `Pooch` object is created, an unwanted `~` directory \r\ns created on the working directory when using a `pooch.os_cache()` path.\r\n\r\n**Are you willing to help implement and maintain this feature?** Yes\r\n\r\n\r\n## Full code that generated the error\r\n\r\nWhen running the following simple code:\r\n\r\n```python\r\nimport pooch\r\n\r\nGOODBOY = pooch.create(\r\n    path=pooch.os_cache(\"pooch_test\"),\r\n    base_url=\"https://github.com/fatiando/pooch/raw/master/data/\",\r\n    registry={\r\n        \"tiny-data.txt\":\r\n            \"baee0894dba14b12085eacb204284b97e362f4f3e5a5807693cc90ef415c1b2d\"\r\n    }\r\n)\r\n\r\nfname = GOODBOY.fetch(\"tiny-data.txt\")\r\n```\r\nI get the following output:\r\n```\r\n/home/santi/.anaconda3/envs/pooch_test/lib/python3.7/site-packages/pooch/core.py:259: UserWarning: Downloading data file 'tiny-data.txt' from remote data store 'https://github.com/fatiando/pooch/raw/master/data/' to '~/.cache/pooch_test'.\r\n  action, fname, self.base_url, str(self.path)\r\n```\r\nAnd the file was correctly downloaded:\r\n```\r\n$ tree ~/.cache/pooch_test/\r\n/home/santi/.cache/pooch_test/\r\n\u2514\u2500\u2500 tiny-data.txt\r\n\r\n0 directories, 1 file\r\n```\r\nSeems that the function works as expected, but an unwanted `~` directory has been created on the current directory:\r\n```\r\n$ tree -a\r\n.\r\n\u2514\u2500\u2500 ~\r\n    \u2514\u2500\u2500 .cache\r\n        \u2514\u2500\u2500 pooch_test\r\n\r\n3 directories, 0 files\r\n```\r\n\r\n## System information\r\n\r\n* Operating system: GNU/Linux (Manjaro XFCE)\r\n* Python installation (Anaconda, system, ETS): Anaconda\r\n* Version of Python: `3.7.0`\r\n* Version of this package: `v0.2.0`\r\n* If using conda, paste the output of `conda list` below:\r\n\r\n```\r\n# packages in environment at /home/santi/.anaconda3/envs/pooch_test:\r\n#\r\n# Name                    Version                   Build  Channel\r\nasn1crypto                0.24.0                py37_1003    conda-forge\r\nbzip2                     1.0.6                h470a237_2    conda-forge\r\nca-certificates           2018.10.15           ha4d7672_0    conda-forge\r\ncertifi                   2018.10.15            py37_1000    conda-forge\r\ncffi                      1.11.5           py37h5e8e0c9_1    conda-forge\r\nchardet                   3.0.4                 py37_1003    conda-forge\r\ncryptography              2.3.1            py37hdffb7b8_0    conda-forge\r\nidna                      2.7                   py37_1002    conda-forge\r\nlibffi                    3.2.1                hfc679d8_5    conda-forge\r\nlibgcc-ng                 7.2.0                hdf63c60_3    conda-forge\r\nlibstdcxx-ng              7.2.0                hdf63c60_3    conda-forge\r\nncurses                   6.1                  hfc679d8_1    conda-forge\r\nopenssl                   1.0.2p               h470a237_1    conda-forge\r\npackaging                 18.0                       py_0    conda-forge\r\npip                       18.1                  py37_1000    conda-forge\r\npooch                     0.2.0                 py37_1000    conda-forge\r\npycparser                 2.19                       py_0    conda-forge\r\npyopenssl                 18.0.0                py37_1000    conda-forge\r\npyparsing                 2.3.0                      py_0    conda-forge\r\npysocks                   1.6.8                 py37_1002    conda-forge\r\npython                    3.7.0                h5001a0f_4    conda-forge\r\nreadline                  7.0                  haf1bffa_1    conda-forge\r\nrequests                  2.20.0                py37_1000    conda-forge\r\nsetuptools                40.5.0                   py37_0    conda-forge\r\nsix                       1.11.0                py37_1001    conda-forge\r\nsqlite                    3.25.3               hb1c47c0_0    conda-forge\r\ntk                        8.6.8                ha92aebf_0    conda-forge\r\nurllib3                   1.23                  py37_1001    conda-forge\r\nwheel                     0.32.2                   py37_0    conda-forge\r\nxz                        5.2.4                h470a237_1    conda-forge\r\nzlib                      1.2.11               h470a237_3    conda-forge\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/35", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/35/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/35/events", "html_url": "https://github.com/fatiando/pooch/issues/35", "id": 377106798, "node_id": "MDU6SXNzdWUzNzcxMDY3OTg=", "number": 35, "title": "Add mechanism for post download hooks", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-04T00:20:03Z", "updated_at": "2019-04-02T16:52:28Z", "closed_at": "2019-04-02T16:52:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Feedback or description of feature requested\r\n\r\nIt would be great to provide a mechanism to specify functions that are run after a file is downloaded (further checks, unpacking into a cache folder, etc). This could be implemented as a callback function that receives the `Pooch` object (`self`) and the file name that was downloaded. It would be called from `Pooch._download_file` after the download is finished.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/28", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/28/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/28/events", "html_url": "https://github.com/fatiando/pooch/issues/28", "id": 372139693, "node_id": "MDU6SXNzdWUzNzIxMzk2OTM=", "number": 28, "title": "New release with Python 3.7 support", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-19T22:47:58Z", "updated_at": "2018-11-01T01:20:38Z", "closed_at": "2018-11-01T01:20:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With #25 merged, we know that pooch works on 3.7. We should probably cut a new release and rebuild the conda packages.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/27", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/27/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/27/events", "html_url": "https://github.com/fatiando/pooch/issues/27", "id": 359740063, "node_id": "MDU6SXNzdWUzNTk3NDAwNjM=", "number": 27, "title": "Refactor the Pooch class to make it easily subclassed", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/3", "html_url": "https://github.com/fatiando/pooch/milestone/3", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/3/labels", "id": 3646574, "node_id": "MDk6TWlsZXN0b25lMzY0NjU3NA==", "number": 3, "title": "v1.0.0", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2018-09-11T21:05:02Z", "updated_at": "2020-07-30T08:58:36Z", "due_on": null, "closed_at": "2020-07-30T08:58:36Z"}, "comments": 4, "created_at": "2018-09-13T04:39:06Z", "updated_at": "2019-05-01T23:29:59Z", "closed_at": "2019-05-01T23:29:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From @remram44 comment on #4, it would be great to expose more of the inner workings of the `Pooch` class as methods. This would make it easy to subclass it and overwrite those methods. The `_download_file` method should also be made public (remove the leading `_`).\r\n\r\nAny ideas and suggestions on what should be refactored are welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/26", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/26/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/26/events", "html_url": "https://github.com/fatiando/pooch/issues/26", "id": 359607383, "node_id": "MDU6SXNzdWUzNTk2MDczODM=", "number": 26, "title": "Follow FreeDesktop directory specifications", "user": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939395, "node_id": "MDU6TGFiZWw5OTM5MzkzOTU=", "url": "https://api.github.com/repos/fatiando/pooch/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-12T18:50:41Z", "updated_at": "2019-02-19T00:21:55Z", "closed_at": "2019-02-19T00:21:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `~/.cache` is not [what the standard says](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html).\r\n\r\nhttps://github.com/fatiando/pooch/blob/9a1a5f92a1b1ffde29136468605eb9d7c14795de/pooch/utils.py#L49-L50", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/22", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/22/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/22/events", "html_url": "https://github.com/fatiando/pooch/issues/22", "id": 354883253, "node_id": "MDU6SXNzdWUzNTQ4ODMyNTM=", "number": 22, "title": "pooch.create should test for write access to directories and have a failback for failures", "user": {"login": "akrherz", "id": 210858, "node_id": "MDQ6VXNlcjIxMDg1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/210858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akrherz", "html_url": "https://github.com/akrherz", "followers_url": "https://api.github.com/users/akrherz/followers", "following_url": "https://api.github.com/users/akrherz/following{/other_user}", "gists_url": "https://api.github.com/users/akrherz/gists{/gist_id}", "starred_url": "https://api.github.com/users/akrherz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akrherz/subscriptions", "organizations_url": "https://api.github.com/users/akrherz/orgs", "repos_url": "https://api.github.com/users/akrherz/repos", "events_url": "https://api.github.com/users/akrherz/events{/privacy}", "received_events_url": "https://api.github.com/users/akrherz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939395, "node_id": "MDU6TGFiZWw5OTM5MzkzOTU=", "url": "https://api.github.com/repos/fatiando/pooch/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/2", "html_url": "https://github.com/fatiando/pooch/milestone/2", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/2/labels", "id": 3605186, "node_id": "MDk6TWlsZXN0b25lMzYwNTE4Ng==", "number": 2, "title": "v0.1.1", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2018-08-28T20:38:20Z", "updated_at": "2018-09-11T21:05:18Z", "due_on": null, "closed_at": "2018-09-11T21:05:18Z"}, "comments": 11, "created_at": "2018-08-28T20:05:20Z", "updated_at": "2018-08-30T01:01:35Z", "closed_at": "2018-08-30T01:01:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "See realworld implementation problem with Unidata/MetPy#933\r\n\r\n`pooch.create` can fail to write to whatever cache directory it is presented with.  A failback mechanism should exist, like what does with `matplotlib` when it attempts to find writable locations.  There is also a [XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) for this. \r\n\r\n```python\r\nPOOCH = pooch.create(\r\n    path=pooch.os_cache('metpy'),\r\n    base_url='https://github.com/Unidata/MetPy/raw/{version}/staticdata/',\r\n    version='v' + __version__,\r\n    version_dev='master',\r\n    env='TEST_DATA_DIR')\r\n```\r\n\r\n## Full error message\r\n\r\n```\r\nFile \"/opt/miniconda3/envs/prod/lib/python3.6/site-packages/pooch/core.py\", line 143, in create\r\n   os.makedirs(versioned_path)\r\n File \"/opt/miniconda3/envs/prod/lib/python3.6/os.py\", line 210, in makedirs\r\n     makedirs(head, mode, exist_ok)\r\n  File \"/opt/miniconda3/envs/prod/lib/python3.6/os.py\", line 210, in makedirs\r\n    makedirs(head, mode, exist_ok)\r\n  File \"/opt/miniconda3/envs/prod/lib/python3.6/os.py\", line 220, in makedirs\r\n    mkdir(name, mode)\r\nPermissionError: [Errno 13] Permission denied: '/usr/share/httpd/.cache'\r\n```\r\n\r\nthank you\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/21", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/21/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/21/events", "html_url": "https://github.com/fatiando/pooch/issues/21", "id": 353565809, "node_id": "MDU6SXNzdWUzNTM1NjU4MDk=", "number": 21, "title": "Add a \"Projects using Pooch\" section to the README", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/2", "html_url": "https://github.com/fatiando/pooch/milestone/2", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/2/labels", "id": 3605186, "node_id": "MDk6TWlsZXN0b25lMzYwNTE4Ng==", "number": 2, "title": "v0.1.1", "description": "", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2018-08-28T20:38:20Z", "updated_at": "2018-09-11T21:05:18Z", "due_on": null, "closed_at": "2018-09-11T21:05:18Z"}, "comments": 0, "created_at": "2018-08-23T21:46:35Z", "updated_at": "2018-08-30T22:44:14Z", "closed_at": "2018-08-30T22:44:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "So far, Pooch is being used in Verde and MetPy. It would be cool to list that in the README and add a request for PRs in case people are using it in their projects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/13", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/13/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/13/events", "html_url": "https://github.com/fatiando/pooch/issues/13", "id": 345064886, "node_id": "MDU6SXNzdWUzNDUwNjQ4ODY=", "number": 13, "title": "Add an automodule for the top level package", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/1", "html_url": "https://github.com/fatiando/pooch/milestone/1", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/1/labels", "id": 3512998, "node_id": "MDk6TWlsZXN0b25lMzUxMjk5OA==", "number": 1, "title": "v0.1", "description": "Use Pooch in the wild to see if anything breaks before the first release.", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2018-07-20T23:09:39Z", "updated_at": "2018-09-11T21:05:20Z", "due_on": null, "closed_at": "2018-09-11T21:05:20Z"}, "comments": 0, "created_at": "2018-07-27T02:06:33Z", "updated_at": "2018-07-27T05:02:34Z", "closed_at": "2018-07-27T05:02:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The API docs only use autodoc on the functions and classes. So a link to the top level `pooch` package like <code>:mod:\\`pooch\\`</code> won't work. Need to add an `.. automodule:: pooch` to `docs/api/index.rst`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/10", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/10/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/10/events", "html_url": "https://github.com/fatiando/pooch/issues/10", "id": 343847096, "node_id": "MDU6SXNzdWUzNDM4NDcwOTY=", "number": 10, "title": "Add a python_requires field to setup.py", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/1", "html_url": "https://github.com/fatiando/pooch/milestone/1", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/1/labels", "id": 3512998, "node_id": "MDk6TWlsZXN0b25lMzUxMjk5OA==", "number": 1, "title": "v0.1", "description": "Use Pooch in the wild to see if anything breaks before the first release.", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2018-07-20T23:09:39Z", "updated_at": "2018-09-11T21:05:20Z", "due_on": null, "closed_at": "2018-09-11T21:05:20Z"}, "comments": 0, "created_at": "2018-07-24T01:03:59Z", "updated_at": "2018-07-27T02:49:04Z", "closed_at": "2018-07-27T02:49:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This tells pip which versions of Python are needed. In our case, >=3.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/8", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/8/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/8/events", "html_url": "https://github.com/fatiando/pooch/issues/8", "id": 343271881, "node_id": "MDU6SXNzdWUzNDMyNzE4ODE=", "number": 8, "title": "Try using Pooch in MetPy", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939398, "node_id": "MDU6TGFiZWw5OTM5MzkzOTg=", "url": "https://api.github.com/repos/fatiando/pooch/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-20T23:11:27Z", "updated_at": "2018-08-23T18:45:22Z", "closed_at": "2018-08-23T18:45:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Use Pooch to replace the [MetPy](https://github.com/Unidata/MetPy) data caching system. This will help test the usefulness of loading a registry file from a file since they have a ton of data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/7", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/7/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/7/events", "html_url": "https://github.com/fatiando/pooch/issues/7", "id": 343271563, "node_id": "MDU6SXNzdWUzNDMyNzE1NjM=", "number": 7, "title": "Try using Pooch in Verde", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/fatiando/pooch/milestones/1", "html_url": "https://github.com/fatiando/pooch/milestone/1", "labels_url": "https://api.github.com/repos/fatiando/pooch/milestones/1/labels", "id": 3512998, "node_id": "MDk6TWlsZXN0b25lMzUxMjk5OA==", "number": 1, "title": "v0.1", "description": "Use Pooch in the wild to see if anything breaks before the first release.", "creator": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2018-07-20T23:09:39Z", "updated_at": "2018-09-11T21:05:20Z", "due_on": null, "closed_at": "2018-09-11T21:05:20Z"}, "comments": 3, "created_at": "2018-07-20T23:09:05Z", "updated_at": "2018-07-30T20:11:12Z", "closed_at": "2018-07-27T04:31:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Try replacing the custom code in [Verde](https://github.com/fatiando/verde) with Pooch to see if we find any problems in the wild.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fatiando/pooch/issues/4", "repository_url": "https://api.github.com/repos/fatiando/pooch", "labels_url": "https://api.github.com/repos/fatiando/pooch/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/fatiando/pooch/issues/4/comments", "events_url": "https://api.github.com/repos/fatiando/pooch/issues/4/events", "html_url": "https://github.com/fatiando/pooch/issues/4", "id": 342959227, "node_id": "MDU6SXNzdWUzNDI5NTkyMjc=", "number": 4, "title": "Data in more than one remote source", "user": {"login": "leouieda", "id": 290082, "node_id": "MDQ6VXNlcjI5MDA4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/290082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leouieda", "html_url": "https://github.com/leouieda", "followers_url": "https://api.github.com/users/leouieda/followers", "following_url": "https://api.github.com/users/leouieda/following{/other_user}", "gists_url": "https://api.github.com/users/leouieda/gists{/gist_id}", "starred_url": "https://api.github.com/users/leouieda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leouieda/subscriptions", "organizations_url": "https://api.github.com/users/leouieda/orgs", "repos_url": "https://api.github.com/users/leouieda/repos", "events_url": "https://api.github.com/users/leouieda/events{/privacy}", "received_events_url": "https://api.github.com/users/leouieda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 993939397, "node_id": "MDU6TGFiZWw5OTM5MzkzOTc=", "url": "https://api.github.com/repos/fatiando/pooch/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 993939399, "node_id": "MDU6TGFiZWw5OTM5MzkzOTk=", "url": "https://api.github.com/repos/fatiando/pooch/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-20T03:19:18Z", "updated_at": "2018-10-26T23:19:35Z", "closed_at": "2018-10-26T23:19:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, we assume that all the sample data is in the same remote source. This might not be the case for many projects if they are using publicly available data. It would be great to be able to specify the a remote URL for individual entries in the registry (which should probably not be versioned). \r\n\r\nOne of doing this that might not require much refactoring is to include a new attribute in `Pooch.registry_urls` that is a dictionary mapping file names to remote URLs where they can be downloaded.  We should not append the file name to this URL. The `Pooch._download_file` method can then check `if fname in self.registry_urls` and use `self.registry_urls[fname]` as the download source instead.", "performed_via_github_app": null, "score": 1.0}]}