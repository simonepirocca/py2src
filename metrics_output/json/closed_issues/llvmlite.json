{"total_count": 180, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/numba/llvmlite/issues/622", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/622/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/622/events", "html_url": "https://github.com/numba/llvmlite/issues/622", "id": 680609807, "node_id": "MDU6SXNzdWU2ODA2MDk4MDc=", "number": 622, "title": "Failing to install llvmlite on Raspberry Pi 4", "user": {"login": "ViliamVadocz", "id": 26529068, "node_id": "MDQ6VXNlcjI2NTI5MDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/26529068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ViliamVadocz", "html_url": "https://github.com/ViliamVadocz", "followers_url": "https://api.github.com/users/ViliamVadocz/followers", "following_url": "https://api.github.com/users/ViliamVadocz/following{/other_user}", "gists_url": "https://api.github.com/users/ViliamVadocz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ViliamVadocz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ViliamVadocz/subscriptions", "organizations_url": "https://api.github.com/users/ViliamVadocz/orgs", "repos_url": "https://api.github.com/users/ViliamVadocz/repos", "events_url": "https://api.github.com/users/ViliamVadocz/events{/privacy}", "received_events_url": "https://api.github.com/users/ViliamVadocz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-18T00:48:48Z", "updated_at": "2020-08-18T16:39:44Z", "closed_at": "2020-08-18T12:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to install `llvmlite` on my Raspberry Pi 4 (Model B).\r\n\r\nWhen I try `pip3 install llvmlite` I get this:\r\n\r\n```\r\npi@raspberrypi:~ $ pip3 install llvmlite\r\nLooking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple\r\nCollecting llvmlite\r\n  Using cached https://files.pythonhosted.org/packages/0b/96/07bfa93a103fb9e3e9ae7f9f7c6687ae714aee66b6f3000da3fad71e0aa2/llvmlite-0.34.0.tar.gz\r\nBuilding wheels for collected packages: llvmlite\r\n  Running setup.py bdist_wheel for llvmlite ... error\r\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-ctz6mobg/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/pip-wheel-qx3uri_w --python-tag cp37:\r\n  running bdist_wheel\r\n  /usr/bin/python3 /tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\r\n  LLVM version... 7.0.1\r\n  \r\n  Traceback (most recent call last):\r\n    File \"/tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\", line 191, in <module>\r\n      main()\r\n    File \"/tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\", line 181, in main\r\n      main_posix('linux', '.so')\r\n    File \"/tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\", line 143, in main_posix\r\n      raise RuntimeError(msg)\r\n  RuntimeError: Building llvmlite requires LLVM 10.0.x or 9.0.x, got '7.0.1'. Be sure to set LLVM_CONFIG to the right executable path.\r\n  Read the documentation at http://llvmlite.pydata.org/ for more information about building llvmlite.\r\n  \r\n  error: command '/usr/bin/python3' failed with exit status 1\r\n  \r\n  ----------------------------------------\r\n  Failed building wheel for llvmlite\r\n  Running setup.py clean for llvmlite\r\nFailed to build llvmlite\r\nInstalling collected packages: llvmlite\r\n  Running setup.py install for llvmlite ... error\r\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-ctz6mobg/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-5ychz866/install-record.txt --single-version-externally-managed --compile --user --prefix=:\r\n    running install\r\n    running build\r\n    got version from file /tmp/pip-install-ctz6mobg/llvmlite/llvmlite/_version.py {'version': '0.34.0', 'full': 'c5889c9e98c6b19d5d85ebdd982d64a03931f8e2'}\r\n    running build_ext\r\n    /usr/bin/python3 /tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\r\n    LLVM version... 7.0.1\r\n    \r\n    Traceback (most recent call last):\r\n      File \"/tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\", line 191, in <module>\r\n        main()\r\n      File \"/tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\", line 181, in main\r\n        main_posix('linux', '.so')\r\n      File \"/tmp/pip-install-ctz6mobg/llvmlite/ffi/build.py\", line 143, in main_posix\r\n        raise RuntimeError(msg)\r\n    RuntimeError: Building llvmlite requires LLVM 10.0.x or 9.0.x, got '7.0.1'. Be sure to set LLVM_CONFIG to the right executable path.\r\n    Read the documentation at http://llvmlite.pydata.org/ for more information about building llvmlite.\r\n    \r\n    error: command '/usr/bin/python3' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-ctz6mobg/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-5ychz866/install-record.txt --single-version-externally-managed --compile --user --prefix=\" failed with error code 1 in /tmp/pip-install-ctz6mobg/llvmlite/\r\n```\r\n\r\nThe [docs](https://llvmlite.readthedocs.io/en/latest/admin-guide/install.html) mention that I don't need to install LLVM, but I tried `apt-get install llvm` anyway. It didn't seem to help. I am primarily a Windows user so I am not that familiar with `apt-get` but I also tried `apt-get install llvm=10.0.0`, but I received an error: `Version '10.0.0' for 'llvm' was not found`.\r\n\r\nI tried `pip3 install librosa==0.4.2` mentioned in an [old issue](https://github.com/karolpiczak/EARS/issues/4), but that also seemed to do nothing useful.\r\n\r\nDo you have any suggestions for what else I could try?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/619", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/619/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/619/events", "html_url": "https://github.com/numba/llvmlite/issues/619", "id": 678027653, "node_id": "MDU6SXNzdWU2NzgwMjc2NTM=", "number": 619, "title": "Publishing 0.34.0 to PyPI", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242040, "node_id": "MDU6TGFiZWwxMjAyNDIwNDA=", "url": "https://api.github.com/repos/numba/llvmlite/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-12T22:57:27Z", "updated_at": "2020-08-13T08:50:39Z", "closed_at": "2020-08-13T08:33:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like [`0.34.0`]( https://github.com/numba/llvmlite/releases/tag/v0.34.0 ) was tagged recently. Though it doesn't appear there are PyPI packages (unless I'm missing something). Would it be possible to upload PyPI packages as well (in particular an `sdist` would be quite helpful ;)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/608", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/608/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/608/events", "html_url": "https://github.com/numba/llvmlite/issues/608", "id": 666584455, "node_id": "MDU6SXNzdWU2NjY1ODQ0NTU=", "number": 608, "title": "Cannot install llvmlite on JetsonTX2 with python2", "user": {"login": "saeedarabi92", "id": 25854555, "node_id": "MDQ6VXNlcjI1ODU0NTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/25854555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeedarabi92", "html_url": "https://github.com/saeedarabi92", "followers_url": "https://api.github.com/users/saeedarabi92/followers", "following_url": "https://api.github.com/users/saeedarabi92/following{/other_user}", "gists_url": "https://api.github.com/users/saeedarabi92/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeedarabi92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeedarabi92/subscriptions", "organizations_url": "https://api.github.com/users/saeedarabi92/orgs", "repos_url": "https://api.github.com/users/saeedarabi92/repos", "events_url": "https://api.github.com/users/saeedarabi92/events{/privacy}", "received_events_url": "https://api.github.com/users/saeedarabi92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242040, "node_id": "MDU6TGFiZWwxMjAyNDIwNDA=", "url": "https://api.github.com/repos/numba/llvmlite/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-27T21:05:36Z", "updated_at": "2020-07-27T21:30:29Z", "closed_at": "2020-07-27T21:30:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've built LLVM from source on my jetson TX2 using:\r\n\r\n```\r\n$ wget http://releases.llvm.org/9.0.0/llvm-9.0.0.src.tar.xz\r\n$ tar -xvf llvm-9.0.0.src.tar.xz\r\n$ cd llvm-9.0.0.src\r\n$ mkdir llvm_build_dir\r\n$ cd llvm_build_dir/\r\n$ cmake ../ -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=\"ARM\"\r\n$ make -j4\r\n$ sudo make install\r\n$ cd bin/\r\n$ echo \"export LLVM_CONFIG=\\\"\"`pwd`\"/llvm-config\\\"\" >> ~/.bashrc\r\n$ echo \"alias llvm='\"`pwd`\"/llvm-lit'\" >> ~/.bashrc\r\n$ source ~/.bashrc\r\n```\r\n\r\nWhen I try to install llvmlite, however, I receive this error:\r\n\r\n```\r\nnvidia@saeed:~$ sudo pip2 install llvmlite\r\nDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\r\nWARNING: The directory '/home/nvidia/.cache/pip' or its parent directory is not owned or is not writable by the current user. The cache has been disabled. Check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.\r\nCollecting llvmlite\r\n  Downloading llvmlite-0.32.1.tar.gz (104 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 104 kB 2.9 MB/s \r\nBuilding wheels for collected packages: llvmlite\r\n  Building wheel for llvmlite (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python2 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-_Weitz/llvmlite/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-_Weitz/llvmlite/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-H4d71I\r\n       cwd: /tmp/pip-install-_Weitz/llvmlite/\r\n  Complete output (7 lines):\r\n  running bdist_wheel\r\n  /usr/bin/python2 /tmp/pip-install-_Weitz/llvmlite/ffi/build.py\r\n    File \"/tmp/pip-install-_Weitz/llvmlite/ffi/build.py\", line 122\r\n      raise ValueError(msg.format(_ver_check_skip)) from e\r\n                                                       ^\r\n  SyntaxError: invalid syntax\r\n  error: command '/usr/bin/python2' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for llvmlite\r\n  Running setup.py clean for llvmlite\r\nFailed to build llvmlite\r\nInstalling collected packages: llvmlite\r\n    Running setup.py install for llvmlite ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /usr/bin/python2 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-_Weitz/llvmlite/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-_Weitz/llvmlite/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-5ilq8J/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python2.7/llvmlite\r\n         cwd: /tmp/pip-install-_Weitz/llvmlite/\r\n    Complete output (10 lines):\r\n    running install\r\n    running build\r\n    got version from file /tmp/pip-install-_Weitz/llvmlite/llvmlite/_version.py {'version': '0.32.1', 'full': 'aa11b129c0b55973067422397821ae6d44fa5e70'}\r\n    running build_ext\r\n    /usr/bin/python2 /tmp/pip-install-_Weitz/llvmlite/ffi/build.py\r\n      File \"/tmp/pip-install-_Weitz/llvmlite/ffi/build.py\", line 122\r\n        raise ValueError(msg.format(_ver_check_skip)) from e\r\n                                                         ^\r\n    SyntaxError: invalid syntax\r\n    error: command '/usr/bin/python2' failed with exit status 1\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/bin/python2 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-_Weitz/llvmlite/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-_Weitz/llvmlite/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-5ilq8J/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python2.7/llvmlite Check the logs for full command output.\r\n```\r\nHaving said that, I **can** install llvmlite with **python3** with no error:\r\n```\r\nsudo pip3 install llvmlite\r\n```\r\n**Q:** what am I missing?\r\nThank you for your help.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/601", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/601/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/601/events", "html_url": "https://github.com/numba/llvmlite/issues/601", "id": 644333936, "node_id": "MDU6SXNzdWU2NDQzMzM5MzY=", "number": 601, "title": "nvptx target missing in 0.33 when installed using pip", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242035, "node_id": "MDU6TGFiZWwxMjAyNDIwMzU=", "url": "https://api.github.com/repos/numba/llvmlite/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-24T05:39:38Z", "updated_at": "2020-08-05T19:59:10Z", "closed_at": "2020-08-05T19:59:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, has the PTX target been removed in 0.33?\r\n\r\nTrying to use target triple `nvptx64-nvidia-cuda` results in:\r\n```\r\ncls = <class 'llvmlite.binding.targets.Target'>, triple = 'nvptx64-nvidia-cuda'\r\n\r\n    @classmethod\r\n    def from_triple(cls, triple):\r\n        \"\"\"\r\n        Create a Target instance for the given triple (a string).\r\n        \"\"\"\r\n        with ffi.OutputString() as outerr:\r\n            target = ffi.lib.LLVMPY_GetTargetFromTriple(triple.encode('utf8'),\r\n                                                        outerr)\r\n            if not target:\r\n>               raise RuntimeError(str(outerr))\r\nE               RuntimeError: No available targets are compatible with triple \"nvptx64-nvidia-cuda\"\r\n\r\n../.local/lib/python3.7/site-packages/llvmlite/binding/targets.py:197: RuntimeError\r\n```\r\n\r\nReverting to 0.32.1 fixes the issue and my program runs without issues.\r\nRebuilding 0.33.0 from source using system LLVM also works without any changes to the original program.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/600", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/600/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/600/events", "html_url": "https://github.com/numba/llvmlite/issues/600", "id": 642866411, "node_id": "MDU6SXNzdWU2NDI4NjY0MTE=", "number": 600, "title": "llvmlite landingpad throw RuntimeError:LandingPadInst needs to be in a function with a personality?", "user": {"login": "QY77", "id": 30612732, "node_id": "MDQ6VXNlcjMwNjEyNzMy", "avatar_url": "https://avatars1.githubusercontent.com/u/30612732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QY77", "html_url": "https://github.com/QY77", "followers_url": "https://api.github.com/users/QY77/followers", "following_url": "https://api.github.com/users/QY77/following{/other_user}", "gists_url": "https://api.github.com/users/QY77/gists{/gist_id}", "starred_url": "https://api.github.com/users/QY77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QY77/subscriptions", "organizations_url": "https://api.github.com/users/QY77/orgs", "repos_url": "https://api.github.com/users/QY77/repos", "events_url": "https://api.github.com/users/QY77/events{/privacy}", "received_events_url": "https://api.github.com/users/QY77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242040, "node_id": "MDU6TGFiZWwxMjAyNDIwNDA=", "url": "https://api.github.com/repos/numba/llvmlite/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T08:28:41Z", "updated_at": "2020-06-23T02:38:00Z", "closed_at": "2020-06-23T02:38:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use llvmlite to translate `try ... except ...`, when I use function `landingpad`, it can generate IR, but throw an error when verifying it, I already search docs about this, I find it was moved(https://github.com/numba/llvmlite/pull/156), I can't solve it, help...\r\n\r\ndemo code:\r\n```\r\n    try:\r\n        e = a * b\r\n        f = 2 / 3\r\n        print(e)\r\n    except Exception as e:\r\n        # pass\r\n        print(e)\r\n```\r\nsource code:\r\n```\r\n    def translate_except(self, builder_except):\r\n\r\n        tp_pers = ir.FunctionType(ir.IntType(8), (), var_arg=True)\r\n        pers = ir.Function(self.module, tp_pers, '__gxx_personality_v0')\r\n\r\n        landingpad = builder_except.landingpad(ir.LiteralStructType([ir.IntType(32), ir.IntType(8).as_pointer()]),\r\n                                    'lp')\r\n        int_typeinfo = ir.GlobalVariable(builder_except.function.module, ir.IntType(8).as_pointer(),\r\n                                         \"_ZTIi\")\r\n        int_typeinfo.global_constant = True\r\n        int_typeinfo.linkage = 'internal'\r\n        int_typeinfo.unnamed_addr = True\r\n        landingpad.add_clause(ir.CatchClause(int_typeinfo))\r\n        landingpad.add_clause(ir.FilterClause(ir.Constant(ir.ArrayType(int_typeinfo.type, 1),\r\n                                                  [int_typeinfo])))\r\n\r\n        return landingpad\r\n\r\n...\r\n...\r\n...\r\n# vevify\r\nmod = llvm.parse_assembly(str(handle_bc.module))\r\n            mod.verify()\r\n            print('verify Done.')\r\n\r\n```\r\ngen IR:\r\n```\r\n...\r\n...\r\nexcept.11233:\r\n  %\"lp\" = landingpad {i32, i8*}\r\n      catch i8** @\"_ZTIi\"\r\n      filter [1 x i8**] [i8** @\"_ZTIi\"]\r\n  %\"11244\" = load i32, i32* %\"e.4\", align 8\r\n  call void (...) @\"print\"(i32 %\"11244\")\r\n  resume {i32, i8*} %\"lp\"\r\n...\r\n...\r\n```\r\nverify it still throw this, :\r\n```\r\nTraceback (most recent call last):\r\n  File \"D:/python/bc2ir/BC_TO_IR.py\", line 317, in main\r\n    mod.verify()\r\n  File \"C:\\Python\\lib\\site-packages\\llvmlite\\binding\\module.py\", line 115, in verify\r\n    raise RuntimeError(str(outmsg))\r\nRuntimeError: LandingPadInst needs to be in a function with a personality.\r\n  %lp = landingpad { i32, i8* }\r\n          catch i8** @_ZTIi\r\n          filter [1 x i8**] [i8** @_ZTIi]\r\nInstruction does not dominate all uses!\r\n  %e.4 = alloca i32, i32 8\r\n  %\"11244\" = load i32, i32* %e.4, align 8\r\nResumeInst needs to be in a function with a personality.\r\n  resume { i32, i8* } %lp\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/595", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/595/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/595/events", "html_url": "https://github.com/numba/llvmlite/issues/595", "id": 636587073, "node_id": "MDU6SXNzdWU2MzY1ODcwNzM=", "number": 595, "title": "Publishing 0.33.0 to PyPI", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T22:24:54Z", "updated_at": "2020-06-11T18:10:01Z", "closed_at": "2020-06-11T18:10:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently [v0.33.0 got tagged]( https://github.com/numba/llvmlite/releases/tag/v0.33.0 ), which is needed by [Numba 0.50.0 (also recently tagged)]( https://github.com/numba/numba/blob/0.50.0/setup.py#L14-L15 ). However it appears [PyPI]( https://pypi.org/project/llvmlite/#history ) is still on 0.32.1. Would it be possible to upload 0.33.0 to PyPI as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/588", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/588/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/588/events", "html_url": "https://github.com/numba/llvmlite/issues/588", "id": 615971430, "node_id": "MDU6SXNzdWU2MTU5NzE0MzA=", "number": 588, "title": "Failing to build llvmlite", "user": {"login": "Namburger", "id": 25712149, "node_id": "MDQ6VXNlcjI1NzEyMTQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/25712149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Namburger", "html_url": "https://github.com/Namburger", "followers_url": "https://api.github.com/users/Namburger/followers", "following_url": "https://api.github.com/users/Namburger/following{/other_user}", "gists_url": "https://api.github.com/users/Namburger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Namburger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Namburger/subscriptions", "organizations_url": "https://api.github.com/users/Namburger/orgs", "repos_url": "https://api.github.com/users/Namburger/repos", "events_url": "https://api.github.com/users/Namburger/events{/privacy}", "received_events_url": "https://api.github.com/users/Namburger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1388292542, "node_id": "MDU6TGFiZWwxMzg4MjkyNTQy", "url": "https://api.github.com/repos/numba/llvmlite/labels/needtriage", "name": "needtriage", "color": "b3f754", "default": false, "description": "Needs to be triaged further"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-11T15:24:08Z", "updated_at": "2020-05-13T17:00:12Z", "closed_at": "2020-05-13T17:00:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, this maybe a very minor issues because the gist is that I cannot find my static libs for building llvmlite. It started with me trying to build `librosa` which all finished. But when I try running it, I encounter [this error](https://github.com/librosa/librosa/issues/1116). Their team suggested that I try compiling llvmlite or ping you guys for help. I tried to compile it my self first but encountered this:\r\n```\r\n$ LLVM_CONFIG=/usr/lib/llvm-7/bin/llvm-config python3 setup.py build\r\n/usr/lib/python3/dist-packages/setuptools/dist.py:475: UserWarning: Normalizing '0.33.0dev0+17.gc4f5a08' to '0.33.0.dev0+17.gc4f5a08'\r\n  normalized_version,\r\nrunning build\r\ngot version from VCS {'version': '0.33.0dev0+17.gc4f5a08', 'full': 'c4f5a085c9f9c7a192579b02a11347bfc2ac768b'}\r\nrunning build_ext\r\n/usr/bin/python3 /home/mendel/sdcard/llvmlite/ffi/build.py\r\nLLVM version... 7.0.1\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/mendel/sdcard/llvmlite/ffi/build.py\", line 192, in <module>\r\n    main()\r\n  File \"/home/mendel/sdcard/llvmlite/ffi/build.py\", line 182, in main\r\n    main_posix('linux', '.so')\r\n  File \"/home/mendel/sdcard/llvmlite/ffi/build.py\", line 147, in main_posix\r\n    libs = run_llvm_config(llvm_config, \"--system-libs --libs all\".split())\r\n  File \"/home/mendel/sdcard/llvmlite/ffi/build.py\", line 44, in run_llvm_config\r\n    % (cmd, rc, err))\r\nRuntimeError: Command ['/usr/lib/llvm-7/bin/llvm-config', '--system-libs', '--libs', 'all'] returned with code 1; stderr follows:\r\nllvm-config: error: component libraries and shared library\r\n\r\nllvm-config: error: missing: /usr/lib/llvm-7/lib/libLLVMDemangle.a\r\nllvm-config: error: missing: /usr/lib/llvm-7/lib/libLLVMSupport.a\r\nllvm-config: error: missing: /usr/lib/llvm-7/lib/libLLVMBinaryFormat.a\r\nllvm-config: error: missing: /usr/lib/llvm-7/lib/libLLVMCore.a\r\nllvm-config: error: missing: /usr/lib/llvm-7/lib/libLLVMBitReader.a\r\n.......\r\n```\r\nFor reference:\r\n```\r\n/home/mendel/sdcard/llvmlite$ dpkg -l | grep llvm\r\nii  libllvm7:arm64                       1:7.0.1-8                           arm64        Modular compiler and toolchain technologies, runtime library\r\nii  llvm                                 1:7.0-47                            arm64        Low-Level Virtual Machine (LLVM)\r\nii  llvm-7                               1:7.0.1-8                           arm64        Modular compiler and toolchain technologies\r\nii  llvm-7-runtime                       1:7.0.1-8                           arm64        Modular compiler and toolchain technologies, IR interpreter\r\nii  llvm-runtime                         1:7.0-47                            arm64        Low-Level Virtual Machine (LLVM), bytecode interpreter\r\nii  python3-llvmlite                     0.27.0-2                            arm64        LLVM Python 3 binding for writing JIT compilers\r\n```\r\n\r\nIt seems that the error is either missing dynamic libs or static libs even though package installation are usually okay :P\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/584", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/584/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/584/events", "html_url": "https://github.com/numba/llvmlite/issues/584", "id": 604769535, "node_id": "MDU6SXNzdWU2MDQ3Njk1MzU=", "number": 584, "title": "Install of umap-learn, numba or fastparquet seems broken since 0.32.0", "user": {"login": "finalspy", "id": 413502, "node_id": "MDQ6VXNlcjQxMzUwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/413502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalspy", "html_url": "https://github.com/finalspy", "followers_url": "https://api.github.com/users/finalspy/followers", "following_url": "https://api.github.com/users/finalspy/following{/other_user}", "gists_url": "https://api.github.com/users/finalspy/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalspy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalspy/subscriptions", "organizations_url": "https://api.github.com/users/finalspy/orgs", "repos_url": "https://api.github.com/users/finalspy/repos", "events_url": "https://api.github.com/users/finalspy/events{/privacy}", "received_events_url": "https://api.github.com/users/finalspy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-22T13:43:57Z", "updated_at": "2020-04-22T16:16:02Z", "closed_at": "2020-04-22T16:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have several Dockerfile files, installing a bunch of python libraries through pip. \r\nSince llvmlite 0.32.0 release I noticed that install of :\r\n\r\n- numba\r\n\r\n- umap-learn \r\n\r\n- fastparquet\r\n\r\nare broken with the following errors : \r\n\r\n\r\n```ERROR: Command errored out with exit status 1:\r\n command: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-ss534tpz/llvmlite/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-ss534tpz/llvmlite/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-ogzwqmk9\r\n     cwd: /tmp/pip-install-ss534tpz/llvmlite/\r\nComplete output (26 lines):\r\nrunning bdist_wheel\r\n/usr/local/bin/python /tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\r\nLLVM version... Traceback (most recent call last):\r\n  File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 106, in main_posix\r\n    out = subprocess.check_output([llvm_config, '--version'])\r\n  File \"/usr/local/lib/python3.5/subprocess.py\", line 316, in check_output\r\n    **kwargs).stdout\r\n  File \"/usr/local/lib/python3.5/subprocess.py\", line 383, in run\r\n    with Popen(*popenargs, **kwargs) as process:\r\n  File \"/usr/local/lib/python3.5/subprocess.py\", line 676, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"/usr/local/lib/python3.5/subprocess.py\", line 1289, in _execute_child\r\n    raise child_exception_type(errno_num, err_msg)\r\nFileNotFoundError: [Errno 2] No such file or directory: 'llvm-config'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 168, in <module>\r\n    main()\r\n  File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 158, in main\r\n    main_posix('linux', '.so')\r\n  File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 109, in main_posix\r\n    \"to the path for llvm-config\" % (llvm_config,))\r\nRuntimeError: llvm-config failed executing, please point LLVM_CONFIG to the path for llvm-config\r\nerror: command '/usr/local/bin/python' failed with exit status 1\r\n----------------------------------------\r\nERROR: Failed building wheel for llvmlite\r\n```\r\n\r\nand also\r\n\r\n```ERROR: Command errored out with exit status 1:\r\n  command: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-ss534tpz/llvmlite/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-ss534tpz/llvmlite/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-h5s50idg/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.5m/llvmlite\r\n      cwd: /tmp/pip-install-ss534tpz/llvmlite/\r\n Complete output (29 lines):\r\n running install\r\n running build\r\n got version from file /tmp/pip-install-ss534tpz/llvmlite/llvmlite/_version.py {'full': '26059d238f4ba23dff74703dd27168591d889edd', 'version': '0.32.0'}\r\n running build_ext\r\n /usr/local/bin/python /tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\r\n LLVM version... Traceback (most recent call last):\r\n   File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 106, in main_posix\r\n     out = subprocess.check_output([llvm_config, '--version'])\r\n   File \"/usr/local/lib/python3.5/subprocess.py\", line 316, in check_output\r\n     **kwargs).stdout\r\n   File \"/usr/local/lib/python3.5/subprocess.py\", line 383, in run\r\n     with Popen(*popenargs, **kwargs) as process:\r\n   File \"/usr/local/lib/python3.5/subprocess.py\", line 676, in __init__\r\n     restore_signals, start_new_session)\r\n   File \"/usr/local/lib/python3.5/subprocess.py\", line 1289, in _execute_child\r\n     raise child_exception_type(errno_num, err_msg)\r\n FileNotFoundError: [Errno 2] No such file or directory: 'llvm-config'\r\n\r\n During handling of the above exception, another exception occurred:\r\n\r\n Traceback (most recent call last):\r\n   File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 168, in <module>\r\n     main()\r\n   File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 158, in main\r\n     main_posix('linux', '.so')\r\n   File \"/tmp/pip-install-ss534tpz/llvmlite/ffi/build.py\", line 109, in main_posix\r\n     \"to the path for llvm-config\" % (llvm_config,))\r\n RuntimeError: llvm-config failed executing, please point LLVM_CONFIG to the path for llvm-config\r\n error: command '/usr/local/bin/python' failed with exit status 1\r\n ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-ss534tpz/llvmlite/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-ss534tpz/llvmlite/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-h5s50idg/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.5m/llvmlite Check the logs for full command output.\r\n```\r\n\r\nThis occurs with python 3.5, 3.6 or 3.7 (didn't try other versions). \r\nMy Dockerfiles are based on `python:3.x-slim-buster`\r\n\r\n\r\nDowngrading to llvmlite to 0.31.0 by explicitely adding before other installs via `pip install llvmlite==0.31.0` fixes the problems. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/579", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/579/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/579/events", "html_url": "https://github.com/numba/llvmlite/issues/579", "id": 602831018, "node_id": "MDU6SXNzdWU2MDI4MzEwMTg=", "number": 579, "title": "Importing numba crashes the program when importing llvmlite-0.32.0", "user": {"login": "antoniohps", "id": 5245149, "node_id": "MDQ6VXNlcjUyNDUxNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5245149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoniohps", "html_url": "https://github.com/antoniohps", "followers_url": "https://api.github.com/users/antoniohps/followers", "following_url": "https://api.github.com/users/antoniohps/following{/other_user}", "gists_url": "https://api.github.com/users/antoniohps/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoniohps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoniohps/subscriptions", "organizations_url": "https://api.github.com/users/antoniohps/orgs", "repos_url": "https://api.github.com/users/antoniohps/repos", "events_url": "https://api.github.com/users/antoniohps/events{/privacy}", "received_events_url": "https://api.github.com/users/antoniohps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1388292542, "node_id": "MDU6TGFiZWwxMzg4MjkyNTQy", "url": "https://api.github.com/repos/numba/llvmlite/labels/needtriage", "name": "needtriage", "color": "b3f754", "default": false, "description": "Needs to be triaged further"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-19T21:59:47Z", "updated_at": "2020-05-19T14:41:52Z", "closed_at": "2020-05-19T14:41:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The expression:\r\n\r\n`import numba`\r\n\r\ncauses a program crash with:\r\n\r\n- Python 2.7\r\n- numba 0.47.0\r\n- llvmlite 0.32.0\r\n\r\nChanging numba version does not seem to work.\r\nDowngrading to llvmlite-0.31.0 fixes it.\r\n\r\nError stack:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/robotics/catkin_ws/src/my_navigation/scripts/teste_numba.py\", line 1, in <module>\r\n    import numba\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/__init__.py\", line 196, in <module>\r\n    import numba.typed\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/typed/__init__.py\", line 3, in <module>\r\n    from .typeddict import Dict\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/typed/typeddict.py\", line 19, in <module>\r\n    @njit\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/decorators.py\", line 238, in njit\r\n    return jit(*args, **kws)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/decorators.py\", line 175, in jit\r\n    return wrapper(pyfunc)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/decorators.py\", line 191, in wrapper\r\n    **dispatcher_args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/dispatcher.py\", line 650, in __init__\r\n    self.targetctx = self.targetdescr.target_context\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/targets/registry.py\", line 50, in target_context\r\n    return self._toplevel_target_context\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/utils.py\", line 390, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/targets/registry.py\", line 34, in _toplevel_target_context\r\n    return cpu.CPUContext(self.typing_context)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/targets/base.py\", line 260, in __init__\r\n    self.init()\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/compiler_lock.py\", line 32, in _acquire_compile_lock\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/targets/cpu.py\", line 61, in init\r\n    rtsys.initialize(self)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/compiler_lock.py\", line 32, in _acquire_compile_lock\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/runtime/nrt.py\", line 39, in initialize\r\n    self._library = nrtdynmod.compile_nrt_functions(ctx)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/runtime/nrtdynmod.py\", line 210, in compile_nrt_functions\r\n    library.add_ir_module(ir_mod)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numba/targets/codegen.py\", line 200, in add_ir_module\r\n    ir = cgutils.normalize_ir_text(str(ir_module))\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/module.py\", line 244, in __repr__\r\n    lines += self._get_metadata_lines()\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/module.py\", line 222, in _get_metadata_lines\r\n    mdbuf.append(str(md))\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/_utils.py\", line 48, in __str__\r\n    s = self.__cached_str = self._to_string()\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/values.py\", line 223, in _to_string\r\n    self.descr(buf)\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/values.py\", line 354, in descr\r\n    operands.append(op.get_reference())\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/_utils.py\", line 58, in get_reference\r\n    s = self.__cached_refstr = self._get_reference()\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/values.py\", line 277, in _get_reference\r\n    return '!\"{0}\"'.format(_escape_string(self.string))\r\n  File \"/usr/local/lib/python2.7/dist-packages/llvmlite/ir/values.py\", line 36, in _escape_string\r\n    buf = [_map[ch] for ch in text]\r\nKeyError: 'b'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/578", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/578/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/578/events", "html_url": "https://github.com/numba/llvmlite/issues/578", "id": 602255369, "node_id": "MDU6SXNzdWU2MDIyNTUzNjk=", "number": 578, "title": "FTBFS with LLVM 9 and 10", "user": {"login": "thiagomacieira", "id": 4109772, "node_id": "MDQ6VXNlcjQxMDk3NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4109772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiagomacieira", "html_url": "https://github.com/thiagomacieira", "followers_url": "https://api.github.com/users/thiagomacieira/followers", "following_url": "https://api.github.com/users/thiagomacieira/following{/other_user}", "gists_url": "https://api.github.com/users/thiagomacieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiagomacieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiagomacieira/subscriptions", "organizations_url": "https://api.github.com/users/thiagomacieira/orgs", "repos_url": "https://api.github.com/users/thiagomacieira/repos", "events_url": "https://api.github.com/users/thiagomacieira/events{/privacy}", "received_events_url": "https://api.github.com/users/thiagomacieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-17T21:56:45Z", "updated_at": "2020-04-21T13:50:41Z", "closed_at": "2020-04-20T13:50:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/usr/bin/python3 /builddir/build/BUILD/llvmlite-0.32.0/ffi/build.py\r\nLLVM version... 10.0.0\r\n\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/llvmlite-0.32.0/ffi/build.py\", line 168, in <module>\r\n    main()\r\n  File \"/builddir/build/BUILD/llvmlite-0.32.0/ffi/build.py\", line 158, in main\r\n    main_posix('linux', '.so')\r\n  File \"/builddir/build/BUILD/llvmlite-0.32.0/ffi/build.py\", line 120, in main_posix\r\n    raise RuntimeError(msg)\r\nRuntimeError: Building llvmlite requires LLVM 7.0.x, 7.1.x or 8.0.x, got '10.0.0'. Be sure to set LLVM_CONFIG to the right executable path.\r\nRead the documentation at http://llvmlite.pydata.org/ for more information about building llvmlite.\r\n```\r\n\r\nLLVM 9 was released back in Sept 2019. LLVM 10 was released 2 weeks ago.\r\n\r\nPlease update.\r\n\r\nYour project is using LLVM. That was your choice. LLVM updates very quickly and does not promise source compatibility. Therefore, your project must test frequently with LLVM trunk and make sure you're making releases at least as often as LLVM itself (that is, every 6 months). Anything else is irresponsible.\r\n\r\nI recommend a CI hook that tests periodically with LLVM.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/574", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/574/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/574/events", "html_url": "https://github.com/numba/llvmlite/issues/574", "id": 593742525, "node_id": "MDU6SXNzdWU1OTM3NDI1MjU=", "number": 574, "title": "undefined symbol: LLVMInitializeInstCombine from EasyBuild of numba", "user": {"login": "kelseymh", "id": 15145135, "node_id": "MDQ6VXNlcjE1MTQ1MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/15145135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kelseymh", "html_url": "https://github.com/kelseymh", "followers_url": "https://api.github.com/users/kelseymh/followers", "following_url": "https://api.github.com/users/kelseymh/following{/other_user}", "gists_url": "https://api.github.com/users/kelseymh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kelseymh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kelseymh/subscriptions", "organizations_url": "https://api.github.com/users/kelseymh/orgs", "repos_url": "https://api.github.com/users/kelseymh/repos", "events_url": "https://api.github.com/users/kelseymh/events{/privacy}", "received_events_url": "https://api.github.com/users/kelseymh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-04T04:28:14Z", "updated_at": "2020-04-06T09:29:30Z", "closed_at": "2020-04-04T20:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I originally posted this in the EasyBuild community ([easyconfig #10318](https://github.com/easybuilders/easybuild-easyconfigs/issues/10318), but after searching, I found related issues here ( #441 and #182 ).\r\n\r\nAfter a successful build (using EasyBuild's \"foss-2018b\" toolchain with GCC 7.3.0) of numba 0.26.0 against LLVM/6.0.0 and Python 3.6.6, the numba executable itself fails to run, reporting back\r\n\r\n> `OSError: /scratch/group/mitchcomp/eb/x86_64/sw/numba/0.37.0-foss-2018b-Python-3.6.6/lib/python3.6/site-packages/llvmlite/binding/libllvmlite.so: undefined symbol: LLVMInitializeInstCombine`\r\n\r\nI found that the libllvmlite.so contains dynamic links to all of the LLVM .so libraries, and while that symbol is \"u\" in libllvmlite.so, it ought to get resolved from the LLVMInstCombine.so library, found via LD_LIBRARY_PATH.\r\n\r\nIf I understand the llvmlite documentation and ffi/Makefile comments, that .so library should have been built internally with static linkage, pulling all of the LLVM symbols into it, to avoid the shared library dependence.  Clearly this didn't happen. :-)\r\n\r\nIn Makefile.linux the build action includes a Make variable I don't recognize, which likely has some bearing on my issue:\r\n\r\n> `$(CXX) $(CXX_STATIC_LINK) -shared $(CXXFLAGS) $(SRC) -o $(OUTPUT) $(LDFLAGS) $(LIBS)`\r\n\r\nWhere should CXX_STATIC_LINK be defined?  And what value should it have?  I notice that this variable doesn't appear in either Makefile.freebsd or Makefile.osx.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/572", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/572/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/572/events", "html_url": "https://github.com/numba/llvmlite/issues/572", "id": 592888677, "node_id": "MDU6SXNzdWU1OTI4ODg2Nzc=", "number": 572, "title": "Add statement regarding LLVM support to the docs", "user": {"login": "stuartarchibald", "id": 907717, "node_id": "MDQ6VXNlcjkwNzcxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/907717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuartarchibald", "html_url": "https://github.com/stuartarchibald", "followers_url": "https://api.github.com/users/stuartarchibald/followers", "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}", "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions", "organizations_url": "https://api.github.com/users/stuartarchibald/orgs", "repos_url": "https://api.github.com/users/stuartarchibald/repos", "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}", "received_events_url": "https://api.github.com/users/stuartarchibald/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1806794976, "node_id": "MDU6TGFiZWwxODA2Nzk0OTc2", "url": "https://api.github.com/repos/numba/llvmlite/labels/doc", "name": "doc", "color": "fcbf7e", "default": false, "description": "Issues/PRs related to documentation improvments"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-02T19:56:34Z", "updated_at": "2020-04-30T17:07:45Z", "closed_at": "2020-04-30T17:07:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Users regularly ask for support for various LLVMs, the response regarding support should be added to the docs, a starting point for such a piece of documentation is the comment here:\r\nhttps://github.com/numba/llvmlite/pull/571#issuecomment-607900279", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/557", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/557/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/557/events", "html_url": "https://github.com/numba/llvmlite/issues/557", "id": 583390354, "node_id": "MDU6SXNzdWU1ODMzOTAzNTQ=", "number": 557, "title": "is ctypes structure convertible to LLVM structure type?", "user": {"login": "guilhermeleobas", "id": 2712115, "node_id": "MDQ6VXNlcjI3MTIxMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2712115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guilhermeleobas", "html_url": "https://github.com/guilhermeleobas", "followers_url": "https://api.github.com/users/guilhermeleobas/followers", "following_url": "https://api.github.com/users/guilhermeleobas/following{/other_user}", "gists_url": "https://api.github.com/users/guilhermeleobas/gists{/gist_id}", "starred_url": "https://api.github.com/users/guilhermeleobas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guilhermeleobas/subscriptions", "organizations_url": "https://api.github.com/users/guilhermeleobas/orgs", "repos_url": "https://api.github.com/users/guilhermeleobas/repos", "events_url": "https://api.github.com/users/guilhermeleobas/events{/privacy}", "received_events_url": "https://api.github.com/users/guilhermeleobas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T00:59:12Z", "updated_at": "2020-03-23T17:41:32Z", "closed_at": "2020-03-23T17:41:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey everyone, I am trying to pass a ctypes structure to a llvm function that receives a structure type. Most of the code below as copied from the [example](https://llvmlite.readthedocs.io/en/latest/user-guide/binding/examples.html) page. In the end, I am creating a `Triple(2, 3, 4)`, which is used as argument to the llvm `get_from_triple_xx` function. \r\n\r\n```python\r\nfrom __future__ import print_function\r\n\r\nfrom ctypes import * \r\nimport numpy as np\r\nimport struct\r\n\r\nimport llvmlite.binding as llvm\r\nfrom llvmlite import ir\r\n\r\n\r\n# All these initializations are required for code generation!\r\nllvm.initialize()\r\nllvm.initialize_native_target()\r\nllvm.initialize_native_asmprinter()  # yes, even this one\r\n\r\nllvm_ir = \"\"\"\r\n; ModuleID = \"examples/ir_fpadd.py\"\r\ntarget triple = \"x86_64-apple-darwin19.3.0\"\r\ntarget datalayout = \"e-m:o-i64:64-f80:128-n8:16:32:64-S128\"\r\n\r\n\r\ndefine i32 @get_from_triple_0({ i32, i32, i32 } %.1) {\r\nentry:\r\n  %extracted = extractvalue { i32, i32, i32 } %.1, 0\r\n  ret i32 %extracted\r\n}\r\n\r\ndefine i32 @get_from_triple_1({ i32, i32, i32 } %.1) {\r\nentry:\r\n  %extracted = extractvalue { i32, i32, i32 } %.1, 1\r\n  ret i32 %extracted\r\n}\r\n\r\ndefine i32 @get_from_triple_2({ i32, i32, i32 } %.1) {\r\nentry:\r\n  %extracted = extractvalue { i32, i32, i32 } %.1, 2\r\n  ret i32 %extracted\r\n}\r\n\r\ndefine { i32, i32, i32 } @triple({ i32, i32, i32 } %.1) {\r\nentry:\r\n  ret { i32, i32, i32 } %.1\r\n}\r\n\"\"\"\r\n\r\ndef create_execution_engine():\r\n    \"\"\"\r\n    Create an ExecutionEngine suitable for JIT code generation on\r\n    the host CPU.  The engine is reusable for an arbitrary number of\r\n    modules.\r\n    \"\"\"\r\n    # Create a target machine representing the host\r\n    target = llvm.Target.from_default_triple()\r\n    target_machine = target.create_target_machine()\r\n    # And an execution engine with an empty backing module\r\n    backing_mod = llvm.parse_assembly(\"\")\r\n    engine = llvm.create_mcjit_compiler(backing_mod, target_machine)\r\n    return engine\r\n\r\n\r\ndef compile_ir(engine, llvm_ir):\r\n    \"\"\"\r\n    Compile the LLVM IR string with the given engine.\r\n    The compiled module object is returned.\r\n    \"\"\"\r\n    # Create a LLVM module object from the IR\r\n    mod = llvm.parse_assembly(llvm_ir)\r\n    mod.verify()\r\n    # Now add the module and make sure it is ready for execution\r\n    engine.add_module(mod)\r\n    engine.finalize_object()\r\n    engine.run_static_constructors()\r\n    return mod\r\n\r\ndef call(fn_name, rettype, argtypes, args):\r\n  func_ptr = engine.get_function_address(fn_name)\r\n\r\n  # Run the function via ctypes\r\n  cfunc = CFUNCTYPE(rettype, argtypes)(func_ptr)\r\n  res = cfunc(args)\r\n  return res\r\n\r\nclass Triple(Structure):\r\n    _fields_ = [\r\n        ('foo', c_int),\r\n        ('bar', c_int),\r\n        ('baz', c_int),\r\n    ]\r\n\r\n    def __str__(self):\r\n        return 'Triple(%s, %s, %s)' % (self.foo, self.bar, self.baz) \r\n\r\nengine = create_execution_engine()\r\nmod = compile_ir(engine, llvm_ir)\r\n\r\nt = Triple(2, 3, 4)\r\n\r\nprint('original:', t)\r\n\r\nres = call('triple', Triple, Triple, t)\r\nprint('bytes:', bytes(t))\r\nprint(\"get_triple_back() =\", res)\r\n\r\nprint('========')\r\nres0 = call('get_from_triple_0', c_int32, Triple, t)\r\nprint(\"get_from_triple(0) =\", res0)\r\n\r\nprint('========')\r\nres1 = call('get_from_triple_1', c_int32, Triple, t)\r\nprint(\"get_from_triple(1) =\", res1)\r\n\r\nprint('========')\r\nres2 = call('get_from_triple_2', c_int32, Triple, t)\r\nprint(\"get_from_triple(2) =\", res2)\r\n```\r\n\r\nRunning this code gives me the following output:\r\n```\r\noriginal: Triple(2, 3, 4)\r\nbytes: b'\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x04\\x00\\x00\\x00'\r\nget_triple_back() = Triple(2, 0, 4)\r\n========\r\nget_from_triple(0) = 2\r\n========\r\nget_from_triple(1) = 4\r\n========\r\nget_from_triple(2) = -358953808\r\n```\r\n\r\nOne would expect the `get_triple_back()` to return the original triple `(2, 3, 4)` and the call `get_from_triple(1)` to return 3 but it returns 0 instead. It seems that values are being treated as 64 bits and not as 32 bits, as it was declared.\r\n\r\n\r\n```\r\n  2   3     4    # 32 bits\r\n|----+----|----+\r\n  2       | 4    # 64 bits\r\n```\r\n\r\nAm I doing something wrong here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/550", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/550/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/550/events", "html_url": "https://github.com/numba/llvmlite/issues/550", "id": 561402108, "node_id": "MDU6SXNzdWU1NjE0MDIxMDg=", "number": 550, "title": "ppc64le: failed to get host cpu features", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242035, "node_id": "MDU6TGFiZWwxMjAyNDIwMzU=", "url": "https://api.github.com/repos/numba/llvmlite/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-02-07T03:40:38Z", "updated_at": "2020-03-23T22:22:35Z", "closed_at": "2020-03-23T22:22:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've run into issues using llvmlite 0.31.0 on linux ppc64le [0 -- the errors start halfway through the log]?\r\n\r\n```\r\n    __cpu_features = binding.get_host_cpu_features().flatten()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n    def get_host_cpu_features():\r\n        \"\"\"\r\n        Returns a dictionary-like object indicating the CPU features for current\r\n        architecture and whether they are enabled for this CPU.  The key-value pairs\r\n        are the feature name as string and a boolean indicating whether the feature\r\n        is available.  The returned value is an instance of ``FeatureMap`` class,\r\n        which adds a new method ``.flatten()`` for returning a string suitable for\r\n        use as the \"features\" argument to ``Target.create_target_machine()``.\r\n    \r\n        If LLVM has not implemented this feature or it fails to get the information,\r\n        this function will raise a RuntimeError exception.\r\n        \"\"\"\r\n        with ffi.OutputString() as out:\r\n            outdict = FeatureMap()\r\n            if not ffi.lib.LLVMPY_GetHostCPUFeatures(out):\r\n>               raise RuntimeError(\"failed to get host cpu features.\")\r\nE               RuntimeError: failed to get host cpu features.\r\n```\r\n\r\n[0] https://api.travis-ci.com/v3/job/283524633/log.txt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/541", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/541/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/541/events", "html_url": "https://github.com/numba/llvmlite/issues/541", "id": 545310585, "node_id": "MDU6SXNzdWU1NDUzMTA1ODU=", "number": 541, "title": "Please fix the llvm version check", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-04T17:37:25Z", "updated_at": "2020-01-09T17:29:52Z", "closed_at": "2020-01-09T17:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/numba/llvmlite/blob/master/ffi/build.py#L112\r\n\r\nIt first checks for 8.0, 7.0, 7.1, and then says that it needs LLVM versions 7+. I have 9.0, and it fails. Please check properly so that any 7+ version would pass. Obviously, the current ```or``` syntax with list can not possibly suffice.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/539", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/539/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/539/events", "html_url": "https://github.com/numba/llvmlite/issues/539", "id": 544026001, "node_id": "MDU6SXNzdWU1NDQwMjYwMDE=", "number": 539, "title": "recursion with if_else context manager", "user": {"login": "Bretley", "id": 8421641, "node_id": "MDQ6VXNlcjg0MjE2NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8421641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bretley", "html_url": "https://github.com/Bretley", "followers_url": "https://api.github.com/users/Bretley/followers", "following_url": "https://api.github.com/users/Bretley/following{/other_user}", "gists_url": "https://api.github.com/users/Bretley/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bretley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bretley/subscriptions", "organizations_url": "https://api.github.com/users/Bretley/orgs", "repos_url": "https://api.github.com/users/Bretley/repos", "events_url": "https://api.github.com/users/Bretley/events{/privacy}", "received_events_url": "https://api.github.com/users/Bretley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-30T22:09:39Z", "updated_at": "2020-01-14T05:52:26Z", "closed_at": "2020-01-14T05:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python version : 3.7.5\r\nllvmlite version: (0.30.0) (from pip)\r\n\r\nHi, I noticed this whilst trying to generate ir for a toy language I have. I *think* this issue is due to if_else context manager issues with recursion.\r\n\r\nIn my toy language I have a very simple if-elif .. else construct (like guards in haskell).\r\n\r\nMy method to do this is to recursively nest them.\r\n\r\n```python\r\ndef guard_codegen(guards, final, nst, ctx, depth=0):\r\n    if not guards:\r\n        return codegen(final[3], nst, ctx)\r\n    current = guards.pop(0)\r\n    condition = codegen(current[2], nst, ctx)\r\n\r\n    with ctx['builder'].if_else(condition) as (then, else_):\r\n        with then:\r\n            codegen(current[5], nst, ctx)\r\n        with else_:\r\n            guard_codegen(guards, final, nst, ctx, depth+2)\r\n```\r\n\r\nHowever, upon entering the new context in the recursed method, the endif is inserted  into IR\r\n(entry.endif before recursed entry.else.if)\r\n```\r\ndefine i32 @\"cmp\"() \r\n{\r\nentry:\r\n  %\".2\" = icmp slt i32 5, 6\r\n  br i1 %\".2\", label %\"entry.if\", label %\"entry.else\"\r\nentry.if:\r\n  ret i32 -1\r\nentry.else:\r\n  %\".5\" = icmp sgt i32 5, 6\r\n  br i1 %\".5\", label %\"entry.else.if\", label %\"entry.else.else\"\r\nentry.endif:\r\nentry.else.if:\r\n  ret i32 1\r\nentry.else.else:\r\n  ret i32 0\r\nentry.else.endif:\r\n  br label %\"entry.endif\"\r\n}\r\n```\r\n\r\nin C, the cmp method would be\r\n```\r\nint cmp() {\r\n  if (5 < 6) { return -1; }\r\n  else if (5 >6) { return 1; }\r\n  else { return 0; }\r\n}\r\n\r\nIf you need any more info or if I've messed up horribly just let me know.\r\nI think the issue is that the new context is being set up with the same irBuilder. I tried it by creating a new irbuilder off of the block of the current one but that did not fix it\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/538", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/538/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/538/events", "html_url": "https://github.com/numba/llvmlite/issues/538", "id": 543694464, "node_id": "MDU6SXNzdWU1NDM2OTQ0NjQ=", "number": 538, "title": "Could I use llvmlite to complie django?", "user": {"login": "Chise1", "id": 47511274, "node_id": "MDQ6VXNlcjQ3NTExMjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/47511274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chise1", "html_url": "https://github.com/Chise1", "followers_url": "https://api.github.com/users/Chise1/followers", "following_url": "https://api.github.com/users/Chise1/following{/other_user}", "gists_url": "https://api.github.com/users/Chise1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chise1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chise1/subscriptions", "organizations_url": "https://api.github.com/users/Chise1/orgs", "repos_url": "https://api.github.com/users/Chise1/repos", "events_url": "https://api.github.com/users/Chise1/events{/privacy}", "received_events_url": "https://api.github.com/users/Chise1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242040, "node_id": "MDU6TGFiZWwxMjAyNDIwNDA=", "url": "https://api.github.com/repos/numba/llvmlite/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-30T02:51:28Z", "updated_at": "2019-12-31T16:08:37Z", "closed_at": "2019-12-31T08:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could I use llvmlite to complie django?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/534", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/534/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/534/events", "html_url": "https://github.com/numba/llvmlite/issues/534", "id": 538758138, "node_id": "MDU6SXNzdWU1Mzg3NTgxMzg=", "number": 534, "title": "\"The currently supported LLVM version---LLVM 3.8\", Execution engine docs say", "user": {"login": "pfalcon", "id": 500451, "node_id": "MDQ6VXNlcjUwMDQ1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/500451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfalcon", "html_url": "https://github.com/pfalcon", "followers_url": "https://api.github.com/users/pfalcon/followers", "following_url": "https://api.github.com/users/pfalcon/following{/other_user}", "gists_url": "https://api.github.com/users/pfalcon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfalcon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfalcon/subscriptions", "organizations_url": "https://api.github.com/users/pfalcon/orgs", "repos_url": "https://api.github.com/users/pfalcon/repos", "events_url": "https://api.github.com/users/pfalcon/events{/privacy}", "received_events_url": "https://api.github.com/users/pfalcon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242035, "node_id": "MDU6TGFiZWwxMjAyNDIwMzU=", "url": "https://api.github.com/repos/numba/llvmlite/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-17T00:27:49Z", "updated_at": "2019-12-17T15:05:41Z", "closed_at": "2019-12-17T15:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here: https://llvmlite.readthedocs.io/en/latest/user-guide/binding/execution-engine.html and here: https://github.com/numba/llvmlite/blob/master/docs/source/user-guide/binding/execution-engine.rst\r\n\r\nThis is closely related to https://github.com/numba/llvmlite/issues/464 .\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/530", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/530/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/530/events", "html_url": "https://github.com/numba/llvmlite/issues/530", "id": 524332561, "node_id": "MDU6SXNzdWU1MjQzMzI1NjE=", "number": 530, "title": "a bug in build.py??", "user": {"login": "ddeeppnneett", "id": 42013567, "node_id": "MDQ6VXNlcjQyMDEzNTY3", "avatar_url": "https://avatars0.githubusercontent.com/u/42013567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddeeppnneett", "html_url": "https://github.com/ddeeppnneett", "followers_url": "https://api.github.com/users/ddeeppnneett/followers", "following_url": "https://api.github.com/users/ddeeppnneett/following{/other_user}", "gists_url": "https://api.github.com/users/ddeeppnneett/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddeeppnneett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddeeppnneett/subscriptions", "organizations_url": "https://api.github.com/users/ddeeppnneett/orgs", "repos_url": "https://api.github.com/users/ddeeppnneett/repos", "events_url": "https://api.github.com/users/ddeeppnneett/events{/privacy}", "received_events_url": "https://api.github.com/users/ddeeppnneett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-18T12:21:16Z", "updated_at": "2019-11-22T20:10:16Z", "closed_at": "2019-11-22T20:10:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI am an  archlinux user.  And I think I get a bug in build.py.  \r\n\r\n```\r\n    if not (out.startswith('8.0.') or out.startswith('7.0.') \r\n            or out.startswith('7.1.')):\r\n        msg = (\r\n            \"Building llvmlite requires LLVM 7.0+ Be sure to \"\r\n            \"set LLVM_CONFIG to the right executable path.\\n\"\r\n            \"Read the documentation at http://llvmlite.pydata.org/ for more \"\r\n            \"information about building llvmlite.\\n\"\r\n            )\r\n        raise RuntimeError(msg)\r\n```\r\n\r\nBut the version of llvm  in the archlinux is \r\n\r\n> extra/llvm 9.0.0-4 [installed]\r\n\r\nMaybe  < or out.startswith('9.0.')> is needed  there inorder for the new verions of llvm.  Or  another smart way.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/527", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/527/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/527/events", "html_url": "https://github.com/numba/llvmlite/issues/527", "id": 516629984, "node_id": "MDU6SXNzdWU1MTY2Mjk5ODQ=", "number": 527, "title": "Failed to install llvmlite with Python 3.8 (pip)", "user": {"login": "eidalex", "id": 46104119, "node_id": "MDQ6VXNlcjQ2MTA0MTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/46104119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eidalex", "html_url": "https://github.com/eidalex", "followers_url": "https://api.github.com/users/eidalex/followers", "following_url": "https://api.github.com/users/eidalex/following{/other_user}", "gists_url": "https://api.github.com/users/eidalex/gists{/gist_id}", "starred_url": "https://api.github.com/users/eidalex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eidalex/subscriptions", "organizations_url": "https://api.github.com/users/eidalex/orgs", "repos_url": "https://api.github.com/users/eidalex/repos", "events_url": "https://api.github.com/users/eidalex/events{/privacy}", "received_events_url": "https://api.github.com/users/eidalex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-02T15:30:43Z", "updated_at": "2020-08-19T14:55:42Z", "closed_at": "2020-01-08T09:13:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI first try to install **numba** with Python 3.8 ... it went wrong. I seemed like there was a problem with llvmlite. Indeed, when trying to install **llvmlite**, alone It went wrong and I had the error:\r\n\r\n\r\nERROR: Command errored out with exit status 1: 'C:\\Python38\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\\\AppData\\\\Local\\\\Temp\\\\pip-install-7u87xl57\\\\llvmlite\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\\\AppData\\\\Local\\\\Temp\\\\pip-install-7u87xl57\\\\llvmlite\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\AppData\\Local\\Temp\\pip-record-no_sgdu3\\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output.\r\n\r\nI simply use the command : `pip install llvmlite`.\r\n\r\n- Operating System: Windows 10 Enterprise 1709\r\n- Python version : 3.8\r\n\r\nAm I doing something wrong ? \r\nThank you in advance :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/523", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/523/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/523/events", "html_url": "https://github.com/numba/llvmlite/issues/523", "id": 506172738, "node_id": "MDU6SXNzdWU1MDYxNzI3Mzg=", "number": 523, "title": "Support LLVM 9", "user": {"login": "fabmazz", "id": 14214829, "node_id": "MDQ6VXNlcjE0MjE0ODI5", "avatar_url": "https://avatars0.githubusercontent.com/u/14214829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabmazz", "html_url": "https://github.com/fabmazz", "followers_url": "https://api.github.com/users/fabmazz/followers", "following_url": "https://api.github.com/users/fabmazz/following{/other_user}", "gists_url": "https://api.github.com/users/fabmazz/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabmazz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabmazz/subscriptions", "organizations_url": "https://api.github.com/users/fabmazz/orgs", "repos_url": "https://api.github.com/users/fabmazz/repos", "events_url": "https://api.github.com/users/fabmazz/events{/privacy}", "received_events_url": "https://api.github.com/users/fabmazz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-10-12T11:09:46Z", "updated_at": "2020-06-01T19:37:17Z", "closed_at": "2020-06-01T19:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "LLVM 9 is out since September 19, it should be good to add support for it, since some \"always up-to-date\" distributions already jumped to it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/505", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/505/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/505/events", "html_url": "https://github.com/numba/llvmlite/issues/505", "id": 479223347, "node_id": "MDU6SXNzdWU0NzkyMjMzNDc=", "number": 505, "title": "How to add addrspace to function call?", "user": {"login": "tdh8316", "id": 20598077, "node_id": "MDQ6VXNlcjIwNTk4MDc3", "avatar_url": "https://avatars1.githubusercontent.com/u/20598077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdh8316", "html_url": "https://github.com/tdh8316", "followers_url": "https://api.github.com/users/tdh8316/followers", "following_url": "https://api.github.com/users/tdh8316/following{/other_user}", "gists_url": "https://api.github.com/users/tdh8316/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdh8316/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdh8316/subscriptions", "organizations_url": "https://api.github.com/users/tdh8316/orgs", "repos_url": "https://api.github.com/users/tdh8316/repos", "events_url": "https://api.github.com/users/tdh8316/events{/privacy}", "received_events_url": "https://api.github.com/users/tdh8316/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-10T03:36:39Z", "updated_at": "2020-04-06T14:00:15Z", "closed_at": "2020-04-05T12:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I would like to generate this LLVM IR through llvmlite.\r\nWhat I want to generate is:\r\n```llvm\r\n%1 = tail call addrspace(1) i16 @_ZN5Print5printEPKc(%class.Print* getelementptr inbounds (%class.HardwareSerial, %class.HardwareSerial* @Serial, i16 0, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i16 0, i16 0)) #3\r\n```\r\nFull LLVM IR is here: https://gist.github.com/tdh8316/12f8e79b60c18b550e3292f06a606608#file-arduino_serial-ll-L17\r\n\r\nI tried to generate an IR using this code:\r\n```python\r\nstring = \"Hello, world!\\n\"\r\nc_string = ir.Constant(ir.ArrayType(i8, len(string)), bytearray(string.encode(\"utf8\")))\r\n\r\nglobal_string = ir.GlobalVariable(m, c_string.type, name=self.id)\r\nglobal_string.linkage = \"private unnamed_addr\"\r\nglobal_string.global_constant = True\r\nglobal_string.initializer = c_string\r\n\r\nbuilder.call(Serial.print(m), [builder.bitcast(global_string, i32)], tail=True)\r\n```\r\nAnd the result is:\r\n```llvm\r\ndefine void @\"setup\"() \r\n{\r\nentry:\r\n  %\".2\" = bitcast [14 x i8]* @\"1932411367912\" to i32\r\n  %\".3\" = tail call i16 @\"Serial.print\"(i32 %\".2\") ; addrspace(1)?\r\n}\r\n\r\n@\"1932411367912\" = private unnamed_addr constant [14 x i8] c\"Hello, world!\\0a\"\r\ndeclare i16 @\"Serial.print\"(i32 %\".1\") \r\n```\r\n\r\nHow can I add addrspace(1) at function call?\r\nOr is there a way to directly add LLVM IR string?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/503", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/503/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/503/events", "html_url": "https://github.com/numba/llvmlite/issues/503", "id": 477150844, "node_id": "MDU6SXNzdWU0NzcxNTA4NDQ=", "number": 503, "title": "How to switch to another LLVM version?", "user": {"login": "mohanson", "id": 12387889, "node_id": "MDQ6VXNlcjEyMzg3ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/12387889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohanson", "html_url": "https://github.com/mohanson", "followers_url": "https://api.github.com/users/mohanson/followers", "following_url": "https://api.github.com/users/mohanson/following{/other_user}", "gists_url": "https://api.github.com/users/mohanson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohanson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohanson/subscriptions", "organizations_url": "https://api.github.com/users/mohanson/orgs", "repos_url": "https://api.github.com/users/mohanson/repos", "events_url": "https://api.github.com/users/mohanson/events{/privacy}", "received_events_url": "https://api.github.com/users/mohanson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-06T03:30:27Z", "updated_at": "2019-08-06T15:45:52Z", "closed_at": "2019-08-06T15:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before I install llvmlite(by `pip3 install llvmlite`), I already have LLVM installed(`llvm-config --version: 8.0.0`). Now I compiled another LLVM, but I don't known how to switich llvmlite's llvm to my new LLVM.\r\n\r\nI tried set environment `$LLVM_CONFIG`, or remove the old llvm from the `$PATH`,  but ita all doesn't work. \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/498", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/498/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/498/events", "html_url": "https://github.com/numba/llvmlite/issues/498", "id": 464842563, "node_id": "MDU6SXNzdWU0NjQ4NDI1NjM=", "number": 498, "title": "manylinux1: Could not load shared object file: libllvmlite.so", "user": {"login": "pavlin-policar", "id": 5758119, "node_id": "MDQ6VXNlcjU3NTgxMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5758119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavlin-policar", "html_url": "https://github.com/pavlin-policar", "followers_url": "https://api.github.com/users/pavlin-policar/followers", "following_url": "https://api.github.com/users/pavlin-policar/following{/other_user}", "gists_url": "https://api.github.com/users/pavlin-policar/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavlin-policar/subscriptions", "organizations_url": "https://api.github.com/users/pavlin-policar/orgs", "repos_url": "https://api.github.com/users/pavlin-policar/repos", "events_url": "https://api.github.com/users/pavlin-policar/events{/privacy}", "received_events_url": "https://api.github.com/users/pavlin-policar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1388292542, "node_id": "MDU6TGFiZWwxMzg4MjkyNTQy", "url": "https://api.github.com/repos/numba/llvmlite/labels/needtriage", "name": "needtriage", "color": "b3f754", "default": false, "description": "Needs to be triaged further"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-07-06T10:52:50Z", "updated_at": "2019-12-16T16:26:27Z", "closed_at": "2019-08-02T18:29:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I apologize if this is the wrong place to post this, but I'm kind of at a loss of where I could get any help with my issue.\r\n\r\nI've set up CI on azure pipelines in order to build my package wheels on every platform, so they're easily publishable to PyPI. My package depends on numba, and hence, llvmlite. For linux, I use the manylinux1 docker image to get the appropriate wheels. I am able to build the wheels all right, with no issues. Then, I'd like to verify that the wheels are ok, so I install the built manylinux wheel using pip and run the tests using pytest. All of this happens inside the same docker container, but that shouldn't be an issue. When I run my tests, however, I get the following error:\r\n\r\n```\r\ntests/test_nearest_neighbors.py:6: in <module>\r\n    import pynndescent\r\n/home/vsts_azpcontainer/.local/lib/python3.6/site-packages/pynndescent/__init__.py:2: in <module>\r\n    import numba\r\n/home/vsts_azpcontainer/.local/lib/python3.6/site-packages/numba/__init__.py:11: in <module>\r\n    from . import config, errors, _runtests as runtests, types\r\n/home/vsts_azpcontainer/.local/lib/python3.6/site-packages/numba/config.py:18: in <module>\r\n    import llvmlite.binding as ll\r\n/home/vsts_azpcontainer/.local/lib/python3.6/site-packages/llvmlite/binding/__init__.py:6: in <module>\r\n    from .dylib import *\r\n/home/vsts_azpcontainer/.local/lib/python3.6/site-packages/llvmlite/binding/dylib.py:4: in <module>\r\n    from . import ffi\r\n/home/vsts_azpcontainer/.local/lib/python3.6/site-packages/llvmlite/binding/ffi.py:154: in <module>\r\n    raise OSError(\"Could not load shared object file: {}\".format(_lib_name))\r\nE   OSError: Could not load shared object file: libllvmlite.so\r\n```\r\n\r\nThis is very puzzling to me. From my understanding of Python wheels, everything should be bundled together so it's instantly runnable once installed. However, the error seems to indicate that the shared object file is missing. I've also checked what's actually being installed, and it seems to be the right wheel:\r\n\r\n```\r\nCollecting llvmlite>=0.29.0 (from numba>=0.39->pynndescent>=0.3->openTSNE==0.3.8)\r\nDownloading https://files.pythonhosted.org/packages/09/f1/4fa99c2079132da8694361fb9a19094616f1ba2c2eae610379e75394575f/llvmlite-0.29.0-cp36-cp36m-manylinux1_x86_64.whl (20.4MB)\r\n```\r\n\r\nIf it helps, [here's](https://dev.azure.com/pavlingp/openTSNE/_build/results?buildId=104) the link to the azure pipeline logs and the corresponding [configuration file](https://github.com/pavlin-policar/openTSNE/blob/azure-pipelines/azure-pipelines.yml).\r\n\r\nI realise this is probably asking much, so you're welcome to close this if it's too far out there, but I'd appreciate it if you could at least point me in the right direction.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/497", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/497/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/497/events", "html_url": "https://github.com/numba/llvmlite/issues/497", "id": 462776964, "node_id": "MDU6SXNzdWU0NjI3NzY5NjQ=", "number": 497, "title": "from numba import jit: No available targets are compatible with triple \"arm-unknown-linux-gnu\"", "user": {"login": "gnthibault", "id": 5237397, "node_id": "MDQ6VXNlcjUyMzczOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5237397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnthibault", "html_url": "https://github.com/gnthibault", "followers_url": "https://api.github.com/users/gnthibault/followers", "following_url": "https://api.github.com/users/gnthibault/following{/other_user}", "gists_url": "https://api.github.com/users/gnthibault/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnthibault/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnthibault/subscriptions", "organizations_url": "https://api.github.com/users/gnthibault/orgs", "repos_url": "https://api.github.com/users/gnthibault/repos", "events_url": "https://api.github.com/users/gnthibault/events{/privacy}", "received_events_url": "https://api.github.com/users/gnthibault/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-07-01T15:25:37Z", "updated_at": "2019-07-01T20:33:42Z", "closed_at": "2019-07-01T20:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all.\r\nI am trying to setup numba on python3 for a project to run on an arm platform. Unfortunately, I am experiencing a failure at runtime, and I don't really understand where is this coming from, and what should I do with this error ?\r\n\r\n(I use llvm 8.0 compiled locally and latest version of llvmlite, also compiled locally)\r\n\r\n>     from numba import jit\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/__init__.py\", line 41, in <module>\r\n>     import numba.typed\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/typed/__init__.py\", line 3, in <module>\r\n>     from .typeddict import Dict\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/typed/typeddict.py\", line 18, in <module>\r\n>     @njit\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/decorators.py\", line 224, in njit\r\n>     return jit(*args, **kws)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/decorators.py\", line 161, in jit\r\n>     return wrapper(pyfunc)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/decorators.py\", line 177, in wrapper\r\n>     **dispatcher_args)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/dispatcher.py\", line 542, in __init__\r\n>     self.targetctx = self.targetdescr.target_context\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/targets/registry.py\", line 50, in target_context\r\n>     return self._toplevel_target_context\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/utils.py\", line 381, in __get__\r\n>     res = instance.__dict__[self.name] = self.func(instance)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/targets/registry.py\", line 34, in _toplevel_target_context\r\n>     return cpu.CPUContext(self.typing_context)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/targets/base.py\", line 250, in __init__\r\n>     self.init()\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/compiler_lock.py\", line 32, in _acquire_compile_lock\r\n>     return func(*args, **kwargs)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/targets/cpu.py\", line 49, in init\r\n>     self._internal_codegen = codegen.JITCPUCodegen(\"numba.exec\")\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/targets/codegen.py\", line 608, in __init__\r\n>     self._init(self._llvm_module)\r\n>   File \"/home/rock/.local/lib/python3.5/site-packages/numba/targets/codegen.py\", line 613, in _init\r\n>     target = ll.Target.from_triple(ll.get_process_triple())\r\n>   File \"/usr/local/lib/python3.5/dist-packages/llvmlite/binding/targets.py\", line 195, in from_triple\r\n>     raise RuntimeError(str(outerr))\r\n> RuntimeError: No available targets are compatible with triple \"arm-unknown-linux-gnu\"\r\n\r\nI am using an armhf linux distribution, also I don't know if that helps:\r\n\r\n> llvm-config --version --prefix --components --targets-built --host-target\r\n> 8.0.0\r\n> /usr/local\r\n> aarch64 aarch64asmparser aarch64asmprinter aarch64codegen aarch64desc aarch64disassembler aarch64info aarch64utils aggressiveinstcombine all all-targets analysis arm armasmparser armasmprinter armcodegen armdesc armdisassembler arminfo armutils asmparser asmprinter binaryformat bitreader bitwriter codegen core coroutines coverage debuginfocodeview debuginfodwarf debuginfomsf debuginfopdb demangle dlltooldriver engine executionengine fuzzmutate globalisel instcombine instrumentation interpreter ipo irreader libdriver lineeditor linker lto mc mca mcdisassembler mcjit mcparser mirparser native nativecodegen objcarcopts object objectyaml option optremarks orcjit passes profiledata runtimedyld scalaropts selectiondag support symbolize tablegen target textapi transformutils vectorize windowsmanifest xray\r\n> AArch64 ARM\r\n> aarch64-unknown-linux-gnu\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/494", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/494/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/494/events", "html_url": "https://github.com/numba/llvmlite/issues/494", "id": 452558623, "node_id": "MDU6SXNzdWU0NTI1NTg2MjM=", "number": 494, "title": "How to implement Pointer / Reference with llvmlite", "user": {"login": "Phantom1003", "id": 39120057, "node_id": "MDQ6VXNlcjM5MTIwMDU3", "avatar_url": "https://avatars2.githubusercontent.com/u/39120057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phantom1003", "html_url": "https://github.com/Phantom1003", "followers_url": "https://api.github.com/users/Phantom1003/followers", "following_url": "https://api.github.com/users/Phantom1003/following{/other_user}", "gists_url": "https://api.github.com/users/Phantom1003/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phantom1003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phantom1003/subscriptions", "organizations_url": "https://api.github.com/users/Phantom1003/orgs", "repos_url": "https://api.github.com/users/Phantom1003/repos", "events_url": "https://api.github.com/users/Phantom1003/events{/privacy}", "received_events_url": "https://api.github.com/users/Phantom1003/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-05T15:12:07Z", "updated_at": "2020-04-22T11:34:10Z", "closed_at": "2020-04-22T11:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want implement a function like &in C++\uff0cwhen I find a & in function args, I will used the exist addr instead of alloc a new one.\r\nIn Caller function, I use builder.alloc to get a memory for variables, I save this with its name in symbol table, but when I in callee, if I directly use this memory, it says undefined \u201c.4\u201d\r\nAnyone meet this question? Thank you!   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/493", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/493/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/493/events", "html_url": "https://github.com/numba/llvmlite/issues/493", "id": 451145583, "node_id": "MDU6SXNzdWU0NTExNDU1ODM=", "number": 493, "title": "Fedora: requires building with fPIC", "user": {"login": "aeroevan", "id": 44744, "node_id": "MDQ6VXNlcjQ0NzQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/44744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeroevan", "html_url": "https://github.com/aeroevan", "followers_url": "https://api.github.com/users/aeroevan/followers", "following_url": "https://api.github.com/users/aeroevan/following{/other_user}", "gists_url": "https://api.github.com/users/aeroevan/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeroevan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeroevan/subscriptions", "organizations_url": "https://api.github.com/users/aeroevan/orgs", "repos_url": "https://api.github.com/users/aeroevan/repos", "events_url": "https://api.github.com/users/aeroevan/events{/privacy}", "received_events_url": "https://api.github.com/users/aeroevan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1388292542, "node_id": "MDU6TGFiZWwxMzg4MjkyNTQy", "url": "https://api.github.com/repos/numba/llvmlite/labels/needtriage", "name": "needtriage", "color": "b3f754", "default": false, "description": "Needs to be triaged further"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-02T02:37:48Z", "updated_at": "2019-10-02T14:14:41Z", "closed_at": "2019-10-02T14:14:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a problem with the llvm-config flags, but on Fedora 30 (with LLVM 8), llvmlite-0.29.0 requires `export CXX_FLTO_FLAGS=\" -flto -fPIC \"` to build.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/489", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/489/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/489/events", "html_url": "https://github.com/numba/llvmlite/issues/489", "id": 449547981, "node_id": "MDU6SXNzdWU0NDk1NDc5ODE=", "number": 489, "title": "package installation dist-info directory doesn't comply with standards", "user": {"login": "zhimengfan1990", "id": 12429412, "node_id": "MDQ6VXNlcjEyNDI5NDEy", "avatar_url": "https://avatars3.githubusercontent.com/u/12429412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhimengfan1990", "html_url": "https://github.com/zhimengfan1990", "followers_url": "https://api.github.com/users/zhimengfan1990/followers", "following_url": "https://api.github.com/users/zhimengfan1990/following{/other_user}", "gists_url": "https://api.github.com/users/zhimengfan1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhimengfan1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhimengfan1990/subscriptions", "organizations_url": "https://api.github.com/users/zhimengfan1990/orgs", "repos_url": "https://api.github.com/users/zhimengfan1990/repos", "events_url": "https://api.github.com/users/zhimengfan1990/events{/privacy}", "received_events_url": "https://api.github.com/users/zhimengfan1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-29T00:45:03Z", "updated_at": "2019-06-03T00:52:17Z", "closed_at": "2019-06-03T00:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "With `llvmlite==0.28.0`, the wheel file basename is `llvmlite-0.28.0-1-cp27-cp27mu-manylinux1_x86_64.whl`. By the standard, the installation dist-info directory should be `llvmlite-0.28.0-1.dist-info`, while the actual directory is `llvmlite-0.28.0.dist-info`(without `-1`). This cause some error in our build system. Please fix this, thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/488", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/488/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/488/events", "html_url": "https://github.com/numba/llvmlite/issues/488", "id": 447414155, "node_id": "MDU6SXNzdWU0NDc0MTQxNTU=", "number": 488, "title": "Generate LLVM IR from CPython ast?", "user": {"login": "Obround", "id": 20801921, "node_id": "MDQ6VXNlcjIwODAxOTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20801921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Obround", "html_url": "https://github.com/Obround", "followers_url": "https://api.github.com/users/Obround/followers", "following_url": "https://api.github.com/users/Obround/following{/other_user}", "gists_url": "https://api.github.com/users/Obround/gists{/gist_id}", "starred_url": "https://api.github.com/users/Obround/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Obround/subscriptions", "organizations_url": "https://api.github.com/users/Obround/orgs", "repos_url": "https://api.github.com/users/Obround/repos", "events_url": "https://api.github.com/users/Obround/events{/privacy}", "received_events_url": "https://api.github.com/users/Obround/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-23T01:53:50Z", "updated_at": "2019-05-23T22:42:14Z", "closed_at": "2019-05-23T13:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there some way I can generate LLVM IR from python ast? For example, suppose I have an ast looking like this:\r\n\r\n```python\r\nimport ast\r\ntree = ast.parse(\"print ('Hello Python!!')\")\r\nprint(exec(compile(tree, filename=\"<ast>\", mode=\"exec\")))\r\n```\r\nInstead of this printing Hello Python!!, can I make it print LLVM IR? Note that I don't have to use python's ast module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/482", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/482/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/482/events", "html_url": "https://github.com/numba/llvmlite/issues/482", "id": 439118303, "node_id": "MDU6SXNzdWU0MzkxMTgzMDM=", "number": 482, "title": "enum34 required when installing on python 3.6", "user": {"login": "Korijn", "id": 1882046, "node_id": "MDQ6VXNlcjE4ODIwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1882046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Korijn", "html_url": "https://github.com/Korijn", "followers_url": "https://api.github.com/users/Korijn/followers", "following_url": "https://api.github.com/users/Korijn/following{/other_user}", "gists_url": "https://api.github.com/users/Korijn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Korijn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Korijn/subscriptions", "organizations_url": "https://api.github.com/users/Korijn/orgs", "repos_url": "https://api.github.com/users/Korijn/repos", "events_url": "https://api.github.com/users/Korijn/events{/privacy}", "received_events_url": "https://api.github.com/users/Korijn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-01T10:00:11Z", "updated_at": "2019-05-20T16:16:17Z", "closed_at": "2019-05-20T16:16:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "llvmlite==0.28.0 requires enum34 even when installing on python 3.6. this breaks python environments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/480", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/480/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/480/events", "html_url": "https://github.com/numba/llvmlite/issues/480", "id": 435384704, "node_id": "MDU6SXNzdWU0MzUzODQ3MDQ=", "number": 480, "title": "llvmlite rejects llvm 7.1.0", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T10:52:55Z", "updated_at": "2019-05-10T14:40:37Z", "closed_at": "2019-05-10T14:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "LLVM 7.1.0 has been released, and should be entirely API compatible with LLVM 7.0.x. However, llvmlite rejects it outright:\r\n\r\n```\r\npython2.7 setup.py build        \r\nrunning build                           \r\ngot version from expanded keyword {'version': '0.28.0', 'full': '685b7b6941617f616f3f0b609e381af52da26782'}\r\nrunning build_ext                                                                                                                                 \r\n/usr/bin/python2.7 /tmp/portage/dev-python/llvmlite-0.28.0/work/llvmlite-0.28.0/ffi/build.py                                                      \r\nLLVM version... 7.1.0                                                                                                                             \r\n                                                                                                                                                  \r\nTraceback (most recent call last):                                                                                                                \r\n  File \"/tmp/portage/dev-python/llvmlite-0.28.0/work/llvmlite-0.28.0/ffi/build.py\", line 167, in <module>                                         \r\n    main()                                                          \r\n  File \"/tmp/portage/dev-python/llvmlite-0.28.0/work/llvmlite-0.28.0/ffi/build.py\", line 157, in main\r\n    main_posix('linux', '.so')                                                                                                                    \r\n  File \"/tmp/portage/dev-python/llvmlite-0.28.0/work/llvmlite-0.28.0/ffi/build.py\", line 119, in main_posix\r\n    raise RuntimeError(msg)                                                                                                                       \r\nRuntimeError: Building llvmlite requires LLVM 7.0.x. Be sure to set LLVM_CONFIG to the right executable path.\r\nRead the documentation at http://llvmlite.pydata.org/ for more information about building llvmlite.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/479", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/479/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/479/events", "html_url": "https://github.com/numba/llvmlite/issues/479", "id": 430910767, "node_id": "MDU6SXNzdWU0MzA5MTA3Njc=", "number": 479, "title": "I feel sorry for not having read that `enum34` is needed for ALL version of python < 3.4, meaning that it affects python2.X as well.", "user": {"login": "hmchaitra", "id": 31068040, "node_id": "MDQ6VXNlcjMxMDY4MDQw", "avatar_url": "https://avatars1.githubusercontent.com/u/31068040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmchaitra", "html_url": "https://github.com/hmchaitra", "followers_url": "https://api.github.com/users/hmchaitra/followers", "following_url": "https://api.github.com/users/hmchaitra/following{/other_user}", "gists_url": "https://api.github.com/users/hmchaitra/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmchaitra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmchaitra/subscriptions", "organizations_url": "https://api.github.com/users/hmchaitra/orgs", "repos_url": "https://api.github.com/users/hmchaitra/repos", "events_url": "https://api.github.com/users/hmchaitra/events{/privacy}", "received_events_url": "https://api.github.com/users/hmchaitra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-09T11:17:25Z", "updated_at": "2019-05-20T16:16:39Z", "closed_at": "2019-05-20T16:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I feel sorry for not having read that `enum34` is needed for ALL version of python < 3.4, meaning that it affects python2.X as well.\r\n\r\n_Originally posted by @arranger1044 in https://github.com/numba/llvmlite/issues/36#issuecomment-71459009_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/476", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/476/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/476/events", "html_url": "https://github.com/numba/llvmlite/issues/476", "id": 426593570, "node_id": "MDU6SXNzdWU0MjY1OTM1NzA=", "number": 476, "title": "LLVM 8 support", "user": {"login": "baerbock", "id": 45873962, "node_id": "MDQ6VXNlcjQ1ODczOTYy", "avatar_url": "https://avatars1.githubusercontent.com/u/45873962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baerbock", "html_url": "https://github.com/baerbock", "followers_url": "https://api.github.com/users/baerbock/followers", "following_url": "https://api.github.com/users/baerbock/following{/other_user}", "gists_url": "https://api.github.com/users/baerbock/gists{/gist_id}", "starred_url": "https://api.github.com/users/baerbock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baerbock/subscriptions", "organizations_url": "https://api.github.com/users/baerbock/orgs", "repos_url": "https://api.github.com/users/baerbock/repos", "events_url": "https://api.github.com/users/baerbock/events{/privacy}", "received_events_url": "https://api.github.com/users/baerbock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-28T16:34:18Z", "updated_at": "2019-05-10T16:50:09Z", "closed_at": "2019-05-10T16:50:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "How far is the LLVM 8 support?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/475", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/475/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/475/events", "html_url": "https://github.com/numba/llvmlite/issues/475", "id": 421310187, "node_id": "MDU6SXNzdWU0MjEzMTAxODc=", "number": 475, "title": "LLVM memory error after update to llvmlite 0.27.1 or 0.28.0", "user": {"login": "dkitch", "id": 1103033, "node_id": "MDQ6VXNlcjExMDMwMzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1103033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkitch", "html_url": "https://github.com/dkitch", "followers_url": "https://api.github.com/users/dkitch/followers", "following_url": "https://api.github.com/users/dkitch/following{/other_user}", "gists_url": "https://api.github.com/users/dkitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkitch/subscriptions", "organizations_url": "https://api.github.com/users/dkitch/orgs", "repos_url": "https://api.github.com/users/dkitch/repos", "events_url": "https://api.github.com/users/dkitch/events{/privacy}", "received_events_url": "https://api.github.com/users/dkitch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 120242035, "node_id": "MDU6TGFiZWwxMjAyNDIwMzU=", "url": "https://api.github.com/repos/numba/llvmlite/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-15T01:12:03Z", "updated_at": "2019-03-15T17:04:53Z", "closed_at": "2019-03-15T17:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a fairly large function which I compile and cache using numba njit(cache=True), on Ubuntu 18.04.2, Python 3.6.7. The function compiles and caches fine on llvmlite-0.27.0 + numba-0.42.0, or older combinations. After updating to llvmlite-0.27.1+numba-0.42.1 or llvmlite-0.28.0+numba-0.43.0 compilation works fine but loading the function from cache throws an error \r\n\r\n`\r\nLLVM ERROR: Unable to allocate memory for common symbols!`\r\n\r\nDeleting the cache and forcing njit to recompile works fine, so the error is only related to loading from the cached binary. The error also goes away if the function is simplified (removing the l == 5 and l == 6 cases for example).\r\n\r\nI'm installing numba and llvmlite using pypi.\r\n\r\nI'm copying the function for reference. I was not able to find a more minimal reproducer because the issue seems to surface specifically because the function is pretty large. \r\n\r\nI initially thought the issue was due to the jump from 0.27.0 to 0.28.0 but the fact that it appears from 0.27.0 to 0.27.1 is very confusing to me since the release notes suggest that there were no changes to the source code between these two. Either way, the problem persists in the latest versions. Any help would be greatly appreciated!\r\n\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport numpy as np\r\nfrom numba import njit, int64, float64, complex128\r\n\r\n@njit(complex128[:](int64[:],int64[:],complex128[:,:],float64[:,:]),cache=True,nogil=True,fastmath=True)\r\ndef sph_prod_spherical(lvec, mvec, epi, cti):\r\n    res = np.zeros(cti.shape, dtype=np.complex128)\r\n    for lmi, (l, m) in enumerate(zip(lvec, mvec)):\r\n        ep = epi[lmi]\r\n        ct = cti[lmi]\r\n\r\n        if l == 0:\r\n            if m == 0:\r\n                res[lmi] = 1 / 2 * np.sqrt(1 / np.pi)\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        elif l == 1:\r\n            if m == -1:\r\n                res[lmi] = (np.sqrt(1 - ct ** 2) * np.sqrt(3 / (2 * np.pi))) / (2 * ep)\r\n\r\n            elif m == 0:\r\n                res[lmi] = (ct * np.sqrt(3 / np.pi)) / 2\r\n\r\n            elif m == 1:\r\n                res[lmi] = -(np.sqrt(1 - ct ** 2) * ep * np.sqrt(3 / (2 * np.pi))) / 2\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        elif l == 2:\r\n            if m == -2:\r\n                res[lmi] = -((-1 + ct ** 2) * np.sqrt(15 / (2 * np.pi))) / (4 * ep ** 2)\r\n\r\n            elif m == -1:\r\n                res[lmi] = (ct * np.sqrt(1 - ct ** 2) * np.sqrt(15 / (2 * np.pi))) / (2 * ep)\r\n\r\n            elif m == 0:\r\n                res[lmi] = ((-1 + 3 * ct ** 2) * np.sqrt(5 / np.pi)) / 4\r\n\r\n            elif m == 1:\r\n                res[lmi] = -(ct * np.sqrt(1 - ct ** 2) * ep * np.sqrt(15 / (2 * np.pi))) / 2\r\n\r\n            elif m == 2:\r\n                res[lmi] = -((-1 + ct ** 2) * ep ** 2 * np.sqrt(15 / (2 * np.pi))) / 4\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        elif l == 3:\r\n            if m == -3:\r\n                res[lmi] = ((1 - ct ** 2) ** (3 / 2) * np.sqrt(35 / np.pi)) / (8 * ep ** 3)\r\n\r\n            elif m == -2:\r\n                res[lmi] = -(ct * (-1 + ct ** 2) * np.sqrt(105 / (2 * np.pi))) / (4 * ep ** 2)\r\n\r\n            elif m == -1:\r\n                res[lmi] = -((1 - 5 * ct ** 2) * np.sqrt(1 - ct ** 2) * np.sqrt(21 / np.pi)) / (8 * ep)\r\n\r\n            elif m == 0:\r\n                res[lmi] = (ct * (-3 + 5 * ct ** 2) * np.sqrt(7 / np.pi)) / 4\r\n\r\n            elif m == 1:\r\n                res[lmi] = -(np.sqrt(1 - ct ** 2) * (-1 + 5 * ct ** 2) * ep * np.sqrt(21 / np.pi)) / 8\r\n\r\n            elif m == 2:\r\n                res[lmi] = -(ct * (-1 + ct ** 2) * ep ** 2 * np.sqrt(105 / (2 * np.pi))) / 4\r\n\r\n            elif m == 3:\r\n                res[lmi] = -((1 - ct ** 2) ** (3 / 2) * ep ** 3 * np.sqrt(35 / np.pi)) / 8\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        elif l == 4:\r\n            if m == -4:\r\n                res[lmi] = (3 * (-1 + ct ** 2) ** 2 * np.sqrt(35 / (2 * np.pi))) / (16 * ep ** 4)\r\n\r\n            elif m == -3:\r\n                res[lmi] = (3 * ct * (1 - ct ** 2) ** (3 / 2) * np.sqrt(35 / np.pi)) / (8 * ep ** 3)\r\n\r\n            elif m == -2:\r\n                res[lmi] = (-3 * (-1 + ct ** 2) * (-1 + 7 * ct ** 2) * np.sqrt(5 / (2 * np.pi))) / (8 * ep ** 2)\r\n\r\n            elif m == -1:\r\n                res[lmi] = (3 * ct * np.sqrt(5 - 5 * ct ** 2) * (-3 + 7 * ct ** 2)) / (8 * ep * np.sqrt(np.pi))\r\n\r\n            elif m == 0:\r\n                res[lmi] = (3 * (3 - 30 * ct ** 2 + 35 * ct ** 4)) / (16 * np.sqrt(np.pi))\r\n\r\n            elif m == 1:\r\n                res[lmi] = (-3 * ct * np.sqrt(5 - 5 * ct ** 2) * (-3 + 7 * ct ** 2) * ep) / (8 * np.sqrt(np.pi))\r\n\r\n            elif m == 2:\r\n                res[lmi] = (-3 * (-1 + ct ** 2) * (-1 + 7 * ct ** 2) * ep ** 2 * np.sqrt(5 / (2 * np.pi))) / 8\r\n\r\n            elif m == 3:\r\n                res[lmi] = (-3 * ct * (1 - ct ** 2) ** (3 / 2) * ep ** 3 * np.sqrt(35 / np.pi)) / 8\r\n\r\n            elif m == 4:\r\n                res[lmi] = (3 * (-1 + ct ** 2) ** 2 * ep ** 4 * np.sqrt(35 / (2 * np.pi))) / 16\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        elif l == 5:\r\n            if m == -5:\r\n                res[lmi] = (3 * (1 - ct ** 2) ** (5 / 2) * np.sqrt(77 / np.pi)) / (32 * ep ** 5)\r\n\r\n            elif m == -4:\r\n                res[lmi] = (3 * ct * (-1 + ct ** 2) ** 2 * np.sqrt(385 / (2 * np.pi))) / (16 * ep ** 4)\r\n\r\n            elif m == -3:\r\n                res[lmi] = -((1 - 9 * ct ** 2) * (1 - ct ** 2) ** (3 / 2) * np.sqrt(385 / np.pi)) / (32 * ep ** 3)\r\n\r\n            elif m == -2:\r\n                res[lmi] = -(ct * (-1 + ct ** 2) * (-1 + 3 * ct ** 2) * np.sqrt(1155 / (2 * np.pi))) / (8 * ep ** 2)\r\n\r\n            elif m == -1:\r\n                res[lmi] = (np.sqrt(1 - ct ** 2) * (1 - 14 * ct ** 2 + 21 * ct ** 4) * np.sqrt(165 / (2 * np.pi))) / (\r\n                            16 * ep)\r\n\r\n            elif m == 0:\r\n                res[lmi] = (ct * (15 - 70 * ct ** 2 + 63 * ct ** 4) * np.sqrt(11 / np.pi)) / 16\r\n\r\n            elif m == 1:\r\n                res[lmi] = -(np.sqrt(1 - ct ** 2) * (1 - 14 * ct ** 2 + 21 * ct ** 4) * ep * np.sqrt(\r\n                    165 / (2 * np.pi))) / 16\r\n\r\n            elif m == 2:\r\n                res[lmi] = -(ct * (-1 + ct ** 2) * (-1 + 3 * ct ** 2) * ep ** 2 * np.sqrt(1155 / (2 * np.pi))) / 8\r\n\r\n            elif m == 3:\r\n                res[lmi] = -((1 - ct ** 2) ** (3 / 2) * (-1 + 9 * ct ** 2) * ep ** 3 * np.sqrt(385 / np.pi)) / 32\r\n\r\n            elif m == 4:\r\n                res[lmi] = (3 * ct * (-1 + ct ** 2) ** 2 * ep ** 4 * np.sqrt(385 / (2 * np.pi))) / 16\r\n\r\n            elif m == 5:\r\n                res[lmi] = (-3 * (1 - ct ** 2) ** (5 / 2) * ep ** 5 * np.sqrt(77 / np.pi)) / 32\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        elif l == 6:\r\n            if m == -6:\r\n                res[lmi] = -((-1 + ct ** 2) ** 3 * np.sqrt(3003 / np.pi)) / (64 * ep ** 6)\r\n\r\n            elif m == -5:\r\n                res[lmi] = (3 * ct * (1 - ct ** 2) ** (5 / 2) * np.sqrt(1001 / np.pi)) / (32 * ep ** 5)\r\n\r\n            elif m == -4:\r\n                res[lmi] = (3 * (-1 + ct ** 2) ** 2 * (-1 + 11 * ct ** 2) * np.sqrt(91 / (2 * np.pi))) / (32 * ep ** 4)\r\n\r\n            elif m == -3:\r\n                res[lmi] = (ct * (1 - ct ** 2) ** (3 / 2) * (-3 + 11 * ct ** 2) * np.sqrt(1365 / np.pi)) / (\r\n                            32 * ep ** 3)\r\n\r\n            elif m == -2:\r\n                res[lmi] = -((-1 + ct ** 2) * (1 - 18 * ct ** 2 + 33 * ct ** 4) * np.sqrt(1365 / np.pi)) / (\r\n                            64 * ep ** 2)\r\n\r\n            elif m == -1:\r\n                res[lmi] = (ct * np.sqrt(1 - ct ** 2) * (5 - 30 * ct ** 2 + 33 * ct ** 4) * np.sqrt(\r\n                    273 / (2 * np.pi))) / (16 * ep)\r\n\r\n            elif m == 0:\r\n                res[lmi] = ((-5 + 105 * ct ** 2 - 315 * ct ** 4 + 231 * ct ** 6) * np.sqrt(13 / np.pi)) / 32\r\n\r\n            elif m == 1:\r\n                res[lmi] = -(ct * np.sqrt(1 - ct ** 2) * (5 - 30 * ct ** 2 + 33 * ct ** 4) * ep * np.sqrt(\r\n                    273 / (2 * np.pi))) / 16\r\n\r\n            elif m == 2:\r\n                res[lmi] = -((-1 + ct ** 2) * (1 - 18 * ct ** 2 + 33 * ct ** 4) * ep ** 2 * np.sqrt(1365 / np.pi)) / 64\r\n\r\n            elif m == 3:\r\n                res[lmi] = -(ct * (1 - ct ** 2) ** (3 / 2) * (-3 + 11 * ct ** 2) * ep ** 3 * np.sqrt(1365 / np.pi)) / 32\r\n\r\n            elif m == 4:\r\n                res[lmi] = (3 * (-1 + ct ** 2) ** 2 * (-1 + 11 * ct ** 2) * ep ** 4 * np.sqrt(91 / (2 * np.pi))) / 32\r\n\r\n            elif m == 5:\r\n                res[lmi] = (-3 * ct * (1 - ct ** 2) ** (5 / 2) * ep ** 5 * np.sqrt(1001 / np.pi)) / 32\r\n\r\n            elif m == 6:\r\n                res[lmi] = -((-1 + ct ** 2) ** 3 * ep ** 6 * np.sqrt(3003 / np.pi)) / 64\r\n\r\n            else:\r\n                res[lmi] = 0.0\r\n\r\n        else:\r\n            raise ValueError(\"Unsupported (l,m)\")\r\n\r\n    res = res.T\r\n    res_prod = np.zeros(res.shape[0], dtype=np.complex128)\r\n    for lmi in range(res.shape[0]):\r\n        res_prod[lmi] = np.prod(res[lmi])\r\n    return res_prod\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    lvec = np.array([1,1],dtype=np.int64)\r\n    mvec = np.array([1,1],dtype=np.int64)\r\n    epi = np.zeros((2,2),dtype=np.complex128)\r\n    cti = np.zeros((2,2),dtype=np.float64)\r\n    print(sph_prod_spherical(lvec, mvec, epi, cti))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/473", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/473/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/473/events", "html_url": "https://github.com/numba/llvmlite/issues/473", "id": 421038852, "node_id": "MDU6SXNzdWU0MjEwMzg4NTI=", "number": 473, "title": "What is the minimum requirement for LLVM required by llvmlite ?", "user": {"login": "samfux84", "id": 11944875, "node_id": "MDQ6VXNlcjExOTQ0ODc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11944875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samfux84", "html_url": "https://github.com/samfux84", "followers_url": "https://api.github.com/users/samfux84/followers", "following_url": "https://api.github.com/users/samfux84/following{/other_user}", "gists_url": "https://api.github.com/users/samfux84/gists{/gist_id}", "starred_url": "https://api.github.com/users/samfux84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samfux84/subscriptions", "organizations_url": "https://api.github.com/users/samfux84/orgs", "repos_url": "https://api.github.com/users/samfux84/repos", "events_url": "https://api.github.com/users/samfux84/events{/privacy}", "received_events_url": "https://api.github.com/users/samfux84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T14:07:31Z", "updated_at": "2019-03-15T10:03:03Z", "closed_at": "2019-03-15T10:03:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "LLVM contains the parts:\r\n\r\n- LLVM\r\n- Clang\r\n- compiler-rt\r\n- libc++\r\n- libc++abi\r\n- libunwind\r\n- LLD\r\n- LLDB\r\n- OpenMP\r\n- Polly\r\n- clang-tools-extra\r\n\r\nWhat is the minimum requirement for getting a working llvmlite ?\r\n\r\nIs building LLVM and Clang sufficient or are more parts required ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/472", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/472/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/472/events", "html_url": "https://github.com/numba/llvmlite/issues/472", "id": 420453457, "node_id": "MDU6SXNzdWU0MjA0NTM0NTc=", "number": 472, "title": "Missing version 0.28.0 on Pypi", "user": {"login": "marcelotrevisani", "id": 7882269, "node_id": "MDQ6VXNlcjc4ODIyNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7882269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelotrevisani", "html_url": "https://github.com/marcelotrevisani", "followers_url": "https://api.github.com/users/marcelotrevisani/followers", "following_url": "https://api.github.com/users/marcelotrevisani/following{/other_user}", "gists_url": "https://api.github.com/users/marcelotrevisani/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelotrevisani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelotrevisani/subscriptions", "organizations_url": "https://api.github.com/users/marcelotrevisani/orgs", "repos_url": "https://api.github.com/users/marcelotrevisani/repos", "events_url": "https://api.github.com/users/marcelotrevisani/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelotrevisani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-13T11:38:09Z", "updated_at": "2019-03-14T14:07:34Z", "closed_at": "2019-03-14T14:07:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nCould someone please add the version ``0.28.0`` to the pypi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/471", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/471/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/471/events", "html_url": "https://github.com/numba/llvmlite/issues/471", "id": 420226256, "node_id": "MDU6SXNzdWU0MjAyMjYyNTY=", "number": 471, "title": "No Python 3.5 Wheel on PyPI", "user": {"login": "TobyRoseman", "id": 5420744, "node_id": "MDQ6VXNlcjU0MjA3NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5420744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobyRoseman", "html_url": "https://github.com/TobyRoseman", "followers_url": "https://api.github.com/users/TobyRoseman/followers", "following_url": "https://api.github.com/users/TobyRoseman/following{/other_user}", "gists_url": "https://api.github.com/users/TobyRoseman/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobyRoseman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobyRoseman/subscriptions", "organizations_url": "https://api.github.com/users/TobyRoseman/orgs", "repos_url": "https://api.github.com/users/TobyRoseman/repos", "events_url": "https://api.github.com/users/TobyRoseman/events{/privacy}", "received_events_url": "https://api.github.com/users/TobyRoseman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2019-03-12T22:03:38Z", "updated_at": "2020-06-15T13:37:38Z", "closed_at": "2019-03-14T14:49:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version of [llvmlite on PyPI](https://pypi.org/project/llvmlite/0.27.1/) doesn't have any wheels for Python 3.5. This means if someone tries to install `llvmlite` in a Python 3.5 environment, it will fail unless they happen to also have `llvm-config` installed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/468", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/468/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/468/events", "html_url": "https://github.com/numba/llvmlite/issues/468", "id": 419204144, "node_id": "MDU6SXNzdWU0MTkyMDQxNDQ=", "number": 468, "title": "Support loading from egg files", "user": {"login": "aiudirog", "id": 5399935, "node_id": "MDQ6VXNlcjUzOTk5MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5399935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aiudirog", "html_url": "https://github.com/aiudirog", "followers_url": "https://api.github.com/users/aiudirog/followers", "following_url": "https://api.github.com/users/aiudirog/following{/other_user}", "gists_url": "https://api.github.com/users/aiudirog/gists{/gist_id}", "starred_url": "https://api.github.com/users/aiudirog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aiudirog/subscriptions", "organizations_url": "https://api.github.com/users/aiudirog/orgs", "repos_url": "https://api.github.com/users/aiudirog/repos", "events_url": "https://api.github.com/users/aiudirog/events{/privacy}", "received_events_url": "https://api.github.com/users/aiudirog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-10T16:25:57Z", "updated_at": "2019-03-12T23:06:37Z", "closed_at": "2019-03-12T23:06:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have been working on a Hadoop cluster environment with PySpark where I don't have permissions to add packages to nodes directly, so I have been deploying extra libraries using egg files. My current project gets a 2000x speed increase using Numba and so I wanted to deploy that as well. However, I discovered that the way libllvmlite.so is loaded can't be done from within an egg file. After a few hours of testing different options I did find two ways of making it work:\r\n1. Using SparkContext.addFile to add libllvmlite.so to the working directory and then patching ffi.py to load from the current directory.\r\n2. Using pkg_resources to load from the extracted egg file in the cache.\r\n\r\nI bundled both of these options up into a single patch which skips the pkg_resource option if it isn't importable to prevent adding a new required dependency: https://github.com/aiudirog/llvmlite/commit/4b144662b6f56afd21f351f4dcc562c0a455ac9b\r\n\r\nI am not sure how to create proper test cases for this, so any help would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/464", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/464/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/464/events", "html_url": "https://github.com/numba/llvmlite/issues/464", "id": 413861688, "node_id": "MDU6SXNzdWU0MTM4NjE2ODg=", "number": 464, "title": "Please update copyright year on docs", "user": {"login": "pfalcon", "id": 500451, "node_id": "MDQ6VXNlcjUwMDQ1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/500451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfalcon", "html_url": "https://github.com/pfalcon", "followers_url": "https://api.github.com/users/pfalcon/followers", "following_url": "https://api.github.com/users/pfalcon/following{/other_user}", "gists_url": "https://api.github.com/users/pfalcon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfalcon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfalcon/subscriptions", "organizations_url": "https://api.github.com/users/pfalcon/orgs", "repos_url": "https://api.github.com/users/pfalcon/repos", "events_url": "https://api.github.com/users/pfalcon/events{/privacy}", "received_events_url": "https://api.github.com/users/pfalcon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-24T20:03:24Z", "updated_at": "2019-09-26T00:55:39Z", "closed_at": "2019-09-26T00:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, http://llvmlite.pydata.org/en/latest/ shows:\r\n\r\n> \u00a9 Copyright 2015, Continuum Analytics Revision 9ee77188.\r\n\r\nWhich gives impression that it is yet another unmaintained LLVM bindings. Which is of course not true based on the git history.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/463", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/463/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/463/events", "html_url": "https://github.com/numba/llvmlite/issues/463", "id": 410333718, "node_id": "MDU6SXNzdWU0MTAzMzM3MTg=", "number": 463, "title": "Missing sdist on PyPI for 0.27.1", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-14T14:45:23Z", "updated_at": "2019-03-12T19:10:24Z", "closed_at": "2019-03-12T19:10:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Appears the sdist for 0.27.1 is missing on PyPI. Could it please be uploaded? Thanks. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/462", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/462/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/462/events", "html_url": "https://github.com/numba/llvmlite/issues/462", "id": 409740072, "node_id": "MDU6SXNzdWU0MDk3NDAwNzI=", "number": 462, "title": "Explore building llvm with all targets enabled and masking in desired components/targets", "user": {"login": "stuartarchibald", "id": 907717, "node_id": "MDQ6VXNlcjkwNzcxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/907717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuartarchibald", "html_url": "https://github.com/stuartarchibald", "followers_url": "https://api.github.com/users/stuartarchibald/followers", "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}", "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions", "organizations_url": "https://api.github.com/users/stuartarchibald/orgs", "repos_url": "https://api.github.com/users/stuartarchibald/repos", "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}", "received_events_url": "https://api.github.com/users/stuartarchibald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-02-13T10:44:53Z", "updated_at": "2019-06-04T01:22:12Z", "closed_at": "2019-06-04T01:22:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/conda-forge/llvmdev-feedstock/pull/59 for discussion/context.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/459", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/459/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/459/events", "html_url": "https://github.com/numba/llvmlite/issues/459", "id": 406819297, "node_id": "MDU6SXNzdWU0MDY4MTkyOTc=", "number": 459, "title": "llvmlite 0.27.1 not available through `pip install`", "user": {"login": "atzannes", "id": 1581907, "node_id": "MDQ6VXNlcjE1ODE5MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1581907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atzannes", "html_url": "https://github.com/atzannes", "followers_url": "https://api.github.com/users/atzannes/followers", "following_url": "https://api.github.com/users/atzannes/following{/other_user}", "gists_url": "https://api.github.com/users/atzannes/gists{/gist_id}", "starred_url": "https://api.github.com/users/atzannes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atzannes/subscriptions", "organizations_url": "https://api.github.com/users/atzannes/orgs", "repos_url": "https://api.github.com/users/atzannes/repos", "events_url": "https://api.github.com/users/atzannes/events{/privacy}", "received_events_url": "https://api.github.com/users/atzannes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sklam", "id": 1929845, "node_id": "MDQ6VXNlcjE5Mjk4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklam", "html_url": "https://github.com/sklam", "followers_url": "https://api.github.com/users/sklam/followers", "following_url": "https://api.github.com/users/sklam/following{/other_user}", "gists_url": "https://api.github.com/users/sklam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklam/subscriptions", "organizations_url": "https://api.github.com/users/sklam/orgs", "repos_url": "https://api.github.com/users/sklam/repos", "events_url": "https://api.github.com/users/sklam/events{/privacy}", "received_events_url": "https://api.github.com/users/sklam/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sklam", "id": 1929845, "node_id": "MDQ6VXNlcjE5Mjk4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklam", "html_url": "https://github.com/sklam", "followers_url": "https://api.github.com/users/sklam/followers", "following_url": "https://api.github.com/users/sklam/following{/other_user}", "gists_url": "https://api.github.com/users/sklam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklam/subscriptions", "organizations_url": "https://api.github.com/users/sklam/orgs", "repos_url": "https://api.github.com/users/sklam/repos", "events_url": "https://api.github.com/users/sklam/events{/privacy}", "received_events_url": "https://api.github.com/users/sklam/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-02-05T14:52:46Z", "updated_at": "2019-02-13T20:30:59Z", "closed_at": "2019-02-13T20:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can see `llvmlite 0.27.1` [on pypi](https://pypi.org/project/llvmlite/0.27.1/#history), but when I try to install it with `pip intall llvmlite==0.27.1`, I get the error saying the version is not available. I can see that the package is missing from the [pypi simple index](https://pypi.org/simple/llvmlite/). \r\n\r\nThe reason this is annoying, is because I use `pipenv` which updated my dependency to `llvmlite=0.27.1`, and so I now have to pin that transitive dependency to get by build going. I don't know enough about, pypi, pipenv, and the pypi release process to know which of these three parties need to fix something, so I thought I'd start by asking here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/457", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/457/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/457/events", "html_url": "https://github.com/numba/llvmlite/issues/457", "id": 403392217, "node_id": "MDU6SXNzdWU0MDMzOTIyMTc=", "number": 457, "title": "llvmlite-0.27 segfaults win64", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1388292542, "node_id": "MDU6TGFiZWwxMzg4MjkyNTQy", "url": "https://api.github.com/repos/numba/llvmlite/labels/needtriage", "name": "needtriage", "color": "b3f754", "default": false, "description": "Needs to be triaged further"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-01-26T01:47:43Z", "updated_at": "2019-06-03T13:40:00Z", "closed_at": "2019-05-10T16:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've observed that some of our automated tests fail on 64bit python(3.5,3.6,3.7) on windows.\r\nYou can see the tests here: https://ci.appveyor.com/project/kmantel/psyneulink/builds/21869697/job/ti1ivglldaopme5o\r\nIt looks like uninitialized or NULL pointer dereference (`OSError: exception: access violation reading 0xFFFFFFFFFFFFFFFF\r\npsyneulink\\core\\llvm\\__init__.py:77: OSError\r\n`).\r\nIt might be an error in our scripts, but the same test run ok using llvmlite-0.26 (win64) as well as llvmlite-0.27 on win32, linux and macos.\r\n\r\nI don't have a win64 setup other than the appveyor environment, so I can't really investigate further.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/453", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/453/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/453/events", "html_url": "https://github.com/numba/llvmlite/issues/453", "id": 401973950, "node_id": "MDU6SXNzdWU0MDE5NzM5NTA=", "number": 453, "title": "Long label name crashes llvm7", "user": {"login": "sklam", "id": 1929845, "node_id": "MDQ6VXNlcjE5Mjk4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklam", "html_url": "https://github.com/sklam", "followers_url": "https://api.github.com/users/sklam/followers", "following_url": "https://api.github.com/users/sklam/following{/other_user}", "gists_url": "https://api.github.com/users/sklam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklam/subscriptions", "organizations_url": "https://api.github.com/users/sklam/orgs", "repos_url": "https://api.github.com/users/sklam/repos", "events_url": "https://api.github.com/users/sklam/events{/privacy}", "received_events_url": "https://api.github.com/users/sklam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T22:02:53Z", "updated_at": "2019-01-23T15:16:01Z", "closed_at": "2019-01-23T15:16:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some builder API like the `.if_then` will add suffix (i.e. '.if' and '.endif').  When nested a lot, the label names can grew to a point that it corrupts LLVM7.  Older LLVM works without the problem.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/445", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/445/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/445/events", "html_url": "https://github.com/numba/llvmlite/issues/445", "id": 394731551, "node_id": "MDU6SXNzdWUzOTQ3MzE1NTE=", "number": 445, "title": "PyPI package for 0.27.0", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-28T22:32:43Z", "updated_at": "2018-12-31T19:26:10Z", "closed_at": "2018-12-31T19:26:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to get a PyPI package for 0.27.0? We need this for the conda-forge package to be built, which is also needed for building the `numba` package. Thanks for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/443", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/443/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/443/events", "html_url": "https://github.com/numba/llvmlite/issues/443", "id": 394198012, "node_id": "MDU6SXNzdWUzOTQxOTgwMTI=", "number": 443, "title": "relocation R_X86_64_PC32 against symbol `_ZTVN4llvm11raw_ostreamE@@LLVM_7' can not be used", "user": {"login": "danstender", "id": 203159, "node_id": "MDQ6VXNlcjIwMzE1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/203159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danstender", "html_url": "https://github.com/danstender", "followers_url": "https://api.github.com/users/danstender/followers", "following_url": "https://api.github.com/users/danstender/following{/other_user}", "gists_url": "https://api.github.com/users/danstender/gists{/gist_id}", "starred_url": "https://api.github.com/users/danstender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danstender/subscriptions", "organizations_url": "https://api.github.com/users/danstender/orgs", "repos_url": "https://api.github.com/users/danstender/repos", "events_url": "https://api.github.com/users/danstender/events{/privacy}", "received_events_url": "https://api.github.com/users/danstender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-12-26T16:20:44Z", "updated_at": "2019-05-16T06:53:51Z", "closed_at": "2019-01-04T19:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\ntrying to build llvmlite 0.27.1rc1 this build break came up:\r\n```\r\n++  -shared -I/usr/lib/llvm-7/include -fno-exceptions -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-rtti -g -flto assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp linker.cpp object_file.cpp -o libllvmlite.so -Wl,-z,relro -L/usr/lib/llvm-7/lib -flto -Wl,--exclude-libs=ALL -lLLVM-7\r\ntransforms.cpp:10:32: warning: 'unwrap' violates the C++ One Definition Rule  [-Wodr]\r\n     inline PassManagerBuilder *unwrap(LLVMPassManagerBuilderRef P) {\r\n                                ^\r\nexecutionengine.cpp:53:27: note: return value type mismatch\r\n     inline TargetMachine *unwrap(LLVMTargetMachineRef P) {\r\n                           ^\r\n/usr/lib/llvm-7/include/llvm/Target/TargetMachine.h:59:7: note: type name 'llvm::TargetMachine' should match type name 'llvm::PassManagerBuilder'\r\n class TargetMachine {\r\n       ^\r\n/usr/lib/llvm-7/include/llvm/Transforms/IPO/PassManagerBuilder.h:59:7: note: the incompatible type is defined here\r\n class PassManagerBuilder {\r\n       ^\r\nexecutionengine.cpp:53:27: note: 'unwrap' was previously declared here\r\n     inline TargetMachine *unwrap(LLVMTargetMachineRef P) {\r\n                           ^\r\nexecutionengine.cpp:53:27: note: code may be misoptimized unless -fno-strict-aliasing is used\r\n/usr/bin/ld: /tmp/ccmWo70g.ltrans0.ltrans.o: relocation R_X86_64_PC32 against symbol `_ZTVN4llvm11raw_ostreamE@@LLVM_7' can not be used when making a shared object; recompile with -fPIC\r\n/usr/bin/ld: final link failed: bad value\r\ncollect2: error: ld returned 1 exit status\r\nmake[1]: *** [Makefile.linux:22: libllvmlite.so] Error 1\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/442", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/442/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/442/events", "html_url": "https://github.com/numba/llvmlite/issues/442", "id": 393897484, "node_id": "MDU6SXNzdWUzOTM4OTc0ODQ=", "number": 442, "title": "Identified Struct Types doesn't implement 'gep'", "user": {"login": "hassanalinali", "id": 4151505, "node_id": "MDQ6VXNlcjQxNTE1MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4151505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hassanalinali", "html_url": "https://github.com/hassanalinali", "followers_url": "https://api.github.com/users/hassanalinali/followers", "following_url": "https://api.github.com/users/hassanalinali/following{/other_user}", "gists_url": "https://api.github.com/users/hassanalinali/gists{/gist_id}", "starred_url": "https://api.github.com/users/hassanalinali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hassanalinali/subscriptions", "organizations_url": "https://api.github.com/users/hassanalinali/orgs", "repos_url": "https://api.github.com/users/hassanalinali/repos", "events_url": "https://api.github.com/users/hassanalinali/events{/privacy}", "received_events_url": "https://api.github.com/users/hassanalinali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-24T15:14:35Z", "updated_at": "2019-02-03T18:34:44Z", "closed_at": "2019-02-03T18:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently Identified Struct types do not implement gep, and this results in them being basically unusable. I saw that there was another issue a long time ago #52 and it also followed with a merged pull request #58, I would like to know why or when the contribution got deleted, or if you need some help to fix the issue.\r\n\r\nI would really love to help if that's the case since Identified Struct Types are unusable, you can't store or load anything. Please let me know your opinion on the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/420", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/420/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/420/events", "html_url": "https://github.com/numba/llvmlite/issues/420", "id": 381069212, "node_id": "MDU6SXNzdWUzODEwNjkyMTI=", "number": 420, "title": "Can I change operands of an instruction?", "user": {"login": "aqjune", "id": 6484889, "node_id": "MDQ6VXNlcjY0ODQ4ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6484889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aqjune", "html_url": "https://github.com/aqjune", "followers_url": "https://api.github.com/users/aqjune/followers", "following_url": "https://api.github.com/users/aqjune/following{/other_user}", "gists_url": "https://api.github.com/users/aqjune/gists{/gist_id}", "starred_url": "https://api.github.com/users/aqjune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aqjune/subscriptions", "organizations_url": "https://api.github.com/users/aqjune/orgs", "repos_url": "https://api.github.com/users/aqjune/repos", "events_url": "https://api.github.com/users/aqjune/events{/privacy}", "received_events_url": "https://api.github.com/users/aqjune/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T09:22:21Z", "updated_at": "2018-11-23T14:29:01Z", "closed_at": "2018-11-23T14:29:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to change operands of an instruction which is already created?\r\n\r\nFor example,\r\n\r\n```\r\nirb = ir.IRBuilder(..)\r\ninst = irb.add(undef, undef)\r\n```\r\n\r\nis it possible to change operands of inst after `irb.add`?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/418", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/418/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/418/events", "html_url": "https://github.com/numba/llvmlite/issues/418", "id": 378916774, "node_id": "MDU6SXNzdWUzNzg5MTY3NzQ=", "number": 418, "title": "KeyError is not defined in binding/ffi", "user": {"login": "dnelson86", "id": 3587498, "node_id": "MDQ6VXNlcjM1ODc0OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3587498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnelson86", "html_url": "https://github.com/dnelson86", "followers_url": "https://api.github.com/users/dnelson86/followers", "following_url": "https://api.github.com/users/dnelson86/following{/other_user}", "gists_url": "https://api.github.com/users/dnelson86/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnelson86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnelson86/subscriptions", "organizations_url": "https://api.github.com/users/dnelson86/orgs", "repos_url": "https://api.github.com/users/dnelson86/repos", "events_url": "https://api.github.com/users/dnelson86/events{/privacy}", "received_events_url": "https://api.github.com/users/dnelson86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T21:06:48Z", "updated_at": "2018-11-17T19:09:06Z", "closed_at": "2018-11-17T19:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've run into:\r\n\r\n```python\r\nException ignored in: <bound method ObjectRef.__del__ of <llvmlite.binding.executionengine.ExecutionEngine object at 0x7f96d11cfd30>>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/llvmlite/binding/ffi.py\", line 243, in __del__\r\n  File \"/usr/local/lib/python3.6/site-packages/llvmlite/binding/ffi.py\", line 204, in close\r\n  File \"/usr/local/lib/python3.6/site-packages/llvmlite/binding/executionengine.py\", line 205, in _dispose\r\n  File \"/usr/local/lib/python3.6/site-packages/llvmlite/binding/ffi.py\", line 52, in __getattr__\r\nNameError: name 'KeyError' is not defined\r\n```\r\n\r\nwith cffi 1.11.5, llvmlite 0.25.0, numba 0.40.1, python 3.6.7. Am I missing something obvious here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/416", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/416/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/416/events", "html_url": "https://github.com/numba/llvmlite/issues/416", "id": 377126515, "node_id": "MDU6SXNzdWUzNzcxMjY1MTU=", "number": 416, "title": "[Manually Install llvmlite] OSError: [Errno 2] No such file or directory", "user": {"login": "zhangysh1995", "id": 8340592, "node_id": "MDQ6VXNlcjgzNDA1OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8340592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangysh1995", "html_url": "https://github.com/zhangysh1995", "followers_url": "https://api.github.com/users/zhangysh1995/followers", "following_url": "https://api.github.com/users/zhangysh1995/following{/other_user}", "gists_url": "https://api.github.com/users/zhangysh1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangysh1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangysh1995/subscriptions", "organizations_url": "https://api.github.com/users/zhangysh1995/orgs", "repos_url": "https://api.github.com/users/zhangysh1995/repos", "events_url": "https://api.github.com/users/zhangysh1995/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangysh1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-04T06:44:10Z", "updated_at": "2018-11-04T07:05:37Z", "closed_at": "2018-11-04T07:05:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the [Docs](https://llvmlite.readthedocs.io/en/latest/admin-guide/install.html) to build, (using **vagrant** for VM and **Conda** for virtual environment)\r\n````\r\n(devp) vagrant@ubuntu-xenial:~$ export LLVM_CONFIG=/home/vagrant/anaconda3/envs/devp/bin/llvm-config\r\n(devp) vagrant@ubuntu-xenial:~$ cd llvmlite/; python setup.py build\r\n/home/vagrant/anaconda3/envs/devp/lib/python2.7/site-packages/setuptools/dist.py:398: UserWarning: Normalizing '0.26.0dev0+51.g5be6c73' to '0.26.0.dev0+51.g5be6c73'\r\n  normalized_version,\r\nrunning build\r\ngot version from VCS {'version': '0.26.0dev0+51.g5be6c73', 'full': '5be6c7315869345fa0c98253441512343aeec47e'}\r\nrunning build_ext\r\n/home/vagrant/anaconda3/envs/devp/bin/python /home/vagrant/llvmlite/ffi/build.py\r\nLLVM version... 6.0.0\r\n\r\nSVML detected\r\nTraceback (most recent call last):\r\n  File \"/home/vagrant/llvmlite/ffi/build.py\", line 167, in <module>\r\n    main()\r\n  File \"/home/vagrant/llvmlite/ffi/build.py\", line 157, in main\r\n    main_posix('linux', '.so')\r\n  File \"/home/vagrant/llvmlite/ffi/build.py\", line 149, in main_posix\r\n    subprocess.check_call(['make', '-f', makefile])\r\n  File \"/home/vagrant/anaconda3/envs/devp/lib/python2.7/subprocess.py\", line 185, in check_call\r\n    retcode = call(*popenargs, **kwargs)\r\n  File \"/home/vagrant/anaconda3/envs/devp/lib/python2.7/subprocess.py\", line 172, in call\r\n    return Popen(*popenargs, **kwargs).wait()\r\n  File \"/home/vagrant/anaconda3/envs/devp/lib/python2.7/subprocess.py\", line 394, in __init__\r\n    errread, errwrite)\r\n  File \"/home/vagrant/anaconda3/envs/devp/lib/python2.7/subprocess.py\", line 1047, in _execute_child\r\n    raise child_exception\r\nOSError: [Errno 2] No such file or directory\r\nerror: command '/home/vagrant/anaconda3/envs/devp/bin/python' failed with exit status 1\r\n````\r\nThe doc says:\r\n\r\n> If your LLVM is installed in a nonstandard location, set the LLVM_CONFIG environment variable to the location of the corresponding llvm-config or llvm-config.exe executable. This variable must persist into the installation of llvmlite\u2014for example, into a Python environment.\r\n> \r\n> EXAMPLE: If LLVM is installed in /opt/llvm/ with the llvm-config binary located at /opt/llvm/bin/llvm-config, set LLVM_CONFIG=/opt/llvm/bin/llvm-config.\r\n\r\n\r\nBut my `llvm-config` path is correct:\r\n````\r\n(devp) vagrant@ubuntu-xenial:~/llvmlite$ /home/vagrant/anaconda3/envs/devp/bin/llvm-config\r\nusage: llvm-config <OPTION>... [<COMPONENT>...]\r\n\r\nGet various configuration information needed to compile programs which use\r\nLLVM.  Typically called from 'configure' scripts.  Examples:\r\n  llvm-config --cxxflags\r\n  llvm-config --ldflags\r\n  llvm-config --libs engine bcreader scalaropts\r\n\r\nOptions:\r\n  --version         Print LLVM version.\r\n````\r\n\r\nMy packages:\r\n````\r\nllvmdev             6.0.0              hf484d3e_4    numba (in Conda)\r\nllvmlite            commit 5be6c7      master\r\n````\r\nI will go into the code and find the problem, but could anyone help me with this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/397", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/397/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/397/events", "html_url": "https://github.com/numba/llvmlite/issues/397", "id": 363293440, "node_id": "MDU6SXNzdWUzNjMyOTM0NDA=", "number": 397, "title": "Named function arguments?", "user": {"login": "FrankC01", "id": 5435165, "node_id": "MDQ6VXNlcjU0MzUxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5435165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankC01", "html_url": "https://github.com/FrankC01", "followers_url": "https://api.github.com/users/FrankC01/followers", "following_url": "https://api.github.com/users/FrankC01/following{/other_user}", "gists_url": "https://api.github.com/users/FrankC01/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankC01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankC01/subscriptions", "organizations_url": "https://api.github.com/users/FrankC01/orgs", "repos_url": "https://api.github.com/users/FrankC01/repos", "events_url": "https://api.github.com/users/FrankC01/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankC01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-24T19:45:56Z", "updated_at": "2018-09-24T20:27:26Z", "closed_at": "2018-09-24T20:27:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to name function arguments? I'm generating the sequence of args and they return a list of `Argument` types but I'm not seeing how I can set the name. \r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/396", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/396/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/396/events", "html_url": "https://github.com/numba/llvmlite/issues/396", "id": 361414834, "node_id": "MDU6SXNzdWUzNjE0MTQ4MzQ=", "number": 396, "title": "Move to LLVM 7", "user": {"login": "seibert", "id": 425352, "node_id": "MDQ6VXNlcjQyNTM1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/425352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seibert", "html_url": "https://github.com/seibert", "followers_url": "https://api.github.com/users/seibert/followers", "following_url": "https://api.github.com/users/seibert/following{/other_user}", "gists_url": "https://api.github.com/users/seibert/gists{/gist_id}", "starred_url": "https://api.github.com/users/seibert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seibert/subscriptions", "organizations_url": "https://api.github.com/users/seibert/orgs", "repos_url": "https://api.github.com/users/seibert/repos", "events_url": "https://api.github.com/users/seibert/events{/privacy}", "received_events_url": "https://api.github.com/users/seibert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-18T17:51:37Z", "updated_at": "2019-03-28T16:38:14Z", "closed_at": "2019-03-28T16:38:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "LLVM 7.0.0 has been tagged and should be posted any day now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/393", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/393/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/393/events", "html_url": "https://github.com/numba/llvmlite/issues/393", "id": 359251991, "node_id": "MDU6SXNzdWUzNTkyNTE5OTE=", "number": 393, "title": "pypi wheel for python 2.7 is not manylinux1", "user": {"login": "chargrnv", "id": 42224386, "node_id": "MDQ6VXNlcjQyMjI0Mzg2", "avatar_url": "https://avatars3.githubusercontent.com/u/42224386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chargrnv", "html_url": "https://github.com/chargrnv", "followers_url": "https://api.github.com/users/chargrnv/followers", "following_url": "https://api.github.com/users/chargrnv/following{/other_user}", "gists_url": "https://api.github.com/users/chargrnv/gists{/gist_id}", "starred_url": "https://api.github.com/users/chargrnv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chargrnv/subscriptions", "organizations_url": "https://api.github.com/users/chargrnv/orgs", "repos_url": "https://api.github.com/users/chargrnv/repos", "events_url": "https://api.github.com/users/chargrnv/events{/privacy}", "received_events_url": "https://api.github.com/users/chargrnv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-11T22:48:17Z", "updated_at": "2018-09-12T23:34:11Z", "closed_at": "2018-09-12T23:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ ldd ./llvmlite/binding/libllvmlite.so \r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.14' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.17' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.19' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `CXXABI_1.3.5' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n./llvmlite/binding/libllvmlite.so: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by ./llvmlite/binding/libllvmlite.so)\r\n```\r\n\r\nPEP 513 says:\r\n```\r\nGLIBC <= 2.5\r\nCXXABI <= 3.4.8\r\nGLIBCXX <= 3.4.9\r\nGCC <= 4.2.0\r\n```\r\n\r\nDo not see this issue with the 3.6 wheel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/385", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/385/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/385/events", "html_url": "https://github.com/numba/llvmlite/issues/385", "id": 349742988, "node_id": "MDU6SXNzdWUzNDk3NDI5ODg=", "number": 385, "title": "Generate LLVM to call external C functions", "user": {"login": "saulshanabrook", "id": 1186124, "node_id": "MDQ6VXNlcjExODYxMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1186124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saulshanabrook", "html_url": "https://github.com/saulshanabrook", "followers_url": "https://api.github.com/users/saulshanabrook/followers", "following_url": "https://api.github.com/users/saulshanabrook/following{/other_user}", "gists_url": "https://api.github.com/users/saulshanabrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saulshanabrook/subscriptions", "organizations_url": "https://api.github.com/users/saulshanabrook/orgs", "repos_url": "https://api.github.com/users/saulshanabrook/repos", "events_url": "https://api.github.com/users/saulshanabrook/events{/privacy}", "received_events_url": "https://api.github.com/users/saulshanabrook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-11T15:42:00Z", "updated_at": "2018-08-14T06:51:11Z", "closed_at": "2018-08-14T06:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some existing C libraries that I am calling from llvmlite. If everything is passed and returned as pointers, it's relatively straightforward to type them in LLVM. However, if I start passing/returning struct literals, these are transformed into pointers by Clang.\r\n\r\nI would like to be able to use Clang to generate the proper way of calling C functions from llvmlite.\r\n\r\nIt seems like `clang::CodeGen::CodeGenFunction` [should be used to do this](https://groups.google.com/d/msg/llvm-dev/Nb4U3CGaVnA/t3tYaq6L4hMJ):\r\n\r\n> The current recommendation for matching external C ABIs is actually \"use Clang\", as in literally link it into your program and try to leverage the methods of clang::CodeGen::CodeGenFunction. This is the only way to get the lowering 100% correct, but it's a lot of work, so depending on your needs, you may want to roll your own lowering of high-level function prototype to LLVM function prototype.\r\n\r\n\r\nWould adding something like this be in scope for llvmlite?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/377", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/377/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/377/events", "html_url": "https://github.com/numba/llvmlite/issues/377", "id": 341048103, "node_id": "MDU6SXNzdWUzNDEwNDgxMDM=", "number": 377, "title": "llvmlite 0.22.0 \"FileNotFoundError: [Errno 2] No such file or directory: 'make': 'make'\" on Alpine Linux (Docker)", "user": {"login": "m3talstorm", "id": 462937, "node_id": "MDQ6VXNlcjQ2MjkzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/462937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3talstorm", "html_url": "https://github.com/m3talstorm", "followers_url": "https://api.github.com/users/m3talstorm/followers", "following_url": "https://api.github.com/users/m3talstorm/following{/other_user}", "gists_url": "https://api.github.com/users/m3talstorm/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3talstorm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3talstorm/subscriptions", "organizations_url": "https://api.github.com/users/m3talstorm/orgs", "repos_url": "https://api.github.com/users/m3talstorm/repos", "events_url": "https://api.github.com/users/m3talstorm/events{/privacy}", "received_events_url": "https://api.github.com/users/m3talstorm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-13T14:49:20Z", "updated_at": "2020-08-17T08:37:19Z", "closed_at": "2018-07-17T14:51:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Relevant DockerFile:\r\n\r\n```\r\nFROM python:3.7.0b5-alpine3.7\r\n\r\nRUN apk add --no-cache --virtual .build-deps \\\r\n    gcc=6.4.0-r5 \\\r\n    musl-dev=1.1.18-r3 \\\r\n    python3-dev=3.6.3-r9 \\\r\n    libffi-dev=3.2.1-r4 \\\r\n    llvm=5.0.0-r0 \\\r\n    llvm-dev=5.0.0-r0 \\\r\n    # Postgres\r\n    libpq=10.4-r0 \\\r\n    postgresql-dev=10.4-r0 \\\r\n    py-psycopg2=2.7.3.2-r0 \\\r\n    postgresql=10.4-r0 \\\r\n    # Other\r\n    git=2.15.2-r0\r\n\r\nRUN pip install --no-cache-dir -r requirements.txt\r\n```\r\n\r\nRelevant requirements.txt:\r\n\r\n```\r\nllvmlite==0.22.0\r\nnumba==0.37.0\r\nnumpy==1.14.5\r\n```\r\n\r\nOutput of pip install inside Docker build:\r\n\r\n```\r\n  Running setup.py install for llvmlite: started\r\n    Running setup.py install for llvmlite: finished with status 'error'\r\n    Complete output from command /usr/local/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-r22yyklu/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-ye9xs_vj/install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    got version from file /tmp/pip-install-r22yyklu/llvmlite/llvmlite/_version.py {'version': '0.22.0', 'full': '46b4b5e288f3a175332ad68d8c3745c63fbb5701'}\r\n    running build_ext\r\n    /usr/local/bin/python /tmp/pip-install-r22yyklu/llvmlite/ffi/build.py\r\n    LLVM version... 5.0.0\r\n\r\n    Traceback (most recent call last):\r\n      File \"/tmp/pip-install-r22yyklu/llvmlite/ffi/build.py\", line 141, in <module>\r\n        main()\r\n      File \"/tmp/pip-install-r22yyklu/llvmlite/ffi/build.py\", line 131, in main\r\n        main_posix('linux', '.so')\r\n      File \"/tmp/pip-install-r22yyklu/llvmlite/ffi/build.py\", line 123, in main_posix\r\n        subprocess.check_call(['make', '-f', makefile])\r\n      File \"/usr/local/lib/python3.7/subprocess.py\", line 323, in check_call\r\n        retcode = call(*popenargs, **kwargs)\r\n      File \"/usr/local/lib/python3.7/subprocess.py\", line 304, in call\r\n        with Popen(*popenargs, **kwargs) as p:\r\n      File \"/usr/local/lib/python3.7/subprocess.py\", line 756, in __init__\r\n        restore_signals, start_new_session)\r\n      File \"/usr/local/lib/python3.7/subprocess.py\", line 1499, in _execute_child\r\n        raise child_exception_type(errno_num, err_msg, err_filename)\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'make': 'make'\r\n    error: command '/usr/local/bin/python' failed with exit status 1\r\n\r\n    ----------------------------------------\r\nCommand \"/usr/local/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-r22yyklu/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-ye9xs_vj/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-r22yyklu/llvmlite/\r\nThe command '/bin/sh -c pip install --no-cache-dir -r requirements.txt' returned a non-zero code: 1\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/376", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/376/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/376/events", "html_url": "https://github.com/numba/llvmlite/issues/376", "id": 340698932, "node_id": "MDU6SXNzdWUzNDA2OTg5MzI=", "number": 376, "title": "Wheel packages for python3.7", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T15:55:22Z", "updated_at": "2018-07-17T15:17:18Z", "closed_at": "2018-07-17T15:17:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3.7 was released in June[0]. However, pypi lists only python2.7, 3.5, and 3.6 wheel packages[1].\r\nIt'd be helpful if python3.7 wheel packages were available.\r\n\r\n[0] https://www.python.org/downloads/release/python-370/\r\n[1] https://pypi.org/project/llvmlite/#files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/364", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/364/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/364/events", "html_url": "https://github.com/numba/llvmlite/issues/364", "id": 330853512, "node_id": "MDU6SXNzdWUzMzA4NTM1MTI=", "number": 364, "title": "A question about calling back into python ", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-09T04:58:54Z", "updated_at": "2018-06-14T09:41:22Z", "closed_at": "2018-06-14T09:41:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use llvmlite (0.12.1) to run func like this:\r\n\r\n    from ctypes import CFUNCTYPE, c_double, c_int64, POINTER\r\n    return_type = POINTER(c_int64)\r\n    fptr = CFUNCTYPE(return_type)(ee.get_pointer_to_function(func)  # func is main func name which already jit the coe\r\n   result = fptr(*args)\r\n\r\nBut I always got content like this\r\n\r\n    (Pdb) c_void_p.from_buffer(ret.contents).value\r\n    140732764985632\r\n\r\nNot the right and small value (the pointer pointed to). For detail you can see https://github.com/jiamo/pcc/blob/master/tests/test_main_return_ptr.py\r\n\r\nSo how can I make CFUNCTYPE work correct with a function return pointer?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/362", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/362/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/362/events", "html_url": "https://github.com/numba/llvmlite/issues/362", "id": 328648735, "node_id": "MDU6SXNzdWUzMjg2NDg3MzU=", "number": 362, "title": "Missing description in pypi", "user": {"login": "sklam", "id": 1929845, "node_id": "MDQ6VXNlcjE5Mjk4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklam", "html_url": "https://github.com/sklam", "followers_url": "https://api.github.com/users/sklam/followers", "following_url": "https://api.github.com/users/sklam/following{/other_user}", "gists_url": "https://api.github.com/users/sklam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklam/subscriptions", "organizations_url": "https://api.github.com/users/sklam/orgs", "repos_url": "https://api.github.com/users/sklam/repos", "events_url": "https://api.github.com/users/sklam/events{/privacy}", "received_events_url": "https://api.github.com/users/sklam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-01T20:21:15Z", "updated_at": "2018-07-06T13:57:23Z", "closed_at": "2018-07-06T13:57:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Need to add \"long_description\" to `setup()` in \"setup.py\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/359", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/359/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/359/events", "html_url": "https://github.com/numba/llvmlite/issues/359", "id": 326835072, "node_id": "MDU6SXNzdWUzMjY4MzUwNzI=", "number": 359, "title": "Push 0.23.1 to PyPI", "user": {"login": "Jehops", "id": 6874951, "node_id": "MDQ6VXNlcjY4NzQ5NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6874951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jehops", "html_url": "https://github.com/Jehops", "followers_url": "https://api.github.com/users/Jehops/followers", "following_url": "https://api.github.com/users/Jehops/following{/other_user}", "gists_url": "https://api.github.com/users/Jehops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jehops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jehops/subscriptions", "organizations_url": "https://api.github.com/users/Jehops/orgs", "repos_url": "https://api.github.com/users/Jehops/repos", "events_url": "https://api.github.com/users/Jehops/events{/privacy}", "received_events_url": "https://api.github.com/users/Jehops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-27T17:41:45Z", "updated_at": "2018-05-28T20:46:52Z", "closed_at": "2018-05-28T16:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI notice the latest release is not available on PyPI.  If this was an oversight and requires manual intervention, could it be done?  Apologies for the noise if I am missing something obvious.  I am not a Python developer.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/357", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/357/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/357/events", "html_url": "https://github.com/numba/llvmlite/issues/357", "id": 325269532, "node_id": "MDU6SXNzdWUzMjUyNjk1MzI=", "number": 357, "title": "Print function on llvmlite", "user": {"login": "marcelogdeandrade", "id": 11564309, "node_id": "MDQ6VXNlcjExNTY0MzA5", "avatar_url": "https://avatars3.githubusercontent.com/u/11564309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelogdeandrade", "html_url": "https://github.com/marcelogdeandrade", "followers_url": "https://api.github.com/users/marcelogdeandrade/followers", "following_url": "https://api.github.com/users/marcelogdeandrade/following{/other_user}", "gists_url": "https://api.github.com/users/marcelogdeandrade/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelogdeandrade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelogdeandrade/subscriptions", "organizations_url": "https://api.github.com/users/marcelogdeandrade/orgs", "repos_url": "https://api.github.com/users/marcelogdeandrade/repos", "events_url": "https://api.github.com/users/marcelogdeandrade/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelogdeandrade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-22T12:22:37Z", "updated_at": "2018-06-19T22:29:53Z", "closed_at": "2018-06-19T22:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI'm trying to create a compiler to my own language using llvmlite.\r\nMaybe my issue is something trivial, but I couldn't find an answer anywhere. I tried looking into other llvmlite projects to find an answer, but I didn't solve my issue.\r\n\r\nI'm trying to call a print function on a Value. On llvmlite docs there is nothing about a print function. I would like to know if there is some way to create a print function using llvmlite.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/355", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/355/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/355/events", "html_url": "https://github.com/numba/llvmlite/issues/355", "id": 322937133, "node_id": "MDU6SXNzdWUzMjI5MzcxMzM=", "number": 355, "title": "Problem installing Librosa with llvmite", "user": {"login": "hunaa", "id": 20323069, "node_id": "MDQ6VXNlcjIwMzIzMDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/20323069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunaa", "html_url": "https://github.com/hunaa", "followers_url": "https://api.github.com/users/hunaa/followers", "following_url": "https://api.github.com/users/hunaa/following{/other_user}", "gists_url": "https://api.github.com/users/hunaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunaa/subscriptions", "organizations_url": "https://api.github.com/users/hunaa/orgs", "repos_url": "https://api.github.com/users/hunaa/repos", "events_url": "https://api.github.com/users/hunaa/events{/privacy}", "received_events_url": "https://api.github.com/users/hunaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T18:50:18Z", "updated_at": "2018-05-15T19:21:13Z", "closed_at": "2018-05-15T19:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Expected Results\r\nlibrosa installed\r\n\r\nActual Results\r\npillow 4.0.0 requires olefile, which is not installed.\r\nInstalling collected packages: llvmlite, numba, resampy, librosa\r\nFound existing installation: llvmlite 0.15.0\r\nCannot uninstall 'llvmlite'. It is a distutils installed project and thus we can\r\nnot accurately determine which files belong to it which would lead to only a par\r\ntial uninstall.\r\n\r\nVersions\r\nPython 3.6.0 Windows 8.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/352", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/352/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/352/events", "html_url": "https://github.com/numba/llvmlite/issues/352", "id": 318914025, "node_id": "MDU6SXNzdWUzMTg5MTQwMjU=", "number": 352, "title": "Builds of llvmlite 0.23.0", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-30T14:38:38Z", "updated_at": "2018-07-17T15:19:25Z", "closed_at": "2018-07-17T15:19:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not seeing any packages for `llvmlite` version `0.23.0` in the `anaconda` channel or `defaults` generally (particularly for Windows 64-bit Python 2.7). Any idea when they might be made available?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/350", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/350/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/350/events", "html_url": "https://github.com/numba/llvmlite/issues/350", "id": 318539450, "node_id": "MDU6SXNzdWUzMTg1Mzk0NTA=", "number": 350, "title": "(new) Warning at shutdown", "user": {"login": "dscole", "id": 9452449, "node_id": "MDQ6VXNlcjk0NTI0NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9452449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dscole", "html_url": "https://github.com/dscole", "followers_url": "https://api.github.com/users/dscole/followers", "following_url": "https://api.github.com/users/dscole/following{/other_user}", "gists_url": "https://api.github.com/users/dscole/gists{/gist_id}", "starred_url": "https://api.github.com/users/dscole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dscole/subscriptions", "organizations_url": "https://api.github.com/users/dscole/orgs", "repos_url": "https://api.github.com/users/dscole/repos", "events_url": "https://api.github.com/users/dscole/events{/privacy}", "received_events_url": "https://api.github.com/users/dscole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-27T20:26:58Z", "updated_at": "2018-10-19T13:59:32Z", "closed_at": "2018-10-19T13:59:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the following warning at shutdown with llvmlite-0.23.0 and numba-0.38.0:\r\n\r\n```\r\nException TypeError: \"'NoneType' object is not callable\" in <bound method ModuleRef.__del__ of <llvmlite.binding.module.ModuleRef object at 0x7fdf4a8f46d0>>\r\n```\r\nNot sure how to track it down further.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/349", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/349/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/349/events", "html_url": "https://github.com/numba/llvmlite/issues/349", "id": 318025761, "node_id": "MDU6SXNzdWUzMTgwMjU3NjE=", "number": 349, "title": "Passing `-mavx` to LLVM", "user": {"login": "cod3monk", "id": 1473799, "node_id": "MDQ6VXNlcjE0NzM3OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1473799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cod3monk", "html_url": "https://github.com/cod3monk", "followers_url": "https://api.github.com/users/cod3monk/followers", "following_url": "https://api.github.com/users/cod3monk/following{/other_user}", "gists_url": "https://api.github.com/users/cod3monk/gists{/gist_id}", "starred_url": "https://api.github.com/users/cod3monk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cod3monk/subscriptions", "organizations_url": "https://api.github.com/users/cod3monk/orgs", "repos_url": "https://api.github.com/users/cod3monk/repos", "events_url": "https://api.github.com/users/cod3monk/events{/privacy}", "received_events_url": "https://api.github.com/users/cod3monk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-26T13:17:57Z", "updated_at": "2018-04-27T11:42:13Z", "closed_at": "2018-04-27T11:42:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to compile IR code containing AVX inline assembly, but I am unable to pass `-mavx` to LLVM to enable AVX features during compilation.\r\n\r\nRunning the following code crashes Python with an LLVM error message (`Do not know how to split the result of this operator!`):\r\n```python\r\nimport llvmlite.binding as llvm\r\n\r\nllvm.initialize()\r\nllvm.initialize_native_target()\r\nllvm.initialize_native_asmprinter()\r\nllvm.initialize_native_asmparser()\r\n\r\nir = '''\r\ndefine <4 x double> @testv(i32**, i32) {\r\n\r\n  %out = tail call <4 x double> asm \"vaddpd $1, $2, $0\", \"=x,x,x,~{dirflag},~{fpsr},~{flags}\"(<4 x double> <double 0.123, double 0.123, double 0.123, double 0.123>, <4 x double> <double 0.123, double 0.123, double 0.123, double 0.123>)\r\n  ret <4 x double> %out\r\n}\r\n'''\r\n\r\nmodule = llvm.parse_assembly(ir)\r\nmodule.verify()\r\ntm = llvm.Target.from_default_triple().create_target_machine()\r\ntm.emit_assembly(module)\r\n```\r\n\r\nWhen compile the IR directly with LLVM I get the same error message. When I enable AVX with (`-mavx`), everything works as expected.\r\n\r\nI tried using `llvm.set_option('', '-mavx')` and `llvm.set_option('', '-march=native')`, which had no apparent effect on my issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/346", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/346/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/346/events", "html_url": "https://github.com/numba/llvmlite/issues/346", "id": 317611406, "node_id": "MDU6SXNzdWUzMTc2MTE0MDY=", "number": 346, "title": "llvm 6.0.0 linking issue on macOS", "user": {"login": "defjaf", "id": 799252, "node_id": "MDQ6VXNlcjc5OTI1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/799252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defjaf", "html_url": "https://github.com/defjaf", "followers_url": "https://api.github.com/users/defjaf/followers", "following_url": "https://api.github.com/users/defjaf/following{/other_user}", "gists_url": "https://api.github.com/users/defjaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/defjaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defjaf/subscriptions", "organizations_url": "https://api.github.com/users/defjaf/orgs", "repos_url": "https://api.github.com/users/defjaf/repos", "events_url": "https://api.github.com/users/defjaf/events{/privacy}", "received_events_url": "https://api.github.com/users/defjaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-25T12:43:09Z", "updated_at": "2018-04-25T15:48:37Z", "closed_at": "2018-04-25T15:48:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Link error on MacOS -- related to `_LLVMInitializeInstCombine`.  I think this is really [a problem with llvmlite 6.0.0](https://reviews.llvm.org/D44140), but I wonder if it's possible to fix \"downstream\"?\r\n\r\nSee below for output from an attempted install.\r\n\r\n```\r\n$ MACOSX_DEPLOYMENT_TARGET=10.13 LLVM_CONFIG=/usr/local/Cellar/llvm/6.0.0/bin/llvm-config CC=clang CXX=clang++ pip3 install --upgrade llvmlite\r\nCollecting llvmlite\r\n  Using cached https://files.pythonhosted.org/packages/c6/0f/d33ec3d030d4de01ba251c7dcf1051cb9f558221d64421439a61b0d81020/llvmlite-0.23.0.tar.gz\r\nBuilding wheels for collected packages: llvmlite\r\n  Running setup.py bdist_wheel for llvmlite ... error\r\n  Complete output from command /Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/nc/n7d98d0x46g0h5yyb4bc1gv40000gv/T/pip-install-sc7dfuli/llvmlite/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /private/var/folders/nc/n7d98d0x46g0h5yyb4bc1gv40000gv/T/pip-wheel-7y1_8n14 --python-tag cp36:\r\n  running bdist_wheel\r\n  /Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6 /private/var/folders/nc/n7d98d0x46g0h5yyb4bc1gv40000gv/T/pip-install-sc7dfuli/llvmlite/ffi/build.py\r\n  LLVM version... MACOSX_DEPLOYMENT_TARGET=10.13 clang++ -std=c++11 -stdlib=libc++ -dynamiclib -I/usr/local/Cellar/llvm/6.0.0/include -stdlib=libc++ -fPIC -fvisibility-inlines-hidden -Werror=date-time -Werror=unguarded-availability-new -std=c++11 -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -pedantic -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -Wstring-conversion -DNDEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-rtti -g assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp linker.cpp object_file.cpp -o libllvmlite.dylib -L/usr/local/Cellar/llvm/6.0.0/lib -Wl,-search_paths_first -Wl,-headerpad_max_install_names -lLLVMLTO -lLLVMPasses -lLLVMObjCARCOpts -lLLVMMIRParser -lLLVMSymbolize -lLLVMDebugInfoPDB -lLLVMDebugInfoDWARF -lLLVMCoverage -lLLVMTableGen -lLLVMDlltoolDriver -lLLVMOrcJIT -lLLVMXCoreDisassembler -lLLVMXCoreCodeGen -lLLVMXCoreDesc -lLLVMXCoreInfo -lLLVMXCoreAsmPrinter -lLLVMSystemZDisassembler -lLLVMSystemZCodeGen -lLLVMSystemZAsmParser -lLLVMSystemZDesc -lLLVMSystemZInfo -lLLVMSystemZAsmPrinter -lLLVMSparcDisassembler -lLLVMSparcCodeGen -lLLVMSparcAsmParser -lLLVMSparcDesc -lLLVMSparcInfo -lLLVMSparcAsmPrinter -lLLVMPowerPCDisassembler -lLLVMPowerPCCodeGen -lLLVMPowerPCAsmParser -lLLVMPowerPCDesc -lLLVMPowerPCInfo -lLLVMPowerPCAsmPrinter -lLLVMNVPTXCodeGen -lLLVMNVPTXDesc -lLLVMNVPTXInfo -lLLVMNVPTXAsmPrinter -lLLVMMSP430CodeGen -lLLVMMSP430Desc -lLLVMMSP430Info -lLLVMMSP430AsmPrinter -lLLVMMipsDisassembler -lLLVMMipsCodeGen -lLLVMMipsAsmParser -lLLVMMipsDesc -lLLVMMipsInfo -lLLVMMipsAsmPrinter -lLLVMLanaiDisassembler -lLLVMLanaiCodeGen -lLLVMLanaiAsmParser -lLLVMLanaiDesc -lLLVMLanaiAsmPrinter -lLLVMLanaiInfo -lLLVMHexagonDisassembler -lLLVMHexagonCodeGen -lLLVMHexagonAsmParser -lLLVMHexagonDesc -lLLVMHexagonInfo -lLLVMBPFDisassembler -lLLVMBPFCodeGen -lLLVMBPFAsmParser -lLLVMBPFDesc -lLLVMBPFInfo -lLLVMBPFAsmPrinter -lLLVMARMDisassembler -lLLVMARMCodeGen -lLLVMARMAsmParser -lLLVMARMDesc -lLLVMARMInfo -lLLVMARMAsmPrinter -lLLVMARMUtils -lLLVMAMDGPUDisassembler -lLLVMAMDGPUCodeGen -lLLVMAMDGPUAsmParser -lLLVMAMDGPUDesc -lLLVMAMDGPUInfo -lLLVMAMDGPUAsmPrinter -lLLVMAMDGPUUtils -lLLVMAArch64Disassembler -lLLVMAArch64CodeGen -lLLVMAArch64AsmParser -lLLVMAArch64Desc -lLLVMAArch64Info -lLLVMAArch64AsmPrinter -lLLVMAArch64Utils -lLLVMObjectYAML -lLLVMLibDriver -lLLVMOption -lLLVMWindowsManifest -lLLVMFuzzMutate -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMGlobalISel -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMDebugInfoCodeView -lLLVMDebugInfoMSF -lLLVMX86Desc -lLLVMMCDisassembler -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMMCJIT -lLLVMLineEditor -lLLVMInterpreter -lLLVMExecutionEngine -lLLVMRuntimeDyld -lLLVMCodeGen -lLLVMTarget -lLLVMCoroutines -lLLVMipo -lLLVMInstrumentation -lLLVMVectorize -lLLVMScalarOpts -lLLVMLinker -lLLVMIRReader -lLLVMAsmParser -lLLVMInstCombine -lLLVMTransformUtils -lLLVMBitWriter -lLLVMAnalysis -lLLVMProfileData -lLLVMObject -lLLVMMCParser -lLLVMMC -lLLVMBitReader -lLLVMCore -lLLVMBinaryFormat -lLLVMSupport -lLLVMDemangle -lz -lcurses -lm\r\n  Undefined symbols for architecture x86_64:\r\n    \"_LLVMInitializeInstCombine\", referenced from:\r\n        _LLVMPY_InitializeInstCombine in initfini-84d84a.o\r\n  ld: symbol(s) not found for architecture x86_64\r\n  clang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n  make: *** [all] Error 1\r\n  6.0.0\r\n  \r\n  Traceback (most recent call last):\r\n    File \"/private/var/folders/nc/n7d98d0x46g0h5yyb4bc1gv40000gv/T/pip-install-sc7dfuli/llvmlite/ffi/build.py\", line 143, in <module>\r\n      main()\r\n    File \"/private/var/folders/nc/n7d98d0x46g0h5yyb4bc1gv40000gv/T/pip-install-sc7dfuli/llvmlite/ffi/build.py\", line 137, in main\r\n      main_posix('osx', '.dylib')\r\n    File \"/private/var/folders/nc/n7d98d0x46g0h5yyb4bc1gv40000gv/T/pip-install-sc7dfuli/llvmlite/ffi/build.py\", line 125, in main_posix\r\n      subprocess.check_call(['make', '-f', makefile])\r\n    File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py\", line 291, in check_call\r\n      raise CalledProcessError(retcode, cmd)\r\n  subprocess.CalledProcessError: Command '['make', '-f', 'Makefile.osx']' returned non-zero exit status 2.\r\n  error: command '/Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6' failed with exit status 1\r\n  ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/345", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/345/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/345/events", "html_url": "https://github.com/numba/llvmlite/issues/345", "id": 317578216, "node_id": "MDU6SXNzdWUzMTc1NzgyMTY=", "number": 345, "title": "Can't install llvmlite 0.23 on Windows 10", "user": {"login": "Prokhozhijj", "id": 32294936, "node_id": "MDQ6VXNlcjMyMjk0OTM2", "avatar_url": "https://avatars0.githubusercontent.com/u/32294936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Prokhozhijj", "html_url": "https://github.com/Prokhozhijj", "followers_url": "https://api.github.com/users/Prokhozhijj/followers", "following_url": "https://api.github.com/users/Prokhozhijj/following{/other_user}", "gists_url": "https://api.github.com/users/Prokhozhijj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Prokhozhijj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Prokhozhijj/subscriptions", "organizations_url": "https://api.github.com/users/Prokhozhijj/orgs", "repos_url": "https://api.github.com/users/Prokhozhijj/repos", "events_url": "https://api.github.com/users/Prokhozhijj/events{/privacy}", "received_events_url": "https://api.github.com/users/Prokhozhijj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-25T10:58:51Z", "updated_at": "2018-04-25T15:48:15Z", "closed_at": "2018-04-25T15:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nEnvironment:\r\nPython version 3.6.5 64-bit\r\nVisual Studio Build Tools 2017 and Visual Studion Community Edition 2017\r\nMS Windows 10 Pro 64-bit\r\npip 10.0.1\r\n\r\nC:\\WINDOWS\\system32>pip install llvmlite\r\nCollecting llvmlite\r\n  Using cached https://files.pythonhosted.org/packages/c6/0f/d33ec3d030d4de01ba251c7dcf1051cb9f558221d64421439a61b0d81020/llvmlite-0.23.0.tar.gz\r\nInstalling collected packages: llvmlite\r\n  Running setup.py install for llvmlite ... error\r\n    Complete output from command c:\\python36\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\WINDOWS\\\\TEMP\\\\pip-install-s3s5440i\\\\llvmlite\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\WINDOWS\\TEMP\\pip-record-7qa755f4\\install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    got version from file C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\llvmlite/_version.py {'version': '0.23.0', 'full': 'a924507857937369bdeb795a0f2d0a85ee27a0c1'}\r\n    running build_ext\r\n    c:\\python36\\python.exe C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\ffi\\build.py\r\n    Trying generator 'Visual Studio 14 2015 Win64'\r\n    Traceback (most recent call last):\r\n      File \"C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\ffi\\build.py\", line 143, in <module>\r\n        main()\r\n      File \"C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\ffi\\build.py\", line 131, in main\r\n        main_win32()\r\n      File \"C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\ffi\\build.py\", line 74, in main_win32\r\n        generator = find_win32_generator()\r\n      File \"C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\ffi\\build.py\", line 62, in find_win32_generator\r\n        try_cmake(cmake_dir, build_dir, generator)\r\n      File \"C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\ffi\\build.py\", line 27, in try_cmake\r\n        subprocess.check_call(['cmake', '-G', generator, cmake_dir])\r\n      File \"c:\\python36\\lib\\subprocess.py\", line 286, in check_call\r\n        retcode = call(*popenargs, **kwargs)\r\n      File \"c:\\python36\\lib\\subprocess.py\", line 267, in call\r\n        with Popen(*popenargs, **kwargs) as p:\r\n      File \"c:\\python36\\lib\\subprocess.py\", line 709, in __init__\r\n        restore_signals, start_new_session)\r\n      File \"c:\\python36\\lib\\subprocess.py\", line 997, in _execute_child\r\n        startupinfo)\r\n    FileNotFoundError: [WinError 2] The system cannot find the file specified\r\n    error: command 'c:\\\\python36\\\\python.exe' failed with exit status 1\r\n\r\n    ----------------------------------------\r\nCommand \"c:\\python36\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\WINDOWS\\\\TEMP\\\\pip-install-s3s5440i\\\\llvmlite\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\WINDOWS\\TEMP\\pip-record-7qa755f4\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in C:\\WINDOWS\\TEMP\\pip-install-s3s5440i\\llvmlite\\", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/335", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/335/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/335/events", "html_url": "https://github.com/numba/llvmlite/issues/335", "id": 304128766, "node_id": "MDU6SXNzdWUzMDQxMjg3NjY=", "number": 335, "title": "translate a simple c code, the instruction seq is wrong?", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-11T04:11:54Z", "updated_at": "2018-03-11T08:31:45Z", "closed_at": "2018-03-11T08:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using llvmlite 0.12.1 . I have a little simple c code:\r\n\r\n```\r\nint main(){\r\n    int a = 33;\r\n    int *c;\r\n    *c = 44;\r\n    return a ;\r\n}\r\n```\r\nwith clang : `clang -S -emit-llvm simple_pointer.c` I got\r\n\r\n```\r\ndefine i32 @main() #0 {\r\n  %1 = alloca i32, align 4\r\n  %2 = alloca i32, align 4\r\n  %3 = alloca i32*, align 8\r\n  store i32 0, i32* %1, align 4\r\n  store i32 33, i32* %2, align 4\r\n  %4 = load i32*, i32** %3, align 8\r\n  store i32 44, i32* %4, align 4\r\n  %5 = load i32, i32* %2, align 4\r\n  ret i32 %5\r\n}\r\n\r\n```\r\nWhile llvmlite I got: \r\n\r\n```\r\ndefine double @\"main\"()\r\n{\r\nmain_entry:\r\n  %\"c\" = alloca double*\r\n  %\"a\" = alloca double\r\n  %\"c.1\" = load double*, double** %\"c\"\r\n  %\"c.2\" = load double*, double** %\"c\"\r\n  %\".3\" = load double*, double** %\"c\"\r\n  %\".4\" = load double, double* %\".3\"\r\n  store double 0x4045800000000000, double* %\".3\"\r\n  %\"a.1\" = load double, double* %\"a\"\r\n  ret double %\"a.1\"\r\n  store double 0x4040800000000000, double* %\"a\"\r\n}\r\n\r\n```\r\nAnd got error : \r\n```\r\n        \"\"\"\r\n        Create Module from a LLVM IR string\r\n        \"\"\"\r\n        context = ffi.lib.LLVMPY_GetGlobalContext()\r\n        llvmir = _encode_string(llvmir)\r\n        strbuf = c_char_p(llvmir)\r\n        with ffi.OutputString() as errmsg:\r\n            mod = ModuleRef(ffi.lib.LLVMPY_ParseAssembly(context, strbuf, errmsg))\r\n            if errmsg:\r\n                mod.close()\r\n>               raise RuntimeError(\"LLVM IR parsing error\\n{0}\".format(errmsg))\r\nE               RuntimeError: LLVM IR parsing error\r\nE               <string>:18:1: error: expected instruction opcode\r\nE               }\r\nE               ^\r\n```\r\n\r\nSo I am confused to see the `store` is the last instruction and it should not be. \r\nI have transalte other c code. And don't met this problem.  I met it after I want to make pointer work.\r\nAny idea about why this happened?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/334", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/334/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/334/events", "html_url": "https://github.com/numba/llvmlite/issues/334", "id": 304084378, "node_id": "MDU6SXNzdWUzMDQwODQzNzg=", "number": 334, "title": "python 2.7 enum34 required for run, and build", "user": {"login": "ddkn", "id": 13819239, "node_id": "MDQ6VXNlcjEzODE5MjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/13819239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddkn", "html_url": "https://github.com/ddkn", "followers_url": "https://api.github.com/users/ddkn/followers", "following_url": "https://api.github.com/users/ddkn/following{/other_user}", "gists_url": "https://api.github.com/users/ddkn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddkn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddkn/subscriptions", "organizations_url": "https://api.github.com/users/ddkn/orgs", "repos_url": "https://api.github.com/users/ddkn/repos", "events_url": "https://api.github.com/users/ddkn/events{/privacy}", "received_events_url": "https://api.github.com/users/ddkn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-10T16:40:30Z", "updated_at": "2018-09-08T21:56:30Z", "closed_at": "2018-09-08T21:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nFor python  < v3.4+ builds, enum34 is required for build, and install. Is it possible to add '**setup_requires**' for enum34 for versions less that 3.4? \r\n\r\nFor our package system, we need to set RUN_DEPENDS for packages to know to bring in py27-enum34. However, upon building enum34 is also required: relevant snippet:\r\n\r\n>  File \"setup.py\", line 74, in run\r\n    from llvmlite.utils import get_library_files\r\n  File \"llvmlite/__init__.py\", line 6, in <module>\r\n    raise ImportError(\"could not find the 'enum' module; please install \"\r\nImportError: could not find the 'enum' module; please install it using e.g. 'p\r\nip install enum34'\r\n*** Error code \r\n\r\nAny help would be greatly appreciated, as we are looking to update the llvmlite to 0.22 in ports.\r\n\r\nSee here: [FreeBSD bug 226463](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=226463#c1)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/333", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/333/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/333/events", "html_url": "https://github.com/numba/llvmlite/issues/333", "id": 302734967, "node_id": "MDU6SXNzdWUzMDI3MzQ5Njc=", "number": 333, "title": "Compatibility with LLVM 6", "user": {"login": "mrodozov", "id": 3791215, "node_id": "MDQ6VXNlcjM3OTEyMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3791215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrodozov", "html_url": "https://github.com/mrodozov", "followers_url": "https://api.github.com/users/mrodozov/followers", "following_url": "https://api.github.com/users/mrodozov/following{/other_user}", "gists_url": "https://api.github.com/users/mrodozov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrodozov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrodozov/subscriptions", "organizations_url": "https://api.github.com/users/mrodozov/orgs", "repos_url": "https://api.github.com/users/mrodozov/repos", "events_url": "https://api.github.com/users/mrodozov/events{/privacy}", "received_events_url": "https://api.github.com/users/mrodozov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-06T15:00:39Z", "updated_at": "2018-04-21T20:40:34Z", "closed_at": "2018-04-21T20:40:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "We were trying to hack llvmlite to work with llvm 6 following the changes from PRs #306 and #307 as I only changed the version in the ffi/build.py from 5.0. to 6.0  (as we are not using conda) https://github.com/mrodozov/llvmlite/commit/be5e1df80a1c22c1c03d5bf99d0b34836b809144\r\nand it went fine to trick the version check part only to fail with some .cpp interface changes incompatibilities. In short - some interfaces got changed in the LLVM headers namely:\r\n```\r\ng++  -shared -I/build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/llvm/6.0.0/include -fPIC -fvisibility-inlines-hidden -Werror=date-time -std=c++11 -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-q\\\r\nual -Wno-missing-field-initializers -pedantic -Wno-long-long -Wno-maybe-uninitialized -Wdelete-non-virtual-dtor -Wno-comment -ffunction-sections -fdata-sections -O3 -DNDEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS\\\r\n -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-rtti -g -flto assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp linke\\\r\nr.cpp object_file.cpp -o libllvmlite.so -L/build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/llvm/6.0.0/lib64 -flto -Wl,--exclude-libs=ALL -lLLVMLTO -lLLVMPasses -lLLVMObjCARCOpts -lLLVMSymbolize -lLLVMDeb\\\r\nugInfoPDB -lLLVMDebugInfoDWARF -lLLVMFuzzMutate -lLLVMCoverage -lLLVMTableGen -lLLVMDlltoolDriver -lLLVMLineEditor -lLLVMOrcJIT -lLLVMMIRParser -lLLVMCoroutines -lLLVMipo -lLLVMInstrumentation -lLLVMVectorize -lL\\\r\nLVMLinker -lLLVMIRReader -lLLVMAsmParser -lLLVMObjectYAML -lLLVMLibDriver -lLLVMOption -lLLVMWindowsManifest -lLLVMMCJIT -lLLVMAArch64Disassembler -lLLVMAArch64CodeGen -lLLVMAArch64AsmParser -lLLVMAArch64Desc -lL\\\r\nLVMAArch64Info -lLLVMAArch64AsmPrinter -lLLVMAArch64Utils -lLLVMPowerPCDisassembler -lLLVMPowerPCCodeGen -lLLVMPowerPCAsmParser -lLLVMPowerPCDesc -lLLVMPowerPCInfo -lLLVMPowerPCAsmPrinter -lLLVMX86Disassembler -l\\\r\nLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMGlobalISel -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMDebugInfoCodeView -lLLVMDebugInfoMSF -lLLVMX86Desc -lLLVMMCDisassembler -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Util\\\r\ns -lLLVMInterpreter -lLLVMExecutionEngine -lLLVMRuntimeDyld -lLLVMCodeGen -lLLVMTarget -lLLVMScalarOpts -lLLVMInstCombine -lLLVMTransformUtils -lLLVMBitWriter -lLLVMAnalysis -lLLVMProfileData -lLLVMObject -lLLVMM\\\r\nCParser -lLLVMMC -lLLVMBitReader -lLLVMCore -lLLVMBinaryFormat -lLLVMSupport -lLLVMDemangle\r\n  passmanagers.cpp:24:20: error: 'DiagnosticHandlerTy' is not a member of 'llvm::LLVMContext'\r\n   typedef std::tuple<LLVMContext::DiagnosticHandlerTy, void *> diag_handler_t;\r\n                      ^~~~~~~~~~~\r\n  passmanagers.cpp:24:20: error: 'DiagnosticHandlerTy' is not a member of 'llvm::LLVMContext'\r\n  passmanagers.cpp:24:60: error: template argument 1 is invalid\r\n   typedef std::tuple<LLVMContext::DiagnosticHandlerTy, void *> diag_handler_t;\r\n```\r\nand some others similar (interfaces not found, but suggesting alternatives):\r\n\r\n```\r\nIn file included from passmanagers.cpp:1:0:\r\n  /build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/gcc/6.3.0-cms/include/c++/6.3.0/tuple:1266:5: note: candidate: template<long unsigned int __i, class ... _Elements> constexpr std::__tuple_element_t<__i\\\r\n, std::tuple<_Elements ...> >&& std::get(std::tuple<_Elements ...>&&)\r\n       get(tuple<_Elements...>&& __t) noexcept\r\n       ^~~\r\n  /build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/gcc/6.3.0-cms/include/c++/6.3.0/tuple:1266:5: note:   template argument deduction/substitution failed:\r\n  passmanagers.cpp:53:77: note:   mismatched types 'std::tuple<_Elements ...>' and 'diag_handler_t {aka int}'\r\n       Ctx.setDiagnosticHandler(std::get<0>(OldHandler), std::get<1>(OldHandler));\r\n                                                                               ^\r\n  targets.cpp: In function 'LLVMOpaqueTargetMachine* LLVMPY_CreateTargetMachine(LLVMTargetRef, const char*, const char*, const char*, int, const char*, const char*, int, int)':\r\n  targets.cpp:198:14: error: 'JITDefault' is not a member of 'llvm::CodeModel'\r\n           cm = CodeModel::JITDefault;\r\n                ^~~~~~~~~\r\n  targets.cpp:208:14: error: 'Default' is not a member of 'llvm::CodeModel'\r\n           cm = CodeModel::Default;   \r\n                ^~~~~~~~~\r\n  targets.cpp:208:14: note: suggested alternatives:\r\n  In file included from /build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/llvm/6.0.0/include/llvm/Target/TargetMachine.h:21:0,\r\n                   from targets.cpp:5:\r\n  /build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/llvm/6.0.0/include/llvm/Support/CodeGen.h:37:18: note:   'Default'\r\n       enum Level { Default=0, Small=1, Large=2 };\r\n                    ^~~~~~~\r\n  /build/mrodozov/build_llvmlite/slc6_amd64_gcc630/external/llvm/6.0.0/include/llvm/Support/CodeGen.h:55:7: note:   'Default'\r\n         Default,     // -O2, -Os\r\n         ^~~~~~~\r\n\r\n```\r\n\r\nAnyhow, when could we expect llvmlite to work with llvm 6 ?\r\nThanks & best,\r\nM.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/331", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/331/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/331/events", "html_url": "https://github.com/numba/llvmlite/issues/331", "id": 301978658, "node_id": "MDU6SXNzdWUzMDE5Nzg2NTg=", "number": 331, "title": "Possible LLVM IR Parsing Error", "user": {"login": "albertobarbaro", "id": 4751670, "node_id": "MDQ6VXNlcjQ3NTE2NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4751670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertobarbaro", "html_url": "https://github.com/albertobarbaro", "followers_url": "https://api.github.com/users/albertobarbaro/followers", "following_url": "https://api.github.com/users/albertobarbaro/following{/other_user}", "gists_url": "https://api.github.com/users/albertobarbaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertobarbaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertobarbaro/subscriptions", "organizations_url": "https://api.github.com/users/albertobarbaro/orgs", "repos_url": "https://api.github.com/users/albertobarbaro/repos", "events_url": "https://api.github.com/users/albertobarbaro/events{/privacy}", "received_events_url": "https://api.github.com/users/albertobarbaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-03T08:00:51Z", "updated_at": "2018-03-03T08:14:21Z", "closed_at": "2018-03-03T08:14:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nI know that I have opened a similar issue a while ago but following the previous suggestions I cannot figure out if I'm missing something.\r\n\r\nI have compiled pngpixel with the following command ```clang -S -emit-llvm pngpixel.c``` and used the ```pngpixel.ll``` with the following script:\r\n\r\n```\r\nimport llvmlite\r\n\r\nprint(llvmlite.__version__)\r\n\r\nimport llvmlite.binding as llvm\r\nllvm.initialize()\r\n\r\nwith open('pngpixel.ll') as f:\r\n    data = f.read()\r\n\r\nllvm.parse_assembly(data)\r\n```\r\n\r\nUnfortunately the output was:\r\n\r\n```\r\n\u279c  /tmp python test.py \r\n0.22.0\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 11, in <module>\r\n    llvm.parse_assembly(data)\r\n  File \"/home/al/anaconda3/lib/python3.6/site-packages/llvmlite/binding/module.py\", line 22, in parse_assembly\r\n    raise RuntimeError(\"LLVM IR parsing error\\n{0}\".format(errmsg))\r\nRuntimeError: LLVM IR parsing error\r\n<string>:67:18: error: expected comma after load's type\r\n  %4 = load i32* %2, align 4\r\n```\r\n\r\nAny idea on how to fix it please?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/325", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/325/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/325/events", "html_url": "https://github.com/numba/llvmlite/issues/325", "id": 294588401, "node_id": "MDU6SXNzdWUyOTQ1ODg0MDE=", "number": 325, "title": "Issue with non-native code generation", "user": {"login": "brendabrandy", "id": 9519435, "node_id": "MDQ6VXNlcjk1MTk0MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9519435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendabrandy", "html_url": "https://github.com/brendabrandy", "followers_url": "https://api.github.com/users/brendabrandy/followers", "following_url": "https://api.github.com/users/brendabrandy/following{/other_user}", "gists_url": "https://api.github.com/users/brendabrandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendabrandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendabrandy/subscriptions", "organizations_url": "https://api.github.com/users/brendabrandy/orgs", "repos_url": "https://api.github.com/users/brendabrandy/repos", "events_url": "https://api.github.com/users/brendabrandy/events{/privacy}", "received_events_url": "https://api.github.com/users/brendabrandy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-06T00:16:06Z", "updated_at": "2018-02-07T15:38:33Z", "closed_at": "2018-02-07T15:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to llvmlite and am playing around with the API. I am currently trying to generate code from IR that is non-native to my computer (running on macOS). \r\n\r\n```\r\nllvm.initialize()\r\nllvm.initailize_all_targets()\r\nllvm.initialize_all_asmprinters()\r\n\r\ntarget=llvm.Target.from_triple(\"arm64-unknown-unknown\")\r\n\r\n```\r\nWhen trying to run it, it raises a RunTimeError that says:\r\n\r\n`RuntimeError: No available targets are compatible with this triple.`\r\n\r\nWhen I check llc --version, it seems that I have all targets registered:\r\n```\r\nLLVM (http://llvm.org/):\r\n  LLVM version 5.0.1\r\n  Optimized build.\r\n  Default target: x86_64-apple-darwin15.6.0\r\n  Host CPU: haswell\r\n\r\n  Registered Targets:\r\n    aarch64    - AArch64 (little endian)\r\n    aarch64_be - AArch64 (big endian)\r\n    amdgcn     - AMD GCN GPUs\r\n    arm        - ARM\r\n    arm64      - ARM64 (little endian)\r\n    armeb      - ARM (big endian)\r\n  ...\r\n```\r\n\r\nI also tried to use llc to generate ARM code and it worked on my computer. So I must be missing in my python code. Did anyone have a similar issue? And if so, how can I fix it so I can generate code that is not my computer's native language?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/309", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/309/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/309/events", "html_url": "https://github.com/numba/llvmlite/issues/309", "id": 267441057, "node_id": "MDU6SXNzdWUyNjc0NDEwNTc=", "number": 309, "title": "LLVM IR Parsing Error", "user": {"login": "albertobarbaro", "id": 4751670, "node_id": "MDQ6VXNlcjQ3NTE2NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4751670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertobarbaro", "html_url": "https://github.com/albertobarbaro", "followers_url": "https://api.github.com/users/albertobarbaro/followers", "following_url": "https://api.github.com/users/albertobarbaro/following{/other_user}", "gists_url": "https://api.github.com/users/albertobarbaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertobarbaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertobarbaro/subscriptions", "organizations_url": "https://api.github.com/users/albertobarbaro/orgs", "repos_url": "https://api.github.com/users/albertobarbaro/repos", "events_url": "https://api.github.com/users/albertobarbaro/events{/privacy}", "received_events_url": "https://api.github.com/users/albertobarbaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-22T06:49:02Z", "updated_at": "2017-10-23T20:29:28Z", "closed_at": "2017-10-23T20:29:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nI have the following C code that I have compiled using ```clang -S -emit-llvm a.c```\r\n\r\n```\r\n#include<stdio.h>\r\nint main() {\r\n    printf(\"hey\\n\");\r\n}\r\n```\r\n\r\nThe output .ll file is the following and can be execute with ```lli```:\r\n\r\n```\r\n; ModuleID = 'a.c'\r\ntarget datalayout = \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128\"\r\ntarget triple = \"x86_64-pc-linux-gnu\"\r\n\r\n@.str = private unnamed_addr constant [5 x i8] c\"hey\\0A\\00\", align 1\r\n\r\n; Function Attrs: nounwind uwtable\r\ndefine i32 @main() #0 {\r\n  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0))\r\n  ret i32 0\r\n}\r\n\r\ndeclare i32 @printf(i8*, ...) #1\r\n\r\nattributes #0 = { nounwind uwtable \"less-precise-fpmad\"=\"false\" \"no-frame-pointer-elim\"=\"true\" \"no-frame-pointer-elim-non-leaf\" \"no-infs-fp-math\"=\"false\" \"no-nans-fp-math\"=\"false\" \"stack-protector-buffer-size\"=\"8\" \"unsafe-fp-math\"=\"false\" \"use-soft-float\"=\"false\" }\r\nattributes #1 = { \"less-precise-fpmad\"=\"false\" \"no-frame-pointer-elim\"=\"true\" \"no-frame-pointer-elim-non-leaf\" \"no-infs-fp-math\"=\"false\" \"no-nans-fp-math\"=\"false\" \"stack-protector-buffer-size\"=\"8\" \"unsafe-fp-math\"=\"false\" \"use-soft-float\"=\"false\" }\r\n\r\n!llvm.ident = !{!0}\r\n\r\n!0 = metadata !{metadata !\"Ubuntu clang version 3.4.2- (branches/release_34) (based on LLVM 3.4.2)\"}\r\n```\r\nUnfortunately when I try to parse it using ```mod = llvm.parse_assembly(ll)``` I have the following error:\r\n\r\n```\r\nraise RuntimeError(\"LLVM IR parsing error\\n{0}\".format(errmsg))\r\nRuntimeError: LLVM IR parsing error\r\n<string>:6:49: error: expected string\r\n@.str = private unnamed_addr constant [5 x i8] c\"hey\r\n```\r\n\r\nI based my test on [1] so I think I should have done all properly. ```ll``` variable was just a multi-line with the content from ```a.ll```\r\n\r\nCould you help me to solve this problem please?\r\n\r\nThanks\r\n\r\n\r\n[1] https://github.com/numba/llvmlite/blob/master/examples/parseasm.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/300", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/300/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/300/events", "html_url": "https://github.com/numba/llvmlite/issues/300", "id": 255337472, "node_id": "MDU6SXNzdWUyNTUzMzc0NzI=", "number": 300, "title": "using large floating point structures breaks x86_64 calling convention", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-05T16:33:14Z", "updated_at": "2017-09-05T17:14:25Z", "closed_at": "2017-09-05T17:14:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've adapted the simple fpadd example from llvmlite docs. It now takes struct { double, double, double} as the first argument, and three double arguments after that.\r\nx86_64 calling convention says[0]:\r\n> if the size of an object is larger than two eightbytes and the first eightbyte is not SSE or any other eightbyte is not SSEUP, it still has class MEMORY. \r\n\r\nhowever the llvm generated code still expects to find structure elements in xmm registers.\r\n\r\nThis is reproducible on llvmlite-0.16.0 + llvm-3.9, and llvmlite-0.19 + llvm-4.0.\r\nI haven't checked whether this is a bug in llvmlite, the JIT engine, or llvm itself.\r\nnote that reducing the structure to 2 double fields works correctly (2 eightbyte aggregates should be passed in SSE registers)\r\n\r\n[0] http://chamilo2.grenet.fr/inp/courses/ENSIMAG3MM1LDB/document/doc_abi_ia64.pdf\r\nthe full code:\r\n```\r\n#!/bin/env python3\r\n\r\n# Short example/demonstrator how to create and compile native code using\r\n# LLVM MCJIT just-in-time compiler\r\n\r\nfrom llvmlite import binding,ir\r\nimport ctypes\r\n\r\n# Create some useful types\r\ndouble = ir.DoubleType()\r\nstruct_ty = ir.LiteralStructType([double, double, double])\r\nfnty = ir.FunctionType(double, (struct_ty, double, double, double))\r\n\r\n# Create an empty module...\r\nmodule = ir.Module(name=__file__)\r\n# and declare a function named \"fpadd\" inside it\r\nfunc = ir.Function(module, fnty, name=\"fpadd\")\r\n\r\nblock = func.append_basic_block(name=\"entry\")\r\nbuilder = ir.IRBuilder(block)\r\nstruct, a, b, c = func.args\r\n\r\nx = builder.extract_value(struct, 2)\r\ny = builder.extract_value(struct, 1)\r\nz = builder.extract_value(struct, 0)\r\n\r\ntmp = builder.fadd(x, y)\r\nresult = builder.fadd(z, tmp, name=\"res\")\r\nbuilder.ret(result)\r\n\r\n# Uncomment to print the module IR. This prints LLVM IR assembly.\r\n# print(\"LLVM IR:\")\r\n# print(module)\r\n\r\nbinding.initialize()\r\n\r\n# native == currently running CPU\r\nbinding.initialize_native_target()\r\n\r\n# TODO: This prevents 'LLVM ERROR: Target does not support MC emission!',\r\n# but why?\r\nbinding.initialize_native_asmprinter()\r\n\r\n# Create compilation target, use default triple\r\ntarget = binding.Target.from_default_triple()\r\ntarget_machine = target.create_target_machine()\r\n\r\n# And an execution engine with an empty backing module\r\n# TODO: why is empty backing mod necessary?\r\nbacking_mod = binding.parse_assembly(\"\")\r\n\r\n# There are other engines beside MCJIT\r\n# MCJIT makes it easier to run the compiled function right away.\r\nengine = binding.create_mcjit_compiler(backing_mod, target_machine)\r\n\r\n# IR module is not the same as binding module.\r\n# \"assembly\" in this case is LLVM IR assembly\r\n# TODO is there a better way to convert this?\r\nmod = binding.parse_assembly(str(module))\r\nmod.verify()\r\n\r\n# Now add the module and make sure it is ready for execution\r\nengine.add_module(mod)\r\nengine.finalize_object()\r\n\r\n# Uncomment to print generated x86 assembly\r\nprint(\"x86 assembly:\")\r\nprint(target_machine.emit_assembly(mod))\r\n\r\n# Look up the function pointer (a Python int)\r\n# func_ptr is now an address to a compiled function\r\nfunc_ptr = engine.get_function_address(\"fpadd\")\r\n\r\n# add ctypes structure\r\nclass dob3(ctypes.Structure):\r\n    _fields_ = [(\"a\", ctypes.c_double), (\"b\", ctypes.c_double), (\"c\", ctypes.c_double)]\r\n\r\n# Run the function via ctypes\r\na = 1\r\nb = 2\r\nc = 3\r\ncfunc = ctypes.CFUNCTYPE(ctypes.c_double, dob3, ctypes.c_double,  ctypes.c_double, ctypes.c_double)(func_ptr)\r\nstruct_ty, _, _, _ = cfunc.argtypes\r\n\r\n\r\nres = cfunc(struct_ty(a, b, c), 4, 5, 6)\r\n#assert res == (a + b + c)\r\nif res != (a + b):\r\n    print(\"TEST FAILED! {} instead of {}\".format(res, a + b + c))\r\nelse:\r\n    print(\"TEST PASSED! {} == {}\".format(res, a + b + c))\r\n\r\nengine.remove_module(mod)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/298", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/298/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/298/events", "html_url": "https://github.com/numba/llvmlite/issues/298", "id": 255122884, "node_id": "MDU6SXNzdWUyNTUxMjI4ODQ=", "number": 298, "title": "indexing array types", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-04T22:12:22Z", "updated_at": "2018-07-17T16:31:54Z", "closed_at": "2018-07-17T16:31:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a struct that includes an array. A simplified case looks like this:\r\n```\r\nfloat_ty = ir.DoubleType()\r\nnoise_ty = ir.ArrayType(float_ty, 10)\r\n# rate, offset, noise\r\nparam_type = ir.LiteralStructType([float_ty, float_ty, noise_ty])\r\n```\r\nusing constant indices works OK:\r\n```\r\nnoise = builder.extract_value(params, (2, 1))\r\n```\r\nhowever when I try to use dynamic index (like in a loop):\r\n```\r\nindex_ptr = builder.alloca(ir.IntType(32))\r\n... # store something to index_ptr\r\nindex = builder.load(index_ptr)\r\nnoise = builder.extract_value(params, (2, index))\r\n```\r\nI hit a python error:\r\n```\r\n    def __getitem__(self, item):\r\n>       if 0 <= item < self.size:\r\nE       TypeError: '<=' not supported between instances of 'int' and 'LoadInstr'\r\n```\r\nThe documentation for extract_value says that:\r\n> If agg is of an array type, indices can be arbitrary values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/293", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/293/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/293/events", "html_url": "https://github.com/numba/llvmlite/issues/293", "id": 250080795, "node_id": "MDU6SXNzdWUyNTAwODA3OTU=", "number": 293, "title": "No difference when applying optimization over my code in llvmlite", "user": {"login": "sarahsama", "id": 31012282, "node_id": "MDQ6VXNlcjMxMDEyMjgy", "avatar_url": "https://avatars2.githubusercontent.com/u/31012282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarahsama", "html_url": "https://github.com/sarahsama", "followers_url": "https://api.github.com/users/sarahsama/followers", "following_url": "https://api.github.com/users/sarahsama/following{/other_user}", "gists_url": "https://api.github.com/users/sarahsama/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarahsama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarahsama/subscriptions", "organizations_url": "https://api.github.com/users/sarahsama/orgs", "repos_url": "https://api.github.com/users/sarahsama/repos", "events_url": "https://api.github.com/users/sarahsama/events{/privacy}", "received_events_url": "https://api.github.com/users/sarahsama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-14T16:17:00Z", "updated_at": "2017-09-26T18:14:16Z", "closed_at": "2017-08-30T14:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use optimization passes of llvmlite for my own  program. I have defined the following function for my code as pass  function:\r\ndef create_pass_manager_builder(opt=3, loop_vectorize=False, slp_vectorize=False):\r\n    pmb = llvm.create_pass_manager_builder()\r\n    pmb.opt_level = opt\r\n    pmb.loop_vectorize = loop_vectorize\r\n    pmb.populate = populate\r\n    pmb.add_dead_code_elimination_pass = add_dead_code_elimination_pass\r\n    pmb.slp_vectorize = slp_vectorize\r\n    pmb.inlining_threshold = _inlining_threshold(opt)\r\n    return pmb\r\n\r\nand I try to run it using the following:\r\n\r\nmodule_ref = llvm1.parse_assembly(str(module))\r\npmb = llvm.create_pass_manager_builder()\r\npmb.opt_level = 3\r\npm = llvm.create_module_pass_manager()\r\npmb.populate(pm)\r\npm.run(module_ref)\r\n\r\nHaving this I do have some optimization for my code. However, when I change the optimization level from 3 to 2 or 0, there is no difference for optimization.How can i change the level of optimization and see the difference?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/292", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/292/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/292/events", "html_url": "https://github.com/numba/llvmlite/issues/292", "id": 248303783, "node_id": "MDU6SXNzdWUyNDgzMDM3ODM=", "number": 292, "title": "llvmlite-0.16.0 + llvm-3.9.1 segfault when compiling a function call", "user": {"login": "jvesely", "id": 5942874, "node_id": "MDQ6VXNlcjU5NDI4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5942874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvesely", "html_url": "https://github.com/jvesely", "followers_url": "https://api.github.com/users/jvesely/followers", "following_url": "https://api.github.com/users/jvesely/following{/other_user}", "gists_url": "https://api.github.com/users/jvesely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvesely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvesely/subscriptions", "organizations_url": "https://api.github.com/users/jvesely/orgs", "repos_url": "https://api.github.com/users/jvesely/repos", "events_url": "https://api.github.com/users/jvesely/events{/privacy}", "received_events_url": "https://api.github.com/users/jvesely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-07T04:18:08Z", "updated_at": "2018-07-12T15:51:33Z", "closed_at": "2018-07-12T15:51:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "LLVM segfaults when trying to get inlining cost:\r\n#0  0x00007f01ac1c506d in llvm::StringMapImpl::FindKey(llvm::StringRef) const\r\n    () from /usr/lib64/libLLVMSupport.so.39\r\n#1  0x00007f01ac5a81cf in llvm::Module::getNamedMetadata(llvm::Twine const&) const () from /usr/lib64/libLLVMCore.so.39\r\n#2  0x00007f01ac5a8671 in llvm::Module::getModuleFlagsMetadata() const ()\r\n   from /usr/lib64/libLLVMCore.so.39\r\n#3  0x00007f01ac5a86b6 in \r\n   from /usr/lib64/libLLVMCore.so.39\r\n#4  0x00007f01ac5a881e in llvm::Module::getModuleFlag(llvm::StringRef) const ()\r\n   from /usr/lib64/libLLVMCore.so.39\r\n#5  0x00007f01ac5a9e75 in llvm::Module::getProfileSummary() ()\r\n   from /usr/lib64/libLLVMCore.so.39\r\n#6  0x00007f01acca4451 in llvm::ProfileSummaryInfo::computeSummary() ()\r\n   from /usr/lib64/libLLVMAnalysis.so.39\r\n#7  0x00007f01acca44c1 in llvm::ProfileSummaryInfo::isHotFunction(llvm::Function const*) () from /usr/lib64/libLLVMAnalysis.so.39\r\n#8  0x00007f01acc1823b in ?? () from /usr/lib64/libLLVMAnalysis.so.39\r\n#9  0x00007f01acc1bdfe in llvm::getInlineCost(llvm::CallSite, llvm::Function*, int, llvm::TargetTransformInfo&, llvm::AssumptionCacheTracker*, llvm::ProfileSummaryInfo*) () from /usr/lib64/libLLVMAnalysis.so.39\r\n#10 0x00007f01acc1bfc9 in llvm::getInlineCost(llvm::CallSite, int, llvm::TargetTransformInfo&, llvm::AssumptionCacheTracker*, llvm::ProfileSummaryInfo*) ()\r\n---Type <return> to continue, or q <return> to quit---\r\n   /usr/lib64/libLLVMAnalysis.so.39\r\n#11 0x00007f01aff84edb in ?? () from /usr/lib64/libLLVMipo.so.39\r\n#12 0x00007f01aff855a1 in llvm::Inliner::shouldInline(llvm::CallSite) () from /usr/lib64/libLLVMipo.so.39\r\n#13 0x00007f01aff8968c in llvm::Inliner::inlineCalls(llvm::CallGraphSCC&) () from /usr/lib64/libLLVMipo.so.39\r\n#14 0x00007f01acbbd709 in ?? () from /usr/lib64/libLLVMAnalysis.so.39\r\n#15 0x00007f01ac593c96 in llvm::legacy::PassManagerImpl::run(llvm::Module&) () from /usr/lib64/libLLVMCore.so.39\r\n#16 0x00007f01ac529829 in LLVMRunPassManager () from /usr/lib64/libLLVMCore.so.39\r\n#17 0x00007f01b674c38c in LLVMPY_RunPassManager () from /usr/lib64/python3.5/site-packages/llvmlite/binding/libllvmlite.so\r\n#18 0x00007f01b9750ff0 in ffi_call_unix64 () from /usr/lib64/libffi.so.6\r\n\r\nThe function call is created using:\r\nint32_ty = ir.IntType(32)\r\nfloat_ty = ir.DoubleType()\r\ndouble_ptr_ty = float_ty.as_pointer()\r\n\r\nf = _module.get_global(name);\r\nfunc_ty = ir.FunctionType(ir.VoidType(), (double_ptr_ty, double_ptr_ty, double_ptr_ty))\r\nfunction = ir.Function(_module, func_ty, name='wrapper')\r\n\r\n_x = ctx.int32_ty(x) # x is a python constant, dimension of the input matrix\r\n_v, _m, _o = function.args\r\nblock = function.append_basic_block(name=\"entry\")\r\nbuilder = ir.IRBuilder(block)\r\nbuilder.call(f, [_v, _m, _x, _x, _o])\r\nbuilder.ret_void()\r\n\r\nThe generated IR looks OK. When printed I can pass ti to opt and llc without any problem.\r\nIt also works OK when f is marked with 'alwaysinline' attribute.\r\nThe same python code works OK with llvm-lite-0.19.0 and LLVM-4.0.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/290", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/290/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/290/events", "html_url": "https://github.com/numba/llvmlite/issues/290", "id": 242774094, "node_id": "MDU6SXNzdWUyNDI3NzQwOTQ=", "number": 290, "title": "Make wheels for windows", "user": {"login": "sklam", "id": 1929845, "node_id": "MDQ6VXNlcjE5Mjk4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklam", "html_url": "https://github.com/sklam", "followers_url": "https://api.github.com/users/sklam/followers", "following_url": "https://api.github.com/users/sklam/following{/other_user}", "gists_url": "https://api.github.com/users/sklam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklam/subscriptions", "organizations_url": "https://api.github.com/users/sklam/orgs", "repos_url": "https://api.github.com/users/sklam/repos", "events_url": "https://api.github.com/users/sklam/events{/privacy}", "received_events_url": "https://api.github.com/users/sklam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-13T17:26:26Z", "updated_at": "2018-01-19T21:17:26Z", "closed_at": "2018-01-19T21:17:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, `python setup.py bdist_wheel` is failing with:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 182, in <module>\r\n    ext_modules=[ext_stub] if not sys.platform.startswith('win32') else [],\r\n  File \"C:\\conda64_2\\envs\\llvmlite_wheel_tmp35\\lib\\distutils\\core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"C:\\conda64_2\\envs\\llvmlite_wheel_tmp35\\lib\\distutils\\dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"C:\\conda64_2\\envs\\llvmlite_wheel_tmp35\\lib\\distutils\\dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"setup.py\", line 125, in run\r\n    raise RuntimeError(\"missing {}\".format(path))\r\nRuntimeError: missing llvmlite\\binding\\msvcr120.dll\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/288", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/288/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/288/events", "html_url": "https://github.com/numba/llvmlite/issues/288", "id": 242178790, "node_id": "MDU6SXNzdWUyNDIxNzg3OTA=", "number": 288, "title": "docs: Itanium exception handling ABI link", "user": {"login": "electronwill", "id": 12059307, "node_id": "MDQ6VXNlcjEyMDU5MzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/12059307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/electronwill", "html_url": "https://github.com/electronwill", "followers_url": "https://api.github.com/users/electronwill/followers", "following_url": "https://api.github.com/users/electronwill/following{/other_user}", "gists_url": "https://api.github.com/users/electronwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/electronwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/electronwill/subscriptions", "organizations_url": "https://api.github.com/users/electronwill/orgs", "repos_url": "https://api.github.com/users/electronwill/repos", "events_url": "https://api.github.com/users/electronwill/events{/privacy}", "received_events_url": "https://api.github.com/users/electronwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-11T20:48:08Z", "updated_at": "2017-07-13T17:40:21Z", "closed_at": "2017-07-13T17:40:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://llvmlite.readthedocs.io/en/latest/user-guide/ir/ir-builder.html#llvmlite.ir.IRBuilder.landingpad\r\n\r\n\"Itanium exception handling ABI\" links to https://mentorembedded.github.io/cxx-abi/abi-eh.html . This is a 404. Maybe it should be https://itanium-cxx-abi.github.io/cxx-abi/abi-eh.html ?\r\n\r\n@sklam ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/287", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/287/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/287/events", "html_url": "https://github.com/numba/llvmlite/issues/287", "id": 242150268, "node_id": "MDU6SXNzdWUyNDIxNTAyNjg=", "number": 287, "title": "docs: llvmlite.ir.IntType(bits) \"bits\" or \"width\"", "user": {"login": "electronwill", "id": 12059307, "node_id": "MDQ6VXNlcjEyMDU5MzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/12059307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/electronwill", "html_url": "https://github.com/electronwill", "followers_url": "https://api.github.com/users/electronwill/followers", "following_url": "https://api.github.com/users/electronwill/following{/other_user}", "gists_url": "https://api.github.com/users/electronwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/electronwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/electronwill/subscriptions", "organizations_url": "https://api.github.com/users/electronwill/orgs", "repos_url": "https://api.github.com/users/electronwill/repos", "events_url": "https://api.github.com/users/electronwill/events{/privacy}", "received_events_url": "https://api.github.com/users/electronwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-11T18:59:17Z", "updated_at": "2017-07-13T17:02:57Z", "closed_at": "2017-07-13T17:02:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://llvmlite.readthedocs.io/en/latest/user-guide/ir/types.html#llvmlite.ir.IntType shows this:\r\n\r\nclass llvmlite.ir.IntType(bits)\r\nThe type of integers. The Python integer bits specifies the bitwidth of the integers having this type.\r\nwidth\r\nThe width in bits.\r\n\r\nShould it say \"bits\" instead of \"width\", or is it correct now?\r\n\r\n@sklam ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/286", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/286/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/286/events", "html_url": "https://github.com/numba/llvmlite/issues/286", "id": 241674366, "node_id": "MDU6SXNzdWUyNDE2NzQzNjY=", "number": 286, "title": "link error when building", "user": {"login": "punkdit", "id": 8611068, "node_id": "MDQ6VXNlcjg2MTEwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8611068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/punkdit", "html_url": "https://github.com/punkdit", "followers_url": "https://api.github.com/users/punkdit/followers", "following_url": "https://api.github.com/users/punkdit/following{/other_user}", "gists_url": "https://api.github.com/users/punkdit/gists{/gist_id}", "starred_url": "https://api.github.com/users/punkdit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/punkdit/subscriptions", "organizations_url": "https://api.github.com/users/punkdit/orgs", "repos_url": "https://api.github.com/users/punkdit/repos", "events_url": "https://api.github.com/users/punkdit/events{/privacy}", "received_events_url": "https://api.github.com/users/punkdit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-07-10T10:57:09Z", "updated_at": "2019-10-02T14:16:36Z", "closed_at": "2019-10-02T14:15:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed LLVM 4.0.1 from source, and attempted to build llvmlite (from git). Looks like quite the linker incantation, I hope we can figure this one out.\r\n```\r\n\r\n$ python setup.py build\r\n/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'install_requires'\r\n  warnings.warn(msg)\r\nrunning build\r\ngot version from VCS {'version': '0.19.0', 'full': 'c3f10e3a2b75a0b44ce74a2c07c8299fc7e50b82'}\r\nrunning build_py\r\nrunning build_ext\r\nbuilding 'llvmlite.binding._stub' extension\r\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security -fPIC -I/usr/include/python2.7 -c llvmlite/binding/_stub.c -o build/temp.linux-x86_64-2.7/llvmlite/binding/_stub.o\r\nx86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -Wdate-time -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wl,-Bsymbolic-functions -Wl,-z,relro -Wdate-time -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security build/temp.linux-x86_64-2.7/llvmlite/binding/_stub.o -o build/lib.linux-x86_64-2.7/llvmlite/binding/_stub.so\r\n/usr/bin/python /home/simon/local/llvmlite/ffi/build.py\r\nLLVM version... 4.0.1\r\n\r\n# static-libstdc++ avoids runtime dependencies on a\r\n# particular libstdc++ version.\r\ng++  -shared -I/usr/local/include -fPIC -fvisibility-inlines-hidden -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wno-missing-field-initializers -pedantic -Wno-long-long -Wno-maybe-uninitialized -Wdelete-non-virtual-dtor -Wno-comment -Werror=date-time -std=c++11 -g -fno-exceptions -fno-rtti -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-rtti -g -flto assembly.cpp bitcode.cpp core.cpp initfini.cpp module.cpp value.cpp executionengine.cpp transforms.cpp passmanagers.cpp targets.cpp dylib.cpp linker.cpp object_file.cpp -o libllvmlite.so -L/usr/local/lib -flto -Wl,--exclude-libs=ALL -lLLVMLTO -lLLVMPasses -lLLVMObjCARCOpts -lLLVMMIRParser -lLLVMSymbolize -lLLVMDebugInfoPDB -lLLVMDebugInfoDWARF -lLLVMCoverage -lLLVMTableGen -lLLVMOrcJIT -lLLVMXCoreDisassembler -lLLVMXCoreCodeGen -lLLVMXCoreDesc -lLLVMXCoreInfo -lLLVMXCoreAsmPrinter -lLLVMSystemZDisassembler -lLLVMSystemZCodeGen -lLLVMSystemZAsmParser -lLLVMSystemZDesc -lLLVMSystemZInfo -lLLVMSystemZAsmPrinter -lLLVMSparcDisassembler -lLLVMSparcCodeGen -lLLVMSparcAsmParser -lLLVMSparcDesc -lLLVMSparcInfo -lLLVMSparcAsmPrinter -lLLVMRISCVDesc -lLLVMRISCVCodeGen -lLLVMRISCVInfo -lLLVMPowerPCDisassembler -lLLVMPowerPCCodeGen -lLLVMPowerPCAsmParser -lLLVMPowerPCDesc -lLLVMPowerPCInfo -lLLVMPowerPCAsmPrinter -lLLVMNVPTXCodeGen -lLLVMNVPTXDesc -lLLVMNVPTXInfo -lLLVMNVPTXAsmPrinter -lLLVMMSP430CodeGen -lLLVMMSP430Desc -lLLVMMSP430Info -lLLVMMSP430AsmPrinter -lLLVMMipsDisassembler -lLLVMMipsCodeGen -lLLVMMipsAsmParser -lLLVMMipsDesc -lLLVMMipsInfo -lLLVMMipsAsmPrinter -lLLVMLanaiDisassembler -lLLVMLanaiCodeGen -lLLVMLanaiAsmParser -lLLVMLanaiDesc -lLLVMLanaiInstPrinter -lLLVMLanaiInfo -lLLVMHexagonDisassembler -lLLVMHexagonCodeGen -lLLVMHexagonAsmParser -lLLVMHexagonDesc -lLLVMHexagonInfo -lLLVMBPFDisassembler -lLLVMBPFCodeGen -lLLVMBPFDesc -lLLVMBPFInfo -lLLVMBPFAsmPrinter -lLLVMARMDisassembler -lLLVMARMCodeGen -lLLVMARMAsmParser -lLLVMARMDesc -lLLVMARMInfo -lLLVMARMAsmPrinter -lLLVMAMDGPUDisassembler -lLLVMAMDGPUCodeGen -lLLVMAMDGPUAsmParser -lLLVMAMDGPUDesc -lLLVMAMDGPUInfo -lLLVMAMDGPUAsmPrinter -lLLVMAMDGPUUtils -lLLVMAArch64Disassembler -lLLVMAArch64CodeGen -lLLVMAArch64AsmParser -lLLVMAArch64Desc -lLLVMAArch64Info -lLLVMAArch64AsmPrinter -lLLVMAArch64Utils -lLLVMObjectYAML -lLLVMLibDriver -lLLVMOption -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMGlobalISel -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMDebugInfoCodeView -lLLVMDebugInfoMSF -lLLVMX86Desc -lLLVMMCDisassembler -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMMCJIT -lLLVMLineEditor -lLLVMInterpreter -lLLVMExecutionEngine -lLLVMRuntimeDyld -lLLVMCodeGen -lLLVMTarget -lLLVMCoroutines -lLLVMipo -lLLVMInstrumentation -lLLVMVectorize -lLLVMScalarOpts -lLLVMLinker -lLLVMIRReader -lLLVMAsmParser -lLLVMInstCombine -lLLVMTransformUtils -lLLVMBitWriter -lLLVMAnalysis -lLLVMObject -lLLVMMCParser -lLLVMMC -lLLVMBitReader -lLLVMProfileData -lLLVMCore -lLLVMSupport -lLLVMDemangle -lrt -ldl -lpthread -lz -lm\r\n\r\n/usr/local/lib/libLLVMCore.a(Core.cpp.o): In function `LLVMGetDiagInfoDescription':\r\n/home/simon/local/llvm-4.0.1.src/lib/IR/Core.cpp:184: undefined reference to `llvm::DiagnosticPrinterRawOStream::~DiagnosticPrinterRawOStream()'\r\n/usr/local/lib/libLLVMCore.a(DiagnosticPrinter.cpp.o):(.data.rel.ro._ZTVN4llvm27DiagnosticPrinterRawOStreamE[_ZTVN4llvm27DiagnosticPrinterRawOStreamE]+0x10): undefined reference to `llvm::DiagnosticPrinterRawOStream::~DiagnosticPrinterRawOStream()'\r\n/usr/local/lib/libLLVMCore.a(DiagnosticPrinter.cpp.o):(.data.rel.ro._ZTVN4llvm27DiagnosticPrinterRawOStreamE[_ZTVN4llvm27DiagnosticPrinterRawOStreamE]+0x18): undefined reference to `llvm::DiagnosticPrinterRawOStream::~DiagnosticPrinterRawOStream()'\r\n/usr/local/lib/libLLVMCore.a(LLVMContext.cpp.o): In function `llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&)':\r\n/home/simon/local/llvm-4.0.1.src/lib/IR/LLVMContext.cpp:208: undefined reference to `llvm::DiagnosticPrinterRawOStream::~DiagnosticPrinterRawOStream()'\r\ncollect2: error: ld returned 1 exit status\r\nMakefile.linux:20: recipe for target 'libllvmlite.so' failed\r\nmake: *** [libllvmlite.so] Error 1\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/285", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/285/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/285/events", "html_url": "https://github.com/numba/llvmlite/issues/285", "id": 241367431, "node_id": "MDU6SXNzdWUyNDEzNjc0MzE=", "number": 285, "title": "KeyError: '.const.pickledata...'", "user": {"login": "cgohlke", "id": 483428, "node_id": "MDQ6VXNlcjQ4MzQyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/483428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgohlke", "html_url": "https://github.com/cgohlke", "followers_url": "https://api.github.com/users/cgohlke/followers", "following_url": "https://api.github.com/users/cgohlke/following{/other_user}", "gists_url": "https://api.github.com/users/cgohlke/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgohlke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgohlke/subscriptions", "organizations_url": "https://api.github.com/users/cgohlke/orgs", "repos_url": "https://api.github.com/users/cgohlke/repos", "events_url": "https://api.github.com/users/cgohlke/events{/privacy}", "received_events_url": "https://api.github.com/users/cgohlke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-07T20:09:02Z", "updated_at": "2017-07-07T20:30:48Z", "closed_at": "2017-07-07T20:30:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the just released numba 0.34.0, llvmlite 0.19.0, LLVM 4.0.1, built with Visual Studio 2015 on Windows, I get the following failure on all Python platforms:\r\n```\r\nPython 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 18:41:36) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import numba, llvmlite\r\n>>> numba.__version__\r\n'0.33.0'\r\n>>> llvmlite.__version__\r\n'0.19.0'\r\n>>> @numba.jit()\r\n... def function():\r\n...     pass\r\n...\r\nTraceback (most recent call last):\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\pythonapi.py\", line 1297, in serialize_object\r\n    gv = self.module.__serialized[obj]\r\nKeyError: (<class 'RuntimeError'>, ('numba jitted function aborted due to unresolved symbol',))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\decorators.py\", line 173, in wrapper\r\n    **dispatcher_args)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\dispatcher.py\", line 467, in __init__\r\n    self.targetctx = self.targetdescr.target_context\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\targets\\registry.py\", line 54, in target_context\r\n    return self._toplevel_target_context\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\utils.py\", line 283, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\targets\\registry.py\", line 38, in _toplevel_target_context\r\n    return cpu.CPUContext(self.typing_context)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\targets\\base.py\", line 240, in __init__\r\n    self.init()\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\targets\\cpu.py\", line 48, in init\r\n    rtsys.initialize(self)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\runtime\\nrt.py\", line 35, in initialize\r\n    self._library = nrtdynmod.compile_nrt_functions(ctx)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\runtime\\nrtdynmod.py\", line 199, in compile_nrt_functions\r\n    ir_mod, library = create_nrt_module(ctx)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\runtime\\nrtdynmod.py\", line 189, in create_nrt_module\r\n    _define_nrt_unresolved_abort(ctx, ir_mod)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\runtime\\nrtdynmod.py\", line 166, in _define_nrt_unresolved_abort\r\n    ctx.call_conv.return_user_exc(builder, RuntimeError, (msg,))\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\targets\\callconv.py\", line 344, in return_user_exc\r\n    struct_gv = pyapi.serialize_object(exc)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\pythonapi.py\", line 1299, in serialize_object\r\n    struct = self.serialize_uncached(obj)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\pythonapi.py\", line 1282, in serialize_uncached\r\n    arr = self.context.insert_unique_const(self.module, name, bdata)\r\n  File \"X:\\Python36\\lib\\site-packages\\numba\\targets\\base.py\", line 401, in insert_unique_const\r\n    gv = mod.get_global(name)\r\n  File \"X:\\Python36\\lib\\site-packages\\llvmlite\\ir\\module.py\", line 138, in get_global\r\n    return self.globals[name]\r\nKeyError: '.const.pickledata.2066756346184'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/282", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/282/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/282/events", "html_url": "https://github.com/numba/llvmlite/issues/282", "id": 238770933, "node_id": "MDU6SXNzdWUyMzg3NzA5MzM=", "number": 282, "title": "Idea: make setup.py download llvm automatically", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-27T08:16:35Z", "updated_at": "2017-06-27T09:21:46Z", "closed_at": "2017-06-27T09:21:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Idea: make setup.py download llvm automatically\r\n\r\nIn these days of high speed internet, a 100MB download is by and large un-noticeable? Certainly more un-noticeable than having to download it oneself.\r\n\r\nexample code to download and install llvm, from python:\r\n\r\nhttps://github.com/hughperkins/coriander/blob/8490247293a5d28d29c888066fe7c39d7d958f5e/install_distro.py#L128-L165\r\n```\r\ndef install_llvm(install_dir):\r\n    global llvm_dir\r\n    # install to current directory?\r\n    cd(install_dir)\r\n    makedir('soft')\r\n    cd('soft')\r\n    target_url = {\r\n        'Darwin': 'http://releases.llvm.org/4.0.0/clang+llvm-4.0.0-x86_64-apple-darwin.tar.xz',\r\n        'Linux': 'http://releases.llvm.org/4.0.0/clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz',\r\n        'Windows': 'http://releases.llvm.org/4.0.0/LLVM-4.0.0-win64.exe'\r\n    }[platform.uname()[0]]\r\n    filename = target_url.split('/')[-1]\r\n    wget(target_url, filename)\r\n    if filename.endswith('.tar.xz'):\r\n        run(['tar', '-xf', filename])\r\n        unzip_name = filename.replace('.tar.xz', '')\r\n        run(['mv', unzip_name, 'llvm-4.0'])\r\n        cd_repo_root()\r\n        llvm_dir = path.abspath(join(install_dir, 'soft', 'llvm-4.0'))\r\n        if is_llvm_dir(llvm_dir):\r\n            print('installed llvm ok to [%s]' % join('soft', 'llvm-4.0'))\r\n        else:\r\n            print('Failed to install LLVM 4.0.  Please retry, or install by hand')\r\n            sys.exit(-1)\r\n    else:\r\n        print('Please install LLVM 4.0.0 by hand, into default location.  It is already downloaded into \"soft\" sub-directory. Just need to double-click it :-)')\r\n        sys.exit(-1)\r\n\r\n\r\ndef maybe_install_llvm(install_dir):\r\n    global llvm_dir\r\n    for p in ['/usr/local/opt/llvm-4.0', 'C:\\\\Program Files\\\\LLVM', join(install_dir, 'soft', 'llvm-4.0')]:\r\n        if is_llvm_dir(p):\r\n            llvm_dir = p\r\n            print('found llvm, with required version %s at %s' % (REQUIRED_LLVM_VERSION, llvm_dir))\r\n            break\r\n    if llvm_dir is None:\r\n        install_llvm(install_dir)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/280", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/280/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/280/events", "html_url": "https://github.com/numba/llvmlite/issues/280", "id": 238555649, "node_id": "MDU6SXNzdWUyMzg1NTU2NDk=", "number": 280, "title": "`CastInstr` object has no attribute 'addrspace'", "user": {"login": "stuartarchibald", "id": 907717, "node_id": "MDQ6VXNlcjkwNzcxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/907717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuartarchibald", "html_url": "https://github.com/stuartarchibald", "followers_url": "https://api.github.com/users/stuartarchibald/followers", "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}", "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions", "organizations_url": "https://api.github.com/users/stuartarchibald/orgs", "repos_url": "https://api.github.com/users/stuartarchibald/repos", "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}", "received_events_url": "https://api.github.com/users/stuartarchibald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-26T14:10:17Z", "updated_at": "2017-06-26T18:15:54Z", "closed_at": "2017-06-26T18:15:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is happening, https://github.com/numba/numba/issues/2429, most likely due to https://github.com/numba/llvmlite/pull/279.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/274", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/274/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/274/events", "html_url": "https://github.com/numba/llvmlite/issues/274", "id": 235610610, "node_id": "MDU6SXNzdWUyMzU2MTA2MTA=", "number": 274, "title": "GEPInstr in llvmlite/ir/instructions.py:456  drops the addrspace", "user": {"login": "jcaraban", "id": 9800311, "node_id": "MDQ6VXNlcjk4MDAzMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9800311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcaraban", "html_url": "https://github.com/jcaraban", "followers_url": "https://api.github.com/users/jcaraban/followers", "following_url": "https://api.github.com/users/jcaraban/following{/other_user}", "gists_url": "https://api.github.com/users/jcaraban/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcaraban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcaraban/subscriptions", "organizations_url": "https://api.github.com/users/jcaraban/orgs", "repos_url": "https://api.github.com/users/jcaraban/repos", "events_url": "https://api.github.com/users/jcaraban/events{/privacy}", "received_events_url": "https://api.github.com/users/jcaraban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-13T16:19:28Z", "updated_at": "2017-06-23T16:48:53Z", "closed_at": "2017-06-23T16:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was running `text_complex_kernel` in a personal Numba OpenCL backend and LLVM would complain about the following lines because of the missing `addrspace(4)` in %.80:\r\n```\r\n  %.79 = getelementptr inbounds { double, double }, { double, double } addrspace(4)* %arg.a.4, i64 %.75, i32 1\r\n  %.80 = load double, double* %.79, align 8\r\n```\r\nTracing the issue I reached instructions.py:456 and noticed that `typ = typ.as_pointer()`was dropping the addrspace, changed it to `typ = typ.as_pointer(ptr.type.addrspace)`and now `text_complex_kernel` generates the following LLVM code and executes correctly.\r\n```\r\n  %.80 = load double, double addrspace(4)* %.79, align 8\r\n```\r\nThis problem did not arise in the CUDA backend, probably because the generic address space is 0, therefore `addrspace(0)` is not carried around and it would still be ok to drop it.\r\n\r\nI am not totally sure this is an issue, but it is worth reporting.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/271", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/271/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/271/events", "html_url": "https://github.com/numba/llvmlite/issues/271", "id": 231415144, "node_id": "MDU6SXNzdWUyMzE0MTUxNDQ=", "number": 271, "title": "x86_64 wheels don't contain ASM parser for x86_64 architecture", "user": {"login": "squeaky-pl", "id": 754356, "node_id": "MDQ6VXNlcjc1NDM1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/754356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/squeaky-pl", "html_url": "https://github.com/squeaky-pl", "followers_url": "https://api.github.com/users/squeaky-pl/followers", "following_url": "https://api.github.com/users/squeaky-pl/following{/other_user}", "gists_url": "https://api.github.com/users/squeaky-pl/gists{/gist_id}", "starred_url": "https://api.github.com/users/squeaky-pl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/squeaky-pl/subscriptions", "organizations_url": "https://api.github.com/users/squeaky-pl/orgs", "repos_url": "https://api.github.com/users/squeaky-pl/repos", "events_url": "https://api.github.com/users/squeaky-pl/events{/privacy}", "received_events_url": "https://api.github.com/users/squeaky-pl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-25T18:09:25Z", "updated_at": "2017-05-25T18:58:12Z", "closed_at": "2017-05-25T18:58:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am on `Linux localhost.localdomain 4.10.10-100.fc24.x86_64 #1 SMP Thu Apr 13 01:12:25 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux` and I installed llvmlite with `pip` which chose to use binary wheels.\r\n\r\nGiven following  `foo.ll` with _inline asm_:\r\n\r\n```\r\n; ModuleID = \"\"\r\ntarget triple = \"x86_64-unknown-unknown\"\r\ntarget datalayout = \"\"\r\n\r\ndefine i32 @\"cpuid1\"() \r\n{\r\nentry:\r\n  %\".2\" = call {i32, i32, i32, i32} asm  \"cpuid\", \"={ax},={bx},={cx},={dx},{ax}\"\r\n(i32 1)\r\n  %\".3\" = extractvalue {i32, i32, i32, i32} %\".2\", 2\r\n  ret i32 %\".3\"\r\n}\r\n\r\n```\r\n\r\nand a program like:\r\n\r\n```\r\nimport llvmlite.ir as ll\r\nimport llvmlite.binding as llvm\r\n\r\nllvm.initialize()\r\nllvm.initialize_native_target()\r\nllvm.initialize_native_asmprinter()\r\n\r\nwith open('foo.ll') as fp:\r\n    module = fp.read()\r\n\r\n# Convert textual LLVM IR into in-memory representation.\r\nllvm_module = llvm.parse_assembly(module)\r\n\r\n\r\ntm = llvm.Target.from_default_triple().create_target_machine()\r\n\r\n# Compile the module to machine code using MCJIT\r\nwith llvm.create_mcjit_compiler(llvm_module, tm) as ee:\r\n    ee.finalize_object()\r\n\r\n```\r\n\r\nI get:\r\n\r\n```LLVM ERROR: Inline asm not supported by this streamer because we don't have an asm parser for this target```\r\n\r\nIt does work with my distribution provided llvm-4.0 and produces valid output:\r\n\r\n```\r\n/opt/llvm-4.0.0/bin/llvm-as foo.ll\r\n/opt/llvm-4.0.0/bin/llvm-lto -filetype=asm -O0 -o=- foo.bc                                                                                                   workspace/llvmlite\r\n\t.text\r\n\t.file\t\"ld-temp.o\"\r\n\t.p2align\t4, 0x90\r\n\t.type\tcpuid1,@function\r\ncpuid1:\r\n\t.cfi_startproc\r\n\tpushq\t%rbx\r\n.Lcfi0:\r\n\t.cfi_def_cfa_offset 16\r\n.Lcfi1:\r\n\t.cfi_offset %rbx, -16\r\n\tmovl\t$1, %eax\r\n\t#APP\r\n\tcpuid\r\n\t#NO_APP\r\n\tmovl\t%eax, -4(%rsp)\r\n\tmovl\t%ecx, %eax\r\n\tmovl\t%ebx, -8(%rsp)\r\n\tmovl\t%edx, -12(%rsp)\r\n\tpopq\t%rbx\r\n\tretq\r\n.Lfunc_end0:\r\n\t.size\tcpuid1, .Lfunc_end0-cpuid1\r\n\t.cfi_endproc\r\n\r\n\r\n\t.section\t\".note.GNU-stack\",\"\",@progbits\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/270", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/270/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/270/events", "html_url": "https://github.com/numba/llvmlite/issues/270", "id": 231344167, "node_id": "MDU6SXNzdWUyMzEzNDQxNjc=", "number": 270, "title": "Vectorize inner loop to SIMD width", "user": {"login": "maedoc", "id": 5189886, "node_id": "MDQ6VXNlcjUxODk4ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5189886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maedoc", "html_url": "https://github.com/maedoc", "followers_url": "https://api.github.com/users/maedoc/followers", "following_url": "https://api.github.com/users/maedoc/following{/other_user}", "gists_url": "https://api.github.com/users/maedoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/maedoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maedoc/subscriptions", "organizations_url": "https://api.github.com/users/maedoc/orgs", "repos_url": "https://api.github.com/users/maedoc/repos", "events_url": "https://api.github.com/users/maedoc/events{/privacy}", "received_events_url": "https://api.github.com/users/maedoc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-25T13:46:31Z", "updated_at": "2017-06-01T14:45:24Z", "closed_at": "2017-06-01T14:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "From my comment on #211, \r\n```python\r\n@numba.jit\r\ndef loop(a, b, c, out):\r\n    rec_b = float32(b / 10.0)\r\n    rec_c = float32(c * b / 42.0)\r\n    for i in range(1000):\r\n        for j in range(8):\r\n            out[i, j] = a + i * rec_b + i * rec_c\r\n```\r\nvs\r\n```c\r\nvoid loop(float a, float b, float c, float *out)\r\n{\r\n  float rec_b = b / 10.0;\r\n  float rec_c = c * b / 42.0;\r\n  for (int i=0; i<1000; i++)\r\n    for (int j=0; j<8; j++)\r\n      out[i*8 + j] = a + i * rec_b + i * rec_c;\r\n}\r\n```\r\nIn the former, the optimized IR reported by Numba is using regular floats, while in the latter, the IR shows work done on `<8 x float>`s (using the `-march=core-avx2` flag).\r\n\r\nIf I may guess w/o reading Clang's code, it is noticing that the `j` loop matches AVX2 SIMD width here and emitting 8-wide floats.\r\n\r\nIn Clang 3.9 this require an explicit pragma, so I guess it's fairly fancy inference, and I'd be happy to have something explicit like `prange`, e.g. \r\n```python\r\nfor i in numba.prange(100):\r\n    for j in numba.ilprange(8):\r\n         out[i, j] = a + i * rec_b + i * rec_c\r\n```\r\n(instruction level parallelism) which could drop the for loop and use SIMD-width vector types.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/269", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/269/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/269/events", "html_url": "https://github.com/numba/llvmlite/issues/269", "id": 231272759, "node_id": "MDU6SXNzdWUyMzEyNzI3NTk=", "number": 269, "title": "Is there any function like malloc_array in llvmpy?", "user": {"login": "choleraehyq", "id": 8923413, "node_id": "MDQ6VXNlcjg5MjM0MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8923413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choleraehyq", "html_url": "https://github.com/choleraehyq", "followers_url": "https://api.github.com/users/choleraehyq/followers", "following_url": "https://api.github.com/users/choleraehyq/following{/other_user}", "gists_url": "https://api.github.com/users/choleraehyq/gists{/gist_id}", "starred_url": "https://api.github.com/users/choleraehyq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choleraehyq/subscriptions", "organizations_url": "https://api.github.com/users/choleraehyq/orgs", "repos_url": "https://api.github.com/users/choleraehyq/repos", "events_url": "https://api.github.com/users/choleraehyq/events{/privacy}", "received_events_url": "https://api.github.com/users/choleraehyq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-25T08:24:08Z", "updated_at": "2017-05-26T05:57:43Z", "closed_at": "2017-05-26T05:57:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to allocate heap memory using llvmlite, how can I do this? I haven't found any API like malloc or malloc_array.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/267", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/267/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/267/events", "html_url": "https://github.com/numba/llvmlite/issues/267", "id": 230297718, "node_id": "MDU6SXNzdWUyMzAyOTc3MTg=", "number": 267, "title": "Support packed struct type", "user": {"login": "choleraehyq", "id": 8923413, "node_id": "MDQ6VXNlcjg5MjM0MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8923413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choleraehyq", "html_url": "https://github.com/choleraehyq", "followers_url": "https://api.github.com/users/choleraehyq/followers", "following_url": "https://api.github.com/users/choleraehyq/following{/other_user}", "gists_url": "https://api.github.com/users/choleraehyq/gists{/gist_id}", "starred_url": "https://api.github.com/users/choleraehyq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choleraehyq/subscriptions", "organizations_url": "https://api.github.com/users/choleraehyq/orgs", "repos_url": "https://api.github.com/users/choleraehyq/repos", "events_url": "https://api.github.com/users/choleraehyq/events{/privacy}", "received_events_url": "https://api.github.com/users/choleraehyq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-22T06:39:53Z", "updated_at": "2017-05-26T14:17:55Z", "closed_at": "2017-05-26T14:17:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that llvmlite doesn't support packed attribute for struct types.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/262", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/262/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/262/events", "html_url": "https://github.com/numba/llvmlite/issues/262", "id": 224633730, "node_id": "MDU6SXNzdWUyMjQ2MzM3MzA=", "number": 262, "title": "Still not building llvmlite dynamic library on 0.17.1", "user": {"login": "stephengroat", "id": 1159138, "node_id": "MDQ6VXNlcjExNTkxMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1159138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephengroat", "html_url": "https://github.com/stephengroat", "followers_url": "https://api.github.com/users/stephengroat/followers", "following_url": "https://api.github.com/users/stephengroat/following{/other_user}", "gists_url": "https://api.github.com/users/stephengroat/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephengroat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephengroat/subscriptions", "organizations_url": "https://api.github.com/users/stephengroat/orgs", "repos_url": "https://api.github.com/users/stephengroat/repos", "events_url": "https://api.github.com/users/stephengroat/events{/privacy}", "received_events_url": "https://api.github.com/users/stephengroat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-27T00:08:55Z", "updated_at": "2017-04-27T18:49:09Z", "closed_at": "2017-04-27T18:49:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "using pip, still having issues not building the .so, .dylib, etc.\r\n\r\nPlease let me know what I can try to help debug\r\n\r\nLogs from installing using pip (https://travis-ci.org/cea-sec/miasm/jobs/226220656#L513)\r\nLogs from error (https://travis-ci.org/cea-sec/miasm/jobs/226220656#L1070)\r\n\r\nhave wheel builds been added to travis to confirm that they're working?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/260", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/260/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/260/events", "html_url": "https://github.com/numba/llvmlite/issues/260", "id": 223338775, "node_id": "MDU6SXNzdWUyMjMzMzg3NzU=", "number": 260, "title": "[Question] How to get an IRBuilder object from a llvmlite.binding.value.ValueRef object", "user": {"login": "joxeankoret", "id": 2945834, "node_id": "MDQ6VXNlcjI5NDU4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2945834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joxeankoret", "html_url": "https://github.com/joxeankoret", "followers_url": "https://api.github.com/users/joxeankoret/followers", "following_url": "https://api.github.com/users/joxeankoret/following{/other_user}", "gists_url": "https://api.github.com/users/joxeankoret/gists{/gist_id}", "starred_url": "https://api.github.com/users/joxeankoret/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joxeankoret/subscriptions", "organizations_url": "https://api.github.com/users/joxeankoret/orgs", "repos_url": "https://api.github.com/users/joxeankoret/repos", "events_url": "https://api.github.com/users/joxeankoret/events{/privacy}", "received_events_url": "https://api.github.com/users/joxeankoret/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-21T10:06:50Z", "updated_at": "2017-05-12T00:06:21Z", "closed_at": "2017-05-12T00:06:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to use LLVMLite for a purpose that I'm not sure is supported right now. What I would like to do is the following:\r\n\r\n * Compile IR or (even better) load a byte-code file.\r\n * Get all the modules and all the functions in each module.\r\n * Get an IRBuilder like object so I can analyse all the basic blocks and each basic block's instruction.\r\n\r\nWhat I really want to do is to write a source-to-source tool to convert from LLVM IR to my own totally different IR. I don't know if I'm asking the wrong question; perhaps there is another way to do so with LLVMLite?\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/258", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/258/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/258/events", "html_url": "https://github.com/numba/llvmlite/issues/258", "id": 220983976, "node_id": "MDU6SXNzdWUyMjA5ODM5NzY=", "number": 258, "title": "Installer doesn't create llvmlite/binding/libllvmlite.so library in venv", "user": {"login": "leftys", "id": 1970226, "node_id": "MDQ6VXNlcjE5NzAyMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1970226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leftys", "html_url": "https://github.com/leftys", "followers_url": "https://api.github.com/users/leftys/followers", "following_url": "https://api.github.com/users/leftys/following{/other_user}", "gists_url": "https://api.github.com/users/leftys/gists{/gist_id}", "starred_url": "https://api.github.com/users/leftys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leftys/subscriptions", "organizations_url": "https://api.github.com/users/leftys/orgs", "repos_url": "https://api.github.com/users/leftys/repos", "events_url": "https://api.github.com/users/leftys/events{/privacy}", "received_events_url": "https://api.github.com/users/leftys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-04-11T15:08:16Z", "updated_at": "2019-03-13T12:47:41Z", "closed_at": "2017-04-17T20:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "My setup: Python 3.5.2, virtualenv, Ubuntu xenial, llvm 4.0, newest pip and distutils:\r\n```\r\n(env) skodajan@jan:/tmp$ LLVM_CONFIG=/usr/bin/llvm-config-4.0 pip install llvmlite\r\nCollecting llvmlite\r\n  Using cached llvmlite-0.17.0.tar.gz\r\nInstalling collected packages: llvmlite\r\n  Running setup.py install for llvmlite ... done\r\nSuccessfully installed llvmlite-0.17.0\r\n(env) skodajan@jan:/tmp$ ls env/lib/python3.5/site-packages/llvmlite/binding/\r\nanalysis.py  dylib.py            ffi.py       __init__.py  module.py       options.py       __pycache__                            targets.py     value.py\r\ncommon.py    executionengine.py  initfini.py  linker.py    object_file.py  passmanagers.py  _stub.cpython-35m-x86_64-linux-gnu.so  transforms.py\r\n```\r\n\r\nOnce I install numba, the `import numba` fails:\r\n```\r\n(env) skodajan@jan:/tmp$ pip install numba\r\nCollecting numba\r\nCollecting numpy (from numba)\r\n  Using cached numpy-1.12.1-cp35-cp35m-manylinux1_x86_64.whl\r\nRequirement already satisfied: llvmlite in ./env/lib/python3.5/site-packages (from numba)\r\nInstalling collected packages: numpy, numba\r\nSuccessfully installed numba-0.32.0 numpy-1.12.1\r\n(env) skodajan@jan-skoda:/tmp$ python -c 'import numba'\r\nTraceback (most recent call last):\r\n  File \"/tmp/env/lib/python3.5/site-packages/llvmlite/binding/ffi.py\", line 42, in <module>\r\n    lib = ctypes.CDLL(os.path.join(_lib_dir, _lib_name))\r\n  File \"/usr/lib/python3.5/ctypes/__init__.py\", line 347, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: /tmp/env/lib/python3.5/site-packages/llvmlite/binding/libllvmlite.so: cannot open shared object file: No such file or directory\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/env/lib/python3.5/site-packages/numba/__init__.py\", line 9, in <module>\r\n    from . import config, errors, runtests, types\r\n  File \"/tmp/env/lib/python3.5/site-packages/numba/config.py\", line 11, in <module>\r\n    import llvmlite.binding as ll\r\n  File \"/tmp/env/lib/python3.5/site-packages/llvmlite/binding/__init__.py\", line 6, in <module>\r\n    from .dylib import *\r\n  File \"/tmp/env/lib/python3.5/site-packages/llvmlite/binding/dylib.py\", line 4, in <module>\r\n    from . import ffi\r\n  File \"/tmp/env/lib/python3.5/site-packages/llvmlite/binding/ffi.py\", line 47, in <module>\r\n    lib = ctypes.CDLL(_lib_name)\r\n  File \"/usr/lib/python3.5/ctypes/__init__.py\", line 347, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: libllvmlite.so: cannot open shared object file: No such file or directory\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/249", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/249/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/249/events", "html_url": "https://github.com/numba/llvmlite/issues/249", "id": 211122861, "node_id": "MDU6SXNzdWUyMTExMjI4NjE=", "number": 249, "title": "Option to enable/disable static-linking during build", "user": {"login": "sklam", "id": 1929845, "node_id": "MDQ6VXNlcjE5Mjk4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sklam", "html_url": "https://github.com/sklam", "followers_url": "https://api.github.com/users/sklam/followers", "following_url": "https://api.github.com/users/sklam/following{/other_user}", "gists_url": "https://api.github.com/users/sklam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sklam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sklam/subscriptions", "organizations_url": "https://api.github.com/users/sklam/orgs", "repos_url": "https://api.github.com/users/sklam/repos", "events_url": "https://api.github.com/users/sklam/events{/privacy}", "received_events_url": "https://api.github.com/users/sklam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-01T15:53:23Z", "updated_at": "2017-03-22T16:00:27Z", "closed_at": "2017-03-22T16:00:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From https://github.com/numba/llvmlite/issues/93#issuecomment-283378934\r\n\r\n> If no-static-linking is the default, it will fit most users that are building from source. Only those that needs to distribute and be compatible with older linux needs to turn on static linking.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/241", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/241/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/241/events", "html_url": "https://github.com/numba/llvmlite/issues/241", "id": 206677307, "node_id": "MDU6SXNzdWUyMDY2NzczMDc=", "number": 241, "title": "Seg fault during JIT compilation / execution of LLVM trampolines", "user": {"login": "scizzorz", "id": 2607718, "node_id": "MDQ6VXNlcjI2MDc3MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2607718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scizzorz", "html_url": "https://github.com/scizzorz", "followers_url": "https://api.github.com/users/scizzorz/followers", "following_url": "https://api.github.com/users/scizzorz/following{/other_user}", "gists_url": "https://api.github.com/users/scizzorz/gists{/gist_id}", "starred_url": "https://api.github.com/users/scizzorz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scizzorz/subscriptions", "organizations_url": "https://api.github.com/users/scizzorz/orgs", "repos_url": "https://api.github.com/users/scizzorz/repos", "events_url": "https://api.github.com/users/scizzorz/events{/privacy}", "received_events_url": "https://api.github.com/users/scizzorz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-10T01:02:57Z", "updated_at": "2017-02-14T00:02:12Z", "closed_at": "2017-02-14T00:02:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into an issue when I'm using the execution engine / JIT compiler and LLVM trampolines.\r\n\r\nGiven the following code: https://gist.github.com/8579c3deef24d91506405dd22c875ad7\r\n\r\nI can compile the `test.ll` with `clang` and run it just fine, getting the expected result of `5`:\r\n\r\n    $ clang test.ll\r\n    $ ./a.out\r\n    5\r\n\r\nHowever, if I run it using the given `test.py`, Python will seg fault:\r\n\r\n    $ python test.py\r\n    finalized\r\n    zsh: segmentation fault (core dumped)  python test.py\r\n\r\nIf you modify the IR by uncommenting line 33 and commenting line 32, `test.py` will successfully execute. `clang` will still compile it as well.\r\n\r\nIs this a known issue / is there a workaround?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/237", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/237/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/237/events", "html_url": "https://github.com/numba/llvmlite/issues/237", "id": 204654867, "node_id": "MDU6SXNzdWUyMDQ2NTQ4Njc=", "number": 237, "title": "manylinux wheels", "user": {"login": "mdraw", "id": 6719909, "node_id": "MDQ6VXNlcjY3MTk5MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6719909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdraw", "html_url": "https://github.com/mdraw", "followers_url": "https://api.github.com/users/mdraw/followers", "following_url": "https://api.github.com/users/mdraw/following{/other_user}", "gists_url": "https://api.github.com/users/mdraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdraw/subscriptions", "organizations_url": "https://api.github.com/users/mdraw/orgs", "repos_url": "https://api.github.com/users/mdraw/repos", "events_url": "https://api.github.com/users/mdraw/events{/privacy}", "received_events_url": "https://api.github.com/users/mdraw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-01T17:46:31Z", "updated_at": "2017-04-26T16:57:11Z", "closed_at": "2017-04-26T16:57:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't how hard it would be or if it is possible at all, but it would be really helpful if llvmlite and numba were available as manylinux wheels.\r\nCurrently, installing those two modules outside of an Anaconda environment is really hard (if I'm not missing something) because of the constantly changing llvm version requirement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/235", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/235/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/235/events", "html_url": "https://github.com/numba/llvmlite/issues/235", "id": 202933852, "node_id": "MDU6SXNzdWUyMDI5MzM4NTI=", "number": 235, "title": "Failing to vectorize with llvmlite where LLVM is capable of vectorizing", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-24T20:40:27Z", "updated_at": "2017-02-15T09:52:09Z", "closed_at": "2017-02-15T09:52:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm attempting to vectorize a simple float reduction with LLVM (v3.8) through llvmlite (v0.15).\r\nThe code does the same thing as the following:\r\n\r\n My test case is:\r\n```python\r\nimport sys\r\nimport llvmlite.binding as llvm\r\n\r\ndef initialize_llvm(force=False):\r\n    if not force and hasattr(initialize_llvm, 'done'):\r\n        return\r\n\r\n    llvm.initialize()\r\n    llvm.initialize_native_target()\r\n    llvm.initialize_native_asmprinter()\r\n    llvm.check_jit_execution()\r\n    initialize_llvm.done = True\r\n\r\nmod_str = \\\r\n\"\"\"\r\ntarget triple = \"unknown-unknown-unknown\"\r\ntarget datalayout = \"\"\r\n\r\ndefine float @\"adder\"(float* %\"x__input\")\r\n{\r\nentry:\r\n  %\"x\" = bitcast float* %\"x__input\" to [1024 x float]*\r\n  br label %\"loop\"\r\nloop:\r\n  %\"loop_idx\" = phi i32 [0, %\"entry\"], [%\"next_loop_idx\", %\"loop\"]\r\n  %\"Sum__old\" = phi float [             0x0, %\"entry\"], [%\"Sum\", %\"loop\"]\r\n  %\"next_loop_idx\" = add i32 %\"loop_idx\", 1\r\n  %\"x__addr_loop\" = getelementptr [1024 x float], [1024 x float]* %\"x\", i32 0, i32 %\"loop_idx\"\r\n  %\"x__loop\" = load float, float* %\"x__addr_loop\"\r\n  %\"mul\" = fmul fast float 0x40091eb860000000, %\"x__loop\"\r\n  %\"Sum\" = fadd fast float %\"Sum__old\", %\"mul\"\r\n  %\"another_iter\" = icmp slt i32 %\"next_loop_idx\", 1024\r\n  br i1 %\"another_iter\", label %\"loop\", label %\"post_loop\"\r\npost_loop:\r\n  ret float %\"Sum\"\r\n}\r\n\"\"\"\r\n\r\ninitialize_llvm()\r\nmod = llvm.parse_assembly(mod_str)\r\nmod.verify()\r\n\r\npmb = llvm.PassManagerBuilder()\r\npmb.opt = 3\r\npmb.loop_vectorize = True\r\npmb.slp_vectorize = True\r\n\r\nfpm = llvm.FunctionPassManager(mod)\r\npmb.populate(fpm)\r\n\r\nfunc = mod.get_function('adder')\r\nfpm.initialize()\r\nopt_found = fpm.run(func)\r\nfpm.finalize()\r\n\r\nsys.stderr.write('Optimized: %s\\n' % opt_found)\r\nprint mod\r\n```\r\n\r\nThis leads to not finding any optimizations. If I pipe the output of the program to ``opt -O3 -force-vector-width=4 -S``, then vectorized IR is generated. The IR isn't vectorized without the ``force-vector-width`` flag. Additionally, if I write the equivalent program in C program in ``test.c`` \r\n```\r\nfloat adder(float *x) {\r\n  float total = 0.0;\r\n  for (int i = 0; i < 1024; i++) {\r\n    total += 3.14f * x[i];\r\n  }\r\n  return total;\r\n}\r\n```\r\n then ``clang test.c -O3 -ffast-math -S -emit-llvm -o -`` gives vectorized IR.\r\n\r\nThis leads to a couple of questions:\r\n(1) Why isn't llvmlite or ``opt`` giving vectorized IR? It seems to me that vectorizing IR requires knowledge of the target vector size, but this information isn't present in the ``FunctionPassManager`` based flow above.\r\n\r\n(2) Is there any way to specify ``-force-vector-width`` with llvmlite? I tried inserting a ``llvm.set_option('llvm', '--force-vector-width=8')`` before creating the pass manager with no luck.\r\n\r\n(3) Is there any way to get LLVM to dump more info about what's going on during optimization (particularly auto vectorization and loop unrolling)? A call to ``llvm.set_option('', '-debug-pass=Details')`` helps but gives no mention of loop-vectorize or anything about unrolling loops. The [LLVM autovec docs](http://llvm.org/docs/Vectorizers.html) mention the ``-Rpass=loop-vectorize`` option, but this appears to only work with ``clang`` (no luck with ``opt`` or llvmlite calling ``set_option``).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/234", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/234/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/234/events", "html_url": "https://github.com/numba/llvmlite/issues/234", "id": 202271121, "node_id": "MDU6SXNzdWUyMDIyNzExMjE=", "number": 234, "title": "Building llvmlite requires LLVM 3.9.x", "user": {"login": "demidovakatya", "id": 5788652, "node_id": "MDQ6VXNlcjU3ODg2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5788652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demidovakatya", "html_url": "https://github.com/demidovakatya", "followers_url": "https://api.github.com/users/demidovakatya/followers", "following_url": "https://api.github.com/users/demidovakatya/following{/other_user}", "gists_url": "https://api.github.com/users/demidovakatya/gists{/gist_id}", "starred_url": "https://api.github.com/users/demidovakatya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demidovakatya/subscriptions", "organizations_url": "https://api.github.com/users/demidovakatya/orgs", "repos_url": "https://api.github.com/users/demidovakatya/repos", "events_url": "https://api.github.com/users/demidovakatya/events{/privacy}", "received_events_url": "https://api.github.com/users/demidovakatya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-20T23:54:57Z", "updated_at": "2017-03-28T15:03:07Z", "closed_at": "2017-02-20T20:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```~/llvmlite \ue0b0 \ue0a0 master \ue0b0 LLVM_CONFIG=/usr/local/Cellar/llvm@3.8/3.8.1/bin/llvm-config-3.8 python setup.py install```\r\n\r\nI get this on mac and ubuntu (both have llvm-3.8 installed, llvm-3.9 is not available via apt neither via brew)\r\n```\r\n/usr/local/lib/python2.7/site-packages/setuptools/dist.py:333: UserWarning: Normalizing '0.16.0.dev+17.ge2b69ed' to '0.16.0.dev0+17.ge2b69ed'\r\n  normalized_version,\r\nrunning install\r\nrunning build\r\ngot version from VCS {'version': '0.16.0.dev+17.ge2b69ed', 'full': 'e2b69edc08f8f4245aac56de7cbf41b7850bbe95'}\r\nrunning build_ext\r\n/usr/local/opt/python/bin/python2.7 /Users/mac/llvmlite/ffi/build.py\r\nLLVM version... 3.8.1\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/mac/llvmlite/ffi/build.py\", line 152, in <module>\r\n    main()\r\n  File \"/Users/mac/llvmlite/ffi/build.py\", line 146, in main\r\n    main_posix('osx', '.dylib')\r\n  File \"/Users/mac/llvmlite/ffi/build.py\", line 119, in main_posix\r\n    raise RuntimeError(msg)\r\nRuntimeError: Building llvmlite requires LLVM 3.9.x. Be sure to set LLVM_CONFIG to the right executable path.\r\nRead the documentation at http://llvmlite.pydata.org/ for more information about building llvmlite.\r\n\r\nerror: command '/usr/local/opt/python/bin/python2.7' failed with exit status 1```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/228", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/228/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/228/events", "html_url": "https://github.com/numba/llvmlite/issues/228", "id": 198834776, "node_id": "MDU6SXNzdWUxOTg4MzQ3NzY=", "number": 228, "title": "Make documentation for older versions available on Read the Docs", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-04T23:09:22Z", "updated_at": "2017-01-06T14:20:08Z", "closed_at": "2017-01-06T14:20:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be convenient if documentation for older versions was available on Read the Docs.\r\nIs older documentation currently built or hosted anywhere?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/224", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/224/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/224/events", "html_url": "https://github.com/numba/llvmlite/issues/224", "id": 196769332, "node_id": "MDU6SXNzdWUxOTY3NjkzMzI=", "number": 224, "title": "get_host_cpu_features() crashes on some archs", "user": {"login": "danstender", "id": 203159, "node_id": "MDQ6VXNlcjIwMzE1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/203159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danstender", "html_url": "https://github.com/danstender", "followers_url": "https://api.github.com/users/danstender/followers", "following_url": "https://api.github.com/users/danstender/following{/other_user}", "gists_url": "https://api.github.com/users/danstender/gists{/gist_id}", "starred_url": "https://api.github.com/users/danstender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danstender/subscriptions", "organizations_url": "https://api.github.com/users/danstender/orgs", "repos_url": "https://api.github.com/users/danstender/repos", "events_url": "https://api.github.com/users/danstender/events{/privacy}", "received_events_url": "https://api.github.com/users/danstender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-20T20:14:00Z", "updated_at": "2016-12-28T16:51:19Z", "closed_at": "2016-12-28T16:51:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is from Debian packaging, get_host_cpu_features() crashes on some ports like s390x, ppc64el etc. [1]:\r\n```\r\n>>> from llvmlite import binding as llvm\r\n>>> llvm.get_host_cpu_features()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"llvmlite/binding/targets.py\", line 61, in get_host_cpu_features\r\n    outdict[feat[1:]] = flag_map[feat[0]]\r\nIndexError: string index out of range\r\n```\r\nDo you have any pointers what's going wrong here? That's llvmlite 0.14.0 with LLVM 3.8.\r\nThanks,\r\nDS\r\n\r\n[1] <https://buildd.debian.org/status/package.php?p=llvmlite&suite=experimental>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/220", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/220/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/220/events", "html_url": "https://github.com/numba/llvmlite/issues/220", "id": 187269516, "node_id": "MDU6SXNzdWUxODcyNjk1MTY=", "number": 220, "title": "Getting RuntimeError even when I have llvm-3.8 installed", "user": {"login": "konsbn", "id": 3414469, "node_id": "MDQ6VXNlcjM0MTQ0Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3414469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konsbn", "html_url": "https://github.com/konsbn", "followers_url": "https://api.github.com/users/konsbn/followers", "following_url": "https://api.github.com/users/konsbn/following{/other_user}", "gists_url": "https://api.github.com/users/konsbn/gists{/gist_id}", "starred_url": "https://api.github.com/users/konsbn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konsbn/subscriptions", "organizations_url": "https://api.github.com/users/konsbn/orgs", "repos_url": "https://api.github.com/users/konsbn/repos", "events_url": "https://api.github.com/users/konsbn/events{/privacy}", "received_events_url": "https://api.github.com/users/konsbn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-04T07:29:40Z", "updated_at": "2018-05-27T21:23:06Z", "closed_at": "2018-05-22T19:36:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have llvm installed as is evident by\r\n```\r\nexport LLVM_CONFIG=\"/usr/bin/llvm-config\"\r\n```\r\n and also the ls output\r\n```\r\n\u279c  llvmlite git:(master) ls /usr/bin/llvm-\r\nllvm-ar@              llvm-cov@             llvm-dwarfdump@       llvm-mc@              llvm-prof@            llvm-size-3.6@      \r\nllvm-ar-3.4@          llvm-cov-3.4@         llvm-dwarfdump-3.4@   llvm-mc-3.4@          llvm-profdata-3.6@    llvm-size-3.8@      \r\nllvm-ar-3.6@          llvm-cov-3.6@         llvm-dwarfdump-3.6@   llvm-mc-3.6@          llvm-profdata-3.8@    llvm-split-3.8@     \r\nllvm-ar-3.8@          llvm-cov-3.8@         llvm-dwarfdump-3.8@   llvm-mc-3.8@          llvm-ranlib@          llvm-stress-3.4@    \r\nllvm-as@              llvm-c-test-3.8@      llvm-dwp-3.8@         llvm-mcmarkup-3.4@    llvm-ranlib-3.4@      llvm-stress-3.6@    \r\nllvm-as-3.4@          llvm-cxxdump-3.8@     llvm-extract@         llvm-mcmarkup-3.6@    llvm-ranlib-3.6@      llvm-stress-3.8@    \r\nllvm-as-3.6@          llvm-diff@            llvm-extract-3.4@     llvm-mcmarkup-3.8@    llvm-ranlib-3.8@      llvm-symbolizer-3.4@\r\nllvm-as-3.8@          llvm-diff-3.4@        llvm-extract-3.6@     llvm-nm@              llvm-readobj-3.4@     llvm-symbolizer-3.6@\r\nllvm-bcanalyzer@      llvm-diff-3.6@        llvm-extract-3.8@     llvm-nm-3.4@          llvm-readobj-3.6@     llvm-symbolizer-3.8@\r\nllvm-bcanalyzer-3.4@  llvm-diff-3.8@        llvm-ld@              llvm-nm-3.6@          llvm-readobj-3.8@     llvm-tblgen@        \r\nllvm-bcanalyzer-3.6@  llvm-dis@             llvm-lib-3.8@         llvm-nm-3.8@          llvm-rtdyld@          llvm-tblgen-3.4@    \r\nllvm-bcanalyzer-3.8@  llvm-dis-3.4@         llvm-link@            llvm-objdump@         llvm-rtdyld-3.4@      llvm-tblgen-3.6@    \r\nllvm-config@          llvm-dis-3.6@         llvm-link-3.4@        llvm-objdump-3.4@     llvm-rtdyld-3.6@      llvm-tblgen-3.8@    \r\nllvm-config-3.4@      llvm-dis-3.8@         llvm-link-3.6@        llvm-objdump-3.6@     llvm-rtdyld-3.8@      llvm-vtabledump-3.6@\r\nllvm-config-3.6@      llvm-dsymutil-3.6@    llvm-link-3.8@        llvm-objdump-3.8@     llvm-size@                                \r\nllvm-config-3.8@      llvm-dsymutil-3.8@    llvm-lto-3.8@         llvm-pdbdump-3.8@     llvm-size-3.4@                            \r\n\r\n\r\n```\r\nbut I keep getting \r\n```\r\n\u279c  llvmlite git:(master) sudo python setup.py build\r\nrunning build\r\ngot version from VCS {'version': '0.14.0+8.gc996fb6', 'full': 'c996fb6ada525a53e7659477f57a825d6d1b8632'}\r\nrunning build_ext\r\n/usr/bin/python /home/sbn/llvmlite/ffi/build.py\r\nLLVM version... 3.4\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/sbn/llvmlite/ffi/build.py\", line 152, in <module>\r\n    main()\r\n  File \"/home/sbn/llvmlite/ffi/build.py\", line 142, in main\r\n    main_posix('linux', '.so')\r\n  File \"/home/sbn/llvmlite/ffi/build.py\", line 119, in main_posix\r\n    raise RuntimeError(msg)\r\nRuntimeError: Building llvmlite requires LLVM 3.8.x. Be sure to set LLVM_CONFIG to the right executable path.\r\nRead the documentation at http://llvmlite.pydata.org/ for more information about building llvmlite.\r\n\r\nerror: command '/usr/bin/python' failed with exit status 1\r\n```\r\n# Please HELP ME!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/numba/llvmlite/issues/218", "repository_url": "https://api.github.com/repos/numba/llvmlite", "labels_url": "https://api.github.com/repos/numba/llvmlite/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/numba/llvmlite/issues/218/comments", "events_url": "https://api.github.com/repos/numba/llvmlite/issues/218/events", "html_url": "https://github.com/numba/llvmlite/issues/218", "id": 184308086, "node_id": "MDU6SXNzdWUxODQzMDgwODY=", "number": 218, "title": "LLVM IR parsing error", "user": {"login": "seibert", "id": 425352, "node_id": "MDQ6VXNlcjQyNTM1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/425352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seibert", "html_url": "https://github.com/seibert", "followers_url": "https://api.github.com/users/seibert/followers", "following_url": "https://api.github.com/users/seibert/following{/other_user}", "gists_url": "https://api.github.com/users/seibert/gists{/gist_id}", "starred_url": "https://api.github.com/users/seibert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seibert/subscriptions", "organizations_url": "https://api.github.com/users/seibert/orgs", "repos_url": "https://api.github.com/users/seibert/repos", "events_url": "https://api.github.com/users/seibert/events{/privacy}", "received_events_url": "https://api.github.com/users/seibert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-10-20T18:40:06Z", "updated_at": "2018-11-02T12:49:18Z", "closed_at": "2018-11-02T12:48:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As reported in numba/numba#2158, @cgohlke saw an LLVM IR parse error in Numba 0.29 / llvmlite 0.14.0:\n\n```\nX:\\Python35\\lib\\site-packages\\numba\\targets\\codegen.py in add_ir_module(self, ir_module)\n    147         assert isinstance(ir_module, llvmir.Module)\n    148         ir = cgutils.normalize_ir_text(str(ir_module))\n--> 149         ll_module = ll.parse_assembly(ir)\n    150         ll_module.name = ir_module.name\n    151         ll_module.verify()\n\nX:\\Python35\\lib\\site-packages\\llvmlite\\binding\\module.py in parse_assembly(llvmir)\n     20         if errmsg:\n     21             mod.close()\n---> 22             raise RuntimeError(\"LLVM IR parsing error\\n{0}\".format(errmsg))\n     23     return mod\n     24 \n\nRuntimeError: Failed at object (object mode frontend)\nFailed at object (object mode backend)\nLLVM IR parsing error\n<string>:767:55: error: expected type\n  %\".600\" = call i8* (i64) @\"PyLong_FromSsize_t\"(i64 (0, 0))\n```\n", "performed_via_github_app": null, "score": 1.0}]}