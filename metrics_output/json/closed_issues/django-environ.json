{"total_count": 72, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/joke2k/django-environ/issues/260", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/260/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/260/events", "html_url": "https://github.com/joke2k/django-environ/issues/260", "id": 626522444, "node_id": "MDU6SXNzdWU2MjY1MjI0NDQ=", "number": 260, "title": "Why referencing it as \"django-environ\" ?", "user": {"login": "dkremer-ledger", "id": 239454, "node_id": "MDQ6VXNlcjIzOTQ1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/239454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkremer-ledger", "html_url": "https://github.com/dkremer-ledger", "followers_url": "https://api.github.com/users/dkremer-ledger/followers", "following_url": "https://api.github.com/users/dkremer-ledger/following{/other_user}", "gists_url": "https://api.github.com/users/dkremer-ledger/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkremer-ledger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkremer-ledger/subscriptions", "organizations_url": "https://api.github.com/users/dkremer-ledger/orgs", "repos_url": "https://api.github.com/users/dkremer-ledger/repos", "events_url": "https://api.github.com/users/dkremer-ledger/events{/privacy}", "received_events_url": "https://api.github.com/users/dkremer-ledger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-28T13:46:41Z", "updated_at": "2020-06-02T20:02:32Z", "closed_at": "2020-06-02T20:02:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "This package should be agnostic, why does the name refer to django ?\r\nAlso, the package name is very distant from the module `environ` name, this is very confusing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/256", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/256/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/256/events", "html_url": "https://github.com/joke2k/django-environ/issues/256", "id": 612759729, "node_id": "MDU6SXNzdWU2MTI3NTk3Mjk=", "number": 256, "title": "Environment variable with spaces", "user": {"login": "bluesurfer", "id": 4722772, "node_id": "MDQ6VXNlcjQ3MjI3NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4722772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluesurfer", "html_url": "https://github.com/bluesurfer", "followers_url": "https://api.github.com/users/bluesurfer/followers", "following_url": "https://api.github.com/users/bluesurfer/following{/other_user}", "gists_url": "https://api.github.com/users/bluesurfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluesurfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluesurfer/subscriptions", "organizations_url": "https://api.github.com/users/bluesurfer/orgs", "repos_url": "https://api.github.com/users/bluesurfer/repos", "events_url": "https://api.github.com/users/bluesurfer/events{/privacy}", "received_events_url": "https://api.github.com/users/bluesurfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T17:08:33Z", "updated_at": "2020-05-05T20:05:54Z", "closed_at": "2020-05-05T20:05:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This looks trivial but I cannot find a general solution. Suppose I have a `.env` file that contains some environment variables with spaces. For example:\r\n\r\n```\r\nNAME1=Awesome\\ project\r\nNAME2=\"Awesome project\"\r\n```\r\nWhen getting these variables with `django-environ` and using them inside a template I also get the double quotes and the slash characters.\r\n\r\nInitially I tried:\r\n```\r\nNAME1=Awesome project\r\n```\r\nBut that gives me a bash syntax error.\r\n\r\nIs there a general solution to strip out such characters? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/255", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/255/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/255/events", "html_url": "https://github.com/joke2k/django-environ/issues/255", "id": 612723071, "node_id": "MDU6SXNzdWU2MTI3MjMwNzE=", "number": 255, "title": "AttributeError: 'PosixPath' object has no attribute 'read'", "user": {"login": "pupattan", "id": 19246595, "node_id": "MDQ6VXNlcjE5MjQ2NTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/19246595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pupattan", "html_url": "https://github.com/pupattan", "followers_url": "https://api.github.com/users/pupattan/followers", "following_url": "https://api.github.com/users/pupattan/following{/other_user}", "gists_url": "https://api.github.com/users/pupattan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pupattan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pupattan/subscriptions", "organizations_url": "https://api.github.com/users/pupattan/orgs", "repos_url": "https://api.github.com/users/pupattan/repos", "events_url": "https://api.github.com/users/pupattan/events{/privacy}", "received_events_url": "https://api.github.com/users/pupattan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T16:12:50Z", "updated_at": "2020-05-05T17:24:30Z", "closed_at": "2020-05-05T17:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error \r\n```\r\n\r\nFile \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/usr/src/app/path/settings.py\", line 30, in <module>\r\n    environ.Env.read_env(env_file=env_path)\r\n  File \"/usr/local/lib/python3.6/site-packages/environ/environ.py\", line 635, in read_env\r\n    content = f.read()\r\nAttributeError: 'PosixPath' object has no attribute 'read'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/233", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/233/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/233/events", "html_url": "https://github.com/joke2k/django-environ/issues/233", "id": 481076669, "node_id": "MDU6SXNzdWU0ODEwNzY2Njk=", "number": 233, "title": "Can this library be used to read in already set environment variables too?", "user": {"login": "dnk8n", "id": 3307753, "node_id": "MDQ6VXNlcjMzMDc3NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3307753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnk8n", "html_url": "https://github.com/dnk8n", "followers_url": "https://api.github.com/users/dnk8n/followers", "following_url": "https://api.github.com/users/dnk8n/following{/other_user}", "gists_url": "https://api.github.com/users/dnk8n/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnk8n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnk8n/subscriptions", "organizations_url": "https://api.github.com/users/dnk8n/orgs", "repos_url": "https://api.github.com/users/dnk8n/repos", "events_url": "https://api.github.com/users/dnk8n/events{/privacy}", "received_events_url": "https://api.github.com/users/dnk8n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-15T09:47:51Z", "updated_at": "2019-08-28T13:28:04Z", "closed_at": "2019-08-28T13:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a Docker user, one can use [--env-file](https://docs.docker.com/engine/reference/commandline/run/#set-environment-variables--e---env---env-file) ([Also see docker-compose](https://docs.docker.com/v17.12/compose/compose-file/#env_file)) to populate the container with the variables.\r\n\r\nCan this library still enable the syntax: `env.list('MY_VARIABLE')` for example, where:\r\n\r\n- I am proposing that an env file does not get mounted into the container but because of docker's --env-file option, all it's variables are defined, e.g.\r\nMY_VARIABLE=list_item_1,list_item_2,list_item_3\r\n\r\nI know I could use os.environ.get('MY_VARIABLE') and then do my own parsing but it would be useful to reuse what this library achieves already.\r\n\r\n\r\nAn example pre-setup could be:\r\n\r\n```\r\nimport environ\r\n\r\nroot = environ.Path(__file__) - 3  # 3 folders back\r\n# e.g. Debug is False by default\r\nenv = environ.Env(\r\n    DEBUG=(bool, False),\r\n)\r\n# env.read_env(existing_var_list=['MY_VARIABLE_1', 'MY_VARIABLE_2', 'MY_VARIABLE_3'])\r\n# or instead of explicitly listing them out:\r\nenv.read_env(existing_var_prefix='MY_VAR')\r\n# or\r\n# env.read_env(existing_var_regex='.*MY_VAR.*')\r\n\r\nBASE_DIR = root()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/230", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/230/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/230/events", "html_url": "https://github.com/joke2k/django-environ/issues/230", "id": 464736750, "node_id": "MDU6SXNzdWU0NjQ3MzY3NTA=", "number": 230, "title": "How can I set REVERSE_KEY_FUNCTION to Redis cache?", "user": {"login": "pix666", "id": 6928240, "node_id": "MDQ6VXNlcjY5MjgyNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6928240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pix666", "html_url": "https://github.com/pix666", "followers_url": "https://api.github.com/users/pix666/followers", "following_url": "https://api.github.com/users/pix666/following{/other_user}", "gists_url": "https://api.github.com/users/pix666/gists{/gist_id}", "starred_url": "https://api.github.com/users/pix666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pix666/subscriptions", "organizations_url": "https://api.github.com/users/pix666/orgs", "repos_url": "https://api.github.com/users/pix666/repos", "events_url": "https://api.github.com/users/pix666/events{/privacy}", "received_events_url": "https://api.github.com/users/pix666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-05T18:22:48Z", "updated_at": "2019-07-05T18:38:34Z", "closed_at": "2019-07-05T18:38:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "`django-redis` takes aditional argument [REVERSE_KEY_FUNCTION](https://github.com/niwinz/django-redis/blob/master/django_redis/client/default.py#L38). How can I set it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/228", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/228/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/228/events", "html_url": "https://github.com/joke2k/django-environ/issues/228", "id": 459163594, "node_id": "MDU6SXNzdWU0NTkxNjM1OTQ=", "number": 228, "title": "Question marks not allowed in passwords", "user": {"login": "jonbesga", "id": 9107782, "node_id": "MDQ6VXNlcjkxMDc3ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9107782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonbesga", "html_url": "https://github.com/jonbesga", "followers_url": "https://api.github.com/users/jonbesga/followers", "following_url": "https://api.github.com/users/jonbesga/following{/other_user}", "gists_url": "https://api.github.com/users/jonbesga/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonbesga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonbesga/subscriptions", "organizations_url": "https://api.github.com/users/jonbesga/orgs", "repos_url": "https://api.github.com/users/jonbesga/repos", "events_url": "https://api.github.com/users/jonbesga/events{/privacy}", "received_events_url": "https://api.github.com/users/jonbesga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-21T12:03:09Z", "updated_at": "2019-07-12T15:55:51Z", "closed_at": "2019-07-12T15:55:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I have the following DATABASE_URL for my postgres db:\r\n\r\n`postgres://user:pass?word@localhost/db`\r\n\r\nBut environ it's failing with:\r\n\r\n```\r\n  File \"/home/jon-be/Projects/project_a/shareapi/settings.py\", line 117, in <module>                                                                                                                                                      \r\n    'default': env.db(),                                                                                                                                                                                                                      \r\n  File \"/home/jon-be/.local/share/virtualenvs/project_a-FO4rTTPw/lib/python3.6/site-packages/environ/environ.py\", line 204, in db_url                                                                                                     \r\n    return self.db_url_config(self.get_value(var, default=default), engine=engine)                                                                                                                                                            \r\n  File \"/home/jon-be/.local/share/virtualenvs/project_a-FO4rTTPw/lib/python3.6/site-packages/environ/environ.py\", line 405, in db_url_config                                                                                              \r\n    'PORT': _cast_int(url.port) or '',                                                                                                                                                                                                        \r\n  File \"/usr/local/lib/python3.6/urllib/parse.py\", line 169, in port                                                                                                                                                                          \r\n    port = int(port, 10)                                                                                                                                                                                                                      \r\nValueError: invalid literal for int() with base 10: 'Xh7Yq' \r\n```\r\n\r\nThe problem is the question mark in my password as I don't get any error if I remove it. I'm wondering if this a limitation of the library or an unintended bug", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/219", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/219/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/219/events", "html_url": "https://github.com/joke2k/django-environ/issues/219", "id": 430215446, "node_id": "MDU6SXNzdWU0MzAyMTU0NDY=", "number": 219, "title": "Using Variables in .env File", "user": {"login": "waspinator", "id": 100416, "node_id": "MDQ6VXNlcjEwMDQxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/100416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waspinator", "html_url": "https://github.com/waspinator", "followers_url": "https://api.github.com/users/waspinator/followers", "following_url": "https://api.github.com/users/waspinator/following{/other_user}", "gists_url": "https://api.github.com/users/waspinator/gists{/gist_id}", "starred_url": "https://api.github.com/users/waspinator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waspinator/subscriptions", "organizations_url": "https://api.github.com/users/waspinator/orgs", "repos_url": "https://api.github.com/users/waspinator/repos", "events_url": "https://api.github.com/users/waspinator/events{/privacy}", "received_events_url": "https://api.github.com/users/waspinator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-08T01:04:57Z", "updated_at": "2019-05-07T00:07:25Z", "closed_at": "2019-05-07T00:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "how would I use variables inside the .env file?\r\n\r\nfor example, how would I define the `DATABASE_URL`  using other variables?\r\n\r\n```\r\nDB_HOST=myhost\r\nDB_PORT=3306\r\nDB_NAME=mydb\r\nDB_USER=myuser\r\nDB_PASSWORD=mypassword\r\nDB_CHARSET=utf8mb4\r\n\r\nDATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?charset=${DB_CHARSET}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/218", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/218/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/218/events", "html_url": "https://github.com/joke2k/django-environ/issues/218", "id": 429617569, "node_id": "MDU6SXNzdWU0Mjk2MTc1Njk=", "number": 218, "title": "DEBUG=on and off", "user": {"login": "sant527", "id": 6462531, "node_id": "MDQ6VXNlcjY0NjI1MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6462531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sant527", "html_url": "https://github.com/sant527", "followers_url": "https://api.github.com/users/sant527/followers", "following_url": "https://api.github.com/users/sant527/following{/other_user}", "gists_url": "https://api.github.com/users/sant527/gists{/gist_id}", "starred_url": "https://api.github.com/users/sant527/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sant527/subscriptions", "organizations_url": "https://api.github.com/users/sant527/orgs", "repos_url": "https://api.github.com/users/sant527/repos", "events_url": "https://api.github.com/users/sant527/events{/privacy}", "received_events_url": "https://api.github.com/users/sant527/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-05T07:22:32Z", "updated_at": "2019-07-12T16:18:42Z", "closed_at": "2019-07-12T16:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "in .env we have\r\nDEBUG=on\r\n\r\nso if i dont want DEBUG then what should i do in .env\r\nDEBUG=off  or\r\nDEBUG=False\r\n\r\nWhy we are using DEBUG=on instead of DEBUG = True", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/210", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/210/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/210/events", "html_url": "https://github.com/joke2k/django-environ/issues/210", "id": 404929949, "node_id": "MDU6SXNzdWU0MDQ5Mjk5NDk=", "number": 210, "title": "rediss URLs are not supported", "user": {"login": "taymonbeal", "id": 1991427, "node_id": "MDQ6VXNlcjE5OTE0Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1991427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taymonbeal", "html_url": "https://github.com/taymonbeal", "followers_url": "https://api.github.com/users/taymonbeal/followers", "following_url": "https://api.github.com/users/taymonbeal/following{/other_user}", "gists_url": "https://api.github.com/users/taymonbeal/gists{/gist_id}", "starred_url": "https://api.github.com/users/taymonbeal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taymonbeal/subscriptions", "organizations_url": "https://api.github.com/users/taymonbeal/orgs", "repos_url": "https://api.github.com/users/taymonbeal/repos", "events_url": "https://api.github.com/users/taymonbeal/events{/privacy}", "received_events_url": "https://api.github.com/users/taymonbeal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-30T19:34:12Z", "updated_at": "2020-03-15T00:07:18Z", "closed_at": "2020-03-15T00:07:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If a cache URL scheme is `rediss://`, which is needed in order to connect over TLS, then a KeyError is thrown.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/205", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/205/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/205/events", "html_url": "https://github.com/joke2k/django-environ/issues/205", "id": 394087633, "node_id": "MDU6SXNzdWUzOTQwODc2MzM=", "number": 205, "title": "n", "user": {"login": "Sanjeetkumar163", "id": 10753488, "node_id": "MDQ6VXNlcjEwNzUzNDg4", "avatar_url": "https://avatars1.githubusercontent.com/u/10753488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sanjeetkumar163", "html_url": "https://github.com/Sanjeetkumar163", "followers_url": "https://api.github.com/users/Sanjeetkumar163/followers", "following_url": "https://api.github.com/users/Sanjeetkumar163/following{/other_user}", "gists_url": "https://api.github.com/users/Sanjeetkumar163/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sanjeetkumar163/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sanjeetkumar163/subscriptions", "organizations_url": "https://api.github.com/users/Sanjeetkumar163/orgs", "repos_url": "https://api.github.com/users/Sanjeetkumar163/repos", "events_url": "https://api.github.com/users/Sanjeetkumar163/events{/privacy}", "received_events_url": "https://api.github.com/users/Sanjeetkumar163/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-26T05:47:13Z", "updated_at": "2018-12-26T05:47:54Z", "closed_at": "2018-12-26T05:47:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/192", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/192/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/192/events", "html_url": "https://github.com/joke2k/django-environ/issues/192", "id": 340852740, "node_id": "MDU6SXNzdWUzNDA4NTI3NDA=", "number": 192, "title": "default seems broken", "user": {"login": "mbonnefoy", "id": 9313546, "node_id": "MDQ6VXNlcjkzMTM1NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9313546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbonnefoy", "html_url": "https://github.com/mbonnefoy", "followers_url": "https://api.github.com/users/mbonnefoy/followers", "following_url": "https://api.github.com/users/mbonnefoy/following{/other_user}", "gists_url": "https://api.github.com/users/mbonnefoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbonnefoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbonnefoy/subscriptions", "organizations_url": "https://api.github.com/users/mbonnefoy/orgs", "repos_url": "https://api.github.com/users/mbonnefoy/repos", "events_url": "https://api.github.com/users/mbonnefoy/events{/privacy}", "received_events_url": "https://api.github.com/users/mbonnefoy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291070, "node_id": "MDU6TGFiZWwzNDI5MTA3MA==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-13T01:44:02Z", "updated_at": "2020-03-16T00:20:24Z", "closed_at": "2020-03-16T00:20:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI've just updated from 0.4.4 to 0.4.5 and noticed a few unexpected behaviours with default. Presumably they relate to the casting changes that were introduced recently?\r\n\r\n```Python\r\n# the key is in my env\r\nIn [3]: env('GOOGLE_ANALYTICS_KEY')\r\nOut[3]: 'UA-123456-78'\r\n```\r\n\r\n```Python\r\n# I should have used a string as default here\r\n# but I would still expect these to return my key instead of False\r\n\r\nIn [4]: env('GOOGLE_ANALYTICS_KEY', default=False)\r\nOut[4]: False\r\n\r\nIn [7]: env('GOOGLE_ANALYTICS_KEY', default=True)\r\nOut[7]: False\r\n```\r\n\r\n```Python\r\n# these ones work as expected\r\n\r\nIn [5]: env('GOOGLE_ANALYTICS_KEY', default='')\r\nOut[5]: 'UA-123456-78'\r\n\r\nIn [6]: env('GOOGLE_ANALYTICS_KEY', default=None)\r\nOut[6]: 'UA-123456-78'\r\n```\r\n\r\nCheers,\r\nMatthieu\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/188", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/188/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/188/events", "html_url": "https://github.com/joke2k/django-environ/issues/188", "id": 337288395, "node_id": "MDU6SXNzdWUzMzcyODgzOTU=", "number": 188, "title": "Support for MongoDB URL scheme", "user": {"login": "nieltg", "id": 7892024, "node_id": "MDQ6VXNlcjc4OTIwMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7892024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nieltg", "html_url": "https://github.com/nieltg", "followers_url": "https://api.github.com/users/nieltg/followers", "following_url": "https://api.github.com/users/nieltg/following{/other_user}", "gists_url": "https://api.github.com/users/nieltg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nieltg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nieltg/subscriptions", "organizations_url": "https://api.github.com/users/nieltg/orgs", "repos_url": "https://api.github.com/users/nieltg/repos", "events_url": "https://api.github.com/users/nieltg/events{/privacy}", "received_events_url": "https://api.github.com/users/nieltg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-01T12:45:26Z", "updated_at": "2018-07-02T10:06:09Z", "closed_at": "2018-07-02T10:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm just trying a MongoDB cloud hosting service outside there and I just found out that it provides some URI like this to connect.\r\n\r\n```\r\nmongodb://<dbuser>:<dbpassword>@<host>:<port>/<name>\r\n```\r\n\r\nI wonder if it could be integrated with `django-environ`. I suggest [nesdis/djongo](https://github.com/nesdis/djongo) as DB connector because of its compatibility with Django and Django projects which in general uses models which are relational.\r\n\r\nThank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/175", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/175/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/175/events", "html_url": "https://github.com/joke2k/django-environ/issues/175", "id": 297543835, "node_id": "MDU6SXNzdWUyOTc1NDM4MzU=", "number": 175, "title": "Order of importance of engine configuration in db_url_config", "user": {"login": "ddiazpinto", "id": 1313461, "node_id": "MDQ6VXNlcjEzMTM0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1313461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddiazpinto", "html_url": "https://github.com/ddiazpinto", "followers_url": "https://api.github.com/users/ddiazpinto/followers", "following_url": "https://api.github.com/users/ddiazpinto/following{/other_user}", "gists_url": "https://api.github.com/users/ddiazpinto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddiazpinto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddiazpinto/subscriptions", "organizations_url": "https://api.github.com/users/ddiazpinto/orgs", "repos_url": "https://api.github.com/users/ddiazpinto/repos", "events_url": "https://api.github.com/users/ddiazpinto/events{/privacy}", "received_events_url": "https://api.github.com/users/ddiazpinto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291070, "node_id": "MDU6TGFiZWwzNDI5MTA3MA==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-15T18:08:54Z", "updated_at": "2018-06-05T20:54:35Z", "closed_at": "2018-06-05T20:54:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to this code in ```db_url_config```:\r\n``` python\r\nclass Env(object):\r\n    # [...]\r\n   @classmethod\r\n    def db_url_config(cls, url, engine=None):\r\n        # [...]\r\n        if engine:\r\n            config['ENGINE'] = engine\r\n        if url.scheme in Env.DB_SCHEMES:\r\n            config['ENGINE'] = Env.DB_SCHEMES[url.scheme]\r\n\r\n\r\n        if not config.get('ENGINE', False):\r\n            warnings.warn(\"Engine not recognized from url: {0}\".format(config))\r\n            return {}\r\n```\r\n\r\nIf you configure a backend using the ```engine``` parameter of ```Env.db()```:\r\n\r\n``` python\r\nimport environ\r\nenv = environ.Env()\r\nenv.db('DATABASE_URL', engine='path.to.engine')\r\n```\r\nThe engine is going to be overriden by the scheme you have put in ```DATABASE_URL``` (if it is exists in ```Env.DB_SCHEMES```. see #173).\r\n\r\nI think that it is a misbehaviour. The ```engine``` parameter of ```Env.db()``` should be the last to be checked, because this function is acting as a wrapper of ```DATABASE_URL```. What do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/173", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/173/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/173/events", "html_url": "https://github.com/joke2k/django-environ/issues/173", "id": 297537509, "node_id": "MDU6SXNzdWUyOTc1Mzc1MDk=", "number": 173, "title": "Database url.scheme only works for built-in schemes (backends)", "user": {"login": "ddiazpinto", "id": 1313461, "node_id": "MDQ6VXNlcjEzMTM0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1313461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddiazpinto", "html_url": "https://github.com/ddiazpinto", "followers_url": "https://api.github.com/users/ddiazpinto/followers", "following_url": "https://api.github.com/users/ddiazpinto/following{/other_user}", "gists_url": "https://api.github.com/users/ddiazpinto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddiazpinto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddiazpinto/subscriptions", "organizations_url": "https://api.github.com/users/ddiazpinto/orgs", "repos_url": "https://api.github.com/users/ddiazpinto/repos", "events_url": "https://api.github.com/users/ddiazpinto/events{/privacy}", "received_events_url": "https://api.github.com/users/ddiazpinto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-15T17:48:31Z", "updated_at": "2018-06-05T20:53:46Z", "closed_at": "2018-06-05T20:53:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I haven't find any issue related to this topic, so sorry in advance if it is something that has been already discussed.\r\n\r\nAccording to this code inside ```Env.db_url_config()```:\r\n``` python\r\nclass Env(object):\r\n    # [...]\r\n   @classmethod\r\n    def db_url_config(cls, url, engine=None):\r\n        # [...]\r\n        if engine:\r\n            config['ENGINE'] = engine\r\n        if url.scheme in Env.DB_SCHEMES:\r\n            config['ENGINE'] = Env.DB_SCHEMES[url.scheme]\r\n\r\n\r\n        if not config.get('ENGINE', False):\r\n            warnings.warn(\"Engine not recognized from url: {0}\".format(config))\r\n            return {}\r\n```\r\n\r\nActually, the only way to set up a custom backend for a database is using the ```engine``` parameter when we call ```Env.db()``` at the same time that we put an invalid ```url.scheme``` in ```DATABASE_URL``` (what is weird) or we put our custom one again (that it is going to be considered invalid anyway because it doesn't exist in ```Env.DB_SCHEMES```), what is redundant.\r\n\r\n``` python\r\nimport environ\r\nenv = environ.Env()\r\nenv.db('DATABASE_URL', engine='path.to.my.custom.backend')\r\n# Having DATABASE_URL=path.to.my.custom.backend://user:password@host:post/database\r\n```\r\n\r\nThis code fix this situation, simply letting pass the custom scheme as a valid one if it doesn't match one of the built-in ```DB_SCHEMES```.\r\n\r\n``` python\r\nif url.scheme in Env.DB_SCHEMES:\r\n    config['ENGINE'] = Env.DB_SCHEMES[url.scheme]\r\nelse:\r\n    config['ENGINE'] = url.scheme\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/166", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/166/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/166/events", "html_url": "https://github.com/joke2k/django-environ/issues/166", "id": 287543089, "node_id": "MDU6SXNzdWUyODc1NDMwODk=", "number": 166, "title": "Docs / Feature for nested lists", "user": {"login": "epicserve", "id": 191620, "node_id": "MDQ6VXNlcjE5MTYyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/191620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epicserve", "html_url": "https://github.com/epicserve", "followers_url": "https://api.github.com/users/epicserve/followers", "following_url": "https://api.github.com/users/epicserve/following{/other_user}", "gists_url": "https://api.github.com/users/epicserve/gists{/gist_id}", "starred_url": "https://api.github.com/users/epicserve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epicserve/subscriptions", "organizations_url": "https://api.github.com/users/epicserve/orgs", "repos_url": "https://api.github.com/users/epicserve/repos", "events_url": "https://api.github.com/users/epicserve/events{/privacy}", "received_events_url": "https://api.github.com/users/epicserve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-10T19:04:50Z", "updated_at": "2018-06-05T18:41:27Z", "closed_at": "2018-06-05T18:41:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe I'm just missing it but what is a way to change the ADMINS setting so it uses an environment variable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/164", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/164/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/164/events", "html_url": "https://github.com/joke2k/django-environ/issues/164", "id": 285033536, "node_id": "MDU6SXNzdWUyODUwMzM1MzY=", "number": 164, "title": "AppVeyor tests are failing, running python 2 with Django 2", "user": {"login": "Jafnee", "id": 5748926, "node_id": "MDQ6VXNlcjU3NDg5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5748926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jafnee", "html_url": "https://github.com/Jafnee", "followers_url": "https://api.github.com/users/Jafnee/followers", "following_url": "https://api.github.com/users/Jafnee/following{/other_user}", "gists_url": "https://api.github.com/users/Jafnee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jafnee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jafnee/subscriptions", "organizations_url": "https://api.github.com/users/Jafnee/orgs", "repos_url": "https://api.github.com/users/Jafnee/repos", "events_url": "https://api.github.com/users/Jafnee/events{/privacy}", "received_events_url": "https://api.github.com/users/Jafnee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-29T04:48:02Z", "updated_at": "2018-06-05T13:39:15Z", "closed_at": "2018-06-05T13:39:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Tests are failing on AppVeyor, due it to testing Python2 environments with the latest Django.\r\nDjango 2.0.0+ has dropped support for Python2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/162", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/162/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/162/events", "html_url": "https://github.com/joke2k/django-environ/issues/162", "id": 285031591, "node_id": "MDU6SXNzdWUyODUwMzE1OTE=", "number": 162, "title": "Casting to bytes", "user": {"login": "Jafnee", "id": 5748926, "node_id": "MDQ6VXNlcjU3NDg5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5748926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jafnee", "html_url": "https://github.com/Jafnee", "followers_url": "https://api.github.com/users/Jafnee/followers", "following_url": "https://api.github.com/users/Jafnee/following{/other_user}", "gists_url": "https://api.github.com/users/Jafnee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jafnee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jafnee/subscriptions", "organizations_url": "https://api.github.com/users/Jafnee/orgs", "repos_url": "https://api.github.com/users/Jafnee/repos", "events_url": "https://api.github.com/users/Jafnee/events{/privacy}", "received_events_url": "https://api.github.com/users/Jafnee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-29T04:19:12Z", "updated_at": "2018-06-05T18:35:24Z", "closed_at": "2018-06-05T18:35:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add support to cast env vars to bytes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/161", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/161/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/161/events", "html_url": "https://github.com/joke2k/django-environ/issues/161", "id": 284169422, "node_id": "MDU6SXNzdWUyODQxNjk0MjI=", "number": 161, "title": "Remove Django dependency or make it optional", "user": {"login": "K377U", "id": 9800529, "node_id": "MDQ6VXNlcjk4MDA1Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/9800529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K377U", "html_url": "https://github.com/K377U", "followers_url": "https://api.github.com/users/K377U/followers", "following_url": "https://api.github.com/users/K377U/following{/other_user}", "gists_url": "https://api.github.com/users/K377U/gists{/gist_id}", "starred_url": "https://api.github.com/users/K377U/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K377U/subscriptions", "organizations_url": "https://api.github.com/users/K377U/orgs", "repos_url": "https://api.github.com/users/K377U/repos", "events_url": "https://api.github.com/users/K377U/events{/privacy}", "received_events_url": "https://api.github.com/users/K377U/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-22T13:57:17Z", "updated_at": "2018-06-22T09:12:23Z", "closed_at": "2018-06-22T09:12:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use this package for non-django project but the dependency requirement is a bit heavy for small command line applications.\r\n\r\nDjango is set in install_requires but it is not used in the package. Only tests are using it. Would it be possible to remove this dependency from install_requires?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/159", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/159/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/159/events", "html_url": "https://github.com/joke2k/django-environ/issues/159", "id": 281854819, "node_id": "MDU6SXNzdWUyODE4NTQ4MTk=", "number": 159, "title": "add to db base options", "user": {"login": "oppianmatt", "id": 48596, "node_id": "MDQ6VXNlcjQ4NTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/48596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oppianmatt", "html_url": "https://github.com/oppianmatt", "followers_url": "https://api.github.com/users/oppianmatt/followers", "following_url": "https://api.github.com/users/oppianmatt/following{/other_user}", "gists_url": "https://api.github.com/users/oppianmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/oppianmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oppianmatt/subscriptions", "organizations_url": "https://api.github.com/users/oppianmatt/orgs", "repos_url": "https://api.github.com/users/oppianmatt/repos", "events_url": "https://api.github.com/users/oppianmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/oppianmatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-13T18:43:31Z", "updated_at": "2020-03-15T00:04:09Z", "closed_at": "2020-03-15T00:04:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django added the option `DISABLE_SERVER_SIDE_CURSORS` but it's a base database option and not an OPTIONS one.\r\n\r\nHow do we add to:\r\n\r\n```\r\n_DB_BASE_OPTIONS = ['CONN_MAX_AGE', 'ATOMIC_REQUESTS', 'AUTOCOMMIT']\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/156", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/156/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/156/events", "html_url": "https://github.com/joke2k/django-environ/issues/156", "id": 276920763, "node_id": "MDU6SXNzdWUyNzY5MjA3NjM=", "number": 156, "title": "Support for mssql://", "user": {"login": "Jafnee", "id": 5748926, "node_id": "MDQ6VXNlcjU3NDg5MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5748926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jafnee", "html_url": "https://github.com/Jafnee", "followers_url": "https://api.github.com/users/Jafnee/followers", "following_url": "https://api.github.com/users/Jafnee/following{/other_user}", "gists_url": "https://api.github.com/users/Jafnee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jafnee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jafnee/subscriptions", "organizations_url": "https://api.github.com/users/Jafnee/orgs", "repos_url": "https://api.github.com/users/Jafnee/repos", "events_url": "https://api.github.com/users/Jafnee/events{/privacy}", "received_events_url": "https://api.github.com/users/Jafnee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-27T07:12:03Z", "updated_at": "2018-06-05T18:30:53Z", "closed_at": "2018-06-05T18:30:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add support for the `sql_server.pyodbc` engine, which dj-database-url supports.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/153", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/153/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/153/events", "html_url": "https://github.com/joke2k/django-environ/issues/153", "id": 270726996, "node_id": "MDU6SXNzdWUyNzA3MjY5OTY=", "number": 153, "title": "Appveyor Builds broken because of HTTPS issue", "user": {"login": "ntravis", "id": 8976020, "node_id": "MDQ6VXNlcjg5NzYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8976020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntravis", "html_url": "https://github.com/ntravis", "followers_url": "https://api.github.com/users/ntravis/followers", "following_url": "https://api.github.com/users/ntravis/following{/other_user}", "gists_url": "https://api.github.com/users/ntravis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntravis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntravis/subscriptions", "organizations_url": "https://api.github.com/users/ntravis/orgs", "repos_url": "https://api.github.com/users/ntravis/repos", "events_url": "https://api.github.com/users/ntravis/events{/privacy}", "received_events_url": "https://api.github.com/users/ntravis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-02T16:48:34Z", "updated_at": "2018-06-05T18:18:15Z", "closed_at": "2018-06-05T18:18:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like this would be easy to fix by adding\r\n`[Net.ServicePointManager]::SecurityProtocol = 'Tls11, Tls12'`\r\nbefore the current webclient line, or altering the download approach to use another supported method.\r\nhttps://www.appveyor.com/docs/how-to/download-file/\r\n@joke2k do you have a preference of leaving the webclient in place or modifying to another recommended approach that would retain the \"less lines\" in config approach? I am happy to PR either way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/144", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/144/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/144/events", "html_url": "https://github.com/joke2k/django-environ/issues/144", "id": 254845981, "node_id": "MDU6SXNzdWUyNTQ4NDU5ODE=", "number": 144, "title": "[duplicated] about spaces around equal sign", "user": {"login": "vanyakosmos", "id": 16745500, "node_id": "MDQ6VXNlcjE2NzQ1NTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/16745500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vanyakosmos", "html_url": "https://github.com/vanyakosmos", "followers_url": "https://api.github.com/users/vanyakosmos/followers", "following_url": "https://api.github.com/users/vanyakosmos/following{/other_user}", "gists_url": "https://api.github.com/users/vanyakosmos/gists{/gist_id}", "starred_url": "https://api.github.com/users/vanyakosmos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vanyakosmos/subscriptions", "organizations_url": "https://api.github.com/users/vanyakosmos/orgs", "repos_url": "https://api.github.com/users/vanyakosmos/repos", "events_url": "https://api.github.com/users/vanyakosmos/events{/privacy}", "received_events_url": "https://api.github.com/users/vanyakosmos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-03T01:17:14Z", "updated_at": "2019-01-09T19:39:40Z", "closed_at": "2018-10-02T21:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Original issue.](https://github.com/joke2k/django-environ/issues/35)\r\n\r\nWith spaces around '=' config looks much more friendly and readable. I still don't understand why it is necessary to comply with this 'convention' and break readability...\r\nSpaces around '=' don't break anything, there is no value that needs spaces at the beginning, and if there is then value can be surrounded by quotes.\r\n\r\nAlso when my .env file was 'malformed' with spaces and I tried to read some var I got `KeyError` instead of `ParsingError` (or something like this). It was real pain in the neck to find out what was actually wrong...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/143", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/143/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/143/events", "html_url": "https://github.com/joke2k/django-environ/issues/143", "id": 246256847, "node_id": "MDU6SXNzdWUyNDYyNTY4NDc=", "number": 143, "title": "For Multiple Environments", "user": {"login": "callsamleung", "id": 8097069, "node_id": "MDQ6VXNlcjgwOTcwNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8097069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/callsamleung", "html_url": "https://github.com/callsamleung", "followers_url": "https://api.github.com/users/callsamleung/followers", "following_url": "https://api.github.com/users/callsamleung/following{/other_user}", "gists_url": "https://api.github.com/users/callsamleung/gists{/gist_id}", "starred_url": "https://api.github.com/users/callsamleung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/callsamleung/subscriptions", "organizations_url": "https://api.github.com/users/callsamleung/orgs", "repos_url": "https://api.github.com/users/callsamleung/repos", "events_url": "https://api.github.com/users/callsamleung/events{/privacy}", "received_events_url": "https://api.github.com/users/callsamleung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-28T06:45:47Z", "updated_at": "2020-03-14T19:19:36Z", "closed_at": "2018-06-25T15:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\ndjango can use '--settings [settings.py]' to let the same code run under the difference settings.\r\n\r\ncan we have some way to do that? \r\n\r\nLike this.\r\n```\r\npython manager.py runserver --env_file path/of/.env1\r\npython manager.py runserver --env_file path/of/.env2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/141", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/141/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/141/events", "html_url": "https://github.com/joke2k/django-environ/issues/141", "id": 244156100, "node_id": "MDU6SXNzdWUyNDQxNTYxMDA=", "number": 141, "title": "Exclude tests from package on PyPI", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-19T19:57:53Z", "updated_at": "2020-03-14T23:26:31Z", "closed_at": "2020-03-14T23:26:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the package on PyPI includes the tests:\r\n```\r\nenviron/test.py\r\nenviron/test_env.txt\r\nenviron/tests/__init__.py\r\nenviron/tests/functional_tests.py\r\nenviron/tests/test_environment.py\r\n```\r\n\r\nThis accounts for over half the package size.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/138", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/138/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/138/events", "html_url": "https://github.com/joke2k/django-environ/issues/138", "id": 240391709, "node_id": "MDU6SXNzdWUyNDAzOTE3MDk=", "number": 138, "title": "Django project template", "user": {"login": "joke2k", "id": 359076, "node_id": "MDQ6VXNlcjM1OTA3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/359076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joke2k", "html_url": "https://github.com/joke2k", "followers_url": "https://api.github.com/users/joke2k/followers", "following_url": "https://api.github.com/users/joke2k/following{/other_user}", "gists_url": "https://api.github.com/users/joke2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/joke2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joke2k/subscriptions", "organizations_url": "https://api.github.com/users/joke2k/orgs", "repos_url": "https://api.github.com/users/joke2k/repos", "events_url": "https://api.github.com/users/joke2k/events{/privacy}", "received_events_url": "https://api.github.com/users/joke2k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291072, "node_id": "MDU6TGFiZWwzNDI5MTA3Mg==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-04T11:21:47Z", "updated_at": "2018-06-05T18:14:32Z", "closed_at": "2018-06-05T18:14:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Create a django project template with settings.py that uses `.env` example file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/137", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/137/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/137/events", "html_url": "https://github.com/joke2k/django-environ/issues/137", "id": 239791368, "node_id": "MDU6SXNzdWUyMzk3OTEzNjg=", "number": 137, "title": "Postgres schema to .env file", "user": {"login": "diegogslomp", "id": 3443988, "node_id": "MDQ6VXNlcjM0NDM5ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3443988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegogslomp", "html_url": "https://github.com/diegogslomp", "followers_url": "https://api.github.com/users/diegogslomp/followers", "following_url": "https://api.github.com/users/diegogslomp/following{/other_user}", "gists_url": "https://api.github.com/users/diegogslomp/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegogslomp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegogslomp/subscriptions", "organizations_url": "https://api.github.com/users/diegogslomp/orgs", "repos_url": "https://api.github.com/users/diegogslomp/repos", "events_url": "https://api.github.com/users/diegogslomp/events{/privacy}", "received_events_url": "https://api.github.com/users/diegogslomp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-30T14:13:30Z", "updated_at": "2018-01-27T06:27:53Z", "closed_at": "2017-07-04T12:01:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nAt my original settings.py I have this configuration to set the postgres database schema. How can I set this in a django-environ .env file?\r\n```\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\r\n        'OPTIONS': {\r\n            'options': '-c search_path=public'\r\n        },\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/133", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/133/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/133/events", "html_url": "https://github.com/joke2k/django-environ/issues/133", "id": 239437538, "node_id": "MDU6SXNzdWUyMzk0Mzc1Mzg=", "number": 133, "title": "CONN_MAX_AGE and TIMEOUT can be None", "user": {"login": "fdemmer", "id": 630975, "node_id": "MDQ6VXNlcjYzMDk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/630975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fdemmer", "html_url": "https://github.com/fdemmer", "followers_url": "https://api.github.com/users/fdemmer/followers", "following_url": "https://api.github.com/users/fdemmer/following{/other_user}", "gists_url": "https://api.github.com/users/fdemmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fdemmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fdemmer/subscriptions", "organizations_url": "https://api.github.com/users/fdemmer/orgs", "repos_url": "https://api.github.com/users/fdemmer/repos", "events_url": "https://api.github.com/users/fdemmer/events{/privacy}", "received_events_url": "https://api.github.com/users/fdemmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-29T10:42:59Z", "updated_at": "2018-06-28T11:25:55Z", "closed_at": "2018-06-28T11:25:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some options like CONN_MAX_AGE (DATABASES) and TIMEOUT (CACHES) can be integers, booleans or `None`, however only `_cast_int` is used to parse them, which makes it impossible to set those parameters to `None`.\r\n\r\neg:\r\n- databases: 'postgres://user:pass@host:1234/dbname?conn_max_age=None&autocommit=True&atomic_requests=False'\r\n- caches: 'redis://127.0.0.1:6379/?timeout=None'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/130", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/130/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/130/events", "html_url": "https://github.com/joke2k/django-environ/issues/130", "id": 236979830, "node_id": "MDU6SXNzdWUyMzY5Nzk4MzA=", "number": 130, "title": "redis_cache detection depends on SECRET_KEY", "user": {"login": "fdemmer", "id": 630975, "node_id": "MDQ6VXNlcjYzMDk3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/630975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fdemmer", "html_url": "https://github.com/fdemmer", "followers_url": "https://api.github.com/users/fdemmer/followers", "following_url": "https://api.github.com/users/fdemmer/following{/other_user}", "gists_url": "https://api.github.com/users/fdemmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fdemmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fdemmer/subscriptions", "organizations_url": "https://api.github.com/users/fdemmer/orgs", "repos_url": "https://api.github.com/users/fdemmer/repos", "events_url": "https://api.github.com/users/fdemmer/events{/privacy}", "received_events_url": "https://api.github.com/users/fdemmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T18:30:05Z", "updated_at": "2018-06-28T11:21:01Z", "closed_at": "2018-06-28T11:21:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "To detect whether to use `django_redis` or `redis_cache` as cache backend environ tries to import (`import redis_cache`). If that fails, the `django_redis` backend is used.\r\n\r\nHowever, that _always_ fails, because `SECRET_KEY` must be set before importing `redis_cache`.\r\n\r\nSo it seems to me there is a deadlock situation, when wanting to use environ to setup caching with the `redis_cache` backend.\r\n\r\nAm I missing something, doing it wrong?\r\n\r\nI'd prefer a way to explicitly set the backend type rather than autodetection in any case. Maybe as an addition to the protocol part of the url: `CACHE_URL='redis+redis_cache://localhost:6379/0'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/127", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/127/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/127/events", "html_url": "https://github.com/joke2k/django-environ/issues/127", "id": 233088878, "node_id": "MDU6SXNzdWUyMzMwODg4Nzg=", "number": 127, "title": "PgBouncer and django.db.utils.OperationalError: FATAL ", "user": {"login": "murdav", "id": 1561285, "node_id": "MDQ6VXNlcjE1NjEyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1561285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murdav", "html_url": "https://github.com/murdav", "followers_url": "https://api.github.com/users/murdav/followers", "following_url": "https://api.github.com/users/murdav/following{/other_user}", "gists_url": "https://api.github.com/users/murdav/gists{/gist_id}", "starred_url": "https://api.github.com/users/murdav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murdav/subscriptions", "organizations_url": "https://api.github.com/users/murdav/orgs", "repos_url": "https://api.github.com/users/murdav/repos", "events_url": "https://api.github.com/users/murdav/events{/privacy}", "received_events_url": "https://api.github.com/users/murdav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-02T06:30:08Z", "updated_at": "2018-02-06T05:50:30Z", "closed_at": "2018-02-06T05:50:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nCurrently it seems it's not possible to use PgBouncer:\r\nDATABASE_URL=postgis://myuserdb:mydbpasswd@/var/run/postgresql:6432/mydb\r\n\r\nI got\r\ndjango.db.utils.OperationalError: FATAL:  database \"var/run/postgresql:6432/mydb\" does not exist\r\n\r\nThanks,\r\n\r\nD\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/125", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/125/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/125/events", "html_url": "https://github.com/joke2k/django-environ/issues/125", "id": 230014621, "node_id": "MDU6SXNzdWUyMzAwMTQ2MjE=", "number": 125, "title": "'module' object has no attribute 'Env' Windows 10", "user": {"login": "nguyentrantuan", "id": 1635277, "node_id": "MDQ6VXNlcjE2MzUyNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1635277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nguyentrantuan", "html_url": "https://github.com/nguyentrantuan", "followers_url": "https://api.github.com/users/nguyentrantuan/followers", "following_url": "https://api.github.com/users/nguyentrantuan/following{/other_user}", "gists_url": "https://api.github.com/users/nguyentrantuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nguyentrantuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nguyentrantuan/subscriptions", "organizations_url": "https://api.github.com/users/nguyentrantuan/orgs", "repos_url": "https://api.github.com/users/nguyentrantuan/repos", "events_url": "https://api.github.com/users/nguyentrantuan/events{/privacy}", "received_events_url": "https://api.github.com/users/nguyentrantuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-19T15:46:26Z", "updated_at": "2018-06-26T20:52:19Z", "closed_at": "2018-06-26T20:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed Python 2.7 on Windows 10. Found nowhere to resolve this errors. Any help?\r\n\r\n>>> import environ\r\n>>> env=environ.Env()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'module' object has no attribute 'Env'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/117", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/117/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/117/events", "html_url": "https://github.com/joke2k/django-environ/issues/117", "id": 221639108, "node_id": "MDU6SXNzdWUyMjE2MzkxMDg=", "number": 117, "title": "KeyError: 'DATABASE_URL' (maybe a 0.4.2 regression?)", "user": {"login": "kti-matt", "id": 22155639, "node_id": "MDQ6VXNlcjIyMTU1NjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/22155639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kti-matt", "html_url": "https://github.com/kti-matt", "followers_url": "https://api.github.com/users/kti-matt/followers", "following_url": "https://api.github.com/users/kti-matt/following{/other_user}", "gists_url": "https://api.github.com/users/kti-matt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kti-matt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kti-matt/subscriptions", "organizations_url": "https://api.github.com/users/kti-matt/orgs", "repos_url": "https://api.github.com/users/kti-matt/repos", "events_url": "https://api.github.com/users/kti-matt/events{/privacy}", "received_events_url": "https://api.github.com/users/kti-matt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-13T18:04:44Z", "updated_at": "2017-04-19T17:33:07Z", "closed_at": "2017-04-19T17:33:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your work on django-environ.\r\n\r\nMy project works fine with 0.4.1, but breaks in 0.4.2, released this morning.\r\n\r\nI'm using Python 3.4.2 on Debian 8 and Django 1.10 in a virtualenv. I checked in a couple of ways that yes, my DATABASE_URL variable was being loaded properly. In particular, I added a line in my settings file, `print(os.environ['DATABASE_URL'])`, immediately prior to my `env.db()` call, and it printed my setting as I expected.\r\n\r\nIf this is not a regression, then perhaps some upgrade docs would be in order so I know what I need to change in my project to use the latest django-environ.\r\n\r\nThanks!\r\n\r\n```\r\n(env3) ipmetadataretention@host:~$ manage.py shell\r\nTraceback (most recent call last):\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/environ/environ.py\", line 265, in get_value\r\n    value = self.ENVIRON[var]\r\nKeyError: 'DATABASE_URL'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/core/management/base.py\", line 305, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/core/management/base.py\", line 348, in execute\r\n    saved_locale = translation.get_language()\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/utils/translation/__init__.py\", line 190, in get_language\r\n    return _trans.get_language()\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/utils/translation/__init__.py\", line 57, in __getattr__\r\n    if settings.USE_I18N:\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/conf/__init__.py\", line 53, in __getattr__\r\n    self._setup(name)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/conf/__init__.py\", line 41, in _setup\r\n    self._wrapped = Settings(settings_module)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/conf/__init__.py\", line 97, in __init__\r\n    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"/usr/lib/python3.4/importlib/__init__.py\", line 109, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\r\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\r\n  File \"/usr/share/ip-metadata-retention/django/ipmetadataretention/settings/production.py\", line 2, in <module>\r\n    from .common import *  # noqa: F401, F403\r\n  File \"/usr/share/ip-metadata-retention/django/ipmetadataretention/settings/common.py\", line 87, in <module>\r\n    'default': env.db(),\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/environ/environ.py\", line 196, in db_url\r\n    return self.db_url_config(self.get_value(var, default=default), engine=engine)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/environ/environ.py\", line 269, in get_value\r\n    raise ImproperlyConfigured(error_msg)\r\ndjango.core.exceptions.ImproperlyConfigured: Set the DATABASE_URL environment variable\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/environ/environ.py\", line 265, in get_value\r\n    value = self.ENVIRON[var]\r\nKeyError: 'DATABASE_URL'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/share/ip-metadata-retention/django/manage.py\", line 23, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/core/management/base.py\", line 317, in run_from_argv\r\n    connections.close_all()\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/db/utils.py\", line 229, in close_all\r\n    for alias in self:\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/db/utils.py\", line 223, in __iter__\r\n    return iter(self.databases)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/db/utils.py\", line 156, in databases\r\n    self._databases = settings.DATABASES\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/conf/__init__.py\", line 53, in __getattr__\r\n    self._setup(name)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/conf/__init__.py\", line 41, in _setup\r\n    self._wrapped = Settings(settings_module)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/django/conf/__init__.py\", line 97, in __init__\r\n    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"/usr/lib/python3.4/importlib/__init__.py\", line 109, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\r\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\r\n  File \"/usr/share/ip-metadata-retention/django/ipmetadataretention/settings/production.py\", line 2, in <module>\r\n    from .common import *  # noqa: F401, F403\r\n  File \"/usr/share/ip-metadata-retention/django/ipmetadataretention/settings/common.py\", line 87, in <module>\r\n    'default': env.db(),\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/environ/environ.py\", line 196, in db_url\r\n    return self.db_url_config(self.get_value(var, default=default), engine=engine)\r\n  File \"/var/lib/ipmetadataretention/env3/lib/python3.4/site-packages/environ/environ.py\", line 269, in get_value\r\n    raise ImproperlyConfigured(error_msg)\r\ndjango.core.exceptions.ImproperlyConfigured: Set the DATABASE_URL environment variable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/116", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/116/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/116/events", "html_url": "https://github.com/joke2k/django-environ/issues/116", "id": 220424628, "node_id": "MDU6SXNzdWUyMjA0MjQ2Mjg=", "number": 116, "title": "Django 1.11 LTS Support ", "user": {"login": "stemcc", "id": 16583899, "node_id": "MDQ6VXNlcjE2NTgzODk5", "avatar_url": "https://avatars1.githubusercontent.com/u/16583899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stemcc", "html_url": "https://github.com/stemcc", "followers_url": "https://api.github.com/users/stemcc/followers", "following_url": "https://api.github.com/users/stemcc/following{/other_user}", "gists_url": "https://api.github.com/users/stemcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/stemcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stemcc/subscriptions", "organizations_url": "https://api.github.com/users/stemcc/orgs", "repos_url": "https://api.github.com/users/stemcc/repos", "events_url": "https://api.github.com/users/stemcc/events{/privacy}", "received_events_url": "https://api.github.com/users/stemcc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-08T20:19:40Z", "updated_at": "2017-04-13T15:52:37Z", "closed_at": "2017-04-13T15:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mainstream support for Django 1.10 ends this month. \r\n\r\nDjango-environ official support for 1.11 will help enable[ Django Cookiecutter to officially support 1.11 as well.  ](https://github.com/pydanny/cookiecutter-django/issues/1111 )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/115", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/115/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/115/events", "html_url": "https://github.com/joke2k/django-environ/issues/115", "id": 219869424, "node_id": "MDU6SXNzdWUyMTk4Njk0MjQ=", "number": 115, "title": "Project no longer maintained?", "user": {"login": "Surgo", "id": 31176, "node_id": "MDQ6VXNlcjMxMTc2", "avatar_url": "https://avatars1.githubusercontent.com/u/31176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Surgo", "html_url": "https://github.com/Surgo", "followers_url": "https://api.github.com/users/Surgo/followers", "following_url": "https://api.github.com/users/Surgo/following{/other_user}", "gists_url": "https://api.github.com/users/Surgo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Surgo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Surgo/subscriptions", "organizations_url": "https://api.github.com/users/Surgo/orgs", "repos_url": "https://api.github.com/users/Surgo/repos", "events_url": "https://api.github.com/users/Surgo/events{/privacy}", "received_events_url": "https://api.github.com/users/Surgo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-06T11:35:27Z", "updated_at": "2017-04-06T13:38:33Z", "closed_at": "2017-04-06T13:38:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some issues and PRs are raised, but latest commit is Nov 14, 2016 \ud83e\udd14 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/110", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/110/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/110/events", "html_url": "https://github.com/joke2k/django-environ/issues/110", "id": 206956500, "node_id": "MDU6SXNzdWUyMDY5NTY1MDA=", "number": 110, "title": "Why not set environment variables as string in the .env file?", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-11T04:10:46Z", "updated_at": "2017-06-30T06:19:38Z", "closed_at": "2017-06-30T06:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see a lot of issues with urlencodig etc... So I'm just wondering why I couldn't set DATABASE_URL='the_db_url' in the .env file? That would mitigate the problems, right?\r\n\r\nOtherwise I think I will keep using my old secret_info.txt file, which states it like this:\r\n\r\n```\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.mysql',\r\n        'NAME': 'pr',\r\n        'USER': 'pr',\r\n        'PASSWORD': 'pa',\r\n    }\r\n}\r\n```\r\n\r\nand then gets imported like this:\r\n\r\n\r\n`exec(open(os.path.join(os.path.dirname(BASE_DIR), 'secret_info.txt')).read())\r\n`\r\nAnd then do\r\n\r\n```\r\nif os.environ.get('DATABASE_URL', False):\r\n    # If we have the DATABASE_URL set, use this. Otherwise assume it is specified in the secret_info.txt.\r\n    DATABASES = {\r\n        'default': env.db()  # set using django-environ and the DATABASE_URL\r\n        }\r\n\r\n```\r\n        ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/104", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/104/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/104/events", "html_url": "https://github.com/joke2k/django-environ/issues/104", "id": 198933620, "node_id": "MDU6SXNzdWUxOTg5MzM2MjA=", "number": 104, "title": "Make env.db configable", "user": {"login": "steinliber", "id": 13215800, "node_id": "MDQ6VXNlcjEzMjE1ODAw", "avatar_url": "https://avatars3.githubusercontent.com/u/13215800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steinliber", "html_url": "https://github.com/steinliber", "followers_url": "https://api.github.com/users/steinliber/followers", "following_url": "https://api.github.com/users/steinliber/following{/other_user}", "gists_url": "https://api.github.com/users/steinliber/gists{/gist_id}", "starred_url": "https://api.github.com/users/steinliber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steinliber/subscriptions", "organizations_url": "https://api.github.com/users/steinliber/orgs", "repos_url": "https://api.github.com/users/steinliber/repos", "events_url": "https://api.github.com/users/steinliber/events{/privacy}", "received_events_url": "https://api.github.com/users/steinliber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-05T11:24:07Z", "updated_at": "2017-06-01T06:36:15Z", "closed_at": "2017-06-01T06:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want tot use env.db with django_postgrespool,but i can't set it directly in url, so i have to set this in dictory, is there any way to config this more elegant. Here is my setting\r\n`\r\ndefault_db = env.db('DATABASE_URL')\r\ndefault_db['ENGINE'] = 'django_postgrespool'\r\nDATABASES['default'] = default_db\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/101", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/101/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/101/events", "html_url": "https://github.com/joke2k/django-environ/issues/101", "id": 193637354, "node_id": "MDU6SXNzdWUxOTM2MzczNTQ=", "number": 101, "title": "django-environ 0.4.1 and django-redis", "user": {"login": "valignatev", "id": 7038954, "node_id": "MDQ6VXNlcjcwMzg5NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7038954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valignatev", "html_url": "https://github.com/valignatev", "followers_url": "https://api.github.com/users/valignatev/followers", "following_url": "https://api.github.com/users/valignatev/following{/other_user}", "gists_url": "https://api.github.com/users/valignatev/gists{/gist_id}", "starred_url": "https://api.github.com/users/valignatev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valignatev/subscriptions", "organizations_url": "https://api.github.com/users/valignatev/orgs", "repos_url": "https://api.github.com/users/valignatev/repos", "events_url": "https://api.github.com/users/valignatev/events{/privacy}", "received_events_url": "https://api.github.com/users/valignatev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-05T23:09:38Z", "updated_at": "2017-09-01T12:33:24Z", "closed_at": "2017-09-01T12:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, just found out that django-redis won't work with new `0.4.1` version. Here's the traceback:\r\n\r\n```python\r\nsession.save()\r\n/lib/python3.5/site-packages/django/contrib/sessions/backends/cache.py:57: in save\r\n    return self.create()\r\n/lib/python3.5/site-packages/django/contrib/sessions/backends/cache.py:44: in create\r\n    self._session_key = self._get_new_session_key()\r\n/lib/python3.5/site-packages/django/contrib/sessions/backends/base.py:164: in _get_new_session_key\r\n    if not self.exists(session_key):\r\n/lib/python3.5/site-packages/django/contrib/sessions/backends/cache.py:71: in exists\r\n    return session_key and (self.cache_key_prefix + session_key) in self._cache\r\n/lib/python3.5/site-packages/django/core/cache/backends/base.py:203: in __contains__\r\n    return self.has_key(key)\r\n/lib/python3.5/site-packages/django_redis/cache.py:32: in _decorator\r\n    return method(self, *args, **kwargs)\r\n/lib/python3.5/site-packages/django_redis/cache.py:123: in has_key\r\n    return self.client.has_key(*args, **kwargs)\r\n/lib/python3.5/site-packages/django_redis/client/default.py:443: in has_key\r\n    client = self.get_client(write=False)\r\n/lib/python3.5/site-packages/django_redis/client/default.py:89: in get_client\r\n    self._clients[index] = self.connect(index)\r\n/lib/python3.5/site-packages/django_redis/client/default.py:99: in connect\r\n    return self.connection_factory.connect(self._server[index])\r\n/lib/python3.5/site-packages/django_redis/pool.py:71: in connect\r\n    connection = self.get_connection(params)\r\n/lib/python3.5/site-packages/django_redis/pool.py:82: in get_connection\r\n    pool = self.get_or_create_connection_pool(params)\r\n/lib/python3.5/site-packages/django_redis/pool.py:101: in get_or_create_connection_pool\r\n    self._pools[key] = self.get_connection_pool(params)\r\n/lib/python3.5/site-packages/django_redis/pool.py:114: in get_connection_pool\r\n    pool = self.pool_cls.from_url(**cp_params)\r\n/lib/python3.5/site-packages/redis/connection.py:813: in from_url\r\n    'port': int(url.port or 6379),\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = ParseResult(scheme='redis', netloc='127.0.0.1:6379:1', path='', params='', query='', fragment='')\r\n\r\n    @property\r\n    def port(self):\r\n        port = self._hostinfo[1]\r\n        if port is not None:\r\n>           port = int(port, 10)\r\nE           ValueError: invalid literal for int() with base 10: '6379:1'\r\n```\r\n\r\nworks good with django-environ==0.4.0 though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/100", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/100/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/100/events", "html_url": "https://github.com/joke2k/django-environ/issues/100", "id": 193072672, "node_id": "MDU6SXNzdWUxOTMwNzI2NzI=", "number": 100, "title": "How do you set CONN_MAX_AGE?", "user": {"login": "getup8", "id": 4086934, "node_id": "MDQ6VXNlcjQwODY5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4086934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getup8", "html_url": "https://github.com/getup8", "followers_url": "https://api.github.com/users/getup8/followers", "following_url": "https://api.github.com/users/getup8/following{/other_user}", "gists_url": "https://api.github.com/users/getup8/gists{/gist_id}", "starred_url": "https://api.github.com/users/getup8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getup8/subscriptions", "organizations_url": "https://api.github.com/users/getup8/orgs", "repos_url": "https://api.github.com/users/getup8/repos", "events_url": "https://api.github.com/users/getup8/events{/privacy}", "received_events_url": "https://api.github.com/users/getup8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-02T09:39:58Z", "updated_at": "2016-12-02T10:19:29Z", "closed_at": "2016-12-02T10:19:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's no mention of it in the docs, so curious how one would set this using env vars.  Also wondering if there's an easy way to set it when deploying to something like Heroku.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/99", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/99/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/99/events", "html_url": "https://github.com/joke2k/django-environ/issues/99", "id": 192060134, "node_id": "MDU6SXNzdWUxOTIwNjAxMzQ=", "number": 99, "title": "docs: where did `vars()` come from?", "user": {"login": "glarrain", "id": 812654, "node_id": "MDQ6VXNlcjgxMjY1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/812654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glarrain", "html_url": "https://github.com/glarrain", "followers_url": "https://api.github.com/users/glarrain/followers", "following_url": "https://api.github.com/users/glarrain/following{/other_user}", "gists_url": "https://api.github.com/users/glarrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/glarrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glarrain/subscriptions", "organizations_url": "https://api.github.com/users/glarrain/orgs", "repos_url": "https://api.github.com/users/glarrain/repos", "events_url": "https://api.github.com/users/glarrain/events{/privacy}", "received_events_url": "https://api.github.com/users/glarrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-28T17:02:01Z", "updated_at": "2016-11-29T15:45:53Z", "closed_at": "2016-11-29T11:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the README, email settings:\r\n\r\n```python\r\n    EMAIL_CONFIG = env.email_url(\r\n        'EMAIL_URL', default='smtp://user@:password@localhost:25')\r\n\r\n    vars().update(EMAIL_CONFIG)\r\n```\r\n\r\nWhere did that `vars()` come from? I have not found any reference to it, either in the README, the docs, or [in the repo](https://github.com/joke2k/django-environ/search?q=vars).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/98", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/98/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/98/events", "html_url": "https://github.com/joke2k/django-environ/issues/98", "id": 190548478, "node_id": "MDU6SXNzdWUxOTA1NDg0Nzg=", "number": 98, "title": "Variable values that starts with \"$\" are always treated as a reference", "user": {"login": "avrahamshukron", "id": 831127, "node_id": "MDQ6VXNlcjgzMTEyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/831127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avrahamshukron", "html_url": "https://github.com/avrahamshukron", "followers_url": "https://api.github.com/users/avrahamshukron/followers", "following_url": "https://api.github.com/users/avrahamshukron/following{/other_user}", "gists_url": "https://api.github.com/users/avrahamshukron/gists{/gist_id}", "starred_url": "https://api.github.com/users/avrahamshukron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avrahamshukron/subscriptions", "organizations_url": "https://api.github.com/users/avrahamshukron/orgs", "repos_url": "https://api.github.com/users/avrahamshukron/repos", "events_url": "https://api.github.com/users/avrahamshukron/events{/privacy}", "received_events_url": "https://api.github.com/users/avrahamshukron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-20T09:32:55Z", "updated_at": "2017-07-07T09:47:30Z", "closed_at": "2017-07-07T09:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have something like:\r\n`SECRET_KEY=$R3OHmJvC2Gi(5JaOMDTtO9-7#`\r\nin your local.env file (I actually used this randomly generated key), then when loading the environment you'll get an error:\r\n`django.core.exceptions.ImproperlyConfigured: Set the R3OHmJvC2Gi(5JaOMDTtO9-7# environment variable`\r\n\r\nNotice how the \"$\" is missing from the exception message.\r\nThis is probably due to the \"resolve proxied values\"  you perform on lines 257-260 in `environ.py`\r\n\r\nNot sure what the correct behavior should be, but this is definitely something that should be well-documented and advertised.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/97", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/97/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/97/events", "html_url": "https://github.com/joke2k/django-environ/issues/97", "id": 184725132, "node_id": "MDU6SXNzdWUxODQ3MjUxMzI=", "number": 97, "title": "DATABASE_URL parser not work properly", "user": {"login": "elipavlov", "id": 7875287, "node_id": "MDQ6VXNlcjc4NzUyODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7875287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elipavlov", "html_url": "https://github.com/elipavlov", "followers_url": "https://api.github.com/users/elipavlov/followers", "following_url": "https://api.github.com/users/elipavlov/following{/other_user}", "gists_url": "https://api.github.com/users/elipavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/elipavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elipavlov/subscriptions", "organizations_url": "https://api.github.com/users/elipavlov/orgs", "repos_url": "https://api.github.com/users/elipavlov/repos", "events_url": "https://api.github.com/users/elipavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/elipavlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-23T23:53:53Z", "updated_at": "2016-11-13T19:06:21Z", "closed_at": "2016-11-13T19:06:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "If inside DATABASE_URL user password start with \"# \" character, then parser will build incorrect dict:\n\n```\nDATABASE_URL=mysql://user:#password@127.0.0.1:3306/dbname\n```\n\nres:\n\n```\n {'ENGINE': 'django.db.backends.mysql', 'NAME': '', 'HOST': 'user', 'USER': None, 'PASSWORD': None, 'PORT': None}\n```\n\npython 2.7.6\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/95", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/95/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/95/events", "html_url": "https://github.com/joke2k/django-environ/issues/95", "id": 177644525, "node_id": "MDU6SXNzdWUxNzc2NDQ1MjU=", "number": 95, "title": "use redis in django-environ problem", "user": {"login": "steinliber", "id": 13215800, "node_id": "MDQ6VXNlcjEzMjE1ODAw", "avatar_url": "https://avatars3.githubusercontent.com/u/13215800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steinliber", "html_url": "https://github.com/steinliber", "followers_url": "https://api.github.com/users/steinliber/followers", "following_url": "https://api.github.com/users/steinliber/following{/other_user}", "gists_url": "https://api.github.com/users/steinliber/gists{/gist_id}", "starred_url": "https://api.github.com/users/steinliber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steinliber/subscriptions", "organizations_url": "https://api.github.com/users/steinliber/orgs", "repos_url": "https://api.github.com/users/steinliber/repos", "events_url": "https://api.github.com/users/steinliber/events{/privacy}", "received_events_url": "https://api.github.com/users/steinliber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-18T10:39:51Z", "updated_at": "2017-03-17T03:48:06Z", "closed_at": "2017-03-17T03:48:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When use django-environ for redis\uff0ci meet a problem.the code for redis is \n\n```\n'rediscache://127.0.0.1:6379/0?client_class=django_redis.client.DefaultClient'\n```\n\nand the problem is \n\n```\n    response = receiver(signal=self, sender=sender, **named)\n  File \"./application/models.py\", line 407, in clear_app_cache\n    cache.delete(key)\n  File \"/srv/www/media.v3.client-api.dingdone.com/env/local/lib/python2.7/site-packages/django_redis/cache.py\", line 38, in _decorator\n    raise e.parent\nConnectionError: Error 2 connecting to unix socket: /0. No such file or directory.\n```\n\nThe doc doesn't say about redis db set, Can anyone help\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/86", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/86/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/86/events", "html_url": "https://github.com/joke2k/django-environ/issues/86", "id": 159862490, "node_id": "MDU6SXNzdWUxNTk4NjI0OTA=", "number": 86, "title": "error of collectstatic for AttributeError: 'Path' object has no attribute 'startswith'", "user": {"login": "raccoonyy", "id": 541274, "node_id": "MDQ6VXNlcjU0MTI3NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/541274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raccoonyy", "html_url": "https://github.com/raccoonyy", "followers_url": "https://api.github.com/users/raccoonyy/followers", "following_url": "https://api.github.com/users/raccoonyy/following{/other_user}", "gists_url": "https://api.github.com/users/raccoonyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/raccoonyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raccoonyy/subscriptions", "organizations_url": "https://api.github.com/users/raccoonyy/orgs", "repos_url": "https://api.github.com/users/raccoonyy/repos", "events_url": "https://api.github.com/users/raccoonyy/events{/privacy}", "received_events_url": "https://api.github.com/users/raccoonyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-13T02:17:48Z", "updated_at": "2016-09-09T11:10:20Z", "closed_at": "2016-06-20T08:22:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Question: Why I have to use `root` property of `Path` instance?\n### 1. First try\n\n```\n# settings.py\nSTATIC_ROOT = root.path('collected_static/')\nSTATICFILES_DIRS = [\n    root.path(\"web/static\"),\n    (\"components\", root.path(\"bower_components/\")),\n]\n```\n\nthen, run `collectstatic` command print out:\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 12, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 195, in fetch_command\n    klass = load_command_class(app_name, subcommand)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 40, in load_command_class\n    return module.Command()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 32, in __init__\n    self.storage.path('')\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/utils/functional.py\", line 204, in inner\n    self._setup()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 394, in _setup\n    self._wrapped = get_storage_class(settings.STATICFILES_STORAGE)()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 39, in __init__\n    *args, **kwargs)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/files/storage.py\", line 185, in __init__\n    self.location = abspathu(self.base_location)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/lib/python3.5/posixpath.py\", line 357, in abspath\n    if not isabs(path):\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/lib/python3.5/posixpath.py\", line 64, in isabs\n    return s.startswith(sep)\nAttributeError: 'Path' object has no attribute 'startswith'\n```\n\nwhen I print out `STATICFILES_DIRS`\n\n```\n[<Path:/Users/raccoony/smartstudy/box/web/static>, ('components', <Path:/Users/raccoony/smartstudy/box/bower_components>)]\n```\n\n**not `path` strings but `Path` instaces.**\n### 2. so I tried `root` property\n\n```\n# settings.py (modeified)\nSTATIC_ROOT = root.path('collected_static/').root\nSTATICFILES_DIRS = [\n    root.path(\"web/static\").root,\n    (\"components\", root.path(\"bower_components/\").root),\n]\n```\n\nthen, run `collectstatic` will be:\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 12, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 195, in fetch_command\n    klass = load_command_class(app_name, subcommand)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/core/management/__init__.py\", line 40, in load_command_class\n    return module.Command()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 32, in __init__\n    self.storage.path('')\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/utils/functional.py\", line 204, in inner\n    self._setup()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 394, in _setup\n    self._wrapped = get_storage_class(settings.STATICFILES_STORAGE)()\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/storage.py\", line 37, in __init__\n    check_settings(base_url)\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/django/contrib/staticfiles/utils.py\", line 58, in check_settings\n    (settings.MEDIA_ROOT == settings.STATIC_ROOT)):\n  File \"/Users/raccoony/.pyenv/versions/3.5.0/envs/box/lib/python3.5/site-packages/environ/environ.py\", line 670, in __eq__\n    return self.__root__ == other.__root__\nAttributeError: 'str' object has no attribute '__root__'\n```\n### 3. I used `root` property to `MEDIA_ROOT` too.\n\n```\n# settings.py (2nd modified)\nSTATIC_ROOT = root.path('collected_static/').root\nSTATICFILES_DIRS = [\n    root.path(\"web/static\").root,\n    (\"components\", root.path(\"bower_components/\").root),\n]\n\nMEDIA_ROOT = root.path(\"media\").root\n```\n\nthen, `collectstatic` runs without error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/81", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/81/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/81/events", "html_url": "https://github.com/joke2k/django-environ/issues/81", "id": 142640107, "node_id": "MDU6SXNzdWUxNDI2NDAxMDc=", "number": 81, "title": "Can't set CONN_MAX_AGE to None", "user": {"login": "rubendura", "id": 1939893, "node_id": "MDQ6VXNlcjE5Mzk4OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1939893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubendura", "html_url": "https://github.com/rubendura", "followers_url": "https://api.github.com/users/rubendura/followers", "following_url": "https://api.github.com/users/rubendura/following{/other_user}", "gists_url": "https://api.github.com/users/rubendura/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubendura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubendura/subscriptions", "organizations_url": "https://api.github.com/users/rubendura/orgs", "repos_url": "https://api.github.com/users/rubendura/repos", "events_url": "https://api.github.com/users/rubendura/events{/privacy}", "received_events_url": "https://api.github.com/users/rubendura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-22T12:50:45Z", "updated_at": "2018-06-26T21:03:16Z", "closed_at": "2018-06-26T21:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When setting DATABASE_URL to something like `postgres://posgres@db:5432/postgres?conn_max_age=None` the end result is:\n\n``` python\n{\n    'ENGINE': 'django.db.backends.postgresql_psycopg2',\n    'HOST': 'db'\n    'PORT': 5432,\n    'USER': 'postgres',\n    'PASSWORD': None,\n    'NAME': 'postgres',\n    'CONN_MAX_AGE': 'None',\n    'OPTIONS': {},\n}\n```\n\nWhere CONN_MAX_AGE has an invalid value: it has to be set to either a float or None, but django-environ returns a str.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/76", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/76/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/76/events", "html_url": "https://github.com/joke2k/django-environ/issues/76", "id": 129999490, "node_id": "MDU6SXNzdWUxMjk5OTk0OTA=", "number": 76, "title": "does not load env variables from the .env file", "user": {"login": "musicformellons", "id": 10334123, "node_id": "MDQ6VXNlcjEwMzM0MTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10334123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/musicformellons", "html_url": "https://github.com/musicformellons", "followers_url": "https://api.github.com/users/musicformellons/followers", "following_url": "https://api.github.com/users/musicformellons/following{/other_user}", "gists_url": "https://api.github.com/users/musicformellons/gists{/gist_id}", "starred_url": "https://api.github.com/users/musicformellons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/musicformellons/subscriptions", "organizations_url": "https://api.github.com/users/musicformellons/orgs", "repos_url": "https://api.github.com/users/musicformellons/repos", "events_url": "https://api.github.com/users/musicformellons/events{/privacy}", "received_events_url": "https://api.github.com/users/musicformellons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-30T15:34:13Z", "updated_at": "2019-11-15T00:09:03Z", "closed_at": "2016-01-31T11:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an  .env file (in same folder as manage.py) with:\nDJANGO_DEBUG=False\nDATABASE_URL=postgres://user:pw@127.0.0.1:5432/dbname\nPOSTGRES_PASSWORD=pw\nPOSTGRES_USER=user\nDJANGO_ADMIN_URL=r'^admin/'\nDJANGO_SETTINGS_MODULE=config.settings.production\nDJANGO_SECRET_KEY=7878078078078907890789087etc\nDJANGO_ALLOWED_HOSTS=email.com\nDJANGO_SERVER_EMAIL=info@email.com\nDJANGO_SECURE_SSL_REDIRECT=False\n\nBut when I do:\npython manage.py migrate --settings config.settings.production\n\nI get:\ndjango.core.exceptions.ImproperlyConfigured: Set the DJANGO_SECRET_KEY environment variable\n\nAlso env does not show any of the variables. The variables should have been loaded from my .env file right? So what's wrong?\n\nBTW: I think the docs could be clearer on where to put the .env file and that is is loaded and when, I suppose. I looked elsewhere to find that that was indeed to be expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/70", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/70/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/70/events", "html_url": "https://github.com/joke2k/django-environ/issues/70", "id": 125130801, "node_id": "MDU6SXNzdWUxMjUxMzA4MDE=", "number": 70, "title": " django-environ/environ/test_env.txt not in pypi source", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-06T07:59:47Z", "updated_at": "2018-06-26T21:01:34Z", "closed_at": "2018-06-26T21:01:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please include \ndjango-environ/environ/test_env.txt in the PyPI source so the tests will work.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/67", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/67/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/67/events", "html_url": "https://github.com/joke2k/django-environ/issues/67", "id": 124307605, "node_id": "MDU6SXNzdWUxMjQzMDc2MDU=", "number": 67, "title": "How to get HOME dir path", "user": {"login": "vaibhav-jain", "id": 4224414, "node_id": "MDQ6VXNlcjQyMjQ0MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4224414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhav-jain", "html_url": "https://github.com/vaibhav-jain", "followers_url": "https://api.github.com/users/vaibhav-jain/followers", "following_url": "https://api.github.com/users/vaibhav-jain/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhav-jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhav-jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhav-jain/subscriptions", "organizations_url": "https://api.github.com/users/vaibhav-jain/orgs", "repos_url": "https://api.github.com/users/vaibhav-jain/repos", "events_url": "https://api.github.com/users/vaibhav-jain/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhav-jain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-30T05:55:38Z", "updated_at": "2015-12-30T06:18:08Z", "closed_at": "2015-12-30T06:18:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to get HOME DIR path in my settings file `expanduser` works but as I am using `django-environ` now can you tell me how to do that using the same.\n\nWhen I tried : 'environ.Path('/')  and environ.Path('~')' But no luck.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/66", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/66/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/66/events", "html_url": "https://github.com/joke2k/django-environ/issues/66", "id": 124122308, "node_id": "MDU6SXNzdWUxMjQxMjIzMDg=", "number": 66, "title": "Why read_env reads everything to os.environ?", "user": {"login": "sirex", "id": 297583, "node_id": "MDQ6VXNlcjI5NzU4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/297583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirex", "html_url": "https://github.com/sirex", "followers_url": "https://api.github.com/users/sirex/followers", "following_url": "https://api.github.com/users/sirex/following{/other_user}", "gists_url": "https://api.github.com/users/sirex/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirex/subscriptions", "organizations_url": "https://api.github.com/users/sirex/orgs", "repos_url": "https://api.github.com/users/sirex/repos", "events_url": "https://api.github.com/users/sirex/events{/privacy}", "received_events_url": "https://api.github.com/users/sirex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291074, "node_id": "MDU6TGFiZWwzNDI5MTA3NA==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-28T20:41:32Z", "updated_at": "2015-12-29T19:39:45Z", "closed_at": "2015-12-29T19:17:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks quite suspicious that everything is read into global variable `environ.Env.ENVIRON` and even worse, `environ.Env.ENVIRON` points to `os.eviron`.\n\nFor global variables, if I will instantiate `environ.Env` two times, I would expect to get two independent environments, but currently, I will have two class instances operating on same global environment.\n\nIs there a good reason for this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/62", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/62/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/62/events", "html_url": "https://github.com/joke2k/django-environ/issues/62", "id": 123892154, "node_id": "MDU6SXNzdWUxMjM4OTIxNTQ=", "number": 62, "title": "Cache url for redis provide wrong LOCATION params.", "user": {"login": "aldarund", "id": 571159, "node_id": "MDQ6VXNlcjU3MTE1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/571159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldarund", "html_url": "https://github.com/aldarund", "followers_url": "https://api.github.com/users/aldarund/followers", "following_url": "https://api.github.com/users/aldarund/following{/other_user}", "gists_url": "https://api.github.com/users/aldarund/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldarund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldarund/subscriptions", "organizations_url": "https://api.github.com/users/aldarund/orgs", "repos_url": "https://api.github.com/users/aldarund/repos", "events_url": "https://api.github.com/users/aldarund/events{/privacy}", "received_events_url": "https://api.github.com/users/aldarund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291070, "node_id": "MDU6TGFiZWwzNDI5MTA3MA==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-25T17:48:00Z", "updated_at": "2015-12-29T14:11:21Z", "closed_at": "2015-12-29T14:11:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following env var.\nCACHE_URL=rediscache://broker:6379\nWhich is expanded by environ to following:\n{'default': {'BACKEND': 'django_redis.cache.RedisCache',\n  'LOCATION': 'broker:6379'}}\n\nBut its incorrect. \ndjango redis  will give following error with this:\nConnectionError: Error 111 connecting to None:6379. Connection refused.\n\nAnd if we look into django redis docks we will see following:\nhttp://niwinz.github.io/django-redis/latest/\n\nThis is a examples of url format\nredis://[:password]@localhost:6379/0\nrediss://[:password]@localhost:6379/0\nunix://[:password]@/path/to/socket.sock?db=0\n\nAnd as you see scheme is needed. But environ dont pass scheme into location, so redis cache fails to work.\n\nIm not sure for earlier version of django-redis, but current works like i described.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/58", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/58/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/58/events", "html_url": "https://github.com/joke2k/django-environ/issues/58", "id": 120152881, "node_id": "MDU6SXNzdWUxMjAxNTI4ODE=", "number": 58, "title": "How to make django-environ work with uwsgi emperor?", "user": {"login": "tiany", "id": 1593440, "node_id": "MDQ6VXNlcjE1OTM0NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1593440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiany", "html_url": "https://github.com/tiany", "followers_url": "https://api.github.com/users/tiany/followers", "following_url": "https://api.github.com/users/tiany/following{/other_user}", "gists_url": "https://api.github.com/users/tiany/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiany/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiany/subscriptions", "organizations_url": "https://api.github.com/users/tiany/orgs", "repos_url": "https://api.github.com/users/tiany/repos", "events_url": "https://api.github.com/users/tiany/events{/privacy}", "received_events_url": "https://api.github.com/users/tiany/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291074, "node_id": "MDU6TGFiZWwzNDI5MTA3NA==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2015-12-03T11:48:58Z", "updated_at": "2019-05-07T03:22:08Z", "closed_at": "2017-04-13T15:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use this project with my django projection, deployed by uwsgi(emperor mode) + nginx, it worked well, thanks for your working, but when i touch the uwsgi config file, the env vars will **not** reload, for now, i can send signal 3 to the process which served my django app,, is there any good ways to make this done?\n\n(sorry for my poor english...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/56", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/56/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/56/events", "html_url": "https://github.com/joke2k/django-environ/issues/56", "id": 117645861, "node_id": "MDU6SXNzdWUxMTc2NDU4NjE=", "number": 56, "title": "Unspecified database properties default to `None` rather than the empty string", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-18T18:08:00Z", "updated_at": "2015-12-25T16:52:53Z", "closed_at": "2015-12-25T16:52:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using django-environ v0.4.0 on Python v2.7.10.\n\n**STR:**\n\n``` bash\n$ DATABASE_URL='mysql://root@localhost/test_db'\n$ python\n>>> import json\n>>> import environ\n>>> env = environ.Env()\n>>> print(json.dumps(env.db_url('DATABASE_URL'), indent=2))\n```\n\n(Travis' MySQL setup has no password, hence the `DATABASE_URL` value above.)\n\n**Expected:**\n\n``` json\n{\n  \"ENGINE\": \"django.db.backends.mysql\",\n  \"NAME\": \"test_db\",\n  \"HOST\": \"localhost\",\n  \"USER\": \"root\",\n  \"PASSWORD\": \"\",\n  \"PORT\": \"\"\n}\n```\n\n...or else:\n\n``` json\n{\n  \"ENGINE\": \"django.db.backends.mysql\",\n  \"NAME\": \"test_db\",\n  \"HOST\": \"localhost\",\n  \"USER\": \"root\"\n}\n```\n\nDjango has defaults for those properties - which are the empty string: [docs](https://docs.djangoproject.com/en/1.8/ref/settings/#password)\n\n**Actual:**\n\n``` json\n{\n  \"ENGINE\": \"django.db.backends.mysql\",\n  \"NAME\": \"test_db\",\n  \"HOST\": \"localhost\",\n  \"USER\": \"root\",\n  \"PASSWORD\": null,\n  \"PORT\": null\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/55", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/55/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/55/events", "html_url": "https://github.com/joke2k/django-environ/issues/55", "id": 116631026, "node_id": "MDU6SXNzdWUxMTY2MzEwMjY=", "number": 55, "title": "db_url does not handle '#' in password?", "user": {"login": "lisac", "id": 943046, "node_id": "MDQ6VXNlcjk0MzA0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/943046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lisac", "html_url": "https://github.com/lisac", "followers_url": "https://api.github.com/users/lisac/followers", "following_url": "https://api.github.com/users/lisac/following{/other_user}", "gists_url": "https://api.github.com/users/lisac/gists{/gist_id}", "starred_url": "https://api.github.com/users/lisac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lisac/subscriptions", "organizations_url": "https://api.github.com/users/lisac/orgs", "repos_url": "https://api.github.com/users/lisac/repos", "events_url": "https://api.github.com/users/lisac/events{/privacy}", "received_events_url": "https://api.github.com/users/lisac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291070, "node_id": "MDU6TGFiZWwzNDI5MTA3MA==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-12T20:14:45Z", "updated_at": "2020-02-10T10:43:06Z", "closed_at": "2016-11-13T19:19:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to configure a database password that happens to contain a `#`. Is that character not supported in this package's processing of the database url? When I alter the `test_postgres_parsing` in [test.py](https://github.com/joke2k/django-environ/blob/develop/environ/test.py#L237) so that the password contains that character, eg `wegauwhgeuioweg` --> `weg#auwhgeuioweg`, the test encounters this error:\n\n``` ======================================================================\nERROR: test_postgres_parsing (environ.test.DatabaseTestSuite)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\projects\\django-environ\\environ\\test.py\", line 241, in test_postgres_parsing\n    url = Env.db_url_config(url)\n  File \"c:\\projects\\django-environ\\environ\\environ.py\", line 371, in db_url_config\n    'PORT': _cast_int(url.port),\n  File \"C:\\Python27\\Lib\\urlparse.py\", line 113, in port\n    port = int(port, 10)\nValueError: invalid literal for int() with base 10: 'weg'\n```\n\nI've found that other special chars, such as these: `}{)(}|!\\^><;` can be embedded in the database password and not break the test. For example, when I alter the password from `wegauwhgeuioweg` to `:wegauw}{)(}|!\\^><;hgeuioweg` on lines 238 and 245 of  the test case in [test.py](https://github.com/joke2k/django-environ/blob/develop/environ/test.py#L238), no tests fail.\n\nMy environment is python 2.7.10.\n\nSummary: Is it true that a `#` included in the db password will corrupt the db url?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/54", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/54/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/54/events", "html_url": "https://github.com/joke2k/django-environ/issues/54", "id": 114820144, "node_id": "MDU6SXNzdWUxMTQ4MjAxNDQ=", "number": 54, "title": "Is it possible to use callables for casting?", "user": {"login": "ydaniv", "id": 116658, "node_id": "MDQ6VXNlcjExNjY1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/116658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydaniv", "html_url": "https://github.com/ydaniv", "followers_url": "https://api.github.com/users/ydaniv/followers", "following_url": "https://api.github.com/users/ydaniv/following{/other_user}", "gists_url": "https://api.github.com/users/ydaniv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydaniv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydaniv/subscriptions", "organizations_url": "https://api.github.com/users/ydaniv/orgs", "repos_url": "https://api.github.com/users/ydaniv/repos", "events_url": "https://api.github.com/users/ydaniv/events{/privacy}", "received_events_url": "https://api.github.com/users/ydaniv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-03T13:51:15Z", "updated_at": "2015-11-03T13:55:06Z", "closed_at": "2015-11-03T13:55:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Examples:\n- passing a string through gettext\n- wrapping a value for lazy eval: `lambda s: s`\n- converting to datetime or timedelta objects\n\netc..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/53", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/53/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/53/events", "html_url": "https://github.com/joke2k/django-environ/issues/53", "id": 114245048, "node_id": "MDU6SXNzdWUxMTQyNDUwNDg=", "number": 53, "title": "Provide wheel distribution on PyPI", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291072, "node_id": "MDU6TGFiZWwzNDI5MTA3Mg==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-30T10:44:09Z", "updated_at": "2017-07-19T13:20:21Z", "closed_at": "2017-07-19T13:20:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please could you provide a wheel archive on PyPI alongside the standard package? http://pythonwheels.com/\n\nMany thanks :-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/51", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/51/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/51/events", "html_url": "https://github.com/joke2k/django-environ/issues/51", "id": 112798015, "node_id": "MDU6SXNzdWUxMTI3OTgwMTU=", "number": 51, "title": "Logger object name is the filepath rather than the module name", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-22T13:04:13Z", "updated_at": "2015-12-24T17:01:52Z", "closed_at": "2015-12-24T17:01:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From https://docs.python.org/2/library/logging.html#logger-objects : \n\n> The `name` is potentially a period-separated hierarchical value, like `foo.bar.baz` (though it could also be just plain `foo`, for example). Loggers that are further down in the hierarchical list are children of loggers higher up in the list. For example, given a logger with a name of `foo`, loggers with names of `foo.bar`, `foo.bar.baz`, and `foo.bam` are all descendants of `foo`. The logger name hierarchy is analogous to the Python package hierarchy, and identical to it if you organise your loggers on a per-module basis using the recommended construction `logging.getLogger(__name__)`. That\u2019s because in a module, `__name__` is the module\u2019s name in the Python package namespace.\n\nWhereas at the moment, the logger object is instantiated using:\n\n``` python\nlogger = logging.getLogger(__file__)\n```\n\nWhen using [logging_tree](http://rhodesmill.org/brandon/2012/logging_tree/) to inspect the available logging objects, this results in:\n\n``` python\n>>> import requests\n>>> import environ\n>>> import logging_tree\n>>> logging_tree.printout()\n<--\"\"\n   Level WARNING\n   |\n   o<--[/home/vagrant/venv/local/lib/python2]\n   |   |\n   |   o<--[/home/vagrant/venv/local/lib/python2.7/site-packages/environ/environ]\n   |       |\n   |       o<--\"/home/vagrant/venv/local/lib/python2.7/site-packages/environ/environ.pyc\"\n   |           Level NOTSET so inherits level WARNING\n   |\n   o<--\"requests\"\n       Level NOTSET so inherits level WARNING\n       Handler <logging.NullHandler object at 0xb6ed5f6c>\n       |\n       o<--[requests.packages]\n           |\n           o<--\"requests.packages.urllib3\"\n               Level NOTSET so inherits level WARNING\n               Handler <logging.NullHandler object at 0xb6ed5f0c>\n               |\n               o<--\"requests.packages.urllib3.connectionpool\"\n               |   Level NOTSET so inherits level WARNING\n               |\n               o<--\"requests.packages.urllib3.poolmanager\"\n               |   Level NOTSET so inherits level WARNING\n               |\n               o<--[requests.packages.urllib3.util]\n                   |\n                   o<--\"requests.packages.urllib3.util.retry\"\n                       Level NOTSET so inherits level WARNING\n>>>\n```\n\nie: The logger name is `/home/vagrant/venv/local/lib/python2.7/site-packages/environ/environ.pyc` rather than `environ` (and compare to what is shown for requests).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/44", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/44/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/44/events", "html_url": "https://github.com/joke2k/django-environ/issues/44", "id": 107809819, "node_id": "MDU6SXNzdWUxMDc4MDk4MTk=", "number": 44, "title": "AttributeError: 'NoneType' object has no attribute 'find'", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-22T21:49:31Z", "updated_at": "2015-09-23T21:27:56Z", "closed_at": "2015-09-23T16:01:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using current PyPI django-environ release (v0.3.0):\n\n``` bash\n>>> import environ\n>>> env = environ.Env()\n>>> env.url(\"FOO\", default=None)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/site-packages/environ/environ.py\", line 173, in url\n    return self.get_value(var, cast=urlparse.urlparse, default=default, parse_default=True)\n  File \"/usr/lib/python2.7/site-packages/environ/environ.py\", line 260, in get_value\n    value = self.parse_value(value, cast)\n  File \"/usr/lib/python2.7/site-packages/environ/environ.py\", line 308, in parse_value\n    value = cast(value)\n  File \"/usr/lib/python2.7/urlparse.py\", line 143, in urlparse\n    tuple = urlsplit(url, scheme, allow_fragments)\n  File \"/usr/lib/python2.7/urlparse.py\", line 182, in urlsplit\n    i = url.find(':')\nAttributeError: 'NoneType' object has no attribute 'find'\n```\n\nExpected:\nIt returns `None` like `env(\"BAR\", default=None)` would.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/39", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/39/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/39/events", "html_url": "https://github.com/joke2k/django-environ/issues/39", "id": 106885126, "node_id": "MDU6SXNzdWUxMDY4ODUxMjY=", "number": 39, "title": "Python 2 broken by Python 3 compatibility commit", "user": {"login": "ei-grad", "id": 78607, "node_id": "MDQ6VXNlcjc4NjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/78607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ei-grad", "html_url": "https://github.com/ei-grad", "followers_url": "https://api.github.com/users/ei-grad/followers", "following_url": "https://api.github.com/users/ei-grad/following{/other_user}", "gists_url": "https://api.github.com/users/ei-grad/gists{/gist_id}", "starred_url": "https://api.github.com/users/ei-grad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ei-grad/subscriptions", "organizations_url": "https://api.github.com/users/ei-grad/orgs", "repos_url": "https://api.github.com/users/ei-grad/repos", "events_url": "https://api.github.com/users/ei-grad/events{/privacy}", "received_events_url": "https://api.github.com/users/ei-grad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-16T23:31:16Z", "updated_at": "2015-09-21T09:21:19Z", "closed_at": "2015-09-21T09:21:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` bash\n[ ei-grad@yoga ~/repos/django-environ \u20394325313*\u203a ]\n\u2192 git diff\ndiff --git a/environ/test_env.txt b/environ/test_env.txt\nindex edb5ac5..ad75c12 100644\n--- a/environ/test_env.txt\n+++ b/environ/test_env.txt\n@@ -20,3 +20,4 @@ INT_VAR=42\n STR_LIST_WITH_SPACES= foo,  bar\n STR_VAR=bar\n INT_LIST=42,33\n+CYRILLIC_VAR=\u0444\u0443\u0443\u0431\u0430\u0440\n[ ei-grad@yoga ~/repos/django-environ \u20394325313*\u203a ]\n\u2192 git stash\nSaved working directory and index state WIP on (no branch): 4325313 add support for python 3\nHEAD is now at 4325313 add support for python 3\n[ ei-grad@yoga ~/repos/django-environ \u20394325313\u203a ]\n\u2192 nosetests2   \n........................................\n----------------------------------------------------------------------\nRan 40 tests in 0.033s\n\nOK\n[ ei-grad@yoga ~/repos/django-environ \u20394325313\u203a ]\n\u2192 git stash pop\nHEAD detached at 4325313\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n    modified:   environ/test_env.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nDropped refs/stash@{0} (17f7d685907c5d156e2a0de7fba4401673a4cf9c)\n[ ei-grad@yoga ~/repos/django-environ \u20394325313*\u203a ]\n\u2192 nosetests2   \n..................EEEEEEEEEEEEEEEEEE....\n======================================================================\nERROR: test_bool_false (environ.test.FileEnvTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/ei-grad/repos/django-environ/environ/test.py\", line 173, in setUp\n    self.env.read_env(file_path, PATH_VAR=Path(__file__, is_file=True).__root__)\n  File \"/home/ei-grad/repos/django-environ/environ/environ.py\", line 297, in read_env\n    os.environ.setdefault(key, text_type(val))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd1 in position 0: ordinal not in range(128)\n-------------------- >> begin captured logging << --------------------\n/home/ei-grad/repos/django-environ/environ/environ.pyc: DEBUG: Read environment variables from file: /home/ei-grad/repos/django-environ/environ/test_env.txt\n--------------------- >> end captured logging << ---------------------\n\n<...>\n\n----------------------------------------------------------------------\nRan 40 tests in 0.033s\n\nFAILED (errors=18)\n[ ei-grad@yoga ~/repos/django-environ \u20394325313*\u203a ]\n\u2192 git stash && git co HEAD^ && git stash pop                                                              1 \u21b5\nSaved working directory and index state WIP on (no branch): 4325313 add support for python 3\nHEAD is now at 4325313 add support for python 3\nPrevious HEAD position was 4325313... add support for python 3\nHEAD is now at cda8e72... fix travis script\nHEAD detached at cda8e72\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n    modified:   environ/test_env.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\nDropped refs/stash@{0} (177a60be37f051761f4fe557122c198d8769b078)\n[ ei-grad@yoga ~/repos/django-environ \u2039cda8e72*\u203a ]\n\u2192 nosetests2                                \n........................................\n----------------------------------------------------------------------\nRan 40 tests in 0.035s\n\nOK\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/35", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/35/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/35/events", "html_url": "https://github.com/joke2k/django-environ/issues/35", "id": 99834005, "node_id": "MDU6SXNzdWU5OTgzNDAwNQ==", "number": 35, "title": "env file cannot have space around equals sign", "user": {"login": "robvdl", "id": 1018674, "node_id": "MDQ6VXNlcjEwMTg2NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1018674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robvdl", "html_url": "https://github.com/robvdl", "followers_url": "https://api.github.com/users/robvdl/followers", "following_url": "https://api.github.com/users/robvdl/following{/other_user}", "gists_url": "https://api.github.com/users/robvdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/robvdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robvdl/subscriptions", "organizations_url": "https://api.github.com/users/robvdl/orgs", "repos_url": "https://api.github.com/users/robvdl/repos", "events_url": "https://api.github.com/users/robvdl/events{/privacy}", "received_events_url": "https://api.github.com/users/robvdl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291075, "node_id": "MDU6TGFiZWwzNDI5MTA3NQ==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-08T21:16:35Z", "updated_at": "2015-12-24T17:36:09Z", "closed_at": "2015-12-24T17:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found out that I cannot do this in the .env file:\n\nSOMEVAR = foo\n\nbut this works fine:\n\nSOMEVAR=foo\n\nis this by design? maybe a quick mention of this in the README because it confused me for a bit, I thought settings weren't being read, until I removed the spaces around the = sign.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/32", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/32/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/32/events", "html_url": "https://github.com/joke2k/django-environ/issues/32", "id": 95691118, "node_id": "MDU6SXNzdWU5NTY5MTExOA==", "number": 32, "title": "Support for django-redis", "user": {"login": "tarkatronic", "id": 37809, "node_id": "MDQ6VXNlcjM3ODA5", "avatar_url": "https://avatars0.githubusercontent.com/u/37809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarkatronic", "html_url": "https://github.com/tarkatronic", "followers_url": "https://api.github.com/users/tarkatronic/followers", "following_url": "https://api.github.com/users/tarkatronic/following{/other_user}", "gists_url": "https://api.github.com/users/tarkatronic/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarkatronic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarkatronic/subscriptions", "organizations_url": "https://api.github.com/users/tarkatronic/orgs", "repos_url": "https://api.github.com/users/tarkatronic/repos", "events_url": "https://api.github.com/users/tarkatronic/events{/privacy}", "received_events_url": "https://api.github.com/users/tarkatronic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291072, "node_id": "MDU6TGFiZWwzNDI5MTA3Mg==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-17T16:19:46Z", "updated_at": "2018-06-26T21:00:08Z", "closed_at": "2018-06-26T21:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the CACHE_SCHEMES, both `redis` and `rediscache` map to `redis_cache.cache.RedisCache`, referring to django-redis-cache. For comparison sake, in the django-cache-url project, `redis` and `hiredis` both map to `django_redis.cache.RedisCache`, referring to django-redis.\n\nIs there a reason that, in django-environ, one of these (or perhaps a new scheme) couldn't map to `django_redis.cache.RedisCache`?\n\nOr is there a particularly strong reason for preferring django-redis-cache over django-redis?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/28", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/28/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/28/events", "html_url": "https://github.com/joke2k/django-environ/issues/28", "id": 73886566, "node_id": "MDU6SXNzdWU3Mzg4NjU2Ng==", "number": 28, "title": "Is this being maintained?", "user": {"login": "brki", "id": 697240, "node_id": "MDQ6VXNlcjY5NzI0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/697240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brki", "html_url": "https://github.com/brki", "followers_url": "https://api.github.com/users/brki/followers", "following_url": "https://api.github.com/users/brki/following{/other_user}", "gists_url": "https://api.github.com/users/brki/gists{/gist_id}", "starred_url": "https://api.github.com/users/brki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brki/subscriptions", "organizations_url": "https://api.github.com/users/brki/orgs", "repos_url": "https://api.github.com/users/brki/repos", "events_url": "https://api.github.com/users/brki/events{/privacy}", "received_events_url": "https://api.github.com/users/brki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-07T07:57:19Z", "updated_at": "2015-05-13T14:20:07Z", "closed_at": "2015-05-13T14:20:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\njust wondering if this is still being maintained.  I notice that there are some old pull requests and issues without comments.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/25", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/25/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/25/events", "html_url": "https://github.com/joke2k/django-environ/issues/25", "id": 60145293, "node_id": "MDU6SXNzdWU2MDE0NTI5Mw==", "number": 25, "title": "Support section", "user": {"login": "alexsilva", "id": 2024086, "node_id": "MDQ6VXNlcjIwMjQwODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2024086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsilva", "html_url": "https://github.com/alexsilva", "followers_url": "https://api.github.com/users/alexsilva/followers", "following_url": "https://api.github.com/users/alexsilva/following{/other_user}", "gists_url": "https://api.github.com/users/alexsilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsilva/subscriptions", "organizations_url": "https://api.github.com/users/alexsilva/orgs", "repos_url": "https://api.github.com/users/alexsilva/repos", "events_url": "https://api.github.com/users/alexsilva/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-06T19:16:27Z", "updated_at": "2015-12-24T17:25:32Z", "closed_at": "2015-12-24T17:25:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if the file '.env' had support sections. So I would not have to keep repeating the same prefix (ZENDESK), as in:\n\n```\nZENDESK_URL_COMPANY_NAME=xxx\nZENDESK_EMAIL=xxx\nZENDESK_PASSWORD=xx\nZENDESK_API_VERSION=2\n```\n\nSections\n\n```\n[ZENDESK]\n  URL_COMPANY_NAME=xxx\n  EMAIL=xxx\n  PASSWORD=xx\n  API_VERSION=2\n```\n\nI did not see anything about it in the documentation, is there any solution to this ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/24", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/24/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/24/events", "html_url": "https://github.com/joke2k/django-environ/issues/24", "id": 57741170, "node_id": "MDU6SXNzdWU1Nzc0MTE3MA==", "number": 24, "title": "make a new PyPi release so that docs match behaviour", "user": {"login": "brki", "id": 697240, "node_id": "MDQ6VXNlcjY5NzI0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/697240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brki", "html_url": "https://github.com/brki", "followers_url": "https://api.github.com/users/brki/followers", "following_url": "https://api.github.com/users/brki/following{/other_user}", "gists_url": "https://api.github.com/users/brki/gists{/gist_id}", "starred_url": "https://api.github.com/users/brki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brki/subscriptions", "organizations_url": "https://api.github.com/users/brki/orgs", "repos_url": "https://api.github.com/users/brki/repos", "events_url": "https://api.github.com/users/brki/events{/privacy}", "received_events_url": "https://api.github.com/users/brki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-15T18:56:28Z", "updated_at": "2018-06-26T20:59:40Z", "closed_at": "2018-06-26T20:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "On readthedocs, we see this example for the .env file:\n\n```\nDATABASE_URL=psql://urser:un-githubbedpassword@127.0.0.1:8458/database\n```\n\nBut this doesn't work with the latest version available on PyPi.   Looks like 'psql' was introduced later ... pgsql, postgres, postgresql work, but not psql.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/21", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/21/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/21/events", "html_url": "https://github.com/joke2k/django-environ/issues/21", "id": 52532409, "node_id": "MDU6SXNzdWU1MjUzMjQwOQ==", "number": 21, "title": "True/False values in dict env variables are assumed to be unicode", "user": {"login": "kstaikov", "id": 1503932, "node_id": "MDQ6VXNlcjE1MDM5MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1503932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kstaikov", "html_url": "https://github.com/kstaikov", "followers_url": "https://api.github.com/users/kstaikov/followers", "following_url": "https://api.github.com/users/kstaikov/following{/other_user}", "gists_url": "https://api.github.com/users/kstaikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kstaikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kstaikov/subscriptions", "organizations_url": "https://api.github.com/users/kstaikov/orgs", "repos_url": "https://api.github.com/users/kstaikov/repos", "events_url": "https://api.github.com/users/kstaikov/events{/privacy}", "received_events_url": "https://api.github.com/users/kstaikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291075, "node_id": "MDU6TGFiZWwzNDI5MTA3NQ==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-19T21:47:04Z", "updated_at": "2018-06-26T20:58:11Z", "closed_at": "2018-06-26T20:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems that you should be able to either cast specific key-value pairs in dictionaries, or at least recognize numeric or boolean values.  Currently FOO=x=True,y=False will translate too FOO['x'] = unicode(True) and FOO['y'] = unicode(False).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/19", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/19/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/19/events", "html_url": "https://github.com/joke2k/django-environ/issues/19", "id": 51804447, "node_id": "MDU6SXNzdWU1MTgwNDQ0Nw==", "number": 19, "title": "read_env path", "user": {"login": "synotna", "id": 3313126, "node_id": "MDQ6VXNlcjMzMTMxMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3313126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synotna", "html_url": "https://github.com/synotna", "followers_url": "https://api.github.com/users/synotna/followers", "following_url": "https://api.github.com/users/synotna/following{/other_user}", "gists_url": "https://api.github.com/users/synotna/gists{/gist_id}", "starred_url": "https://api.github.com/users/synotna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synotna/subscriptions", "organizations_url": "https://api.github.com/users/synotna/orgs", "repos_url": "https://api.github.com/users/synotna/repos", "events_url": "https://api.github.com/users/synotna/events{/privacy}", "received_events_url": "https://api.github.com/users/synotna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-12T13:11:55Z", "updated_at": "2015-01-26T09:28:17Z", "closed_at": "2015-01-26T09:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running read_env without providing a filename, it looks for .env in the current directory (i.e. /project/project/.env), when providing a filename it looks in the parent directory (i.e. /project/.env/)\n\nShouldn't the behaviour be the same in both cases?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/17", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/17/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/17/events", "html_url": "https://github.com/joke2k/django-environ/issues/17", "id": 49764717, "node_id": "MDU6SXNzdWU0OTc2NDcxNw==", "number": 17, "title": "environ should be able to infer casting type from the default", "user": {"login": "crccheck", "id": 189908, "node_id": "MDQ6VXNlcjE4OTkwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/189908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crccheck", "html_url": "https://github.com/crccheck", "followers_url": "https://api.github.com/users/crccheck/followers", "following_url": "https://api.github.com/users/crccheck/following{/other_user}", "gists_url": "https://api.github.com/users/crccheck/gists{/gist_id}", "starred_url": "https://api.github.com/users/crccheck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crccheck/subscriptions", "organizations_url": "https://api.github.com/users/crccheck/orgs", "repos_url": "https://api.github.com/users/crccheck/repos", "events_url": "https://api.github.com/users/crccheck/events{/privacy}", "received_events_url": "https://api.github.com/users/crccheck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 34291072, "node_id": "MDU6TGFiZWwzNDI5MTA3Mg==", "url": "https://api.github.com/repos/joke2k/django-environ/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-22T00:28:20Z", "updated_at": "2018-06-26T20:57:54Z", "closed_at": "2018-06-26T20:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have `DEBUG = env('DEBUG', default=False)`, having to also specify `env = environ.Env(DEBUG=(bool, False),)` seems redundant. For example, see http://tornado.readthedocs.org/en/latest/options.html#tornado.options.OptionParser.define\n\n> If type is given (one of str, float, int, datetime, or timedelta) or can be inferred from the default, we parse the command line arguments based on the given type.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/16", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/16/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/16/events", "html_url": "https://github.com/joke2k/django-environ/issues/16", "id": 45386156, "node_id": "MDU6SXNzdWU0NTM4NjE1Ng==", "number": 16, "title": "0.3.1 missing from PyPI", "user": {"login": "rouge8", "id": 237005, "node_id": "MDQ6VXNlcjIzNzAwNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/237005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rouge8", "html_url": "https://github.com/rouge8", "followers_url": "https://api.github.com/users/rouge8/followers", "following_url": "https://api.github.com/users/rouge8/following{/other_user}", "gists_url": "https://api.github.com/users/rouge8/gists{/gist_id}", "starred_url": "https://api.github.com/users/rouge8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rouge8/subscriptions", "organizations_url": "https://api.github.com/users/rouge8/orgs", "repos_url": "https://api.github.com/users/rouge8/repos", "events_url": "https://api.github.com/users/rouge8/events{/privacy}", "received_events_url": "https://api.github.com/users/rouge8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-09T16:17:06Z", "updated_at": "2015-10-01T20:28:17Z", "closed_at": "2015-10-01T20:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "[PyPI only has 0.3.0](https://pypi.python.org/pypi/django-environ). Could you push up 0.3.1?\n\nAlso, if it's not too much trouble, could you add git tags for the releases?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/12", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/12/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/12/events", "html_url": "https://github.com/joke2k/django-environ/issues/12", "id": 41803493, "node_id": "MDU6SXNzdWU0MTgwMzQ5Mw==", "number": 12, "title": "DATABASE_UR postgresql alias: pgsql | psql", "user": {"login": "guglielmo", "id": 97271, "node_id": "MDQ6VXNlcjk3Mjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/97271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guglielmo", "html_url": "https://github.com/guglielmo", "followers_url": "https://api.github.com/users/guglielmo/followers", "following_url": "https://api.github.com/users/guglielmo/following{/other_user}", "gists_url": "https://api.github.com/users/guglielmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/guglielmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guglielmo/subscriptions", "organizations_url": "https://api.github.com/users/guglielmo/orgs", "repos_url": "https://api.github.com/users/guglielmo/repos", "events_url": "https://api.github.com/users/guglielmo/events{/privacy}", "received_events_url": "https://api.github.com/users/guglielmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-03T10:50:12Z", "updated_at": "2014-09-03T13:26:08Z", "closed_at": "2014-09-03T13:26:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `psql` instead of `pgsql`, as the postgresql alias in the `DATABASE_URL`::\n\n```\nDATABASE_URL=psql://postgres@localhost/db_name\n```\n\nresults in the following error::\n\n```\n...\nFile \"/home/virtualenvs/odl_datasets_survey/local/lib/python2.7/site-packages/south/models.py\", line 2, in <module>\n  from south.db import DEFAULT_DB_ALIAS\nFile \"/home/virtualenvs/odl_datasets_survey/local/lib/python2.7/site-packages/south/db/__init__.py\", line 84, in <module>\n  db = dbs[DEFAULT_DB_ALIAS]\nKeyError: 'default'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/10", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/10/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/10/events", "html_url": "https://github.com/joke2k/django-environ/issues/10", "id": 36668549, "node_id": "MDU6SXNzdWUzNjY2ODU0OQ==", "number": 10, "title": "Typo doc", "user": {"login": "moimael", "id": 1479859, "node_id": "MDQ6VXNlcjE0Nzk4NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1479859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moimael", "html_url": "https://github.com/moimael", "followers_url": "https://api.github.com/users/moimael/followers", "following_url": "https://api.github.com/users/moimael/following{/other_user}", "gists_url": "https://api.github.com/users/moimael/gists{/gist_id}", "starred_url": "https://api.github.com/users/moimael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moimael/subscriptions", "organizations_url": "https://api.github.com/users/moimael/orgs", "repos_url": "https://api.github.com/users/moimael/repos", "events_url": "https://api.github.com/users/moimael/events{/privacy}", "received_events_url": "https://api.github.com/users/moimael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-27T14:26:56Z", "updated_at": "2015-12-25T18:58:25Z", "closed_at": "2015-12-25T18:58:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nIn the documentation for the dict type, the prototype is this:\n\ndict (BAR=key=val;foo=bar)\n\nit should be this:\n\ndict (BAR=key=val,foo=bar)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/9", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/9/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/9/events", "html_url": "https://github.com/joke2k/django-environ/issues/9", "id": 36665224, "node_id": "MDU6SXNzdWUzNjY2NTIyNA==", "number": 9, "title": "Add external server", "user": {"login": "moimael", "id": 1479859, "node_id": "MDQ6VXNlcjE0Nzk4NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1479859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moimael", "html_url": "https://github.com/moimael", "followers_url": "https://api.github.com/users/moimael/followers", "following_url": "https://api.github.com/users/moimael/following{/other_user}", "gists_url": "https://api.github.com/users/moimael/gists{/gist_id}", "starred_url": "https://api.github.com/users/moimael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moimael/subscriptions", "organizations_url": "https://api.github.com/users/moimael/orgs", "repos_url": "https://api.github.com/users/moimael/repos", "events_url": "https://api.github.com/users/moimael/events{/privacy}", "received_events_url": "https://api.github.com/users/moimael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-27T13:50:42Z", "updated_at": "2015-12-25T19:02:23Z", "closed_at": "2015-12-25T19:02:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi again,\n\nIn our Django project we make ssh connections and scp to external server. \n\nNow they are configured like this:\n\nSERVERS = {\n    'asterisk': {\n        'HOST': 'my_host',\n        'PORT': '22',\n        'LOGIN': 'login',\n        'PASSWORD': 'password',\n        'PKEY': '~/.ssh/id_rsa',\n        'PKEY_SECRET': ''\n    },\n    'archive': {\n        'HOST': 'host',\n        'PORT': '22',\n        'LOGIN': 'login',\n        'PASSWORD': 'password',\n        'PKEY': '~/.ssh/id_rsa',\n        'PKEY_SECRET': ''\n    }\n}\n\nWhat do you think about having something along env.db() (let's say env.server()) to manage this type of use case ?\n\nThanks !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/7", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/7/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/7/events", "html_url": "https://github.com/joke2k/django-environ/issues/7", "id": 36651363, "node_id": "MDU6SXNzdWUzNjY1MTM2Mw==", "number": 7, "title": "EMAIL_URL example", "user": {"login": "moimael", "id": 1479859, "node_id": "MDQ6VXNlcjE0Nzk4NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1479859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moimael", "html_url": "https://github.com/moimael", "followers_url": "https://api.github.com/users/moimael/followers", "following_url": "https://api.github.com/users/moimael/following{/other_user}", "gists_url": "https://api.github.com/users/moimael/gists{/gist_id}", "starred_url": "https://api.github.com/users/moimael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moimael/subscriptions", "organizations_url": "https://api.github.com/users/moimael/orgs", "repos_url": "https://api.github.com/users/moimael/repos", "events_url": "https://api.github.com/users/moimael/events{/privacy}", "received_events_url": "https://api.github.com/users/moimael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-27T10:09:53Z", "updated_at": "2015-12-25T19:09:31Z", "closed_at": "2015-12-25T19:09:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nIt would be great to have an EMAIL_URL sample to see what syntax it accept, like for DATABASE_URL.\n\nFor example does it support username with an @ in it ?\nWhere do I put the smtp server + port ?\n\nThanks for this awesome project !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/6", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/6/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/6/events", "html_url": "https://github.com/joke2k/django-environ/issues/6", "id": 36583363, "node_id": "MDU6SXNzdWUzNjU4MzM2Mw==", "number": 6, "title": "Add LDAP DB url", "user": {"login": "moimael", "id": 1479859, "node_id": "MDQ6VXNlcjE0Nzk4NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1479859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moimael", "html_url": "https://github.com/moimael", "followers_url": "https://api.github.com/users/moimael/followers", "following_url": "https://api.github.com/users/moimael/following{/other_user}", "gists_url": "https://api.github.com/users/moimael/gists{/gist_id}", "starred_url": "https://api.github.com/users/moimael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moimael/subscriptions", "organizations_url": "https://api.github.com/users/moimael/orgs", "repos_url": "https://api.github.com/users/moimael/repos", "events_url": "https://api.github.com/users/moimael/events{/privacy}", "received_events_url": "https://api.github.com/users/moimael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-26T14:54:56Z", "updated_at": "2014-09-03T13:28:50Z", "closed_at": "2014-09-03T13:28:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI'm using django-ldapdb in my project, so I have to add an ldap db to my DATABASES var.\n\nDo you think it would be possible for django-environ to support it ?\n\nThanks !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/4", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/4/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/4/events", "html_url": "https://github.com/joke2k/django-environ/issues/4", "id": 32064660, "node_id": "MDU6SXNzdWUzMjA2NDY2MA==", "number": 4, "title": "add `redis_url_config`", "user": {"login": "fcurella", "id": 89607, "node_id": "MDQ6VXNlcjg5NjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/89607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcurella", "html_url": "https://github.com/fcurella", "followers_url": "https://api.github.com/users/fcurella/followers", "following_url": "https://api.github.com/users/fcurella/following{/other_user}", "gists_url": "https://api.github.com/users/fcurella/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcurella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcurella/subscriptions", "organizations_url": "https://api.github.com/users/fcurella/orgs", "repos_url": "https://api.github.com/users/fcurella/repos", "events_url": "https://api.github.com/users/fcurella/events{/privacy}", "received_events_url": "https://api.github.com/users/fcurella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-23T14:19:57Z", "updated_at": "2014-06-03T13:38:31Z", "closed_at": "2014-06-03T13:38:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It wuold be nice to have a method that works just like `db_url_config`, but for a `REDIS` setting. See https://github.com/dstufft/dj-redis-url\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/joke2k/django-environ/issues/3", "repository_url": "https://api.github.com/repos/joke2k/django-environ", "labels_url": "https://api.github.com/repos/joke2k/django-environ/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/joke2k/django-environ/issues/3/comments", "events_url": "https://api.github.com/repos/joke2k/django-environ/issues/3/events", "html_url": "https://github.com/joke2k/django-environ/issues/3", "id": 31128518, "node_id": "MDU6SXNzdWUzMTEyODUxOA==", "number": 3, "title": "django-environ not installable under python 3.3", "user": {"login": "llnz", "id": 97743, "node_id": "MDQ6VXNlcjk3NzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/97743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llnz", "html_url": "https://github.com/llnz", "followers_url": "https://api.github.com/users/llnz/followers", "following_url": "https://api.github.com/users/llnz/following{/other_user}", "gists_url": "https://api.github.com/users/llnz/gists{/gist_id}", "starred_url": "https://api.github.com/users/llnz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llnz/subscriptions", "organizations_url": "https://api.github.com/users/llnz/orgs", "repos_url": "https://api.github.com/users/llnz/repos", "events_url": "https://api.github.com/users/llnz/events{/privacy}", "received_events_url": "https://api.github.com/users/llnz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-09T04:14:16Z", "updated_at": "2014-06-04T11:26:08Z", "closed_at": "2014-06-03T13:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `pip install django-environ` in a python 3.3 (and other py3k) environment gives a syntax error:\n\n```\nInstalling collected packages: Django, django-environ\n  Running setup.py install for django-environ\n\n      File \"/home/lee/tmp/analyticshub/venv/lib/python3.3/site-packages/environ/test.py\", line 237\n        print \"{0}={1}\".format(key, value)\n                      ^\n    SyntaxError: invalid syntax\n```\n\nThe print statement is now a function, ie `print(\"{0}={1}\".format(key, value))`\n", "performed_via_github_app": null, "score": 1.0}]}