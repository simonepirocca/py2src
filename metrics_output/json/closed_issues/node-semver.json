{"total_count": 12, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/podhmo/python-semver/issues/34", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/34/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/34/events", "html_url": "https://github.com/podhmo/python-semver/issues/34", "id": 522905262, "node_id": "MDU6SXNzdWU1MjI5MDUyNjI=", "number": 34, "title": "Handling of version numbers with more than three digits", "user": {"login": "jasal82", "id": 43233047, "node_id": "MDQ6VXNlcjQzMjMzMDQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/43233047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasal82", "html_url": "https://github.com/jasal82", "followers_url": "https://api.github.com/users/jasal82/followers", "following_url": "https://api.github.com/users/jasal82/following{/other_user}", "gists_url": "https://api.github.com/users/jasal82/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasal82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasal82/subscriptions", "organizations_url": "https://api.github.com/users/jasal82/orgs", "repos_url": "https://api.github.com/users/jasal82/repos", "events_url": "https://api.github.com/users/jasal82/events{/privacy}", "received_events_url": "https://api.github.com/users/jasal82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-11-14T14:46:02Z", "updated_at": "2019-11-30T04:59:39Z", "closed_at": "2019-11-30T04:59:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to apply numeric ordering for version numbers that use more than three digits? We are indirect users of python-semver via the Conan C++ package manager which uses python-semver to resolve and order package versions. There we have some legacy components that use four-digit version numbers. The fourth digit is currently not significant and completely ignored in the ordering. The order is not even consistent between different systems, so on some machines e.g. 3.8.0.1 is considered newer than 3.8.0.0 whereas another machine orders it the other way around.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/30", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/30/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/30/events", "html_url": "https://github.com/podhmo/python-semver/issues/30", "id": 479561984, "node_id": "MDU6SXNzdWU0Nzk1NjE5ODQ=", "number": 30, "title": "Python 2: two tests fail with DID NOT RAISE class 'semver.InvalidTypeIncluded'", "user": {"login": "sbraz", "id": 4833332, "node_id": "MDQ6VXNlcjQ4MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4833332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbraz", "html_url": "https://github.com/sbraz", "followers_url": "https://api.github.com/users/sbraz/followers", "following_url": "https://api.github.com/users/sbraz/following{/other_user}", "gists_url": "https://api.github.com/users/sbraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbraz/subscriptions", "organizations_url": "https://api.github.com/users/sbraz/orgs", "repos_url": "https://api.github.com/users/sbraz/repos", "events_url": "https://api.github.com/users/sbraz/events{/privacy}", "received_events_url": "https://api.github.com/users/sbraz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-12T10:01:02Z", "updated_at": "2019-08-12T11:58:20Z", "closed_at": "2019-08-12T11:58:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nUsing the latest git master, two tests fail with Python 2.7.16 and PyPy:\r\n```\r\n==================================================================================================== FAILURES =====================================================================================================\r\n_______________________________________________________________________________________________ test_max_satisfying _______________________________________________________________________________________________\r\n\r\n    def test_max_satisfying():\r\n        def _callFUT(versions, range_):\r\n            from semver import max_satisfying\r\n            max_satisfying(versions, range_)\r\n    \r\n        from semver import InvalidTypeIncluded\r\n        with pytest.raises(InvalidTypeIncluded):\r\n>           _callFUT([b\"1.0.0\"], \"1.0.0\")\r\nE           Failed: DID NOT RAISE <class 'semver.InvalidTypeIncluded'>\r\n\r\nsemver/tests/test_passing_bytes.py:11: Failed\r\n_________________________________________________________________________________________________ test_satisfies __________________________________________________________________________________________________\r\n\r\n    def test_satisfies():\r\n        def _callFUT(version, range_):\r\n            from semver import satisfies\r\n            satisfies(version, range_)\r\n    \r\n        from semver import InvalidTypeIncluded\r\n        with pytest.raises(InvalidTypeIncluded):\r\n>           _callFUT(b\"1.0.0\", \"1.0.0\")\r\nE           Failed: DID NOT RAISE <class 'semver.InvalidTypeIncluded'>\r\n\r\nsemver/tests/test_passing_bytes.py:28: Failed\r\n================================================================================ 2 failed, 1124 passed, 5 skipped in 1.61 seconds =================================================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/26", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/26/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/26/events", "html_url": "https://github.com/podhmo/python-semver/issues/26", "id": 383575180, "node_id": "MDU6SXNzdWUzODM1NzUxODA=", "number": 26, "title": "max_satisfying doesn't work with byte-strings on Python3", "user": {"login": "jeverling", "id": 121946, "node_id": "MDQ6VXNlcjEyMTk0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/121946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeverling", "html_url": "https://github.com/jeverling", "followers_url": "https://api.github.com/users/jeverling/followers", "following_url": "https://api.github.com/users/jeverling/following{/other_user}", "gists_url": "https://api.github.com/users/jeverling/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeverling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeverling/subscriptions", "organizations_url": "https://api.github.com/users/jeverling/orgs", "repos_url": "https://api.github.com/users/jeverling/repos", "events_url": "https://api.github.com/users/jeverling/events{/privacy}", "received_events_url": "https://api.github.com/users/jeverling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-22T15:11:53Z", "updated_at": "2018-12-04T22:13:57Z", "closed_at": "2018-12-04T05:09:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Python 3, if you pass byte-strings to `max_satisfying`, it returns `None`.\r\n\r\nThe reason is a `TypeError: cannot use a string pattern on a bytes-like object` exception in [semver#L740](https://github.com/podhmo/python-semver/blob/e60ed50e438c5c58c4298a44c9204a38f9d766b6/semver/__init__.py#L740), however this exception is masked by a bare `except` statement in [semver#L1079](https://github.com/podhmo/python-semver/blob/e60ed50e438c5c58c4298a44c9204a38f9d766b6/semver/__init__.py#L1079), that leads to `max_satisfying` returning `None`.\r\n\r\nI think it would be good to document that byte-strings need to be decoded before they can be passed to *semver*.\r\nAlternatively, the library could try to decode byte-strings before using them, which should be reasonably easy because semvers are supposed to be ascii only.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/21", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/21/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/21/events", "html_url": "https://github.com/podhmo/python-semver/issues/21", "id": 375256666, "node_id": "MDU6SXNzdWUzNzUyNTY2NjY=", "number": 21, "title": "SemVer.__init__() can fail with UnboundLocalError on python-semver 0.4.2", "user": {"login": "tivek", "id": 680792, "node_id": "MDQ6VXNlcjY4MDc5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/680792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tivek", "html_url": "https://github.com/tivek", "followers_url": "https://api.github.com/users/tivek/followers", "following_url": "https://api.github.com/users/tivek/following{/other_user}", "gists_url": "https://api.github.com/users/tivek/gists{/gist_id}", "starred_url": "https://api.github.com/users/tivek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tivek/subscriptions", "organizations_url": "https://api.github.com/users/tivek/orgs", "repos_url": "https://api.github.com/users/tivek/repos", "events_url": "https://api.github.com/users/tivek/events{/privacy}", "received_events_url": "https://api.github.com/users/tivek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-10-29T23:21:41Z", "updated_at": "2018-11-23T09:57:35Z", "closed_at": "2018-11-23T09:57:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found this bug while testing Conan with a newer python-semver.\r\n\r\nTo reproduce:\r\n```Python 3.6.6 (default, Jul 19 2018, 14:25:17) \r\n[GCC 8.1.1 20180712 (Red Hat 8.1.1-5)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from semver import SemVer\r\n>>> SemVer(\"1.a.1\", loose=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/tivek/projects/python-semver/semver/__init__.py\", line 340, in __init__\r\n    other.append(k)\r\nUnboundLocalError: local variable 'other' referenced before assignment\r\n```\r\n\r\nThe last if-elif-else branch https://github.com/podhmo/python-semver/blob/c45457208647ea6f378f9f728b5ac55fd0a65dfc/semver/__init__.py#L334 leaves `other` unassigned.\r\n\r\nInterestingly, `other` remains unused in the rest of the function. Is this var needed at all?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/15", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/15/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/15/events", "html_url": "https://github.com/podhmo/python-semver/issues/15", "id": 364543910, "node_id": "MDU6SXNzdWUzNjQ1NDM5MTA=", "number": 15, "title": "Loose parsing of 4-digit version does not match node.js semver.coerce()", "user": {"login": "puetzk", "id": 3821535, "node_id": "MDQ6VXNlcjM4MjE1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3821535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puetzk", "html_url": "https://github.com/puetzk", "followers_url": "https://api.github.com/users/puetzk/followers", "following_url": "https://api.github.com/users/puetzk/following{/other_user}", "gists_url": "https://api.github.com/users/puetzk/gists{/gist_id}", "starred_url": "https://api.github.com/users/puetzk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puetzk/subscriptions", "organizations_url": "https://api.github.com/users/puetzk/orgs", "repos_url": "https://api.github.com/users/puetzk/repos", "events_url": "https://api.github.com/users/puetzk/events{/privacy}", "received_events_url": "https://api.github.com/users/puetzk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-27T15:55:31Z", "updated_at": "2018-10-31T08:54:12Z", "closed_at": "2018-10-31T08:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "First reported at conan-io/conan#3627\r\n\r\nI have some packages that use 4-field version numbers, because they must provide win32 version resources and manifests, and those don't allow the 4th field to be omitted. However, we don't really use the last field (because it has no semver-defined meaning), so it's just 0 (or occasionally a build iteration that doesn't need to participate in comparisons any more than the `+build` field would).\r\n\r\nIn struct mode, your package rejects these (correctly). However, in loose mode, the python semver package seems to take the first, second, and *last* of the dotted fields for major/minor/patch in loose mode, ignoring the 3rd (patch) field where the difference is. This leads to it making no distinction between 4.1.1.0, 4.1.2.0, 4.1.3.0, etc; they all parse to <SemVer 4.1.0>.\r\n\r\n```python\r\n>>> from semver import make_semver, max_satisfying\r\n\r\n>>> make_semver('4.1.3.0', loose=False)\r\nValueError: Invalid Version: 4.1.3.0\r\n\r\n>>> make_semver('4.1.3.0', loose=True)\r\n<SemVer 4.1.0 >\r\n\r\n>>> max_satisfying(['3.1.1','4.1.1.0', '4.1.2.0','4.1.3.0'], '^4.1',loose=True)\r\n'4.1.1.0'\r\n>>> max_satisfying([''3.1.1', 4.1.2.0', '4.1.1.0','4.1.3.0'], '^4.1',loose=True)\r\n'4.1.2.0'\r\n```\r\n\r\n\r\nThis was an unexpected choice, and it does not agree with the behavior of the node.js semver package it's nominally a clone of: https://repl.it/repls/CompetentImpossibleCookie\r\n\r\n```js\r\nconst semver = require('semver');\r\n\r\nconsole.log('4.1.3.0 -> ' + semver.coerce('4.1.3.0'))\r\nconsole.log('4.1.3.1 -> ' + semver.coerce('4.1.3.0'))\r\nconsole.log(semver.maxSatisfying([semver.coerce('4.1.0.0'),semver.coerce('4.1.1.0'),semver.coerce('4.1.3.0')], '^4.1'))\r\n```\r\n\r\nWhere coercing 4.1.3.0 yields 4.1.3, as I thought it would\r\n\r\n```\r\n4.1.3.0 -> 4.1.3\r\n4.1.3.1 -> 4.1.3\r\nSemVer {\r\n  loose: undefined,\r\n  raw: '4.1.3',\r\n  major: 4,\r\n  minor: 1,\r\n  patch: 3,\r\n  prerelease: [],\r\n  build: [],\r\n  version: '4.1.3' }\r\n```\r\n\r\nThis leads to some further complications (non-determinism) in conan, as max_satisfying seems to break ties (e.g. this bug, or ignored +build fields, or whatever) toward the string listed first in the input, and conan doesn't seem to always provide a deterministic sort of of its input. But node.js's semver.maxSatisfying seems to do the same (choose the first-among-equals), at least there you're consistent with the expected behavior, and the nondeterminism seems like conan's issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/13", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/13/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/13/events", "html_url": "https://github.com/podhmo/python-semver/issues/13", "id": 261937247, "node_id": "MDU6SXNzdWUyNjE5MzcyNDc=", "number": 13, "title": "[question] Support for Python 2", "user": {"login": "memsharded", "id": 15367152, "node_id": "MDQ6VXNlcjE1MzY3MTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/15367152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memsharded", "html_url": "https://github.com/memsharded", "followers_url": "https://api.github.com/users/memsharded/followers", "following_url": "https://api.github.com/users/memsharded/following{/other_user}", "gists_url": "https://api.github.com/users/memsharded/gists{/gist_id}", "starred_url": "https://api.github.com/users/memsharded/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memsharded/subscriptions", "organizations_url": "https://api.github.com/users/memsharded/orgs", "repos_url": "https://api.github.com/users/memsharded/repos", "events_url": "https://api.github.com/users/memsharded/events{/privacy}", "received_events_url": "https://api.github.com/users/memsharded/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-01T18:52:15Z", "updated_at": "2018-09-27T22:48:43Z", "closed_at": "2018-09-27T22:48:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see https://github.com/podhmo/python-semver/commit/b42e9896e391e086b773fc621b23fa299d16b874 has removed Python 2, though the code is still compatible, and it works. What are the plans regarding this? Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/12", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/12/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/12/events", "html_url": "https://github.com/podhmo/python-semver/issues/12", "id": 257621616, "node_id": "MDU6SXNzdWUyNTc2MjE2MTY=", "number": 12, "title": "refactoring -- remove make_xxx() function", "user": {"login": "podhmo", "id": 80613, "node_id": "MDQ6VXNlcjgwNjEz", "avatar_url": "https://avatars1.githubusercontent.com/u/80613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podhmo", "html_url": "https://github.com/podhmo", "followers_url": "https://api.github.com/users/podhmo/followers", "following_url": "https://api.github.com/users/podhmo/following{/other_user}", "gists_url": "https://api.github.com/users/podhmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/podhmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podhmo/subscriptions", "organizations_url": "https://api.github.com/users/podhmo/orgs", "repos_url": "https://api.github.com/users/podhmo/repos", "events_url": "https://api.github.com/users/podhmo/events{/privacy}", "received_events_url": "https://api.github.com/users/podhmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-14T07:30:59Z", "updated_at": "2017-09-14T13:53:36Z", "closed_at": "2017-09-14T13:53:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "define function such like below.\r\n```python\r\ndef make_range(range_, loose):\r\n    if isinstance(range_, Range) and range_.loose == loose:\r\n        return range_\r\n\r\n    # if (!(this instanceof Range))\r\n    #    return new Range(range, loose);\r\n    return Range(range_, loose)\r\n```\r\n\r\nI have defined these functions for js and python compatibility. but these are needless.\r\n\r\nusing `__new__()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/9", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/9/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/9/events", "html_url": "https://github.com/podhmo/python-semver/issues/9", "id": 257340640, "node_id": "MDU6SXNzdWUyNTczNDA2NDA=", "number": 9, "title": "infinite recursion, when repr(semver)", "user": {"login": "podhmo", "id": 80613, "node_id": "MDQ6VXNlcjgwNjEz", "avatar_url": "https://avatars1.githubusercontent.com/u/80613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podhmo", "html_url": "https://github.com/podhmo", "followers_url": "https://api.github.com/users/podhmo/followers", "following_url": "https://api.github.com/users/podhmo/following{/other_user}", "gists_url": "https://api.github.com/users/podhmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/podhmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podhmo/subscriptions", "organizations_url": "https://api.github.com/users/podhmo/orgs", "repos_url": "https://api.github.com/users/podhmo/repos", "events_url": "https://api.github.com/users/podhmo/events{/privacy}", "received_events_url": "https://api.github.com/users/podhmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-13T11:02:56Z", "updated_at": "2017-09-13T16:20:23Z", "closed_at": "2017-09-13T16:20:23Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/5", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/5/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/5/events", "html_url": "https://github.com/podhmo/python-semver/issues/5", "id": 257109333, "node_id": "MDU6SXNzdWUyNTcxMDkzMzM=", "number": 5, "title": "Pre-releases having precedence over releases", "user": {"login": "memsharded", "id": 15367152, "node_id": "MDQ6VXNlcjE1MzY3MTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/15367152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memsharded", "html_url": "https://github.com/memsharded", "followers_url": "https://api.github.com/users/memsharded/followers", "following_url": "https://api.github.com/users/memsharded/following{/other_user}", "gists_url": "https://api.github.com/users/memsharded/gists{/gist_id}", "starred_url": "https://api.github.com/users/memsharded/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memsharded/subscriptions", "organizations_url": "https://api.github.com/users/memsharded/orgs", "repos_url": "https://api.github.com/users/memsharded/repos", "events_url": "https://api.github.com/users/memsharded/events{/privacy}", "received_events_url": "https://api.github.com/users/memsharded/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-09-12T16:39:29Z", "updated_at": "2017-09-13T17:20:32Z", "closed_at": "2017-09-13T16:54:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that pre-releases have precedence over releases, i.e.:\r\n\r\n```python\r\nresult = satisfying([\"1.1.1\", \"1.1.1-11\", \"1.1.1-111\", \"1.1.1-21\"], \"\", output)\r\nself.assertEqual(result, \"1.1.1-111\")  # Wrong, should be 1.1.1\r\n```\r\nwhere ``satisfying`` is just a small wrapper of ``max_satisfying`` to convert from the strings to ``SemVer(v, loose=True)``\r\n\r\nI have had a look to the code, but couldn't figure out a fix. Many thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/4", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/4/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/4/events", "html_url": "https://github.com/podhmo/python-semver/issues/4", "id": 221423283, "node_id": "MDU6SXNzdWUyMjE0MjMyODM=", "number": 4, "title": "Error while testing build of 0.1.1", "user": {"login": "mucaho", "id": 3935691, "node_id": "MDQ6VXNlcjM5MzU2OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3935691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mucaho", "html_url": "https://github.com/mucaho", "followers_url": "https://api.github.com/users/mucaho/followers", "following_url": "https://api.github.com/users/mucaho/following{/other_user}", "gists_url": "https://api.github.com/users/mucaho/gists{/gist_id}", "starred_url": "https://api.github.com/users/mucaho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mucaho/subscriptions", "organizations_url": "https://api.github.com/users/mucaho/orgs", "repos_url": "https://api.github.com/users/mucaho/repos", "events_url": "https://api.github.com/users/mucaho/events{/privacy}", "received_events_url": "https://api.github.com/users/mucaho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-13T00:02:02Z", "updated_at": "2017-09-14T02:23:37Z", "closed_at": "2017-09-13T16:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get an `AssertionError` when trying to build on linux with node-semver@0.1.1.\r\n```shell\r\nrunning build_ext\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.5.3, pytest-3.0.7, py-1.4.33, pluggy-0.4.0\r\nrootdir: /tmp/nix-build-python3.5-node-semver-0.1.1.drv-0/node-semver-0.1.1, inifile: setup.cfg\r\ncollected 993 items\r\n\r\nsemver/tests/test_comparators.py ..................................................................\r\nsemver/tests/test_comparison.py ..................................................................................................................................................................................................................................................................................................\r\nsemver/tests/test_equality.py ..................................................................................................................................................................................................................................................................................................................................................................................\r\nsemver/tests/test_increment_version.py ...................................\r\nsemver/tests/test_invalid_version_number.py .....\r\nsemver/tests/test_max_satisfying.py ....\r\nsemver/tests/test_negative_range.py ....................................................F.\r\nsemver/tests/test_range.py .......................................................................................\r\nsemver/tests/test_recovery.py ...\r\nsemver/tests/test_strict_vs_loose_version_number.py .......\r\nsemver/tests/test_valid_range.py ........................................................................\r\n\r\n=================================== FAILURES ===================================\r\n______ test_it[git+https://user:password0123@github.com/foo-123.0.0-True] ______\r\n\r\nrange_ = 'git+https://user:password0123@github.com/foo', version = '123.0.0'\r\nloose = True\r\n\r\n    @pytest.mark.parametrize(\"range_, version, loose\", cands)\r\n    def test_it(range_, version, loose):\r\n        from semver import satisfies\r\n>       assert (not satisfies(version, range_, loose)) is True\r\nE       AssertionError: assert not True is True\r\nE        +  where True = <function satisfies at 0x7ffff1746d90>('123.0.0', 'git+https://user:password0123@github.com/foo', True)\r\n\r\nsemver/tests/test_negative_range.py:72: AssertionError\r\n============================ pytest-warning summary ============================\r\nWC1 None [pytest] section in setup.cfg files is deprecated, use [tool:pytest] instead.\r\n=========== 1 failed, 992 passed, 1 pytest-warnings in 1.89 seconds ============\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/2", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/2/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/2/events", "html_url": "https://github.com/podhmo/python-semver/issues/2", "id": 185464334, "node_id": "MDU6SXNzdWUxODU0NjQzMzQ=", "number": 2, "title": "License?", "user": {"login": "blink1073", "id": 2096628, "node_id": "MDQ6VXNlcjIwOTY2Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blink1073", "html_url": "https://github.com/blink1073", "followers_url": "https://api.github.com/users/blink1073/followers", "following_url": "https://api.github.com/users/blink1073/following{/other_user}", "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}", "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions", "organizations_url": "https://api.github.com/users/blink1073/orgs", "repos_url": "https://api.github.com/users/blink1073/repos", "events_url": "https://api.github.com/users/blink1073/events{/privacy}", "received_events_url": "https://api.github.com/users/blink1073/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-26T17:52:25Z", "updated_at": "2016-10-28T11:31:45Z", "closed_at": "2016-10-28T11:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @podhmo, thank you for this library!  \n\nWould you be willing to add a BSD-compatible license to this library, either as a standalone file or in `setup.py`?  I am more than happy to submit a PR. \n\nOur library, [JupyterLab](https://github.com/jupyterlab/jupyterlab), uses \"License :: OSI Approved :: BSD License\" and we would like to vendor the main source file of this repo rather than add a package dependency, since npm semver is not generally applicable to the user's environment when they are using JupyterLab, but is an implementation detail of how we serve pre-built JavaScript files.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/podhmo/python-semver/issues/1", "repository_url": "https://api.github.com/repos/podhmo/python-semver", "labels_url": "https://api.github.com/repos/podhmo/python-semver/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/podhmo/python-semver/issues/1/comments", "events_url": "https://api.github.com/repos/podhmo/python-semver/issues/1/events", "html_url": "https://github.com/podhmo/python-semver/issues/1", "id": 91238012, "node_id": "MDU6SXNzdWU5MTIzODAxMg==", "number": 1, "title": "No unicode?", "user": {"login": "gjedeer", "id": 315648, "node_id": "MDQ6VXNlcjMxNTY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/315648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjedeer", "html_url": "https://github.com/gjedeer", "followers_url": "https://api.github.com/users/gjedeer/followers", "following_url": "https://api.github.com/users/gjedeer/following{/other_user}", "gists_url": "https://api.github.com/users/gjedeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjedeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjedeer/subscriptions", "organizations_url": "https://api.github.com/users/gjedeer/orgs", "repos_url": "https://api.github.com/users/gjedeer/repos", "events_url": "https://api.github.com/users/gjedeer/events{/privacy}", "received_events_url": "https://api.github.com/users/gjedeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-26T12:30:01Z", "updated_at": "2018-09-27T22:49:39Z", "closed_at": "2018-09-27T22:49:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nice job on this package!\n\nIs unicode unsupported by design or is it a bug? When the list of versions contains an unicode string, an \"Invalid version\" ValueError is raised here:\n\nhttps://github.com/podhmo/python-semver/blob/master/semver/__init__.py#L288\n", "performed_via_github_app": null, "score": 1.0}]}