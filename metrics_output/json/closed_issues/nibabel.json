{"total_count": 268, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nipy/nibabel/issues/937", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/937/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/937/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/937/events", "html_url": "https://github.com/nipy/nibabel/issues/937", "id": 662664203, "node_id": "MDU6SXNzdWU2NjI2NjQyMDM=", "number": 937, "title": "Test suite failures", "user": {"login": "tillea", "id": 9447939, "node_id": "MDQ6VXNlcjk0NDc5Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9447939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillea", "html_url": "https://github.com/tillea", "followers_url": "https://api.github.com/users/tillea/followers", "following_url": "https://api.github.com/users/tillea/following{/other_user}", "gists_url": "https://api.github.com/users/tillea/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillea/subscriptions", "organizations_url": "https://api.github.com/users/tillea/orgs", "repos_url": "https://api.github.com/users/tillea/repos", "events_url": "https://api.github.com/users/tillea/events{/privacy}", "received_events_url": "https://api.github.com/users/tillea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-21T06:53:17Z", "updated_at": "2020-07-21T13:59:42Z", "closed_at": "2020-07-21T13:59:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthe current Debian package is not really up to date and thus the [bug log](https://bugs.debian.org/964610) not relevant for your latest version.  However, I have updated nibabel in Debian packaging Git and realised that there are also several test suite errors with Python3.8.  Here is the log:\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.cmdline.tests.test_conform.test_default\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_default() missing 1 required positional argument: 'tmpdir'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.cmdline.tests.test_conform.test_nondefault\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_nondefault() missing 1 required positional argument: 'tmpdir'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.externals.tests.test_netcdf.test_read_write_files\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_read_write_files() missing 1 required positional argument: 'tmp_path'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.gifti.tests.test_giftiio.test_read_deprecated\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_read_deprecated() missing 1 required positional argument: 'tmp_path'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_data_path\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_data_path() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_make_datasource\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_make_datasource() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_bomber\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n      File \"/build/nibabel-3.1.1/nibabel/tests/test_data.py\", line 206, in test_bomber\r\n        b.any_attribute  # no error\r\n      File \"/build/nibabel-3.1.1/nibabel/data.py\", line 316, in __getattr__\r\n        raise BomberError(\r\n    nibabel.data.BomberError: Trying to access attribute \"any_attribute\" of non-existent data \"bomber example\"\r\n\r\n    a message\r\n\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_datasource_or_bomber\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_datasource_or_bomber() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_environment.test_user_dir\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_user_dir() missing 1 required positional argument: 'with_environment'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_euler.test_euler_mat_2\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_euler_mat_2() missing 3 required positional arguments: 'x', 'y', and 'z'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_euler.test_quats\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_quats() missing 3 required positional arguments: 'x', 'y', and 'z'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_init.test_nibabel_test\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_nibabel_test() missing 4 required positional arguments: 'verbose', 'v_args', 'doctests', and 'coverage'\r\n\r\n    ======================================================================\r\n    ERROR: nibabelok\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.cmdline.tests.test_conform.test_default\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_default() missing 1 required positional argument: 'tmpdir'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.cmdline.tests.test_conform.test_nondefault\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_nondefault() missing 1 required positional argument: 'tmpdir'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.externals.tests.test_netcdf.test_read_write_files\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_read_write_files() missing 1 required positional argument: 'tmp_path'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.gifti.tests.test_giftiio.test_read_deprecated\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_read_deprecated() missing 1 required positional argument: 'tmp_path'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_data_path\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_data_path() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_make_datasource\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_make_datasource() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_data.test_bomber\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n      File \"/build/nibabel-3.1.1/nibabel/tests/test_data\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_finite_range\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_finite_range() missing 2 required positional arguments: 'in_arr' and 'res'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_a2f_mn_mx\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_a2f_mn_mx() missing 1 required positional argument: 'out_type'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_array_file_scales\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_array_file_scales() missing 2 required positional arguments: 'in_type' and 'out_type'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_scaling_in_abstract\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_scaling_in_abstract() missing 3 required positional arguments: 'category0', 'category1', and 'overflow'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scripts.test_nib_ls\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_nib_ls() missing 1 required positional argument: 'args'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_spaces.test_slice2volume_exception\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_slice2volume_exception() missing 2 required positional arguments: 'index' and 'axis'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_testing.test_assert_re_in\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_assert_re_in() missing 2 required positional arguments: 'regex' and 'entries'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_quaternions.test_qrotate\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_qrotate() missing 3 required positional arguments: 'vec', 'M', and 'q'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_quaternions.test_quaternion_reconstruction\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_quaternion_reconstruction() missing 1 required positional argument: 'q'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_finite_range\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_finite_range() missing 2 required positional arguments: 'in_arr' and 'res'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_a2f_mn_mx\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_a2f_mn_mx() missing 1 required positional argument: 'out_type'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_array_file_scales\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_array_file_scales() missing 2 required positional arguments: 'in_type' and 'out_type'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scaling.test_scaling_in_abstract\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_scaling_in_abstract() missing 3 required positional arguments: 'category0', 'category1', and 'overflow'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_scripts.test_nib_ls\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_nib_ls() missing 1 required positional argument: 'args'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_spaces.test_slice2volume_exception\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_slice2volume_exception() missing 2 required positional arguments: 'index' and 'axis'\r\n\r\n    ======================================================================\r\n    ERROR: nibabel.tests.test_testing.test_assert_re_in\r\n    ----------------------------------------------------------------------\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3/dist-packages/nose/case.py\", line 197, in runTest\r\n        self.test(*self.arg)\r\n    TypeError: test_assert_re_in() missing 2 required positional arguments: 'regex' and 'entries'\r\n\r\n    ----------------------------------------------------------------------\r\n    Ran 2018 tests in 164.382s\r\n\r\n    FAILED (SKIP=64, errors=26)\r\n\r\n\r\nI admit I have not checked recent commits past version 3.1.1 whether some of these tests are fixed meanwhile.\r\n\r\nKind regards, Andreas.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/928", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/928/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/928/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/928/events", "html_url": "https://github.com/nipy/nibabel/issues/928", "id": 649108040, "node_id": "MDU6SXNzdWU2NDkxMDgwNDA=", "number": 928, "title": "RGB of nii files", "user": {"login": "arushgupta2007", "id": 39236387, "node_id": "MDQ6VXNlcjM5MjM2Mzg3", "avatar_url": "https://avatars2.githubusercontent.com/u/39236387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arushgupta2007", "html_url": "https://github.com/arushgupta2007", "followers_url": "https://api.github.com/users/arushgupta2007/followers", "following_url": "https://api.github.com/users/arushgupta2007/following{/other_user}", "gists_url": "https://api.github.com/users/arushgupta2007/gists{/gist_id}", "starred_url": "https://api.github.com/users/arushgupta2007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arushgupta2007/subscriptions", "organizations_url": "https://api.github.com/users/arushgupta2007/orgs", "repos_url": "https://api.github.com/users/arushgupta2007/repos", "events_url": "https://api.github.com/users/arushgupta2007/events{/privacy}", "received_events_url": "https://api.github.com/users/arushgupta2007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-01T16:17:52Z", "updated_at": "2020-07-02T06:30:35Z", "closed_at": "2020-07-02T06:30:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am getting image data in 16bit while I would like to get the image data in RGB.\r\nThe current information is got by ImageJ:\r\n![20200701_214430](https://user-images.githubusercontent.com/39236387/86267488-67679280-bbe4-11ea-9f9c-7fb854deb21e.jpg)\r\nIs there a API for this?\r\nI could not find it in the docs!\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/924", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/924/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/924/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/924/events", "html_url": "https://github.com/nipy/nibabel/issues/924", "id": 639841934, "node_id": "MDU6SXNzdWU2Mzk4NDE5MzQ=", "number": 924, "title": "Affine matrix is not the same between Nibabel and SPM", "user": {"login": "seralouk", "id": 25902670, "node_id": "MDQ6VXNlcjI1OTAyNjcw", "avatar_url": "https://avatars0.githubusercontent.com/u/25902670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seralouk", "html_url": "https://github.com/seralouk", "followers_url": "https://api.github.com/users/seralouk/followers", "following_url": "https://api.github.com/users/seralouk/following{/other_user}", "gists_url": "https://api.github.com/users/seralouk/gists{/gist_id}", "starred_url": "https://api.github.com/users/seralouk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seralouk/subscriptions", "organizations_url": "https://api.github.com/users/seralouk/orgs", "repos_url": "https://api.github.com/users/seralouk/repos", "events_url": "https://api.github.com/users/seralouk/events{/privacy}", "received_events_url": "https://api.github.com/users/seralouk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-16T17:20:39Z", "updated_at": "2020-06-16T18:55:34Z", "closed_at": "2020-06-16T18:20:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just came across this unexpected behavior and incosistency between SPM (matlab) and Nibabel (Python) when looking at the affine transformation matrix of the same nifti file.\r\n\r\nThe matrices are not the same. \r\n\r\nMatlab using SPM:\r\n```\r\nV=spm_vol('/Users/loukas/Desktop/test.nii');\r\nV.mat\r\n\r\nans =\r\n    -2     0     0    92\r\n     0     2     0  -128\r\n     0     0     2   -74\r\n     0     0     0     1\r\n```\r\n\r\nPython\r\n```\r\nimport numpy as np, nibabel as nib\r\n\r\nimg = nib.load(\"/Users/loukas/Desktop/test.nii\")\r\nimg.affine\r\narray([[  -2.,    0.,    0.,   90.],\r\n       [   0.,    2.,    0., -126.],\r\n       [   0.,    0.,    2.,  -72.],\r\n       [   0.,    0.,    0.,    1.]])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/921", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/921/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/921/events", "html_url": "https://github.com/nipy/nibabel/issues/921", "id": 634879816, "node_id": "MDU6SXNzdWU2MzQ4Nzk4MTY=", "number": 921, "title": "Saveing Nifti1 changes the data", "user": {"login": "soroush361", "id": 11195946, "node_id": "MDQ6VXNlcjExMTk1OTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/11195946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soroush361", "html_url": "https://github.com/soroush361", "followers_url": "https://api.github.com/users/soroush361/followers", "following_url": "https://api.github.com/users/soroush361/following{/other_user}", "gists_url": "https://api.github.com/users/soroush361/gists{/gist_id}", "starred_url": "https://api.github.com/users/soroush361/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soroush361/subscriptions", "organizations_url": "https://api.github.com/users/soroush361/orgs", "repos_url": "https://api.github.com/users/soroush361/repos", "events_url": "https://api.github.com/users/soroush361/events{/privacy}", "received_events_url": "https://api.github.com/users/soroush361/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T19:32:16Z", "updated_at": "2020-06-09T20:22:26Z", "closed_at": "2020-06-09T20:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a very short script for image read and write as below:\r\n```\r\nimport numpy as np\r\nimport nibabel as ni\r\n\r\nniftiFile = ni.load('my_image.nii.gz')\r\nheader = niftiFile.header\r\naffine = niftiFile.affine\r\nimg = niftiFile.get_fdata()\r\n\r\nniftiFile2 = ni.Nifti1Image(img, affine=affine, header=header)\r\nniftiFile2.to_filename('my_second_image.nii.gz')\r\n\r\nimg2 = ni.load('my_second_image.nii.gz').get_fdata()\r\n\r\nprint(img[10,10,10])\r\nprint(img2[10,10,10])\r\n```\r\n\r\nBased on the code the print result must be identical, but I got:\r\n```\r\n-844.0\r\n-843.9787130355835\r\n```\r\n\r\nI believe it is something related to `dtype`. But I couldn't figure it out.\r\nMy python version is `3.7.4` and my Nibabel version is `3.1.0`.\r\nCan anyone help me with this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/912", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/912/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/912/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/912/events", "html_url": "https://github.com/nipy/nibabel/issues/912", "id": 619628095, "node_id": "MDU6SXNzdWU2MTk2MjgwOTU=", "number": 912, "title": "Is there a corresponding C ++ library function for NiBabel\uff1f", "user": {"login": "Peterisfar", "id": 31852119, "node_id": "MDQ6VXNlcjMxODUyMTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/31852119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Peterisfar", "html_url": "https://github.com/Peterisfar", "followers_url": "https://api.github.com/users/Peterisfar/followers", "following_url": "https://api.github.com/users/Peterisfar/following{/other_user}", "gists_url": "https://api.github.com/users/Peterisfar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Peterisfar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Peterisfar/subscriptions", "organizations_url": "https://api.github.com/users/Peterisfar/orgs", "repos_url": "https://api.github.com/users/Peterisfar/repos", "events_url": "https://api.github.com/users/Peterisfar/events{/privacy}", "received_events_url": "https://api.github.com/users/Peterisfar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-17T07:01:10Z", "updated_at": "2020-05-25T02:10:19Z", "closed_at": "2020-05-25T02:10:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a corresponding C ++ library function for NiBabel\uff1f\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/908", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/908/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/908/events", "html_url": "https://github.com/nipy/nibabel/issues/908", "id": 610876491, "node_id": "MDU6SXNzdWU2MTA4NzY0OTE=", "number": 908, "title": "Failing tests: Fedora 33 (rawhide): python 3.8", "user": {"login": "sanjayankur31", "id": 102575, "node_id": "MDQ6VXNlcjEwMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjayankur31", "html_url": "https://github.com/sanjayankur31", "followers_url": "https://api.github.com/users/sanjayankur31/followers", "following_url": "https://api.github.com/users/sanjayankur31/following{/other_user}", "gists_url": "https://api.github.com/users/sanjayankur31/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjayankur31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjayankur31/subscriptions", "organizations_url": "https://api.github.com/users/sanjayankur31/orgs", "repos_url": "https://api.github.com/users/sanjayankur31/repos", "events_url": "https://api.github.com/users/sanjayankur31/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjayankur31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-01T17:43:43Z", "updated_at": "2020-05-01T18:43:23Z", "closed_at": "2020-05-01T18:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was updating the package for Fedora, but I see a lot of tests failing. Not sure if this is a Fedora specific error. I'll test it out in a virtual environment now also, but I thought I'd file an issue:\r\n\r\n```\r\n======================================================================\r\nERROR: nibabel.cmdline.tests.test_conform.test_default\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_default() missing 1 required positional argument: 'tmpdir'\r\n\r\n======================================================================\r\nERROR: nibabel.cmdline.tests.test_conform.test_nondefault\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_nondefault() missing 1 required positional argument: 'tmpdir'\r\n\r\n======================================================================\r\nERROR: nibabel.externals.tests.test_netcdf.test_read_write_files\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_read_write_files() missing 1 required positional argument: 'tmp_path'\r\n\r\n======================================================================\r\nERROR: nibabel.gifti.tests.test_giftiio.test_read_deprecated\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_read_deprecated() missing 1 required positional argument: 'tmp_path'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_data.test_data_path\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_data_path() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_data.test_make_datasource\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_make_datasource() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_data.test_bomber\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-3.1.0/nibabel/tests/test_data.py\", line 206, in test_bomber\r\n    b.any_attribute  # no error\r\n  File \"/builddir/build/BUILD/nibabel-3.1.0/nibabel/data.py\", line 316, in __getattr__\r\n    raise BomberError(\r\nnibabel.data.BomberError: Trying to access attribute \"any_attribute\" of non-existent data \"bomber example\"\r\n\r\na message\r\n\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_data.test_datasource_or_bomber\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_datasource_or_bomber() missing 1 required positional argument: 'with_nimd_env'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_environment.test_user_dir\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_user_dir() missing 1 required positional argument: 'with_environment'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_euler.test_euler_mat_2\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_euler_mat_2() missing 3 required positional arguments: 'x', 'y', and 'z'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_euler.test_quats\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_quats() missing 3 required positional arguments: 'x', 'y', and 'z'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_init.test_nibabel_test\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_nibabel_test() missing 4 required positional arguments: 'verbose', 'v_args', 'doctests', and 'coverage'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_pkg_info.test_cmp_pkg_version_1\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_cmp_pkg_version_1() missing 3 required positional arguments: 'test_ver', 'pkg_ver', and 'exp_out'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_pkg_info.test_cmp_pkg_version_error\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_cmp_pkg_version_error() missing 1 required positional argument: 'args'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_quaternions.test_inverse_1\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_inverse_1() missing 2 required positional arguments: 'M' and 'q'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_quaternions.test_mult\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_mult() missing 4 required positional arguments: 'M1', 'q1', 'M2', and 'q2'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_quaternions.test_inverse\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_inverse() missing 2 required positional arguments: 'M' and 'q'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_quaternions.test_qrotate\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_qrotate() missing 3 required positional arguments: 'vec', 'M', and 'q'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_quaternions.test_quaternion_reconstruction\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_quaternion_reconstruction() missing 1 required positional argument: 'q'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_scaling.test_finite_range\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_finite_range() missing 2 required positional arguments: 'in_arr' and 'res'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_scaling.test_a2f_mn_mx\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_a2f_mn_mx() missing 1 required positional argument: 'out_type'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_scaling.test_array_file_scales\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_array_file_scales() missing 2 required positional arguments: 'in_type' and 'out_type'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_scaling.test_scaling_in_abstract\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_scaling_in_abstract() missing 3 required positional arguments: 'category0', 'category1', and 'overflow'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_scripts.test_nib_ls\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_nib_ls() missing 1 required positional argument: 'args'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_spaces.test_slice2volume_exception\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_slice2volume_exception() missing 2 required positional arguments: 'index' and 'axis'\r\n\r\n======================================================================\r\nERROR: nibabel.tests.test_testing.test_assert_re_in\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\nTypeError: test_assert_re_in() missing 2 required positional arguments: 'regex' and 'entries'\r\n\r\n----------------------------------------------------------------------\r\nRan 2058 tests in 122.871s\r\n\r\n```\r\n\r\nDownstream issue: https://bugzilla.redhat.com/show_bug.cgi?id=1811945", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/906", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/906/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/906/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/906/events", "html_url": "https://github.com/nipy/nibabel/issues/906", "id": 605571464, "node_id": "MDU6SXNzdWU2MDU1NzE0NjQ=", "number": 906, "title": "Help applying affine transformation", "user": {"login": "sravan953", "id": 6049061, "node_id": "MDQ6VXNlcjYwNDkwNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6049061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sravan953", "html_url": "https://github.com/sravan953", "followers_url": "https://api.github.com/users/sravan953/followers", "following_url": "https://api.github.com/users/sravan953/following{/other_user}", "gists_url": "https://api.github.com/users/sravan953/gists{/gist_id}", "starred_url": "https://api.github.com/users/sravan953/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sravan953/subscriptions", "organizations_url": "https://api.github.com/users/sravan953/orgs", "repos_url": "https://api.github.com/users/sravan953/repos", "events_url": "https://api.github.com/users/sravan953/events{/privacy}", "received_events_url": "https://api.github.com/users/sravan953/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-23T14:10:38Z", "updated_at": "2020-06-24T18:53:47Z", "closed_at": "2020-04-24T12:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am unable to figure out how to apply an affine matrix (`get_affine()` to the `numpy` array(`get_data()`). I have tried:\r\n```python\r\nnb.affines.apply_affine(pts=vol.get_data(), aff=vol.get_affine())\r\n```\r\n... where `vol` is of shape `(256, 256, 287)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/905", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/905/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/905/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/905/events", "html_url": "https://github.com/nipy/nibabel/issues/905", "id": 605165732, "node_id": "MDU6SXNzdWU2MDUxNjU3MzI=", "number": 905, "title": "[Solved] How to load byte format of nifti file with nibabel method?", "user": {"login": "ytliang97", "id": 18035692, "node_id": "MDQ6VXNlcjE4MDM1Njky", "avatar_url": "https://avatars1.githubusercontent.com/u/18035692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytliang97", "html_url": "https://github.com/ytliang97", "followers_url": "https://api.github.com/users/ytliang97/followers", "following_url": "https://api.github.com/users/ytliang97/following{/other_user}", "gists_url": "https://api.github.com/users/ytliang97/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytliang97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytliang97/subscriptions", "organizations_url": "https://api.github.com/users/ytliang97/orgs", "repos_url": "https://api.github.com/users/ytliang97/repos", "events_url": "https://api.github.com/users/ytliang97/events{/privacy}", "received_events_url": "https://api.github.com/users/ytliang97/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-23T01:01:18Z", "updated_at": "2020-04-28T13:07:23Z", "closed_at": "2020-04-28T09:33:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "system: Mac OS Catalina 10.15\r\nlanguage: python3.6.9\r\nnibabel version: 3.0.0\r\n\r\nHi, I want to convert nifti file(nii.gz) into bytes string that I could use to generate tensorflow record. But when I tried this:\r\n\r\n```python\r\nimport nibabel as nib\r\nimport matplotlib.pyplot as plt\r\nimport tensorflow as tf\r\n\r\nFLAGS = tf.app.flags.FLAGS\r\n\r\ntf.app.flags.DEFINE_string(\r\n    'data_path', '',\r\n    'nifti data path.')\r\n\r\n#e.g. FLAGS.data_path = 'BraTS19_CBICA_AAB_1_t1ce.nii.gz' or 'BraTS19_CBICA_AAB_1_t1ce.nii'\r\n\r\ndef main(_):\r\n    with open(FLAGS.data_path, 'rb') as f:\r\n        bytes_ = f.read()\r\n        print(type(f))\r\n        print(type(bytes_))\r\n\r\n        file = nib.load(bytes_)\r\n        print(type(file))\r\n        print(file.shape)\r\n\r\n        data = file.get_data()\r\n        print(type(data))\r\n        print(data.shape)\r\n        \r\n        plt.imshow(data[:,:,50], cmap='Greys_r')\r\n        plt.show()\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run()\r\n```\r\nI got:\r\n```\r\n<class '_io.BufferedReader'>\r\n<class 'bytes'>\r\nTraceback (most recent call last):\r\n  File \"own-loading_nifti_file.py\", line 31, in <module>\r\n    tf.app.run()\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 125, in run\r\n    _sys.exit(main(argv))\r\n  File \"own-loading_nifti_file.py\", line 19, in main\r\n    file = nib.load(bytes_)\r\n  File \"/usr/local/Cellar/python@3.6/3.6.9_3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/nibabel/loadsave.py\", line 42, in load\r\n    stat_result = os.stat(filename)\r\nValueError: stat: embedded null character in path\r\n```\r\n\r\nAnd I have checked that there aren't any '\\0' nor '\\t' in my file path.\r\n\r\nIt seems `nib.load()` could only feed file path.\r\n\r\nIs there another method in nibabel could load byte object? I have searched nibabel manual, but I couldn't find it out.\r\n\r\nAny suggestions? Thanks! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/904", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/904/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/904/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/904/events", "html_url": "https://github.com/nipy/nibabel/issues/904", "id": 603760140, "node_id": "MDU6SXNzdWU2MDM3NjAxNDA=", "number": 904, "title": "test failed on ArchLinux with version 3.1.0", "user": {"login": "hubutui", "id": 2948593, "node_id": "MDQ6VXNlcjI5NDg1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2948593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubutui", "html_url": "https://github.com/hubutui", "followers_url": "https://api.github.com/users/hubutui/followers", "following_url": "https://api.github.com/users/hubutui/following{/other_user}", "gists_url": "https://api.github.com/users/hubutui/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubutui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubutui/subscriptions", "organizations_url": "https://api.github.com/users/hubutui/orgs", "repos_url": "https://api.github.com/users/hubutui/repos", "events_url": "https://api.github.com/users/hubutui/events{/privacy}", "received_events_url": "https://api.github.com/users/hubutui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-21T07:05:22Z", "updated_at": "2020-04-21T14:14:59Z", "closed_at": "2020-04-21T14:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I create package for ArchLinux, and it failed to run many tests. After building nibabel, I run the test with:\r\n```\r\nexport NIPY_EXTRA_TESTS=slow\r\npytest -v nibabel\r\n```\r\nAnd here is the complete log: [python-nibabel-log.txt](https://github.com/nipy/nibabel/files/4508231/python-nibabel-log.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/898", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/898/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/898/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/898/events", "html_url": "https://github.com/nipy/nibabel/issues/898", "id": 590433651, "node_id": "MDU6SXNzdWU1OTA0MzM2NTE=", "number": 898, "title": "nibabel.filebasedimages.ImageFileError: Cannot work out file type of \"../../499/499_CT.nii.gz\"", "user": {"login": "ranabanik", "id": 47092529, "node_id": "MDQ6VXNlcjQ3MDkyNTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/47092529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranabanik", "html_url": "https://github.com/ranabanik", "followers_url": "https://api.github.com/users/ranabanik/followers", "following_url": "https://api.github.com/users/ranabanik/following{/other_user}", "gists_url": "https://api.github.com/users/ranabanik/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranabanik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranabanik/subscriptions", "organizations_url": "https://api.github.com/users/ranabanik/orgs", "repos_url": "https://api.github.com/users/ranabanik/repos", "events_url": "https://api.github.com/users/ranabanik/events{/privacy}", "received_events_url": "https://api.github.com/users/ranabanik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-30T16:40:41Z", "updated_at": "2020-04-07T20:43:34Z", "closed_at": "2020-04-07T20:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have worked with 498 images in the similar code below. The 499th image generates the error in the title. I can open and visualize the image in .nii.gz file viewer like ITK and others. The file size is bigger compared to other images of same category.  \r\n\r\n`import nibabel as nib\r\nimport os\r\n\r\nCT = nib.load('/media/banikr2/DATA/emModels/CT-MR_batch2/499/499_CT.nii.gz').get_data()`\r\n\r\nwhat could be the issue? \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/897", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/897/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/897/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/897/events", "html_url": "https://github.com/nipy/nibabel/issues/897", "id": 590002864, "node_id": "MDU6SXNzdWU1OTAwMDI4NjQ=", "number": 897, "title": "Nibabel future plans for DICOM files support", "user": {"login": "BramshQamar", "id": 26060471, "node_id": "MDQ6VXNlcjI2MDYwNDcx", "avatar_url": "https://avatars1.githubusercontent.com/u/26060471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BramshQamar", "html_url": "https://github.com/BramshQamar", "followers_url": "https://api.github.com/users/BramshQamar/followers", "following_url": "https://api.github.com/users/BramshQamar/following{/other_user}", "gists_url": "https://api.github.com/users/BramshQamar/gists{/gist_id}", "starred_url": "https://api.github.com/users/BramshQamar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BramshQamar/subscriptions", "organizations_url": "https://api.github.com/users/BramshQamar/orgs", "repos_url": "https://api.github.com/users/BramshQamar/repos", "events_url": "https://api.github.com/users/BramshQamar/events{/privacy}", "received_events_url": "https://api.github.com/users/BramshQamar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T05:25:02Z", "updated_at": "2020-04-07T20:43:46Z", "closed_at": "2020-04-07T20:43:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI wanted to ask about Nibabel's future plans for enhancing support for DICOM files. For example, adding a direct function for converting DICOM to Nifti or adding support for different scanners/vendors. \r\n\r\nThank You,\r\nBramsh", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/892", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/892/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/892/events", "html_url": "https://github.com/nipy/nibabel/issues/892", "id": 567460423, "node_id": "MDU6SXNzdWU1Njc0NjA0MjM=", "number": 892, "title": "Passing a SpooledTemporaryFile to load", "user": {"login": "joshy", "id": 170219, "node_id": "MDQ6VXNlcjE3MDIxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshy", "html_url": "https://github.com/joshy", "followers_url": "https://api.github.com/users/joshy/followers", "following_url": "https://api.github.com/users/joshy/following{/other_user}", "gists_url": "https://api.github.com/users/joshy/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshy/subscriptions", "organizations_url": "https://api.github.com/users/joshy/orgs", "repos_url": "https://api.github.com/users/joshy/repos", "events_url": "https://api.github.com/users/joshy/events{/privacy}", "received_events_url": "https://api.github.com/users/joshy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T10:15:42Z", "updated_at": "2020-02-19T13:46:24Z", "closed_at": "2020-02-19T13:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear lovely people at nibabel,\r\n\r\nthanks a lot for creating and supporting nibabel. Is it possible to have the an additional method for loading from a [SpooledTemporaryFile](https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile) or directly BytesIO? Or to have it possible with the existing load method (check if type is SpooledTemporaryFile and then skip os.stat check)? \r\n\r\nCurrently it fails on line 42 in file [loadsave.py](https://github.com/nipy/nibabel/blob/f043012dc7edd34830cc89cc2ce1d736e2ea74d7/nibabel/loadsave.py#L42)\r\n```\r\ntry:\r\n    stat_result = os.stat(filename)\r\nexcept OSError:\r\n    raise FileNotFoundError(\"No such file or no access: '%s'\" % filename)\r\n```\r\nbecause SpooledTemporaryFile exists only in memory.\r\n\r\nThanks a lot for your time considering this issue and with best regards,\r\nJoshy\r\n\r\nPS: My usecase is to run a small [starlette](https://starlette.io) server where uploaded nifti files are received as SpooledTemporaryFiles.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/890", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/890/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/890/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/890/events", "html_url": "https://github.com/nipy/nibabel/issues/890", "id": 566236739, "node_id": "MDU6SXNzdWU1NjYyMzY3Mzk=", "number": 890, "title": "CT windowing ", "user": {"login": "shanpriya3", "id": 26112565, "node_id": "MDQ6VXNlcjI2MTEyNTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/26112565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shanpriya3", "html_url": "https://github.com/shanpriya3", "followers_url": "https://api.github.com/users/shanpriya3/followers", "following_url": "https://api.github.com/users/shanpriya3/following{/other_user}", "gists_url": "https://api.github.com/users/shanpriya3/gists{/gist_id}", "starred_url": "https://api.github.com/users/shanpriya3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shanpriya3/subscriptions", "organizations_url": "https://api.github.com/users/shanpriya3/orgs", "repos_url": "https://api.github.com/users/shanpriya3/repos", "events_url": "https://api.github.com/users/shanpriya3/events{/privacy}", "received_events_url": "https://api.github.com/users/shanpriya3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-17T11:28:03Z", "updated_at": "2020-03-06T22:18:11Z", "closed_at": "2020-03-06T22:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I would like to apply HU /CT windowing on CT volume to segment Pancreas from abdominal CT. To do so, how to obtain the window width and window center values from a nifti image?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/888", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/888/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/888/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/888/events", "html_url": "https://github.com/nipy/nibabel/issues/888", "id": 564327350, "node_id": "MDU6SXNzdWU1NjQzMjczNTA=", "number": 888, "title": "question: how to cast to lower precision without overflow", "user": {"login": "kaczmarj", "id": 17690870, "node_id": "MDQ6VXNlcjE3NjkwODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/17690870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaczmarj", "html_url": "https://github.com/kaczmarj", "followers_url": "https://api.github.com/users/kaczmarj/followers", "following_url": "https://api.github.com/users/kaczmarj/following{/other_user}", "gists_url": "https://api.github.com/users/kaczmarj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaczmarj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaczmarj/subscriptions", "organizations_url": "https://api.github.com/users/kaczmarj/orgs", "repos_url": "https://api.github.com/users/kaczmarj/repos", "events_url": "https://api.github.com/users/kaczmarj/events{/privacy}", "received_events_url": "https://api.github.com/users/kaczmarj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-12T22:51:25Z", "updated_at": "2020-02-13T06:16:14Z", "closed_at": "2020-02-13T06:16:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "does nibabel provide a method to cast, say, a float32 image to uint8, without clipping values? i've found [ArrayWriter](https://nipy.org/nibabel/reference/nibabel.arraywriters.html) and the [casting module](https://nipy.org/nibabel/reference/nibabel.casting.html), but it isn't clear to me how i can cast without clipping (while also preserving the data to a reasonable degree).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/886", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/886/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/886/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/886/events", "html_url": "https://github.com/nipy/nibabel/issues/886", "id": 562862213, "node_id": "MDU6SXNzdWU1NjI4NjIyMTM=", "number": 886, "title": "Old Matplotlib Travis test failing", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-10T22:17:10Z", "updated_at": "2020-03-06T15:35:28Z", "closed_at": "2020-03-06T15:35:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `OLD_WHEELS` repository seems to be either flaking or down: https://5cf40426d9f06eb7461d-6fe47d9331aba7cd62fc36c7196769e4.ssl.cf2.rackcdn.com/\r\n\r\nThis is affecting Travis jobs requesting matplotlib 1.3.1. @matthew-brett Do you know where to get more information on this host?\r\n\r\nIn any event 1.3.1 is from 2013. The current http://wheels.scipy.org has Python 3.5 wheels for 1.5.2, which is 2016 release, which seems plenty old. If the wheel isn't coming back, then I don't see any reason not to bump to 1.5.2.\r\n\r\nIn other news, cheers to the matplotlib team for keeping their API so stable that we didn't have to change anything for 6 years.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/869", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/869/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/869/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/869/events", "html_url": "https://github.com/nipy/nibabel/issues/869", "id": 556319672, "node_id": "MDU6SXNzdWU1NTYzMTk2NzI=", "number": 869, "title": "BUG: API docs fail when nibabel.info.VERSION doesn't match nibabel.__version__", "user": {"login": "larsoner", "id": 2365790, "node_id": "MDQ6VXNlcjIzNjU3OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2365790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsoner", "html_url": "https://github.com/larsoner", "followers_url": "https://api.github.com/users/larsoner/followers", "following_url": "https://api.github.com/users/larsoner/following{/other_user}", "gists_url": "https://api.github.com/users/larsoner/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsoner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsoner/subscriptions", "organizations_url": "https://api.github.com/users/larsoner/orgs", "repos_url": "https://api.github.com/users/larsoner/repos", "events_url": "https://api.github.com/users/larsoner/events{/privacy}", "received_events_url": "https://api.github.com/users/larsoner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/10", "html_url": "https://github.com/nipy/nibabel/milestone/10", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/10/labels", "id": 5045490, "node_id": "MDk6TWlsZXN0b25lNTA0NTQ5MA==", "number": 10, "title": "3.0.2", "description": "Bug fixes and documentation updates only", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2020-01-27T14:07:57Z", "updated_at": "2020-04-20T13:25:46Z", "due_on": "2020-02-24T08:00:00Z", "closed_at": "2020-04-20T13:25:46Z"}, "comments": 3, "created_at": "2020-01-28T16:21:04Z", "updated_at": "2020-03-06T22:17:26Z", "closed_at": "2020-03-06T22:17:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently this page has no links:\r\n\r\nhttps://nipy.org/nibabel/api.html#api\r\n\r\nFound by seeing that our `intersphinx` links have [broken in CIs](https://circleci.com/gh/mne-tools/mne-python/17705).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/864", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/864/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/864/events", "html_url": "https://github.com/nipy/nibabel/issues/864", "id": 555114865, "node_id": "MDU6SXNzdWU1NTUxMTQ4NjU=", "number": 864, "title": "Sprint: Pytest conversion", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1492993213, "node_id": "MDU6TGFiZWwxNDkyOTkzMjEz", "url": "https://api.github.com/repos/nipy/nibabel/labels/good%20first%20issue", "name": "good first issue", "color": "08ce40", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/8", "html_url": "https://github.com/nipy/nibabel/milestone/8", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/8/labels", "id": 4909846, "node_id": "MDk6TWlsZXN0b25lNDkwOTg0Ng==", "number": 8, "title": "3.1.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-12-06T17:31:47Z", "updated_at": "2020-08-16T19:59:44Z", "due_on": "2020-04-20T07:00:00Z", "closed_at": "2020-04-20T13:25:44Z"}, "comments": 38, "created_at": "2020-01-25T17:52:01Z", "updated_at": "2020-02-24T13:43:04Z", "closed_at": "2020-02-24T13:43:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Tasks\r\n\r\n* Doctest modules\r\n  * [x] Enable --doctest-modules in pytest\r\n    * @effigies\r\n* Failing modules\r\n  * [x] [nibabel.streamlines.tests.test_array_sequence](https://github.com/nipy/nibabel/blob/pytest/nibabel/streamlines/tests/test_array_sequence.py)\r\n    * @robbisg: #870 \r\n  * [x] [nibabel.streamlines.tests.test_tck](https://github.com/nipy/nibabel/blob/pytest/nibabel/streamlines/tests/test_tck.py)\r\n  * [x] [nibabel.streamlines.tests.test_tractogram](https://github.com/nipy/nibabel/blob/pytest/nibabel/streamlines/tests/test_tractogram.py)\r\n    * @robbisg: #870 \r\n  * [x] [nibabel.streamlines.tests.test_trk](https://github.com/nipy/nibabel/blob/pytest/nibabel/streamlines/tests/test_trk.py)\r\n* Skipped modules (@djarecka: \"I'll work on all of these\")\r\n  * [x] [nibabel.tests.test_scripts](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_scripts.py)\r\n  * [x] [nibabel.tests.test_spaces](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_spaces.py)\r\n  * [x] [nibabel.tests.test_spatialimages](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_spatialimages.py)\r\n  * [x] [nibabel.tests.test_spm2analyze](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_spm2analyze.py)\r\n  * [x] [nibabel.tests.test_spm99analyze](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_spm99analyze.py)\r\n  * [x] [nibabel.tests.test_testing](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_testing.py)\r\n  * [x] [nibabel.tests.test_tmpdirs](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_tmpdirs.py)\r\n  * [x] [nibabel.tests.test_trackvis](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_trackvis.py)\r\n  * [x] [nibabel.tests.test_tripwire](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_tripwire.py)\r\n  * [x] [nibabel.tests.test_viewers](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_viewers.py)\r\n  * [x] [nibabel.tests.test_volumeutils](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_volumeutils.py)\r\n* Uncollected tests\r\n  * [x] #879 @effigies\r\n    * [ ] [nibabel/externals/tests/test_netcdf.py:48](https://github.com/nipy/nibabel/blob/pytest/nibabel/externals/tests/test_netcdf.py#L48): PytestCollectionWarning: yield tests were removed in pytest 4.0 - test_read_write_files will be ignored\r\n    * [ ] [nibabel/externals/tests/test_netcdf.py:89](https://github.com/nipy/nibabel/blob/pytest/nibabel/externals/tests/test_netcdf.py#L89): PytestCollectionWarning: yield tests were removed in pytest 4.0 - test_read_write_sio will be ignored\r\n    * [ ] [nibabel/externals/tests/test_netcdf.py:140](https://github.com/nipy/nibabel/blob/pytest/nibabel/externals/tests/test_netcdf.py#L140): PytestCollectionWarning: yield tests were removed in pytest 4.0 - test_write_invalid_dtype will be ignored\r\n  * [x] [nibabel/tests/test_image_api.py:715](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_image_api.py#L715): PytestCollectionWarning: cannot collect test class 'TestMinc2API' because it has a \\_\\_init\\_\\_ constructor\r\n  * [x] [nibabel/tests/test_scripts.py:104](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_scripts.py#L104): PytestCollectionWarning: yield tests were removed in pytest 4.0 - test_nib_ls will be ignored\r\n  * [x] [nibabel/tests/test_scripts.py:187](https://github.com/nipy/nibabel/blob/pytest/nibabel/tests/test_scripts.py#L187): PytestCollectionWarning: yield tests were removed in pytest 4.0 - test_nib_diff will be ignored\r\n    * @djarecka \r\n* Untouched submodules\r\n  * [ ] nibabel.benchmarks\r\n  * [x] nibabel.cifti2.tests\r\n    * @robbisg\r\n  * [x] nibabel.cmdline.tests\r\n  * [x] nibabel.externals.tests\r\n  * [x] nibabel.freesurfer.tests\r\n    * @orduek \r\n  * [x] nibabel.gifti.tests\r\n    * @anibalsolon\r\n  * [x] nibabel.nicom.tests\r\n    * #884 @effigies\r\n* Refactors\r\n  * [x] Skip base test cases like [_TestWrapStructBase](https://github.com/nipy/nibabel/blob/f908ca4b5ed690a953c89af45656df558b733514/nibabel/tests/test_wrapstruct.py#L109).\r\n    * Possible idea: use `setUp()` to test whether the class name starts with `_`, and `pytest.skip()`.\r\n    * @effigies: #871\r\n  * [ ] Use `pytest.deprecated_call()` and `pytest.warns()` instead of `clear_and_catch_warning`, when sensible. See https://github.com/nipy/nibabel/pull/865#discussion_r370957350 and https://github.com/nipy/nibabel/pull/865#discussion_r370957571.\r\n    * [ ] Related: [assert_warn_len_equal](https://github.com/nipy/nibabel/blob/ddf26830eebdb11470009c3a04047377f29a4732/nibabel/tests/test_testing.py#L52-L84) is kind of a mess, and made redundant with going Python 3+.\r\n\r\nSome principles:\r\n* Try to avoid numpy test methods and decorators when a vanilla [unittest](https://docs.python.org/3/library/unittest.html)/[pytest](https://docs.pytest.org/) construct exists. NOTABLE EXCEPTIONS: Tools for comparing arrays and floating points, such as `assert_almost_equal`.\r\n* Clear is better than brief.\r\n* ...\r\n\r\nOriginal post follows:\r\n\r\n-----\r\n\r\n## Summary\r\n\r\n`nose` is finally going to start failing on Python 3.9 due to some standard library API changes.\r\n\r\nPython 3.9.0 is due to be released in October, but we might as well get out ahead of it. We don't need to rush, so I'm going to target the nibabel 3.1.0 release.\r\n\r\nI put out a [call on Twitter](https://twitter.com/effigies/status/1220097622276562945) to see if anybody wanted to sprint on this, and got responses from @arokem, @chrisgorgo, @orduek, @robbisg and @anibalsolon (thanks to all for having the same handle on GitHub and Twitter).\r\n\r\nThis thread exists to coordinate the sprint.\r\n\r\n## Status\r\n\r\n@djarecka and @chrisgorgo started on conversion in November:\r\n\r\n* [x] #835\r\n* [x] #838 \r\n* [x] #839\r\n* [x] #840 \r\n\r\nThere have been some changes in the tests since #840 was started, so it requires merging/rebasing.\r\n\r\n## Plans\r\n\r\nTo facilitate the transition, I've started the [`pytest`](https://github.com/nipy/nibabel/tree/pytest) branch, which is #840's commits, rebased on master.\r\n\r\nThe first thing to do is to identify all remaining tasks. Off the top of my head we need to:\r\n\r\n1) Eliminate the use of `nose.tools`.\r\n2) Move any nose test case classes to vanilla `unittest` features, which pytest should be able to handle transparently.\r\n3) Verify coverage doesn't change/increases.\r\n4) Run doctests in the documentation with pytest.\r\n\r\n## Logistics\r\n\r\nLet's set at least one definite window that people want to be actively working on this and where I can commit to being more responsive to keep things from stalling out. We don't all need to align, but it would probably be best for me if there isn't a separate window for each participant.\r\n\r\nWould it be useful to attempt to do this (semi-)synchronously, and use a chat room? Or would people rather go through the usual process of creating issues and pull requests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/863", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/863/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/863/events", "html_url": "https://github.com/nipy/nibabel/issues/863", "id": 548912367, "node_id": "MDU6SXNzdWU1NDg5MTIzNjc=", "number": 863, "title": "Orientation issues when going from nibabel to itk", "user": {"login": "andrewtmorgan", "id": 16238826, "node_id": "MDQ6VXNlcjE2MjM4ODI2", "avatar_url": "https://avatars1.githubusercontent.com/u/16238826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewtmorgan", "html_url": "https://github.com/andrewtmorgan", "followers_url": "https://api.github.com/users/andrewtmorgan/followers", "following_url": "https://api.github.com/users/andrewtmorgan/following{/other_user}", "gists_url": "https://api.github.com/users/andrewtmorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewtmorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewtmorgan/subscriptions", "organizations_url": "https://api.github.com/users/andrewtmorgan/orgs", "repos_url": "https://api.github.com/users/andrewtmorgan/repos", "events_url": "https://api.github.com/users/andrewtmorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewtmorgan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-13T12:56:25Z", "updated_at": "2020-01-27T16:57:32Z", "closed_at": "2020-01-27T16:57:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to create a tool that has EPI outlines like the nibabel example (https://nipy.org/nibabel/coordinate_systems.html#the-affine-as-a-series-of-transformations), but with the ability to move the outlines by hand. The best tool I know for manual movements of scans is ITK-SNAP, so I have been trying to import \"outline\" EPI scans from nibabel. This is not working properly (EPI images appear much larger than anatomical images when overlaid), and I am not sure why.\r\n\r\nHere is some code that I have used to create the EPIs:\r\n\r\n```python\r\n# create outline data\r\ndata = np.ones((192, 192, 27))\r\ndata[1:-1, 1:-1, 1:-1] = 0   # creates an outline only\r\n\r\n# create blank rotation with scaling\r\nrot = np.diag([0.8, 0.8, 0.8, 1])\r\n\r\n# create a nifti image and save\r\nimg = nb.Nifti1Image(data, rot)\r\nimg.set_qform(img.affine, 1)\r\nimg.to_filename('epi.nii.gz')\r\n```\r\n\r\nI added the line setting the qform based on this comment: https://github.com/nipy/nibabel/issues/801#issuecomment-553921532\r\n\r\nITK-SNAP still cannot properly read the orientation of the outline scan. However, FSL is able to read it just fine. Are there other nibabel methods required to properly prepare a header for use in ITK?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/861", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/861/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/861/events", "html_url": "https://github.com/nipy/nibabel/issues/861", "id": 548370504, "node_id": "MDU6SXNzdWU1NDgzNzA1MDQ=", "number": 861, "title": "Test failure on Arm64", "user": {"login": "bcdarwin", "id": 164148, "node_id": "MDQ6VXNlcjE2NDE0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/164148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bcdarwin", "html_url": "https://github.com/bcdarwin", "followers_url": "https://api.github.com/users/bcdarwin/followers", "following_url": "https://api.github.com/users/bcdarwin/following{/other_user}", "gists_url": "https://api.github.com/users/bcdarwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/bcdarwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bcdarwin/subscriptions", "organizations_url": "https://api.github.com/users/bcdarwin/orgs", "repos_url": "https://api.github.com/users/bcdarwin/repos", "events_url": "https://api.github.com/users/bcdarwin/events{/privacy}", "received_events_url": "https://api.github.com/users/bcdarwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-01-11T02:50:09Z", "updated_at": "2020-05-27T16:59:31Z", "closed_at": "2020-05-27T16:37:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unfortunately I can't debug since I don't have such a machine set up; the tests were run by Hydra, the CI server for Nix/Nixpkgs for [this PR](https://github.com/NixOS/nixpkgs/pull/77472).\r\n\r\nRelease 3.0.0.\r\n\r\n```\r\nFAIL: nibabel.tests.test_volumeutils.test_a2f_nan2zero_range\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/iqysj9ccwz5xww339z07jyl6k5zc5074-python3.7-nose-1.3.7/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/build/nibabel-3.0.0/nibabel/tests/test_volumeutils.py\", line 675, in test_a2f_nan2zero_range\r\n    assert_array_equal([-128, -128, -128, nan_cast], back_arr)\r\n  File \"/nix/store/7k6dbm0p5imsnivp1xshbzkj30i28cjq-python3.7-numpy-1.18.0/lib/python3.7/site-packages/numpy/testing/_private/utils.py\", line 936, in assert_array_equal\r\n    verbose=verbose, header='Arrays are not equal')\r\n  File \"/nix/store/7k6dbm0p5imsnivp1xshbzkj30i28cjq-python3.7-numpy-1.18.0/lib/python3.7/site-packages/numpy/testing/_private/utils.py\", line 846, in assert_array_compare\r\n    raise AssertionError(msg)\r\nAssertionError:\r\nArrays are not equal\r\nMismatched elements: 1 / 4 (25%)\r\nMax absolute difference: 1\r\nMax relative difference: 1.0\r\n x: array([-128, -128, -128,    0])\r\n y: array([-128, -128, -128,   -1], dtype=int8)\r\n----------------------------------------------------------------------\r\nRan 7671 tests in 227.364s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/859", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/859/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/859/events", "html_url": "https://github.com/nipy/nibabel/issues/859", "id": 547005384, "node_id": "MDU6SXNzdWU1NDcwMDUzODQ=", "number": 859, "title": "pip editable install for user broken since adding pyproject.toml", "user": {"login": "matthew-brett", "id": 67612, "node_id": "MDQ6VXNlcjY3NjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-brett", "html_url": "https://github.com/matthew-brett", "followers_url": "https://api.github.com/users/matthew-brett/followers", "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions", "organizations_url": "https://api.github.com/users/matthew-brett/orgs", "repos_url": "https://api.github.com/users/matthew-brett/repos", "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-brett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-01-08T17:34:25Z", "updated_at": "2020-03-07T15:04:07Z", "closed_at": "2020-03-07T15:04:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Before commit c0321382, that added `pyproject.toml`, I could do this:\r\n\r\n```\r\npip install --user -e .\r\n```\r\n\r\nAfter that commit, I get:\r\n\r\n```\r\n    usage: setup.py [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\r\n       or: setup.py --help [cmd1 cmd2 ...]\r\n       or: setup.py --help-commands\r\n       or: setup.py cmd --help\r\n    \r\n    error: option --user not recognized\r\n```\r\n\r\nI'm not quite sure why.  Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/855", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/855/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/855/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/855/events", "html_url": "https://github.com/nipy/nibabel/issues/855", "id": 540032072, "node_id": "MDU6SXNzdWU1NDAwMzIwNzI=", "number": 855, "title": "test_pkg_info fail", "user": {"login": "hubutui", "id": 2948593, "node_id": "MDQ6VXNlcjI5NDg1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2948593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubutui", "html_url": "https://github.com/hubutui", "followers_url": "https://api.github.com/users/hubutui/followers", "following_url": "https://api.github.com/users/hubutui/following{/other_user}", "gists_url": "https://api.github.com/users/hubutui/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubutui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubutui/subscriptions", "organizations_url": "https://api.github.com/users/hubutui/orgs", "repos_url": "https://api.github.com/users/hubutui/repos", "events_url": "https://api.github.com/users/hubutui/events{/privacy}", "received_events_url": "https://api.github.com/users/hubutui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/8", "html_url": "https://github.com/nipy/nibabel/milestone/8", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/8/labels", "id": 4909846, "node_id": "MDk6TWlsZXN0b25lNDkwOTg0Ng==", "number": 8, "title": "3.1.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-12-06T17:31:47Z", "updated_at": "2020-08-16T19:59:44Z", "due_on": "2020-04-20T07:00:00Z", "closed_at": "2020-04-20T13:25:44Z"}, "comments": 8, "created_at": "2019-12-19T02:15:33Z", "updated_at": "2020-01-15T15:42:26Z", "closed_at": "2020-01-15T15:42:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to compile the latest release, and here is the fail test log:\r\n```text\r\nFAIL: Test fallback version is up-to-date\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/build/python-nibabel/src/nibabel/nibabel/tests/test_pkg_info.py\", line 33, in test_fallback_version\r\n    assert (\r\nAssertionError: nibabel.info.VERSION does not match current tag information\r\n```\r\nThe complete log: [nibabel-build-log.txt](https://github.com/nipy/nibabel/files/3981431/nibabel-build-log.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/854", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/854/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/854/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/854/events", "html_url": "https://github.com/nipy/nibabel/issues/854", "id": 539826846, "node_id": "MDU6SXNzdWU1Mzk4MjY4NDY=", "number": 854, "title": "ExpiredDeprecationError being hit", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/8", "html_url": "https://github.com/nipy/nibabel/milestone/8", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/8/labels", "id": 4909846, "node_id": "MDk6TWlsZXN0b25lNDkwOTg0Ng==", "number": 8, "title": "3.1.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-12-06T17:31:47Z", "updated_at": "2020-08-16T19:59:44Z", "due_on": "2020-04-20T07:00:00Z", "closed_at": "2020-04-20T13:25:44Z"}, "comments": 2, "created_at": "2019-12-18T17:46:47Z", "updated_at": "2020-04-07T18:37:09Z", "closed_at": "2020-04-07T18:37:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A bunch of `DeprecationWarning`s got promoted to `ExpiredDeprecationError` post-release, so we should update the tests.\r\n\r\nWould be good to expect the exception in 3.0.x and remove the deprecated code in `master`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/851", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/851/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/851/events", "html_url": "https://github.com/nipy/nibabel/issues/851", "id": 536078518, "node_id": "MDU6SXNzdWU1MzYwNzg1MTg=", "number": 851, "title": "ENH: implement `mri_convert --conform` functionality", "user": {"login": "kaczmarj", "id": 17690870, "node_id": "MDQ6VXNlcjE3NjkwODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/17690870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaczmarj", "html_url": "https://github.com/kaczmarj", "followers_url": "https://api.github.com/users/kaczmarj/followers", "following_url": "https://api.github.com/users/kaczmarj/following{/other_user}", "gists_url": "https://api.github.com/users/kaczmarj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaczmarj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaczmarj/subscriptions", "organizations_url": "https://api.github.com/users/kaczmarj/orgs", "repos_url": "https://api.github.com/users/kaczmarj/repos", "events_url": "https://api.github.com/users/kaczmarj/events{/privacy}", "received_events_url": "https://api.github.com/users/kaczmarj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T00:55:55Z", "updated_at": "2020-04-19T13:07:33Z", "closed_at": "2020-04-19T13:07:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "hi nibabel devs, i would like to replicate freesurfer's `mri_convert --conform` functionality, as described in https://github.com/neuronets/kwyk/issues/5. I have the code for it below. It does the following:\r\n\r\n- Resize to (256mm)^3 bounding box\r\n- resample to (1mm)^3 voxels\r\n- rescale to 0-255\r\n- reorients to RAS\r\n\r\n`mri_convert --conform` reorients to LIA but RAS is cooler imho.\r\n\r\ni made this an issue instead of a pr because i don't know where this sort of thing should go in the code base. @effigies suggested `nibabel.cmdline` but i'm not sure.\r\n\r\n```python\r\nfrom pathlib import Path\r\nimport nibabel as nib\r\nimport nibabel.processing\r\nimport numpy as np\r\n\r\ndef transform_range(x, new_min, new_max):\r\n    x = np.asarray(x)\r\n    x_min, x_max = x.min(), x.max()\r\n    return (((x - x_min) * (new_max - new_min)) / (x_max - x_min)) + new_min\r\n\r\ndef conform(from_img, out_shape=(256, 256, 256), \r\n            voxel_size=(1.0, 1.0, 1.0), order=3, cval=0.0):\r\n    # Create fake image of the image we want to resample to.\r\n    hdr = nib.Nifti1Header()\r\n    hdr.set_data_shape(out_shape)\r\n    hdr.set_zooms(voxel_size)\r\n    dst_aff = hdr.get_best_affine()\r\n    to_img = nib.Nifti1Image(np.empty(out_shape), affine=dst_aff, header=hdr)\r\n    # Resample input image.\r\n    out_img = nib.processing.resample_from_to(\r\n        from_img=small, to_vox_map=to_img, order=order, cval=cval)\r\n    # Cast to uint8.\r\n    data = out_img.get_fdata()\r\n    data = transform_range(data, new_min=0.0, new_max=255.0)\r\n    data = data.round(out=data).astype(np.uint8)\r\n    out_img._dataobj = data\r\n    out_img.set_data_dtype(np.uint8)\r\n    # Reorient to RAS.\r\n    out_img = nib.as_closest_canonical(out_img)\r\n    return out_img\r\n\r\nfilename = str(Path(nib.testing.data_path) / 'anatomical.nii')\r\nsmall = nib.load(filename)\r\nout_img = conform(small)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/849", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/849/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/849/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/849/events", "html_url": "https://github.com/nipy/nibabel/issues/849", "id": 534121389, "node_id": "MDU6SXNzdWU1MzQxMjEzODk=", "number": 849, "title": "3.0 todos", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-06T16:27:29Z", "updated_at": "2019-12-19T15:41:34Z", "closed_at": "2019-12-19T15:41:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A place to note things while looking through the code that need to be done before the 3.0 release.\r\n\r\n* [x] Error on `keep_file_open == 'auto'`\r\nhttps://github.com/nipy/nibabel/blob/fcc54489d04ba218f10ba98140f1596c0ad47553/nibabel/arrayproxy.py#L58-L62\r\n\r\n* [x] Remove `minc.py`:\r\nhttps://github.com/nipy/nibabel/blob/fcc54489d04ba218f10ba98140f1596c0ad47553/nibabel/minc.py#L5-L8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/843", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/843/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/843/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/843/events", "html_url": "https://github.com/nipy/nibabel/issues/843", "id": 524647604, "node_id": "MDU6SXNzdWU1MjQ2NDc2MDQ=", "number": 843, "title": "ArrayProxy.__array__ should support dtype argument", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-18T22:06:42Z", "updated_at": "2019-12-11T13:16:00Z", "closed_at": "2019-12-11T13:16:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To fully implement the array-like interface, `ArrayProxy.__array__` should accept the `dtype` argument. Currently neither of the following works:\r\n\r\n```Python\r\nmask = np.bool_(img.dataobj)\r\nmask = np.asanyarray(img.dataobj, dtype=bool)\r\n```\r\n\r\n```\r\nIn [6]: np.bool_(img.dataobj)                                                                       \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-6-bad9ebe4d523> in <module>\r\n----> 1 np.bool_(img.dataobj)\r\n\r\nTypeError: __array__() takes 1 positional argument but 2 were given\r\n\r\nIn [7]: np.asanyarray(img.dataobj, dtype=bool)                                                      \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-7-a7890277a83c> in <module>\r\n----> 1 np.asanyarray(img.dataobj, dtype=bool)\r\n\r\n/System/Volumes/Data/anaconda3/lib/python3.7/site-packages/numpy/core/numeric.py in asanyarray(a, dtype, order)\r\n    589 \r\n    590     \"\"\"\r\n--> 591     return array(a, dtype, copy=False, order=order, subok=True)\r\n    592 \r\n    593 \r\n\r\nTypeError: __array__() takes 1 positional argument but 2 were given\r\n```\r\n\r\nNot sure whether fixing this is more of a bug fix or a new feature. I lean toward this being a bug... What do others think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/841", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/841/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/841/events", "html_url": "https://github.com/nipy/nibabel/issues/841", "id": 521905288, "node_id": "MDU6SXNzdWU1MjE5MDUyODg=", "number": 841, "title": "Replace @kw_only_meth/func decorator with \"*\" argument", "user": {"login": "rmarkello", "id": 14265705, "node_id": "MDQ6VXNlcjE0MjY1NzA1", "avatar_url": "https://avatars0.githubusercontent.com/u/14265705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmarkello", "html_url": "https://github.com/rmarkello", "followers_url": "https://api.github.com/users/rmarkello/followers", "following_url": "https://api.github.com/users/rmarkello/following{/other_user}", "gists_url": "https://api.github.com/users/rmarkello/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmarkello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmarkello/subscriptions", "organizations_url": "https://api.github.com/users/rmarkello/orgs", "repos_url": "https://api.github.com/users/rmarkello/repos", "events_url": "https://api.github.com/users/rmarkello/events{/privacy}", "received_events_url": "https://api.github.com/users/rmarkello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T01:45:42Z", "updated_at": "2019-12-19T13:53:42Z", "closed_at": "2019-12-19T13:53:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3 supports the use of `*` in function signatures to denote that subsequent arguments must be supplied as keywords. Historically, `nibabel` has used `nibabel.keyword_only.kw_only_{meth,func}` to do this, instead. Since `nibabel` is no longer supporting Python 2 it might be nice to remove these and just use the '*' syntax! I'd be happy to make a PR for this, if you think it would be desirable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/834", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/834/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/834/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/834/events", "html_url": "https://github.com/nipy/nibabel/issues/834", "id": 520103410, "node_id": "MDU6SXNzdWU1MjAxMDM0MTA=", "number": 834, "title": "RFC: get_data deprecation", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-11-08T16:17:38Z", "updated_at": "2020-01-27T16:59:48Z", "closed_at": "2020-01-27T16:59:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I've noticed that nilearn and nistats are working around the deprecation of `img.get_data()` with a public `get_data()` function.\r\n\r\n* https://github.com/nilearn/nilearn/pull/2172\r\n* https://github.com/nistats/nistats/pull/403\r\n\r\nIt would be nice to hear what the specific use cases are that make this preferable to moving to `get_fdata()` or `np.asarray(img.dataobj)`. Is it just that the latter is a pain to type? The loss of caching?\r\n\r\nI think there are at least three possibilities:\r\n\r\n1) Continue as-is, and nilearn will have a `get_data()` helper function\r\n2) Un-deprecate `img.get_data()`\r\n3) An alternative method that covers the non-`get_fdata()` parts of `get_data()`\r\n\r\nWhat makes sense to people?\r\n\r\nAnd just process-wise, it would be nice to know how we can get feedback before pushing people to work around changes to the API. I'm mostly aware of this because I'm watching the nistats repository, but the planned `get_data()` replacement and deprecation has been on the mailing list and in the documentation for a couple years.\r\n\r\ncc @jeromedockes @GaelVaroquaux @bthirion @kchawla-pi @nipy/team-nibabel ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/832", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/832/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/832/events", "html_url": "https://github.com/nipy/nibabel/issues/832", "id": 519479493, "node_id": "MDU6SXNzdWU1MTk0Nzk0OTM=", "number": 832, "title": "ArrayProxy always casts image data to float64", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-07T19:56:44Z", "updated_at": "2019-11-18T16:46:05Z", "closed_at": "2019-11-18T16:46:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider a BOLD series (obtainable with git-annex [here](https://github.com/neuroscout-datasets/LearningTemporalStructure/blob/master/fmriprep/sub-01/func/sub-01_task-movie_run-01_space-MNI152NLin2009cAsym_desc-preproc_bold.nii.gz)) saved in a NIfTI-1 with dtype `int16`, `scl_slope == 0.061591435` and `scl_inter == 1839.8748`. Both `scl_slope` and `scl_inter` are `np.float32`:\r\n\r\nhttps://github.com/nipy/nibabel/blob/ddf26830eebdb11470009c3a04047377f29a4732/nibabel/nifti1.py#L49-L50\r\n\r\nThe ArrayProxy casts these data to `float64`:\r\n\r\n```Python\r\n>>> img.dataobj[0, 0, 0, 0].dtype\r\ndtype('float64')\r\n```\r\n\r\nNote the following:\r\n\r\n```Python\r\n>>> type(img.dataobj.slope)\r\nfloat\r\n>>> type(img.dataobj.inter)\r\nfloat\r\n```\r\n\r\nThis is due to the cast in nifti1.py:\r\n\r\nhttps://github.com/nipy/nibabel/blob/ddf26830eebdb11470009c3a04047377f29a4732/nibabel/nifti1.py#L1164-L1167\r\n\r\nIf I use:\r\n\r\n```Python\r\n>>> unscaled = img.dataobj.get_unscaled()\r\n>>> slope = np.float32(img.dataobj.slope)\r\n>>> inter = np.float32(img.dataobj.inter)\r\n>>> nb.volumeutils.apply_read_scaling(unscaled, slope, inter).dtype\r\ndtype('float32')\r\n```\r\n\r\nSo the precision of the data available permits us to safely return this data block as float32 (`apply_read_scaling` would bump to float64 if it were needed), but instead we always return float64 data arrays.\r\n\r\nThis means that `img.get_fdata(dtype=np.float32)` will first load a 64-bit array and then cast it down to 32-bit.\r\n\r\nMy expectation would generally be to use the smallest data type as the default and scale up at need or request. While I do see a potential argument for using float64 across all image types (e.g., NIfTI-2 and thus CIFTI-2 have 64-bit scales and intercepts) as safe and consistent, that feels to me appropriate for a high-level interface like `get_fdata()`, rather than the low-level load of `np.array(img.dataobj)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/828", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/828/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/828/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/828/events", "html_url": "https://github.com/nipy/nibabel/issues/828", "id": 511318568, "node_id": "MDU6SXNzdWU1MTEzMTg1Njg=", "number": 828, "title": "Python 3.8 support", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-23T13:20:26Z", "updated_at": "2019-12-31T17:26:58Z", "closed_at": "2019-12-31T17:26:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This issue is to track full support and testing on Python 3.8.\r\n\r\n* [x] Minimum requirements on Travis\r\n* [x] Full dependencies on Travis\r\n  * [x] Scipy: scipy/scipy#10927, scipy/scipy#10930\r\n  * [x] matplotlib\r\n  * [x] h5py: https://github.com/h5py/h5py/issues/1410\r\n  * [x] pillow\r\n  * [x] pydicom\r\n  * [x] indexed_gzip\r\n* [x] Azure pipelines: microsoft/azure-pipelines-image-generation#1317\r\n\r\nI'm not making an effort to check the compatibility of other optional dependencies until scipy uploads a wheel. If somebody else wants to work through the checklist, feel free.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/825", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/825/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/825/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/825/events", "html_url": "https://github.com/nipy/nibabel/issues/825", "id": 506438722, "node_id": "MDU6SXNzdWU1MDY0Mzg3MjI=", "number": 825, "title": "Difference in saving nifti files in nibabel", "user": {"login": "leonardo-oz", "id": 55828143, "node_id": "MDQ6VXNlcjU1ODI4MTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/55828143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-oz", "html_url": "https://github.com/leonardo-oz", "followers_url": "https://api.github.com/users/leonardo-oz/followers", "following_url": "https://api.github.com/users/leonardo-oz/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-oz/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-oz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-oz/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-oz/orgs", "repos_url": "https://api.github.com/users/leonardo-oz/repos", "events_url": "https://api.github.com/users/leonardo-oz/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-oz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-14T04:13:35Z", "updated_at": "2019-10-14T11:06:14Z", "closed_at": "2019-10-14T11:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Nibabel Experts:\r\n\r\nI am following nipype tutorial to save files. One approach is to use nib.save(). The other is to use image.to_filename().  But files saved from two methods seems quite different with fsleyes. The latter one is consistent with input file, while the formal is not. Please check the picture below. I was expecting both a and b should perfectly match. I intend to use the formal one, as image_data = image_get_fdata() can give me a numpy array which is easy to get processed for other purpose. Can someone point out what causes the difference in saving and how to fix it? Thanks. The zipped mask file is attached.\r\n[mask.nii.gz](https://github.com/nipy/nibabel/files/3722882/mask.nii.gz)\r\n\r\n \r\n\r\nThe code snippet is below:\r\n````\r\n    image = nib.load(\"mask.nii.gz\")\r\n    # save method 1\r\n    image.to_filename(\"a.nii.gz\")\r\n    \r\n    # save method 2\r\n    outImg = nib.Nifti1Image(image.get_fdata(), affine=image.header.get_base_affine(), \r\n    header=image.header)\r\n    nib.save(outImg, \"b.nii.gz\")\r\n```` \r\n![image](https://user-images.githubusercontent.com/55828143/66729110-912d2d80-ee8c-11e9-8b00-61f951cb457c.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/824", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/824/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/824/events", "html_url": "https://github.com/nipy/nibabel/issues/824", "id": 505011916, "node_id": "MDU6SXNzdWU1MDUwMTE5MTY=", "number": 824, "title": "How to save processed slices into a new nifti file", "user": {"login": "leonardo-oz", "id": 55828143, "node_id": "MDQ6VXNlcjU1ODI4MTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/55828143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-oz", "html_url": "https://github.com/leonardo-oz", "followers_url": "https://api.github.com/users/leonardo-oz/followers", "following_url": "https://api.github.com/users/leonardo-oz/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-oz/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-oz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-oz/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-oz/orgs", "repos_url": "https://api.github.com/users/leonardo-oz/repos", "events_url": "https://api.github.com/users/leonardo-oz/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-oz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-10T03:34:06Z", "updated_at": "2019-10-10T21:01:55Z", "closed_at": "2019-10-10T21:01:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, All\r\n\r\nGiven an input nifti image, in.nii.gz, if I intend to crop it from 1/5 slices along z dimension and save the cropped image into a new nifti file with same header except dimensions, how can I do it.\r\nI only figure out how to crop but am not sure about updating the header and save it. Can someone shed a light on this? Thanks.\r\n\r\n````\r\n    img = nib.load('in.nii.gz')\r\n    data = img.get_data()\r\n    nbrSlces = data.shape[2]\r\n    nbrCrops = int(nbrSlces * 0.20)\r\n    crop = data[:, :, nbrCrops:]\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/820", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/820/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/820/events", "html_url": "https://github.com/nipy/nibabel/issues/820", "id": 499781068, "node_id": "MDU6SXNzdWU0OTk3ODEwNjg=", "number": 820, "title": "How to save each nifti slice into png or jpg in nipype", "user": {"login": "leonardo-oz", "id": 55828143, "node_id": "MDQ6VXNlcjU1ODI4MTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/55828143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-oz", "html_url": "https://github.com/leonardo-oz", "followers_url": "https://api.github.com/users/leonardo-oz/followers", "following_url": "https://api.github.com/users/leonardo-oz/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-oz/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-oz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-oz/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-oz/orgs", "repos_url": "https://api.github.com/users/leonardo-oz/repos", "events_url": "https://api.github.com/users/leonardo-oz/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-oz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-28T02:36:34Z", "updated_at": "2019-09-29T05:32:41Z", "closed_at": "2019-09-29T05:32:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, All:\r\n\r\nDoes nipype provide any function for saving nifti slice into png as pixel in each slice are well above 255, directly dump 2D numpy array can cause most value as either 0, or 255 not gray scale image.  Code snippet is below:\r\n\r\n````\r\n   import nibabel as nib\r\n    import cv2 as cv\r\n    \r\n    image = nib.load(inFilePath)\r\n    imageData = image.get_data()\r\n   img_slice = imageData[:, :, 0]\r\n   cv.imwrite(\"0.jpg\", img_slice)\r\n\r\n````\r\n![0](https://user-images.githubusercontent.com/55828143/65810328-8e73dc80-e1ec-11e9-86a7-2167dd4ed106.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/819", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/819/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/819/events", "html_url": "https://github.com/nipy/nibabel/issues/819", "id": 498704721, "node_id": "MDU6SXNzdWU0OTg3MDQ3MjE=", "number": 819, "title": "How to use RobustFOV function in nipype.interfaces.fsl", "user": {"login": "leonardo-oz", "id": 55828143, "node_id": "MDQ6VXNlcjU1ODI4MTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/55828143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardo-oz", "html_url": "https://github.com/leonardo-oz", "followers_url": "https://api.github.com/users/leonardo-oz/followers", "following_url": "https://api.github.com/users/leonardo-oz/following{/other_user}", "gists_url": "https://api.github.com/users/leonardo-oz/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardo-oz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardo-oz/subscriptions", "organizations_url": "https://api.github.com/users/leonardo-oz/orgs", "repos_url": "https://api.github.com/users/leonardo-oz/repos", "events_url": "https://api.github.com/users/leonardo-oz/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardo-oz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-26T07:18:25Z", "updated_at": "2019-09-26T08:09:37Z", "closed_at": "2019-09-26T08:09:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI, All. I am trying to remove neck from an MRI sample image using nipype.interfaces.fsl. \r\n\r\nThe function I used is as following:\r\n\r\n````\r\n    neckRM = fsl.RobustFOV()\r\n    print(help(neckRM))\r\n    neckRM.inputs.in_file = inPath\r\n````\r\nI could not find a way to save the neck removed image or make a reference to it. Can someone shed a light on this?\r\n\r\nThanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/802", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/802/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/802/events", "html_url": "https://github.com/nipy/nibabel/issues/802", "id": 489987819, "node_id": "MDU6SXNzdWU0ODk5ODc4MTk=", "number": 802, "title": "BUG: Simple save-load round-trip emits warning", "user": {"login": "larsoner", "id": 2365790, "node_id": "MDQ6VXNlcjIzNjU3OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2365790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsoner", "html_url": "https://github.com/larsoner", "followers_url": "https://api.github.com/users/larsoner/followers", "following_url": "https://api.github.com/users/larsoner/following{/other_user}", "gists_url": "https://api.github.com/users/larsoner/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsoner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsoner/subscriptions", "organizations_url": "https://api.github.com/users/larsoner/orgs", "repos_url": "https://api.github.com/users/larsoner/repos", "events_url": "https://api.github.com/users/larsoner/events{/privacy}", "received_events_url": "https://api.github.com/users/larsoner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/4", "html_url": "https://github.com/nipy/nibabel/milestone/4", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/4/labels", "id": 4119026, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNg==", "number": 4, "title": "3.0.0 RC1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-03-07T14:12:18Z", "updated_at": "2020-01-26T16:38:42Z", "due_on": "2019-10-28T07:00:00Z", "closed_at": "2020-01-26T16:38:42Z"}, "comments": 1, "created_at": "2019-09-05T20:34:51Z", "updated_at": "2019-09-27T15:14:21Z", "closed_at": "2019-09-27T15:14:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example, this code:\r\n```\r\n>>> import warnings\r\n>>> warnings.simplefilter('always')\r\n>>> import nibabel\r\n>>> img = nibabel.load('/home/larsoner/applications/freesurfer-6/subjects/fsaverage/mri/T1.mgz')\r\n>>> nibabel.save(img, 'test.nii')\r\n/home/larsoner/python/nibabel/nibabel/analyze.py:1012: DeprecationWarning: get_data() is deprecated in favor of get_fdata(), which has a more predictable return type. To obtain get_data() behavior going forward, use numpy.asanyarray(img.dataobj).\r\n\r\n* deprecated from version: 3.0\r\n* Will raise <class 'nibabel.deprecator.ExpiredDeprecationError'> as of version: 5.0\r\n  data = self.get_data()\r\n```\r\nThis suggests that there is some design issue in this `nib.save` traceback, which leads up to the warning emission:\r\n```\r\n../nibabel/nibabel/loadsave.py:98: in save\r\n    img.to_filename(filename)\r\n../nibabel/nibabel/filebasedimages.py:334: in to_filename\r\n    self.to_file_map()\r\n../nibabel/nibabel/analyze.py:1012: in to_file_map\r\n    data = self.get_data()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/801", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/801/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/801/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/801/events", "html_url": "https://github.com/nipy/nibabel/issues/801", "id": 489179809, "node_id": "MDU6SXNzdWU0ODkxNzk4MDk=", "number": 801, "title": "Image orientation issues", "user": {"login": "pocolya", "id": 49272225, "node_id": "MDQ6VXNlcjQ5MjcyMjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/49272225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pocolya", "html_url": "https://github.com/pocolya", "followers_url": "https://api.github.com/users/pocolya/followers", "following_url": "https://api.github.com/users/pocolya/following{/other_user}", "gists_url": "https://api.github.com/users/pocolya/gists{/gist_id}", "starred_url": "https://api.github.com/users/pocolya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pocolya/subscriptions", "organizations_url": "https://api.github.com/users/pocolya/orgs", "repos_url": "https://api.github.com/users/pocolya/repos", "events_url": "https://api.github.com/users/pocolya/events{/privacy}", "received_events_url": "https://api.github.com/users/pocolya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-04T14:01:04Z", "updated_at": "2020-03-06T22:13:51Z", "closed_at": "2020-03-06T22:13:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a dicom image that is converted to nifti with Dcm2Niix and an analyze segmentation image of the same patient coming from ITKSnap. Unfortunately, ITKSnap truncates the data when converting from DICOM (the double precision isn't accepted) and changes the rotation matrix. When I try to use the segmented image as a mask for Nifti image with Nibabel, I can't make them in the same orientation.\r\n\r\nI tried saving either with the header and/or rotation of the other, but nothing works.\r\nraw=nib.load('patient.nii.gz')\r\nrawArray=raw.get_fdata()\r\n\r\nseg=nib.load('seg.img')\r\nsegArray=seg.get_fdata()\r\n\r\nsegImage = nib.Nifti1Image(segArray,raw.affine,raw.header)\r\nnib.save(segImage, os.path.join(OUTPUT_FOLDER,'seg_temp.img'))\r\n\r\nseg=nib.load('seg_temp.img')\r\nsegArray=seg.get_fdata()\r\n\r\nSUVArray=numpy.where(segArray==1,rawArray*Factor,0)\r\nSUVImage = nib.Nifti1Image(SUVArray,raw.affine,raw.header)\r\nnib.save(SUVImage, os.path.join(OUTPUT_FOLDER,'selection_suv.img'))\r\n\r\nAny ideas on how to solve this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/792", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/792/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/792/events", "html_url": "https://github.com/nipy/nibabel/issues/792", "id": 481214622, "node_id": "MDU6SXNzdWU0ODEyMTQ2MjI=", "number": 792, "title": "incorrect datatype in GIFTI output (INT64 instead of INT32)", "user": {"login": "hyperbolicTom", "id": 5808710, "node_id": "MDQ6VXNlcjU4MDg3MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5808710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyperbolicTom", "html_url": "https://github.com/hyperbolicTom", "followers_url": "https://api.github.com/users/hyperbolicTom/followers", "following_url": "https://api.github.com/users/hyperbolicTom/following{/other_user}", "gists_url": "https://api.github.com/users/hyperbolicTom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyperbolicTom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyperbolicTom/subscriptions", "organizations_url": "https://api.github.com/users/hyperbolicTom/orgs", "repos_url": "https://api.github.com/users/hyperbolicTom/repos", "events_url": "https://api.github.com/users/hyperbolicTom/events{/privacy}", "received_events_url": "https://api.github.com/users/hyperbolicTom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1335808793, "node_id": "MDU6TGFiZWwxMzM1ODA4Nzkz", "url": "https://api.github.com/repos/nipy/nibabel/labels/GIFTI", "name": "GIFTI", "color": "e2a97c", "default": false, "description": ""}, {"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/7", "html_url": "https://github.com/nipy/nibabel/milestone/7", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/7/labels", "id": 4528040, "node_id": "MDk6TWlsZXN0b25lNDUyODA0MA==", "number": 7, "title": "2.5.1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2019-07-29T00:58:14Z", "updated_at": "2019-10-02T23:54:21Z", "due_on": "2019-09-23T07:00:00Z", "closed_at": "2019-10-02T23:54:21Z"}, "comments": 2, "created_at": "2019-08-15T15:47:19Z", "updated_at": "2019-09-16T21:25:43Z", "closed_at": "2019-09-16T21:25:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having an issue with NODE_INDEX. To reproduce:\r\n\r\n```Python\r\n#! /usr/bin/env python\r\n\r\nimport sys\r\nimport numpy as np\r\nimport nibabel\r\n\r\nprint(\"nibabel.__version__ =\", nibabel.__version__)\r\n\r\nidx = np.arange(10)\r\n\r\nda = nibabel.gifti.GiftiDataArray(idx,\r\n                                  intent = 'NIFTI_INTENT_NODE_INDEX',\r\n                                  datatype = 'NIFTI_TYPE_INT32')\r\n\r\ngim = nibabel.gifti.gifti.GiftiImage(darrays = [da])\r\nnibabel.save(gim, \"idx.gii\")\r\n\r\ngim = nibabel.load(\"idx.gii\")\r\nprint(gim.darrays[0].data)\r\n\r\nda = nibabel.gifti.GiftiDataArray(idx, encoding = 'GIFTI_ENCODING_ASCII',\r\n                                  intent = 'NIFTI_INTENT_NODE_INDEX',\r\n                                  datatype = 'NIFTI_TYPE_INT32')\r\n\r\ngim = nibabel.gifti.gifti.GiftiImage(darrays = [da])\r\nnibabel.save(gim, \"idx.gii\")\r\n\r\ngim = nibabel.load(\"idx.gii\")\r\nprint(gim.darrays[0].data)\r\n```\r\n\r\nWhat I get here, on a 64-bit machine:\r\n\r\n```\r\nnibabel.__version__ = 3.0.0dev\r\n[0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0]\r\n[0 1 2 3 4 5 6 7 8 9]\r\n```\r\n\r\nThe problem is that internally, the node index is stored as an int64 array, and although the output is specified as being INT32, it isn't converted before .tostring() is called.\r\n\r\nHere's a fix:\r\n\r\n```Diff\r\ndiff --git a/nibabel/gifti/gifti.py b/nibabel/gifti/gifti.py\r\nindex 22d6449e..e1149647 100644\r\n--- a/nibabel/gifti/gifti.py\r\n+++ b/nibabel/gifti/gifti.py\r\n@@ -464,7 +464,7 @@ class GiftiDataArray(xml.XmlSerializable):\r\n         # write data array depending on the encoding\r\n         dt_kind = data_type_codes.dtype[self.datatype].kind\r\n         data_array.append(\r\n-            _data_tag_element(self.data,\r\n+            _data_tag_element(self.data.astype(dt_kind),\r\n                               gifti_encoding_codes.specs[self.encoding],\r\n                               KIND2FMT[dt_kind],\r\n                               self.ind_ord))\r\n```\r\n\r\nPerhaps the bug is that self.data is int64 already, but I'm not sure about that.\r\nAnyway with this change the output is the same as with ASCII encoding.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/789", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/789/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/789/events", "html_url": "https://github.com/nipy/nibabel/issues/789", "id": 478715197, "node_id": "MDU6SXNzdWU0Nzg3MTUxOTc=", "number": 789, "title": "Propose gifti data API", "user": {"login": "htwangtw", "id": 13743617, "node_id": "MDQ6VXNlcjEzNzQzNjE3", "avatar_url": "https://avatars3.githubusercontent.com/u/13743617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htwangtw", "html_url": "https://github.com/htwangtw", "followers_url": "https://api.github.com/users/htwangtw/followers", "following_url": "https://api.github.com/users/htwangtw/following{/other_user}", "gists_url": "https://api.github.com/users/htwangtw/gists{/gist_id}", "starred_url": "https://api.github.com/users/htwangtw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htwangtw/subscriptions", "organizations_url": "https://api.github.com/users/htwangtw/orgs", "repos_url": "https://api.github.com/users/htwangtw/repos", "events_url": "https://api.github.com/users/htwangtw/events{/privacy}", "received_events_url": "https://api.github.com/users/htwangtw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1335808793, "node_id": "MDU6TGFiZWwxMzM1ODA4Nzkz", "url": "https://api.github.com/repos/nipy/nibabel/labels/GIFTI", "name": "GIFTI", "color": "e2a97c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/4", "html_url": "https://github.com/nipy/nibabel/milestone/4", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/4/labels", "id": 4119026, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNg==", "number": 4, "title": "3.0.0 RC1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-03-07T14:12:18Z", "updated_at": "2020-01-26T16:38:42Z", "due_on": "2019-10-28T07:00:00Z", "closed_at": "2020-01-26T16:38:42Z"}, "comments": 3, "created_at": "2019-08-08T22:28:29Z", "updated_at": "2019-11-20T22:23:22Z", "closed_at": "2019-11-20T22:23:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working with HCP Conte69 surface data in resolution that's not supported in the official HCP pipeline. I mostly work with surf.gii, shape.gii, func.gii and cifti format. I will focus on gifti in this issue as cifti is a different file format. I found the nibabel gifti function a bit difficult to use for read/write the actual data. I would like to propose a new API aiming at more intuitive access to the data and save new output. \r\n\r\nThe most important information for me as a user is\r\n1. the intents of the darrys\r\n2. size of the collection of darray (currently supported through GiftiImage.numDA)\r\n3. resolution (ie. mesh face and coordinate numbers)\r\n4. access data as numpy arrays rather than going through all GiftiImage.darrays to concatenate the information (similar to the output from nilearn.surface.load_surface_mesh) \r\n\r\n## Header-like method  to access information of in point 1 to 3\r\nThe current `GiftiImage.print_summary()` method will give you all the metadata, but the only useful information is the metadata in the intents. Currently, you have to access the darrays first to get more useful information.\r\n`GiftiImage.darrays[0].print_summary()`\r\nSome \r\nI would like to have a header that can access the information about the intents.\r\nSomething like this:\r\n```\r\nGiftiImage.header \r\nGiftiImage.header.intents - what are the intents of the data array\r\nGiftiImage.header.meta - for the metadata\r\n```\r\n\r\n## Access data  \r\nFor `.func.gii` and other metric files, it would be nice to concatenate all darrys for timeseires data through `get_data()`. \r\nFor any kind of mesh (`surf.gii`), the method will return a tuple of corrdinates and faces.\r\nThe preliminary idea is as follow:\r\n```\r\nget_data(intent_code=None):\r\n    timeseries = vstack(da.data for da in get_array_by_intent)\r\n    coords = get_arrays(pointset).data\r\n    faces = get_arrays(triangles).data\r\n    return (coords, faces)\r\n    if None:\r\n        tuple(da.data for da in self.darrays)\r\n```\r\n\r\n## Creating gifti files\r\nCurrently I replace the data in exisitng gifti files to create new image. It would be helpful if I can just pass a dictionary with the intents as keys and the data as the entry to create a new file.  \r\nFor surface mesh (`surf.gii`), the user can pass a tuple of (coords, faces) and the funciton will translate that into data arrays. For timeseries data or other metric data (`func.gii`, `shape.gii`, and so on), we can have a np array of the size time x faces and parse each timepoint as a darray to fit the gifti format.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/788", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/788/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/788/events", "html_url": "https://github.com/nipy/nibabel/issues/788", "id": 478153808, "node_id": "MDU6SXNzdWU0NzgxNTM4MDg=", "number": 788, "title": "FutureWarning generated in OrthoSlicer3D", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1492993213, "node_id": "MDU6TGFiZWwxNDkyOTkzMjEz", "url": "https://api.github.com/repos/nipy/nibabel/labels/good%20first%20issue", "name": "good first issue", "color": "08ce40", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-07T21:45:57Z", "updated_at": "2019-09-03T20:34:34Z", "closed_at": "2019-09-03T20:34:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nnibabel/viewers.py:417: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\r\n  vdata = self._data[idx].ravel()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/784", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/784/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/784/events", "html_url": "https://github.com/nipy/nibabel/issues/784", "id": 474689443, "node_id": "MDU6SXNzdWU0NzQ2ODk0NDM=", "number": 784, "title": "doctest AFNIHeader.get_data_scaling fails if ran \"alone\"", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}, {"id": 1335808556, "node_id": "MDU6TGFiZWwxMzM1ODA4NTU2", "url": "https://api.github.com/repos/nipy/nibabel/labels/documentation", "name": "documentation", "color": "5319e7", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/3", "html_url": "https://github.com/nipy/nibabel/milestone/3", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/3/labels", "id": 4119025, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNQ==", "number": 3, "title": "2.5.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-03-07T14:11:51Z", "updated_at": "2019-08-21T15:00:36Z", "due_on": "2019-07-29T07:00:00Z", "closed_at": "2019-08-21T15:00:36Z"}, "comments": 5, "created_at": "2019-07-30T16:41:21Z", "updated_at": "2019-08-02T00:12:59Z", "closed_at": "2019-08-02T00:12:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "originally reported in https://github.com/nipy/nibabel/pull/782 but has nothing to do with the endianess, so filing separately\r\n\r\nwhen I ran the full sweep using `python -m nose -s -v --with-doctest  nibabel 2>&1 | tee tests.log` that doctest was reported as passed:\r\n```\r\n(sid_s390x-dchroot)yoh@zelenka:~/nibabel$ grep AFNIHeader.get_data_scaling  tests.log \r\nDoctest: nibabel.brikhead.AFNIHeader.get_data_scaling ... ok\r\n``` \r\nbut when I run only the doctest - it fails\r\n```shell\r\n(sid_s390x-dchroot)yoh@zelenka:~/nibabel$ python -m nose -s -v --with-doctest  nibabel/brikhead.py\r\nDoctest: nibabel.brikhead.AFNIHeader.__init__ ... ok\r\nDoctest: nibabel.brikhead.AFNIHeader.get_affine ... ok\r\nDoctest: nibabel.brikhead.AFNIHeader.get_data_scaling ... FAIL\r\nDoctest: nibabel.brikhead.AFNIHeader.get_volume_labels ... ok\r\nDoctest: nibabel.brikhead.AFNIImage ... ok\r\nDoctest: nibabel.brikhead._unpack_var ... ok\r\nDoctest: nibabel.brikhead.parse_AFNI_header ... ok\r\n\r\n======================================================================\r\nFAIL: Doctest: nibabel.brikhead.AFNIHeader.get_data_scaling\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/doctest.py\", line 2224, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for nibabel.brikhead.AFNIHeader.get_data_scaling\r\n  File \"/home/yoh/nibabel/nibabel/brikhead.py\", line 414, in get_data_scaling\r\n\r\n----------------------------------------------------------------------\r\nFile \"/home/yoh/nibabel/nibabel/brikhead.py\", line 422, in nibabel.brikhead.AFNIHeader.get_data_scaling\r\nFailed example:\r\n    header.get_data_scaling()\r\nExpected:\r\n    array([  3.88336300e-08])\r\nGot:\r\n    array([3.883363e-08])\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 7 tests in 0.011s\r\n```\r\nthat is numpy 1.16.2 .  Happens to me also on my laptop (regular little endian amd64) with the same numpy\r\n```\r\n(git)hopa:~nipy-suite/nibabel[master]git\r\n$> python -m nose -s -v --with-doctest  nibabel/brikhead.py\r\nDoctest: nibabel.brikhead.AFNIHeader.__init__ ... ok\r\nDoctest: nibabel.brikhead.AFNIHeader.get_affine ... ok\r\nDoctest: nibabel.brikhead.AFNIHeader.get_data_scaling ... FAIL\r\nDoctest: nibabel.brikhead.AFNIHeader.get_volume_labels ... ok\r\nDoctest: nibabel.brikhead.AFNIImage ... ok\r\nDoctest: nibabel.brikhead._unpack_var ... ok\r\nDoctest: nibabel.brikhead.parse_AFNI_header ... ok\r\n\r\n======================================================================\r\nFAIL: Doctest: nibabel.brikhead.AFNIHeader.get_data_scaling\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/doctest.py\", line 2224, in runTest\r\n    raise self.failureException(self.format_failure(new.getvalue()))\r\nAssertionError: Failed doctest test for nibabel.brikhead.AFNIHeader.get_data_scaling\r\n  File \"/home/yoh/proj/nipy/nipy-suite/nibabel/nibabel/brikhead.py\", line 414, in get_data_scaling\r\n\r\n----------------------------------------------------------------------\r\nFile \"/home/yoh/proj/nipy/nipy-suite/nibabel/nibabel/brikhead.py\", line 422, in nibabel.brikhead.AFNIHeader.get_data_scaling\r\nFailed example:\r\n    header.get_data_scaling()\r\nExpected:\r\n    array([  3.88336300e-08])\r\nGot:\r\n    array([3.883363e-08])\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 7 tests in 0.017s\r\n\r\nFAILED (failures=1)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/781", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/781/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/781/events", "html_url": "https://github.com/nipy/nibabel/issues/781", "id": 474192045, "node_id": "MDU6SXNzdWU0NzQxOTIwNDU=", "number": 781, "title": "Build failure with numpy 1.17.0", "user": {"login": "toddrme2178", "id": 4181796, "node_id": "MDQ6VXNlcjQxODE3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddrme2178", "html_url": "https://github.com/toddrme2178", "followers_url": "https://api.github.com/users/toddrme2178/followers", "following_url": "https://api.github.com/users/toddrme2178/following{/other_user}", "gists_url": "https://api.github.com/users/toddrme2178/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddrme2178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddrme2178/subscriptions", "organizations_url": "https://api.github.com/users/toddrme2178/orgs", "repos_url": "https://api.github.com/users/toddrme2178/repos", "events_url": "https://api.github.com/users/toddrme2178/events{/privacy}", "received_events_url": "https://api.github.com/users/toddrme2178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-29T18:25:56Z", "updated_at": "2019-08-04T13:04:42Z", "closed_at": "2019-08-04T13:04:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error when running the unittests with with numpy 1.17.0.  It doesn't happen with numpy 1.16\r\n\r\n```\r\n======================================================================\r\nERROR: nibabel.tests.test_volumeutils.test_a2f_non_numeric\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/abuild/rpmbuild/BUILD/nibabel-2.4.1/nibabel/tests/test_volumeutils.py\", line 702, in test_a2f_non_numeric\r\n    arr.astype(float)\r\nTypeError: Cannot cast array from dtype([('f1', '<f4'), ('f2', '<i2')]) to dtype('float64') according to the rule 'unsafe'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/776", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/776/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/776/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/776/events", "html_url": "https://github.com/nipy/nibabel/issues/776", "id": 473462718, "node_id": "MDU6SXNzdWU0NzM0NjI3MTg=", "number": 776, "title": "ECAT file support", "user": {"login": "idoimaging", "id": 505971, "node_id": "MDQ6VXNlcjUwNTk3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/505971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idoimaging", "html_url": "https://github.com/idoimaging", "followers_url": "https://api.github.com/users/idoimaging/followers", "following_url": "https://api.github.com/users/idoimaging/following{/other_user}", "gists_url": "https://api.github.com/users/idoimaging/gists{/gist_id}", "starred_url": "https://api.github.com/users/idoimaging/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idoimaging/subscriptions", "organizations_url": "https://api.github.com/users/idoimaging/orgs", "repos_url": "https://api.github.com/users/idoimaging/repos", "events_url": "https://api.github.com/users/idoimaging/events{/privacy}", "received_events_url": "https://api.github.com/users/idoimaging/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/3", "html_url": "https://github.com/nipy/nibabel/milestone/3", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/3/labels", "id": 4119025, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNQ==", "number": 3, "title": "2.5.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-03-07T14:11:51Z", "updated_at": "2019-08-21T15:00:36Z", "due_on": "2019-07-29T07:00:00Z", "closed_at": "2019-08-21T15:00:36Z"}, "comments": 9, "created_at": "2019-07-26T17:33:25Z", "updated_at": "2019-08-02T00:13:55Z", "closed_at": "2019-08-02T00:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, `EcatImage` is not included in `all_image_classes` in `imageclasses.py`.  Adding it and calling `load()` on an ECAT file gives an error in `ecat.py` line 562:\r\n\r\n            i = iter(affs)\r\n            first = i.next()\r\n\r\nChanging the second line to the Python 3 syntax `first = next(i)` seems to address this issue, but there may be other Python 2 code in the `EcatImage` class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/775", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/775/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/775/events", "html_url": "https://github.com/nipy/nibabel/issues/775", "id": 466486531, "node_id": "MDU6SXNzdWU0NjY0ODY1MzE=", "number": 775, "title": "Test failure on s390x: test_nib_tck2trk", "user": {"login": "sanjayankur31", "id": 102575, "node_id": "MDQ6VXNlcjEwMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjayankur31", "html_url": "https://github.com/sanjayankur31", "followers_url": "https://api.github.com/users/sanjayankur31/followers", "following_url": "https://api.github.com/users/sanjayankur31/following{/other_user}", "gists_url": "https://api.github.com/users/sanjayankur31/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjayankur31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjayankur31/subscriptions", "organizations_url": "https://api.github.com/users/sanjayankur31/orgs", "repos_url": "https://api.github.com/users/sanjayankur31/repos", "events_url": "https://api.github.com/users/sanjayankur31/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjayankur31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/3", "html_url": "https://github.com/nipy/nibabel/milestone/3", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/3/labels", "id": 4119025, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNQ==", "number": 3, "title": "2.5.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-03-07T14:11:51Z", "updated_at": "2019-08-21T15:00:36Z", "due_on": "2019-07-29T07:00:00Z", "closed_at": "2019-08-21T15:00:36Z"}, "comments": 14, "created_at": "2019-07-10T19:48:19Z", "updated_at": "2019-08-07T02:07:23Z", "closed_at": "2019-08-02T00:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "While updating the Fedora package to 2.4.1, we received build failures on s390x. \r\n\r\nHardware information:\r\n\r\n```\r\nCPU info:\r\nArchitecture:        s390x\r\nCPU op-mode(s):      32-bit, 64-bit\r\nByte Order:          Big Endian\r\nCPU(s):              4\r\nOn-line CPU(s) list: 0-3\r\nThread(s) per core:  1\r\nCore(s) per socket:  1\r\nSocket(s) per book:  1\r\nBook(s) per drawer:  1\r\nDrawer(s):           4\r\nNUMA node(s):        1\r\nVendor ID:           IBM/S390\r\nMachine type:        2964\r\nCPU dynamic MHz:     5000\r\nCPU static MHz:      5000\r\nBogoMIPS:            3033.00\r\nHypervisor:          KVM/Linux\r\nHypervisor vendor:   KVM\r\nVirtualization type: full\r\nDispatching mode:    horizontal\r\nL1d cache:           128K\r\nL1i cache:           96K\r\nL2d cache:           2048K\r\nL2i cache:           2048K\r\nL3 cache:            65536K\r\nL4 cache:            491520K\r\nNUMA node0 CPU(s):   0-3\r\nFlags:               esan3 zarch stfle msa ldisp eimm dfp edat etf3eh highgprs te vx sie\r\n\r\n\r\nMemory:\r\n              total        used        free      shared  buff/cache   available\r\nMem:       10306200      259056     8939776         116     1107368     9935280\r\nSwap:       2097148        2568     2094580\r\n\r\n\r\nStorage:\r\nFilesystem      Size  Used Avail Use% Mounted on\r\n/dev/vda3       103G  3.2G   95G   4% /\r\n```\r\n\r\nOnly one test fails:\r\n\r\n```\r\nBUILDSTDERR: ======================================================================\r\nBUILDSTDERR: ERROR: nibabel.tests.test_scripts.test_nib_tck2trk\r\nBUILDSTDERR: ----------------------------------------------------------------------\r\nBUILDSTDERR: Traceback (most recent call last):\r\nBUILDSTDERR:   File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\nBUILDSTDERR:     self.test(*self.arg)\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/nibabel-2.4.1/nibabel/tests/test_scripts.py\", line 488, in test_nib_tck2trk\r\nBUILDSTDERR:     trk = nib.streamlines.load(standard_trk)\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/nibabel-2.4.1/nibabel/streamlines/__init__.py\", line 96, in load\r\nBUILDSTDERR:     return tractogram_file.load(fileobj, lazy_load=lazy_load)\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/nibabel-2.4.1/nibabel/streamlines/trk.py\", line 372, in load\r\nBUILDSTDERR:     arr_seqs = create_arraysequences_from_generator(trk_reader, n=3)\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/nibabel-2.4.1/nibabel/streamlines/array_sequence.py\", line 387, in create_arraysequences_from_generator\r\nBUILDSTDERR:     for data in gen:\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/nibabel-2.4.1/nibabel/streamlines/trk.py\", line 683, in _read\r\nBUILDSTDERR:     buffer=f.read(nb_pts * pts_and_scalars_size))\r\nBUILDSTDERR: TypeError: buffer is too small for requested array\r\nBUILDSTDERR: ----------------------------------------------------------------------\r\n```\r\n\r\nThe complete build log is here:\r\n[build.txt](https://github.com/nipy/nibabel/files/3379111/build.txt)\r\n\r\n\r\nThe build completes fine on x86_64, i686, ppc64le, and armv7hl", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/773", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/773/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/773/events", "html_url": "https://github.com/nipy/nibabel/issues/773", "id": 463784776, "node_id": "MDU6SXNzdWU0NjM3ODQ3NzY=", "number": 773, "title": "Checking shape of CIFTI2 images", "user": {"login": "MichielCottaar", "id": 4652580, "node_id": "MDQ6VXNlcjQ2NTI1ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4652580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichielCottaar", "html_url": "https://github.com/MichielCottaar", "followers_url": "https://api.github.com/users/MichielCottaar/followers", "following_url": "https://api.github.com/users/MichielCottaar/following{/other_user}", "gists_url": "https://api.github.com/users/MichielCottaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichielCottaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichielCottaar/subscriptions", "organizations_url": "https://api.github.com/users/MichielCottaar/orgs", "repos_url": "https://api.github.com/users/MichielCottaar/repos", "events_url": "https://api.github.com/users/MichielCottaar/events{/privacy}", "received_events_url": "https://api.github.com/users/MichielCottaar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/3", "html_url": "https://github.com/nipy/nibabel/milestone/3", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/3/labels", "id": 4119025, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNQ==", "number": 3, "title": "2.5.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-03-07T14:11:51Z", "updated_at": "2019-08-21T15:00:36Z", "due_on": "2019-07-29T07:00:00Z", "closed_at": "2019-08-21T15:00:36Z"}, "comments": 2, "created_at": "2019-07-03T14:26:24Z", "updated_at": "2019-07-13T18:15:42Z", "closed_at": "2019-07-13T18:15:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At present there is no checking of whether the shape of the data array is consistent with the CIFTI2 header. In the example below, I expect two numbers (A and B) for each of my three vertices on the left cortex, so a (2, 3)-shaped array. However, nibabel will happily accept the (7,4)-shaped array provided here. Similarly, when reading the CIFTI file no errors or warnings are raised.\r\n\r\n```\r\nfrom nibabel import cifti2\r\nimport numpy as np\r\ndata = np.random.rand(7, 4)\r\nbm = cifti2.BrainModelAxis.from_mask([True, True, True], name='left_cortex')\r\nsc = cifti2.ScalarAxis(['A', 'B'])\r\nimg = cifti2.Cifti2Image(data, header=(sc, bm))\r\nimg.to_filename('test.dscalar.nii')\r\n```\r\n\r\nI'm happy to implement some code to compare the shape of the array with that implied by the header, but I'm not sure what would be the best time to make this check and whether it should be a warning or an error. The options are:\r\n1. warning or error when creating the Cifti2Image itself\r\n2. warning or error when writing the Cifti2Image\r\n3. warning or error when reading the Cifti2Image\r\n\r\nAny suggestions on where to plug this test and whether to make it a warning or an error? We can't simply adjust the header shape to match the data as this would involve creating new labels for the rows or columns and hence would lead to very confusing behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/772", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/772/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/772/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/772/events", "html_url": "https://github.com/nipy/nibabel/issues/772", "id": 460454852, "node_id": "MDU6SXNzdWU0NjA0NTQ4NTI=", "number": 772, "title": "Loading NIFTI files with nibabel sometimes breaks them", "user": {"login": "johnmarktaylor91", "id": 16569815, "node_id": "MDQ6VXNlcjE2NTY5ODE1", "avatar_url": "https://avatars3.githubusercontent.com/u/16569815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnmarktaylor91", "html_url": "https://github.com/johnmarktaylor91", "followers_url": "https://api.github.com/users/johnmarktaylor91/followers", "following_url": "https://api.github.com/users/johnmarktaylor91/following{/other_user}", "gists_url": "https://api.github.com/users/johnmarktaylor91/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnmarktaylor91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnmarktaylor91/subscriptions", "organizations_url": "https://api.github.com/users/johnmarktaylor91/orgs", "repos_url": "https://api.github.com/users/johnmarktaylor91/repos", "events_url": "https://api.github.com/users/johnmarktaylor91/events{/privacy}", "received_events_url": "https://api.github.com/users/johnmarktaylor91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-25T14:20:42Z", "updated_at": "2019-06-26T22:15:20Z", "closed_at": "2019-06-26T16:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, sometimes when I load a NIFTI file using nib.Nifti1Image.from_filename or nib.load, and then try to load that file again later, I get the error: \"Not a gzipped file\". My only interaction with these files is through nibabel, so I'm wondering I'm accidentally corrupting these files somehow? Has anyone ever run into this, and does anyone know how to prevent it? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/771", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/771/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/771/events", "html_url": "https://github.com/nipy/nibabel/issues/771", "id": 460053743, "node_id": "MDU6SXNzdWU0NjAwNTM3NDM=", "number": 771, "title": "How to supress warnings when reading dscalar CIFTI2 images from HCP?", "user": {"login": "ellisdg", "id": 8558995, "node_id": "MDQ6VXNlcjg1NTg5OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8558995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellisdg", "html_url": "https://github.com/ellisdg", "followers_url": "https://api.github.com/users/ellisdg/followers", "following_url": "https://api.github.com/users/ellisdg/following{/other_user}", "gists_url": "https://api.github.com/users/ellisdg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellisdg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellisdg/subscriptions", "organizations_url": "https://api.github.com/users/ellisdg/orgs", "repos_url": "https://api.github.com/users/ellisdg/repos", "events_url": "https://api.github.com/users/ellisdg/events{/privacy}", "received_events_url": "https://api.github.com/users/ellisdg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-24T19:20:20Z", "updated_at": "2019-07-29T01:22:08Z", "closed_at": "2019-07-29T01:22:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I open a CIFTI2 dscalar file from the Human Connectome Project, the following message is printed to the terminal:\r\n```\r\npixdim[1,2,3] should be non-zero; setting 0 dims to 1\r\n```\r\nIs there a way to suppress this message so that I don't have to see it every time?\r\nI am using nibabel 2.4.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/770", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/770/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/770/events", "html_url": "https://github.com/nipy/nibabel/issues/770", "id": 459140405, "node_id": "MDU6SXNzdWU0NTkxNDA0MDU=", "number": 770, "title": "Deprecate DataobjImage.get_data in nibabel 3.0", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/4", "html_url": "https://github.com/nipy/nibabel/milestone/4", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/4/labels", "id": 4119026, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNg==", "number": 4, "title": "3.0.0 RC1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-03-07T14:12:18Z", "updated_at": "2020-01-26T16:38:42Z", "due_on": "2019-10-28T07:00:00Z", "closed_at": "2020-01-26T16:38:42Z"}, "comments": 0, "created_at": "2019-06-21T10:58:15Z", "updated_at": "2019-08-28T00:45:39Z", "closed_at": "2019-08-28T00:45:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per the changelog, `DataobjImage.get_data()` was scheduled for deprecation in April 2018, but we missed that. Tools that are stuck on Python 2 aren't likely to get updated, so by leaving this change out of the 2.5 series, we can give them a bit of a soft landing.\r\n\r\nI'm proposing that we officially deprecate in 3.0, remove in 5.0. Please make noise if you have objections of any kind.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/766", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/766/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/766/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/766/events", "html_url": "https://github.com/nipy/nibabel/issues/766", "id": 449104509, "node_id": "MDU6SXNzdWU0NDkxMDQ1MDk=", "number": 766, "title": "Some Nifty images are not parsed properly", "user": {"login": "srinivasaravind5", "id": 28944481, "node_id": "MDQ6VXNlcjI4OTQ0NDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/28944481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasaravind5", "html_url": "https://github.com/srinivasaravind5", "followers_url": "https://api.github.com/users/srinivasaravind5/followers", "following_url": "https://api.github.com/users/srinivasaravind5/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasaravind5/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasaravind5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasaravind5/subscriptions", "organizations_url": "https://api.github.com/users/srinivasaravind5/orgs", "repos_url": "https://api.github.com/users/srinivasaravind5/repos", "events_url": "https://api.github.com/users/srinivasaravind5/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasaravind5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-05-28T07:25:40Z", "updated_at": "2019-09-16T21:28:48Z", "closed_at": "2019-09-16T21:28:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI am using nibabel to get the data from a nifti file and plot them using matplotlib.\r\n\r\nWhen I do so, for some file it fails and the result is wrong. I verified the results with the ITKSnap which can view nifti files.\r\n\r\n```\r\nimport numpy as np\r\nimport nibabel as nib\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\ndef save_images_to_local(pix, img_name):\r\n    plt.imshow(pix, cmap=plt.cm.bone)\r\n    plt.axis('off')\r\n    plt.savefig(img_name)\r\n    plt.cla()\r\n    return\r\n\r\n\r\nfile_path = '/home/aravind/Desktop/dicom-test/zstat1.nii.gz'\r\nds = nib.load(file_path).get_data()\r\n\r\nrandom_number = \"100\"\r\ni = 0\r\nlist_of_image_frames = []\r\n\r\nfor pix in ds:\r\n    img_name = \"media/\" + random_number + str(i) + \".png\"\r\n    list_of_image_frames.append({'pix':pix, 'img_name':img_name})\r\n    i += 1\r\n\r\nfor image_frame in list_of_image_frames:\r\n    save_images_to_local(image_frame['pix'], image_frame['img_name'])\r\n\r\n```\r\n\r\nFor this file zstat1.nii.gz it works, for 21.nii.gz the results are wrong.\r\nPublic URLs for the files\r\nhttps://s3.ap-south-1.amazonaws.com/dicom-viewer-backend-dev/dicom_viewer/media/zstat1.nii.gz\r\nhttps://s3.ap-south-1.amazonaws.com/dicom-viewer-backend-dev/dicom_viewer/media/21.nii.gz", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/765", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/765/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/765/events", "html_url": "https://github.com/nipy/nibabel/issues/765", "id": 448853324, "node_id": "MDU6SXNzdWU0NDg4NTMzMjQ=", "number": 765, "title": "Taking hours to parse a nifti file", "user": {"login": "srinivasaravind5", "id": 28944481, "node_id": "MDQ6VXNlcjI4OTQ0NDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/28944481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasaravind5", "html_url": "https://github.com/srinivasaravind5", "followers_url": "https://api.github.com/users/srinivasaravind5/followers", "following_url": "https://api.github.com/users/srinivasaravind5/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasaravind5/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasaravind5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasaravind5/subscriptions", "organizations_url": "https://api.github.com/users/srinivasaravind5/orgs", "repos_url": "https://api.github.com/users/srinivasaravind5/repos", "events_url": "https://api.github.com/users/srinivasaravind5/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasaravind5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-05-27T13:16:53Z", "updated_at": "2019-05-27T15:53:10Z", "closed_at": "2019-05-27T13:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am trying to parse and get data from a nifti file.\r\n\r\n```\r\nimport numpy as np\r\nimport nibabel as nib\r\n\r\nfile_path = '/home/aravind/Desktop/dicom-test/filtered_func_data.nii'\r\nimg = nib.load(file_path).get_data()\r\n\r\nprint(img)\r\n```\r\n\r\nI waited for more than 10 minutes the terminal was still running.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/758", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/758/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/758/events", "html_url": "https://github.com/nipy/nibabel/issues/758", "id": 444682825, "node_id": "MDU6SXNzdWU0NDQ2ODI4MjU=", "number": 758, "title": "to_filename() does not store header changes in .dlabel.nii", "user": {"login": "javzapata", "id": 20221036, "node_id": "MDQ6VXNlcjIwMjIxMDM2", "avatar_url": "https://avatars0.githubusercontent.com/u/20221036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javzapata", "html_url": "https://github.com/javzapata", "followers_url": "https://api.github.com/users/javzapata/followers", "following_url": "https://api.github.com/users/javzapata/following{/other_user}", "gists_url": "https://api.github.com/users/javzapata/gists{/gist_id}", "starred_url": "https://api.github.com/users/javzapata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javzapata/subscriptions", "organizations_url": "https://api.github.com/users/javzapata/orgs", "repos_url": "https://api.github.com/users/javzapata/repos", "events_url": "https://api.github.com/users/javzapata/events{/privacy}", "received_events_url": "https://api.github.com/users/javzapata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-15T23:04:04Z", "updated_at": "2019-05-20T02:37:17Z", "closed_at": "2019-05-20T02:37:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to open a .dlabel.nii file, modify its header and save it to a new .dlabel.nii file. However the **to_filename()** from the **FileBasedImage** class in the **nibabel** does not work. When I open the new file I don't see any changes in the header.\r\n\r\nHere is an example code. Any help would be really appreciated. The label file used in the example below can be downloaded from: https://balsa.wustl.edu/study/show/RVVG\r\n\r\n```Python\r\nimport numpy as np\r\nimport nibabel.cifti2 as ci\r\n\r\nmyLabelTable = ci.Cifti2LabelTable()\r\nmyLabelTable.append(ci.Cifti2Label(key=0, label='0', red=1.0, green=1.0, blue=1.0, alpha=0.0))\r\nfor i in np.arange(0,360):\r\n    myLabelTable.append(ci.Cifti2Label(key=i+1, label=str(i+1), red=0.5, green=0.5, blue=0.5, alpha=1.0))\r\n\r\n\r\nlabelFile = \"Q1-Q6_RelatedParcellation210.CorticalAreas_dil_Final_Final_Areas_Group_Colors.32k_fs_LR.dlabel.nii\"\r\n\r\nimg = ci.Cifti2Image.from_filename(labelFile)\r\nimg.header.matrix._mims[0]._maps[0]._label_table=myLabelTable\r\nimg.update_headers()\r\nimg.to_filename('newLabels.dlabel.nii')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/757", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/757/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/757/events", "html_url": "https://github.com/nipy/nibabel/issues/757", "id": 442830198, "node_id": "MDU6SXNzdWU0NDI4MzAxOTg=", "number": 757, "title": "Broken link in docstring", "user": {"login": "arokem", "id": 118582, "node_id": "MDQ6VXNlcjExODU4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/118582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arokem", "html_url": "https://github.com/arokem", "followers_url": "https://api.github.com/users/arokem/followers", "following_url": "https://api.github.com/users/arokem/following{/other_user}", "gists_url": "https://api.github.com/users/arokem/gists{/gist_id}", "starred_url": "https://api.github.com/users/arokem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arokem/subscriptions", "organizations_url": "https://api.github.com/users/arokem/orgs", "repos_url": "https://api.github.com/users/arokem/repos", "events_url": "https://api.github.com/users/arokem/events{/privacy}", "received_events_url": "https://api.github.com/users/arokem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T17:53:01Z", "updated_at": "2019-06-21T10:59:56Z", "closed_at": "2019-06-21T10:59:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This link is now broken:\r\n\r\nhttps://github.com/nipy/nibabel/blob/master/nibabel/freesurfer/mghformat.py#L255\r\n\r\nThey must've moved that page elsewhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/756", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/756/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/756/events", "html_url": "https://github.com/nipy/nibabel/issues/756", "id": 439171363, "node_id": "MDU6SXNzdWU0MzkxNzEzNjM=", "number": 756, "title": "Cifti2Image.from_filename does not accept mmap option", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1335808952, "node_id": "MDU6TGFiZWwxMzM1ODA4OTUy", "url": "https://api.github.com/repos/nipy/nibabel/labels/CIFTI-2", "name": "CIFTI-2", "color": "f291d5", "default": false, "description": ""}, {"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/6", "html_url": "https://github.com/nipy/nibabel/milestone/6", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/6/labels", "id": 4191926, "node_id": "MDk6TWlsZXN0b25lNDE5MTkyNg==", "number": 6, "title": "2.4.1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-04-02T02:36:40Z", "updated_at": "2019-05-28T02:13:51Z", "due_on": "2019-05-27T07:00:00Z", "closed_at": "2019-05-28T02:13:51Z"}, "comments": 2, "created_at": "2019-05-01T13:52:06Z", "updated_at": "2019-05-23T18:21:18Z", "closed_at": "2019-05-23T18:21:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Analyze-based images (including `Nifti2Image`) permit a `mmap` option for `from_filename` and `from_filemap`. `Cifti2Image` should allow the same. This should be an easy fix, simply adding the option, passing it through to `Nifti2Image`, and updating the docstrings.\r\n\r\nI will address this today and target a 2.4.1 release. Please chime in if you have concerns.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/748", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/748/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/748/events", "html_url": "https://github.com/nipy/nibabel/issues/748", "id": 430749679, "node_id": "MDU6SXNzdWU0MzA3NDk2Nzk=", "number": 748, "title": "Confusion about negative number shows  when dealing with nii format", "user": {"login": "yaoyao14", "id": 32839225, "node_id": "MDQ6VXNlcjMyODM5MjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/32839225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaoyao14", "html_url": "https://github.com/yaoyao14", "followers_url": "https://api.github.com/users/yaoyao14/followers", "following_url": "https://api.github.com/users/yaoyao14/following{/other_user}", "gists_url": "https://api.github.com/users/yaoyao14/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaoyao14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaoyao14/subscriptions", "organizations_url": "https://api.github.com/users/yaoyao14/orgs", "repos_url": "https://api.github.com/users/yaoyao14/repos", "events_url": "https://api.github.com/users/yaoyao14/events{/privacy}", "received_events_url": "https://api.github.com/users/yaoyao14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-09T03:29:18Z", "updated_at": "2019-04-24T20:18:46Z", "closed_at": "2019-04-24T20:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a freshman in this area\r\nI use get_fdata() function for my iamge in nii format, then transform it into numpy.array()\r\nthen I found values in this array are all  about -25~-20, then I calculate mean and std of it, but the mean is about  20. It's strange,and I don't know the reason.\r\nI have two questions. The first one, is it reasonable that values are negative ? \r\nThe second one is why when values are negative but mean of them is positive ? \r\nIs something wrong here? If so,please tell me, thank you so much !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/747", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/747/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/747/events", "html_url": "https://github.com/nipy/nibabel/issues/747", "id": 429131177, "node_id": "MDU6SXNzdWU0MjkxMzExNzc=", "number": 747, "title": "Error openning dlabel file: ValueError: Only CIFTI-2 files are supported", "user": {"login": "sina-mansour", "id": 16105138, "node_id": "MDQ6VXNlcjE2MTA1MTM4", "avatar_url": "https://avatars1.githubusercontent.com/u/16105138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sina-mansour", "html_url": "https://github.com/sina-mansour", "followers_url": "https://api.github.com/users/sina-mansour/followers", "following_url": "https://api.github.com/users/sina-mansour/following{/other_user}", "gists_url": "https://api.github.com/users/sina-mansour/gists{/gist_id}", "starred_url": "https://api.github.com/users/sina-mansour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sina-mansour/subscriptions", "organizations_url": "https://api.github.com/users/sina-mansour/orgs", "repos_url": "https://api.github.com/users/sina-mansour/repos", "events_url": "https://api.github.com/users/sina-mansour/events{/privacy}", "received_events_url": "https://api.github.com/users/sina-mansour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-04T07:49:38Z", "updated_at": "2019-04-04T07:58:50Z", "closed_at": "2019-04-04T07:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen using nibabel.load function to open the dlabel file provided in HCP group average data for resting state networks (file name is \"RSN-networks.32k_fs_LR.dlabel.nii\") I get the following error:\r\n\r\n```\r\n~/.local/lib/python3.6/site-packages/nibabel/cifti2/parse_cifti2.py in StartElementHandler(self, name, attrs)\r\n    155             self.header.version = attrs['Version']\r\n    156             if LooseVersion(self.header.version) < LooseVersion('2'):\r\n--> 157                 raise ValueError('Only CIFTI-2 files are supported')\r\n    158             self.fsm_state.append('CIFTI')\r\n    159             self.struct_state.append(self.header)\r\n\r\nValueError: Only CIFTI-2 files are supported\r\n```\r\nI'm not sure why the parser is throwing an error. However another dlabel file (a parcellation file from HCP) can be loaded without error.\r\n\r\nSince both files open without a problem in workbench viewer, I think it needs to be addressed in nibabel.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/746", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/746/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/746/events", "html_url": "https://github.com/nipy/nibabel/issues/746", "id": 427857297, "node_id": "MDU6SXNzdWU0Mjc4NTcyOTc=", "number": 746, "title": "Cannot set values in GIFTI data array loaded from file", "user": {"login": "ldaumail", "id": 49167117, "node_id": "MDQ6VXNlcjQ5MTY3MTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/49167117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldaumail", "html_url": "https://github.com/ldaumail", "followers_url": "https://api.github.com/users/ldaumail/followers", "following_url": "https://api.github.com/users/ldaumail/following{/other_user}", "gists_url": "https://api.github.com/users/ldaumail/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldaumail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldaumail/subscriptions", "organizations_url": "https://api.github.com/users/ldaumail/orgs", "repos_url": "https://api.github.com/users/ldaumail/repos", "events_url": "https://api.github.com/users/ldaumail/events{/privacy}", "received_events_url": "https://api.github.com/users/ldaumail/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/6", "html_url": "https://github.com/nipy/nibabel/milestone/6", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/6/labels", "id": 4191926, "node_id": "MDk6TWlsZXN0b25lNDE5MTkyNg==", "number": 6, "title": "2.4.1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-04-02T02:36:40Z", "updated_at": "2019-05-28T02:13:51Z", "due_on": "2019-05-27T07:00:00Z", "closed_at": "2019-05-28T02:13:51Z"}, "comments": 1, "created_at": "2019-04-01T18:49:29Z", "updated_at": "2019-04-29T13:03:01Z", "closed_at": "2019-04-29T13:03:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear numpy experts, \r\n\r\nI am running fmriprep on singularity with a version 3.01 image\r\n\r\nand my whole 76 subjects dataset run in parallel are crashing on our HPC and give this error message: \r\n\r\n\"\r\nNode: \r\nfmriprep_wf.single_subject_109_wf.func_preproc_ses_1_task_restingstate_wf.bold_surf_wf.medial_nans\r\nWorking directory: /mnt/data/loic2/work/fmriprep_wf/single_subject_109_wf/func_preproc_ses_1_task_restingstate_wf/bold_surf_wf/_hemi_rh/medial_nans\r\n\r\nNode inputs:\r\n\r\nin_file = ['/mnt/data/loic2/work/fmriprep_wf/single_subject_109_wf/func_preproc_ses_1_task_restingstate_wf/bold_surf_wf/_hemi_rh/sampler/mapflow/_sampler0/rh.fsaverage5.gii']\r\nsubjects_dir = <undefined>\r\ntarget_subject = ['fsaverage5']\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/plugins/multiproc.py\", line 69, in run_node\r\n    result['result'] = node.run(updatehash=updatehash)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/nodes.py\", line 473, in run\r\n    result = self._run_interface(execute=True)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/nodes.py\", line 1253, in _run_interface\r\n    self.config['execution']['stop_on_first_crash'])))\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/nodes.py\", line 1128, in _collate_results\r\n    for i, nresult, err in nodes:\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/utils.py\", line 99, in nodelist_runner\r\n    result = node.run(updatehash=updatehash)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/nodes.py\", line 473, in run\r\n    result = self._run_interface(execute=True)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/nodes.py\", line 557, in _run_interface\r\n    return self._run_command(execute)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/pipeline/engine/nodes.py\", line 637, in _run_command\r\n    result = self._interface.run(cwd=outdir)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/nipype/interfaces/base/core.py\", line 369, in run\r\n    runtime = self._run_interface(runtime)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/niworkflows/interfaces/freesurfer.py\", line 328, in _run_interface\r\n    newpath=runtime.cwd)\r\n  File \"/usr/local/miniconda/lib/python3.7/site-packages/niworkflows/interfaces/freesurfer.py\", line 463, in medial_wall_to_nan\r\n    darray.data[medial] = np.nan\r\nValueError: assignment destination is read-only\r\n\"\r\nWould you know how to fix it? \r\nIt looks like there was a modification of numpy, isn't it?\r\n\r\nThanks in advance for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/737", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/737/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/737/events", "html_url": "https://github.com/nipy/nibabel/issues/737", "id": 416851985, "node_id": "MDU6SXNzdWU0MTY4NTE5ODU=", "number": 737, "title": "scl_slope/scl_inter", "user": {"login": "tashrifbillah", "id": 35086881, "node_id": "MDQ6VXNlcjM1MDg2ODgx", "avatar_url": "https://avatars3.githubusercontent.com/u/35086881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tashrifbillah", "html_url": "https://github.com/tashrifbillah", "followers_url": "https://api.github.com/users/tashrifbillah/followers", "following_url": "https://api.github.com/users/tashrifbillah/following{/other_user}", "gists_url": "https://api.github.com/users/tashrifbillah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tashrifbillah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tashrifbillah/subscriptions", "organizations_url": "https://api.github.com/users/tashrifbillah/orgs", "repos_url": "https://api.github.com/users/tashrifbillah/repos", "events_url": "https://api.github.com/users/tashrifbillah/events{/privacy}", "received_events_url": "https://api.github.com/users/tashrifbillah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-04T15:21:15Z", "updated_at": "2019-03-04T18:31:27Z", "closed_at": "2019-03-04T18:31:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "If an image is of relative intensity does Nibabel ignore scl_slope/scl_inter when reporting the data? In other words, where can I see the code for it?\r\n\r\nPS. did a `grep`, but don't see any such condition. Rather it looks like, Nibabel always scales data \r\n> if scl_slope!=1 and scl_inter!=0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/733", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/733/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/733/events", "html_url": "https://github.com/nipy/nibabel/issues/733", "id": 416119717, "node_id": "MDU6SXNzdWU0MTYxMTk3MTc=", "number": 733, "title": "Populate GitHub community docs", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/4", "html_url": "https://github.com/nipy/nibabel/milestone/4", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/4/labels", "id": 4119026, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNg==", "number": 4, "title": "3.0.0 RC1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-03-07T14:12:18Z", "updated_at": "2020-01-26T16:38:42Z", "due_on": "2019-10-28T07:00:00Z", "closed_at": "2020-01-26T16:38:42Z"}, "comments": 10, "created_at": "2019-03-01T14:10:58Z", "updated_at": "2019-08-19T12:48:02Z", "closed_at": "2019-08-19T12:48:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Code of conduct and contributing should at minimum be populated. I think there's a nipy-wide CoC that we can refer to.\r\n\r\nI'm mixed on issue/PR templates, as my experience in other projects is that people mostly ignore them, and so the incomplete boilerplate ends up acting as clutter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/730", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/730/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/730/events", "html_url": "https://github.com/nipy/nibabel/issues/730", "id": 415822006, "node_id": "MDU6SXNzdWU0MTU4MjIwMDY=", "number": 730, "title": "New NIFTI_XFORM_ code under consideration", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-28T21:03:02Z", "updated_at": "2019-03-19T12:03:23Z", "closed_at": "2019-03-19T12:03:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is an open [discussion](https://www.nitrc.org/forum/forum.php?thread_id=10029&forum_id=1942) on NITRC for a `NIFTI_XFORM` code 5 that will indicate alignment to an unspecified template. This use case has largely been relegated to `NIFTI_XFORM_ALIGNED_ANAT` (2) up to now.\r\n\r\nI'm overall in support of this move, and it should be a very minimal effort to support these files. More importantly, if it happens, nibabel should be able to handle these files gracefully, so we should move quickly to adopt. This is particularly urgent in that we should have at least one Python 2-compatible release with this support, so that users on legacy operating systems that do not make Python 3 easy to get will be able to work with these files with a simple `pip install`.\r\n\r\nPlease contribute to the discussion on NITRC if you have any thoughts relevant to the standard, and here if you have any thoughts relevant to nibabel in particular.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/729", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/729/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/729/events", "html_url": "https://github.com/nipy/nibabel/issues/729", "id": 414834311, "node_id": "MDU6SXNzdWU0MTQ4MzQzMTE=", "number": 729, "title": "Selecting on `data_per_streamline`", "user": {"login": "arokem", "id": 118582, "node_id": "MDQ6VXNlcjExODU4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/118582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arokem", "html_url": "https://github.com/arokem", "followers_url": "https://api.github.com/users/arokem/followers", "following_url": "https://api.github.com/users/arokem/following{/other_user}", "gists_url": "https://api.github.com/users/arokem/gists{/gist_id}", "starred_url": "https://api.github.com/users/arokem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arokem/subscriptions", "organizations_url": "https://api.github.com/users/arokem/orgs", "repos_url": "https://api.github.com/users/arokem/repos", "events_url": "https://api.github.com/users/arokem/events{/privacy}", "received_events_url": "https://api.github.com/users/arokem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-26T21:45:05Z", "updated_at": "2019-03-01T12:38:15Z", "closed_at": "2019-02-28T22:19:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am trying to use the `data_per_streamline` attribute to select streamlines from within a `Tractogram` object. I am running into the following behavior. \r\n\r\nI initialize a very simple tractogram object. The first streamline has the `data_per_streamline` `foo` key set to `0` and the other two streamlines have this set to `1`:\r\n\r\n```\r\nimport numpy as np \r\nimport nibabel.streamlines as sl \r\n  \r\ntgram = sl.Tractogram([np.array([[0, 0, 0], [1, 1, 1]]), \r\n                       np.array([[2, 2, 2], [3, 3, 3], [4, 4, 4]]), \r\n                       np.array([[5, 5, 5], [6, 6, 6]])], \r\n                       data_per_streamline={'foo': [[0],[1],[1]]}) \r\n````                                                                        \r\n\r\nI can find the right streamlines using `np.where`:\r\n\r\n```\r\nidx = np.where(tgram.data_per_streamline['foo'] == 1)[0] \r\nidx\r\narray([1, 2])\r\n```\r\nIt even looks like it's doing the right thing when I use this for indexing:\r\n\r\n```\r\ntgram[idx].streamlines                                                   \r\nArraySequence([array([[2, 2, 2],\r\n       [3, 3, 3],\r\n       [4, 4, 4]]), array([[5, 5, 5],\r\n       [6, 6, 6]])])\r\n```\r\n\r\nBut under the hood:\r\n\r\n```\r\ntgram[idx].streamlines._data                                             \r\narray([[0, 0, 0],\r\n       [1, 1, 1],\r\n       [2, 2, 2],\r\n       [3, 3, 3],\r\n       [4, 4, 4],\r\n       [5, 5, 5],\r\n       [6, 6, 6]])\r\n```\r\n\r\nWhy is it still holding onto all of the data? Is there some way to drop the data for the first (not selected) streamline?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/725", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/725/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/725/events", "html_url": "https://github.com/nipy/nibabel/issues/725", "id": 408213491, "node_id": "MDU6SXNzdWU0MDgyMTM0OTE=", "number": 725, "title": "Address DeprecationWarning from numpy.testing.decorators", "user": {"login": "topspinj", "id": 7951284, "node_id": "MDQ6VXNlcjc5NTEyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7951284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topspinj", "html_url": "https://github.com/topspinj", "followers_url": "https://api.github.com/users/topspinj/followers", "following_url": "https://api.github.com/users/topspinj/following{/other_user}", "gists_url": "https://api.github.com/users/topspinj/gists{/gist_id}", "starred_url": "https://api.github.com/users/topspinj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topspinj/subscriptions", "organizations_url": "https://api.github.com/users/topspinj/orgs", "repos_url": "https://api.github.com/users/topspinj/repos", "events_url": "https://api.github.com/users/topspinj/events{/privacy}", "received_events_url": "https://api.github.com/users/topspinj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-08T15:57:02Z", "updated_at": "2019-02-08T16:02:04Z", "closed_at": "2019-02-08T16:02:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "numpy.testing.decorators is deprecated. Getting this warning:\r\n```\r\nDeprecationWarning: Importing from numpy.testing.decorators is deprecated, import from numpy.testing instead.\r\n```\r\nThis issue can be resolved by replace numpy.testing.decorators with numpy.testing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/723", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/723/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/723/events", "html_url": "https://github.com/nipy/nibabel/issues/723", "id": 407834389, "node_id": "MDU6SXNzdWU0MDc4MzQzODk=", "number": 723, "title": "Minor bug checking versions", "user": {"login": "oesteban", "id": 598470, "node_id": "MDQ6VXNlcjU5ODQ3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/598470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oesteban", "html_url": "https://github.com/oesteban", "followers_url": "https://api.github.com/users/oesteban/followers", "following_url": "https://api.github.com/users/oesteban/following{/other_user}", "gists_url": "https://api.github.com/users/oesteban/gists{/gist_id}", "starred_url": "https://api.github.com/users/oesteban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oesteban/subscriptions", "organizations_url": "https://api.github.com/users/oesteban/orgs", "repos_url": "https://api.github.com/users/oesteban/repos", "events_url": "https://api.github.com/users/oesteban/events{/privacy}", "received_events_url": "https://api.github.com/users/oesteban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-07T18:23:35Z", "updated_at": "2019-03-01T15:45:29Z", "closed_at": "2019-03-01T15:45:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```Python\r\n>>> from nibabel.info import cmp_pkg_version\r\n>>> cmp_pkg_version('1.2.0+7', '1.2.0')\r\n-1\r\n```\r\n(should be 1)\r\n\r\nHappens with versions generated by versioneer that count the number of commits you diverged from latest tag.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/721", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/721/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/721/events", "html_url": "https://github.com/nipy/nibabel/issues/721", "id": 405646812, "node_id": "MDU6SXNzdWU0MDU2NDY4MTI=", "number": 721, "title": "nibabel equivalent of spm_check_orientations?", "user": {"login": "jooh", "id": 1559987, "node_id": "MDQ6VXNlcjE1NTk5ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1559987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jooh", "html_url": "https://github.com/jooh", "followers_url": "https://api.github.com/users/jooh/followers", "following_url": "https://api.github.com/users/jooh/following{/other_user}", "gists_url": "https://api.github.com/users/jooh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jooh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jooh/subscriptions", "organizations_url": "https://api.github.com/users/jooh/orgs", "repos_url": "https://api.github.com/users/jooh/repos", "events_url": "https://api.github.com/users/jooh/events{/privacy}", "received_events_url": "https://api.github.com/users/jooh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-01T10:44:21Z", "updated_at": "2019-02-12T17:43:20Z", "closed_at": "2019-02-12T17:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Matlab, I use [spm_check_orientations](https://github.com/spm/spm12/blob/master/spm_check_orientations.m) to confirm that two niftis have similar affines and identical image dimensions before running array-based operations (e.g. masking one image by the other). Does nibabel have anything comparable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/718", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/718/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/718/events", "html_url": "https://github.com/nipy/nibabel/issues/718", "id": 401870993, "node_id": "MDU6SXNzdWU0MDE4NzA5OTM=", "number": 718, "title": "Deprecated `from numpy.testing.decorators import skipif`", "user": {"login": "SebastianoF", "id": 8709755, "node_id": "MDQ6VXNlcjg3MDk3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8709755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SebastianoF", "html_url": "https://github.com/SebastianoF", "followers_url": "https://api.github.com/users/SebastianoF/followers", "following_url": "https://api.github.com/users/SebastianoF/following{/other_user}", "gists_url": "https://api.github.com/users/SebastianoF/gists{/gist_id}", "starred_url": "https://api.github.com/users/SebastianoF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SebastianoF/subscriptions", "organizations_url": "https://api.github.com/users/SebastianoF/orgs", "repos_url": "https://api.github.com/users/SebastianoF/repos", "events_url": "https://api.github.com/users/SebastianoF/events{/privacy}", "received_events_url": "https://api.github.com/users/SebastianoF/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-22T17:23:16Z", "updated_at": "2019-01-22T17:39:22Z", "closed_at": "2019-01-22T17:31:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hello!\r\n\r\nThanks for nibabel, I have been using it extensively in the last few years!\r\nToday I updated to numpy 1.15.0 and the following warning have started to appear when running tests on python 3:\r\n\r\n```\r\n========================================================= warnings summary ==========================================================\r\n/Applications/python_virtualenvs/clean3/lib/python3.6/site-packages/nibabel/testing/__init__.py:21\r\n  /Applications/python_virtualenvs/clean3/lib/python3.6/site-packages/nibabel/testing/__init__.py:21: DeprecationWarning: Importing from numpy.testing.decorators is deprecated since numpy 1.15.0, import from numpy.testing instead.\r\n    from numpy.testing.decorators import skipif\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```\r\nTo solve the issue, I believe the line nibabel/testing/__init__.py:21\r\n```\r\nfrom numpy.testing.decorators import skipif\r\n```\r\nshould be substituted with something like:\r\n```\r\nfrom numpy.testing import dec\r\nskipif = dec.skipif\r\n```\r\n\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/717", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/717/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/717/events", "html_url": "https://github.com/nipy/nibabel/issues/717", "id": 401121537, "node_id": "MDU6SXNzdWU0MDExMjE1Mzc=", "number": 717, "title": "scripts have wrong interpreter after \"conda install nibabel\" in Windows", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/3", "html_url": "https://github.com/nipy/nibabel/milestone/3", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/3/labels", "id": 4119025, "node_id": "MDk6TWlsZXN0b25lNDExOTAyNQ==", "number": 3, "title": "2.5.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-03-07T14:11:51Z", "updated_at": "2019-08-21T15:00:36Z", "due_on": "2019-07-29T07:00:00Z", "closed_at": "2019-08-21T15:00:36Z"}, "comments": 9, "created_at": "2019-01-20T17:48:11Z", "updated_at": "2019-06-27T12:47:48Z", "closed_at": "2019-06-27T12:47:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Was trying to reproduce https://github.com/datalad/datalad/issues/3116 on a freshly installed Window$ machine. Installed miniconda, created \"datalad-dev\" conda environment.\r\nIn regular \"Anaconda Prompt\" which seems to be running pure Windows cmd prompt, doesn't find/run nib-ls at all (regular entrypoint mechanism installed apps like datalad seems to work fine, but somehow it just ended up in /usr/bin/datalad using regular /usr/bin/python for interpreter -- yet to figure things out).  If I start bash within it, then I get\r\n```\r\n/mnt/c/Temp/datasets.datalad.org/openneuro/ds000114$ nib-ls\r\n-bash: /mnt/c/Users/XXX/AppData/Local/Continuum/miniconda3/envs/datalad-dev/Scripts/nib-ls: C:/Users/XXX/AppData/Local/Continuum/miniconda3/envs/datalad-dev/bin/python: bad interpreter: No such file or directory\r\n```\r\nwell -- first of all the problem is that path is windows path so not sure if this bash could comprehend it.  Then, the python is actually available not under /bin but /mnt/c/Users/XXX/AppData/Local/Continuum/miniconda3/envs/datalad-dev/python.exe\r\n\r\nBut even if I correct shebang to be a correct windows path -- it would not run in bash, and remains (well, there is no .exe etc I guess) not found by windows cmd.  But even if I fix the path to be a full path to python.exe POSIX style I can't run it in that bash\r\n```\r\n/mnt/c/Temp/datasets.datalad.org/openneuro/ds000114$ nib-ls\r\nC:\\Users\\XXX\\AppData\\Local\\Continuum\\miniconda3\\envs\\datalad-dev\\python.exe: can't open file '/mnt/c/Users/XXX/AppData/Local/Continuum/miniconda3/envs/datalad-dev/Scripts/nib-ls': [Errno 2] No such file or directory\r\n```\r\n@chrisfilo - do you have recollection on how nibabel was installed and what you have in your shebang for it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/716", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/716/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/716/events", "html_url": "https://github.com/nipy/nibabel/issues/716", "id": 401036187, "node_id": "MDU6SXNzdWU0MDEwMzYxODc=", "number": 716, "title": "nifti dim_info transformation after orientation", "user": {"login": "constracti", "id": 19427898, "node_id": "MDQ6VXNlcjE5NDI3ODk4", "avatar_url": "https://avatars1.githubusercontent.com/u/19427898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/constracti", "html_url": "https://github.com/constracti", "followers_url": "https://api.github.com/users/constracti/followers", "following_url": "https://api.github.com/users/constracti/following{/other_user}", "gists_url": "https://api.github.com/users/constracti/gists{/gist_id}", "starred_url": "https://api.github.com/users/constracti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/constracti/subscriptions", "organizations_url": "https://api.github.com/users/constracti/orgs", "repos_url": "https://api.github.com/users/constracti/repos", "events_url": "https://api.github.com/users/constracti/events{/privacy}", "received_events_url": "https://api.github.com/users/constracti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/2", "html_url": "https://github.com/nipy/nibabel/milestone/2", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/2/labels", "id": 3936803, "node_id": "MDk6TWlsZXN0b25lMzkzNjgwMw==", "number": 2, "title": "2.4.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 24, "state": "closed", "created_at": "2019-01-02T17:49:24Z", "updated_at": "2019-04-02T02:36:22Z", "due_on": "2019-04-01T07:00:00Z", "closed_at": "2019-04-02T02:36:22Z"}, "comments": 4, "created_at": "2019-01-19T21:22:49Z", "updated_at": "2019-03-19T12:04:04Z", "closed_at": "2019-03-19T12:04:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running the test\r\n```python\r\nimport numpy as np\r\nimport nibabel as nib\r\n\r\ndata = np.arange(24).reshape((2,3,4))\r\nimg = nib.Nifti1Image(data, np.eye(4))\r\nimg.header.set_dim_info(1, 0, 2)\r\n\r\nornt = np.array([[2, 1], [0, 1], [1, 1]])\r\nimg_ornt = img.as_reoriented(ornt)\r\nprint(ornt[:,0])\r\nprint(img.shape)\r\nprint(img_ornt.shape)\r\nprint(img.header.get_dim_info())\r\nprint(img_ornt.header.get_dim_info())\r\n```\r\nwe get\r\n```python\r\n[2 0 1]\r\n(2, 3, 4)\r\n(3, 4, 2)\r\n(1, 0, 2)\r\n(1, 2, 0)\r\n```\r\nalthough (if I'm not wrong) the correct output should look like\r\n```python\r\n[2 0 1]\r\n(2, 3, 4)\r\n(3, 4, 2)\r\n(1, 0, 2)\r\n(0, 2, 1)\r\n```\r\n(note the difference in the last line).\r\n\r\nShouldn't the following\r\nhttps://github.com/nipy/nibabel/blob/5ab94146d569dc905bfbbb5b7a4ae4b190bbd133/nibabel/nifti1.py#L2023\r\nbe `new_dim[idx] = ornt[value, 0]`?\r\n\r\n[In which case, it would be better to ensure that value has an integer data type; however, `io_orienatation` returns a float array.]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/713", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/713/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/713/events", "html_url": "https://github.com/nipy/nibabel/issues/713", "id": 399435417, "node_id": "MDU6SXNzdWUzOTk0MzU0MTc=", "number": 713, "title": "Nibabel does not \"pip install\" with six", "user": {"login": "GaelVaroquaux", "id": 208217, "node_id": "MDQ6VXNlcjIwODIxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/208217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaelVaroquaux", "html_url": "https://github.com/GaelVaroquaux", "followers_url": "https://api.github.com/users/GaelVaroquaux/followers", "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}", "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions", "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs", "repos_url": "https://api.github.com/users/GaelVaroquaux/repos", "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}", "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43047, "node_id": "MDU6TGFiZWw0MzA0Nw==", "url": "https://api.github.com/repos/nipy/nibabel/labels/prio-high", "name": "prio-high", "color": "e9f013", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-15T16:45:38Z", "updated_at": "2019-01-16T15:09:04Z", "closed_at": "2019-01-16T15:07:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "pip installing nibabel under python2 installs a non working nibabel because of missing six in the requirements. As a result, the CI is broken on nilearn:\r\nhttps://github.com/nilearn/nilearn/issues/1900\r\n\r\n# Steps to reproduce:\r\n\r\n1. Create a clean python2.7 virtualenv\r\n2. \"pip install nibabel\"\r\n3. Try importing nibabel\r\n\r\nResults in\r\n```\r\n  File \"/home/varoquau/tmp/clean_venv/local/lib/python2.7/site-packages/nibabel/testing/__init__.py\", line 29, in <module>\r\n    from six.moves import zip_longest\r\nImportError: No module named six.moves\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/710", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/710/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/710/events", "html_url": "https://github.com/nipy/nibabel/issues/710", "id": 396960727, "node_id": "MDU6SXNzdWUzOTY5NjA3Mjc=", "number": 710, "title": "No module named bz2file", "user": {"login": "skoudoro", "id": 23106443, "node_id": "MDQ6VXNlcjIzMTA2NDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/23106443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skoudoro", "html_url": "https://github.com/skoudoro", "followers_url": "https://api.github.com/users/skoudoro/followers", "following_url": "https://api.github.com/users/skoudoro/following{/other_user}", "gists_url": "https://api.github.com/users/skoudoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/skoudoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skoudoro/subscriptions", "organizations_url": "https://api.github.com/users/skoudoro/orgs", "repos_url": "https://api.github.com/users/skoudoro/repos", "events_url": "https://api.github.com/users/skoudoro/events{/privacy}", "received_events_url": "https://api.github.com/users/skoudoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-08T15:36:31Z", "updated_at": "2019-01-17T16:16:36Z", "closed_at": "2019-01-17T15:51:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\r\n\r\nSince the last release (2.3.2). I received the error message below. You can see the complete Travis log [here](https://travis-ci.org/fury-gl/fury/jobs/475087904#L3192).  I can not reproduce this error with pip, it is only with Miniconda. it seems related to bz2file version.\r\n\r\n```\r\nfury/tests/test_actors.py:16: in <module>\r\n    from dipy.tracking.streamline import (center_streamlines,\r\n../../../envs/miniconda/envs/testenv/lib/python2.7/site-packages/dipy/tracking/__init__.py:4: in <module>\r\n    from nibabel.streamlines import ArraySequence as Streamlines\r\n../../../envs/miniconda/envs/testenv/lib/python2.7/site-packages/nibabel/__init__.py:38: in <module>\r\n    from . import analyze as ana\r\n../../../envs/miniconda/envs/testenv/lib/python2.7/site-packages/nibabel/analyze.py:87: in <module>\r\n    from .volumeutils import (native_code, swapped_code, make_dt_codes,\r\n../../../envs/miniconda/envs/testenv/lib/python2.7/site-packages/nibabel/volumeutils.py:23: in <module>\r\n    from .openers import Opener, BZ2File\r\n../../../envs/miniconda/envs/testenv/lib/python2.7/site-packages/nibabel/openers.py:14: in <module>\r\n    from bz2file import BZ2File\r\nE   ImportError: No module named bz2file\r\n```\r\n\r\nenvironment: Python 2.7 - Miniconda - nibabel 2.3.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/698", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/698/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/698/events", "html_url": "https://github.com/nipy/nibabel/issues/698", "id": 388380349, "node_id": "MDU6SXNzdWUzODgzODAzNDk=", "number": 698, "title": "Reduce import-time loads of external modules", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/2", "html_url": "https://github.com/nipy/nibabel/milestone/2", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/2/labels", "id": 3936803, "node_id": "MDk6TWlsZXN0b25lMzkzNjgwMw==", "number": 2, "title": "2.4.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 24, "state": "closed", "created_at": "2019-01-02T17:49:24Z", "updated_at": "2019-04-02T02:36:22Z", "due_on": "2019-04-01T07:00:00Z", "closed_at": "2019-04-02T02:36:22Z"}, "comments": 4, "created_at": "2018-12-06T20:15:31Z", "updated_at": "2019-03-13T11:52:28Z", "closed_at": "2019-03-13T11:52:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Beyond numpy, nibabel loads the following modules on import:\r\n\r\n```Python\r\n{'PIL',\r\n 'PIL.Image',\r\n 'PIL.ImageMode',\r\n 'PIL._binary',\r\n 'PIL._imaging',\r\n 'PIL._util',\r\n 'PIL.version',\r\n '__mp_main__',\r\n '_cython_0_28_2',\r\n '_cython_0_28_5',\r\n '_elementtree',\r\n '_opcode',\r\n 'array',\r\n 'base64',\r\n 'binascii',\r\n 'calendar',\r\n 'cffi',\r\n 'cffi.api',\r\n 'cffi.error',\r\n 'cffi.lock',\r\n 'cffi.model',\r\n 'configparser',\r\n 'ctypes.macholib',\r\n 'ctypes.macholib.dyld',\r\n 'ctypes.macholib.dylib',\r\n 'ctypes.macholib.framework',\r\n 'ctypes.util',\r\n 'dis',\r\n 'distutils',\r\n 'distutils.version',\r\n 'email',\r\n 'email._parseaddr',\r\n 'email._policybase',\r\n 'email.base64mime',\r\n 'email.charset',\r\n 'email.encoders',\r\n 'email.errors',\r\n 'email.feedparser',\r\n 'email.header',\r\n 'email.parser',\r\n 'email.quoprimime',\r\n 'email.utils',\r\n 'getpass',\r\n 'gzip',\r\n 'h5py',\r\n 'h5py._conv',\r\n 'h5py._errors',\r\n 'h5py._hl',\r\n 'h5py._hl.attrs',\r\n 'h5py._hl.base',\r\n 'h5py._hl.compat',\r\n 'h5py._hl.dataset',\r\n 'h5py._hl.datatype',\r\n 'h5py._hl.files',\r\n 'h5py._hl.filters',\r\n 'h5py._hl.group',\r\n 'h5py._hl.selections',\r\n 'h5py._hl.selections2',\r\n 'h5py._objects',\r\n 'h5py._proxy',\r\n 'h5py.defs',\r\n 'h5py.h5',\r\n 'h5py.h5a',\r\n 'h5py.h5ac',\r\n 'h5py.h5d',\r\n 'h5py.h5ds',\r\n 'h5py.h5f',\r\n 'h5py.h5fd',\r\n 'h5py.h5g',\r\n 'h5py.h5i',\r\n 'h5py.h5l',\r\n 'h5py.h5o',\r\n 'h5py.h5p',\r\n 'h5py.h5py_warnings',\r\n 'h5py.h5r',\r\n 'h5py.h5s',\r\n 'h5py.h5t',\r\n 'h5py.h5z',\r\n 'h5py.utils',\r\n 'h5py.version',\r\n 'imp',\r\n 'indexed_gzip',\r\n 'indexed_gzip.indexed_gzip',\r\n 'inspect',\r\n 'mmap',\r\n 'mock',\r\n 'mock.mock',\r\n 'multiprocessing',\r\n 'multiprocessing.context',\r\n 'multiprocessing.process',\r\n 'multiprocessing.reduction',\r\n 'nibabel',\r\n 'nibabel.affines',\r\n 'nibabel.analyze',\r\n 'nibabel.arrayproxy',\r\n 'nibabel.arraywriters',\r\n 'nibabel.batteryrunners',\r\n 'nibabel.brikhead',\r\n 'nibabel.casting',\r\n 'nibabel.cifti2',\r\n 'nibabel.cifti2.cifti2',\r\n 'nibabel.cifti2.parse_cifti2',\r\n 'nibabel.dataobj_images',\r\n 'nibabel.deprecated',\r\n 'nibabel.deprecator',\r\n 'nibabel.ecat',\r\n 'nibabel.eulerangles',\r\n 'nibabel.externals',\r\n 'nibabel.externals.netcdf',\r\n 'nibabel.externals.oset',\r\n 'nibabel.filebasedimages',\r\n 'nibabel.fileholders',\r\n 'nibabel.filename_parser',\r\n 'nibabel.fileslice',\r\n 'nibabel.freesurfer',\r\n 'nibabel.freesurfer.io',\r\n 'nibabel.freesurfer.mghformat',\r\n 'nibabel.funcs',\r\n 'nibabel.gifti',\r\n 'nibabel.gifti.gifti',\r\n 'nibabel.gifti.giftiio',\r\n 'nibabel.gifti.parse_gifti_fast',\r\n 'nibabel.gifti.util',\r\n 'nibabel.imageclasses',\r\n 'nibabel.imageglobals',\r\n 'nibabel.info',\r\n 'nibabel.keywordonly',\r\n 'nibabel.loadsave',\r\n 'nibabel.minc1',\r\n 'nibabel.minc2',\r\n 'nibabel.mriutils',\r\n 'nibabel.nifti1',\r\n 'nibabel.nifti2',\r\n 'nibabel.openers',\r\n 'nibabel.optpkg',\r\n 'nibabel.orientations',\r\n 'nibabel.parrec',\r\n 'nibabel.pkg_info',\r\n 'nibabel.py3k',\r\n 'nibabel.pydicom_compat',\r\n 'nibabel.quaternions',\r\n 'nibabel.spatialimages',\r\n 'nibabel.spm2analyze',\r\n 'nibabel.spm99analyze',\r\n 'nibabel.streamlines',\r\n 'nibabel.streamlines.array_sequence',\r\n 'nibabel.streamlines.header',\r\n 'nibabel.streamlines.tck',\r\n 'nibabel.streamlines.tractogram',\r\n 'nibabel.streamlines.tractogram_file',\r\n 'nibabel.streamlines.trk',\r\n 'nibabel.streamlines.utils',\r\n 'nibabel.testing',\r\n 'nibabel.testing.np_features',\r\n 'nibabel.trackvis',\r\n 'nibabel.tripwire',\r\n 'nibabel.viewers',\r\n 'nibabel.volumeutils',\r\n 'nibabel.wrapstruct',\r\n 'nibabel.xmlutils',\r\n 'nose',\r\n 'nose.case',\r\n 'nose.config',\r\n 'nose.core',\r\n 'nose.exc',\r\n 'nose.failure',\r\n 'nose.importer',\r\n 'nose.loader',\r\n 'nose.plugins',\r\n 'nose.plugins.base',\r\n 'nose.plugins.deprecated',\r\n 'nose.plugins.errorclass',\r\n 'nose.plugins.manager',\r\n 'nose.plugins.plugintest',\r\n 'nose.plugins.skip',\r\n 'nose.proxy',\r\n 'nose.pyversion',\r\n 'nose.result',\r\n 'nose.selector',\r\n 'nose.suite',\r\n 'nose.tools',\r\n 'nose.tools.nontrivial',\r\n 'nose.tools.trivial',\r\n 'nose.util',\r\n 'numpy.testing.decorators',\r\n 'opcode',\r\n 'optparse',\r\n 'pbr',\r\n 'pbr.version',\r\n 'pkg_resources',\r\n 'pkg_resources._vendor',\r\n 'pkg_resources._vendor.packaging.__about__',\r\n 'pkg_resources._vendor.six',\r\n 'pkg_resources._vendor.six.moves',\r\n 'pkg_resources.extern',\r\n 'pkg_resources.extern.appdirs',\r\n 'pkg_resources.extern.packaging',\r\n 'pkg_resources.extern.packaging._compat',\r\n 'pkg_resources.extern.packaging._structures',\r\n 'pkg_resources.extern.packaging.markers',\r\n 'pkg_resources.extern.packaging.requirements',\r\n 'pkg_resources.extern.packaging.specifiers',\r\n 'pkg_resources.extern.packaging.version',\r\n 'pkg_resources.extern.pyparsing',\r\n 'pkg_resources.extern.six',\r\n 'pkg_resources.extern.six.moves',\r\n 'pkg_resources.extern.six.moves.urllib',\r\n 'pkg_resources.py31compat',\r\n 'pkgutil',\r\n 'platform',\r\n 'plistlib',\r\n 'pydicom',\r\n 'pydicom._dicom_dict',\r\n 'pydicom._private_dict',\r\n 'pydicom._uid_dict',\r\n 'pydicom._version',\r\n 'pydicom.charset',\r\n 'pydicom.compat',\r\n 'pydicom.config',\r\n 'pydicom.datadict',\r\n 'pydicom.dataelem',\r\n 'pydicom.dataset',\r\n 'pydicom.dicomdir',\r\n 'pydicom.dicomio',\r\n 'pydicom.encaps',\r\n 'pydicom.errors',\r\n 'pydicom.filebase',\r\n 'pydicom.filereader',\r\n 'pydicom.fileutil',\r\n 'pydicom.filewriter',\r\n 'pydicom.misc',\r\n 'pydicom.multival',\r\n 'pydicom.pixel_data_handlers',\r\n 'pydicom.pixel_data_handlers.numpy_handler',\r\n 'pydicom.pixel_data_handlers.pillow_handler',\r\n 'pydicom.pixel_data_handlers.rle_handler',\r\n 'pydicom.sequence',\r\n 'pydicom.tag',\r\n 'pydicom.uid',\r\n 'pydicom.util',\r\n 'pydicom.util.fixes',\r\n 'pydicom.util.hexutil',\r\n 'pydicom.valuerep',\r\n 'pydicom.values',\r\n 'pyexpat',\r\n 'pyexpat.errors',\r\n 'pyexpat.model',\r\n 'quopri',\r\n 'scipy',\r\n 'scipy.__config__',\r\n 'scipy._distributor_init',\r\n 'scipy._lib',\r\n 'scipy._lib._ccallback',\r\n 'scipy._lib._ccallback_c',\r\n 'scipy._lib._testutils',\r\n 'scipy._lib._version',\r\n 'scipy._lib.six',\r\n 'scipy.version',\r\n 'six',\r\n 'six.moves',\r\n 'termios',\r\n 'uuid',\r\n 'xml',\r\n 'xml.etree',\r\n 'xml.etree.ElementPath',\r\n 'xml.etree.ElementTree',\r\n 'xml.parsers',\r\n 'xml.parsers.expat',\r\n 'xml.parsers.expat.errors',\r\n 'xml.parsers.expat.model',\r\n 'zipfile'}\r\n```\r\n\r\nAt minimum, I would say `nibabel.testing` does not need to be loaded when I run `import nibabel`, but I also think `PIL`, `h5py`, `pydicom` and `XML` probably don't need to be loaded unless you use a file format that requires them.\r\n\r\nParticularly given `nibabel's` position as a basic requirement for practically the entire Python neuroimaging ecosystem, we should try to be a lightweight import.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/697", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/697/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/697/events", "html_url": "https://github.com/nipy/nibabel/issues/697", "id": 386915129, "node_id": "MDU6SXNzdWUzODY5MTUxMjk=", "number": 697, "title": "Numpy pre-release breaks setting some arrays writable", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-12-03T17:06:20Z", "updated_at": "2018-12-31T17:38:30Z", "closed_at": "2018-12-31T17:38:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Most likely culprit is numpy/numpy#11739, which was merged 7 days ago.\r\n\r\nExample failures:\r\n\r\n```\r\nERROR: test_load_simple_file (nibabel.streamlines.tests.test_streamlines.TestLoadSave)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/tests/test_streamlines.py\", line 152, in test_load_simple_file\r\n    lazy_load=lazy_load)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/__init__.py\", line 96, in load\r\n    return tractogram_file.load(fileobj, lazy_load=lazy_load)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/tck.py\", line 154, in load\r\n    streamlines = ArraySequence(tck_reader)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/array_sequence.py\", line 93, in __init__\r\n    self.extend(iterable)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/array_sequence.py\", line 239, in extend\r\n    for e in elements:\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/tck.py\", line 436, in _read\r\n    pts.flags.writeable = True\r\nValueError: cannot set WRITEABLE flag to True of this array\r\n```\r\n\r\n```\r\nERROR: test_load_complex_file_in_big_endian (nibabel.streamlines.tests.test_trk.TestTRK)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/tests/test_trk.py\", line 194, in test_load_complex_file_in_big_endian\r\n    'complex_trk_big_endian_fname', endian='>')\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/streamlines/tests/test_trk.py\", line 109, in trk_with_bytes\r\n    trk_struct.flags.writeable = True\r\nValueError: cannot set WRITEABLE flag to True of this array\r\n```\r\n\r\n```\r\nERROR: test_big_offset_exts (nibabel.tests.test_analyze.TestAnalyzeImage)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/tests/test_analyze.py\", line 809, in test_big_offset_exts\r\n    assert_array_equal(arr, img_back.dataobj)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/numpy/testing/_private/utils.py\", line 873, in assert_array_equal\r\n    verbose=verbose, header='Arrays are not equal')\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/numpy/testing/_private/utils.py\", line 693, in assert_array_compare\r\n    y = array(y, copy=False, subok=True)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/arrayproxy.py\", line 356, in __array__\r\n    raw_data = self.get_unscaled()\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/arrayproxy.py\", line 351, in get_unscaled\r\n    mmap=self._mmap)\r\n  File \"/home/travis/build/nipy/nibabel/venv/lib/python2.7/site-packages/nibabel/volumeutils.py\", line 543, in array_from_file\r\n    arr.flags.writeable = True\r\nValueError: cannot set WRITEABLE flag to True of this array\r\n```\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/694", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/694/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/694/events", "html_url": "https://github.com/nipy/nibabel/issues/694", "id": 380614037, "node_id": "MDU6SXNzdWUzODA2MTQwMzc=", "number": 694, "title": "Nifti1Image 'extra' field not saved", "user": {"login": "pepperpo", "id": 1112133, "node_id": "MDQ6VXNlcjExMTIxMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1112133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pepperpo", "html_url": "https://github.com/pepperpo", "followers_url": "https://api.github.com/users/pepperpo/followers", "following_url": "https://api.github.com/users/pepperpo/following{/other_user}", "gists_url": "https://api.github.com/users/pepperpo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pepperpo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pepperpo/subscriptions", "organizations_url": "https://api.github.com/users/pepperpo/orgs", "repos_url": "https://api.github.com/users/pepperpo/repos", "events_url": "https://api.github.com/users/pepperpo/events{/privacy}", "received_events_url": "https://api.github.com/users/pepperpo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-14T09:45:08Z", "updated_at": "2019-03-13T11:51:49Z", "closed_at": "2019-03-13T11:51:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nas in the title, the 'extra' attribute is not saved.\r\nSpecifically, if I save a Nifti1Image instance with an 'extra' attribute like this:\r\n```\r\nextra = {'scrubbing_removed_t':scrubbing_removed_t}\r\nnew_fMRI_img = nib.Nifti1Image(fMRI_data, affine=fMRI_img.affine,header=fMRI_img.header,extra=extra)\r\nnew_fMRI_img.to_filename('filename.nii.gz')\r\n```\r\nand I load the file, the 'extra' attribute is an empty dictionary.\r\n\r\nI have nibabel version 2.2.1 installed.\r\nMost likely I misunderstood the usage of the functionality, but I would be grateful if someone could give me a hint.\r\nThank you\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/693", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/693/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/693/events", "html_url": "https://github.com/nipy/nibabel/issues/693", "id": 380467672, "node_id": "MDU6SXNzdWUzODA0Njc2NzI=", "number": 693, "title": "Exclude trace volume from Philips DICOM?", "user": {"login": "mgxd", "id": 14110164, "node_id": "MDQ6VXNlcjE0MTEwMTY0", "avatar_url": "https://avatars1.githubusercontent.com/u/14110164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgxd", "html_url": "https://github.com/mgxd", "followers_url": "https://api.github.com/users/mgxd/followers", "following_url": "https://api.github.com/users/mgxd/following{/other_user}", "gists_url": "https://api.github.com/users/mgxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgxd/subscriptions", "organizations_url": "https://api.github.com/users/mgxd/orgs", "repos_url": "https://api.github.com/users/mgxd/repos", "events_url": "https://api.github.com/users/mgxd/events{/privacy}", "received_events_url": "https://api.github.com/users/mgxd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/7", "html_url": "https://github.com/nipy/nibabel/milestone/7", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/7/labels", "id": 4528040, "node_id": "MDk6TWlsZXN0b25lNDUyODA0MA==", "number": 7, "title": "2.5.1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2019-07-29T00:58:14Z", "updated_at": "2019-10-02T23:54:21Z", "due_on": "2019-09-23T07:00:00Z", "closed_at": "2019-10-02T23:54:21Z"}, "comments": 0, "created_at": "2018-11-13T23:20:25Z", "updated_at": "2019-08-22T01:56:02Z", "closed_at": "2019-08-22T01:56:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Originally brought up in nipy/heudiconv#275 by @bmelo\r\n\r\nVersion: `nibabel-2.3.1`\r\n\r\nLoading up a Philips diffusion DICOM (with trace volume) results in an incorrect image shape with an extra? dimension (96, 96, 60, 2, 33).\r\n\r\n```python\r\nIn [1]: from nibabel.nicom.dicomwrappers import wrapper_from_file\r\n\r\nIn [2]: mw = wrapper_from_file('philips-dwi.dcm', force=True)\r\n\r\nIn [3]: mw.image_shape\r\n---------------------------------------------------------------------------\r\nWrapperError                              Traceback (most recent call last)\r\n<ipython-input-3-4963e90423f3> in <module>()\r\n----> 1 mw.image_shape\r\n\r\n/home/mathias/miniconda2/envs/dev3/lib/python3.6/site-packages/nibabel/onetime.py in __get__(self, obj, type)\r\n    139         # Errors in the following line are errors in setting a\r\n    140         # OneTimeProperty\r\n--> 141         val = self.getter(obj)\r\n    142 \r\n    143         setattr(obj, self.name, val)\r\n\r\n/home/mathias/miniconda2/envs/dev3/lib/python3.6/site-packages/nibabel/nicom/dicomwrappers.py in image_shape(self)\r\n    535         n_vols = np.prod(shape[3:])\r\n    536         if n_frames != n_vols * shape[2]:\r\n--> 537             raise WrapperError(\"Calculated shape does not match number of \"\r\n    538                                \"frames.\")\r\n    539         return tuple(shape)\r\n\r\nWrapperError: Calculated shape does not match number of frames.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/691", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/691/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/691/events", "html_url": "https://github.com/nipy/nibabel/issues/691", "id": 379022166, "node_id": "MDU6SXNzdWUzNzkwMjIxNjY=", "number": 691, "title": "Catching too many warnings, tests fail", "user": {"login": "ashgillman", "id": 816777, "node_id": "MDQ6VXNlcjgxNjc3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/816777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashgillman", "html_url": "https://github.com/ashgillman", "followers_url": "https://api.github.com/users/ashgillman/followers", "following_url": "https://api.github.com/users/ashgillman/following{/other_user}", "gists_url": "https://api.github.com/users/ashgillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashgillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashgillman/subscriptions", "organizations_url": "https://api.github.com/users/ashgillman/orgs", "repos_url": "https://api.github.com/users/ashgillman/repos", "events_url": "https://api.github.com/users/ashgillman/events{/privacy}", "received_events_url": "https://api.github.com/users/ashgillman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-09T04:49:52Z", "updated_at": "2019-03-25T03:56:14Z", "closed_at": "2019-03-25T03:56:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am maintaining a Nix packages for Nibabel, here:\r\nhttps://github.com/NixOS/nixpkgs/blob/master/pkgs/development/python-modules/nibabel/default.nix\r\n\r\nI have a few tests fail:\r\n\r\n```\r\n======================================================================\r\nFAIL: nibabel.gifti.tests.test_giftiio.test_read_deprecated\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/khj4yg8583s59wyg1vijj005qvaqiqnk-python3.6-nose-1.3.7/lib/python3.6/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/tmp/nix-build-python3.6-nibabel-2.3.1.drv-0/nibabel-2.3.1/nibabel/gifti/tests/test_giftiio.py\", line 36, in test_read_deprecated\r\n    assert_equal(len(w), 1)\r\nAssertionError: 2 != 1\r\n\r\n======================================================================\r\nFAIL: nibabel.gifti.tests.test_parse_gifti_fast.test_parse_dataarrays\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/khj4yg8583s59wyg1vijj005qvaqiqnk-python3.6-nose-1.3.7/lib/python3.6/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/tmp/nix-build-python3.6-nibabel-2.3.1.drv-0/nibabel-2.3.1/nibabel/gifti/tests/test_parse_gifti_fast.py\", line 358, in test_parse_dataarrays\r\n    assert_equal(len(w), 1)\r\nAssertionError: 2 != 1\r\n\r\n======================================================================\r\nFAIL: test_load_file_with_wrong_information (nibabel.streamlines.tests.test_trk.TestTRK)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/nix-build-python3.6-nibabel-2.3.1.drv-0/nibabel-2.3.1/nibabel/streamlines/tests/test_trk.py\", line 135, in test_load_file_with_wrong_information\r\n    assert_equal(len(w), 1)\r\nAssertionError: 2 != 1\r\n\r\n======================================================================\r\nFAIL: test_load_trk_version_1 (nibabel.streamlines.tests.test_trk.TestTRK)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/nix-build-python3.6-nibabel-2.3.1.drv-0/nibabel-2.3.1/nibabel/streamlines/tests/test_trk.py\", line 186, in test_load_trk_version_1\r\n    assert_equal(len(w), 1)\r\nAssertionError: 2 != 1\r\n\r\n======================================================================\r\nFAIL: nibabel.tests.test_minc1.test_old_namespace\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/khj4yg8583s59wyg1vijj005qvaqiqnk-python3.6-nose-1.3.7/lib/python3.6/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/tmp/nix-build-python3.6-nibabel-2.3.1.drv-0/nibabel-2.3.1/nibabel/tests/test_minc1.py\", line 145, in test_old_namespace\r\n    assert_equal(warns.pop(0).category, FutureWarning)\r\nAssertionError: <class 'DeprecationWarning'> != <class 'FutureWarning'>\r\n\r\n======================================================================\r\nFAIL: nibabel.tests.test_nifti1.test_extension_io\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/nix/store/khj4yg8583s59wyg1vijj005qvaqiqnk-python3.6-nose-1.3.7/lib/python3.6/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/tmp/nix-build-python3.6-nibabel-2.3.1.drv-0/nibabel-2.3.1/nibabel/tests/test_nifti1.py\", line 1167, in test_extension_io\r\n    assert_equal(len(warns), 1)\r\nAssertionError: 2 != 1\r\n\r\n----------------------------------------------------------------------\r\nRan 7625 tests in 116.361s\r\n\r\n```\r\n\r\nThey seem to be all related to catching warnings. Any idea what the issue may be?\r\n\r\nCheers,\r\nAsh", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/689", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/689/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/689/events", "html_url": "https://github.com/nipy/nibabel/issues/689", "id": 377984109, "node_id": "MDU6SXNzdWUzNzc5ODQxMDk=", "number": 689, "title": "Disable crosshairs OrthoSlicer3D", "user": {"login": "mko010", "id": 33830005, "node_id": "MDQ6VXNlcjMzODMwMDA1", "avatar_url": "https://avatars0.githubusercontent.com/u/33830005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mko010", "html_url": "https://github.com/mko010", "followers_url": "https://api.github.com/users/mko010/followers", "following_url": "https://api.github.com/users/mko010/following{/other_user}", "gists_url": "https://api.github.com/users/mko010/gists{/gist_id}", "starred_url": "https://api.github.com/users/mko010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mko010/subscriptions", "organizations_url": "https://api.github.com/users/mko010/orgs", "repos_url": "https://api.github.com/users/mko010/repos", "events_url": "https://api.github.com/users/mko010/events{/privacy}", "received_events_url": "https://api.github.com/users/mko010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-06T18:47:55Z", "updated_at": "2018-12-25T04:45:04Z", "closed_at": "2018-12-25T04:45:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, how I can disable the crosshairs of Orthoslicer3D?\r\n\r\nthank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/687", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/687/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/687/events", "html_url": "https://github.com/nipy/nibabel/issues/687", "id": 373575913, "node_id": "MDU6SXNzdWUzNzM1NzU5MTM=", "number": 687, "title": "flake8 3.6 breaks with our configuration", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-24T16:44:32Z", "updated_at": "2018-11-29T12:40:27Z", "closed_at": "2018-11-29T12:40:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A number of errors are suddenly appearing. It seems pycodestyle has introduced new errors and flake8 has introduced new syntax for updating the ignore list as opposed to replacing it.\r\n\r\n- https://gitlab.com/pycqa/flake8/issues/463\r\n- https://gitlab.com/pycqa/flake8/issues/466\r\n\r\nIf somebody has time, going through and seeing which are things worth conforming to, ignoring in individual files, and ignoring in the whole project would probably be a good idea. I don't really want to have to constrain style checkers.\r\n\r\nThe short term solution is probably just to pin to flake8<3.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/673", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/673/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/673/events", "html_url": "https://github.com/nipy/nibabel/issues/673", "id": 366528022, "node_id": "MDU6SXNzdWUzNjY1MjgwMjI=", "number": 673, "title": "method to load .img without .hdr", "user": {"login": "mrjeffs", "id": 5834270, "node_id": "MDQ6VXNlcjU4MzQyNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5834270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrjeffs", "html_url": "https://github.com/mrjeffs", "followers_url": "https://api.github.com/users/mrjeffs/followers", "following_url": "https://api.github.com/users/mrjeffs/following{/other_user}", "gists_url": "https://api.github.com/users/mrjeffs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrjeffs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrjeffs/subscriptions", "organizations_url": "https://api.github.com/users/mrjeffs/orgs", "repos_url": "https://api.github.com/users/mrjeffs/repos", "events_url": "https://api.github.com/users/mrjeffs/events{/privacy}", "received_events_url": "https://api.github.com/users/mrjeffs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-03T21:03:55Z", "updated_at": "2018-10-03T22:22:41Z", "closed_at": "2018-10-03T22:22:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "a clunky use case has arisen where only the .img portion of an analyze file is available.\r\ni want to load the .img into nibabel and then fill in the missing parts of the header, eg affine, zooms, etc\r\nreorient and save as nifti.\r\nnib.load('file.img') gives 'cannot work out file type' error. what is a work around to avoid the missing .hdr", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/670", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/670/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/670/events", "html_url": "https://github.com/nipy/nibabel/issues/670", "id": 366327403, "node_id": "MDU6SXNzdWUzNjYzMjc0MDM=", "number": 670, "title": "Function to rescale an affine matrix", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43043, "node_id": "MDU6TGFiZWw0MzA0Mw==", "url": "https://api.github.com/repos/nipy/nibabel/labels/enhancement", "name": "enhancement", "color": "23db5d", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/8", "html_url": "https://github.com/nipy/nibabel/milestone/8", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/8/labels", "id": 4909846, "node_id": "MDk6TWlsZXN0b25lNDkwOTg0Ng==", "number": 8, "title": "3.1.0", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-12-06T17:31:47Z", "updated_at": "2020-08-16T19:59:44Z", "due_on": "2020-04-20T07:00:00Z", "closed_at": "2020-04-20T13:25:44Z"}, "comments": 3, "created_at": "2018-10-03T13:00:02Z", "updated_at": "2020-04-20T02:12:07Z", "closed_at": "2020-04-20T02:11:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given that `image.header.set_zooms()` does not update an affine, a useful tool would be a function that takes a given affine matrix and returns an updated matrix that encodes the desired zooms.\r\n\r\nAdapting from @ellisdg's suggestions:\r\n\r\n```Python\r\ndef rescale_affine(affine, target_zooms):\r\n    ret = np.array(affine, copy=True)\r\n\r\n    RZS = affine[:3, :3]\r\n    zooms = np.sqrt(np.sum(RZS ** 2, axis=0))\r\n    scale = np.divide(target_zooms, zooms)\r\n    ret[:3, :3] = RZS * np.diag(scale)\r\n    return ret\r\n```\r\n\r\nThe correct way to fix the zooms on a file would then be:\r\n\r\n```Python\r\nimport nibabel as nb\r\norig = nb.load(fname)\r\nimg = orig.__class__(np.array(orig.dataobj),\r\n                     rescale_affine(orig.affine, target_zooms),\r\n                     orig.header)\r\nimg.to_filename(fname)\r\n```\r\n\r\nThis approach would leave the RAS coordinates of `(i, j, k) = (0, 0, 0)` the same. It may be desirable instead to adjust the translation so that the IJK coordinates of the RAS origin are constant. Possibly controlled by a parameter.\r\n\r\nI'm not absolutely positive that this handles shear components correctly. I'd need to check.\r\n\r\nSub-issue identified in #619.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/665", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/665/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/665/events", "html_url": "https://github.com/nipy/nibabel/issues/665", "id": 364166514, "node_id": "MDU6SXNzdWUzNjQxNjY1MTQ=", "number": 665, "title": "[WIN] Stochastic bug: Minc2 data may load as np.longdouble in h5py < 2.10", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/7", "html_url": "https://github.com/nipy/nibabel/milestone/7", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/7/labels", "id": 4528040, "node_id": "MDk6TWlsZXN0b25lNDUyODA0MA==", "number": 7, "title": "2.5.1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 10, "state": "closed", "created_at": "2019-07-29T00:58:14Z", "updated_at": "2019-10-02T23:54:21Z", "due_on": "2019-09-23T07:00:00Z", "closed_at": "2019-10-02T23:54:21Z"}, "comments": 13, "created_at": "2018-09-26T19:00:32Z", "updated_at": "2019-09-11T19:53:49Z", "closed_at": "2019-09-11T19:53:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "These AppVeyor failures are strange and stochastic. The failures are consistent:\r\n\r\n```\r\n======================================================================\r\nERROR: autogenerated test from validate_data_deprecated\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_api_validators.py\", line 23, in meth\r\n    validator(self, imaker, params)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_image_api.py\", line 380, in validate_data_deprecated\r\n    assert_data_similar(img._data, params)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_helpers.py\", line 80, in assert_data_similar\r\n    real_arr = np.asarray(arr)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\numeric.py\", line 501, in asarray\r\n    return array(a, dtype, copy=False, order=order)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 261, in __array__\r\n    return self.minc_file.get_scaled_data()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 139, in get_scaled_data\r\n    return self._normalize(raw_data, sliceobj)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 189, in _normalize\r\n    dmin, dmax = self._get_valid_range()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 98, in _get_valid_range\r\n    info = np.iinfo(ddt.type)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\getlimits.py\", line 516, in __init__\r\n    raise ValueError(\"Invalid integer data type.\")\r\nValueError: Invalid integer data type.\r\n======================================================================\r\nERROR: nibabel.tests.test_minc2.TestMinc2File.test_array_proxy_slicing\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_minc1.py\", line 200, in test_array_proxy_slicing\r\n    arr = img.get_data()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\dataobj_images.py\", line 202, in get_data\r\n    data = np.asanyarray(self._dataobj)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\numeric.py\", line 553, in asanyarray\r\n    return array(a, dtype, copy=False, order=order, subok=True)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 261, in __array__\r\n    return self.minc_file.get_scaled_data()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 139, in get_scaled_data\r\n    return self._normalize(raw_data, sliceobj)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 189, in _normalize\r\n    dmin, dmax = self._get_valid_range()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 98, in _get_valid_range\r\n    info = np.iinfo(ddt.type)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\getlimits.py\", line 516, in __init__\r\n    raise ValueError(\"Invalid integer data type.\")\r\nValueError: Invalid integer data type.\r\n======================================================================\r\nERROR: nibabel.tests.test_minc2.TestMinc2File.test_load\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_minc1.py\", line 187, in test_load\r\n    data = img.get_data()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\dataobj_images.py\", line 202, in get_data\r\n    data = np.asanyarray(self._dataobj)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\numeric.py\", line 553, in asanyarray\r\n    return array(a, dtype, copy=False, order=order, subok=True)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 261, in __array__\r\n    return self.minc_file.get_scaled_data()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 139, in get_scaled_data\r\n    return self._normalize(raw_data, sliceobj)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 189, in _normalize\r\n    dmin, dmax = self._get_valid_range()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 98, in _get_valid_range\r\n    info = np.iinfo(ddt.type)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\getlimits.py\", line 516, in __init__\r\n    raise ValueError(\"Invalid integer data type.\")\r\nValueError: Invalid integer data type.\r\n======================================================================\r\nERROR: nibabel.tests.test_minc2.TestMinc2File.test_mincfile_slicing\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_minc1.py\", line 171, in test_mincfile_slicing\r\n    data = mnc.get_scaled_data()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 139, in get_scaled_data\r\n    return self._normalize(raw_data, sliceobj)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc1.py\", line 189, in _normalize\r\n    dmin, dmax = self._get_valid_range()\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\minc2.py\", line 98, in _get_valid_range\r\n    info = np.iinfo(ddt.type)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\core\\getlimits.py\", line 516, in __init__\r\n    raise ValueError(\"Invalid integer data type.\")\r\nValueError: Invalid integer data type.\r\n======================================================================\r\nERROR: nibabel.tests.test_processing.test_spatial_axes_check\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\numpy\\testing\\_private\\decorators.py\", line 155, in skipper_func\r\n    return f(*args, **kwargs)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_processing.py\", line 366, in test_spatial_axes_check\r\n    out = resample_from_to(img, img, mode='nearest')\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\processing.py\", line 180, in resample_from_to\r\n    cval=cval)\r\n  File \"c:\\python34\\lib\\site-packages\\scipy\\ndimage\\interpolation.py\", line 416, in affine_transform\r\n    filtered = spline_filter(input, order, output=numpy.float64)\r\n  File \"c:\\python34\\lib\\site-packages\\scipy\\ndimage\\interpolation.py\", line 113, in spline_filter\r\n    spline_filter1d(input, order, axis, output=output)\r\n  File \"c:\\python34\\lib\\site-packages\\scipy\\ndimage\\interpolation.py\", line 82, in spline_filter1d\r\n    _nd_image.spline_filter1d(input, order, axis, output)\r\nRuntimeError: array type dtype('float64') not supported\r\n======================================================================\r\nFAIL: autogenerated test from validate_data_interface\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_api_validators.py\", line 23, in meth\r\n    validator(self, imaker, params)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_image_api.py\", line 208, in validate_data_interface\r\n    self._check_proxy_interface(imaker, meth_name)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_image_api.py\", line 253, in _check_proxy_interface\r\n    assert_true(data is data_again)\r\nAssertionError: False is not true\r\n======================================================================\r\nFAIL: autogenerated test from validate_dtype\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_api_validators.py\", line 23, in meth\r\n    validator(self, imaker, params)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_image_api.py\", line 178, in validate_dtype\r\n    assert_equal(img.get_data_dtype().type, params['dtype'])\r\nAssertionError: <class 'numpy.float64'> != <class 'numpy.float64'>\r\n======================================================================\r\nFAIL: nibabel.tests.test_minc2.TestMinc2File.test_mincfile\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"c:\\python34\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"c:\\python34\\lib\\site-packages\\nibabel\\tests\\test_minc1.py\", line 159, in test_mincfile\r\n    assert_equal(mnc.get_data_dtype().type, tp['dtype'])\r\nAssertionError: <class 'numpy.float64'> != <class 'numpy.float64'>\r\n```\r\n\r\nAnd I've seen them show up in Python 3.4, Python 3.4-x64, Python 3.5 and Python 3.5-x64, but in none of these cases do they consistently fail.\r\n\r\nExample builds:\r\n\r\n* https://ci.appveyor.com/project/nipy/nibabel/build/1.0.476\r\n* https://ci.appveyor.com/project/nipy/nibabel/build/1.0.477", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/663", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/663/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/663/events", "html_url": "https://github.com/nipy/nibabel/issues/663", "id": 362163444, "node_id": "MDU6SXNzdWUzNjIxNjM0NDQ=", "number": 663, "title": "BUG: read_annot changed values", "user": {"login": "larsoner", "id": 2365790, "node_id": "MDQ6VXNlcjIzNjU3OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2365790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsoner", "html_url": "https://github.com/larsoner", "followers_url": "https://api.github.com/users/larsoner/followers", "following_url": "https://api.github.com/users/larsoner/following{/other_user}", "gists_url": "https://api.github.com/users/larsoner/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsoner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsoner/subscriptions", "organizations_url": "https://api.github.com/users/larsoner/orgs", "repos_url": "https://api.github.com/users/larsoner/repos", "events_url": "https://api.github.com/users/larsoner/events{/privacy}", "received_events_url": "https://api.github.com/users/larsoner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-20T12:26:02Z", "updated_at": "2018-09-20T12:38:38Z", "closed_at": "2018-09-20T12:38:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Three things have changed when using `read_annot` from 2.2.2 to `master`, presumably from #592:\r\n\r\n1. An entry of `cmap` with large ID 16777215 has changed to -1 \r\n2. The third column entries have changed from 255 to 0\r\n3. The `cmap.dtype` has changed from `int64` to `int32` (probably not a big deal)\r\n\r\nTo see these, look at [this annot](https://ndownloader.figshare.com/files/5528816) and do:\r\n```\r\nimport nibabel as nib\r\nlabels, ctab, names = nib.freesurfer.read_annot('lh.HCPMMP1.annot')\r\nprint(ctab[:3])\r\n```\r\nOn 2.2.2 you get:\r\n```\r\n[[     255      255      255      255 16777215]\r\n [      63        5      255      255 16713023]\r\n [      54      103      129      255  8480566]]\r\n```\r\nOn `master` you get:\r\n```\r\n\r\n  File \"/Users/larsoner/python/nibabel/nibabel/freesurfer/io.py\", line 393, in read_annot\r\n    labels[mask] = ord[np.searchsorted(ctab[ord, -1], labels[mask])]\r\n\r\nIndexError: index 181 is out of bounds for axis 1 with size 181\r\n```\r\nBut inspecting what's going on you can see:\r\n```\r\nipdb> p ctab[:3]\r\narray([[     255,      255,      255,      255,       -1],\r\n       [      63,        5,      255,        0, 16713023],\r\n       [      54,      103,      129,        0,  8480566]], dtype=int32)\r\n```\r\ni.e., the first label's ID has become negative, and the other third column values have been changed from 255 to 0.\r\n\r\nIf I do the same thing with `fsaverage/label/lh.aparc.annot`, the file reads without error, but the third column has changed from being all 255 in 2.2.x to all 0 in `master`.\r\n\r\n@pauldmccarthy were these changes intended? I assume that the `alpha` / third-column value changes were. And as for the `-1` label, maybe the figshare `annot` is wacky somehow?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/662", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/662/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/662/events", "html_url": "https://github.com/nipy/nibabel/issues/662", "id": 360454198, "node_id": "MDU6SXNzdWUzNjA0NTQxOTg=", "number": 662, "title": "Nibabel Working with large Nifti files causes errors in python", "user": {"login": "Nonimus", "id": 25040632, "node_id": "MDQ6VXNlcjI1MDQwNjMy", "avatar_url": "https://avatars1.githubusercontent.com/u/25040632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nonimus", "html_url": "https://github.com/Nonimus", "followers_url": "https://api.github.com/users/Nonimus/followers", "following_url": "https://api.github.com/users/Nonimus/following{/other_user}", "gists_url": "https://api.github.com/users/Nonimus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nonimus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nonimus/subscriptions", "organizations_url": "https://api.github.com/users/Nonimus/orgs", "repos_url": "https://api.github.com/users/Nonimus/repos", "events_url": "https://api.github.com/users/Nonimus/events{/privacy}", "received_events_url": "https://api.github.com/users/Nonimus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-14T21:03:02Z", "updated_at": "2019-03-13T14:43:00Z", "closed_at": "2019-03-13T14:43:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Heyo Guys my Problem is that my Code produces the error that there is not enough memory available to process a command. (Windows Error 8) The file is a .nii with 360MB and the Code is the following\r\n\r\n```\r\nimport nibabel as nib\r\nimport numpy as np\r\nfrom nibabel.viewers import OrthoSlicer3D\r\n\r\nimg = nib.load('File.nii')\r\nimg_data = np.array(img.dataobj)\r\n\r\nOrthoSlicer3D(img_data).show()\r\n```\r\nThis is one of the variants.\r\n`\r\nimg.get_data() or img.get_fdata() `\r\nproduce the same error. It works with files that have a lower size.\r\n\r\nThe data is a fmrt sequence about 28 minutes.\r\n\r\nIs there maybe a possibility to split the data before reading the whole file or a possibility only to read a specific amount of the file.\r\n\r\n```Traceback (most recent call last):\r\n  File \"D:/Users/Fabs-spinner/PycharmProjects/Projekt/Main.py\", line 8, in <module>\r\n    img_data = np.array(img.dataobj)\r\n  File \"D:\\Users\\Fabs-spinner\\PycharmProjects\\Projekt\\venv\\lib\\site-packages\\nibabel\\arrayproxy.py\", line 293, in __array__\r\n    raw_data = self.get_unscaled()\r\n  File \"D:\\Users\\Fabs-spinner\\PycharmProjects\\Projekt\\venv\\lib\\site-packages\\nibabel\\arrayproxy.py\", line 288, in get_unscaled\r\n    mmap=self._mmap)\r\n  File \"D:\\Users\\Fabs-spinner\\PycharmProjects\\Projekt\\venv\\lib\\site-packages\\nibabel\\volumeutils.py\", line 509, in array_from_file\r\n    offset=offset)\r\n  File \"D:\\Users\\Fabs-spinner\\PycharmProjects\\Projekt\\venv\\lib\\site-packages\\numpy\\core\\memmap.py\", line 264, in __new__\r\n    mm = mmap.mmap(fid.fileno(), bytes, access=acc, offset=start)\r\nOSError: [WinError 8] Zur Verarbeitung dieses Befehls sind nicht gen\u00fcgend Speicherressourcen verf\u00fcgbar\r\n```\r\n\r\nEdit: It works with lower sices if I take just some slices. I.O. like `img_data = np.array(img.dataobj[:,:,:,1:100])`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/660", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/660/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/660/events", "html_url": "https://github.com/nipy/nibabel/issues/660", "id": 358323047, "node_id": "MDU6SXNzdWUzNTgzMjMwNDc=", "number": 660, "title": "Modifying Affine not affecting get_fdata() output", "user": {"login": "kleingeo", "id": 31522137, "node_id": "MDQ6VXNlcjMxNTIyMTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/31522137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kleingeo", "html_url": "https://github.com/kleingeo", "followers_url": "https://api.github.com/users/kleingeo/followers", "following_url": "https://api.github.com/users/kleingeo/following{/other_user}", "gists_url": "https://api.github.com/users/kleingeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kleingeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kleingeo/subscriptions", "organizations_url": "https://api.github.com/users/kleingeo/orgs", "repos_url": "https://api.github.com/users/kleingeo/repos", "events_url": "https://api.github.com/users/kleingeo/events{/privacy}", "received_events_url": "https://api.github.com/users/kleingeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-08T19:47:56Z", "updated_at": "2019-04-25T12:35:30Z", "closed_at": "2019-04-25T12:35:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to manipulate an image by modifying its affine matrix. When I modify it and plot the output using the OrthoSlicer3D class, it is properly modified as the slices are oriented differently. However, when I try to look at a raw image slice output using get_fdata() and matplotlib, nothing changes. I am not sure exactly what I am doing wrong. I am currently working with Nifti1Image class images. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/657", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/657/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/657/events", "html_url": "https://github.com/nipy/nibabel/issues/657", "id": 350028195, "node_id": "MDU6SXNzdWUzNTAwMjgxOTU=", "number": 657, "title": "Multiple tests failing due to float64/float128", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-13T13:24:22Z", "updated_at": "2018-08-24T17:10:59Z", "closed_at": "2018-08-24T17:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n======================================================================\r\nERROR: nibabel.externals.tests.test_six.test_old_namespace\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/externals/tests/test_six.py\", line 29, in test_old_namespace\r\n    assert_equal(warns.pop(0).category, FutureWarning)\r\nIndexError: pop from empty list\r\n======================================================================\r\nERROR: nibabel.tests.test_arraywriters.test_no_scaling\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 134, in test_no_scaling\r\n    back_arr = round_trip(aw)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 44, in round_trip\r\n    writer.to_fileobj(sio, order)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_arraywriters.test_special_rt\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 265, in test_special_rt\r\n    assert_true(np.allclose(round_trip(aw).astype(float),\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 44, in round_trip\r\n    writer.to_fileobj(sio, order)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_arraywriters.test_to_float\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 599, in test_to_float\r\n    out_info = type_info(out_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_arraywriters.test_float_int_min_max\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 657, in test_float_int_min_max\r\n    finf = type_info(in_dt)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_arraywriters.test_nan2zero_scaling\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_arraywriters.py\", line 794, in test_nan2zero_scaling\r\n    in_info = type_info(in_dt)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_casting.test_shared_range\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_casting.py\", line 25, in test_shared_range\r\n    mn, mx = shared_range(ft, it)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_casting.test_casting\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_casting.py\", line 96, in test_casting\r\n    mn, mx = shared_range(ft, it)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: Failure: FloatingError (We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/usr/lib/python3.7/site-packages/nose/loader.py\", line 417, in loadTestsFromName\r\n    addr.filename, addr.module)\r\n  File \"/usr/lib/python3.7/site-packages/nose/importer.py\", line 47, in importFromPath\r\n    return self.importFromDir(dir_path, fqname)\r\n  File \"/usr/lib/python3.7/site-packages/nose/importer.py\", line 94, in importFromDir\r\n    mod = load_module(part_fqname, fh, filename, desc)\r\n  File \"/usr/lib64/python3.7/imp.py\", line 235, in load_module\r\n    return load_source(name, filename, file)\r\n  File \"/usr/lib64/python3.7/imp.py\", line 172, in load_source\r\n    module = _load(spec)\r\n  File \"<frozen importlib._bootstrap>\", line 696, in _load\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_floating.py\", line 30, in <module>\r\n    LD_INFO = type_info(np.longdouble)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_nifti1.TestNifti1Image)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_nifti1.TestNifti1Pair)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_nifti2.TestNifti1Image)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_nifti2.TestNifti1Pair)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_nifti2.TestNifti2Image)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_nifti2.TestNifti2Pair)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_scaling.test_scaling_in_abstract\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_scaling.py\", line 249, in test_scaling_in_abstract\r\n    check_int_a2f(in_type, out_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_scaling.py\", line 255, in check_int_a2f\r\n    info = type_info(in_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n-------------------- >> begin captured stdout << ---------------------\r\n<class 'numpy.float64'> <class 'numpy.int8'> Slope / inter not both finite\r\n<class 'numpy.float64'> <class 'numpy.int16'> Slope / inter not both finite\r\n<class 'numpy.float64'> <class 'numpy.int32'> Slope / inter not both finite\r\n<class 'numpy.float64'> <class 'numpy.int64'> Slope / inter not both finite\r\n--------------------- >> end captured stdout << ----------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_spm2analyze.TestSpm2AnalyzeImage)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.7/site-packages/numpy/testing/_private/decorators.py\", line 155, in skipper_func\r\n    return f(*args, **kwargs)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/spm99analyze.py\", line 330, in to_file_map\r\n    super(Spm99AnalyzeImage, self).to_file_map(file_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: test_no_scaling (nibabel.tests.test_spm99analyze.TestSpm99AnalyzeImage)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.7/site-packages/numpy/testing/_private/decorators.py\", line 155, in skipper_func\r\n    return f(*args, **kwargs)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_spm99analyze.py\", line 338, in test_no_scaling\r\n    rt_img = bytesio_round_trip(img)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_helpers.py\", line 30, in bytesio_round_trip\r\n    img.to_file_map(bytes_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/spm99analyze.py\", line 330, in to_file_map\r\n    super(Spm99AnalyzeImage, self).to_file_map(file_map)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/analyze.py\", line 1092, in to_file_map\r\n    arr_writer.to_fileobj(imgf)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/arraywriters.py\", line 228, in to_fileobj\r\n    nan2zero=self._needs_nan2zero())\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_volumeutils.test_a2f_nan2zero_scaling\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 430, in test_a2f_nan2zero_scaling\r\n    back_nan = write_return(nan_arr, bio, np.int64, intercept=inter)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 711, in write_return\r\n    array_to_file(data, fileobj, out_dtype, *args, **kwargs)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_volumeutils.test_a2f_scaled_unscaled\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 558, in test_a2f_scaled_unscaled\r\n    intercept=intercept)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 711, in write_return\r\n    array_to_file(data, fileobj, out_dtype, *args, **kwargs)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_volumeutils.test_a2f_bad_scaling\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 617, in test_a2f_bad_scaling\r\n    divslope=slope))\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 711, in write_return\r\n    array_to_file(data, fileobj, out_dtype, *args, **kwargs)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nERROR: nibabel.tests.test_volumeutils.test_a2f_nan2zero_range\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 660, in test_a2f_nan2zero_range\r\n    write_return(arr, fobj, np.int8, mn=1))\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_volumeutils.py\", line 711, in write_return\r\n    array_to_file(data, fileobj, out_dtype, *args, **kwargs)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/volumeutils.py\", line 740, in array_to_file\r\n    both_mn, both_mx = shared_range(w_type, out_dtype)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 158, in shared_range\r\n    mn = ceil_exact(ii.min, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 561, in ceil_exact\r\n    return -floor_exact(-val, flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 509, in floor_exact\r\n    info = type_info(flt_type)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/casting.py\", line 304, in type_info\r\n    'with info %s' % (np_type, info))\r\nnibabel.casting.FloatingError: We had not expected long double type <class 'numpy.float128'> with info Machine parameters for float128\r\n---------------------------------------------------------------\r\nprecision =  31   resolution = -0e+00\r\nmachep =   -105   eps =        0e+00\r\nnegep =    -106   epsneg =     0e+00\r\nminexp =  -1022   tiny =       0e+00\r\nmaxexp =   1024   max =        0e+00\r\nnexp =       11   min =        -max\r\n---------------------------------------------------------------\r\n======================================================================\r\nFAIL: nibabel.freesurfer.tests.test_mghformat.test_cosine_order\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/freesurfer/tests/test_mghformat.py\", line 252, in test_cosine_order\r\n    assert_almost_equal(hdr2['delta'], zooms)\r\n  File \"/usr/lib64/python3.7/site-packages/numpy/testing/_private/utils.py\", line 568, in assert_almost_equal\r\n    return assert_array_almost_equal(actual, desired, decimal, err_msg)\r\n  File \"/usr/lib64/python3.7/site-packages/numpy/testing/_private/utils.py\", line 964, in assert_array_almost_equal\r\n    precision=decimal)\r\n  File \"/usr/lib64/python3.7/site-packages/numpy/testing/_private/utils.py\", line 780, in assert_array_compare\r\n    raise AssertionError(msg)\r\nAssertionError: \r\nArrays are not almost equal to 7 decimals\r\n(mismatch 33.33333333333333%)\r\n x: array([2.       , 3.1622775, 4.       ], dtype=float32)\r\n y: array([2.       , 3.1622777, 4.       ])\r\n======================================================================\r\nFAIL: most capable type will be np.longdouble except when\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_casting.py\", line 223, in test_best_float\r\n    assert_equal(best, np.longdouble)\r\nAssertionError: <class 'numpy.float64'> != <class 'numpy.float128'>\r\n======================================================================\r\nFAIL: nibabel.tests.test_testing.test_clear_and_catch_warnings\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_testing.py\", line 89, in test_clear_and_catch_warnings\r\n    assert_warn_len_equal(my_mod, 1)\r\n  File \"/builddir/build/BUILD/nibabel-2.3.0/nibabel/tests/test_testing.py\", line 72, in assert_warn_len_equal\r\n    assert_equal(len(mod_warns), 2)  # including 'version'\r\nAssertionError: 1 != 2\r\n----------------------------------------------------------------------\r\nRan 7623 tests in 168.388s\r\nFAILED (SKIP=39, errors=22, failures=3)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/654", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/654/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/654/events", "html_url": "https://github.com/nipy/nibabel/issues/654", "id": 346373590, "node_id": "MDU6SXNzdWUzNDYzNzM1OTA=", "number": 654, "title": "Gauging interest on spatial transforms", "user": {"login": "oesteban", "id": 598470, "node_id": "MDQ6VXNlcjU5ODQ3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/598470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oesteban", "html_url": "https://github.com/oesteban", "followers_url": "https://api.github.com/users/oesteban/followers", "following_url": "https://api.github.com/users/oesteban/following{/other_user}", "gists_url": "https://api.github.com/users/oesteban/gists{/gist_id}", "starred_url": "https://api.github.com/users/oesteban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oesteban/subscriptions", "organizations_url": "https://api.github.com/users/oesteban/orgs", "repos_url": "https://api.github.com/users/oesteban/repos", "events_url": "https://api.github.com/users/oesteban/events{/privacy}", "received_events_url": "https://api.github.com/users/oesteban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-31T21:57:52Z", "updated_at": "2018-08-01T23:54:40Z", "closed_at": "2018-08-01T23:54:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm about to start working on python (mostly numpy) based geometric transformation of 3D images. I feel nibabel could be the best host to a new module `nibabel.transforms`.\r\n\r\nI would start by implementing affine transforms (which is almost there already with `resample_from_to`) and free-deformation fields (e.g. generated by ANTs registration).\r\n\r\nNext steps would include taking in collapsed transforms (hdf5), and also parametric transforms (e.g. BSpline).\r\n\r\nWDYT?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/650", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/650/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/650/events", "html_url": "https://github.com/nipy/nibabel/issues/650", "id": 343822011, "node_id": "MDU6SXNzdWUzNDM4MjIwMTE=", "number": 650, "title": "Test failing on Python 3.7", "user": {"login": "sanjayankur31", "id": 102575, "node_id": "MDQ6VXNlcjEwMjU3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjayankur31", "html_url": "https://github.com/sanjayankur31", "followers_url": "https://api.github.com/users/sanjayankur31/followers", "following_url": "https://api.github.com/users/sanjayankur31/following{/other_user}", "gists_url": "https://api.github.com/users/sanjayankur31/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjayankur31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjayankur31/subscriptions", "organizations_url": "https://api.github.com/users/sanjayankur31/orgs", "repos_url": "https://api.github.com/users/sanjayankur31/repos", "events_url": "https://api.github.com/users/sanjayankur31/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjayankur31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-23T22:44:07Z", "updated_at": "2018-09-28T17:01:45Z", "closed_at": "2018-09-28T17:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nFAIL: nibabel.tests.test_testing.test_clear_and_catch_warnings\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/fedora/ankursinha/nibabel-virt/lib64/python3.7/site-packages/nose/case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/fedora/ankursinha/nibabel/nibabel/tests/test_testing.py\", line 89, in test_clear_and_catch_warnings\r\n    assert_warn_len_equal(my_mod, 1)\r\n  File \"/home/fedora/ankursinha/nibabel/nibabel/tests/test_testing.py\", line 72, in assert_warn_len_equal\r\n    assert_equal(len(mod_warns), 2)  # including 'version'\r\nAssertionError: 1 != 2\r\n\r\n----------------------------------------------------------------------\r\n```\r\n\r\nTried on a fresh python 3.7 virtual env too and got the same.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/649", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/649/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/649/events", "html_url": "https://github.com/nipy/nibabel/issues/649", "id": 341379163, "node_id": "MDU6SXNzdWUzNDEzNzkxNjM=", "number": 649, "title": "Nibabel 2.3 freesurfer.read_annot() breaks backwards compatibility", "user": {"login": "christianbrodbeck", "id": 145771, "node_id": "MDQ6VXNlcjE0NTc3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christianbrodbeck", "html_url": "https://github.com/christianbrodbeck", "followers_url": "https://api.github.com/users/christianbrodbeck/followers", "following_url": "https://api.github.com/users/christianbrodbeck/following{/other_user}", "gists_url": "https://api.github.com/users/christianbrodbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/christianbrodbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christianbrodbeck/subscriptions", "organizations_url": "https://api.github.com/users/christianbrodbeck/orgs", "repos_url": "https://api.github.com/users/christianbrodbeck/repos", "events_url": "https://api.github.com/users/christianbrodbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/christianbrodbeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-07-16T03:12:08Z", "updated_at": "2018-10-01T13:31:30Z", "closed_at": "2018-10-01T13:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some .annot files have become unreadable since nibabel 2.3, with the error below:\r\n\r\n```\r\nIn [22]: nibabel.freesurfer.read_annot('rh.fmri-tmean-25.annot')\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-22-c6989d89b74f> in <module>()\r\n----> 1 nibabel.freesurfer.read_annot('rh.fmri-tmean-25.annot')\r\n\r\n/Users/christian/Code/nibabel/nibabel/freesurfer/io.pyc in read_annot(filepath, orig_ids)\r\n    391         mask = labels != 0\r\n    392         labels[~mask] = -1\r\n--> 393         labels[mask] = ord[np.searchsorted(ctab[ord, -1], labels[mask])]\r\n    394     return labels, ctab, names\r\n    395 \r\n\r\nIndexError: index 1 is out of bounds for axis 1 with size 1\r\n\r\nIn [23]: \r\n```\r\n\r\nI think I traced the problem to a change in the way the label ids (`ctab[:, 4]`) are calulated:  now it is \r\n```\r\n    bitshifts = 2 ** np.array([[0], [8], [16], [24]], dtype=rgba.dtype)\r\n    return rgba.dot(bitshifts)\r\n```\r\npreviously it used to be the equivalent of \r\n```\r\n    bitshifts = 2 ** np.array([[0], [8], [16]], dtype=rgba.dtype)\r\n    return rgba[:, :3].dot(bitshifts)\r\n```\r\nSo older files have different label IDs ... Not sure what the proper way to fix this is, revert the use of alpha in label IDs? but that would probably break compatibility with files saved with nibabel 2.3...\r\n\r\nHere is a file that breaks: https://drive.google.com/file/d/11w6KPjfQdD0AliNxE_YP4pQNweX3Xgvk/view?usp=sharing for files with multiple labels it does not break, but I suspect label order might be shifted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/648", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/648/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/648/events", "html_url": "https://github.com/nipy/nibabel/issues/648", "id": 341237019, "node_id": "MDU6SXNzdWUzNDEyMzcwMTk=", "number": 648, "title": "How to check file to be read is a valid 4D image", "user": {"login": "raamana", "id": 3196357, "node_id": "MDQ6VXNlcjMxOTYzNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3196357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raamana", "html_url": "https://github.com/raamana", "followers_url": "https://api.github.com/users/raamana/followers", "following_url": "https://api.github.com/users/raamana/following{/other_user}", "gists_url": "https://api.github.com/users/raamana/gists{/gist_id}", "starred_url": "https://api.github.com/users/raamana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raamana/subscriptions", "organizations_url": "https://api.github.com/users/raamana/orgs", "repos_url": "https://api.github.com/users/raamana/repos", "events_url": "https://api.github.com/users/raamana/events{/privacy}", "received_events_url": "https://api.github.com/users/raamana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-07-14T13:35:42Z", "updated_at": "2019-04-25T12:36:19Z", "closed_at": "2019-04-25T12:36:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to ensure the image that is loaded (via nibabel) is a valid 4D image, which can easily be done with checking the length of shape (to be 4), the 4th dim is > 1 and image is not empty (all zeros). I am wondering if there is a little utility function within nibabel to do this?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/645", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/645/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/645/events", "html_url": "https://github.com/nipy/nibabel/issues/645", "id": 338615781, "node_id": "MDU6SXNzdWUzMzg2MTU3ODE=", "number": 645, "title": "TIF (stack) input", "user": {"login": "TheChymera", "id": 950524, "node_id": "MDQ6VXNlcjk1MDUyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/950524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheChymera", "html_url": "https://github.com/TheChymera", "followers_url": "https://api.github.com/users/TheChymera/followers", "following_url": "https://api.github.com/users/TheChymera/following{/other_user}", "gists_url": "https://api.github.com/users/TheChymera/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheChymera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheChymera/subscriptions", "organizations_url": "https://api.github.com/users/TheChymera/orgs", "repos_url": "https://api.github.com/users/TheChymera/repos", "events_url": "https://api.github.com/users/TheChymera/events{/privacy}", "received_events_url": "https://api.github.com/users/TheChymera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-05T15:09:54Z", "updated_at": "2019-05-14T11:33:56Z", "closed_at": "2019-04-25T12:36:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "A number of molecular imaging devices (most prominently optoacoustics, e.g. MSOT, but also a number of optical imaging methods), have the capacity to output 3D stack recordings of the brain, but do so in TIF format.\r\n\r\nWhat our lab currently does it convert those to NIfTI via [AFNI's `to3d`](https://afni.nimh.nih.gov/pub/dist/doc/program_help/to3d.html), and then take it from there. This is however rather an involved process, and of course comes with the additional dependency on AFNI, all of its deps, and its rather problemaic build system.\r\n\r\nI was wondering if anybody else was thinking of maybe adding support for this in nibabel --- or if not, now I might elsewise best do this via the NiPy useland.    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/642", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/642/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/642/events", "html_url": "https://github.com/nipy/nibabel/issues/642", "id": 337178364, "node_id": "MDU6SXNzdWUzMzcxNzgzNjQ=", "number": 642, "title": "GIFTI compression and Connectome Workbench", "user": {"login": "chrisgorgo", "id": 238759, "node_id": "MDQ6VXNlcjIzODc1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/238759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisgorgo", "html_url": "https://github.com/chrisgorgo", "followers_url": "https://api.github.com/users/chrisgorgo/followers", "following_url": "https://api.github.com/users/chrisgorgo/following{/other_user}", "gists_url": "https://api.github.com/users/chrisgorgo/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisgorgo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisgorgo/subscriptions", "organizations_url": "https://api.github.com/users/chrisgorgo/orgs", "repos_url": "https://api.github.com/users/chrisgorgo/repos", "events_url": "https://api.github.com/users/chrisgorgo/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisgorgo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43042, "node_id": "MDU6TGFiZWw0MzA0Mg==", "url": "https://api.github.com/repos/nipy/nibabel/labels/bug", "name": "bug", "color": "e02a2a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-30T02:14:07Z", "updated_at": "2019-04-25T15:39:39Z", "closed_at": "2019-04-25T15:39:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm attempting to open gifti files created using nibabel in Connectome Workbench and I found that only the `ASCII` encoding mode works:\r\n1. When using `B64GZ` I get 'Decompression of Binary data failed' error when reading the file (see https://github.com/Washington-University/workbench/blob/376691ce35697a0118a660bb5f116791eebba095/src/Gifti/GiftiDataArray.cxx#L709)\r\n2. When using `B64BIN` I get funky looking images\r\n![image](https://user-images.githubusercontent.com/238759/42120422-a0306382-7bcf-11e8-8c7a-846041672b94.png)\r\n\r\nThis could be an issue on the Connectome Workbench side.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/640", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/640/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/640/events", "html_url": "https://github.com/nipy/nibabel/issues/640", "id": 333684753, "node_id": "MDU6SXNzdWUzMzM2ODQ3NTM=", "number": 640, "title": "nii file looks different after converting from REC ", "user": {"login": "Joshuaalbert", "id": 14807032, "node_id": "MDQ6VXNlcjE0ODA3MDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/14807032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Joshuaalbert", "html_url": "https://github.com/Joshuaalbert", "followers_url": "https://api.github.com/users/Joshuaalbert/followers", "following_url": "https://api.github.com/users/Joshuaalbert/following{/other_user}", "gists_url": "https://api.github.com/users/Joshuaalbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/Joshuaalbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Joshuaalbert/subscriptions", "organizations_url": "https://api.github.com/users/Joshuaalbert/orgs", "repos_url": "https://api.github.com/users/Joshuaalbert/repos", "events_url": "https://api.github.com/users/Joshuaalbert/events{/privacy}", "received_events_url": "https://api.github.com/users/Joshuaalbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T13:59:15Z", "updated_at": "2019-04-25T15:33:33Z", "closed_at": "2019-04-25T15:33:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upon loading a REC file and then resaving it as a nii file, the image looks noisy. For other converted files, the converted nii looks fine. What do different nii image format versions do to the data before saving?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/639", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/639/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/639/events", "html_url": "https://github.com/nipy/nibabel/issues/639", "id": 332959129, "node_id": "MDU6SXNzdWUzMzI5NTkxMjk=", "number": 639, "title": "FileBasedImage.serialize()", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43043, "node_id": "MDU6TGFiZWw0MzA0Mw==", "url": "https://api.github.com/repos/nipy/nibabel/labels/enhancement", "name": "enhancement", "color": "23db5d", "default": true, "description": null}, {"id": 627436212, "node_id": "MDU6TGFiZWw2Mjc0MzYyMTI=", "url": "https://api.github.com/repos/nipy/nibabel/labels/good-hackathon-project", "name": "good-hackathon-project", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-16T04:18:12Z", "updated_at": "2019-06-22T11:20:49Z", "closed_at": "2019-06-22T11:20:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Serializing an image to a `bytes` object via `BytesIO` has come up multiple times.\r\n\r\nFor reference, the following can be done (works for NIFTI; I'd have to check if it works for other images):\r\n\r\n```Python\r\nfrom io import BytesIO\r\nimport nibabel as nb\r\n\r\n# Create an image `img`\r\n\r\nbio = BytesIO()\r\nfile_map = {'image': nb.FileHolder(fileobj=bio), 'header': nb.FileHolder(fileobj=bio)}\r\nimg.to_file_map(file_map)\r\n```\r\n\r\nWould it be worth adding a `.serialize()` method (or similar) that returns a `bytes` serialization, rather than forcing users to go through this somewhat convoluted approach?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/634", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/634/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/634/events", "html_url": "https://github.com/nipy/nibabel/issues/634", "id": 328588569, "node_id": "MDU6SXNzdWUzMjg1ODg1Njk=", "number": 634, "title": "Zenodo deauthorized", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/1", "html_url": "https://github.com/nipy/nibabel/milestone/1", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/1/labels", "id": 3291309, "node_id": "MDk6TWlsZXN0b25lMzI5MTMwOQ==", "number": 1, "title": "2.3", "description": "", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2018-04-24T00:17:43Z", "updated_at": "2019-01-02T17:49:15Z", "due_on": null, "closed_at": "2019-01-02T17:49:15Z"}, "comments": 1, "created_at": "2018-06-01T16:45:15Z", "updated_at": "2018-06-01T18:58:32Z", "closed_at": "2018-06-01T18:58:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Similar to AppVeyor, Zenodo got de-authorized.\r\n\r\nhttps://zenodo.org/account/settings/github/repository/nipy/nibabel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/633", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/633/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/633/events", "html_url": "https://github.com/nipy/nibabel/issues/633", "id": 328588026, "node_id": "MDU6SXNzdWUzMjg1ODgwMjY=", "number": 633, "title": "AppVeyor deauthorized", "user": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/1", "html_url": "https://github.com/nipy/nibabel/milestone/1", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/1/labels", "id": 3291309, "node_id": "MDk6TWlsZXN0b25lMzI5MTMwOQ==", "number": 1, "title": "2.3", "description": "", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2018-04-24T00:17:43Z", "updated_at": "2019-01-02T17:49:15Z", "due_on": null, "closed_at": "2019-01-02T17:49:15Z"}, "comments": 12, "created_at": "2018-06-01T16:43:19Z", "updated_at": "2018-06-01T18:57:31Z", "closed_at": "2018-06-01T18:57:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Can somebody with permissions to the AppVeyor group re-authorize its use for nibabel?\r\n\r\nhttps://help.appveyor.com/discussions/problems/11287-the-build-phase-is-set-to-msbuild-mode-default-but-no-visual-studio-project-or-solution-files-were-found", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/631", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/631/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/631/events", "html_url": "https://github.com/nipy/nibabel/issues/631", "id": 327338885, "node_id": "MDU6SXNzdWUzMjczMzg4ODU=", "number": 631, "title": "ETA for next nibabel release?", "user": {"login": "Garyfallidis", "id": 134276, "node_id": "MDQ6VXNlcjEzNDI3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/134276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Garyfallidis", "html_url": "https://github.com/Garyfallidis", "followers_url": "https://api.github.com/users/Garyfallidis/followers", "following_url": "https://api.github.com/users/Garyfallidis/following{/other_user}", "gists_url": "https://api.github.com/users/Garyfallidis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Garyfallidis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Garyfallidis/subscriptions", "organizations_url": "https://api.github.com/users/Garyfallidis/orgs", "repos_url": "https://api.github.com/users/Garyfallidis/repos", "events_url": "https://api.github.com/users/Garyfallidis/events{/privacy}", "received_events_url": "https://api.github.com/users/Garyfallidis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-29T14:11:43Z", "updated_at": "2018-06-12T17:01:45Z", "closed_at": "2018-06-12T17:01:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi @matthew-brett, @effigies and all,\r\n\r\nWe were wondering when will be the next nibabel release.\r\n\r\nWe have some issue will loading \"large\" trk files with last release. The good news is that the fix is already in your master. The issue affects mostly nibabel and dipy windows users. Basically it takes literally for ever to load those files.\r\n\r\nMerged PR here\r\nhttps://github.com/nipy/nibabel/pull/597\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/629", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/629/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/629/events", "html_url": "https://github.com/nipy/nibabel/issues/629", "id": 323955284, "node_id": "MDU6SXNzdWUzMjM5NTUyODQ=", "number": 629, "title": "Update on click when OrthoSlicer is embed on PyQt5", "user": {"login": "mko010", "id": 33830005, "node_id": "MDQ6VXNlcjMzODMwMDA1", "avatar_url": "https://avatars0.githubusercontent.com/u/33830005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mko010", "html_url": "https://github.com/mko010", "followers_url": "https://api.github.com/users/mko010/followers", "following_url": "https://api.github.com/users/mko010/following{/other_user}", "gists_url": "https://api.github.com/users/mko010/gists{/gist_id}", "starred_url": "https://api.github.com/users/mko010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mko010/subscriptions", "organizations_url": "https://api.github.com/users/mko010/orgs", "repos_url": "https://api.github.com/users/mko010/repos", "events_url": "https://api.github.com/users/mko010/events{/privacy}", "received_events_url": "https://api.github.com/users/mko010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T10:04:02Z", "updated_at": "2019-04-25T15:32:12Z", "closed_at": "2019-04-25T15:32:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\nWhy the axes don't update when I the OrthoSilcer is on PyQt5?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/628", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/628/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/628/events", "html_url": "https://github.com/nipy/nibabel/issues/628", "id": 321660677, "node_id": "MDU6SXNzdWUzMjE2NjA2Nzc=", "number": 628, "title": "How to get the axial, sagital and coronal view separately", "user": {"login": "mko010", "id": 33830005, "node_id": "MDQ6VXNlcjMzODMwMDA1", "avatar_url": "https://avatars0.githubusercontent.com/u/33830005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mko010", "html_url": "https://github.com/mko010", "followers_url": "https://api.github.com/users/mko010/followers", "following_url": "https://api.github.com/users/mko010/following{/other_user}", "gists_url": "https://api.github.com/users/mko010/gists{/gist_id}", "starred_url": "https://api.github.com/users/mko010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mko010/subscriptions", "organizations_url": "https://api.github.com/users/mko010/orgs", "repos_url": "https://api.github.com/users/mko010/repos", "events_url": "https://api.github.com/users/mko010/events{/privacy}", "received_events_url": "https://api.github.com/users/mko010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-09T17:35:24Z", "updated_at": "2019-04-25T12:40:39Z", "closed_at": "2019-04-25T12:40:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nI want to get the distinct views from .nii file, with Nibabel is it posible?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/627", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/627/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/627/events", "html_url": "https://github.com/nipy/nibabel/issues/627", "id": 321308061, "node_id": "MDU6SXNzdWUzMjEzMDgwNjE=", "number": 627, "title": "reading surface ras2vox transformation using nibabel", "user": {"login": "EhsanTadayon", "id": 4405049, "node_id": "MDQ6VXNlcjQ0MDUwNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4405049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EhsanTadayon", "html_url": "https://github.com/EhsanTadayon", "followers_url": "https://api.github.com/users/EhsanTadayon/followers", "following_url": "https://api.github.com/users/EhsanTadayon/following{/other_user}", "gists_url": "https://api.github.com/users/EhsanTadayon/gists{/gist_id}", "starred_url": "https://api.github.com/users/EhsanTadayon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EhsanTadayon/subscriptions", "organizations_url": "https://api.github.com/users/EhsanTadayon/orgs", "repos_url": "https://api.github.com/users/EhsanTadayon/repos", "events_url": "https://api.github.com/users/EhsanTadayon/events{/privacy}", "received_events_url": "https://api.github.com/users/EhsanTadayon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-08T19:00:33Z", "updated_at": "2018-05-30T19:13:26Z", "closed_at": "2018-05-30T19:13:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, \r\n\r\nI'm trying to get the ras2vox transformation matrix for a surface file generated by freesurfer, which can be extracted using mris_info. Is there any way to get surface ras2vox transformation matrix using nibabel? \r\n\r\nthanks\r\nEhsan.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/626", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/626/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/626/events", "html_url": "https://github.com/nipy/nibabel/issues/626", "id": 319778634, "node_id": "MDU6SXNzdWUzMTk3Nzg2MzQ=", "number": 626, "title": "Wrong when using function \"nib.load\"  to load \"nii.gz\" (can anyone help me check out )", "user": {"login": "chris1992212", "id": 34815668, "node_id": "MDQ6VXNlcjM0ODE1NjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/34815668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris1992212", "html_url": "https://github.com/chris1992212", "followers_url": "https://api.github.com/users/chris1992212/followers", "following_url": "https://api.github.com/users/chris1992212/following{/other_user}", "gists_url": "https://api.github.com/users/chris1992212/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris1992212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris1992212/subscriptions", "organizations_url": "https://api.github.com/users/chris1992212/orgs", "repos_url": "https://api.github.com/users/chris1992212/repos", "events_url": "https://api.github.com/users/chris1992212/events{/privacy}", "received_events_url": "https://api.github.com/users/chris1992212/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-03T03:37:14Z", "updated_at": "2019-04-23T08:18:46Z", "closed_at": "2019-02-12T02:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\nimg_path = '1000_3.nii.gz'\r\nimg  = nib.load(img_path).get_data()\r\n\r\nError:\r\nFile \"D:/DAGAN-master/data_loader.py\", line 44, in <module>\r\n    img = nib.load(img_path).get_data()\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\loadsave.py\", line 45, in load\r\n    return image_klass.from_filename(filename, **kwargs)\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\keywordonly.py\", line 17, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\analyze.py\", line 1001, in from_filename\r\n    return klass.from_file_map(file_map, mmap=mmap)\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\keywordonly.py\", line 17, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\analyze.py\", line 971, in from_file_map\r\n    img._affine = header.get_best_affine()\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\nifti1.py\", line 731, in get_best_affine\r\n    return self.get_qform()\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\nifti1.py\", line 915, in get_qform\r\n    quat = self.get_qform_quaternion()\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\nifti1.py\", line 890, in get_qform_quaternion\r\n    return fillpositive(bcd, self.quaternion_threshold)\r\n  File \"D:\\anaconda\\lib\\site-packages\\nibabel\\quaternions.py\", line 99, in fillpositive\r\n    raise ValueError('w2 should be positive, but is %e' % w2)\r\nValueError: w2 should be positive, but is -6.401211e-07\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/623", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/623/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/623/events", "html_url": "https://github.com/nipy/nibabel/issues/623", "id": 317677358, "node_id": "MDU6SXNzdWUzMTc2NzczNTg=", "number": 623, "title": "loading a dicom series generates  TypeError", "user": {"login": "satra", "id": 184063, "node_id": "MDQ6VXNlcjE4NDA2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/184063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satra", "html_url": "https://github.com/satra", "followers_url": "https://api.github.com/users/satra/followers", "following_url": "https://api.github.com/users/satra/following{/other_user}", "gists_url": "https://api.github.com/users/satra/gists{/gist_id}", "starred_url": "https://api.github.com/users/satra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satra/subscriptions", "organizations_url": "https://api.github.com/users/satra/orgs", "repos_url": "https://api.github.com/users/satra/repos", "events_url": "https://api.github.com/users/satra/events{/privacy}", "received_events_url": "https://api.github.com/users/satra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T15:22:59Z", "updated_at": "2019-04-25T12:37:37Z", "closed_at": "2019-04-25T12:37:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "just noting this here for now.\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-20-13b4a533131d> in <module>()\r\n----> 1 nibabel.nicom.dicomreaders.slices_to_series([nibabel.nicom.dicomreaders.wrapper_from_file(val) for val in fl])\r\n\r\n/software/miniconda3/envs/dev36pype/lib/python3.6/site-packages/nibabel/nicom/dicomreaders.py in slices_to_series(wrappers)\r\n    147     for vol_list in volume_lists:\r\n    148         if len(vol_list) > 1:\r\n--> 149             vol_list.sort(_slice_sorter)\r\n    150             zs = [s.slice_indicator for s in vol_list]\r\n    151             if len(set(zs)) < len(zs):  # not unique zs\r\n\r\nTypeError: must use keyword argument for key function\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/622", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/622/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/622/events", "html_url": "https://github.com/nipy/nibabel/issues/622", "id": 317028714, "node_id": "MDU6SXNzdWUzMTcwMjg3MTQ=", "number": 622, "title": "2.3 release?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-24T00:32:26Z", "updated_at": "2018-06-12T17:01:45Z", "closed_at": "2018-06-12T17:01:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With current describe being 2.2.1-151-g586c0e07 I thought it might be time to think about the release.  The list of PRs is quite busy with outstanding ones, such as #567.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/620", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/620/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/620/events", "html_url": "https://github.com/nipy/nibabel/issues/620", "id": 315954254, "node_id": "MDU6SXNzdWUzMTU5NTQyNTQ=", "number": 620, "title": "Cannot work out file type of \".nii\"", "user": {"login": "DimitriPapadopoulos", "id": 3234522, "node_id": "MDQ6VXNlcjMyMzQ1MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3234522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DimitriPapadopoulos", "html_url": "https://github.com/DimitriPapadopoulos", "followers_url": "https://api.github.com/users/DimitriPapadopoulos/followers", "following_url": "https://api.github.com/users/DimitriPapadopoulos/following{/other_user}", "gists_url": "https://api.github.com/users/DimitriPapadopoulos/gists{/gist_id}", "starred_url": "https://api.github.com/users/DimitriPapadopoulos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DimitriPapadopoulos/subscriptions", "organizations_url": "https://api.github.com/users/DimitriPapadopoulos/orgs", "repos_url": "https://api.github.com/users/DimitriPapadopoulos/repos", "events_url": "https://api.github.com/users/DimitriPapadopoulos/events{/privacy}", "received_events_url": "https://api.github.com/users/DimitriPapadopoulos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-19T16:36:54Z", "updated_at": "2018-04-24T06:24:26Z", "closed_at": "2018-04-24T00:15:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While this is a corner case, nibabel should properly load `.nii.` instead of raising an exception.\r\n```\r\n>>> import nibabel\r\n>>> nibabel.load('.nii')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3/dist-packages/nibabel/loadsave.py\", line 49, in load\r\n    filename)\r\nnibabel.filebasedimages.ImageFileError: Cannot work out file type of \".nii\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/619", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/619/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/619/events", "html_url": "https://github.com/nipy/nibabel/issues/619", "id": 314201975, "node_id": "MDU6SXNzdWUzMTQyMDE5NzU=", "number": 619, "title": "BUG?: MGHHeader.set_zooms() does not persist on I/O roundtrip or affect affine", "user": {"login": "larsoner", "id": 2365790, "node_id": "MDQ6VXNlcjIzNjU3OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2365790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsoner", "html_url": "https://github.com/larsoner", "followers_url": "https://api.github.com/users/larsoner/followers", "following_url": "https://api.github.com/users/larsoner/following{/other_user}", "gists_url": "https://api.github.com/users/larsoner/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsoner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsoner/subscriptions", "organizations_url": "https://api.github.com/users/larsoner/orgs", "repos_url": "https://api.github.com/users/larsoner/repos", "events_url": "https://api.github.com/users/larsoner/events{/privacy}", "received_events_url": "https://api.github.com/users/larsoner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-04-13T18:09:38Z", "updated_at": "2018-10-03T13:28:33Z", "closed_at": "2018-10-03T13:28:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to set the affine transform in order to scale an MRI along three dimensions (on latest `master`). I decided to try to do this by setting the `zooms`, but the scaling does not seem to persist on I/O round-trip, at least based on how I'm checking.\r\n\r\nReproducing code:\r\n```Python\r\nimport os\r\nimport numpy as np\r\nimport nibabel\r\n\r\nfname = os.path.join(os.getenv('FREESURFER_HOME'), 'subjects', 'fsaverage', 'mri', 'T1.mgz')\r\n\r\nimg_mgz = nibabel.load(fname)\r\nnibabel.save(img_mgz, 'test.nii')\r\nimg_nii = nibabel.load('test.nii')\r\nzooms = (0.5, 0.5, 0.5)\r\naffine_zoomed = img_mgz.header.get_affine().copy()\r\naffine_zoomed[:3] *= 0.5  # this is what I expect to persist\r\nimg_mgz.header.set_zooms(zooms)\r\nimg_nii.header.set_zooms(zooms)\r\n# good (3)\r\nassert np.allclose(img_mgz.header.get_zooms(), zooms, atol=1e-5)\r\nassert np.allclose(img_nii.header.get_zooms(), zooms, atol=1e-5)\r\nassert np.allclose(img_mgz.header.get_affine(), affine_zoomed, atol=1e-5)\r\n# bad (1)\r\nassert not np.allclose(img_nii.header.get_best_affine(), affine_zoomed, atol=1e-5)\r\n\r\n#\r\n# Do some I/O\r\n#\r\n\r\nnibabel.save(img_nii, 'test_nii.nii')\r\nnibabel.save(img_mgz, 'test_mgz.nii')\r\nnibabel.save(img_nii, 'test_nii.mgz')\r\nnibabel.save(img_mgz, 'test_mgz.mgz')\r\n\r\n# good (1)\r\nassert np.allclose(nibabel.load('test_nii.nii').header.get_zooms(), zooms, atol=1e-5)\r\n# bad (5)\r\nassert not np.allclose(nibabel.load('test_mgz.nii').header.get_zooms(), zooms, atol=1e-5)\r\nassert not np.allclose(nibabel.load('test_nii.mgz').header.get_zooms(), zooms, atol=1e-5)\r\nassert not np.allclose(nibabel.load('test_mgz.mgz').header.get_zooms(), zooms, atol=1e-5)\r\n# changed due to I/O steps!\r\nassert not np.allclose(img_mgz.header.get_affine(), affine_zoomed, atol=1e-5)\r\nassert not np.allclose(img_mgz.header.get_zooms(), zooms, atol=1e-5)\r\n```\r\nIt looks like with this code 1) there are consistency problems, and 2) problems with `img_mgz.header.get_zooms()` being affected / reset by the call(s) to `nibabel.save`.\r\n\r\nIs there a different way I should rescale the MRI? Am I doing something silly here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nipy/nibabel/issues/616", "repository_url": "https://api.github.com/repos/nipy/nibabel", "labels_url": "https://api.github.com/repos/nipy/nibabel/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/nipy/nibabel/issues/616/comments", "events_url": "https://api.github.com/repos/nipy/nibabel/issues/616/events", "html_url": "https://github.com/nipy/nibabel/issues/616", "id": 311412568, "node_id": "MDU6SXNzdWUzMTE0MTI1Njg=", "number": 616, "title": "Bug: get an IndexError when I should be getting a ValueError", "user": {"login": "tomvars", "id": 8352998, "node_id": "MDQ6VXNlcjgzNTI5OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8352998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomvars", "html_url": "https://github.com/tomvars", "followers_url": "https://api.github.com/users/tomvars/followers", "following_url": "https://api.github.com/users/tomvars/following{/other_user}", "gists_url": "https://api.github.com/users/tomvars/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomvars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomvars/subscriptions", "organizations_url": "https://api.github.com/users/tomvars/orgs", "repos_url": "https://api.github.com/users/tomvars/repos", "events_url": "https://api.github.com/users/tomvars/events{/privacy}", "received_events_url": "https://api.github.com/users/tomvars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/nipy/nibabel/milestones/6", "html_url": "https://github.com/nipy/nibabel/milestone/6", "labels_url": "https://api.github.com/repos/nipy/nibabel/milestones/6/labels", "id": 4191926, "node_id": "MDk6TWlsZXN0b25lNDE5MTkyNg==", "number": 6, "title": "2.4.1", "description": "", "creator": {"login": "effigies", "id": 83442, "node_id": "MDQ6VXNlcjgzNDQy", "avatar_url": "https://avatars0.githubusercontent.com/u/83442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/effigies", "html_url": "https://github.com/effigies", "followers_url": "https://api.github.com/users/effigies/followers", "following_url": "https://api.github.com/users/effigies/following{/other_user}", "gists_url": "https://api.github.com/users/effigies/gists{/gist_id}", "starred_url": "https://api.github.com/users/effigies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/effigies/subscriptions", "organizations_url": "https://api.github.com/users/effigies/orgs", "repos_url": "https://api.github.com/users/effigies/repos", "events_url": "https://api.github.com/users/effigies/events{/privacy}", "received_events_url": "https://api.github.com/users/effigies/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 15, "state": "closed", "created_at": "2019-04-02T02:36:40Z", "updated_at": "2019-05-28T02:13:51Z", "due_on": "2019-05-27T07:00:00Z", "closed_at": "2019-05-28T02:13:51Z"}, "comments": 38, "created_at": "2018-04-04T22:27:46Z", "updated_at": "2019-05-23T18:21:11Z", "closed_at": "2019-05-23T18:21:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line shouldn't use `.pop()` as there's no guarantee the element being popped is there. This fails to throw the ValueError and instead throws an IndexError which is not caught by my application which puts `nib.load` in a try except using this error `nib.filebasedimages.ImageFileError`. Removing the line fixes the issue but perhaps there's a better solution. https://github.com/nipy/nibabel/blob/949d466ee9c1d21a85ccb03a03f438aa01595782/nibabel/volumeutils.py#L1356\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}