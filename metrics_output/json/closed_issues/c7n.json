{"total_count": 1965, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6058", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6058/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6058/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6058/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/6058", "id": 683113139, "node_id": "MDU6SXNzdWU2ODMxMTMxMzk=", "number": 6058, "title": "Allow inspection of lambda aliases and versions", "user": {"login": "soncaocc", "id": 49293752, "node_id": "MDQ6VXNlcjQ5MjkzNzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/49293752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soncaocc", "html_url": "https://github.com/soncaocc", "followers_url": "https://api.github.com/users/soncaocc/followers", "following_url": "https://api.github.com/users/soncaocc/following{/other_user}", "gists_url": "https://api.github.com/users/soncaocc/gists{/gist_id}", "starred_url": "https://api.github.com/users/soncaocc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soncaocc/subscriptions", "organizations_url": "https://api.github.com/users/soncaocc/orgs", "repos_url": "https://api.github.com/users/soncaocc/repos", "events_url": "https://api.github.com/users/soncaocc/events{/privacy}", "received_events_url": "https://api.github.com/users/soncaocc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-20T21:41:12Z", "updated_at": "2020-08-21T21:14:03Z", "closed_at": "2020-08-21T21:12:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI currently use policies with ```resource:lambda``` to inspect the resource based policy to ensure only approved accounts have the ```lambda:InvokeFunction``` action available. I use the cross-account filter type and the ```actions``` property of that filter type in my policy, Custodian only inspects the unqualified reference to the lambda function, which defaults to $LATEST. Users can circumvent the custodian policy by creating an alias or version of the function, modify the resource based policy, and invoke the alias or version.\r\n\r\n**Describe the solution you'd like**\r\nI would like an enhancement to ```resource: lambda``` to account for lambda's versioning/aliasing capabilities. \r\n\r\n**Describe alternatives you've considered**\r\nI haven't attempted any alternatives but have tested this gap in differing scenarios to validate the gap exists.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6056", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6056/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6056/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6056/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/6056", "id": 683008376, "node_id": "MDU6SXNzdWU2ODMwMDgzNzY=", "number": 6056, "title": "Security Hub Cross Account filter", "user": {"login": "JohnHillegass", "id": 13325146, "node_id": "MDQ6VXNlcjEzMzI1MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/13325146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnHillegass", "html_url": "https://github.com/JohnHillegass", "followers_url": "https://api.github.com/users/JohnHillegass/followers", "following_url": "https://api.github.com/users/JohnHillegass/following{/other_user}", "gists_url": "https://api.github.com/users/JohnHillegass/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnHillegass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnHillegass/subscriptions", "organizations_url": "https://api.github.com/users/JohnHillegass/orgs", "repos_url": "https://api.github.com/users/JohnHillegass/repos", "events_url": "https://api.github.com/users/JohnHillegass/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnHillegass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-20T18:31:03Z", "updated_at": "2020-08-21T13:37:56Z", "closed_at": "2020-08-21T13:37:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nSecurity Hub membership can potentially be shared outside of the organization. It would be nice to be able to scan for members or invitations from external accounts in a similar way that we scan other resources using the cross-account filter. \r\n\r\n**Describe the solution you'd like**\r\nThe boto3 SecurityHub resource has two call that could provide data useful for this kind of filter. The methods, responses and potential JMESpath filters are added below.\r\n\r\nmethod: list_members\r\nhttps://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/securityhub.html#SecurityHub.Client.list_members\r\n\r\n```python\r\n{'ResponseMetadata': {\r\n   'Members': [{'AccountId': '111222333444',\r\n     'MasterId': '222333444555',\r\n     'MemberStatus': 'Invited',\r\n     'InvitedAt': datetime.datetime(2020, 8, 20, 17, 54, 2, 841000, tzinfo=tzutc()),\r\n     'UpdatedAt': datetime.datetime(2020, 8, 20, 17, 54, 2, 841000, tzinfo=tzutc())}]}\r\n```\r\njmespath: Members[].MasterId\r\n\r\nmethod: list_invitations\r\nhttps://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/securityhub.html#SecurityHub.Client.list_invitations\r\n\r\n```python\r\n{'ResponseMetadata': {\r\n   'Invitations': [{'AccountId': '222333444555',\r\n     'InvitationId': '08ba0680ccecf914912167d4fbd61d7b',\r\n     'InvitedAt': datetime.datetime(2020, 8, 20, 17, 54, 2, 841000, tzinfo=tzutc()),\r\n     'MemberStatus': 'Invited'}]}\r\n```\r\njmespath: Invitations[].AccountId\r\n\r\n**Describe alternatives you've considered**\r\nSCP is not a good fit for this kind of control. SecurityHub is also currently not a Supported Resource Type of Config Rules.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6046", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6046/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6046/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6046/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/6046", "id": 681313780, "node_id": "MDU6SXNzdWU2ODEzMTM3ODA=", "number": 6046, "title": "SNS Transport Delivering Empty Message", "user": {"login": "avishayil", "id": 827024, "node_id": "MDQ6VXNlcjgyNzAyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avishayil", "html_url": "https://github.com/avishayil", "followers_url": "https://api.github.com/users/avishayil/followers", "following_url": "https://api.github.com/users/avishayil/following{/other_user}", "gists_url": "https://api.github.com/users/avishayil/gists{/gist_id}", "starred_url": "https://api.github.com/users/avishayil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avishayil/subscriptions", "organizations_url": "https://api.github.com/users/avishayil/orgs", "repos_url": "https://api.github.com/users/avishayil/repos", "events_url": "https://api.github.com/users/avishayil/events{/privacy}", "received_events_url": "https://api.github.com/users/avishayil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-08-18T20:19:04Z", "updated_at": "2020-08-18T21:31:42Z", "closed_at": "2020-08-18T21:31:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to utilize SNS transport in order to deliver messages from several accounts to SNS topic that is located in a designated account. A SQS queue is subscribed to the SNS topic.\r\n\r\nI was hoping to use c7n-notify with c7n-mailer to deliver those messages to the SQS queue through the SNS topic but without success. The c7n-mailer is configured to pull messages from the SQS queue and send them using SES.\r\n\r\n````\r\nqueue_url: https://sqs.us-east-1.amazonaws.com/{centralized_account}/CustodianMailerQueue\r\nrole: arn:aws:iam::{centralized_account}:role/CustodianMailer\r\nfrom_address: email@domain.com\r\nses_region: us-east-1\r\n````\r\n\r\nIn my policy I included the following configuration:\r\n````\r\n      - type: notify\r\n        template: default.html\r\n        priority_header: '2'\r\n        subject: S3 Disable Public Block Event Detected\r\n        violation_desc: \"S3 Bucket Where Disable Public Block Event Detected:\"\r\n        action_desc: |\r\n          \"Actions Taken: The Violating S3 Allow Publick Block Rule Has Been Removed.\"\r\n        to:\r\n          - event-owner\r\n        transport:\r\n          type: sns\r\n          topic: arn:aws:sns:us-east-1:{centralized_account}:CustodianMailerTopic\r\n````\r\n\r\nBut when i'm looking at the custodian policy lambda log I can see the following:\r\n````\r\n[INFO]\t2020-08-18T19:56:52.440Z\tc635a52c-a1cb-4596-88c6-6bd7888a077b\tsent message:None policy:s3-public-block-enable-all-event template:default.html count:1\r\n--\r\n````\r\n\r\nAny idea why is the message empty? Of course that this configuration is not delivering any messages at the end, and I can't see any messages reaching the SQS queue.\r\n\r\nWhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6015", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6015/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6015/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/6015/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/6015", "id": 673739333, "node_id": "MDU6SXNzdWU2NzM3MzkzMzM=", "number": 6015, "title": "Is there a way to match (filter) on an 'app-elb' that no longer has a target-group or listener attached to it?", "user": {"login": "85matthew", "id": 10124092, "node_id": "MDQ6VXNlcjEwMTI0MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/10124092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/85matthew", "html_url": "https://github.com/85matthew", "followers_url": "https://api.github.com/users/85matthew/followers", "following_url": "https://api.github.com/users/85matthew/following{/other_user}", "gists_url": "https://api.github.com/users/85matthew/gists{/gist_id}", "starred_url": "https://api.github.com/users/85matthew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/85matthew/subscriptions", "organizations_url": "https://api.github.com/users/85matthew/orgs", "repos_url": "https://api.github.com/users/85matthew/repos", "events_url": "https://api.github.com/users/85matthew/events{/privacy}", "received_events_url": "https://api.github.com/users/85matthew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-05T18:02:22Z", "updated_at": "2020-08-09T13:57:02Z", "closed_at": "2020-08-06T14:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've found a way to work around removing unused 'app-elb-target-groups' but now I'm not able to find a way to remove an unused 'app-elb'. If I have already deleted all the target-groups/listneners... I can't find a way to match against the 'null' or 'empty' list returned using the 'load-balancer' or 'listener' filters.\r\n\r\nHave tried many variations of something like this:\r\n\r\n  - name: delete-unused-alb\r\n    resource: app-elb\r\n    filters:\r\n      - type: listener\r\n        key: Port\r\n        value: 80\r\n        op: not-equal\r\n\r\n  - name: delete-unused-alb\r\n    resource: app-elb\r\n    filters:\r\n      - type: listener\r\n        key: Port\r\n        value: 'null'\r\n\r\n  - name: delete-unused-alb\r\n    resource: app-elb\r\n    filters:\r\n      - type: listener\r\n        key: DefaultActions\r\n        value: 'null'\r\n\r\n  - name: delete-unused-alb\r\n    resource: app-elb\r\n    filters:\r\n      - type: listener\r\n        key: DefaultActions\r\n       value: 0\r\n       value_type: count\r\n\r\n  - name: delete-unused-alb\r\n    resource: app-elb\r\n    filters:\r\n      - type: listener\r\n        key: DefaultActions\r\n       value: 0\r\n       value_type: resource_count\r\n\r\nAlso many variations like this utilizing the filter type 'target-group' also.\r\n\r\n\r\nAny guidance on if something like this is even possible. I imagine the data type being returned by the empty json is probably matching as a different data type.\r\n\r\naws elbv2 describe-listeners --load-balancer-arn arn:aws:elasticloadbalancing:us-east-1:111111111111:loadbalancer/app/TestALB/798b9asdfgedd5f0\r\n{\r\n    \"Listeners\": []\r\n}\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5993", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5993/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5993/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5993/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5993", "id": 667943460, "node_id": "MDU6SXNzdWU2Njc5NDM0NjA=", "number": 5993, "title": "Controlling verbosity of notifications from aws.ami cross-account filters", "user": {"login": "lithiumoxide", "id": 1164628, "node_id": "MDQ6VXNlcjExNjQ2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1164628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lithiumoxide", "html_url": "https://github.com/lithiumoxide", "followers_url": "https://api.github.com/users/lithiumoxide/followers", "following_url": "https://api.github.com/users/lithiumoxide/following{/other_user}", "gists_url": "https://api.github.com/users/lithiumoxide/gists{/gist_id}", "starred_url": "https://api.github.com/users/lithiumoxide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lithiumoxide/subscriptions", "organizations_url": "https://api.github.com/users/lithiumoxide/orgs", "repos_url": "https://api.github.com/users/lithiumoxide/repos", "events_url": "https://api.github.com/users/lithiumoxide/events{/privacy}", "received_events_url": "https://api.github.com/users/lithiumoxide/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T15:40:39Z", "updated_at": "2020-08-04T13:42:42Z", "closed_at": "2020-08-04T13:42:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `aws.ami` to find AMIs shared with other accounts using the `cross-account` filter. I send the findings to a Slack channel, where a team can check and respond to the findings where necessary. This works great.\r\n\r\nHowever, the message sent to Slack contains a significant amount of JSON. Is there any way to control the verbosity or what parts of the JSON block are sent to the notification recipient? In my case, it would be great to get the `c7n:CrossAccountViolations`, `ImageId`, and `Tags` blocks sent, with everything else stripped out. If this isn't possible, can the JSON part of the notification be suppressed entirely (i.e. the notification would simply tell me that there _is_ a shared AMI, but would not supply any details)?\r\n\r\nI know I could potentially send the findings to a Lambda function and strip out unneeded JSON there, but it would be great if this was possible to control from within the Custodian policy itself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5991", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5991/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5991/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5991/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5991", "id": 667857396, "node_id": "MDU6SXNzdWU2Njc4NTczOTY=", "number": 5991, "title": "Ability to filter ECS task definitions based on the values stored in environment variables", "user": {"login": "kylejohnson514", "id": 20666182, "node_id": "MDQ6VXNlcjIwNjY2MTgy", "avatar_url": "https://avatars0.githubusercontent.com/u/20666182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylejohnson514", "html_url": "https://github.com/kylejohnson514", "followers_url": "https://api.github.com/users/kylejohnson514/followers", "following_url": "https://api.github.com/users/kylejohnson514/following{/other_user}", "gists_url": "https://api.github.com/users/kylejohnson514/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylejohnson514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylejohnson514/subscriptions", "organizations_url": "https://api.github.com/users/kylejohnson514/orgs", "repos_url": "https://api.github.com/users/kylejohnson514/repos", "events_url": "https://api.github.com/users/kylejohnson514/events{/privacy}", "received_events_url": "https://api.github.com/users/kylejohnson514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-29T13:44:35Z", "updated_at": "2020-07-29T20:21:33Z", "closed_at": "2020-07-29T20:21:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently, Custodian's `value` filter allows you to check if an ECS task definition's environment variable exists in the list of the resource's env vars keys. You can also check if a specific value exists in the list of the environment variable values. However, you cannot confirm if an environment variable's key and value are matching specific values. For example, imagine that we want to filter out all ECS Task Definitions that have an environment variable `ECS_AWSVPC_BLOCK_IMDS` equal to `true`.\r\n\r\nWhile we can use the `value` filter on the ecs-task-definition resource to check for `taskDefinition.containerDefinitions.environment.name` contains `ECS_AWSVPC_BLOCK_IMDS`, we cannot 100% reliably perform the second check of `taskDefinition.containerDefinitions.environment.value == true` because these value filter checks will be looking at all containerDefinitions. It would work if there was only one environment variable, but if there is more than one, we have a potential for error. In the example below, a list `contains` operator filter will misfire because the second list contains `true`.. whereas it's not properly confirming that `ECS_AWSVPC_BLOCK_IMDS == true`, just that the first list contains `ECS_AWSVPC_BLOCK_IMDS` and the second list contains `true`. An enhancement to Custodian is needed to be able to check these values more strictly.\r\n\r\nFor example, given this containerDefinition from an ECS task definition:\r\n\r\n```\r\n\"containerDefinitions\": [{\r\n    \"name\": \"test\",\r\n    \"image\": \"test\",\r\n    \"cpu\": 0,\r\n    \"portMappings\": [],\r\n    \"essential\": true,\r\n    \"entryPoint\": [\r\n        \"sh\"\r\n    ],\r\n    \"environment\": [\r\n    {\r\n        \"name\": \"ECS_AWSVPC_BLOCK_IMDS\",\r\n        \"value\": \"false\"\r\n    },\r\n    {\r\n        \"name\": \"OTHER_IMPORTANT_THING\",\r\n        \"value\": \"true\"\r\n    },\r\n]\r\n}]\r\n\r\n```\r\na JMESPath expression of containerDefinitions[].environment[].name will yield:\r\n```\r\n[\r\n    \"ECS_AWSVPC_BLOCK_IMDS\",\r\n    \"OTHER_IMPORTANT_THING\"\r\n]\r\n\r\n```\r\na JMESPath expression of containerDefinitions[].environment[].value will yield\r\n```\r\n [\r\n      false,\r\n      true\r\n ]\r\n\r\n```\r\nAs an example of the existing functionality, this type of policy would return this specific ECS task definition as a match...\r\n\r\n```\r\n- name: test-ecs-env-vars\r\n    resource: ecs-task-definition\r\n    filters:\r\n    - and:\r\n        - type: value\r\n        key: containerDefinitions[].environment[].name\r\n        value: \"ECS_AWSVPC_BLOCK_IMDS\"\r\n        op: contains\r\n        - type: value\r\n        key: containerDefinitions[].environment[].value\r\n        value: \"true\"\r\n        op: contains\r\n```\r\n\r\nwhen, for our goals/purposes, we wouldn't want it to, because it has `ECS_AWSVPC_BLOCK_IMDS == false` in the actual task definition.\r\n\r\n**Describe the solution you'd like**\r\nAn additional filter to ECS Task Definitions to check that an environment variable's value matches a specific key value would resolve this.\r\n\r\n**Additional context**\r\nWhen creating an ECS task definition, environment variables are used to determine some of the resource's associated settings. For more info, see https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5987", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5987/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5987/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5987/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5987", "id": 666373888, "node_id": "MDU6SXNzdWU2NjYzNzM4ODg=", "number": 5987, "title": "Error when deploying Azure Function: ValueError: 'Embedded' is not a valid ManagedServiceIdentityType", "user": {"login": "tonyferrell", "id": 556834, "node_id": "MDQ6VXNlcjU1NjgzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/556834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyferrell", "html_url": "https://github.com/tonyferrell", "followers_url": "https://api.github.com/users/tonyferrell/followers", "following_url": "https://api.github.com/users/tonyferrell/following{/other_user}", "gists_url": "https://api.github.com/users/tonyferrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyferrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyferrell/subscriptions", "organizations_url": "https://api.github.com/users/tonyferrell/orgs", "repos_url": "https://api.github.com/users/tonyferrell/repos", "events_url": "https://api.github.com/users/tonyferrell/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyferrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2226135508, "node_id": "MDU6TGFiZWwyMjI2MTM1NTA4", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/azure", "name": "azure", "color": "887fdb", "default": false, "description": ""}, {"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-27T15:15:00Z", "updated_at": "2020-08-11T19:54:44Z", "closed_at": "2020-08-11T19:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI am attempting to deploy an Azure Function policy following the information found [here](https://cloudcustodian.io/docs/azure/configuration/functionshosting.html#event-grid-functions). I am trying to deploy with a service principal configured  using the environment variables `AZURE_CLIENT_ID`, `AZURE_CLIENT_SECRET`, `AZURE_SUBSCRIPTION_ID`, `AZURE_TENANT_ID`, but during deployment I receive an error:\r\n\r\n```\r\nmsrest.exceptions.SerializationError: 'Embedded' is not valid value for enum <enum 'ManagedServiceIdentityType'>\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n  * Check out master\r\n  * Create policy file `my-policy.yml` with content:\r\n```yaml\r\npolicies:\r\n    - name: tag-key-vault-creator\r\n      resource: azure.keyvault\r\n      mode:\r\n        type: azure-event-grid\r\n        events:\r\n          - resourceProvider: Microsoft.KeyVault/vaults\r\n            event: write\r\n      filters:\r\n        - \"tag:CreatorEmail\": null\r\n      actions:\r\n        - type: auto-tag-user\r\n          tag: CreatorEmail\r\n```\r\n  * run  `custodian run my-policy.yml -s out`\r\n\r\n**Expected behavior**\r\nCloud Custodian Azure function is deployed.\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSX 10.15.5\r\n - Python Version: python 3.8.5\r\n - Custodian Version: `0.9.4` - built from master at commit `e1647a4375a5060005d79ff6a754a8ac4961da9c`\r\n - Cloud Provider: Azure\r\n - Policy: I tried with a bunch of different \r\n```yaml\r\npolicies:\r\n    - name: tag-key-vault-creator\r\n      resource: azure.keyvault\r\n      mode:\r\n        type: azure-event-grid\r\n        events:\r\n          - resourceProvider: Microsoft.KeyVault/vaults\r\n            event: write\r\n      filters:\r\n        - \"tag:CreatorEmail\": null\r\n      actions:\r\n        - type: auto-tag-user\r\n          tag: CreatorEmail\r\n ```\r\n - Traceback:\r\n```\r\n2020-07-27 07:24:18,458: custodian.azure.policy.AzureFunctionMode:ERROR policy:tag-key-vault-creator function policies should use UserAssigned Identities see https://cloudcustodian.io/docs/azure/configuration/functionshosting.html#authentication-options\r\n2020-07-27 07:24:18,771: custodian.azure.session:INFO Authenticated [Principal | 673ba59b-d196-4d0d-a64a-54d5de409824]\r\n2020-07-27 07:24:18,772: custodian.azure.policy.AzureFunctionMode:ERROR policy:tag-key-vault-creator function policies should use UserAssigned Identities see https://cloudcustodian.io/docs/azure/configuration/functionshosting.html#authentication-options\r\n2020-07-27 07:24:19,258: custodian.azure.deployment_unit.DeploymentUnit:INFO Function Application \"tag-key-vault-creator-a13f8df5\" not found.\r\n2020-07-27 07:24:19,470: custodian.azure.deployment_unit.DeploymentUnit:INFO Found Application Service Plan \"cloud-custodian\".\r\n2020-07-27 07:24:19,872: custodian.azure.deployment_unit.DeploymentUnit:INFO Found Application Insights \"cloud-custodian\".\r\n2020-07-27 07:24:20,216: custodian.azure.deployment_unit.DeploymentUnit:INFO Found Storage Account \"custodiana13f8df5\".\r\n2020-07-27 07:24:20,425: custodian.azure.deployment_unit.DeploymentUnit:INFO Creating Function Application \"tag-key-vault-creator-a13f8df5\"\r\n2020-07-27 07:24:20,427: custodian.commands:ERROR Error while executing policy tag-key-vault-creator, continuing\r\nValueError: 'Embedded' is not a valid ManagedServiceIdentityType\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 984, in serialize_enum\r\n    enum_obj(result)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/enum.py\", line 309, in __call__\r\n    return cls.__new__(cls, value)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/enum.py\", line 600, in __new__\r\n    raise exc\r\n  File \"/usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/enum.py\", line 584, in __new__\r\n    result = cls._missing_(value)\r\n  File \"/usr/local/Cellar/python@3.8/3.8.5/Frameworks/Python.framework/Versions/3.8/lib/python3.8/enum.py\", line 613, in _missing_\r\n    raise ValueError(\"%r is not a valid %s\" % (value, cls.__name__))\r\nValueError: 'Embedded' is not a valid ManagedServiceIdentityType\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/anf/code/cloud-custodian/c7n/commands.py\", line 282, in run\r\n    policy()\r\n  File \"/Users/anf/code/cloud-custodian/c7n/policy.py\", line 1183, in __call__\r\n    resources = mode.provision()\r\n  File \"/Users/anf/code/cloud-custodian/tools/c7n_azure/c7n_azure/policy.py\", line 448, in provision\r\n    super(AzureEventGridMode, self).provision()\r\n  File \"/Users/anf/code/cloud-custodian/tools/c7n_azure/c7n_azure/policy.py\", line 277, in provision\r\n    self.function_app = FunctionAppUtilities.deploy_function_app(self.function_params)\r\n  File \"/Users/anf/code/cloud-custodian/tools/c7n_azure/c7n_azure/functionapp_utils.py\", line 96, in deploy_function_app\r\n    return function_app_unit.provision(function_app_params)\r\n  File \"/Users/anf/code/cloud-custodian/tools/c7n_azure/c7n_azure/provisioning/deployment_unit.py\", line 30, in provision\r\n    result = self._provision(params)\r\n  File \"/Users/anf/code/cloud-custodian/tools/c7n_azure/c7n_azure/provisioning/function_app.py\", line 93, in _provision\r\n    return self.client.web_apps.create_or_update(params['resource_group_name'],\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/azure/mgmt/web/v2019_08_01/operations/_web_apps_operations.py\", line 333, in create_or_update\r\n    raw_result = self._create_or_update_initial(\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/azure/mgmt/web/v2019_08_01/operations/_web_apps_operations.py\", line 280, in _create_or_update_initial\r\n    body_content = self._serialize.body(site_envelope, 'Site')\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 626, in body\r\n    return self._serialize(data, data_type, **kwargs)\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 483, in _serialize\r\n    return self.serialize_data(\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 780, in serialize_data\r\n    return self._serialize(data, **kwargs)\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 523, in _serialize\r\n    new_attr = self.serialize_data(orig_attr, attr_desc['type'], **kwargs)\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 780, in serialize_data\r\n    return self._serialize(data, **kwargs)\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 523, in _serialize\r\n    new_attr = self.serialize_data(orig_attr, attr_desc['type'], **kwargs)\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 768, in serialize_data\r\n    return Serializer.serialize_enum(data, enum_obj=enum_type)\r\n  File \"/Users/anf/code/cloud-custodian/lib/python3.8/site-packages/msrest/serialization.py\", line 991, in serialize_enum\r\n    raise SerializationError(error.format(attr, enum_obj))\r\nmsrest.exceptions.SerializationError: 'Embedded' is not valid value for enum <enum 'ManagedServiceIdentityType'>\r\n2020-07-27 07:24:20,441: custodian.commands:ERROR The following policies had errors while executing\r\n - tag-key-vault-creator\r\n```\r\n - `custodian version --debug` output\r\n```\r\nCustodian:   0.9.4\r\nPython:      3.8.5 (default, Jul 21 2020, 10:48:26) \r\n             [Clang 11.0.3 (clang-1103.0.32.62)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='DLPVM2-MnOS-X86.corp.microsoft.com', release='19.5.0', version='Darwin Kernel Version 19.5.0: Tue May 26 20:41:44 PDT 2020; root:xnu-6153.121.2~2/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled: \r\n\r\nPyJWT==1.7.1\r\nadal==1.2.4\r\napplicationinsights==0.11.9\r\napscheduler==3.6.3\r\nargcomplete==1.12.0\r\nattrs==19.3.0\r\nazure-cli-core==2.9.1\r\nazure-cli-nspkg==3.0.4\r\nazure-cli-telemetry==1.0.4\r\nazure-common==1.1.25\r\nazure-core==1.7.0\r\nazure-cosmos==3.2.0\r\nazure-cosmosdb-nspkg==2.0.2\r\nazure-cosmosdb-table==1.0.6\r\nazure-functions==1.3.0\r\nazure-graphrbac==0.61.1\r\nazure-keyvault==1.1.0\r\nazure-mgmt-apimanagement==0.1.0\r\nazure-mgmt-applicationinsights==0.2.0\r\nazure-mgmt-authorization==0.60.0\r\nazure-mgmt-batch==7.0.0\r\nazure-mgmt-cdn==4.0.0\r\nazure-mgmt-cognitiveservices==5.0.0\r\nazure-mgmt-compute==10.0.0\r\nazure-mgmt-containerinstance==1.5.0\r\nazure-mgmt-containerregistry==2.8.0\r\nazure-mgmt-containerservice==8.3.0\r\nazure-mgmt-core==1.0.0\r\nazure-mgmt-cosmosdb==0.11.0\r\nazure-mgmt-costmanagement==0.1.0\r\nazure-mgmt-databricks==0.1.0\r\nazure-mgmt-datafactory==0.8.0\r\nazure-mgmt-datalake-nspkg==3.0.1\r\nazure-mgmt-datalake-store==0.5.0\r\nazure-mgmt-dns==3.0.0\r\nazure-mgmt-eventgrid==2.2.0\r\nazure-mgmt-eventhub==3.1.0\r\nazure-mgmt-hdinsight==1.6.0\r\nazure-mgmt-iothub==0.10.0\r\nazure-mgmt-keyvault==1.1.0\r\nazure-mgmt-logic==3.0.0\r\nazure-mgmt-managementgroups==0.2.0\r\nazure-mgmt-monitor==0.7.0\r\nazure-mgmt-network==9.0.0\r\nazure-mgmt-nspkg==3.0.2\r\nazure-mgmt-policyinsights==0.4.0\r\nazure-mgmt-rdbms==1.9.0\r\nazure-mgmt-redis==6.0.0\r\nazure-mgmt-resource==6.0.0\r\nazure-mgmt-resourcegraph==2.0.0\r\nazure-mgmt-search==2.1.0\r\nazure-mgmt-sql==0.16.0\r\nazure-mgmt-storage==7.2.0\r\nazure-mgmt-subscription==0.5.0\r\nazure-mgmt-web==0.44.0\r\nazure-nspkg==3.0.2\r\nazure-storage-blob==2.1.0\r\nazure-storage-common==2.1.0\r\nazure-storage-file==2.1.0\r\nazure-storage-queue==2.1.0\r\nbcrypt==3.1.7\r\nboto3==1.14.27\r\nbotocore==1.17.27\r\nc7n==0.9.4\r\ncertifi==2020.6.20\r\ncffi==1.14.0\r\nchardet==3.0.4\r\nclick==7.1.2\r\ncolorama==0.4.3\r\ncryptography==3.0\r\ndistlib==0.3.1\r\ndocutils==0.15.2\r\nhumanfriendly==8.2\r\nidna==2.10\r\nimportlib-metadata==1.7.0\r\nisodate==0.6.0\r\njmespath==0.10.0\r\njsonpickle==1.4.1\r\njsonschema==3.2.0\r\nknack==0.7.1\r\nmsal==1.0.0\r\nmsal-extensions==0.1.3\r\nmsrest==0.6.17\r\nmsrestazure==0.6.4\r\nnetaddr==0.7.20\r\noauthlib==3.1.0\r\nparamiko==2.7.1\r\npkginfo==1.5.0.1\r\nportalocker==1.7.1\r\npycparser==2.20\r\npygments==2.6.1\r\npynacl==1.4.0\r\npyopenssl==19.1.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npytz==2020.1\r\npyyaml==5.3.1\r\nrequests==2.24.0\r\nrequests-oauthlib==1.3.0\r\ns3transfer==0.3.3\r\nsetuptools==47.1.0\r\nsix==1.15.0\r\ntabulate==0.8.7\r\ntzlocal==2.1\r\nurllib3==1.25.10\r\nzipp==3.1.0\r\n```\r\n\r\n**Additional context**\r\nWhen I run `custodian validate` I get an error message, but it says the configuration is valid:\r\n```\r\n2020-07-27 07:48:51,231: custodian.azure.policy.AzureFunctionMode:ERROR policy:tag-key-vault-creator function policies should use UserAssigned Identities see https://cloudcustodian.io/docs/azure/configuration/functionshosting.html#authentication-options\r\n2020-07-27 07:48:51,232: custodian.commands:INFO Configuration valid: my-policy.yml\r\n```\r\n\r\nNot sure if this intended to be a blocking error (which would sort of match with the actual error I'm experiencing)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5976", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5976/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5976/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5976/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5976", "id": 663893221, "node_id": "MDU6SXNzdWU2NjM4OTMyMjE=", "number": 5976, "title": "AWS config source pass supplementaryConfiguration data with resource ", "user": {"login": "anovis", "id": 3811703, "node_id": "MDQ6VXNlcjM4MTE3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3811703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anovis", "html_url": "https://github.com/anovis", "followers_url": "https://api.github.com/users/anovis/followers", "following_url": "https://api.github.com/users/anovis/following{/other_user}", "gists_url": "https://api.github.com/users/anovis/gists{/gist_id}", "starred_url": "https://api.github.com/users/anovis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anovis/subscriptions", "organizations_url": "https://api.github.com/users/anovis/orgs", "repos_url": "https://api.github.com/users/anovis/repos", "events_url": "https://api.github.com/users/anovis/events{/privacy}", "received_events_url": "https://api.github.com/users/anovis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-22T16:28:49Z", "updated_at": "2020-07-24T23:40:06Z", "closed_at": "2020-07-24T23:40:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nAny reason why we do not return `supplementaryConfiguration` along with `configuration` . This would be helpful since this seems to contain tag information on resources which would be useful for further value filters.\r\n\r\nhttps://github.com/cloud-custodian/cloud-custodian/blob/master/c7n/query.py#L350\r\n\r\n**Describe the solution you'd like**\r\nWe can either add it to the resource data by default , or can create an option on the `config` source that will then add it.\r\n\r\nfor example:\r\n\r\n```\r\npolicies: \r\n  - name: sns-test\r\n    resource: aws.sns\r\n    source: config\r\n    supplimentary-config: true\r\n    query:  \r\n      - clause:  \"tags.key = 'tag-check'\"\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5975", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5975/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5975/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5975/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5975", "id": 663293184, "node_id": "MDU6SXNzdWU2NjMyOTMxODQ=", "number": 5975, "title": "[aws.ebs.action.copy-related-tag] Copy all tags from ec2 fails because 'aws:' are reserved for internal use", "user": {"login": "gshel", "id": 35184207, "node_id": "MDQ6VXNlcjM1MTg0MjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/35184207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gshel", "html_url": "https://github.com/gshel", "followers_url": "https://api.github.com/users/gshel/followers", "following_url": "https://api.github.com/users/gshel/following{/other_user}", "gists_url": "https://api.github.com/users/gshel/gists{/gist_id}", "starred_url": "https://api.github.com/users/gshel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gshel/subscriptions", "organizations_url": "https://api.github.com/users/gshel/orgs", "repos_url": "https://api.github.com/users/gshel/repos", "events_url": "https://api.github.com/users/gshel/events{/privacy}", "received_events_url": "https://api.github.com/users/gshel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T20:38:07Z", "updated_at": "2020-07-23T20:27:02Z", "closed_at": "2020-07-23T20:27:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n`aws.ebs.action.copy-related-tag` throws `botocore.exceptions.ClientError`, `InvalidParameterValue` when attempting to copy _all_ tags from the related instance to the ebs volume. \r\n\r\nSee https://github.com/cloud-custodian/cloud-custodian/blob/63121e9273ceb5fbe04338520835c2964a6cef24/c7n/tags.py#L1062\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior: \r\n\r\n1. Copy/paste the policy from below\r\n2. Run: `custodian run --verbose --region us-east-1 -p aws-copy-tags-from-instance-to-ebs-volume -s . [policy-from-below].yml`\r\n3. See the error: `botocore.exceptions.ClientError: An error occurred (InvalidParameterValue) when calling the CreateTags operation: Value ( aws:autoscaling:groupName ) for parameter key is invalid. Tag keys starting with 'aws:' are reserved for internal use`\r\n\r\n**Expected behavior**\r\nAll extant tags from the instance beginning with `aws:` should cause the [for loop](https://github.com/cloud-custodian/cloud-custodian/blob/1f618b3f530be64cfda02ae1f8143e02d46262ed/c7n/resources/ebs.py#L887) to continue (skip the tag and go to the next one).\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: Ubuntu 18.04.4 LTS\r\n - Python Version: Python 3.8.3\r\n - Custodian Version: 0.9.4\r\n - Cloud Provider: aws\r\n - Policy:\r\n```yaml\r\npolicies: \r\n  - name: aws-copy-tags-from-instance-to-ebs-volume\r\n    description: Copy tags from an instance to its associated ebs volume(s).\r\n    resource: aws.ebs\r\n    filters:\r\n        - type: value\r\n          key: Attachments[0].Device\r\n          value: not-null\r\n    actions:\r\n        - type: copy-related-tag\r\n          resource: ec2\r\n          skip_missing: True\r\n          key: Attachments[].InstanceId | [0]\r\n          tags: '*'\r\n```\r\n - Traceback: https://gist.github.com/gshel/a06f0202f4e87e9a5b3e6951f9f6dc8a\r\n - `custodian version --debug` output:\r\n```\r\nPlease copy/paste the following info along with any bug reports:\r\n\r\nCustodian:   0.9.4\r\nPython:      3.8.3 (default, May 14 2020, 20:11:43) \r\n             [GCC 7.5.0]\r\nPlatform:    posix.uname_result(sysname='Linux', nodename='123456.corp.myjob.com', release='4.15.0-111-generic', version='#112-Ubuntu SMP Thu Jul 9 20:32:34 UTC 2020', machine='x86_64')\r\nUsing venv:  False\r\nDocker: False\r\nInstalled: \r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.13.24\r\nbotocore==1.16.24\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.1\r\njmespath==0.10.0\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==39.0.1\r\nsix==1.15.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n\r\n**Additional context**\r\nBrought up in gitter.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5973", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5973/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5973/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5973/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5973", "id": 662344899, "node_id": "MDU6SXNzdWU2NjIzNDQ4OTk=", "number": 5973, "title": "unexpected keyword argument 'function_app_resource_group_name'", "user": {"login": "spoloj", "id": 44011132, "node_id": "MDQ6VXNlcjQ0MDExMTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/44011132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spoloj", "html_url": "https://github.com/spoloj", "followers_url": "https://api.github.com/users/spoloj/followers", "following_url": "https://api.github.com/users/spoloj/following{/other_user}", "gists_url": "https://api.github.com/users/spoloj/gists{/gist_id}", "starred_url": "https://api.github.com/users/spoloj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spoloj/subscriptions", "organizations_url": "https://api.github.com/users/spoloj/orgs", "repos_url": "https://api.github.com/users/spoloj/repos", "events_url": "https://api.github.com/users/spoloj/events{/privacy}", "received_events_url": "https://api.github.com/users/spoloj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2226135508, "node_id": "MDU6TGFiZWwyMjI2MTM1NTA4", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/azure", "name": "azure", "color": "887fdb", "default": false, "description": ""}, {"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T22:49:19Z", "updated_at": "2020-08-11T19:54:44Z", "closed_at": "2020-08-11T19:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nc7n-mailer for Azure is reporting 'function_app_resource_group_name' error \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nc7n-mailer --config mailer.yaml --update-lambda\r\n\r\n**Expected behavior**\r\nmailer functions should be created\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: Mac OS 10.14.6\r\n - Python Version: Python 3.7.3\r\n - Custodian Version: 0.9.4\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: Azure\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\n- name: storage-container-public\r\n    description: |\r\n        Find all containers with public access enabled\r\n    resource: azure.storage-container\r\n    mode:\r\n      type: azure-periodic\r\n      schedule: '0 5 * * * *'\r\n      provision-options:\r\n        identity:\r\n          type: SystemAssigned\r\n    filters:\r\n      - type: value\r\n        key: properties.publicAccess\r\n        op: not-equal\r\n        value: None \r\n    actions:\r\n      - type: notify\r\n        to:\r\n          - slack://#custodian\r\n        slack_template: slack_default\r\n        transport:\r\n          type: asq\r\n          queue: https://<removed>/c7-mailer\r\n```\r\nMailer.yaml\r\n```yaml\r\nqueue_url: asq://<>/c7-mailer\r\nslack_token: <>\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n\r\nTraceback (most recent call last): File \"/Users/xxxx/myfolder/custodian/bin/c7n-mailer\", line 10, in <module> sys.exit(main()) File \"/Users/xxxx/myfolder/custodian/lib/python3.7/site-packages/c7n_mailer/cli.py\", line 235, in main azure_deploy.provision(mailer_config) File \"/Users/xxxx/myfolder/custodian/lib/python3.7/site-packages/c7n_mailer/azure_mailer/deploy.py\", line 137, in provision function_app_name=function_app_name) TypeError: __init__() got an unexpected keyword argument 'function_app_resource_group_name'\r\n\r\n\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5972", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5972/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5972/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5972/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5972", "id": 662248140, "node_id": "MDU6SXNzdWU2NjIyNDgxNDA=", "number": 5972, "title": "aws.Iam-Role does not have mark-for-op ", "user": {"login": "manitmalik", "id": 36078690, "node_id": "MDQ6VXNlcjM2MDc4Njkw", "avatar_url": "https://avatars1.githubusercontent.com/u/36078690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manitmalik", "html_url": "https://github.com/manitmalik", "followers_url": "https://api.github.com/users/manitmalik/followers", "following_url": "https://api.github.com/users/manitmalik/following{/other_user}", "gists_url": "https://api.github.com/users/manitmalik/gists{/gist_id}", "starred_url": "https://api.github.com/users/manitmalik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manitmalik/subscriptions", "organizations_url": "https://api.github.com/users/manitmalik/orgs", "repos_url": "https://api.github.com/users/manitmalik/repos", "events_url": "https://api.github.com/users/manitmalik/events{/privacy}", "received_events_url": "https://api.github.com/users/manitmalik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-20T20:47:55Z", "updated_at": "2020-07-23T12:33:05Z", "closed_at": "2020-07-23T12:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nFunctionality for performing mark-for-op is not present for iam-role. \r\nKindly see if this can be added. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5968", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5968/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5968/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5968/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5968", "id": 660154865, "node_id": "MDU6SXNzdWU2NjAxNTQ4NjU=", "number": 5968, "title": "Option to add extra policy metadata", "user": {"login": "JohnHillegass", "id": 13325146, "node_id": "MDQ6VXNlcjEzMzI1MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/13325146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnHillegass", "html_url": "https://github.com/JohnHillegass", "followers_url": "https://api.github.com/users/JohnHillegass/followers", "following_url": "https://api.github.com/users/JohnHillegass/following{/other_user}", "gists_url": "https://api.github.com/users/JohnHillegass/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnHillegass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnHillegass/subscriptions", "organizations_url": "https://api.github.com/users/JohnHillegass/orgs", "repos_url": "https://api.github.com/users/JohnHillegass/repos", "events_url": "https://api.github.com/users/JohnHillegass/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnHillegass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1192061146, "node_id": "MDU6TGFiZWwxMTkyMDYxMTQ2", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/area/proposal", "name": "area/proposal", "color": "d93f0b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-18T13:35:10Z", "updated_at": "2020-07-21T13:58:07Z", "closed_at": "2020-07-21T13:58:07Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nIt is sometimes hard to pin down who created a policy document using version control when it has been edited many times. It is also hard to track the creation date, document versioning, linkage to approval documents, etc. \r\n\r\n**Describe the solution you'd like**\r\nI'd like to add a key to the schema called `metadata` where we could store some of that information\r\n\r\n**Describe alternatives you've considered**\r\nI tried using tags but since they are an array of strings, it does not easily allow for more complex mapping or inclusion of numbers without parsing. I think having a policy tag dedicated to this would be a nice feature to have. \r\n\r\n```\r\npolicies:\r\n  - name: app-test\r\n     resource: app-elb\r\n     metadata:\r\n       version: 1.0\r\n       policyAuthor: Some One\r\n       createdDate: 07/09/20 11:31\r\n       lastModified: 07/18/20 09:21\r\n       designedBy: Other One\r\n       designLink: www.not_a_real_link.com\r\n       designReviewedBy: The One\r\n    tags: \r\n      - 'risk:medium'\r\n      - 'designID:0001-D'\r\n```\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5967", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5967/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5967/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5967/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5967", "id": 659577071, "node_id": "MDU6SXNzdWU2NTk1NzcwNzE=", "number": 5967, "title": "Cannot filter Azure object storage by UsedCapacity metric", "user": {"login": "diegolima", "id": 1257030, "node_id": "MDQ6VXNlcjEyNTcwMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1257030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diegolima", "html_url": "https://github.com/diegolima", "followers_url": "https://api.github.com/users/diegolima/followers", "following_url": "https://api.github.com/users/diegolima/following{/other_user}", "gists_url": "https://api.github.com/users/diegolima/gists{/gist_id}", "starred_url": "https://api.github.com/users/diegolima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diegolima/subscriptions", "organizations_url": "https://api.github.com/users/diegolima/orgs", "repos_url": "https://api.github.com/users/diegolima/repos", "events_url": "https://api.github.com/users/diegolima/events{/privacy}", "received_events_url": "https://api.github.com/users/diegolima/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T19:47:43Z", "updated_at": "2020-07-17T20:38:01Z", "closed_at": "2020-07-17T20:38:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen filtering `azure.storage` resources by the `UsedCapacity` metric the following API error is received:\r\n```\r\nazure.mgmt.monitor.v2018_01_01.models._models_py3.ErrorResponseException: Commonly allowed time grains: 01:00:00 between metrics: UsedCapacity, can not support requsted time grain: 1.00:00:00\r\n```\r\n\r\n**To Reproduce**\r\nCreate a policy with the following contents:\r\n```\r\n- name: az-objectstorage\r\n    resource: azure.storage\r\n    filters:\r\n      - type: metric\r\n        metric: UsedCapacity\r\n        aggregation: average\r\n        op: gte\r\n        threshold: 0\r\n```\r\n\r\n**Expected behavior**\r\nResources should be returned based on the metric filter\r\n\r\n**Background (please complete the following information):**\r\n - OS: Ubuntu 18.04\r\n - Python Version: 3.8.2\r\n - Custodian Version: 0.9.2\r\n - Cloud Provider: azure\r\n - Policy: see above\r\n - Traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/src/tools/c7n_azure/c7n_azure/filters.py\", line 192, in get_metric_data\r\n    metrics_data = self.client.metrics.list(\r\n  File \"/usr/local/lib/python3.8/site-packages/azure/mgmt/monitor/v2018_01_01/operations/_metrics_operations.py\", line 141, in list\r\n    raise models.ErrorResponseException(self._deserialize, response)\r\nazure.mgmt.monitor.v2018_01_01.models._models_py3.ErrorResponseException: Commonly allowed time grains: 01:00:00 between metrics: UsedCapacity, can not support requsted time grain: 1.00:00:00, TraceId: {1fdd9285-8034-400d-9294-b152c74a302d}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5959", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5959/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5959/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5959/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5959", "id": 657378795, "node_id": "MDU6SXNzdWU2NTczNzg3OTU=", "number": 5959, "title": "MugC - CreateDBInstance, CreateDBCluster is not valid under any of the given schemas", "user": {"login": "mharini", "id": 26401728, "node_id": "MDQ6VXNlcjI2NDAxNzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/26401728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mharini", "html_url": "https://github.com/mharini", "followers_url": "https://api.github.com/users/mharini/followers", "following_url": "https://api.github.com/users/mharini/following{/other_user}", "gists_url": "https://api.github.com/users/mharini/gists{/gist_id}", "starred_url": "https://api.github.com/users/mharini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mharini/subscriptions", "organizations_url": "https://api.github.com/users/mharini/orgs", "repos_url": "https://api.github.com/users/mharini/repos", "events_url": "https://api.github.com/users/mharini/events{/privacy}", "received_events_url": "https://api.github.com/users/mharini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T14:06:44Z", "updated_at": "2020-08-05T00:04:52Z", "closed_at": "2020-08-05T00:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nMugC run command gives CreateDBInstance, CreateDBCluster is not valid under any of the given schemas\r\n\r\n**To Reproduce**\r\n`    mode:\r\n      type: cloudtrail\r\n      events:\r\n      - source: rds.amazonaws.com\r\n        event: \r\n        - CreateDBInstance`\r\n\r\n**Expected behavior**\r\nCreateDBInstance and CreateDBCluster need to be recognized by mugc.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - Policy:\r\n```yaml\r\npolicies: \r\n   - name: rds-policy\r\n      resource: aws.rds\r\n      mode:\r\n      type: cloudtrail\r\n      events:\r\n      - source: rds.amazonaws.com\r\n        event: \r\n        - CreateDBInstance\r\n```\r\n - `custodian version --debug`\r\n`Custodian:   0.8.45.2\r\nPython:      3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 16:52:21) \r\n             [Clang 6.0 (clang-600.0.57)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='harinis-mbp', release='18.7.0', version='Darwin Kernel Version 18.7.0: Tue Aug 20 16:57:14 PDT 2019; root:xnu-4903.271.2~2/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  False\r\nDocker: False\r\nPYTHONPATH: \r\n[            '/Library/Frameworks/Python.framework/Versions/3.7/bin',\r\n             '/Library/Frameworks/Python.framework/Versions/3.7/lib/python37.zip',\r\n             '/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7',\r\n             '/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload',\r\n             '/Users/harinim/Library/Python/3.7/lib/python/site-packages',\r\n             '/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages']`\r\n\r\n**Additional context**\r\nThe same happens with CreateDBCluster event.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5954", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5954/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5954/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5954/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5954", "id": 656530708, "node_id": "MDU6SXNzdWU2NTY1MzA3MDg=", "number": 5954, "title": "Azure China cannot be used normally at all. ", "user": {"login": "maguohao2018", "id": 43598049, "node_id": "MDQ6VXNlcjQzNTk4MDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/43598049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maguohao2018", "html_url": "https://github.com/maguohao2018", "followers_url": "https://api.github.com/users/maguohao2018/followers", "following_url": "https://api.github.com/users/maguohao2018/following{/other_user}", "gists_url": "https://api.github.com/users/maguohao2018/gists{/gist_id}", "starred_url": "https://api.github.com/users/maguohao2018/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maguohao2018/subscriptions", "organizations_url": "https://api.github.com/users/maguohao2018/orgs", "repos_url": "https://api.github.com/users/maguohao2018/repos", "events_url": "https://api.github.com/users/maguohao2018/events{/privacy}", "received_events_url": "https://api.github.com/users/maguohao2018/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 876678619, "node_id": "MDU6TGFiZWw4NzY2Nzg2MTk=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/cloud/azure", "name": "cloud/azure", "color": "bfd4f2", "default": false, "description": ""}, {"id": 334062491, "node_id": "MDU6TGFiZWwzMzQwNjI0OTE=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/duplicate", "name": "kind/duplicate", "color": "0052cc", "default": false, "description": null}, {"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T11:11:11Z", "updated_at": "2020-07-14T12:26:49Z", "closed_at": "2020-07-14T12:26:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAzure China cannot be used normally at all. The initial account authentication failed. Please fix it as soon as possible, the Chinese market is waiting for you.\r\n\r\n**Expected behavior**\r\ncustodian run --output-dir=. policy.yml\r\n2020-07-14 19:10:24,810: cli.azure.cli.core._session:INFO Failed to load or parse file /root/.azure/azureProfile.json. It will be overridden by default settings.\r\n2020-07-14 19:10:24,814: cli.azure.cli.core._session:INFO Failed to load or parse file /root/.azure/az.json. It will be overridden by default settings.\r\n2020-07-14 19:10:24,814: cli.azure.cli.core._session:INFO Failed to load or parse file /root/.azure/az.sess. It will be overridden by default settings.\r\n2020-07-14 19:10:24,817: custodian.azure.session:ERROR Failed to authenticate with CLI credentials. Please run 'az login' to setup account.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. MacOS 10.15.2 && Linux CentOS 7.7]\r\n - Python Version: [e.g. python 3.7]\r\n - Custodian Version: [e.g. 0.9.4]\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: [e.g. azure]\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\npolicies: \r\n   - name: vm\r\n      resource: azure.vm\r\n```\r\n\r\n**Additional context**\r\nAzure China is completely unavailable, and the most basic azure account authentication is wrong.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5952", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5952/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5952/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5952/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5952", "id": 656172690, "node_id": "MDU6SXNzdWU2NTYxNzI2OTA=", "number": 5952, "title": "Support minutes in mark-for-op actions", "user": {"login": "t0rr3sp3dr0", "id": 7753096, "node_id": "MDQ6VXNlcjc3NTMwOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7753096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t0rr3sp3dr0", "html_url": "https://github.com/t0rr3sp3dr0", "followers_url": "https://api.github.com/users/t0rr3sp3dr0/followers", "following_url": "https://api.github.com/users/t0rr3sp3dr0/following{/other_user}", "gists_url": "https://api.github.com/users/t0rr3sp3dr0/gists{/gist_id}", "starred_url": "https://api.github.com/users/t0rr3sp3dr0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t0rr3sp3dr0/subscriptions", "organizations_url": "https://api.github.com/users/t0rr3sp3dr0/orgs", "repos_url": "https://api.github.com/users/t0rr3sp3dr0/repos", "events_url": "https://api.github.com/users/t0rr3sp3dr0/events{/privacy}", "received_events_url": "https://api.github.com/users/t0rr3sp3dr0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-13T21:59:12Z", "updated_at": "2020-07-29T15:54:33Z", "closed_at": "2020-07-29T15:54:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n`mark-for-op` just supports days and hours. These units are too big for some use cases.\r\n\r\n**Describe the solution you'd like**\r\n`mark-for-op` should also support minutes and maybe the other units supported by datetime.timedelta: seconds, microseconds, milliseconds, and weeks.\r\nhttps://docs.python.org/3/library/datetime.html#datetime.timedelta\r\n\r\n**Describe alternatives you've considered**\r\n`mark-for-op` could also accept a float as hours, but this would be more complicated to implement and less reliable.\r\n\r\n**Additional context**\r\n```yaml\r\npolicies:\r\n- name: ec2-mark-stop\r\n  resource: ec2\r\n  filters:\r\n    - type: image-age\r\n      op: ge\r\n      minutes: 90\r\n  actions:\r\n    - type: mark-for-op\r\n      tag: custodian_cleanup\r\n      op: terminate\r\n      minutes: 4\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5948", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5948/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5948/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5948/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5948", "id": 655935761, "node_id": "MDU6SXNzdWU2NTU5MzU3NjE=", "number": 5948, "title": "aws.emr new filter check-public-block just like s3.filters.check-public-block", "user": {"login": "FireballDWF", "id": 19273, "node_id": "MDQ6VXNlcjE5Mjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/19273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FireballDWF", "html_url": "https://github.com/FireballDWF", "followers_url": "https://api.github.com/users/FireballDWF/followers", "following_url": "https://api.github.com/users/FireballDWF/following{/other_user}", "gists_url": "https://api.github.com/users/FireballDWF/gists{/gist_id}", "starred_url": "https://api.github.com/users/FireballDWF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FireballDWF/subscriptions", "organizations_url": "https://api.github.com/users/FireballDWF/orgs", "repos_url": "https://api.github.com/users/FireballDWF/repos", "events_url": "https://api.github.com/users/FireballDWF/events{/privacy}", "received_events_url": "https://api.github.com/users/FireballDWF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T15:19:38Z", "updated_at": "2020-07-13T15:46:24Z", "closed_at": "2020-07-13T15:46:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Add a check-public-block filter to emr resource which operates just like the one for s3, but who's datasource is https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/emr.html#EMR.Client.get_block_public_access_configuration\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5943", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5943/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5943/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5943/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5943", "id": 655226854, "node_id": "MDU6SXNzdWU2NTUyMjY4NTQ=", "number": 5943, "title": "gcp - Getting Started Documentation out of date", "user": {"login": "marcoceppi", "id": 70613, "node_id": "MDQ6VXNlcjcwNjEz", "avatar_url": "https://avatars0.githubusercontent.com/u/70613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcoceppi", "html_url": "https://github.com/marcoceppi", "followers_url": "https://api.github.com/users/marcoceppi/followers", "following_url": "https://api.github.com/users/marcoceppi/following{/other_user}", "gists_url": "https://api.github.com/users/marcoceppi/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcoceppi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcoceppi/subscriptions", "organizations_url": "https://api.github.com/users/marcoceppi/orgs", "repos_url": "https://api.github.com/users/marcoceppi/repos", "events_url": "https://api.github.com/users/marcoceppi/events{/privacy}", "received_events_url": "https://api.github.com/users/marcoceppi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-11T15:19:45Z", "updated_at": "2020-07-14T23:53:35Z", "closed_at": "2020-07-14T23:53:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n* `gcloud auth` command line syntax has since changed - login name is no longer supported\r\n* Google Cloud Project is never explicitly (or implicitly) set - documenting this in the workflow will reduce friction\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Follow https://cloudcustodian.io/docs/gcp/gettingstarted.html\r\n2. At `gcloud` command step, observe the following message:\r\n   ```\r\n   $ gcloud auth application-default login <...>@gmail.com\r\n   ERROR: (gcloud.auth.application-default.login) unrecognized arguments: <...>@gmail.com \r\n\r\n   To search the help text of gcloud commands, run:\r\n     gcloud help -- SEARCH_TERMS\r\n   ```\r\n3. After creating example policy and executing `custodian run --output-dir=. custodian.yaml `\r\n   ```\r\n   2020-07-11 10:12:53,849: google.auth._default:WARNING No project ID could be determined. Consider running `gcloud config set project` or setting the GOOGLE_CLOUD_PROJECT environment variable\r\n   2020-07-11 10:12:54,526: custodian.output:ERROR Error while executing policy\r\n   Traceback (most recent call last):\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n/policy.py\", line 291, in run\r\n       resources = self.policy.resource_manager.resources()\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 203, in resources\r\n       resources = self._fetch_resources(q)\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 223, in _fetch_resources\r\n       return self.augment(self.source.get_resources(query)) or []\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 86, in get_resources\r\n       return self.query.filter(self.manager, **query)\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 45, in filter\r\n       project = session.get_default_project()\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/client.py\", line 195, in get_default_project\r\n       raise ValueError(\"No GCP Project ID set - set CLOUDSDK_CORE_PROJECT\")\r\n   ValueError: No GCP Project ID set - set CLOUDSDK_CORE_PROJECT\r\n   2020-07-11 10:12:54,527: custodian.commands:ERROR Error while executing policy my-first-policy, continuing\r\n   Traceback (most recent call last):\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n/commands.py\", line 282, in run\r\n       policy()\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n/policy.py\", line 1176, in __call__\r\n       resources = mode.run()\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n/policy.py\", line 291, in run\r\n       resources = self.policy.resource_manager.resources()\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 203, in resources\r\n       resources = self._fetch_resources(q)\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 223, in _fetch_resources\r\n       return self.augment(self.source.get_resources(query)) or []\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 86, in get_resources\r\n       return self.query.filter(self.manager, **query)\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/query.py\", line 45, in filter\r\n       project = session.get_default_project()\r\n     File \"/home/marco/Projects/silph.co/silph-infra/c7n/.venv/lib/python3.8/site-packages/c7n_gcp/client.py\", line 195, in get_default_project\r\n       raise ValueError(\"No GCP Project ID set - set CLOUDSDK_CORE_PROJECT\")\r\n   ValueError: No GCP Project ID set - set CLOUDSDK_CORE_PROJECT\r\n   2020-07-11 10:12:54,528: custodian.commands:ERROR The following policies had errors while executing\r\n    - my-first-policy\r\n   ```\r\n   Suspiciously, running `gcloud config set project <...>` does not resolve the error despite what the output would suggest. Instead I had to set an environment variable of `GOOGLE_CLOUD_PROJECT=<...>`\r\n\r\n**Expected behavior**\r\nMy expectations is - as best as possible - a papercut free getting started experience. Where by the end of the guide the examples executed completed without having to leave the getting started guide.\r\n\r\n**Background (please complete the following information):**\r\n - OS: Ubuntu 20.04 LTS 5.4.0-33-generic #37-Ubuntu\r\n - Python Version: 3.8.2\r\n - Custodian Version: 0.9.4\r\n - Cloud Provider: gcp\r\n - Policy:\r\n   ```yaml\r\n   policies:\r\n   - name: my-first-policy\r\n     description: |\r\n       Stops all compute instances that are named \"test\"\r\n     resource: gcp.instance\r\n     filters:\r\n     - type: value\r\n       key: name\r\n       value: juju-278695-11\r\n     actions:\r\n     - type: stop\r\n   ```\r\n - `custodian version --debug` output\r\n   ```\r\n   Custodian:   0.9.4\r\n   Python:      3.8.2 (default, Apr 27 2020, 15:53:34) \r\n                [GCC 9.3.0]\r\n   Platform:    posix.uname_result(sysname='Linux', nodename='T480', release='5.4.0-33-generic', version='#37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020', machine='x86_64')\r\n   Using venv:  True\r\n   Docker: False\r\n   Installed: \r\n\r\n   argcomplete==1.11.1\r\n   attrs==19.3.0\r\n   boto3==1.14.20\r\n   botocore==1.17.20\r\n   c7n==0.9.4\r\n   cachetools==4.1.1\r\n   contextlib2==0.6.0\r\n   docutils==0.15.2\r\n   google-api-core==1.21.0\r\n   google-api-python-client==1.9.3\r\n   google-auth==1.18.0\r\n   google-auth-httplib2==0.0.4\r\n   google-cloud-core==1.3.0\r\n   google-cloud-logging==1.15.0\r\n   google-cloud-monitoring==0.34.0\r\n   google-cloud-storage==1.29.0\r\n   google-resumable-media==0.5.1\r\n   googleapis-common-protos==1.52.0\r\n   httplib2==0.18.1\r\n   importlib-metadata==1.7.0\r\n   jmespath==0.10.0\r\n   jsonschema==3.2.0\r\n   protobuf==3.12.2\r\n   pyasn1==0.4.8\r\n   pyasn1-modules==0.2.8\r\n   pyrsistent==0.16.0\r\n   python-dateutil==2.8.1\r\n   pytz==2020.1\r\n   pyyaml==5.3.1\r\n   ratelimiter==1.2.0.post0\r\n   requests==2.22.0\r\n   retrying==1.3.3\r\n   rsa==4.6\r\n   s3transfer==0.3.3\r\n   setuptools==44.0.0\r\n   six==1.15.0\r\n   tabulate==0.8.7\r\n   uritemplate==3.0.1\r\n   urllib3==1.25.9\r\n   zipp==3.1.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5941", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5941/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5941/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5941/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5941", "id": 655003096, "node_id": "MDU6SXNzdWU2NTUwMDMwOTY=", "number": 5941, "title": "App-ELB Conditions Error - PolicyConditions object has no attribute config", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-10T19:54:33Z", "updated_at": "2020-07-15T23:57:40Z", "closed_at": "2020-07-15T23:57:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running a app-elb policy which has a conditions statement to see if the account_id is present in a S3 csv file we are getting the error \"PolicyConditions object has no attribute config\"\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior: Running policy produces error\r\n\r\n**Expected behavior**\r\nOn previous 0.9.1 this policy seemed to work fine.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15] Ubuntu v20\r\n - Python Version: [e.g. python 3.8.1] 3.8.2\r\n - Custodian Version: [e.g. 0.8.46.1] 0.9.4.0  c7n-org 0.6.3\r\n - Tool Version: [if applicable] c7n-org 0.6.3\r\n - Cloud Provider: [e.g. gcp, aws, azure] aws\r\n - Policy: [please exclude any account/sensitive information]\r\n```\r\n\r\n- name: app-elb-tag-now-compliant-poll\r\n  resource: app-elb\r\n  description: |\r\n    Any Application ELBs which have previously been marked as non compliant with tag policies, that are now compliant\r\n    should be unmarked and the customer emailed.\r\n  conditions:\r\n    - type: value\r\n      key: account_id\r\n      op: not-in\r\n      value_from:\r\n         url: s3://mys3bucket/AccountExceptions.csv\r\n         format: csv2dict\r\n  filters:\r\n    - \"tag:c7n_tag_compliance_poll\": not-null\r\n    - \"tag:ResourceContact\": present\r\n    - type: value\r\n      key: \"tag:ResourceContact\"\r\n      op: not-in\r\n      value_from:\r\n         url: s3://mys3bucket/InvalidEmails.csv\r\n         format: csv2dict\r\n    - type: value\r\n      key: \"tag:ResourceContact\"\r\n      op: regex\r\n      value: (^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\r\n    - \"tag:BillingCostCenter\": present\r\n    - type: value\r\n      key: \"tag:BillingCostCenter\"\r\n      op: in\r\n      value_from:\r\n         url: s3://mys3bucket/ValidCostCenters.csv\r\n         format: csv2dict\r\n    - \"tag:Environment\": present\r\n    - type: value\r\n      key: \"tag:Environment\"\r\n      op: in\r\n      value:\r\n        - tst\r\n        - dev\r\n        - mdl\r\n        - acc\r\n        - prd\r\n        - eat\r\n    - \"tag:ResourcePurpose\": present\r\n    - type: value\r\n      key: \"tag:ResourcePurpose\"\r\n      op: regex\r\n      value: ^.{3,}$\r\n    - \"tag:Division\": present\r\n    - type: value\r\n      key: \"tag:Division\"\r\n      op: in\r\n      value_from:\r\n         url: s3://mys3bucket/ValidDivisions.csv\r\n         format: csv2dict\r\n    - type: value\r\n      value_type: date\r\n      key: CreatedTime\r\n      op: greater-than\r\n      value: \"2020/05/05\"\r\n  actions:\r\n    - type: remove-tag\r\n      tags: [\"c7n_tag_compliance_poll\"]\r\n    - type: notify\r\n      template: default.html\r\n      priority_header: 1\r\n      subject: \"Application ELB Tags - Application ELB is now compliant - [custodian {{ account }} - {{ region }}]\" \r\n      violation_desc: |\r\n          The Application ELB which was previously missing or had invalid required tags is now compliant and won't be deleted\r\n      action_desc: \"Actions Taken:  Notification Only. The Application ELB is now compliant with tags.\"\r\n      to:\r\n        - resource-owner\r\n      transport:\r\n        type: sqs\r\n        queue: https://sqs.us-east-1.amazonaws.com/123456789/cloud-custodian-mailer\r\n        region: us-east-1\r\n\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/cli.py\", line 362, in main\r\n    command(config)\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/commands.py\", line 136, in _load_policies\r\n    return f(options, list(policies))\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/commands.py\", line 282, in run\r\n    policy()\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/policy.py\", line 1171, in __call__\r\n    elif not self.is_runnable():\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/policy.py\", line 1011, in is_runnable\r\n    return self.conditions.evaluate(event)\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/policy.py\", line 945, in evaluate\r\n    state = all([f.process([policy_vars], event) for f in self.filters])\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/policy.py\", line 945, in <listcomp>\r\n    state = all([f.process([policy_vars], event) for f in self.filters])\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/filters/core.py\", line 530, in process\r\n    return super(ValueFilter, self).process(resources, event)\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/filters/core.py\", line 217, in process\r\n    return list(filter(self, resources))\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/filters/core.py\", line 517, in __call__\r\n    matched = self.match(i)\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/filters/core.py\", line 569, in match\r\n    values = ValuesFrom(self.data['value_from'], self.manager)\r\n  File \"/root/c7n/lib/python3.8/site-packages/c7n/resolver.py\", line 132, in __init__\r\n    'account_id': manager.config.account_id,\r\nAttributeError: 'PolicyConditions' object has no attribute 'config'\r\n> /root/c7n/lib/python3.8/site-packages/c7n/resolver.py(132)__init__()\r\n-> 'account_id': manager.config.account_id,\r\n(Pdb)\r\n\r\n```\r\n - `custodian version --debug` output \r\n\r\n```\r\nCustodian:   0.9.4\r\nPython:      3.8.2 (default, Apr 27 2020, 15:53:34)\r\n             [GCC 9.3.0]\r\nPlatform:    posix.uname_result(sysname='Linux', nodename='ip-10-128-128-28', release='5.4.0-1009-aws', version='#9-Ubuntu SMP Sun Apr 12 19:46:01 UTC 2020', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.14.20\r\nbotocore==1.17.20\r\ndocutils==0.15.2\r\nimportlib-metadata==1.7.0\r\njmespath==0.10.0\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==44.0.0\r\nsix==1.15.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5938", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5938/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5938/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5938/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5938", "id": 654001698, "node_id": "MDU6SXNzdWU2NTQwMDE2OTg=", "number": 5938, "title": "AWS-Metric filter on log-group is failing", "user": {"login": "babitha-mathew-rft", "id": 67315360, "node_id": "MDQ6VXNlcjY3MzE1MzYw", "avatar_url": "https://avatars3.githubusercontent.com/u/67315360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/babitha-mathew-rft", "html_url": "https://github.com/babitha-mathew-rft", "followers_url": "https://api.github.com/users/babitha-mathew-rft/followers", "following_url": "https://api.github.com/users/babitha-mathew-rft/following{/other_user}", "gists_url": "https://api.github.com/users/babitha-mathew-rft/gists{/gist_id}", "starred_url": "https://api.github.com/users/babitha-mathew-rft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/babitha-mathew-rft/subscriptions", "organizations_url": "https://api.github.com/users/babitha-mathew-rft/orgs", "repos_url": "https://api.github.com/users/babitha-mathew-rft/repos", "events_url": "https://api.github.com/users/babitha-mathew-rft/events{/privacy}", "received_events_url": "https://api.github.com/users/babitha-mathew-rft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-09T11:55:04Z", "updated_at": "2020-07-15T21:07:07Z", "closed_at": "2020-07-15T21:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I  am writing a policy to  with  metric  filter on log groups. The  policy is\r\n```\r\npolicies:   \r\n    - name: logs-incoming-bytes\r\n      resource: log-group\r\n      comment: |\r\n        Ingested logs size \r\n      filters:\r\n        - type: metrics\r\n          namespace: AWS/Logs\r\n          name: IncomingBytes          \r\n          value: 0         \r\n          statistics: Sum\r\n```\r\nThis is failing with below error,\r\n\r\n```\r\n2020-07-09 17:21:54,198: custodian.filters:WARNING CW Retrieval error: 'LogGroupName'\r\n2020-07-09 17:21:54,199: custodian.policy:INFO policy:logs-incoming-bytes resource:log-group region:us-east-1 count:0 time:4.81\r\n```\r\nPlease look into this.\r\n\r\nBackground (please complete the following information):**\r\n - OS: OSX 10.15.5\r\n - Python Version: python 3.7.7\r\n - Custodian Version: 0.8.44.2\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5936", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5936/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5936/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5936/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5936", "id": 653581616, "node_id": "MDU6SXNzdWU2NTM1ODE2MTY=", "number": 5936, "title": "Adding a `has-data` filter for S3 buckets", "user": {"login": "kylejohnson514", "id": 20666182, "node_id": "MDQ6VXNlcjIwNjY2MTgy", "avatar_url": "https://avatars0.githubusercontent.com/u/20666182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylejohnson514", "html_url": "https://github.com/kylejohnson514", "followers_url": "https://api.github.com/users/kylejohnson514/followers", "following_url": "https://api.github.com/users/kylejohnson514/following{/other_user}", "gists_url": "https://api.github.com/users/kylejohnson514/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylejohnson514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylejohnson514/subscriptions", "organizations_url": "https://api.github.com/users/kylejohnson514/orgs", "repos_url": "https://api.github.com/users/kylejohnson514/repos", "events_url": "https://api.github.com/users/kylejohnson514/events{/privacy}", "received_events_url": "https://api.github.com/users/kylejohnson514/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-08T20:39:04Z", "updated_at": "2020-07-13T18:53:47Z", "closed_at": "2020-07-13T18:53:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe would like to add functionality to filter S3 buckets based on if they are/are not empty\r\n\r\n**Describe the solution you'd like**\r\nThis should be a pretty straightforward filter - it could involve iterating through buckets, calling https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.list_objects_v2 to check if the bucket contains any files/directories or not, and returning the buckets that do/don't have data within them\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nI couldn't find an existing filter that supports this. If something _does_ exist to support this already, that'd be great! Otherwise, I can start to work on adding support for it.\r\n\r\nAny input/ideas/suggestions would be appreciated! Thanks \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5923", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5923/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5923/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5923/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5923", "id": 650270534, "node_id": "MDU6SXNzdWU2NTAyNzA1MzQ=", "number": 5923, "title": "aws - streaming-distribution filter and action for shield enablement", "user": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-03T00:37:19Z", "updated_at": "2020-07-06T12:03:46Z", "closed_at": "2020-07-06T12:03:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe would like to enable shield for aws.streaming-distribution\r\n\r\n**Describe the solution you'd like**\r\nExtend shield action/filter for the resource\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5922", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5922/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5922/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5922/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5922", "id": 650197082, "node_id": "MDU6SXNzdWU2NTAxOTcwODI=", "number": 5922, "title": "New Cloudtrail option - listening for starting instances", "user": {"login": "wildbinaryforest", "id": 20727751, "node_id": "MDQ6VXNlcjIwNzI3NzUx", "avatar_url": "https://avatars0.githubusercontent.com/u/20727751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wildbinaryforest", "html_url": "https://github.com/wildbinaryforest", "followers_url": "https://api.github.com/users/wildbinaryforest/followers", "following_url": "https://api.github.com/users/wildbinaryforest/following{/other_user}", "gists_url": "https://api.github.com/users/wildbinaryforest/gists{/gist_id}", "starred_url": "https://api.github.com/users/wildbinaryforest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wildbinaryforest/subscriptions", "organizations_url": "https://api.github.com/users/wildbinaryforest/orgs", "repos_url": "https://api.github.com/users/wildbinaryforest/repos", "events_url": "https://api.github.com/users/wildbinaryforest/events{/privacy}", "received_events_url": "https://api.github.com/users/wildbinaryforest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T20:51:05Z", "updated_at": "2020-07-06T12:59:45Z", "closed_at": "2020-07-06T12:59:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWas looking to add an action anytime an instance is restarted as that option didn't exist.\r\n\r\n**Describe the solution you'd like**\r\nAdd a cloudtrail option listening for API call events that are lsitening for \"StartInstances\"\r\n\r\n**Describe alternatives you've considered**\r\nCame up with a few round about ways of going around this but this seemed like the easiest solution.\r\n\r\n**Additional context**\r\nRan local tests and this worked when added to cwe.py under cloudtrail options.\r\n\r\n'StartInstances': {\r\n            'ids': 'responseElements.instancesSet.items[].instanceId',\r\n            'source': 'ec2.amazonaws.com'}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5921", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5921/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5921/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5921/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5921", "id": 650147386, "node_id": "MDU6SXNzdWU2NTAxNDczODY=", "number": 5921, "title": "Help regarding the working of Cloud Custodian", "user": {"login": "mpradeep23", "id": 35432026, "node_id": "MDQ6VXNlcjM1NDMyMDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/35432026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpradeep23", "html_url": "https://github.com/mpradeep23", "followers_url": "https://api.github.com/users/mpradeep23/followers", "following_url": "https://api.github.com/users/mpradeep23/following{/other_user}", "gists_url": "https://api.github.com/users/mpradeep23/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpradeep23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpradeep23/subscriptions", "organizations_url": "https://api.github.com/users/mpradeep23/orgs", "repos_url": "https://api.github.com/users/mpradeep23/repos", "events_url": "https://api.github.com/users/mpradeep23/events{/privacy}", "received_events_url": "https://api.github.com/users/mpradeep23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-02T19:07:53Z", "updated_at": "2020-07-07T01:20:05Z", "closed_at": "2020-07-07T00:15:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\nI need help regarding cloud custodian. I followed the documentation and set up custodian on my ec2 instance, and wrote an ec2 auto tag policy yaml file and did a custodian run. I would like to understand how is this policy implemented using custodian. The policy works fine and new ec2 instances are getting tagged with the creator name too. But I do not understand its internal working. I cannot see any lambda function created. Could someone help me understand the basic workflow? Here is the policy-\r\n\r\npolicies:\r\n  - name: ec2-auto-tag-ownercontact\r\n    resource: ec2\r\n    description: |\r\n      Triggered when a new EC2 Instance is launched. Checks to see if\r\n      it's missing the OwnerContact tag. If missing it gets created\r\n      with the value of the ID of whomever called the RunInstances API\r\n    mode:\r\n      type: cloudtrail\r\n      role: arn:aws:iam::xxxxxxxxxx:role/cpa-role-auto-build\r\n      events:\r\n        - RunInstances\r\n    filters:\r\n     - tag:creator: absent\r\n\r\n    actions:\r\n     - type: auto-tag-user\r\n       tag: creator\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5916", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5916/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5916/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5916/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5916", "id": 649265409, "node_id": "MDU6SXNzdWU2NDkyNjU0MDk=", "number": 5916, "title": "Elasticsearch policy sending DomainName as Dict, expect STR", "user": {"login": "theotherothermatt", "id": 20425777, "node_id": "MDQ6VXNlcjIwNDI1Nzc3", "avatar_url": "https://avatars1.githubusercontent.com/u/20425777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherothermatt", "html_url": "https://github.com/theotherothermatt", "followers_url": "https://api.github.com/users/theotherothermatt/followers", "following_url": "https://api.github.com/users/theotherothermatt/following{/other_user}", "gists_url": "https://api.github.com/users/theotherothermatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherothermatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherothermatt/subscriptions", "organizations_url": "https://api.github.com/users/theotherothermatt/orgs", "repos_url": "https://api.github.com/users/theotherothermatt/repos", "events_url": "https://api.github.com/users/theotherothermatt/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherothermatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-01T19:40:44Z", "updated_at": "2020-07-06T12:16:47Z", "closed_at": "2020-07-06T12:16:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nLambdas created using the Elasticsearch policy are passing the DomainName to the AWS API as a dictionary, and the API needs it to be a string. You can find a gist of the full error here:  https://gist.github.com/theotherothermatt/199f78ee33c0044dd2365583c9c3f604\r\n\r\nRolled back to version 0.9.1 and problem does not exist. There were commits to elasticsearch.py in both 0.9.2 and 0.9.3, so I think that the problem resides somewhere in those bug fixes.\r\n \r\n**To Reproduce**\r\nWith c7n==0.9.3, use policy:\r\n```yaml\r\n    mode:\r\n        type: cloudtrail\r\n        role: arn:aws:iam::<$account-id>:role/the-correct-role\r\n        events:\r\n         - source: es.amazonaws.com\r\n           event: CreateElasticsearchDomain\r\n           ids: \"requestParameters.domainName\"\r\n    filters:\r\n      - type: value\r\n        key: \"EncryptionAtRestOptions.Enabled\"\r\n        value: false\r\n    actions:\r\n        - type: delete\r\n```\r\nThen create an ES domain that is not encrypted at rest. Error will be in log stream.\r\n\r\nRoll back to c7n==0.9.1\r\nTry the above policy again (on a new lambda of course)\r\nDomain will be deleted with no error\r\n\r\n**Expected behavior**\r\nThe ES Domain will be deleted\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSx 10.15.5\r\n - Python Version: python 3.7.7\r\n - Custodian Version: 0.9.3\r\n - Cloud Provider: AWS\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\n    mode:\r\n        type: cloudtrail\r\n        role: arn:aws:iam::<$account-id>:role/the-correct-role\r\n        events:\r\n         - source: es.amazonaws.com\r\n           event: CreateElasticsearchDomain\r\n           ids: \"requestParameters.domainName\"\r\n    filters:\r\n      - type: value\r\n        key: \"EncryptionAtRestOptions.Enabled\"\r\n        value: false\r\n    actions:\r\n        - type: delete\r\n```\r\n - `custodian version --debug` output\r\nCustodian:   0.9.3\r\nPython:      3.7.7 (default, Mar 10 2020, 15:43:03)\r\n             [Clang 11.0.0 (clang-1100.0.33.17)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='', release='19.5.0', version='Darwin Kernel Version 19.5.0: Tue May 26 20:41:44 PDT 2020; root:xnu-6153.121.2~2/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  False\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.13.24\r\nbotocore==1.16.24\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.1\r\njmespath==0.10.0\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==46.0.0\r\nsix==1.15.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5913", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5913/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5913/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5913/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5913", "id": 649044298, "node_id": "MDU6SXNzdWU2NDkwNDQyOTg=", "number": 5913, "title": "Error while running the script to fetch which lambda function is configured within a vpc", "user": {"login": "arjungoel", "id": 25618368, "node_id": "MDQ6VXNlcjI1NjE4MzY4", "avatar_url": "https://avatars1.githubusercontent.com/u/25618368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arjungoel", "html_url": "https://github.com/arjungoel", "followers_url": "https://api.github.com/users/arjungoel/followers", "following_url": "https://api.github.com/users/arjungoel/following{/other_user}", "gists_url": "https://api.github.com/users/arjungoel/gists{/gist_id}", "starred_url": "https://api.github.com/users/arjungoel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arjungoel/subscriptions", "organizations_url": "https://api.github.com/users/arjungoel/orgs", "repos_url": "https://api.github.com/users/arjungoel/repos", "events_url": "https://api.github.com/users/arjungoel/events{/privacy}", "received_events_url": "https://api.github.com/users/arjungoel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062494, "node_id": "MDU6TGFiZWwzMzQwNjI0OTQ=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/invalid", "name": "kind/invalid", "color": "0052cc", "default": false, "description": null}, {"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-01T14:49:27Z", "updated_at": "2020-07-02T09:48:52Z", "closed_at": "2020-07-01T16:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "import boto3\r\nfrom botocore.exceptions import ClientError\r\n\r\naccount_number = input(\"Enter the account number:\")\r\nregions = ['ap-northeast-1', 'ap-southeast-1',\r\n           'ca-central-1', 'us-east-1', 'us-east-2']\r\n\r\n#lambda_in_vpc = []\r\nfor region_val in regions:\r\n    session = boto3.session.Session()\r\n    client = session.client(service_name='lambda', region_name=region_val)\r\n    response = client.list_functions()\r\n    #result = response.get('Functions')\r\n    # print(result)\r\n    for lambda_func in response['Functions']:\r\n        result = lambda_func.get('VpcConfig')\r\n        try:\r\n            func = client.get_function_configuration(\r\n                FunctionName=lambda_func['FunctionName'])\r\n        # print(config)\r\n            vpc = func['VpcConfig']['VpcId']\r\n            print(f\"Function:{lambda_func['FunctionName']} and vpc: {vpc}\")\r\n        except ClientError as e:\r\n            if e.response['Error']['Code'] == 'VpcConfigNotFoundError':\r\n                print(f\"function not in vpc:{lambda_func['FunctionName']}\")\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5911", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5911/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5911/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5911/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5911", "id": 648633938, "node_id": "MDU6SXNzdWU2NDg2MzM5Mzg=", "number": 5911, "title": "ECS Task Definititon Throttling Error", "user": {"login": "JohnHillegass", "id": 13325146, "node_id": "MDQ6VXNlcjEzMzI1MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/13325146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnHillegass", "html_url": "https://github.com/JohnHillegass", "followers_url": "https://api.github.com/users/JohnHillegass/followers", "following_url": "https://api.github.com/users/JohnHillegass/following{/other_user}", "gists_url": "https://api.github.com/users/JohnHillegass/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnHillegass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnHillegass/subscriptions", "organizations_url": "https://api.github.com/users/JohnHillegass/orgs", "repos_url": "https://api.github.com/users/JohnHillegass/repos", "events_url": "https://api.github.com/users/JohnHillegass/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnHillegass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-01T03:02:34Z", "updated_at": "2020-07-01T18:58:03Z", "closed_at": "2020-07-01T18:58:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen there is a large amount of ECS Task Definitions we are seeing Throttling Errors on the DescribeCalls\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - Python Version: py 3.7\r\n - Custodian Version: 9.2\r\n - Cloud Provider: AWS\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\npolicies: \r\n   - name: check-ecs-def\r\n      resource: aws.ecs-task-definition\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n\r\n```\r\n15:22:29\r\n2020-06-30 15:22:29,380: custodian.commands:ERROR Error while executing policy check-ecs-def, continuing\r\n\r\n15:22:29\r\nTraceback (most recent call last):\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/c7n/commands.py\", line 282, in run\r\n\r\n15:22:29\r\npolicy()\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/c7n/policy.py\", line 1176, in __call__\r\n\r\n15:22:29\r\nresources = mode.run()\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/c7n/policy.py\", line 291, in run\r\n\r\n15:22:29\r\nresources = self.policy.resource_manager.resources()\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/c7n/query.py\", line 502, in resources\r\n\r\n15:22:29\r\nresources = self.augment(resources)\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/c7n/resources/ecs.py\", line 489, in augment\r\n\r\n15:22:29\r\ninclude=['TAGS'])\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/botocore/client.py\", line 316, in _api_call\r\n\r\n15:22:29\r\nreturn self._make_api_call(operation_name, kwargs)\r\n\r\n15:22:29\r\nFile \"/usr/local/lib/python3.7/dist-packages/botocore/client.py\", line 626, in _make_api_call\r\n\r\n15:22:29\r\nraise error_class(parsed_response, operation_name)\r\n\r\n15:22:29\r\nbotocore.exceptions.ClientError: An error occurred (ThrottlingException) when calling the DescribeTaskDefinition operation (reached max retries: 4): Rate exceeded\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5905", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5905/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5905/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5905/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5905", "id": 647557503, "node_id": "MDU6SXNzdWU2NDc1NTc1MDM=", "number": 5905, "title": "emr extend network-location feature", "user": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-29T17:49:58Z", "updated_at": "2020-06-30T21:07:00Z", "closed_at": "2020-06-30T21:07:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nRequire subnet/sg tag comparison for resource: emr\r\n\r\n**Describe the solution you'd like**\r\nExtend filter `subnet`, `security-group` and `network-location` for emr\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5904", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5904/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5904/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5904/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5904", "id": 647513815, "node_id": "MDU6SXNzdWU2NDc1MTM4MTU=", "number": 5904, "title": "Linter error on conditions prop [VSCode]", "user": {"login": "eggei", "id": 52514315, "node_id": "MDQ6VXNlcjUyNTE0MzE1", "avatar_url": "https://avatars0.githubusercontent.com/u/52514315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggei", "html_url": "https://github.com/eggei", "followers_url": "https://api.github.com/users/eggei/followers", "following_url": "https://api.github.com/users/eggei/following{/other_user}", "gists_url": "https://api.github.com/users/eggei/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggei/subscriptions", "organizations_url": "https://api.github.com/users/eggei/orgs", "repos_url": "https://api.github.com/users/eggei/repos", "events_url": "https://api.github.com/users/eggei/events{/privacy}", "received_events_url": "https://api.github.com/users/eggei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T16:33:12Z", "updated_at": "2020-06-30T13:03:09Z", "closed_at": "2020-06-29T16:34:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\nI get a linter error on the `conditions` prop. The error is not explanatory, so I can't debug. I have regenerated the schema to see anything changes, but the error persists. See the image below. (This policy is an example from the docs)\r\n\r\n<img width=\"300\" alt=\"Screen Shot 2020-06-29 at 11 52 40 AM\" src=\"https://user-images.githubusercontent.com/52514315/86030945-26fcee80-ba03-11ea-820c-c13961601209.png\">\r\n\r\n**Steps to reproduce the behavior:**\r\n1. Create the schema by running `custodian schema --json > schema.json`\r\n2. Install **YAML** plugin to Visual Studio code editor\r\n3. Specify the schema path like this in VSCode `setting.json`:\r\n```\r\n  \"yaml.schemas\": {\r\n    \"Absolute/path/to/schema.json\": \"*yml\"\r\n  }\r\n```\r\n4. Copy the policy written here and paste it to a new .yml file: https://cloudcustodian.io/docs/quickstart/advanced.html#conditional-policy-execution\r\n\r\n5. Observe the linter error on `conditions` prop\r\n\r\n**Expected behavior**\r\nNot to see any linter error.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15]\r\n - Python Version: [e.g. python 3.8.1]\r\n - Custodian Version: [e.g. 0.8.46.1]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5899", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5899/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5899/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5899/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5899", "id": 646317064, "node_id": "MDU6SXNzdWU2NDYzMTcwNjQ=", "number": 5899, "title": "Mailer broken in current master - ImportModuleError: Unable to import module 'periodic': No module named 'ellipticcurve'", "user": {"login": "jantman", "id": 273454, "node_id": "MDQ6VXNlcjI3MzQ1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/273454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jantman", "html_url": "https://github.com/jantman", "followers_url": "https://api.github.com/users/jantman/followers", "following_url": "https://api.github.com/users/jantman/following{/other_user}", "gists_url": "https://api.github.com/users/jantman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jantman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jantman/subscriptions", "organizations_url": "https://api.github.com/users/jantman/orgs", "repos_url": "https://api.github.com/users/jantman/repos", "events_url": "https://api.github.com/users/jantman/events{/privacy}", "received_events_url": "https://api.github.com/users/jantman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-26T14:52:10Z", "updated_at": "2020-07-07T00:57:53Z", "closed_at": "2020-07-07T00:57:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nc7n_mailer fails from current master (or at least as of https://github.com/cloud-custodian/cloud-custodian/commit/26ba07ea569dfe320682f7509082fc9bead0ca4c). This appears to be an import/dependency issue in mailer.\r\n\r\n**To Reproduce**\r\n\r\nProvision and then run the c7n_mailer Lambda function.\r\n\r\n**Background**\r\n\r\n[manheim-c7n-tools 1.2.1 docker container](https://github.com/manheim/manheim-c7n-tools/releases/tag/1.2.1) running Python 3.7.3.\r\n\r\n**Traceback**\r\n\r\nWe've modified the deployed Lambda function's ``periodic.py`` to log exception tracebacks. The result is:\r\n\r\n```\r\n[ERROR] 2020-06-26T14:41:04.180Z  Exception: No module named 'ellipticcurve'\r\nTraceback (most recent call last):\r\nFile \"/var/task/periodic.py\", line 9, in <module>\r\nfrom c7n_mailer import handle\r\nFile \"/var/task/c7n_mailer/handle.py\", line 21, in <module>\r\nfrom .sqs_queue_processor import MailerSqsQueueProcessor\r\nFile \"/var/task/c7n_mailer/sqs_queue_processor.py\", line 25, in <module>\r\nfrom .email_delivery import EmailDelivery\r\nFile \"/var/task/c7n_mailer/email_delivery.py\", line 18, in <module>\r\nimport c7n_mailer.azure_mailer.sendgrid_delivery as sendgrid\r\nFile \"/var/task/c7n_mailer/azure_mailer/sendgrid_delivery.py\", line 16, in <module>\r\nimport sendgrid\r\nFile \"/var/task/sendgrid/__init__.py\", line 21, in <module>\r\nfrom .helpers.eventwebhook import * # noqa\r\nFile \"/var/task/sendgrid/helpers/eventwebhook/__init__.py\", line 1, in <module>\r\nfrom ellipticcurve.ecdsa import Ecdsa\r\nModuleNotFoundError: No module named 'ellipticcurve'\r\n[ERROR] Runtime.ImportModuleError: Unable to import module 'periodic': No module named 'ellipticcurve'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5892", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5892/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5892/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5892/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5892", "id": 644829671, "node_id": "MDU6SXNzdWU2NDQ4Mjk2NzE=", "number": 5892, "title": "AWS - vpc NetworkLocation bug", "user": {"login": "anovis", "id": 3811703, "node_id": "MDQ6VXNlcjM4MTE3MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3811703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anovis", "html_url": "https://github.com/anovis", "followers_url": "https://api.github.com/users/anovis/followers", "following_url": "https://api.github.com/users/anovis/following{/other_user}", "gists_url": "https://api.github.com/users/anovis/gists{/gist_id}", "starred_url": "https://api.github.com/users/anovis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anovis/subscriptions", "organizations_url": "https://api.github.com/users/anovis/orgs", "repos_url": "https://api.github.com/users/anovis/repos", "events_url": "https://api.github.com/users/anovis/events{/privacy}", "received_events_url": "https://api.github.com/users/anovis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-24T18:35:18Z", "updated_at": "2020-06-25T09:24:21Z", "closed_at": "2020-06-25T09:24:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nThere is a case where the subnet or the security group could be `None` in NetworkLocation causing an error. \r\n\r\n\r\n**To Reproduce**\r\nthe issue was on version 0.9.2 on the sample policy below where one of the alb did not have a security group attached.\r\n```\r\npolicies: \r\n  - name: network-location-test\r\n    resource: aws.app-elb\r\n    filters: \r\n      - type: network-location\r\n        compare: \r\n          - subnet\r\n          - security-group\r\n        key: tag:NetworkLocation\r\n```\r\n**Expected behavior**\r\n\r\nIt should return with `LocationMismatch` and not error out. \r\n\r\n**Background (please complete the following information):**\r\n - OS: MacOS 10.15.5\r\n - Python Version: python 3.7.7\r\n - Custodian Version: 0.9.2\r\n - Cloud Provider: aws\r\n - Policy: \r\n```\r\npolicies: \r\n  - name: network-location-test\r\n    resource: aws.app-elb\r\n    filters: \r\n      - type: network-location\r\n        compare: \r\n          - subnet\r\n          - security-group\r\n        key: tag:NetworkLocation\r\n```\r\n - Traceback:\r\n```\r\n2020-06-08 17:28:47,651: custodian.commands:ERROR Error while executing policy test, continuing\r\nTraceback (most recent call last):\r\n  File \"c7n\\lib\\site-packages\\c7n\\commands.py\", line 280, in run\r\n    policy()\r\n  File \"c7n\\lib\\site-packages\\c7n\\policy.py\", line 1154, in __call__\r\n    resources = mode.run()\r\n  File \"c7n\\lib\\site-packages\\c7n\\policy.py\", line 290, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"c7n\\lib\\site-packages\\c7n\\query.py\", line 471, in resources\r\n    resources = self.filter_resources(resources)\r\n  File \"c7n\\lib\\site-packages\\c7n\\manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"c7n\\lib\\site-packages\\c7n\\filters\\vpc.py\", line 179, in process\r\n    found = self.process_resource(r, resource_sgs, resource_subnets, key)\r\n  File \"c7n\\lib\\site-packages\\c7n\\filters\\vpc.py\", line 245, in process_resource\r\n    'security-groups': sg_values})\r\nUnboundLocalError: local variable 'sg_values' referenced before assignment\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5889", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5889/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5889/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5889/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5889", "id": 644142947, "node_id": "MDU6SXNzdWU2NDQxNDI5NDc=", "number": 5889, "title": "Add new resource log-stream", "user": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 876680469, "node_id": "MDU6TGFiZWw4NzY2ODA0Njk=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/cloud/aws", "name": "cloud/aws", "color": "bfd4f2", "default": false, "description": ""}, {"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-23T20:59:50Z", "updated_at": "2020-06-25T15:05:30Z", "closed_at": "2020-06-25T15:05:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nYes, we're trying to delete/clean up all log stream older than x days\r\n\r\n**Describe the solution you'd like**\r\nCreate a resource log-stream and use age filter followed by delete action\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAs per delete_log_stream(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/logs.html#CloudWatchLogs.Client.delete_log_stream) it deletes one at a time. There are chances we might get throttled. So I'm thinking of adding a retry logic around the delete action\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5886", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5886/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5886/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5886/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5886", "id": 643986422, "node_id": "MDU6SXNzdWU2NDM5ODY0MjI=", "number": 5886, "title": "Lambda CloudTrail policy errors out on checking tags", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T16:37:33Z", "updated_at": "2020-06-23T16:56:00Z", "closed_at": "2020-06-23T16:56:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running a policy to check for lambda access keys in the functions environmental variables, it errors out trying to get the functions tag keys it appears based on the traceback\r\n\r\n**To Reproduce**\r\nRunning a lambda policy which triggers on the CloudTrail event UpdateFunctionConfiguration20150331v2 which then checks tag values is erroring out. \r\n\r\n**Expected behavior**\r\nExpecting it to verify a tag value when someone updates their lambda function and then check the environmental variables\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15] Ubuntu v20\r\n - Python Version: [e.g. python 3.8.1] 3.8.1\r\n - Custodian Version: [e.g. 0.8.46.1] 0.9.1.0\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: [e.g. gcp, aws, azure] aws\r\n - Policy: \r\n```\r\n- name: lambda-ak-in-env-variables-mark\r\n  description: |\r\n      Finds new lambda functions which have a AWS access key in their \r\n      environmental variables and marks them for deletion and\r\n      notifies the owner\r\n  resource: lambda\r\n  mode:\r\n      type: cloudtrail\r\n      events:\r\n        - source: lambda.amazonaws.com\r\n          event: UpdateFunctionConfiguration20150331v2\r\n          ids: \"requestParameters.functionName\"\r\n      packages:\r\n        - botocore\r\n        - boto3\r\n        - urllib3\r\n        - certifi\r\n  filters:\r\n      - \"tag:CreationDate\": present\r\n      - type: value\r\n        value_type: date\r\n        key: \"tag:CreationDate\"\r\n        op: greater-than\r\n        value: \"2020/06/11\"\r\n      - or:\r\n          - type: value\r\n            key: Environment.Variables.[*][0][0]\r\n            op: regex\r\n            value: \"^AKIA[0-9A-Z]{16}$\"\r\n\r\n```\r\n - Traceback: \r\n```\r\n[ERROR]\t2020-06-23T16:16:30.672Z\ta81a00ba-b205-4601-b35f-e6fc58cc3bc9\terror during policy execution\r\nTraceback (most recent call last):\r\n  File \"/var/task/c7n/handler.py\", line 176, in dispatch_event\r\n    p.push(event, context)\r\n  File \"/var/task/c7n/policy.py\", line 1030, in push\r\n    return mode.run(event, lambda_ctx)\r\n  File \"/var/task/c7n/policy.py\", line 448, in run\r\n    resources = self.policy.resource_manager.filter_resources(\r\n  File \"/var/task/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/var/task/c7n/filters/core.py\", line 499, in process\r\n    return super(ValueFilter, self).process(resources, event)\r\n  File \"/var/task/c7n/filters/core.py\", line 197, in process\r\n    return list(filter(self, resources))\r\n  File \"/var/task/c7n/filters/core.py\", line 486, in __call__\r\n    matched = self.match(i)\r\n  File \"/var/task/c7n/filters/core.py\", line 549, in match\r\n    r = self.get_resource_value(self.k, i)\r\n  File \"/var/task/c7n/filters/core.py\", line 507, in get_resource_value\r\n    if t.get('Key') == tk:\r\nAttributeError: 'str' object has no attribute 'get'\r\n```\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5878", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5878/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5878/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5878/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5878", "id": 643316585, "node_id": "MDU6SXNzdWU2NDMzMTY1ODU=", "number": 5878, "title": "Rest-API cross-account filter issues - JSONDecodeError: Expecting property name enclosed in double quotes", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T19:42:55Z", "updated_at": "2020-07-27T15:10:27Z", "closed_at": "2020-07-27T15:10:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running just a basic policy against the rest-api resource for cross-account filter we get the error in the below traceback\r\n\r\n**To Reproduce**\r\nrunning a poll mode rest-api cross-account policy\r\n\r\n**Expected behavior**\r\nExpecting similar behavior to other cross-account filter policies\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15] Ubuntu v20\r\n - Python Version: 3.8.1\r\n - Custodian Version: 0.9.2.0\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n - Policy: \r\n```\r\npolicies:\r\n\r\n\r\n- name: rest-public\r\n  resource: rest-api\r\n  filters:\r\n    - type: \"cross-account\"\r\n      whitelist_from:\r\n         url: \"s3://mys3bucket/AccountNumbersWithAWSLogAccts.csv\"\r\n         format: csv2dict\r\n```\r\n - Traceback: \r\nhttps://gist.github.com/jtroberts83/4bcbddb38bdc86b66915b1f48de37c4f\r\n\r\n\r\n - `custodian version --debug` output\r\nIn traceback link above\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5864", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5864/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5864/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5864/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5864", "id": 639912372, "node_id": "MDU6SXNzdWU2Mzk5MTIzNzI=", "number": 5864, "title": "AWS common filters page has a link pointing to 404 link", "user": {"login": "edwardmoon", "id": 2054737, "node_id": "MDQ6VXNlcjIwNTQ3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2054737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardmoon", "html_url": "https://github.com/edwardmoon", "followers_url": "https://api.github.com/users/edwardmoon/followers", "following_url": "https://api.github.com/users/edwardmoon/following{/other_user}", "gists_url": "https://api.github.com/users/edwardmoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardmoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardmoon/subscriptions", "organizations_url": "https://api.github.com/users/edwardmoon/orgs", "repos_url": "https://api.github.com/users/edwardmoon/repos", "events_url": "https://api.github.com/users/edwardmoon/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardmoon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390730040, "node_id": "MDU6TGFiZWwzOTA3MzAwNDA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/area/docs", "name": "area/docs", "color": "d93f0b", "default": false, "description": null}, {"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-16T19:15:35Z", "updated_at": "2020-06-22T22:04:00Z", "closed_at": "2020-06-22T22:04:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "On this page: https://cloudcustodian.io/docs/aws/resources/aws-common-filters.html#aws-common-filters-config-compliance\r\n\r\nThere is a bit.ly link: https://bit.ly/2mblVpq\r\n\r\nThe bit.ly link points to a non-existent capitalone.github.io link (throws 404): http://capitalone.github.io/cloud-custodian/docs/policy/lambda.html#config-rules\r\n\r\nI believe the bit.ly link should be updated to point to this page in the cloud custodian docs: https://cloudcustodian.io/docs/policy/lambda.html#config-rules", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5863", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5863/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5863/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5863/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5863", "id": 639814619, "node_id": "MDU6SXNzdWU2Mzk4MTQ2MTk=", "number": 5863, "title": "\" TypeError: subscribe() takes 2 positional arguments but 3 were given \" when running multi account c7n-ord command", "user": {"login": "farookhus", "id": 67014644, "node_id": "MDQ6VXNlcjY3MDE0NjQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/67014644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farookhus", "html_url": "https://github.com/farookhus", "followers_url": "https://api.github.com/users/farookhus/followers", "following_url": "https://api.github.com/users/farookhus/following{/other_user}", "gists_url": "https://api.github.com/users/farookhus/gists{/gist_id}", "starred_url": "https://api.github.com/users/farookhus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farookhus/subscriptions", "organizations_url": "https://api.github.com/users/farookhus/orgs", "repos_url": "https://api.github.com/users/farookhus/repos", "events_url": "https://api.github.com/users/farookhus/events{/privacy}", "received_events_url": "https://api.github.com/users/farookhus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-16T16:34:43Z", "updated_at": "2020-06-16T17:47:59Z", "closed_at": "2020-06-16T17:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nError out as \" TypeError: subscribe() takes 2 positional arguments but 3 were given \" after running the command \"  c7n-org run -c accounts.yml -s output -u temp.yml \"\r\n\r\n**To Reproduce**\r\nError out as \" TypeError: subscribe() takes 2 positional arguments but 3 were given \" after running the command \"  c7n-org run -c accounts.yml -s output -u temp.yml \"\r\n\r\n**Expected behavior**\r\n(custodian) servername[/home/username/custodian_install/policies]$ c7n-org run -c accounts.yml -s output -u policy.yml\r\nTraceback (most recent call last):\r\n  File \"/home/username/custodian_install/custodian/bin/c7n-org\", line 8, in <module>\r\n    sys.exit(cli())\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_org/cli.py\", line 624, in run\r\n    config, use, debug, verbose, accounts, tags, policy, policy_tags=policy_tags)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_org/cli.py\", line 196, in init\r\n    load_available()\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n/resources/__init__.py\", line 64, in load_available\r\n    load_providers((provider,))\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n/resources/__init__.py\", line 85, in load_providers\r\n    from c7n_azure.entry import initialize_azure\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/entry.py\", line 23, in <module>\r\n    import c7n_azure.policy\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/policy.py\", line 28, in <module>\r\n    from c7n_azure.resources.arm import ArmResourceManager\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/resources/arm.py\", line 24, in <module>\r\n    from c7n_azure.query import QueryResourceManager, QueryMeta, ChildResourceManager, TypeInfo, \\\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/query.py\", line 396, in <module>\r\n    resources.subscribe(resources.EVENT_FINAL, QueryResourceManager.register_actions_and_filters)\r\nTypeError: subscribe() takes 2 positional arguments but 3 were given\r\n\r\n**Background (please complete the following information):**\r\n - OS: x86_64 x86_64 x86_64 GNU/Linux\r\n - Python Version: Python 3.6.8\r\n - Custodian Version: 0.9.3\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: AWS\r\n - Policy: my-policy\r\npolicies: \r\npolicies:\r\n  - name: my-policy\r\n    resource: ec2\r\n    filters:\r\n       - \"tag:custodian_xxxxx\": absent\r\n\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n - `custodian version --debug` output\r\n\r\nCustodian:   0.9.3\r\nPython:      3.6.8 (default, Apr  2 2020, 13:34:55)\r\n             [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\r\nPlatform:    posix.uname_result(sysname='Linux', nodename='xxxxx', release='3.10.0-1127.8.2.el7.x86_64', version='#1 SMP Tue May 12 16:57:42 UTC 2020', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n/cli.py\", line 362, in main\r\n    command(config)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n/commands.py\", line 549, in version_cmd\r\n    found = load_available(resources=False)\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n/resources/__init__.py\", line 64, in load_available\r\n    load_providers((provider,))\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n/resources/__init__.py\", line 85, in load_providers\r\n    from c7n_azure.entry import initialize_azure\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/entry.py\", line 23, in <module>\r\n    import c7n_azure.policy\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/policy.py\", line 28, in <module>\r\n    from c7n_azure.resources.arm import ArmResourceManager\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/resources/arm.py\", line 24, in <module>\r\n    from c7n_azure.query import QueryResourceManager, QueryMeta, ChildResourceManager, TypeInfo, \\\r\n  File \"/home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/query.py\", line 396, in <module>\r\n    resources.subscribe(resources.EVENT_FINAL, QueryResourceManager.register_actions_and_filters)\r\nTypeError: subscribe() takes 2 positional arguments but 3 were given\r\n> /home/username/custodian_install/custodian/lib64/python3.6/site-packages/c7n_azure/query.py(396)<module>()\r\n-> resources.subscribe(resources.EVENT_FINAL, QueryResourceManager.register_actions_and_filters)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5862", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5862/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5862/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5862/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5862", "id": 639760699, "node_id": "MDU6SXNzdWU2Mzk3NjA2OTk=", "number": 5862, "title": "AWS - Add SNS Subscription Resource", "user": {"login": "Lucas-Irvine", "id": 16889692, "node_id": "MDQ6VXNlcjE2ODg5Njky", "avatar_url": "https://avatars1.githubusercontent.com/u/16889692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucas-Irvine", "html_url": "https://github.com/Lucas-Irvine", "followers_url": "https://api.github.com/users/Lucas-Irvine/followers", "following_url": "https://api.github.com/users/Lucas-Irvine/following{/other_user}", "gists_url": "https://api.github.com/users/Lucas-Irvine/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucas-Irvine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucas-Irvine/subscriptions", "organizations_url": "https://api.github.com/users/Lucas-Irvine/orgs", "repos_url": "https://api.github.com/users/Lucas-Irvine/repos", "events_url": "https://api.github.com/users/Lucas-Irvine/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucas-Irvine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-16T15:21:33Z", "updated_at": "2020-06-24T19:47:37Z", "closed_at": "2020-06-24T19:47:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI want to be able to filter for all SNS Subscriptions, as well as retrieving their attributes.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to create a new resource ```subscription```, which would use (https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sns.html#SNS.Client.list_subscriptions) to find all the subscriptions.\r\n\r\n**Describe alternatives you've considered**\r\nThere are two main alternatives. One is just to implement ListSubscriptions and GetSubscriptionAttributes as sns resource actions. The other is to make ```subscription``` a child resource of an sns topic, so that we would replace using ```list_subscriptions``` with ```list_subscriptions_by_topic``` (https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sns.html#SNS.Client.list_subscriptions_by_topic). I think this approach isn't as flexible though, since we can always filter sns subscriptions by their topic ARN anyway. \r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5861", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5861/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5861/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5861/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5861", "id": 639493430, "node_id": "MDU6SXNzdWU2Mzk0OTM0MzA=", "number": 5861, "title": "enabling perfromance insight on RDS failing due wrong key in property", "user": {"login": "RazaHasan84", "id": 36226456, "node_id": "MDQ6VXNlcjM2MjI2NDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/36226456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazaHasan84", "html_url": "https://github.com/RazaHasan84", "followers_url": "https://api.github.com/users/RazaHasan84/followers", "following_url": "https://api.github.com/users/RazaHasan84/following{/other_user}", "gists_url": "https://api.github.com/users/RazaHasan84/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazaHasan84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazaHasan84/subscriptions", "organizations_url": "https://api.github.com/users/RazaHasan84/orgs", "repos_url": "https://api.github.com/users/RazaHasan84/repos", "events_url": "https://api.github.com/users/RazaHasan84/events{/privacy}", "received_events_url": "https://api.github.com/users/RazaHasan84/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T08:55:56Z", "updated_at": "2020-06-24T00:27:49Z", "closed_at": "2020-06-24T00:27:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n\r\n**Describe the bug**\r\nresponse of describe db instance does not have any key \"EnablePerformanceInsights\" but \"PerformanceInsightsEnabled\" :\r\nhttps://github.com/cloud-custodian/cloud-custodian/blob/master/c7n/resources/rds.py#L1625\r\nHence, using EnablePerformanceInsights under action fail\r\n          - type: modify-db\r\n              update:\r\n                - property: 'PerformanceInsightsEnabled'\r\n                  value: true\r\n              immediate: true\r\n\r\nhttps://github.com/cloud-custodian/cloud-custodian/blob/master/c7n/resources/rds.py#L1655\r\n    if r[update['property']] != update['value']:\r\nKeyError: 'EnablePerformanceInsights'\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n\r\n**Background (please complete the following information):**\r\n\r\n```yaml\r\npolicies: \r\n       actions:\r\n            - type: modify-db\r\n              update:\r\n                - property: 'EnablePerformanceInsights'\r\n                  value: true\r\n              immediate: true\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5859", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5859/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5859/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5859/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5859", "id": 637222376, "node_id": "MDU6SXNzdWU2MzcyMjIzNzY=", "number": 5859, "title": "include alias name in kms-key for filtering and notifications", "user": {"login": "tjstansell", "id": 5217454, "node_id": "MDQ6VXNlcjUyMTc0NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5217454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjstansell", "html_url": "https://github.com/tjstansell", "followers_url": "https://api.github.com/users/tjstansell/followers", "following_url": "https://api.github.com/users/tjstansell/following{/other_user}", "gists_url": "https://api.github.com/users/tjstansell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjstansell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjstansell/subscriptions", "organizations_url": "https://api.github.com/users/tjstansell/orgs", "repos_url": "https://api.github.com/users/tjstansell/repos", "events_url": "https://api.github.com/users/tjstansell/events{/privacy}", "received_events_url": "https://api.github.com/users/tjstansell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-11T18:07:06Z", "updated_at": "2020-06-24T23:22:58Z", "closed_at": "2020-06-24T23:22:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'd like the `AliasName` available in the kms-key resource information for more enriched notifications.\r\n\r\n**Describe the solution you'd like**\r\nWe could do this one of two ways:\r\n1. augment all the resources with the alias info when the resources are queried.  list-aliases is just one additional api call.\r\n2. only pull in alias info if an `alias` filter is used. to use the alias in a notification, we'd need an extra no-op filter to trigger the extra info.\r\n\r\nIt seems a lot easier and simpler to go with option 1, but I know you've been leaning away from additional api calls and augmentations by default... thoughts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5854", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5854/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5854/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5854/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5854", "id": 636512230, "node_id": "MDU6SXNzdWU2MzY1MTIyMzA=", "number": 5854, "title": "Allow CloudCustodian to have configuration for Splunk sourcetype", "user": {"login": "willjw1", "id": 16905173, "node_id": "MDQ6VXNlcjE2OTA1MTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/16905173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willjw1", "html_url": "https://github.com/willjw1", "followers_url": "https://api.github.com/users/willjw1/followers", "following_url": "https://api.github.com/users/willjw1/following{/other_user}", "gists_url": "https://api.github.com/users/willjw1/gists{/gist_id}", "starred_url": "https://api.github.com/users/willjw1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willjw1/subscriptions", "organizations_url": "https://api.github.com/users/willjw1/orgs", "repos_url": "https://api.github.com/users/willjw1/repos", "events_url": "https://api.github.com/users/willjw1/events{/privacy}", "received_events_url": "https://api.github.com/users/willjw1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-10T20:04:16Z", "updated_at": "2020-06-24T18:49:41Z", "closed_at": "2020-06-24T18:49:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Description of problem:\r\nsplunk_handler enforces all sourcetypes to be '_json'  If you want the sourcetype to be distinguished against all your other sourcetypes that doesn't help so much.\r\n\r\nDescribe the solution:\r\nTake a configuration option which would then be passed down to the sourcetype in the splunk_handler call.\r\n\r\nDescribe alternatives you've considered:\r\nI haven't, please if you have a better way of doing this, reach out.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5852", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5852/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5852/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5852/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5852", "id": 636371040, "node_id": "MDU6SXNzdWU2MzYzNzEwNDA=", "number": 5852, "title": "Enable/Disable SecurityHub", "user": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-10T16:02:39Z", "updated_at": "2020-06-15T21:13:32Z", "closed_at": "2020-06-15T21:13:32Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI want to check if SecurityHub is enabled or not for all the accounts and take an action accordingly\r\n\r\n**Describe the solution you'd like**\r\nWe can create a filter and action on `resource: aws.account`. Filter uses api `describe_hub`(https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/securityhub.html#SecurityHub.Client.describe_hub)\r\nIf we get a response back => sechub is enabled. If we get an exception, take action (https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/securityhub.html#SecurityHub.Client.enable_security_hub)\r\n\r\n**Describe alternatives you've considered**\r\nCreate a new resource type\r\n\r\n**Additional context**\r\nNA\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5845", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5845/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5845/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5845/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5845", "id": 634654818, "node_id": "MDU6SXNzdWU2MzQ2NTQ4MTg=", "number": 5845, "title": "Feature Request: Allow remediation on Instance Metadata Service Version v1, switch to v2 and disable v1", "user": {"login": "tysegall", "id": 32373497, "node_id": "MDQ6VXNlcjMyMzczNDk3", "avatar_url": "https://avatars3.githubusercontent.com/u/32373497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tysegall", "html_url": "https://github.com/tysegall", "followers_url": "https://api.github.com/users/tysegall/followers", "following_url": "https://api.github.com/users/tysegall/following{/other_user}", "gists_url": "https://api.github.com/users/tysegall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tysegall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tysegall/subscriptions", "organizations_url": "https://api.github.com/users/tysegall/orgs", "repos_url": "https://api.github.com/users/tysegall/repos", "events_url": "https://api.github.com/users/tysegall/events{/privacy}", "received_events_url": "https://api.github.com/users/tysegall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-08T14:15:06Z", "updated_at": "2020-06-10T12:40:18Z", "closed_at": "2020-06-10T12:40:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "After talking with @kapilt on Gitter inquiring about the possibility of filtering and acting on Instance Metadata Service Version version 1 versus version 2 for EC2 instances, he mentioned that notification would be possible but not remediation.\r\n\r\nRaising the issue to have Instance Metadata Service v1 disabled as part of remediation.\r\n\r\nReference: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5838", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5838/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5838/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5838/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5838", "id": 631261068, "node_id": "MDU6SXNzdWU2MzEyNjEwNjg=", "number": 5838, "title": "Deprecation warning due to invalid escape sequences ", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062493, "node_id": "MDU6TGFiZWwzMzQwNjI0OTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/help%20wanted", "name": "help wanted", "color": "0052cc", "default": true, "description": null}, {"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}, {"id": 390677170, "node_id": "MDU6TGFiZWwzOTA2NzcxNzA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/scope/bitesize", "name": "scope/bitesize", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-05T02:17:40Z", "updated_at": "2020-06-08T17:28:48Z", "closed_at": "2020-06-08T17:28:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nDeprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals. pyupgrade also helps in automatic conversion : https://github.com/asottile/pyupgrade/\r\n\r\n**To Reproduce**\r\n\r\n```\r\nfind . -iname '*.py' | grep -v example | xargs -P4 -I{} python3.8 -Wall -m py_compile {}\r\n./tools/c7n_sentry/test_sentry.py:50: DeprecationWarning: invalid escape sequence \\m\r\n  msg2 = \"\"\"\r\n./tests/zpill.py:274: DeprecationWarning: invalid escape sequence \\d\r\n  response_data = re.sub(\"\\d{12}\", ACCOUNT_ID, response_data)  # noqa\r\n```\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15]\r\n - Python Version: 3.8\r\n - Custodian Version: master branch\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: [e.g. gcp, aws, azure]\r\n - Policy: [please exclude any account/sensitive information]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5837", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5837/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5837/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5837/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5837", "id": 631216880, "node_id": "MDU6SXNzdWU2MzEyMTY4ODA=", "number": 5837, "title": "Using Glue Catalog in cloud-trail mode for PutResourcePolicy event", "user": {"login": "JohnHillegass", "id": 13325146, "node_id": "MDQ6VXNlcjEzMzI1MTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/13325146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnHillegass", "html_url": "https://github.com/JohnHillegass", "followers_url": "https://api.github.com/users/JohnHillegass/followers", "following_url": "https://api.github.com/users/JohnHillegass/following{/other_user}", "gists_url": "https://api.github.com/users/JohnHillegass/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnHillegass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnHillegass/subscriptions", "organizations_url": "https://api.github.com/users/JohnHillegass/orgs", "repos_url": "https://api.github.com/users/JohnHillegass/repos", "events_url": "https://api.github.com/users/JohnHillegass/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnHillegass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}, {"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-04T23:53:43Z", "updated_at": "2020-06-08T12:59:28Z", "closed_at": "2020-06-08T12:59:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I don't know if this is a bug per-se, maybe its by design. It could be considered an enhancement request. There are certain actions like PutResourcePolicy that do not provide the catalogId in the event body. I have tried using the account id in place of it as I understand they can be interchangeable but it will filter down to 0 resources matched. Unlike if I was doing a polling policy.\r\n\r\nhttps://docs.aws.amazon.com/glue/latest/webapi/API_PutResourcePolicy.html\r\n\r\n\r\nExample Policy\r\n```yaml\r\n  - name: net-change-rbp-cross-account\r\n    resource: aws.glue-catalog\r\n    mode:\r\n      type: cloudtrail\r\n      role: arn:aws:iam::644160558196:role/fakerole\r\n      events:\r\n        - source: glue.amazonaws.com\r\n          event: PutResourcePolicy\r\n          ids: account\r\n    filters:\r\n      - type: cross-account\r\n    actions:\r\n      - type: notify\r\n        to: \r\n          - fake@email.com\r\n        transport:\r\n          type: sns\r\n          topic: arn:aws:sns:us-east-1:644160558196:faketopic\r\n```\r\nSample event\r\n```json\r\n{\r\n  \"version\": \"0\",\r\n  \"id\": \"4186524f-f288-ecb2-0052-fwdqdfwdq\",\r\n  \"detail-type\": \"AWS API Call via CloudTrail\",\r\n  \"source\": \"aws.glue\",\r\n  \"account\": \"644160558196\",\r\n  \"time\": \"2020-06-04T15:18:28Z\",\r\n  \"region\": \"us-east-1\",\r\n  \"resources\": [],\r\n  \"detail\": {\r\n    \"eventVersion\": \"1.05\",\r\n    \"userIdentity\": {\r\n      \"type\": \"IAMUser\",\r\n      \"principalId\": \"sdafadsfdsaf\",\r\n      \"arn\": \"arn:aws:iam::644160558196:user/fake@email.com\",\r\n      \"accountId\": \"644160558196\",\r\n      \"accessKeyId\": \"dfwdfqfdqwf\",\r\n      \"userName\": \"fake@email.com\",\r\n      \"sessionContext\": {\r\n        \"sessionIssuer\": {},\r\n        \"webIdFederationData\": {},\r\n        \"attributes\": {\r\n          \"mfaAuthenticated\": \"false\",\r\n          \"creationDate\": \"2020-06-04T15:06:07Z\"\r\n        }\r\n      }\r\n    },\r\n    \"eventTime\": \"2020-06-04T15:18:28Z\",\r\n    \"eventSource\": \"glue.amazonaws.com\",\r\n    \"eventName\": \"PutResourcePolicy\",\r\n    \"awsRegion\": \"us-east-1\",\r\n    \"sourceIPAddress\": \"99.99.99.99\",\r\n    \"userAgent\": \"console.amazonaws.com\",\r\n    \"requestParameters\": {\r\n      \"policyHashCondition\": \"ggigiigpjjjoppjojpo==\",\r\n      \"policyInJson\": \"{\\n  \\\"Version\\\" : \\\"2012-10-17\\\",\\n  \\\"Statement\\\" : [ {\\n    \\\"Effect\\\" : \\\"Allow\\\",\\n    \\\"Principal\\\" : \\\"*\\\",\\n    \\\"Action\\\" : \\\"glue:*\\\",\\n    \\\"Resource\\\" : \\\"arn:aws:glue:us-east-1:644160558196:catalog\\\",\\n    \\\"Condition\\\": {\\n        \\\"StringEquals\\\": {\\n            \\\"aws:PrincipalOrgID\\\": \\\"o-4amkskbcf3\\\"\\n        }        \\n    }\\n  } ]\\n}\"\r\n    },\r\n    \"responseElements\": {\r\n      \"policyHash\": \"fghfhgfhgfgh==\"\r\n    },\r\n    \"requestID\": \"562ac246-0da8-4eb7-143tt431t-7053b5ecf789\",\r\n    \"eventID\": \"ttityitiit-9b01-13t4113-a1db-57f55e636789\",\r\n    \"eventType\": \"AwsApiCall\"\r\n  },\r\n  \"debug\": true\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5833", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5833/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5833/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5833/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5833", "id": 630684043, "node_id": "MDU6SXNzdWU2MzA2ODQwNDM=", "number": 5833, "title": "c7n-org not tagging Amazon EventBridge Rules in child accounts", "user": {"login": "garybaines", "id": 15976911, "node_id": "MDQ6VXNlcjE1OTc2OTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/15976911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garybaines", "html_url": "https://github.com/garybaines", "followers_url": "https://api.github.com/users/garybaines/followers", "following_url": "https://api.github.com/users/garybaines/following{/other_user}", "gists_url": "https://api.github.com/users/garybaines/gists{/gist_id}", "starred_url": "https://api.github.com/users/garybaines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garybaines/subscriptions", "organizations_url": "https://api.github.com/users/garybaines/orgs", "repos_url": "https://api.github.com/users/garybaines/repos", "events_url": "https://api.github.com/users/garybaines/events{/privacy}", "received_events_url": "https://api.github.com/users/garybaines/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062491, "node_id": "MDU6TGFiZWwzMzQwNjI0OTE=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/duplicate", "name": "kind/duplicate", "color": "0052cc", "default": false, "description": null}, {"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T09:59:02Z", "updated_at": "2020-06-04T11:46:05Z", "closed_at": "2020-06-04T11:45:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nc7n-org isn't tagging the events it builds in child accounts with the tags specified in the policies \"mode\" section.  The lambda's it builds are tagged correctly.\r\n\r\n**To Reproduce**\r\nCreate a policy with a mode section that has a number of tags, e.g.\r\n```    mode:\r\n      type: periodic\r\n      role: c7n-lambda-role\r\n      schedule: \"cron(15 11 * * ? *)\"\r\n      tags:\r\n          live: \"no\"\r\n          builtby: \"CloudCustodian\"\r\n```\r\n**Expected behavior**\r\nEvent rule should be tagged with the above two tags (live and builtby in above example)\r\n\r\n**Background (please complete the following information):**\r\n - OS: [c7n-org run from a docker image python:3.8-slim-buster]\r\n - Python Version: [python 3.8]\r\n - Custodian Version: [c7n==0.8.46.1\r\nc7n-mailer==0.5.8\r\nc7n-org==0.5.7]\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: AWS\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\nvars:\r\n  tag-filters: &tag-compliance-filters\r\n    - \"tag:costcentre\": absent\r\n    - \"tag:live\": absent\r\n    - type: value\r\n      key: \"tag:live\"\r\n      value: [yes, no]\r\n      op: in\r\n\r\npolicies:\r\n  - name: ec2-tag-compliance\r\n    description: Find resources without mandatory tags\r\n    resource: ec2\r\n    mode:\r\n      type: periodic\r\n      role: c7n-lambda-role\r\n      schedule: \"cron(15 11 * * ? *)\"\r\n      tags:\r\n          live: \"no\"\r\n          builtby: \"CloudCustodian\"\r\n          email: \"redacted\"\r\n          costcentre: \"XXXX\"\r\n          scpProtected: \"true\"\r\n    comment: |\r\n      Report on total count of non compliant instances\r\n    filters:\r\n      - \"tag:aws:autoscaling:groupName\": absent\r\n      - \"tag:c7n_status\": absent\r\n      - or: *tag-compliance-filters\r\n```\r\n\r\n**Additional context**\r\nWe push out policies to dozens of accounts and need all the Custodian built resources to be tagged for both cost reporting purposes and so they can be protected from accidental or malicious deletion in the spoke accounts via an SCP (Service Control Policy) tag protection policy.  At the moment Custodian is only tagging its lambda's correctly, leaving the Cloud Watch events exposed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5830", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5830/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5830/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5830/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5830", "id": 630149826, "node_id": "MDU6SXNzdWU2MzAxNDk4MjY=", "number": 5830, "title": "AWS RedShift Reserved Nodes", "user": {"login": "jhmartin", "id": 367824, "node_id": "MDQ6VXNlcjM2NzgyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/367824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmartin", "html_url": "https://github.com/jhmartin", "followers_url": "https://api.github.com/users/jhmartin/followers", "following_url": "https://api.github.com/users/jhmartin/following{/other_user}", "gists_url": "https://api.github.com/users/jhmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmartin/subscriptions", "organizations_url": "https://api.github.com/users/jhmartin/orgs", "repos_url": "https://api.github.com/users/jhmartin/repos", "events_url": "https://api.github.com/users/jhmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T16:37:00Z", "updated_at": "2020-06-08T18:36:00Z", "closed_at": "2020-06-08T18:36:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the solution you'd like**\r\nParity of aws.rds-reserved / aws.ec2-reserved with a new aws.redshift-reserved resource.\r\n\r\n\r\n**Additional context**\r\nI would like the ability to identify redshift reserved nodes in the same way as rds and ec2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5829", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5829/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5829/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5829/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5829", "id": 630063981, "node_id": "MDU6SXNzdWU2MzAwNjM5ODE=", "number": 5829, "title": "aws - filters - \"missing\" filter throw an error running on lambda function", "user": {"login": "TanguyCme", "id": 9210633, "node_id": "MDQ6VXNlcjkyMTA2MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9210633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TanguyCme", "html_url": "https://github.com/TanguyCme", "followers_url": "https://api.github.com/users/TanguyCme/followers", "following_url": "https://api.github.com/users/TanguyCme/following{/other_user}", "gists_url": "https://api.github.com/users/TanguyCme/gists{/gist_id}", "starred_url": "https://api.github.com/users/TanguyCme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TanguyCme/subscriptions", "organizations_url": "https://api.github.com/users/TanguyCme/orgs", "repos_url": "https://api.github.com/users/TanguyCme/repos", "events_url": "https://api.github.com/users/TanguyCme/events{/privacy}", "received_events_url": "https://api.github.com/users/TanguyCme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-03T14:51:31Z", "updated_at": "2020-06-04T15:24:55Z", "closed_at": "2020-06-04T15:24:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhile updating from 0.8 to 0.9 I faced an issue with some of my rules. When I use a _missing_ filter in a policy deployed on a lambda function.\r\n\r\n**To Reproduce**\r\nDeploy the Lambda function and create an ACM certificate, then delete it\r\nyou can find the error of the lambda function in cloudwatch\r\n\r\n**Expected behavior**\r\nThe lambda function has a correct execution.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: AWS Lambda\r\n - Python Version: 3.7\r\n - Custodian Version: 0.9.2\r\n - Tool Version: 0.9.2\r\n - Cloud Provider: aws\r\n - Policy: \r\n```yaml\r\npolicies: \r\n  - name: certificate-deleted\r\n    resource: account\r\n    filters:\r\n      - type: missing\r\n        policy:\r\n            resource: acm-certificate\r\n            filters:\r\n              - type: value\r\n                key: certificateArn\r\n                op: eq\r\n                value: \"detail.requestParameters.certificateArn\"\r\n    mode:\r\n      function-prefix: \"SEC-c7n-\"\r\n      type: cloudtrail\r\n      role: YOURROLE\r\n      events:\r\n        - source: acm.amazonaws.com\r\n          event: DeleteCertificate\r\n          ids: requestParameters.certificateArn\r\n    actions:\r\n      - type: post-finding\r\n        severity_normalized: 1\r\n        types:\r\n          - \"Unusual Behaviors/SEC\"\r\n        compliance_status: WARNING\r\n        recommendation: \"SEC\"\r\n```\r\n - Traceback: \r\n```\r\n[ERROR] RuntimeError: missing jsonschema dependency\r\nTraceback (most recent call last):\r\n  File \"/var/task/custodian_policy.py\", line 4, in run\r\n    return handler.dispatch_event(event, context)\r\n  File \"/var/task/c7n/handler.py\", line 175, in dispatch_event\r\n    p.validate()\r\n  File \"/var/task/c7n/policy.py\", line 1047, in validate\r\n    f.validate()\r\n  File \"/var/task/c7n/filters/missing.py\", line 49, in validate\r\n    collection = PolicyLoader(\r\n  File \"/var/task/c7n/loader.py\", line 136, in load_data\r\n    errors = self.validator.validate(policy_data, tuple(rtypes))\r\n  File \"/var/task/c7n/loader.py\", line 47, in validate\r\n    self.gen_schema(tuple(sorted(resource_types)))\r\n  File \"/var/task/c7n/loader.py\", line 74, in gen_schema\r\n    self.validator = v = self._gen_schema(resource_types)\r\n  File \"/var/task/c7n/loader.py\", line 82, in _gen_schema\r\n    raise RuntimeError(\"missing jsonschema dependency\")\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5828", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5828/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5828/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5828/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5828", "id": 629765279, "node_id": "MDU6SXNzdWU2Mjk3NjUyNzk=", "number": 5828, "title": "Using IAM events to trigger Password Policy Changes", "user": {"login": "deepaksrinath", "id": 65566374, "node_id": "MDQ6VXNlcjY1NTY2Mzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/65566374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepaksrinath", "html_url": "https://github.com/deepaksrinath", "followers_url": "https://api.github.com/users/deepaksrinath/followers", "following_url": "https://api.github.com/users/deepaksrinath/following{/other_user}", "gists_url": "https://api.github.com/users/deepaksrinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepaksrinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepaksrinath/subscriptions", "organizations_url": "https://api.github.com/users/deepaksrinath/orgs", "repos_url": "https://api.github.com/users/deepaksrinath/repos", "events_url": "https://api.github.com/users/deepaksrinath/events{/privacy}", "received_events_url": "https://api.github.com/users/deepaksrinath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T07:33:44Z", "updated_at": "2020-06-04T02:04:50Z", "closed_at": "2020-06-04T02:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to update the password policy such that, whenever password policy is updated or deleted, I want my default password policy to be updated.\r\n\r\n```\r\npolicies:\r\n  - name: password-policy\r\n    resource: account\r\n    mode:\r\n      role: arn:aws:iam::<role_id>:role/blah123\r\n      type: cloudtrail\r\n      events:\r\n        - ConsoleLogin\r\n        - CreateBucket\r\n        - source: iam.amazonaws.com\r\n          event: UpdateAccountPasswordPolicy\r\n          ids: 'userIdentity.arn'\r\n     actions:\r\n         blah\r\n```\r\n\r\nBut, the actions are only triggered only when I login but does not work when I create a new bucket or update password policy. How should I fix this issue? I believe it has something to do with resource!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5822", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5822/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5822/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5822/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5822", "id": 627959100, "node_id": "MDU6SXNzdWU2Mjc5NTkxMDA=", "number": 5822, "title": "Should reports always output the Name of the resource?", "user": {"login": "migueleliasweb", "id": 1608212, "node_id": "MDQ6VXNlcjE2MDgyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1608212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/migueleliasweb", "html_url": "https://github.com/migueleliasweb", "followers_url": "https://api.github.com/users/migueleliasweb/followers", "following_url": "https://api.github.com/users/migueleliasweb/following{/other_user}", "gists_url": "https://api.github.com/users/migueleliasweb/gists{/gist_id}", "starred_url": "https://api.github.com/users/migueleliasweb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/migueleliasweb/subscriptions", "organizations_url": "https://api.github.com/users/migueleliasweb/orgs", "repos_url": "https://api.github.com/users/migueleliasweb/repos", "events_url": "https://api.github.com/users/migueleliasweb/events{/privacy}", "received_events_url": "https://api.github.com/users/migueleliasweb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-31T13:02:44Z", "updated_at": "2020-06-01T06:16:26Z", "closed_at": "2020-06-01T06:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The report for snapshots in AWS doesn't return the name of the snapshot. Like so:\r\n\r\n```\r\n+------------------------+-----------------------+------------------+--------------+----------------------------------+-----------+\r\n| snap-16786784 | vol-ffffffff          |                  |            8 | 2020-04-19T01:27:34.243000+00:00 | completed |\r\n+------------------------+-----------------------+------------------+--------------+----------------------------------+-----------+\r\n| snap-14564563 | vol-ffffffff          |                  |            8 | 2020-04-26T00:11:17.536000+00:00 | completed |\r\n+------------------------+-----------------------+------------------+--------------+----------------------------------+-----------+\r\n| snap-12345345 | vol-kfkfkfddkkffkfkfk |                  |           32 | 2020-03-10T22:15:13.728000+00:00 | completed |\r\n+------------------------+-----------------------+------------------+--------------+----------------------------------+-----------+\r\n| snap-12312311 | vol-nottherealone0123 |                  |           32 | 2020-03-10T22:57:27.346000+00:00 | completed |\r\n+========================+=======================+==================+==============+==================================+===========+\r\n| SnapshotId             | VolumeId              | tag:InstanceId   |   VolumeSize | StartTime                        | State     |\r\n+========================+=======================+==================+==============+==================================+===========+\r\n```\r\n\r\nThis makes it a bit harder to immediately pick up errors or pretty much anything visually in the report. Would it be doable to `always` return the name tag in reports?\r\n\r\nAs an example, the AMI reports in AWS:\r\n\r\n```\r\n+-----------------------+-------------------------------------------------------------+--------------------------+-------------------------------------+\r\n| ami-123uoi123iaklsdk1 | not-the-real-image-name-duh                                 | 2020-04-08T01:32:07.000Z | ami-foo-bar                         |\r\n+-----------------------+-------------------------------------------------------------+--------------------------+-------------------------------------+\r\n| ami-123123123123lllll | AMI-name-is-shown-here                                      | 2020-03-19T02:20:58.000Z | ami-taz                             |\r\n+-----------------------+-------------------------------------------------------------+--------------------------+-------------------------------------+\r\n| ami-aaaaaabbbbccccddd | this-is-another-AMI-name                                    | 2020-04-15T05:40:58.000Z | ami-policy123                       |\r\n+=======================+=============================================================+==========================+=====================================+\r\n| ImageId               | Name                                                        | CreationDate             | Policy                              |\r\n+-----------------------+-------------------------------------------------------------+--------------------------+-------------------------------------+\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5817", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5817/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5817/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5817/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5817", "id": 627352488, "node_id": "MDU6SXNzdWU2MjczNTI0ODg=", "number": 5817, "title": "Add delete action to aws.ssm-parameter resource", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-29T15:29:53Z", "updated_at": "2020-05-30T14:57:43Z", "closed_at": "2020-05-30T14:57:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe would like to enforce that only secure strings are used for the parameter store so we need a delete action to do the actual enforcement as customers will just ignore emails if there is no consequence.\r\n\r\n**Describe the solution you'd like**\r\nA delete action - https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ssm.html#SSM.Client.delete_parameter\r\n\r\n**Describe alternatives you've considered**\r\nWe can write out own lambdas and trigger them via custodian policy but that would require managing a seperate script and process\r\n\r\n**Additional context**\r\nThanks for the help!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5813", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5813/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5813/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5813/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5813", "id": 627097557, "node_id": "MDU6SXNzdWU2MjcwOTc1NTc=", "number": 5813, "title": "Does --dry-run always exit with code 2?", "user": {"login": "migueleliasweb", "id": 1608212, "node_id": "MDQ6VXNlcjE2MDgyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1608212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/migueleliasweb", "html_url": "https://github.com/migueleliasweb", "followers_url": "https://api.github.com/users/migueleliasweb/followers", "following_url": "https://api.github.com/users/migueleliasweb/following{/other_user}", "gists_url": "https://api.github.com/users/migueleliasweb/gists{/gist_id}", "starred_url": "https://api.github.com/users/migueleliasweb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/migueleliasweb/subscriptions", "organizations_url": "https://api.github.com/users/migueleliasweb/orgs", "repos_url": "https://api.github.com/users/migueleliasweb/repos", "events_url": "https://api.github.com/users/migueleliasweb/events{/privacy}", "received_events_url": "https://api.github.com/users/migueleliasweb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-29T08:31:53Z", "updated_at": "2020-05-29T14:15:21Z", "closed_at": "2020-05-29T11:33:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been testing cloud custodian for a little bit and I found that every time I add `--dry-run` to the command, it exits with code 2.\r\n\r\nThis has caused me a couple of hours of head scratching as I check if  the run was successful with the return code. \r\n\r\nIs this an intended behaviour? If so, I couldn't find any docs about it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5812", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5812/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5812/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5812/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5812", "id": 626855851, "node_id": "MDU6SXNzdWU2MjY4NTU4NTE=", "number": 5812, "title": "Filtering elastic IP addresses that do not have AllocationId causing stack trace", "user": {"login": "rafe-delphix", "id": 19230780, "node_id": "MDQ6VXNlcjE5MjMwNzgw", "avatar_url": "https://avatars1.githubusercontent.com/u/19230780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafe-delphix", "html_url": "https://github.com/rafe-delphix", "followers_url": "https://api.github.com/users/rafe-delphix/followers", "following_url": "https://api.github.com/users/rafe-delphix/following{/other_user}", "gists_url": "https://api.github.com/users/rafe-delphix/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafe-delphix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafe-delphix/subscriptions", "organizations_url": "https://api.github.com/users/rafe-delphix/orgs", "repos_url": "https://api.github.com/users/rafe-delphix/repos", "events_url": "https://api.github.com/users/rafe-delphix/events{/privacy}", "received_events_url": "https://api.github.com/users/rafe-delphix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}, {"id": 334062496, "node_id": "MDU6TGFiZWwzMzQwNjI0OTY=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/wontfix", "name": "kind/wontfix", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-28T22:27:38Z", "updated_at": "2020-06-01T21:50:55Z", "closed_at": "2020-05-29T00:28:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThere are some elastic IP addresses that do not have allocation IDs. This may be because they are EC2 classic instances and/or elastic IP addresses. The presence of these elastic IP addresses will cause an unhandled KeyError to occur during query.\r\n\r\n**To Reproduce**\r\n\r\nRun cloud custodian against an AWS account or region that has an elastic IP address that does not have an allocation ID.\r\n\r\n**Expected behavior**\r\n\r\nIt is expected that elastic IP addresses that do not have allocation IDs can be included in part of a c7n policy. The presence of these elastic IP addresses should not cause an unhandled KeyError.\r\n\r\n**Background (please complete the following information):**\r\n - OS: Lambda\r\n - Python Version: 3.8\r\n - Custodian Version: 0.9.2\r\n - Tool Version: N/A\r\n - Cloud Provider: AWS\r\n - Policy:\r\n```yaml\r\n#\r\n# Copyright (c) 2019, 2020 by Delphix. All rights reserved.\r\n#\r\n#\r\n# This policy releases Elastic IPs that match the following criteria:\r\n#\r\n# - Not all mandatory tags are present (Owner / Project / Expiration / CostCenter)\r\n# - Not in use (not attached)\r\n\r\npolicies:\r\n  - name: delete-noncompliant-elastic-ips\r\n    comment: Release Elastic IPs not related to dcenter and not used\r\n    resource: network-addr\r\n    mode:\r\n      type: periodic\r\n      schedule: \"cron(57 * * * ? *)\"\r\n      role: arn:aws:iam::{account_id}:role/CloudCustodian\r\n    filters:\r\n      # Only elastic-ips with missing mandatory tags are included\r\n      - or:\r\n        - \"tag:dlpx:Owner\": absent\r\n        - \"tag:dlpx:Project\": absent\r\n        - \"tag:dlpx:Expiration\": absent\r\n        - \"tag:dlpx:CostCenter\": absent\r\n    actions:\r\n#     - type: release\r\n        # Only release unattached elastic IPs (https://cloudcustodian.io/docs/aws/resources/network-addr.html#release)\r\n#       force: False\r\n     - type: notify\r\n       template: delphix.html\r\n       template_format: 'html'\r\n       priority_header: '5'\r\n       violation_desc: \"The following Elastic IPs didn't have the mandatory tags\"\r\n       action_desc: \"they were released\"\r\n       subject: \"DRY-RUN Policy Report: Release Elastic IPs with missing tags on {{ account }} ({{ account_id }}) - {{ region }}\"\r\n       to:\r\n         - <excluded>\r\n         - <excluded>\r\n       transport:\r\n         type: sqs\r\n         queue: \"{mailer_queue}\"\r\n```\r\n - Traceback:\r\n\r\n```\r\n[ERROR] KeyError: 'AllocationId'\r\nTraceback (most recent call last):\r\n  File \"/var/task/custodian_policy.py\", line 4, in run\r\n    return handler.dispatch_event(event, context)\r\n  File \"/var/task/c7n/handler.py\", line 176, in dispatch_event\r\n    p.push(event, context)\r\n  File \"/var/task/c7n/policy.py\", line 1126, in push\r\n    return mode.run(event, lambda_ctx)\r\n  File \"/var/task/c7n/policy.py\", line 532, in run\r\n    return PullMode.run(self)\r\n  File \"/var/task/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/var/task/c7n/query.py\", line 484, in resources\r\n    resources = self.filter_resources(resources)\r\n  File \"/var/task/c7n/manager.py\", line 121, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/var/task/c7n/filters/core.py\", line 289, in process\r\n    return self.process_set(resources, event)\r\n  File \"/var/task/c7n/filters/core.py\", line 306, in process_set\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\n  File \"/var/task/c7n/filters/core.py\", line 306, in <dictcomp>\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\n\r\n```\r\n - `custodian version --debug` output\r\n$ custodian version --debug\r\n```\r\nPlease copy/paste the following info along with any bug reports:\r\n\r\nCustodian:   0.9.2\r\nPython:      3.6.8 (v3.6.8:3c6b436a57, Dec 24 2018, 02:04:31)\r\n             [GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='rkaplan-mbpro.lan', release='18.7.0', version='Darwin Kernel Version 18.7.0: Mon Feb 10 21:08:45 PST 2020; root:xnu-4903.278.28~1/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.13.14\r\nbotocore==1.16.14\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.0\r\njmespath==0.10.0\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==46.4.0\r\nsix==1.14.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n**Additional context**\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5811", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5811/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5811/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5811/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5811", "id": 626526162, "node_id": "MDU6SXNzdWU2MjY1MjYxNjI=", "number": 5811, "title": "azure - container-host - c7n.exceptions.InvalidOutputConfig", "user": {"login": "bramvdklinkenberg", "id": 10193236, "node_id": "MDQ6VXNlcjEwMTkzMjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/10193236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bramvdklinkenberg", "html_url": "https://github.com/bramvdklinkenberg", "followers_url": "https://api.github.com/users/bramvdklinkenberg/followers", "following_url": "https://api.github.com/users/bramvdklinkenberg/following{/other_user}", "gists_url": "https://api.github.com/users/bramvdklinkenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/bramvdklinkenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bramvdklinkenberg/subscriptions", "organizations_url": "https://api.github.com/users/bramvdklinkenberg/orgs", "repos_url": "https://api.github.com/users/bramvdklinkenberg/repos", "events_url": "https://api.github.com/users/bramvdklinkenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/bramvdklinkenberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 876678619, "node_id": "MDU6TGFiZWw4NzY2Nzg2MTk=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/cloud/azure", "name": "cloud/azure", "color": "bfd4f2", "default": false, "description": ""}, {"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-28T13:51:51Z", "updated_at": "2020-06-19T14:47:29Z", "closed_at": "2020-06-19T00:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI followed this [aci tutorial](https://cloudcustodian.io/docs/azure/configuration/acitutorial.html#azure-configuration-acitutorial), but I keep getting the error:\r\n`c7n.exceptions.InvalidOutputConfig: Invalid c7n.output.blob: https://<sa-account-name>.blob.core.windows.net/c7n-aci-logs`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior: See [tutorial](https://cloudcustodian.io/docs/azure/configuration/acitutorial.html#azure-configuration-acitutorial)\r\n\r\n**Expected behavior**\r\nThe aci tutorial to work\r\n\r\n**Background (please complete the following information):**\r\n - OS: N/A\r\n - Python Version: N/A\r\n - Custodian Version: latest image tag\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: azure\r\n - Policy: [please exclude any account/sensitive information]\r\npolicies:\r\n```\r\n- name: find-c7nstorage\r\n  resource: azure.storage\r\n  mode:\r\n    type: container-periodic\r\n    schedule: \"* * * * *\"  # Run every minute as an example\r\n  filters:\r\n  - type: value\r\n    key: name\r\n    op: eq\r\n    value: <sa-account-name>\r\n```\r\npolicies: \r\n   - name: find-c7nstorage\r\n      resource: azure storage account\r\n```\r\n\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n```\r\nTraceback (most recent call last):\r\n  File \"/src/tools/c7n_azure/c7n_azure/container_host/host.py\", line 408, in run_policy\r\n    policy.push(event, context)\r\n  File \"/src/c7n/policy.py\", line 1126, in push\r\n    return mode.run(event, lambda_ctx)\r\n  File \"/src/tools/c7n_azure/c7n_azure/container_host/modes.py\", line 70, in run\r\n    return PullMode.run(self)\r\n  File \"/src/c7n/policy.py\", line 282, in run\r\n    with self.policy.ctx:\r\n  File \"/src/c7n/ctx.py\", line 83, in __enter__\r\n    self.initialize()\r\n  File \"/src/c7n/ctx.py\", line 57, in initialize\r\n    self.output = blob_outputs.select(self.options.output_dir, self)\r\n  File \"/src/c7n/output.py\", line 62, in select\r\n    raise InvalidOutputConfig(\"Invalid %s: %s\" % (\r\nc7n.exceptions.InvalidOutputConfig: Invalid c7n.output.blob: https://sa-account-name.blob.core.windows.net/c7n-aci-logs\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5810", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5810/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5810/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5810/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5810", "id": 626423757, "node_id": "MDU6SXNzdWU2MjY0MjM3NTc=", "number": 5810, "title": "ci - failures on osx", "user": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T11:10:32Z", "updated_at": "2020-05-28T12:06:08Z", "closed_at": "2020-05-28T12:06:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "ci has been consistently failing on osx for the last 16 hrs.\r\nsymptom ~ tox gets a exit code 2 running pytest which implies a missing binary.\r\n\r\nroot cause is unclear, presumption is change to the build environment (frozen depset).\r\ndepset upgrade (build cache invalidation) didn't resolve.\r\n\r\nto unblock ci, i'm going to disable osx in ci and remove it as a required status check for prs till root cause can be addressed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5809", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5809/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5809/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5809/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5809", "id": 626281638, "node_id": "MDU6SXNzdWU2MjYyODE2Mzg=", "number": 5809, "title": "EC2 Keypairs now supports tagging", "user": {"login": "KVInventoR", "id": 9679368, "node_id": "MDQ6VXNlcjk2NzkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9679368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KVInventoR", "html_url": "https://github.com/KVInventoR", "followers_url": "https://api.github.com/users/KVInventoR/followers", "following_url": "https://api.github.com/users/KVInventoR/following{/other_user}", "gists_url": "https://api.github.com/users/KVInventoR/gists{/gist_id}", "starred_url": "https://api.github.com/users/KVInventoR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KVInventoR/subscriptions", "organizations_url": "https://api.github.com/users/KVInventoR/orgs", "repos_url": "https://api.github.com/users/KVInventoR/repos", "events_url": "https://api.github.com/users/KVInventoR/events{/privacy}", "received_events_url": "https://api.github.com/users/KVInventoR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-28T07:26:48Z", "updated_at": "2020-06-23T12:53:31Z", "closed_at": "2020-06-23T12:53:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since 2020-04-16 AWS added support tags for ec2 keypairs, but looks like CC doesn't have this feature.\r\nhttps://awsapichanges.info/archive/changes/20d670-ec2.html\r\n\r\nCould you please turn on tags for ec2 keypairs resource?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5805", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5805/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5805/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5805/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5805", "id": 625980289, "node_id": "MDU6SXNzdWU2MjU5ODAyODk=", "number": 5805, "title": "Codecommit and Codepipeline missing tag filters and actions in 0.9.2.0", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-27T19:42:31Z", "updated_at": "2020-05-28T18:41:54Z", "closed_at": "2020-05-28T18:41:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nCodecommit and codepipeline tagging was added per the release notes but it doesn't come up in the schema when you do a custodian schema codecommit or codepipeline\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n      custodian schema codecommit or codepipeline\r\n**Expected behavior**\r\n      Expecting to see the marked-for-op filter and tag and mark-for-op actions avaialble for the 2 resources\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15] Ubuntu v20\r\n - Python Version: [e.g. python 3.8.1] 3.8\r\n - Custodian Version: [e.g. 0.8.46.1]  0.9.2.0\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: [e.g. gcp, aws, azure]  aws\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\npolicies: \r\n   - name: check-buckets\r\n      resource: aws.s3\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5799", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5799/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5799/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5799/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5799", "id": 625152208, "node_id": "MDU6SXNzdWU2MjUxNTIyMDg=", "number": 5799, "title": "AWS Config - type: config-compliance not working ", "user": {"login": "manitmalik", "id": 36078690, "node_id": "MDQ6VXNlcjM2MDc4Njkw", "avatar_url": "https://avatars1.githubusercontent.com/u/36078690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manitmalik", "html_url": "https://github.com/manitmalik", "followers_url": "https://api.github.com/users/manitmalik/followers", "following_url": "https://api.github.com/users/manitmalik/following{/other_user}", "gists_url": "https://api.github.com/users/manitmalik/gists{/gist_id}", "starred_url": "https://api.github.com/users/manitmalik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manitmalik/subscriptions", "organizations_url": "https://api.github.com/users/manitmalik/orgs", "repos_url": "https://api.github.com/users/manitmalik/repos", "events_url": "https://api.github.com/users/manitmalik/events{/privacy}", "received_events_url": "https://api.github.com/users/manitmalik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T19:50:25Z", "updated_at": "2020-05-28T13:09:32Z", "closed_at": "2020-05-28T13:09:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use Case: Use the AWS Config rule of security hub for filtering the non-compliant resources. \r\n\r\nDescription or Steps to reproduce \r\n1) Identify the config rule name via security hub \r\n2) Create the policy using the config rule name and verify the results of the config rule via policy and security hub match each other. \r\n\r\nPolicy sample : \r\npolicies:\r\n#This policy is to mark the IAM users who has keys active and not being used from more than 80 days\r\n- name: iam-user-remediate-non-compliant\r\n  resource: aws.iam-user\r\n  filters:\r\n  - type: config-compliance\r\n    rules: [securityhub-iam-user-unused-credentials-check-nv6rb]\r\n    states: [NON_COMPLIANT]\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5795", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5795/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5795/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5795/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5795", "id": 623522340, "node_id": "MDU6SXNzdWU2MjM1MjIzNDA=", "number": 5795, "title": "Reporting on Total Number of Resources", "user": {"login": "metaldart", "id": 2472113, "node_id": "MDQ6VXNlcjI0NzIxMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2472113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metaldart", "html_url": "https://github.com/metaldart", "followers_url": "https://api.github.com/users/metaldart/followers", "following_url": "https://api.github.com/users/metaldart/following{/other_user}", "gists_url": "https://api.github.com/users/metaldart/gists{/gist_id}", "starred_url": "https://api.github.com/users/metaldart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metaldart/subscriptions", "organizations_url": "https://api.github.com/users/metaldart/orgs", "repos_url": "https://api.github.com/users/metaldart/repos", "events_url": "https://api.github.com/users/metaldart/events{/privacy}", "received_events_url": "https://api.github.com/users/metaldart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T23:42:34Z", "updated_at": "2020-05-24T12:45:22Z", "closed_at": "2020-05-24T12:45:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "**A clear and concise description of what your trying to do, as well as the underlying use case.**\r\n\r\nI am trying to write a cloudcustodian script that will achieve some action if the total number of resources exceed some arbitrary number\r\n\r\nSo for example, if the number of EC2 instances is over N, number of security groups is over X, number of RDS instances is over Y, etc. I have used jq and I know I could get the length of the top level object to find the size, but I do not see how to achieve this in CloudCustodian. Any insight is welcome, thank you!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5793", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5793/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5793/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5793/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5793", "id": 623276117, "node_id": "MDU6SXNzdWU2MjMyNzYxMTc=", "number": 5793, "title": "aws.elasticsearch Error Scanning More Than 5 domains", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-22T15:09:37Z", "updated_at": "2020-05-26T18:35:53Z", "closed_at": "2020-05-26T18:30:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running any elasticsearch policy on an account region with more than 5 elasticsearch domains the policy now bombs out with the error - ```error:An error occurred (ValidationException) when calling the DescribeElasticsearchDomains operation: Please provide a maximum of 5 Elasticsearch domain names to describe.```\r\n\r\n**To Reproduce**\r\nCreate 6 es domains and run an elasticsearch c7n policy, error will occur\r\n\r\n**Expected behavior**\r\nIt should chunk the calls into domains of 5 or less\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: Ubuntu v20\r\n - Python Version: 3.8\r\n - Custodian Version: 0.9.2.0\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n - Policy:  any policy which queries ES\r\n - Traceback: \r\n```\r\n[ERROR]\t2020-05-22T14:51:25.978Z\t9ef7929b-b494-434e-9f9f-dfdfdfdfdfdfd Error while executing policy\r\nTraceback (most recent call last):\r\n  File \"/var/task/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/var/task/c7n/query.py\", line 466, in resources\r\n    resources = self.augment(resources)\r\n  File \"/var/task/c7n/query.py\", line 521, in augment\r\n    return self.source.augment(resources)\r\n  File \"/var/task/c7n/resources/elasticsearch.py\", line 48, in augment\r\n    return _augment(domains)\r\n  File \"/var/task/c7n/resources/elasticsearch.py\", line 39, in _augment\r\n    resources = self.manager.retry(\r\n  File \"/var/task/c7n/utils.py\", line 373, in _retry\r\n    return func(*args, **kw)\r\n  File \"/var/task/botocore/client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/var/task/botocore/client.py\", line 635, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.errorfactory.ValidationException: An error occurred (ValidationException) when calling the DescribeElasticsearchDomains operation: Please provide a maximum of 5 Elasticsearch domain names to describe.\r\n```\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nSeems to be introduced with 0.9.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5785", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5785/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5785/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5785/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5785", "id": 621576157, "node_id": "MDU6SXNzdWU2MjE1NzYxNTc=", "number": 5785, "title": "cache-cluster event:create exist or not?", "user": {"login": "umitseremet", "id": 24855053, "node_id": "MDQ6VXNlcjI0ODU1MDUz", "avatar_url": "https://avatars1.githubusercontent.com/u/24855053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umitseremet", "html_url": "https://github.com/umitseremet", "followers_url": "https://api.github.com/users/umitseremet/followers", "following_url": "https://api.github.com/users/umitseremet/following{/other_user}", "gists_url": "https://api.github.com/users/umitseremet/gists{/gist_id}", "starred_url": "https://api.github.com/users/umitseremet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umitseremet/subscriptions", "organizations_url": "https://api.github.com/users/umitseremet/orgs", "repos_url": "https://api.github.com/users/umitseremet/repos", "events_url": "https://api.github.com/users/umitseremet/events{/privacy}", "received_events_url": "https://api.github.com/users/umitseremet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-20T08:42:54Z", "updated_at": "2020-05-21T09:12:00Z", "closed_at": "2020-05-20T20:00:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI want to implement Cloud Custodian for some functionalities, like\r\n\r\n- I want to be alerted  if someone creates an Elasticache\r\n```\r\nevents:\r\n       - CreateCacheCluster????\r\n```\r\n\r\n- and I want auto-tagging for owner after the creation\r\n\r\n```\r\n    actions:\r\n      - type: auto-tag-user???\r\n        tag: onwer????\r\n        principal_id_tag: ownerID????\r\n```\r\n\r\nAre these functions enabled for Elasticache?\r\nI could not see samples in https://github.com/cloud-custodian/cloud-custodian/blob/master/c7n/resources/elasticache.py about them\r\n\r\nThanks...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5780", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5780/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5780/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5780/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5780", "id": 620575004, "node_id": "MDU6SXNzdWU2MjA1NzUwMDQ=", "number": 5780, "title": "SecurityHub finding doesn't work for rds-cluster-snapshot resource in config-rule mode", "user": {"login": "darrendao", "id": 636771, "node_id": "MDQ6VXNlcjYzNjc3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/636771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrendao", "html_url": "https://github.com/darrendao", "followers_url": "https://api.github.com/users/darrendao/followers", "following_url": "https://api.github.com/users/darrendao/following{/other_user}", "gists_url": "https://api.github.com/users/darrendao/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrendao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrendao/subscriptions", "organizations_url": "https://api.github.com/users/darrendao/orgs", "repos_url": "https://api.github.com/users/darrendao/repos", "events_url": "https://api.github.com/users/darrendao/events{/privacy}", "received_events_url": "https://api.github.com/users/darrendao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T23:51:48Z", "updated_at": "2020-05-28T12:08:33Z", "closed_at": "2020-05-28T12:08:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nSecurityHub post-finding doesn't work on rds-cluster-snapshot resource in config-rule policy mode. This is because the id/name/arn for rds-cluster-snapshot is slightly different when coming from AWS Config vs when doing Describe\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n* Set up a policy to run in config-rule mode for rds-cluster-snapshot resource, filter on StorageEncrypted=false with action = post-finding to security hub.\r\n* For example:\r\n```\r\npolicies:\r\n  - name: ddao-rds-cluster-snapshot\r\n    resource: rds-cluster-snapshot\r\n    mode:\r\n       type: config-rule\r\n       timeout: 300\r\n       role: arn:aws:iam::123456789012:role/CustodianRole\r\n    filters:\r\n      - type: value\r\n        key: \"StorageEncrypted\"\r\n        value: false\r\n    action:\r\n      - type: post-finding\r\n        severity_normalized: 30 \r\n        types:\r\n          - \"Software and Configuration Checks/AWS Security Best Practices\"\r\n```\r\n* Create a snapshot for an encrypted RDS DB cluster\r\n\r\n**Expected behavior**\r\nA finding should be sent to security hub regarding the unencrypted RDS cluster snapshot\r\n\r\n**Actual behavior**\r\nCloud Custodian threw the following error:\r\n```\r\n{\r\n  \"errorMessage\": \"'DBClusterSnapshotIdentifier'\",\r\n  \"errorType\": \"KeyError\",\r\n  \"stackTrace\": [\r\n    \"  File \\\"/var/task/custodian_policy.py\\\", line 6, in run\\n    return handler.dispatch_event(event, context)\\n\",\r\n    \"  File \\\"/var/task/c7n/handler.py\\\", line 176, in dispatch_event\\n    p.push(event, context)\\n\",\r\n    \"  File \\\"/var/task/c7n/policy.py\\\", line 1130, in push\\n    return mode.run(event, lambda_ctx)\\n\",\r\n    \"  File \\\"/var/task/c7n/policy.py\\\", line 854, in run\\n    resources = super(ConfigRuleMode, self).run(event, lambda_context)\\n\",\r\n    \"  File \\\"/var/task/c7n/policy.py\\\", line 461, in run\\n    return self.run_resource_set(event, resources)\\n\",\r\n    \"  File \\\"/var/task/c7n/policy.py\\\", line 491, in run_resource_set\\n    results = action.process(resources)\\n\",\r\n    \"  File \\\"/var/task/c7n/resources/securityhub.py\\\", line 419, in process\\n    finding = self.get_finding(\\n\",\r\n    \"  File \\\"/var/task/c7n/resources/securityhub.py\\\", line 467, in get_finding\\n    [r[model.id] for r in resources]))).encode(\\n\",\r\n    \"  File \\\"/var/task/c7n/resources/securityhub.py\\\", line 467, in <listcomp>\\n    [r[model.id] for r in resources]))).encode(\\n\"\r\n  ]\r\n}\r\n```\r\n\r\n**Additional context**\r\nI did some digging into the code and here's the problem: For rds-cluster-snapshot, we have its name and id set to `DBClusterSnapshotIdentifier ` (https://github.com/cloud-custodian/cloud-custodian/blob/05b7d2b95e9f879b2d94b644160630f0c04e923e/c7n/resources/rdscluster.py#L375), but when the policy is running in config-rule mode, AWS Config has the resource name/id as `dbclusterSnapshotIdentifier `, which then gets turned into `DbclusterSnapshotIdentifier` when we do `resolve_resource`. Then, in the get_finding method of securityhub, we expect the dictionary to have `DBClusterSnapshotIdentifier` as the key, but it's not there so things blow up. https://github.com/cloud-custodian/cloud-custodian/blob/05b7d2b95e9f879b2d94b644160630f0c04e923e/c7n/resources/securityhub.py#L466\r\n\r\nI was thinking of submitting a PR to do a quick fix like this\r\n```\r\n@resources.register('rds-cluster-snapshot')\r\nclass RDSClusterSnapshot(QueryResourceManager):\r\n    \"\"\"Resource manager for RDS cluster snapshots.\r\n    \"\"\"\r\n\r\n    class resource_type(TypeInfo):\r\n        service = 'rds'\r\n        arn_type = 'cluster-snapshot'\r\n        arn_separator = ':'\r\n        arn = 'DBClusterSnapshotArn'\r\n        enum_spec = (\r\n            'describe_db_cluster_snapshots', 'DBClusterSnapshots', None)\r\n        name = id = 'DBClusterSnapshotIdentifier'\r\n        date = 'SnapshotCreateTime'\r\n        universal_tagging = object()\r\n        config_type = 'AWS::RDS::DBClusterSnapshot'\r\n        permissions_enum = ('rds:DescribeDBClusterSnapshots',)\r\n\r\n    source_mapping = {\r\n        'describe': DescribeClusterSnapshot,\r\n        'config': ConfigSource\r\n    }\r\n\r\n    def get_source(self, source_type):\r\n        # Fixing id, name and arn of the resource for when it comes from AWS Config\r\n        if source_type == 'config':\r\n            self.resource_type.id = 'DbclusterSnapshotIdentifier'\r\n            self.resource_type.name = 'DbclusterSnapshotIdentifier'\r\n            self.resource_type.arn = 'DbclusterSnapshotArn'\r\n        return super().get_source(source_type)\r\n```\r\n\r\nbut I think the problem might be there in other resources as well and was thinking if we need to have a more generic or standard fix. Ultimately, the problem is with AWS Config having different conventions for naming things. I wonder if the proper fix is to do something like what you have started doing with config_type vs cfn_type, meaning we now have config_id, config_name, config_arn vs the regular id, name and arn.\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15]\r\n - Python Version: [e.g. python 3.8.1]\r\n - Custodian Version: latest from master\r\n - Cloud Provider: aws\r\n - Policy: See above\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n - `custodian version --debug` output\r\n```\r\n$ custodian version --debug\r\nCustodian:   0.8.46.1\r\nPython:      3.7.6 (default, Dec 30 2019, 19:38:36) \r\n             [Clang 10.0.0 (clang-1000.11.45.5)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='SDGL1607c2b92.local', release='17.7.0', version='Darwin Kernel Version 17.7.0: Sun Dec  1 19:19:56 PST 2019; root:xnu-4570.71.63~1/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  False\r\nDocker: False\r\nPYTHONPATH: \r\n[            '/Users/ddao/sandbox/c7n/custodian/bin',\r\n             '/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python37.zip',\r\n             '/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7',\r\n             '/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload',\r\n             '/Users/ddao/sandbox/c7n/custodian/lib/python3.7/site-packages']\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5779", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5779/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5779/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5779/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5779", "id": 620383906, "node_id": "MDU6SXNzdWU2MjAzODM5MDY=", "number": 5779, "title": "DynamoDB Table Not Filtering on SSEDescription Correctly", "user": {"login": "bostrowski13", "id": 19539734, "node_id": "MDQ6VXNlcjE5NTM5NzM0", "avatar_url": "https://avatars0.githubusercontent.com/u/19539734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bostrowski13", "html_url": "https://github.com/bostrowski13", "followers_url": "https://api.github.com/users/bostrowski13/followers", "following_url": "https://api.github.com/users/bostrowski13/following{/other_user}", "gists_url": "https://api.github.com/users/bostrowski13/gists{/gist_id}", "starred_url": "https://api.github.com/users/bostrowski13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bostrowski13/subscriptions", "organizations_url": "https://api.github.com/users/bostrowski13/orgs", "repos_url": "https://api.github.com/users/bostrowski13/repos", "events_url": "https://api.github.com/users/bostrowski13/events{/privacy}", "received_events_url": "https://api.github.com/users/bostrowski13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-18T17:33:25Z", "updated_at": "2020-05-20T19:47:13Z", "closed_at": "2020-05-20T19:47:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm using a periodic check via lambda to try to find DynamoDB Tables that don't have Encryption set up correctly or at all.  When running the policy below, it is still returning policies that are configured as desired.  This could be my misunderstanding of how filtering works.  I've also gone around with several iterations of the filter which seems to consistently not filter as desired.\r\n\r\n**To Reproduce**\r\nRun the following policy below.\r\n\r\n**Expected behavior**\r\nIt filters tables that don't meet the filter.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: LInux\r\n - Python Version: 3.7.x\r\n - Custodian Version: 0.9.1\r\n - Cloud Provider: aws\r\n - Policy: \r\n```yaml\r\npolicies: \r\npolicies:\r\n  - name: dynamodb-table-encryption\r\n    resource: dynamodb-table\r\n    mode:\r\n      type: periodic\r\n      role: my_role\r\n      schedule: \"rate(12 hours)\"\r\n    filters:\r\n      - and:\r\n        - not:\r\n          - type: value\r\n            key: SSEDescription.KMSMasterKeyArn\r\n            value: empty\r\n        - and:\r\n          - type: value\r\n            key: SSEDescription.Status\r\n            value: \"ENABLED\"\r\n          - type: value\r\n            key: SSEDescription.SSEType\r\n            value: \"KMS\"\r\n```\r\nI've also tried this as the filter...\r\n```\r\n    filters:\r\n      - and:\r\n        - not:\r\n          - \"SSEDescription.KMSMasterKeyArn\": empty\r\n        - or:\r\n          - \"SSEDescription.Status\": ENABLED\r\n          - \"SSEDescription.SSEType\": KMS\r\n```\r\n\r\nI am also seeing this in the results that are returned via the policy.  I've included snipppets of the resources.json that are returned for an example resource.\r\n```\r\n    \"SSEDescription\": {\r\n      \"Status\": \"ENABLED\",\r\n      \"SSEType\": \"KMS\",\r\n      \"KMSMasterKeyArn\": \"MY_ARN\"\r\n    },\r\n```\r\n\r\nand the matched filters....\r\n```\r\n    \"c7n:MatchedFilters\": [\r\n      \"SSEDescription.Status\",\r\n      \"SSEDescription.SSEType\"\r\n    ]\r\n```\r\n\r\n**Additional context**\r\nI realize i might have a few \"not\" or \"and\" statements off in the above example, but i've tried what I think is the right combo to no avail.\r\n\r\nIs this a bug or am I just missing something?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5773", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5773/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5773/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5773/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5773", "id": 619840609, "node_id": "MDU6SXNzdWU2MTk4NDA2MDk=", "number": 5773, "title": "c7n-guardian report only checks first page of member accounts", "user": {"login": "rdkls", "id": 1166229, "node_id": "MDQ6VXNlcjExNjYyMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1166229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdkls", "html_url": "https://github.com/rdkls", "followers_url": "https://api.github.com/users/rdkls/followers", "following_url": "https://api.github.com/users/rdkls/following{/other_user}", "gists_url": "https://api.github.com/users/rdkls/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdkls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdkls/subscriptions", "organizations_url": "https://api.github.com/users/rdkls/orgs", "repos_url": "https://api.github.com/users/rdkls/repos", "events_url": "https://api.github.com/users/rdkls/events{/privacy}", "received_events_url": "https://api.github.com/users/rdkls/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-18T01:02:05Z", "updated_at": "2020-05-26T19:40:10Z", "closed_at": "2020-05-26T19:40:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen querying member accounts, c7n-guardian report incorrectly reports accounts which are members, as NOT being members.\r\n\r\nThis is due to calling boto3 organization client list_members(DetectorId='xx').get('Members')\r\nand not paginating.\r\nI plan on fixing this and submitting PR today - this issue for traceability & discussion.\r\n\r\n**To Reproduce**\r\nc7n-guardian report -c ./accounts.yml --master 1212121212\r\n\r\n**Expected behavior**\r\nAll accounts that are members show as such\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSX 10.15.4\r\n - Python Version: python 3.7.3\r\n - Custodian Version: 0.9.1\r\n - Cloud Provider: AWS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5772", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5772/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5772/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5772/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5772", "id": 619557934, "node_id": "MDU6SXNzdWU2MTk1NTc5MzQ=", "number": 5772, "title": "notify should include the execution trigger of the lambda", "user": {"login": "nitrocode", "id": 7775707, "node_id": "MDQ6VXNlcjc3NzU3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrocode", "html_url": "https://github.com/nitrocode", "followers_url": "https://api.github.com/users/nitrocode/followers", "following_url": "https://api.github.com/users/nitrocode/following{/other_user}", "gists_url": "https://api.github.com/users/nitrocode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrocode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrocode/subscriptions", "organizations_url": "https://api.github.com/users/nitrocode/orgs", "repos_url": "https://api.github.com/users/nitrocode/repos", "events_url": "https://api.github.com/users/nitrocode/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrocode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-16T21:24:08Z", "updated_at": "2020-05-18T10:10:33Z", "closed_at": "2020-05-18T10:10:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'd like to be able to differentiate between an event triggered by a cloudwatch cron and by a person manually running a lambda function. At the moment, if either triggers the lambda, there is no way to know who triggered it. It would be nice to know so it can be included directly in Slack.\r\n\r\n**Describe the solution you'd like**\r\nIf it's possible, include what triggered the lambda directly in the SQS message, so the key can be reused within the jinja2 templates for slack, email, etc.\r\n\r\n**Describe alternatives you've considered**\r\n\u00af\\_(\u30c4)_/\u00af\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5768", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5768/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5768/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5768/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5768", "id": 618914031, "node_id": "MDU6SXNzdWU2MTg5MTQwMzE=", "number": 5768, "title": "How to find buckets with no objetcs", "user": {"login": "karhub90", "id": 65401159, "node_id": "MDQ6VXNlcjY1NDAxMTU5", "avatar_url": "https://avatars0.githubusercontent.com/u/65401159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karhub90", "html_url": "https://github.com/karhub90", "followers_url": "https://api.github.com/users/karhub90/followers", "following_url": "https://api.github.com/users/karhub90/following{/other_user}", "gists_url": "https://api.github.com/users/karhub90/gists{/gist_id}", "starred_url": "https://api.github.com/users/karhub90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karhub90/subscriptions", "organizations_url": "https://api.github.com/users/karhub90/orgs", "repos_url": "https://api.github.com/users/karhub90/repos", "events_url": "https://api.github.com/users/karhub90/events{/privacy}", "received_events_url": "https://api.github.com/users/karhub90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T11:56:31Z", "updated_at": "2020-05-15T20:12:48Z", "closed_at": "2020-05-15T20:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am relatively new to cloud custodian and would like to know if there is a way to find out s3 buckets with no objects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5763", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5763/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5763/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5763/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5763", "id": 618332702, "node_id": "MDU6SXNzdWU2MTgzMzI3MDI=", "number": 5763, "title": "aws.s3 - CreationDate is unavailable in cloudtrail policies", "user": {"login": "tjstansell", "id": 5217454, "node_id": "MDQ6VXNlcjUyMTc0NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5217454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjstansell", "html_url": "https://github.com/tjstansell", "followers_url": "https://api.github.com/users/tjstansell/followers", "following_url": "https://api.github.com/users/tjstansell/following{/other_user}", "gists_url": "https://api.github.com/users/tjstansell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjstansell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjstansell/subscriptions", "organizations_url": "https://api.github.com/users/tjstansell/orgs", "repos_url": "https://api.github.com/users/tjstansell/repos", "events_url": "https://api.github.com/users/tjstansell/events{/privacy}", "received_events_url": "https://api.github.com/users/tjstansell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T15:40:08Z", "updated_at": "2020-05-14T22:16:54Z", "closed_at": "2020-05-14T22:16:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe `CreationDate` field is not available for s3 cloudtrail policies and therefore cannot include filters depending on the age of the bucket.  Because the data is missing, the filter will not behave as expected and will simply never match.\r\n\r\nFiltering based on age `lt` 1 day:\r\n```\r\n[DEBUG]\t2020-05-14T15:29:08.869Z\t8c3d8f81-3b5b-4d44-81ac-756c81a7dab0 Filtered from 1 to 0 s3\r\n```\r\nFiltering based on age `gt` 1 day:\r\n```\r\n[DEBUG]\t2020-05-14T15:30:22.160Z\teac7440b-60ad-487e-987e-cfe5f56501c0 Filtered from 1 to 0 s3\r\n```\r\nThis also affects the reporting abilities during notifications... as we cannot report on when the bucket was created.\r\n\r\nThis looks directly related to #3909\r\n\r\n**To Reproduce**\r\nProvision any cloudtrail policy for s3 and try to use the `CreationDate` field.\r\n\r\n**Expected behavior**\r\n`CreationDate` should be available during event/lambda policies.\r\n\r\n**Background (please complete the following information):**\r\n - Custodian Version: 0.9.1\r\n - Policy:\r\n```yaml\r\npolicies: \r\n  - name: test-s3-age\r\n    resource: s3\r\n    mode:\r\n      type: cloudtrail\r\n      events:\r\n        - source: s3.amazonaws.com\r\n          event: PutBucketTagging\r\n          ids: requestParameters.bucketName\r\n      role: *lambda-role\r\n      tags: *lambda-tags\r\n    filters:\r\n      - type: value\r\n        key: CreationDate\r\n        op: gt\r\n        value_type: age\r\n        value: 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5761", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5761/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5761/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5761/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5761", "id": 618270786, "node_id": "MDU6SXNzdWU2MTgyNzA3ODY=", "number": 5761, "title": "`aws.elastic-ip.actions.release` swallows IAM permission error?", "user": {"login": "JonGilmore", "id": 7232986, "node_id": "MDQ6VXNlcjcyMzI5ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7232986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonGilmore", "html_url": "https://github.com/JonGilmore", "followers_url": "https://api.github.com/users/JonGilmore/followers", "following_url": "https://api.github.com/users/JonGilmore/following{/other_user}", "gists_url": "https://api.github.com/users/JonGilmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonGilmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonGilmore/subscriptions", "organizations_url": "https://api.github.com/users/JonGilmore/orgs", "repos_url": "https://api.github.com/users/JonGilmore/repos", "events_url": "https://api.github.com/users/JonGilmore/events{/privacy}", "received_events_url": "https://api.github.com/users/JonGilmore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T14:19:29Z", "updated_at": "2020-05-19T16:07:05Z", "closed_at": "2020-05-19T16:07:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nI created a policy to reap unused elastic IP (EIP) addresses, but I forgot to give c7n `ec2:ReleaseAddress` IAM permission. After running the policy (can be found below), it runs and doesn't throw any errors, but isn't able to release the EIP because it doesn't have the appropriate IAM permission. Shouldn't this be thrown as an error in the Lambda logs? \r\n\r\n**To Reproduce**\r\nCreate policy to reap unused EIP, don't give `ec2:ReleaseAddress` IAM permission, run policy\r\n\r\n**Expected behavior**\r\nI would expect an error to be thrown in the lambda logs, so we can capture and [report this from a lambda that captures errors](https://cloudcustodian.io/docs/aws/examples/lambdaerrorsnotify.html)\r\n\r\n**Background (please complete the following information):**\r\n - OS: ubuntu 18.0.4\r\n - Python Version: 3.7.5\r\n - Custodian Version: 0.9.1\r\n - Tool Version: n/a\r\n - Cloud Provider: aws\r\n - Policy: [please exclude any account/sensitive information]\r\n\r\n```yaml\r\nvars:\r\n  notify: &notify\r\n    type: notify\r\n    to:\r\n      - slack://#c7n-alerts\r\n    subject: \"EIP - No Instances Attached - [custodian {{ account }} - {{ region }}]\"\r\n    transport:\r\n      type: sqs\r\n      queue: https://sqs.us-east-2.amazonaws.com/111111111/mailer\r\n      region: us-east-2\r\n  run_mode: &run_mode\r\n    type: periodic\r\n    schedule: \"rate(1 day)\"\r\n    tags:\r\n      app: \"c7n\"\r\n      env: \"tools\"\r\n      team: \"releng\"\r\n      account: \"{account_id}\"\r\n  eip_filters: &eip_filters\r\n    - type: value\r\n      key: InstanceId\r\n      value: absent\r\n    - type: value\r\n      key: AssociationId\r\n      value: absent\r\n\r\npolicies:\r\n  - name: unused-eip-mark\r\n    resource: network-addr\r\n    description: \"Mark any EIP with no instances attached for action in 7 days\"\r\n    filters:\r\n      - \"tag:maid_status_eip\": absent\r\n      - and: *eip_filters\r\n    mode:\r\n      <<: *run_mode\r\n    actions:\r\n      - type: mark-for-op\r\n        tag: maid_status_eip\r\n        days: 1\r\n        op: release\r\n      - <<: *notify\r\n        action_desc: \"Notification in 7 days if these remain orphaned\"\r\n        violation_desc: \"No instances are attached to the following EIP(s)\"\r\n\r\n  - name: unused-eip-unmark-if-in-use\r\n    resource: network-addr\r\n    description: |\r\n      Remove the maid_status_eip tag from any eip which has instances attached\r\n    filters:\r\n      - \"tag:maid_status_eip\": not-null\r\n      - not: *eip_filters\r\n    mode:\r\n      <<: *run_mode\r\n    actions:\r\n      - type: remove-tag\r\n        tags: [maid_status_eip]\r\n\r\n  - name: unused-eip-action\r\n    resource: network-addr\r\n    description: \"Release EIP after 7 days of having no instances\"\r\n    filters:\r\n      - \"tag:maid_status_eip\": not-null\r\n      - type: marked-for-op\r\n        op: release\r\n        tag: maid_status_eip\r\n    mode:\r\n      <<: *run_mode\r\n    actions:\r\n      - type: release\r\n      - <<: *notify\r\n        action_desc: \"EIP released\"\r\n        violation_desc: \"No instances are attached to EIP for over 7 days\"\r\n```\r\n\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\nLambda log:\r\n\r\n```bash\r\n14:04:37\r\nSTART RequestId: uuid Version: $LATEST\r\n14:04:37\r\n[INFO] 2020-05-14T14:04:37.771Z uuid Processing event { \"key1\": \"value1\", \"key2\": \"value2\", \"key3\": \"value3\", \"debug\": true }\r\n14:04:37\r\n[DEBUG] 2020-05-14T14:04:37.771Z uuid Disabling cache\r\n14:04:37\r\n[WARNING] 2020-05-14T14:04:37.771Z uuid Custodian reserves policy lambda tags starting with custodian - policy specifies custodian-info\r\n14:04:37\r\n[DEBUG] 2020-05-14T14:04:37.773Z uuid Storing output with <LogFile file:///tmp/unused-eip-action/custodian-run.log>\r\n14:04:37\r\n[DEBUG] 2020-05-14T14:04:37.811Z uuid Running policy:unused-eip-action resource:network-addr region:us-east-1 c7n:0.9.1\r\n14:04:38\r\n[DEBUG] 2020-05-14T14:04:38.221Z uuid Filtered from 7 to 1 networkaddress\r\n14:04:38\r\n[INFO] 2020-05-14T14:04:38.222Z uuid policy:unused-eip-action resource:network-addr region:us-east-1 count:1 time:0.39\r\n14:04:38\r\n[INFO] 2020-05-14T14:04:38.343Z uuid policy:unused-eip-action action:addressrelease resources:1 execution_time:0.12\r\n14:04:39\r\n[INFO] 2020-05-14T14:04:39.359Z uuid sent message:b39c7995-b7f4-49b6-825e-e883678478d8 policy:unused-eip-action template:default count:1\r\n14:04:39\r\n[INFO] 2020-05-14T14:04:39.360Z uuid policy:unused-eip-action action:notify resources:1 execution_time:1.02\r\n14:04:39\r\n[DEBUG] 2020-05-14T14:04:39.360Z uuid metric:ResourceCount Count:1 policy:unused-eip-action restype:network-addr scope:policy\r\n14:04:39\r\n[DEBUG] 2020-05-14T14:04:39.360Z uuid metric:ApiCalls Count:4 policy:unused-eip-action restype:network-addr\r\n14:04:39\r\nEND RequestId: uuid\r\n14:04:39\r\nREPORT RequestId: uuid Duration: 2323.13 ms Billed Duration: 2400 ms Memory Size: 512 MB Max Memory Used: 94 MB Init Duration: 365.90 ms\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5760", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5760/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5760/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5760/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5760", "id": 618252201, "node_id": "MDU6SXNzdWU2MTgyNTIyMDE=", "number": 5760, "title": "Schema error with `aws.network-addr`", "user": {"login": "JonGilmore", "id": 7232986, "node_id": "MDQ6VXNlcjcyMzI5ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7232986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonGilmore", "html_url": "https://github.com/JonGilmore", "followers_url": "https://api.github.com/users/JonGilmore/followers", "following_url": "https://api.github.com/users/JonGilmore/following{/other_user}", "gists_url": "https://api.github.com/users/JonGilmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonGilmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonGilmore/subscriptions", "organizations_url": "https://api.github.com/users/JonGilmore/orgs", "repos_url": "https://api.github.com/users/JonGilmore/repos", "events_url": "https://api.github.com/users/JonGilmore/events{/privacy}", "received_events_url": "https://api.github.com/users/JonGilmore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}, {"id": 390676843, "node_id": "MDU6TGFiZWwzOTA2NzY4NDM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/priority/P2", "name": "priority/P2", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T13:55:22Z", "updated_at": "2020-05-19T00:51:06Z", "closed_at": "2020-05-19T00:51:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nSchema error with `aws.network-addr`. \r\n\r\n**To Reproduce**\r\nAttempt to get the schema, notice `aws.network-addr` is in the list. Next, try to get the schema for `aws.network-addr`, notice that custodian throws an error.\r\n\r\n```bash\r\n# custodian schema\r\nresources:\r\n... snipped...\r\n- aws.network-acl\r\n- aws.network-addr\r\n- aws.ops-item\r\n...\r\n# custodian schema aws.network-addr\r\n2020-05-14 13:50:11,216: custodian.commands:ERROR aws.network-addr is not a valid resource\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the schema to load.\r\n\r\n**Background (please complete the following information):**\r\n - OS: ubuntu 18.0.4\r\n - Python Version: 3.7.5\r\n - Custodian Version: 0.9.1\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n - `custodian version --debug` output:\r\n\r\n```\r\n# custodian version\r\n0.9.1\r\n(venv) root@ip-10-66-150-45:/opt/stickler# custodian version --debug\r\n\r\nPlease copy/paste the following info along with any bug reports:\r\n\r\nCustodian:   0.9.1\r\nPython:      3.7.5 (default, Nov  7 2019, 10:50:52)\r\n             [GCC 8.3.0]\r\nPlatform:    posix.uname_result(sysname='Linux', nodename='ip-10-66-150-45', release='5.3.0-1017-aws', version='#18~18.04.1-Ubuntu SMP Wed Apr 8 15:12:16 UTC 2020', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.12.47\r\nbotocore==1.15.47\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.0\r\njmespath==0.9.5\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==46.2.0\r\nsix==1.14.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5750", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5750/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5750/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5750/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5750", "id": 616603633, "node_id": "MDU6SXNzdWU2MTY2MDM2MzM=", "number": 5750, "title": "Mailer broken on master", "user": {"login": "jantman", "id": 273454, "node_id": "MDQ6VXNlcjI3MzQ1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/273454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jantman", "html_url": "https://github.com/jantman", "followers_url": "https://api.github.com/users/jantman/followers", "following_url": "https://api.github.com/users/jantman/following{/other_user}", "gists_url": "https://api.github.com/users/jantman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jantman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jantman/subscriptions", "organizations_url": "https://api.github.com/users/jantman/orgs", "repos_url": "https://api.github.com/users/jantman/repos", "events_url": "https://api.github.com/users/jantman/events{/privacy}", "received_events_url": "https://api.github.com/users/jantman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T12:07:14Z", "updated_at": "2020-05-12T14:44:58Z", "closed_at": "2020-05-12T14:44:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nc7n-mailer is broken in current master. It appears that this was caused by changes in #5708, specifically:\r\n\r\n1. ``splunk-sdk`` was added to the mailer dependencies/requirements. I'm not sure why this was done, as ``c7n_mailer.splunk_delivery`` doesn't require that, it just uses ``requests`` to send events to the Splunk HTTP Event Collector (HEC).\r\n2. ``splunk-sdk`` was added to ``CORE_DEPS`` in ``c7n_mailer.deploy``. This raises an exception, as ``splunk-sdk`` is the package name but the module name is ``splunklib``.\r\n\r\n**To Reproduce**\r\n\r\nAttempt to run c7n-mailer:\r\n\r\n```\r\n16:54:00 Traceback (most recent call last):\r\n16:54:00   File \"/usr/local/bin/manheim-c7n-runner\", line 11, in <module>\r\n16:54:00     load_entry_point('manheim-c7n-tools', 'console_scripts', 'manheim-c7n-runner')()\r\n16:54:00   File \"/manheim_c7n_tools/manheim_c7n_tools/runner.py\", line 651, in main\r\n16:54:00     args.ACTION, args.regions, step_names=args.steps, skip_steps=args.skip\r\n16:54:00   File \"/manheim_c7n_tools/manheim_c7n_tools/runner.py\", line 513, in run\r\n16:54:00     self._run_step_in_regions(action, step, regions)\r\n16:54:00   File \"/manheim_c7n_tools/manheim_c7n_tools/runner.py\", line 566, in _run_step_in_regions\r\n16:54:00     step(region_name, region_conf).run()\r\n16:54:00   File \"/manheim_c7n_tools/manheim_c7n_tools/runner.py\", line 337, in run\r\n16:54:00     functools.partial(session_factory, conf)\r\n16:54:00   File \"/manheim_c7n_tools/src/c7n-mailer/tools/c7n_mailer/c7n_mailer/deploy.py\", line 98, in provision\r\n16:54:00     archive = get_archive(config)\r\n16:54:00   File \"/manheim_c7n_tools/src/c7n-mailer/tools/c7n_mailer/c7n_mailer/deploy.py\", line 60, in get_archive\r\n16:54:00     archive = PythonPackageArchive(modules=deps)\r\n16:54:00   File \"/manheim_c7n_tools/src/c7n/c7n/mu.py\", line 84, in __init__\r\n16:54:00     self.add_modules(None, modules)\r\n16:54:00   File \"/manheim_c7n_tools/src/c7n/c7n/mu.py\", line 128, in add_modules\r\n16:54:00     module = importlib.import_module(module_name)\r\n16:54:00   File \"/usr/local/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n16:54:00     return _bootstrap._gcd_import(name[level:], package, level)\r\n16:54:00   File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n16:54:00   File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n16:54:00   File \"<frozen importlib._bootstrap>\", line 965, in _find_and_load_unlocked\r\n16:54:00 ModuleNotFoundError: No module named 'splunk-sdk'\r\n```\r\n\r\nAlternatively, I've added the following unit test to manheim-c7n-tools to catch issues like this:\r\n\r\n```\r\narch = c7n_mailer.deploy.get_archive({'templates_folders': []})\r\nassert isinstance(arch, PythonPackageArchive)\r\nassert arch.size > 0\r\nassert len(arch.get_filenames()) > 0\r\n```\r\n\r\nWhich is currently failing with:\r\n\r\n```\r\nself = <manheim_c7n_tools.tests.test_runner.TestMailerStep object at 0x7f5aeb3111f0>\r\n\r\n    def test_mailer_archive(self):\r\n        \"\"\"\r\n        This is a test of ``c7n_mailer.deploy.get_archive()``. We've had a few\r\n        dependency issues in the past that aren't detected until actually\r\n        deploying mailer and generating the archive (zip) for the Lambda, so\r\n        this attempts to detect those issues.\r\n        \"\"\"\r\n>       arch = get_archive({'templates_folders': []})\r\n\r\nmanheim_c7n_tools/tests/test_runner.py:671: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n.tox/py38/src/c7n-mailer/tools/c7n_mailer/c7n_mailer/deploy.py:60: in get_archive\r\n    archive = PythonPackageArchive(modules=deps)\r\n.tox/py38/src/c7n/c7n/mu.py:84: in __init__\r\n    self.add_modules(None, modules)\r\n.tox/py38/src/c7n/c7n/mu.py:128: in add_modules\r\n    module = importlib.import_module(module_name)\r\n/usr/lib/python3.8/importlib/__init__.py:127: in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n<frozen importlib._bootstrap>:1014: in _gcd_import\r\n    ???\r\n<frozen importlib._bootstrap>:991: in _find_and_load\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nname = 'splunk-sdk', import_ = <function _gcd_import at 0x7f5aeebb6430>\r\n\r\n>   ???\r\nE   ModuleNotFoundError: No module named 'splunk-sdk'\r\n\r\n<frozen importlib._bootstrap>:973: ModuleNotFoundError\r\n```\r\n\r\n**Expected behavior**\r\n\r\nMailer does not throw an exception.\r\n\r\n**Background (please complete the following information):**\r\n\r\nOS- and version-independent.\r\n\r\n**Additional context**\r\n\r\nI'm going to try to work up a PR to fix this, but I've never used poetry before, so it might take a while...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5748", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5748/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5748/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5748/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5748", "id": 616203246, "node_id": "MDU6SXNzdWU2MTYyMDMyNDY=", "number": 5748, "title": "aws - asg.image-age filter fails ", "user": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T21:32:48Z", "updated_at": "2020-05-13T00:33:28Z", "closed_at": "2020-05-13T00:33:28Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nA policy that filters asg based off the image-age is failing  \r\n\r\n**To Reproduce**\r\nDry run the policy shown below\r\n\r\n**Expected behavior**\r\nShould execute the policy completely\r\n\r\n**Background (please complete the following information):**\r\n\r\n - Python Version: 3.7\r\n - Custodian Version: 0.9.1\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\n - name: asg-ami\r\n   resource: asg\r\n    filters:\r\n      - \"tag:custodian\": not-null\r\n      - or:\r\n        - type: image-age\r\n          op: lt\r\n          days: x\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n```\r\ncustodian run --dryrun --profile abc asg-ami.yml --region us-east-1 -s asg-ami --cache-period 0 -v\r\n2020-05-11 16:26:37,495: custodian.cache:DEBUG Disabling cache\r\n2020-05-11 16:26:37,496: custodian.commands:DEBUG Loaded file asg-ami.yml. Contains 1 policies\r\n2020-05-11 16:26:38,023: custodian.output:DEBUG Storing output with <LogFile asg-ami/custodian-run.log>\r\n2020-05-11 16:26:38,165: custodian.policy:DEBUG Running policy:asg-ami\r\nresource:asg region:us-east-1 c7n:0.9.1\r\n2020-05-11 16:26:51,425: custodian.resources.launchconfig:DEBUG Filtered from 527 to 527 launchconfig\r\n2020-05-11 16:26:51,683: custodian.output:DEBUG metric:PolicyException Count:1 policy:asg-ami\r\nrestype:asg\r\n2020-05-11 16:26:51,683: custodian.output:DEBUG metric:ApiCalls Count:28 policy:asg-ami\r\nrestype:asg\r\n2020-05-11 16:26:51,683: custodian.output:ERROR Error while executing policy\r\nTraceback (most recent call last):\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/query.py\", line 465, in resources\r\n    resources = self.filter_resources(resources)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 258, in process\r\n    return self.process_set(resources, event)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 274, in process_set\r\n    r[rtype_id] for r in f.process(resources, event)])\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/resources/asg.py\", line 573, in process\r\n    return super(ImageAgeFilter, self).process(asgs, event)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 197, in process\r\n    return list(filter(self, resources))\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 677, in __call__\r\n    v = self.get_resource_date(i)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/resources/asg.py\", line 577, in get_resource_date\r\n    ami = self.images.get(cfg.get('ImageId'), {})\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n2020-05-11 16:26:51,688: custodian.commands:ERROR Error while executing policy asg-ami, continuing\r\nTraceback (most recent call last):\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/commands.py\", line 281, in run\r\n    policy()\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/policy.py\", line 1031, in __call__\r\n    resources = PullMode(self).run()\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/query.py\", line 465, in resources\r\n    resources = self.filter_resources(resources)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 258, in process\r\n    return self.process_set(resources, event)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 274, in process_set\r\n    r[rtype_id] for r in f.process(resources, event)])\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/resources/asg.py\", line 573, in process\r\n    return super(ImageAgeFilter, self).process(asgs, event)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 197, in process\r\n    return list(filter(self, resources))\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/filters/core.py\", line 677, in __call__\r\n    v = self.get_resource_date(i)\r\n  File \"/Users/abc/custodian/cloud-custodian/c7n/resources/asg.py\", line 577, in get_resource_date\r\n    ami = self.images.get(cfg.get('ImageId'), {})\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n```\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5745", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5745/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5745/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5745/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5745", "id": 616103995, "node_id": "MDU6SXNzdWU2MTYxMDM5OTU=", "number": 5745, "title": "Add Custodian Version To Mailer Events", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-11T18:51:11Z", "updated_at": "2020-05-12T19:46:05Z", "closed_at": "2020-05-12T19:46:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nNot related to a problem\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice if the Custodian version number was included in the mailer messages that way I could extract it and print it on the email.  This would allow me to identify what version of custodian a policy is running as in case some old policy lambdas don't get updated or deleted.  Being able to identify if a old version of a policy took some action by looking at the email would be very helpful.\r\n\r\n**Describe alternatives you've considered**\r\nI don't have any other ideas on how to get the custodian version in the email dynamically\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5741", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5741/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5741/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5741/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5741", "id": 615272093, "node_id": "MDU6SXNzdWU2MTUyNzIwOTM=", "number": 5741, "title": "InvalidOutputConfig using xray mode active", "user": {"login": "FireballDWF", "id": 19273, "node_id": "MDQ6VXNlcjE5Mjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/19273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FireballDWF", "html_url": "https://github.com/FireballDWF", "followers_url": "https://api.github.com/users/FireballDWF/followers", "following_url": "https://api.github.com/users/FireballDWF/following{/other_user}", "gists_url": "https://api.github.com/users/FireballDWF/gists{/gist_id}", "starred_url": "https://api.github.com/users/FireballDWF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FireballDWF/subscriptions", "organizations_url": "https://api.github.com/users/FireballDWF/orgs", "repos_url": "https://api.github.com/users/FireballDWF/repos", "events_url": "https://api.github.com/users/FireballDWF/events{/privacy}", "received_events_url": "https://api.github.com/users/FireballDWF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390730040, "node_id": "MDU6TGFiZWwzOTA3MzAwNDA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/area/docs", "name": "area/docs", "color": "d93f0b", "default": false, "description": null}, {"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-09T22:26:53Z", "updated_at": "2020-05-11T00:56:14Z", "closed_at": "2020-05-11T00:56:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n  File \"/var/task/c7n/output.py\", line 62, in select\r\n    raise InvalidOutputConfig(\"Invalid %s: %s\" % (\r\nand rest of the stacktrace provided below is found is cloudwatch log for the policy provided below within about 10 mins of running step #2.  \r\n\r\nNote to repeat results from #2 will need to first archive the guard duty finding, example provided in step 3 of https://github.com/aws-samples/aws-securityhub-automated-remediations-workshop/blob/master/docs/05-guardduty-iam-user.md\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1.  custodian run -s /tmp --profile developer --trace xray iam-user-hubfinding-remediate-disable.yml \r\n2.  aws guardduty create-sample-findings --detector-id `aws guardduty list-detectors --query DetectorIds --output text` --finding-types 'UnauthorizedAccess:IAMUser/MaliciousIPCaller'\r\n\r\n\r\n**Background (please complete the following information):**\r\n\r\n```yaml\r\npolicies:\r\n  - name: iam-user-hubfinding-remediate-disable\r\n    description: SecurityHub finding filter for calls from malicious IPs with action of removing-keys\r\n    resource: iam-user\r\n    mode:\r\n        type: hub-finding\r\n        role: arn:aws:iam::{account_id}:role/CloudCustodian\r\n        member-role: arn:aws:iam::{account_id}:role/CloudCustodianMember\r\n        memory: 128\r\n        tags:\r\n          CostCenter: SecurityHubWorkshop\r\n          CreatedBy: CloudCustodian\r\n        pattern:\r\n          detail:\r\n            findings:\r\n              Resources:\r\n                \"Type\": [\"AwsIamAccessKey\"]\r\n              \"Types\": [\"TTPs/UnauthorizedAccess:IAMUser-MaliciousIPCaller\"]\r\n              Severity:\r\n                Label: [\"MEDIUM\", \"HIGH\", \"CRITICAL\"]\r\n        tracing_config:\r\n          Mode: Active\r\n    actions:\r\n      - type: remove-keys\r\n        disable: true\r\n\r\n```\r\n - Traceback: \r\n```\r\n[ERROR] InvalidOutputConfig: Invalid c7n.output.tracer: xray\r\nTraceback (most recent call last):\r\n  File \"/var/task/custodian_policy.py\", line 4, in run\r\n    return handler.dispatch_event(event, context)\r\n  File \"/var/task/c7n/handler.py\", line 170, in dispatch_event\r\n    policies = PolicyCollection.from_data(policy_data, policy_config)\r\n  File \"/var/task/c7n/policy.py\", line 87, in from_data\r\n    policies = [Policy(p, options, session_factory=sf)\r\n  File \"/var/task/c7n/policy.py\", line 87, in <listcomp>\r\n    policies = [Policy(p, options, session_factory=sf)\r\n  File \"/var/task/c7n/policy.py\", line 881, in __init__\r\n    self.ctx = ExecutionContext(self.session_factory, self, self.options)\r\n  File \"/var/task/c7n/ctx.py\", line 54, in __init__\r\n    self.tracer = tracer_outputs.select(self.options.tracer, self)\r\n  File \"/var/task/c7n/output.py\", line 62, in select\r\n    raise InvalidOutputConfig(\"Invalid %s: %s\" % (\r\nEND RequestId: 5efdded4-68cf-4cc6-9ffe-68e26df07bd5\r\nREPORT RequestId: 5efdded4-68cf-4cc6-9ffe-68e26df07bd5\tDuration: 18.58 ms\tBilled Duration: 100 ms\tMemory Size: 128 MB\tMax Memory Used: 77 MB\t\r\nXRAY TraceId: 1-5eb72914-bc66a19256b6971e84000e5a\tSegmentId: 38a96e257cefea21\tSampled: true\t\r\n```\r\n\r\n```\r\nCustodian:   0.9.1\r\nPython:      3.8.2 (default, Mar 11 2020, 00:29:50) \r\n             [Clang 11.0.0 (clang-1100.0.33.17)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='masked', release='19.4.0', version='Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  False\r\nDocker: False\r\nInstalled: \r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.12.47\r\nbotocore==1.15.49\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.0\r\njmespath==0.9.5\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==46.0.0\r\nsix==1.14.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5730", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5730/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5730/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5730/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5730", "id": 614099614, "node_id": "MDU6SXNzdWU2MTQwOTk2MTQ=", "number": 5730, "title": "json schema export ~ stable diff", "user": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-07T14:24:52Z", "updated_at": "2020-05-07T19:18:55Z", "closed_at": "2020-05-07T19:18:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "running `custodian schema --json > schema.json`. results in a jsonschema file, doing it repeatedly results in minor deltas between the files primarily around ordering. this should be normalized to produce the same output, such that running two diff on exports with the same custodian version should have zero delta.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5724", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5724/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5724/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5724/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5724", "id": 613664214, "node_id": "MDU6SXNzdWU2MTM2NjQyMTQ=", "number": 5724, "title": "conditions block for serverless policy with not/event structure results in stack trace", "user": {"login": "tjstansell", "id": 5217454, "node_id": "MDQ6VXNlcjUyMTc0NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5217454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjstansell", "html_url": "https://github.com/tjstansell", "followers_url": "https://api.github.com/users/tjstansell/followers", "following_url": "https://api.github.com/users/tjstansell/following{/other_user}", "gists_url": "https://api.github.com/users/tjstansell/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjstansell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjstansell/subscriptions", "organizations_url": "https://api.github.com/users/tjstansell/orgs", "repos_url": "https://api.github.com/users/tjstansell/repos", "events_url": "https://api.github.com/users/tjstansell/events{/privacy}", "received_events_url": "https://api.github.com/users/tjstansell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-06T23:01:00Z", "updated_at": "2020-05-17T12:09:55Z", "closed_at": "2020-05-17T12:09:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nTrying to run a policy with a `conditions` block that includes `type: event` conditions for a `mode: cloudtrail` policy causes stack traces as it tries to check the conditions against no resources and no event before the serverless policy is deployed\r\n\r\n**To Reproduce**\r\nRun a policy like the example below.\r\n\r\n**Expected behavior**\r\nThe `event` conditions should not be evaluated to decide if the serverless policy should be provisioned.  Only after the provisioning has happened and an event triggers the policy.\r\n\r\n**Background (please complete the following information):**\r\n - OS: [e.g. OSX 10.15]\r\n - Python Version: python 3.7.6\r\n - Custodian Version: 0.9.1.0\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\npolicies:\r\n  - name: run-asg-auto-tag-creator\r\n    resource: asg\r\n    comment: Auto-tag creator if missing.\r\n    mode:\r\n      type: cloudtrail\r\n      events:\r\n        - CreateAutoScalingGroup\r\n      tags: *lambda-tags\r\n      role: *lambda-role\r\n    conditions:\r\n      - not:\r\n          - type: event\r\n            key: \"detail.userIdentity.arn\"\r\n            op: contains\r\n            value: \"CloudCustodian\"\r\n      - not:\r\n          - type: event\r\n            key: \"detail.userIdentity.arn\"\r\n            op: regex-case\r\n            value: '.*(AWS.*ServiceRole.*/|Jenkins.*/|\\w{8}(?:-?\\w{4}){3}-?\\w{12}|LambdaFunction|\\/sfr-|\\/i-)[^\\/]*$'\r\n    filters:\r\n      - \"tag:Creator\": empty\r\n    actions:\r\n      - type: auto-tag-user\r\n        tag: Creator\r\n```\r\n - Traceback:\r\n```\r\n$ custodian run -d -v -s out -p run-asg-auto-tag-creator ./auto-tag-creator.yaml\r\n2020-05-06 15:47:07,205: custodian.commands:DEBUG Loaded file ./auto-tag-creator.yaml. Contains 11 policies\r\n2020-05-06 15:47:07,223: custodian.aws:DEBUG using default region:us-west-2 from boto\r\n2020-05-06 15:47:07,778: custodian.commands:ERROR Error while executing policy run-asg-auto-tag-creator, continuing\r\nTraceback (most recent call last):\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/commands.py\", line 281, in run\r\n    policy()\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/policy.py\", line 1056, in __call__\r\n    resources = PullMode(self).run()\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/policy.py\", line 279, in run\r\n    if not self.policy.is_runnable():\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/policy.py\", line 906, in is_runnable\r\n    return self.conditions.evaluate(event)\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/policy.py\", line 843, in evaluate\r\n    state = all([f.process([policy_vars], event) for f in self.filters])\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/policy.py\", line 843, in <listcomp>\r\n    state = all([f.process([policy_vars], event) for f in self.filters])\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/filters/core.py\", line 299, in process\r\n    return self.process_set(resources, event)\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/filters/core.py\", line 314, in process_set\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\n  File \"/Users/tstansell/.local/c7n/lib/python3.7/site-packages/c7n/filters/core.py\", line 314, in <dictcomp>\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\nKeyError: 'AutoScalingGroupName'\r\n```\r\n - `custodian version --debug` output\r\n```\r\nCustodian:   0.9.1.0\r\nPython:      3.7.6 (default, Dec 30 2019, 19:38:28)\r\n             [Clang 11.0.0 (clang-1100.0.33.16)]\r\nPlatform:    posix.uname_result(sysname='Darwin', release='19.4.0', version='Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5719", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5719/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5719/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5719/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5719", "id": 613322089, "node_id": "MDU6SXNzdWU2MTMzMjIwODk=", "number": 5719, "title": "aws - lambda - not able to read tags", "user": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-06T13:30:50Z", "updated_at": "2020-06-10T14:05:04Z", "closed_at": "2020-05-06T20:06:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWe have a policy that looks at tags for `resource: lambda` and makes a decision based off the tag\r\nvalue. The policy filters 2 resources when run with custodian version 0.8.45.3 and almost 90% (more than 1000) resources when run with 0.9.1 \r\n\r\n**To Reproduce**\r\nWas not able to reproduce manually, but when we rolled back to 0.8.45.3, the problem seems to get fixed\r\n\r\n\r\n**Expected behavior**\r\nShould filter couple of resources as happening in the previous version that we're using(0.8.45.3)\r\n\r\n**Background (please complete the following information):**\r\n - OS: docker python:3.6-bionic\r\n - Python Version: 3.6\r\n - Custodian Version: 0.9.1\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: aws\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\npolicies: \r\n  - name: lambda-tag-check\r\n    resource: lambda\r\n    filters:\r\n      - type: value\r\n        key: \"tag:x\"\r\n        value_from:\r\n          url: *some-list\r\n          format: json\r\n          expr: abc[*].x\r\n        op: not-in\r\n      - type: value\r\n        key: \"tag:y\"\r\n        value_from:\r\n          url: *some-list\r\n          format: json\r\n          expr: abc[*].y\r\n        op: not-in\r\n      - not:\r\n          - type: value #ignore custodian lambda functions\r\n            key: \"FunctionName\"\r\n            value: \"^custodian-.*\"\r\n            value_type: normalize\r\n            op: regex\r\n```\r\n - Traceback: no traceback seen\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nLooked at the resources.json file and saw that the `Tag` key is missing for all the filtered resources.I suspect all the lambdas for which tags couldn't be retrieved, are flagged.We're still investigating if its a problem with how we run custodian internally but I think its worth putting it out there.\r\n```[\r\n  {\r\n    \"FunctionName\": \"x\",\r\n    \"FunctionArn\": \"y\",\r\n    \"Runtime\": \"nodejs10.x\",\r\n    \"Role\": \"\",\r\n    \"Handler\": \"dist/handler.handle\",\r\n    \"CodeSize\": 23398296,\r\n    \"Description\": \"abc\",\r\n    \"Timeout\": 60,\r\n    \"MemorySize\": 128,\r\n    \"LastModified\": \"2020-03-30T16:09:40.166+0000\",\r\n    \"CodeSha256\": \"xyz\",\r\n    \"Version\": \"$LATEST\",\r\n    \"VpcConfig\": {\r\n      \"SubnetIds\": [\r\n        \"subnet-a\",\r\n        \"subnet-b\",\r\n        \"subnet-c\"\r\n      ],\r\n      \"SecurityGroupIds\": [\r\n        \"sg-a\",\r\n        \"sg-b\",\r\n        \"sg-c\",\r\n        \"sg-d\",\r\n        \"sg-e\"\r\n      ],\r\n      \"VpcId\": \"a\"\r\n    },\r\n    \"Environment\": {\r\n      \"Variables\": {\r\n        \"DEPLOY_ENV\": \"qa\"\r\n      }\r\n    },\r\n    \"TracingConfig\": {\r\n      \"Mode\": \"PassThrough\"\r\n    },\r\n    \"RevisionId\": \"9fe11740-277b-4cb6-9571\",\r\n    \"c7n:MatchedFilters\": [\r\n      \"tag:x\",\r\n      \"tag:y\"\r\n    ]\r\n  }]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5716", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5716/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5716/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5716/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5716", "id": 612893935, "node_id": "MDU6SXNzdWU2MTI4OTM5MzU=", "number": 5716, "title": "glue-catalog filter error when using \"not\" ", "user": {"login": "Thirugovindaraj", "id": 19174765, "node_id": "MDQ6VXNlcjE5MTc0NzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/19174765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thirugovindaraj", "html_url": "https://github.com/Thirugovindaraj", "followers_url": "https://api.github.com/users/Thirugovindaraj/followers", "following_url": "https://api.github.com/users/Thirugovindaraj/following{/other_user}", "gists_url": "https://api.github.com/users/Thirugovindaraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thirugovindaraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thirugovindaraj/subscriptions", "organizations_url": "https://api.github.com/users/Thirugovindaraj/orgs", "repos_url": "https://api.github.com/users/Thirugovindaraj/repos", "events_url": "https://api.github.com/users/Thirugovindaraj/events{/privacy}", "received_events_url": "https://api.github.com/users/Thirugovindaraj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-05T21:04:04Z", "updated_at": "2020-05-05T23:41:44Z", "closed_at": "2020-05-05T23:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nwhen using \"not\"  operator in filter condition, custodian produces the following error;\r\nKeyError: 'CatalogId'\r\n\r\n**To Reproduce**\r\nPerform a dry run of a policy using -not on resource glue-catalog \r\n\r\n**Expected behavior**\r\nExpected to see the filters working based on CatalogEncryptionMode and SseAwsKmsKeyId as shown in boto3 documentation:\r\n'EncryptionConfiguration': {\r\n            'S3Encryption': [\r\n                {\r\n                    'S3EncryptionMode': 'DISABLED'|'SSE-KMS'|'SSE-S3',\r\n                    'KmsKeyArn': 'string'\r\n                },\r\n            ]\r\n\r\n**Background (please complete the following information):**\r\n - OS:  macOS Cataline version 10.15.4\r\n - Python Version: 3.8.2\r\n - Custodian Version: 0.9.1\r\n - Tool Version:  N/A\r\n - Cloud Provider: aws\r\n - Policy: [please exclude any account/sensitive information]\r\npolicies:\r\n  - name: glue-catalog-customerCMK-encryption\r\n    resource: glue-catalog\r\n    description:\r\n      applicable description\r\n    tags:\r\n      - \"tag1\"\r\n      - \"tag2\"\r\n    filters:\r\n      - not:\r\n        - type: glue-security-config\r\n          SseAwsKmsKeyId: alias\r\n        - type: glue-security-config\r\n          CatalogEncryptionMode: SSE-KMS\r\n    actions:\r\n      ...\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n2020-05-05 16:02:19,224: custodian.output:ERROR Error while executing policy\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/resources/glue.py\", line 516, in resources\r\n    return self.filter_resources(self._get_catalog_encryption_settings())\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/filters/core.py\", line 299, in process\r\n    return self.process_set(resources, event)\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/filters/core.py\", line 314, in process_set\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/filters/core.py\", line 314, in <dictcomp>\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\nKeyError: 'CatalogId'\r\n\r\n\r\n - `custodian version --debug` output\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5713", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5713/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5713/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5713/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5713", "id": 612727995, "node_id": "MDU6SXNzdWU2MTI3Mjc5OTU=", "number": 5713, "title": "aws.cloudtrail status IsLogging fails with KeyError: 'c7n:TrailStatus'", "user": {"login": "jhmartin", "id": 367824, "node_id": "MDQ6VXNlcjM2NzgyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/367824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhmartin", "html_url": "https://github.com/jhmartin", "followers_url": "https://api.github.com/users/jhmartin/followers", "following_url": "https://api.github.com/users/jhmartin/following{/other_user}", "gists_url": "https://api.github.com/users/jhmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhmartin/subscriptions", "organizations_url": "https://api.github.com/users/jhmartin/orgs", "repos_url": "https://api.github.com/users/jhmartin/repos", "events_url": "https://api.github.com/users/jhmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/jhmartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-05T16:20:03Z", "updated_at": "2020-05-06T13:03:58Z", "closed_at": "2020-05-06T13:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\ncloudtrail status / IsLogging returns key error KeyError: 'c7n:TrailStatus'\r\n\r\nhttps://cloudcustodian.io/docs/aws/resources/cloudtrail.html#status indicates this should work.\r\n\r\n**To Reproduce**\r\nAuthenticate to an account that has both an Organizational trail and local trail.\r\n\r\nPolicy file:\r\n```yaml\r\n  - name: awslogs-cloudtrail\r\n    resource: aws.cloudtrail\r\n    filters:\r\n      - type: status\r\n        key: IsLogging\r\n        value: True\r\n```\r\n\r\nOutput is:\r\n```\r\n2020-05-05 09:03:16,332: custodian.commands:ERROR Error while executing policy awslogs-cloudtrail, continuing\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/commands.py\", line 281, in run\r\n    policy()\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/policy.py\", line 1062, in __call__\r\n    resources = mode.run()\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/query.py\", line 466, in resources\r\n    resources = self.filter_resources(resources)\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/resources/cloudtrail.py\", line 122, in process\r\n    return super(Status, self).process(resources)\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/filters/core.py\", line 499, in process\r\n    return super(ValueFilter, self).process(resources, event)\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/filters/core.py\", line 197, in process\r\n    return list(filter(self, resources))\r\n  File \"/usr/local/lib/python3.7/site-packages/c7n/resources/cloudtrail.py\", line 125, in __call__\r\n    return self.match(r['c7n:TrailStatus'])\r\nKeyError: 'c7n:TrailStatus'\r\n```\r\n\r\n**Expected behavior**\r\nOnly CloudTrails that are enabled are returned, no error.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSX 10.14.6\r\n - Python Version: Python 3.7.4\r\n - Custodian Version: 0.9.1\r\n - Cloud Provider: aws\r\n - Policy:\r\n```yaml\r\npolicies: \r\n  - name: awslogs-cloudtrail\r\n    resource: cloudtrail\r\n    filters:\r\n      - type: status\r\n        key: IsLogging\r\n        value: True\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n ```\r\nCustodian:   0.9.1\r\nPython:      3.7.4 (default, Sep  7 2019, 18:27:02)\r\n             [Clang 10.0.1 (clang-1001.0.46.4)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='xxx', release='18.7.0', version='Darwin Kernel Version 18.7.0: Tue Aug 20 16:57:14 PDT 2019; root:xnu-4903.271.2~2/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  False\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.12.47\r\nbotocore==1.15.47\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.0\r\njmespath==0.9.5\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==41.0.1\r\nsix==1.14.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n\r\nUnder --debug, self has:\r\n```\r\n(Pdb) p dir(self)\r\n['__call__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_validate_resource_count', '_validate_value_regex', 'annotate', 'annotation_key', 'data', 'executor_factory', 'expr', 'get_block_operator', 'get_permissions', 'get_resource_value', 'log', 'manager', 'match', 'merge_annotation', 'metrics', 'op', 'permissions', 'process', 'process_value_type', 'required_keys', 'schema', 'schema_alias', 'type', 'type_aliases', 'v', 'validate', 'vtype']\r\n```\r\n\r\nAdding this filter _before_ the status filter works around the issue:\r\n```yaml\r\n      - type: is-shadow\r\n        state: False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5711", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5711/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5711/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5711/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5711", "id": 612697125, "node_id": "MDU6SXNzdWU2MTI2OTcxMjU=", "number": 5711, "title": "c7n-mailer 0.6.0 does not have entrypoint for c7n-mailer-replay", "user": {"login": "nitrocode", "id": 7775707, "node_id": "MDQ6VXNlcjc3NzU3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrocode", "html_url": "https://github.com/nitrocode", "followers_url": "https://api.github.com/users/nitrocode/followers", "following_url": "https://api.github.com/users/nitrocode/following{/other_user}", "gists_url": "https://api.github.com/users/nitrocode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrocode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrocode/subscriptions", "organizations_url": "https://api.github.com/users/nitrocode/orgs", "repos_url": "https://api.github.com/users/nitrocode/repos", "events_url": "https://api.github.com/users/nitrocode/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrocode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T15:35:12Z", "updated_at": "2020-05-05T17:28:31Z", "closed_at": "2020-05-05T17:28:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n`c7n-mailer==0.6.0` does not have entrypoint for `c7n-mailer-replay`\r\n\r\n**To Reproduce**\r\n\r\nNew version fails\r\n```\r\n$ pip install c7n-mailer==0.6.0\r\n$ c7n-mailer-replay\r\nzsh: command not found: c7n-mailer-replay\r\n```\r\n\r\nOld version works\r\n```\r\n$ pip install c7n-mailer==0.5.8\r\n$ c7n-mailer-replay\r\nusage: Test c7n-mailer templates and mail [-h] -c CONFIG [-d] [-T] [-t TEMPLATES] [-p] [-j JSON_DUMP_FILE] MESSAGE_FILE\r\nTest c7n-mailer templates and mail: error: the following arguments are required: -c/--config, MESSAGE_FILE\r\n```\r\n\r\n**Expected behavior**\r\nEntrypoint for `c7n-mailer-replay`\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSX 10.15\r\n - Python Version: python 3.8.1\r\n - Tool Version: 0.6.0\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5707", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5707/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5707/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5707/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5707", "id": 611870130, "node_id": "MDU6SXNzdWU2MTE4NzAxMzA=", "number": 5707, "title": "c7n-mailer fails to install because of missing requirement jsonpointer", "user": {"login": "rficcaglia", "id": 804514, "node_id": "MDQ6VXNlcjgwNDUxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/804514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rficcaglia", "html_url": "https://github.com/rficcaglia", "followers_url": "https://api.github.com/users/rficcaglia/followers", "following_url": "https://api.github.com/users/rficcaglia/following{/other_user}", "gists_url": "https://api.github.com/users/rficcaglia/gists{/gist_id}", "starred_url": "https://api.github.com/users/rficcaglia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rficcaglia/subscriptions", "organizations_url": "https://api.github.com/users/rficcaglia/orgs", "repos_url": "https://api.github.com/users/rficcaglia/repos", "events_url": "https://api.github.com/users/rficcaglia/events{/privacy}", "received_events_url": "https://api.github.com/users/rficcaglia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/milestones/22", "html_url": "https://github.com/cloud-custodian/cloud-custodian/milestone/22", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/milestones/22/labels", "id": 5348477, "node_id": "MDk6TWlsZXN0b25lNTM0ODQ3Nw==", "number": 22, "title": "0.9.2", "description": "next release", "creator": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 3, "state": "open", "created_at": "2020-04-25T14:53:48Z", "updated_at": "2020-05-05T10:12:09Z", "due_on": "2020-05-08T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-05-04T13:20:35Z", "updated_at": "2020-05-05T10:12:09Z", "closed_at": "2020-05-05T10:12:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\njsonpointer is required but it is not installed in requirements.txt\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n> Successfully installed argcomplete-1.11.1 boto3-1.12.47 botocore-1.15.47 c7n-0.9.1 c7n-mailer-> 0.6.0 certifi-2020.4.5.1 datadog-0.34.1 decorator-4.4.2 idna-2.9 importlib-metadata-1.6.0 jinja2-> 2.11.2 ldap3-2.7 python-dateutil-2.8.1 python-http-client-3.2.7 pyyaml-5.3.1 redis-3.4.1 requests-> 2.23.0 sendgrid-6.2.2 tabulate-0.8.7 urllib3-1.25.9 zipp-3.1.0\r\n>\r\n> c7n-mailer --config mailer.yml --update-lambda\r\n\r\nFails with No module Found: jsonpointer\r\n\r\n**Expected behavior**\r\nexecute command successfully\r\n\r\n**Background (please complete the following information):**\r\n - OS: Amazon Linux\r\n - Python Version: [ python 3.8.1\r\n - Custodian Version: c7n-0.9.1 \r\n - Tool Version:  c7n-mailer-0.6.0\r\n - Cloud Provider: aws (not that it should matter)\r\n - Policy: N/A\r\n - Traceback:\r\n\r\nTraceback (most recent call last):\r\nFile \"/root/.pyenv/versions/3.8.1/bin/c7n-mailer\", line 8, in <module>\r\nsys.exit(main())\r\nFile \"/root/.pyenv/versions/3.8.1/lib/python3.8/site-packages/c7n_mailer/cli.py\", line 235, in main\r\ndeploy.provision(mailer_config, functools.partial(session_factory, mailer_config))\r\nFile \"/root/.pyenv/versions/3.8.1/lib/python3.8/site-packages/c7n_mailer/deploy.py\", line 97, in provision\r\narchive = get_archive(config)\r\nFile \"/root/.pyenv/versions/3.8.1/lib/python3.8/site-packages/c7n_mailer/deploy.py\", line 59, in get_archive\r\narchive = PythonPackageArchive(modules=deps)\r\nFile \"/root/.pyenv/versions/3.8.1/lib/python3.8/site-packages/c7n/mu.py\", line 84, in __init__\r\nself.add_modules(None, modules)\r\nFile \"/root/.pyenv/versions/3.8.1/lib/python3.8/site-packages/c7n/mu.py\", line 128, in add_modules\r\nmodule = importlib.import_module(module_name)\r\nFile \"/root/.pyenv/versions/3.8.1/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\nreturn _bootstrap._gcd_import(name[level:], package, level)\r\nFile \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\nFile \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\nFile \"<frozen importlib._bootstrap>\", line 973, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'jsonpointer'\r\n\r\n**Additional context**\r\nA PR for this already seems to be ready: https://github.com/cloud-custodian/cloud-custodian/pull/5678\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5698", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5698/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5698/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5698/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5698", "id": 611023584, "node_id": "MDU6SXNzdWU2MTEwMjM1ODQ=", "number": 5698, "title": "aws - glue-catalog filter 'or' comparison error", "user": {"login": "soncaocc", "id": 49293752, "node_id": "MDQ6VXNlcjQ5MjkzNzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/49293752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soncaocc", "html_url": "https://github.com/soncaocc", "followers_url": "https://api.github.com/users/soncaocc/followers", "following_url": "https://api.github.com/users/soncaocc/following{/other_user}", "gists_url": "https://api.github.com/users/soncaocc/gists{/gist_id}", "starred_url": "https://api.github.com/users/soncaocc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soncaocc/subscriptions", "organizations_url": "https://api.github.com/users/soncaocc/orgs", "repos_url": "https://api.github.com/users/soncaocc/repos", "events_url": "https://api.github.com/users/soncaocc/events{/privacy}", "received_events_url": "https://api.github.com/users/soncaocc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-05-01T23:02:40Z", "updated_at": "2020-05-05T23:41:44Z", "closed_at": "2020-05-05T23:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe glue-catalog filters seem to fail when an `-or` comparison is in use.\r\n\r\n**To Reproduce**\r\nPerform a dry run of a policy using `-or` on resource glue-catalog (see policy below).\r\n\r\n**Expected behavior**\r\nGlue: [get_data_catalog_encryption_settings](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/glue.html#Glue.Client.get_data_catalog_encryption_settings) returns the following:\r\n\r\n```\r\n{\r\n    'DataCatalogEncryptionSettings': {\r\n        'EncryptionAtRest': {\r\n            'CatalogEncryptionMode': 'DISABLED'|'SSE-KMS',\r\n            'SseAwsKmsKeyId': 'string'\r\n        },\r\n        'ConnectionPasswordEncryption': {\r\n            'ReturnConnectionPasswordEncrypted': True|False,\r\n            'AwsKmsKeyId': 'string'\r\n        }\r\n    }\r\n}\r\n```\r\nI expect to be able to filter for either CatalogEncryptionMode:DISABLED or ReturnConnectionPasswordEncrypted:False. \r\n\r\nThe policy is successful when I remove `-or` and filter for only one of the properties.\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSX 10.14\r\n - Python Version: 3.7.6\r\n - Custodian Version: 0.9.1\r\n - Tool Version: [N/A]\r\n - Cloud Provider: aws\r\n - Policy: \r\n```yaml\r\npolicies:\r\n  - name: glue-catalog-encrypted\r\n    resource: glue-catalog\r\n    tags:\r\n      - \"whatever\"\r\n      - \"whateverwhatever\"\r\n    description:\r\n      Enable data at rest encryption for AWS Glue data catalog if the setting is disabled\r\n    filters:\r\n      - or:\r\n        - type: value\r\n          key: DataCatalogEncryptionSettings.EncryptionAtRest.CatalogEncryptionMode\r\n          op: eq\r\n          value: DISABLED\r\n        - type: value\r\n          key: DataCatalogEncryptionSettings.ConnectionPasswordEncryption.ReturnConnectionPasswordEncrypted\r\n          op: eq\r\n          value: false\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n```\r\n2020-05-01 15:49:42,509: custodian.output:ERROR Error while executing policy\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\resources\\glue.py\", line 516, in resources\r\n    return self.filter_resources(self._get_catalog_encryption_settings())\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\filters\\core.py\", line 258, in process\r\n    return self.process_set(resources, event)\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\filters\\core.py\", line 270, in process_set\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\filters\\core.py\", line 270, in <dictcomp>\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\nKeyError: 'CatalogId'\r\n2020-05-01 15:49:42,512: custodian.commands:ERROR Error while executing policy glue-catalog-encrypted, continuing\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\commands.py\", line 281, in run\r\n    policy()\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\policy.py\", line 1056, in __call__\r\n    resources = PullMode(self).run()\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\resources\\glue.py\", line 516, in resources\r\n    return self.filter_resources(self._get_catalog_encryption_settings())\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\filters\\core.py\", line 258, in process\r\n    return self.process_set(resources, event)\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\filters\\core.py\", line 270, in process_set\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\n  File \"c:\\users\\username\\.virtualenvs\\c7n-0.9.1-4h5kzyle\\lib\\site-packages\\c7n\\filters\\core.py\", line 270, in <dictcomp>\r\n    resource_map = {r[rtype_id]: r for r in resources}\r\nKeyError: 'CatalogId'\r\n```\r\n\r\n - `custodian version --debug` output\r\n```\r\nCustodian:   0.9.1\r\nPython:      3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]\r\nPlatform:   win32\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.12.47\r\nbotocore==1.15.47\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.0\r\njmespath==0.9.5\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==46.1.3\r\nsix==1.14.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5697", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5697/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5697/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5697/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5697", "id": 610912184, "node_id": "MDU6SXNzdWU2MTA5MTIxODQ=", "number": 5697, "title": "aws - glue-catalog filter glue-security-config boolean error", "user": {"login": "soncaocc", "id": 49293752, "node_id": "MDQ6VXNlcjQ5MjkzNzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/49293752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soncaocc", "html_url": "https://github.com/soncaocc", "followers_url": "https://api.github.com/users/soncaocc/followers", "following_url": "https://api.github.com/users/soncaocc/following{/other_user}", "gists_url": "https://api.github.com/users/soncaocc/gists{/gist_id}", "starred_url": "https://api.github.com/users/soncaocc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soncaocc/subscriptions", "organizations_url": "https://api.github.com/users/soncaocc/orgs", "repos_url": "https://api.github.com/users/soncaocc/repos", "events_url": "https://api.github.com/users/soncaocc/events{/privacy}", "received_events_url": "https://api.github.com/users/soncaocc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PratMis", "id": 22061271, "node_id": "MDQ6VXNlcjIyMDYxMjcx", "avatar_url": "https://avatars3.githubusercontent.com/u/22061271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PratMis", "html_url": "https://github.com/PratMis", "followers_url": "https://api.github.com/users/PratMis/followers", "following_url": "https://api.github.com/users/PratMis/following{/other_user}", "gists_url": "https://api.github.com/users/PratMis/gists{/gist_id}", "starred_url": "https://api.github.com/users/PratMis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PratMis/subscriptions", "organizations_url": "https://api.github.com/users/PratMis/orgs", "repos_url": "https://api.github.com/users/PratMis/repos", "events_url": "https://api.github.com/users/PratMis/events{/privacy}", "received_events_url": "https://api.github.com/users/PratMis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-01T18:59:12Z", "updated_at": "2020-05-07T00:40:32Z", "closed_at": "2020-05-07T00:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Background\r\nglue-catalog was recently introduced as a new resource type with some available encryption filters.\r\nThe filter `glue-security-config` for property `ReturnConnectionPasswordEncrypted` returns the following error when the policy is run:\r\n`AttributeError: 'bool' object has no attribute 'startswith'`\r\n\r\n### To Reproduce\r\nRun the following policy on version 0.9.1\r\n```yaml\r\npolicies:\r\n  - name: glue-encryption\r\n    resource: glue-catalog\r\n    filters:\r\n      - type: glue-security-config\r\n        ReturnConnectionPasswordEncrypted: false\r\n```\r\n\r\n### Expected behavior\r\nresources.json in output directory should contain json object of data catalog which has DataCatalogEncryptionSettings.ConnectionPasswordEncryption.ReturnConnectionPasswordEncrypted set to false.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: OSX 10.14\r\n - Python Version: 3.7.6\r\n - Custodian Version: 0.9.1\r\n - Tool Version: [N/A]\r\n - Cloud Provider: aws\r\n - Policy: \r\n```yaml\r\npolicies:\r\n  - name: glue-encryption\r\n    resource: glue-catalog\r\n    filters:\r\n      - type: glue-security-config\r\n        ReturnConnectionPasswordEncrypted: false\r\n```\r\n - Traceback: \r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/resources/glue.py\", line 516, in resources\r\n    return self.filter_resources(self._get_catalog_encryption_settings())\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/filters/multiattr.py\", line 38, in process\r\n    target = self.get_target(r)\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/resources/account.py\", line 1577, in get_target\r\n    if not self.data[kmskey].startswith('alias'):\r\nAttributeError: 'bool' object has no attribute 'startswith'\r\n2020-05-01 11:39:56,220: custodian.commands:ERROR Error while executing policy glue-encryption, continuing\r\nTraceback (most recent call last):\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/commands.py\", line 281, in run\r\n    policy()\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/policy.py\", line 1056, in __call__\r\n    resources = PullMode(self).run()\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/policy.py\", line 291, in run\r\n    resources = self.policy.resource_manager.resources()\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/resources/glue.py\", line 516, in resources\r\n    return self.filter_resources(self._get_catalog_encryption_settings())\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/manager.py\", line 109, in filter_resources\r\n    resources = f.process(resources, event)\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/filters/multiattr.py\", line 38, in process\r\n    target = self.get_target(r)\r\n  File \"/Users/foobar/.local/share/virtualenvs/c7n-0.9.1-KpK8LEqQ/lib/python3.7/site-packages/c7n/resources/account.py\", line 1577, in get_target\r\n    if not self.data[kmskey].startswith('alias'):\r\nAttributeError: 'bool' object has no attribute 'startswith'\r\n```\r\n\r\n - `custodian version --debug` output\r\n```\r\nCustodian:   0.9.1\r\nPython:      3.7.6 (default, Dec 30 2019, 19:38:28)\r\n             [Clang 11.0.0 (clang-1100.0.33.16)]\r\nPlatform:    posix.uname_result(sysname='Darwin', nodename='xxxxx', release='18.7.0', version='Darwin Kernel Version 18.7.0: Mon Feb 10 21:08:45 PST 2020; root:xnu-4903.278.28~1/RELEASE_X86_64', machine='x86_64')\r\nUsing venv:  True\r\nDocker: False\r\nInstalled:\r\n\r\nargcomplete==1.11.1\r\nattrs==19.3.0\r\nboto3==1.12.47\r\nbotocore==1.15.47\r\ndocutils==0.15.2\r\nimportlib-metadata==1.6.0\r\njmespath==0.9.5\r\njsonschema==3.2.0\r\npyrsistent==0.16.0\r\npython-dateutil==2.8.1\r\npyyaml==5.3.1\r\ns3transfer==0.3.3\r\nsetuptools==46.1.3\r\nsix==1.14.0\r\ntabulate==0.8.7\r\nurllib3==1.25.9\r\nzipp==3.1.0\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5696", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5696/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5696/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5696/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5696", "id": 610846334, "node_id": "MDU6SXNzdWU2MTA4NDYzMzQ=", "number": 5696, "title": "Run CloudCustodian for custom events", "user": {"login": "KVInventoR", "id": 9679368, "node_id": "MDQ6VXNlcjk2NzkzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9679368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KVInventoR", "html_url": "https://github.com/KVInventoR", "followers_url": "https://api.github.com/users/KVInventoR/followers", "following_url": "https://api.github.com/users/KVInventoR/following{/other_user}", "gists_url": "https://api.github.com/users/KVInventoR/gists{/gist_id}", "starred_url": "https://api.github.com/users/KVInventoR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KVInventoR/subscriptions", "organizations_url": "https://api.github.com/users/KVInventoR/orgs", "repos_url": "https://api.github.com/users/KVInventoR/repos", "events_url": "https://api.github.com/users/KVInventoR/events{/privacy}", "received_events_url": "https://api.github.com/users/KVInventoR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T16:41:02Z", "updated_at": "2020-05-01T17:40:33Z", "closed_at": "2020-05-01T17:40:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi All,\r\n\r\nOur company started migration from CloudTrail in each our account to CloudTrails in 1 base account and send all notification over sns topic.\r\nEach account who would like to get notifications from CloudTrail should make a SQS and subscribe to SNS topic where was published CloudTrail events.\r\nWhy it's important for us? 1 Trail in account is free, we have huge amount of accounts and I am really like to use CloudCustodian.\r\n\r\nDo you have any way to do this integration?  Like as sent custom message with data to cloudtrail or something another.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5683", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5683/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5683/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5683/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5683", "id": 610233936, "node_id": "MDU6SXNzdWU2MTAyMzM5MzY=", "number": 5683, "title": "SecurityHub include public ips for EC2 instances", "user": {"login": "allisonis", "id": 45855079, "node_id": "MDQ6VXNlcjQ1ODU1MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/45855079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allisonis", "html_url": "https://github.com/allisonis", "followers_url": "https://api.github.com/users/allisonis/followers", "following_url": "https://api.github.com/users/allisonis/following{/other_user}", "gists_url": "https://api.github.com/users/allisonis/gists{/gist_id}", "starred_url": "https://api.github.com/users/allisonis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allisonis/subscriptions", "organizations_url": "https://api.github.com/users/allisonis/orgs", "repos_url": "https://api.github.com/users/allisonis/repos", "events_url": "https://api.github.com/users/allisonis/events{/privacy}", "received_events_url": "https://api.github.com/users/allisonis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-30T16:50:50Z", "updated_at": "2020-04-30T21:08:26Z", "closed_at": "2020-04-30T21:08:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nCurrently when reporting a finding for an EC2 instance to the Security, an incorrect resource field is used to populate the detail for the resource as a finding. When creating a finding for a public IP violation, the private IP of the EC2 instance is used as the IPV4 address in the finding, not the public IP address. \r\n\r\nThe IP value that is reported is only accessible via the API, it is not populated in the UI. This is the resource object structure where IPV4 address is the private IP assigned to the instance\r\n```\r\n  \"Resources\": [\r\n    {\r\n      \"Type\": \"\",\r\n      \"Id\": \"\",\r\n      \"Region\": \"\",\r\n      \"Tags\": {\r\n        \"\",\r\n        \"Name\": \"\"\r\n      },\r\n      \"Details\": {\r\n        \"AwsEc2Instance\": {\r\n          \"Type\": \"\",\r\n          \"ImageId\": \"\",\r\n          \"IpV4Addresses\": [\r\n            \"$PRIVATE IP\"\r\n          ],\r\n          \"IamInstanceProfileArn\": \"\",\r\n          \"VpcId\": \"\",\r\n          \"SubnetId\": \"\",\r\n          \"LaunchedAt\": \"\"\r\n        }\r\n      }\r\n    }\r\n  ],\r\n```\r\n\r\n**To Reproduce**\r\nCreate a policy to report on `PublicIP` on EC2 instances that publishes a finding to the SecurityHub service. \r\n\r\n```\r\n - name: public_ip_check\r\n    resource: aws.ec2\r\n    filters:\r\n      - \"PublicIpAddress\": present\r\n    actions:\r\n      - type: post-finding\r\n        description: |\r\n          Public IP Address\r\n        severity_normalized: 8\r\n        types:\r\n          - \"Software and Configuration Checks/Industry and Regulatory Standards/NIST CSF Controls (USA)\"\r\n        recommendation: \"Remove Public IP\"\r\n        recommendation_url: \"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html\"\r\n        confidence: 100\r\n        compliance_status: FAILED\r\n```\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nThe IPV4 field in the Security hub finding  should be populated with the violating public IP address for a given EC2 instance. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5680", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5680/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5680/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5680/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5680", "id": 610167729, "node_id": "MDU6SXNzdWU2MTAxNjc3Mjk=", "number": 5680, "title": "Feature Request - Add Tagging And Delete Support For aws.codepipeline", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T15:45:53Z", "updated_at": "2020-05-01T23:56:29Z", "closed_at": "2020-05-01T23:56:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe would like to do tag enforcement on codepipeline so we would need both Tag support added as well as a Delete option so we can actually enforce if customers don't tag - https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/codepipeline.html#CodePipeline.Client.delete_pipeline\r\n\r\n\r\n**Describe the solution you'd like**\r\nIf the delete action could be added ( https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/codepipeline.html#CodePipeline.Client.delete_pipeline) as well as the generic tag actions and filters.  This would allow us to perform tag enforcement on codepipeline and delete the pipeline if customer doesn't comply.\r\n\r\n**Describe alternatives you've considered**\r\nN/A\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5679", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5679/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5679/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5679/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5679", "id": 610157245, "node_id": "MDU6SXNzdWU2MTAxNTcyNDU=", "number": 5679, "title": "Feature Request - Add Tagging Support For aws.codecommit", "user": {"login": "jtroberts83", "id": 15660841, "node_id": "MDQ6VXNlcjE1NjYwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/15660841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroberts83", "html_url": "https://github.com/jtroberts83", "followers_url": "https://api.github.com/users/jtroberts83/followers", "following_url": "https://api.github.com/users/jtroberts83/following{/other_user}", "gists_url": "https://api.github.com/users/jtroberts83/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroberts83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroberts83/subscriptions", "organizations_url": "https://api.github.com/users/jtroberts83/orgs", "repos_url": "https://api.github.com/users/jtroberts83/repos", "events_url": "https://api.github.com/users/jtroberts83/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroberts83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T15:37:40Z", "updated_at": "2020-05-01T23:56:28Z", "closed_at": "2020-05-01T23:56:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nNot related to a problem but we would like to start enforcing tags on these for our inventory completeness.\r\n\r\n**Describe the solution you'd like**\r\nHaving the basic tag, remove-tag, mark-for-op etc (the standard tagging filters and actions)\r\n\r\n**Describe alternatives you've considered**\r\nN/A\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5677", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5677/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5677/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5677/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5677", "id": 609789761, "node_id": "MDU6SXNzdWU2MDk3ODk3NjE=", "number": 5677, "title": "Add config-compliance support for kms", "user": {"login": "charles545587", "id": 22300052, "node_id": "MDQ6VXNlcjIyMzAwMDUy", "avatar_url": "https://avatars2.githubusercontent.com/u/22300052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charles545587", "html_url": "https://github.com/charles545587", "followers_url": "https://api.github.com/users/charles545587/followers", "following_url": "https://api.github.com/users/charles545587/following{/other_user}", "gists_url": "https://api.github.com/users/charles545587/gists{/gist_id}", "starred_url": "https://api.github.com/users/charles545587/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charles545587/subscriptions", "organizations_url": "https://api.github.com/users/charles545587/orgs", "repos_url": "https://api.github.com/users/charles545587/repos", "events_url": "https://api.github.com/users/charles545587/events{/privacy}", "received_events_url": "https://api.github.com/users/charles545587/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T10:15:13Z", "updated_at": "2020-04-30T13:45:37Z", "closed_at": "2020-04-30T13:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nThe schema for kms.filters does not support the type \"config-compliance\". This means you cannot use the managed config rule \"kms-cmk-not-scheduled-for-deletion\" in your policy\r\n\r\n**Describe the solution you'd like**\r\nAdded support for kms.filters for the type \"config-compliance\"\r\n\r\n**Describe alternatives you've considered**\r\nA native Cloud Custodian Policy\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5675", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5675/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5675/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5675/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5675", "id": 609454854, "node_id": "MDU6SXNzdWU2MDk0NTQ4NTQ=", "number": 5675, "title": "cloudwatch event-rule tagging", "user": {"login": "pendyalal", "id": 25062814, "node_id": "MDQ6VXNlcjI1MDYyODE0", "avatar_url": "https://avatars0.githubusercontent.com/u/25062814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pendyalal", "html_url": "https://github.com/pendyalal", "followers_url": "https://api.github.com/users/pendyalal/followers", "following_url": "https://api.github.com/users/pendyalal/following{/other_user}", "gists_url": "https://api.github.com/users/pendyalal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pendyalal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pendyalal/subscriptions", "organizations_url": "https://api.github.com/users/pendyalal/orgs", "repos_url": "https://api.github.com/users/pendyalal/repos", "events_url": "https://api.github.com/users/pendyalal/events{/privacy}", "received_events_url": "https://api.github.com/users/pendyalal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T00:11:53Z", "updated_at": "2020-05-04T18:01:11Z", "closed_at": "2020-05-04T18:01:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nIt would be nice if Custodian support event rule tagging.\r\n\r\npolicies:\r\n  - name: event-rule-tag\r\n    resource: event-rule\r\n    filters:\r\n     - type: value\r\n       key: RuleName\r\n       value: custodian\r\n       value_type: normalize\r\n       op: contains\r\n    actions:\r\n     - type: tag\r\n       key: 'owner'\r\n       value: 'lakshmi'\r\n     - type: tag\r\n       key: 'Project'\r\n       value: 'Infrastructure'\r\n     - type: tag\r\n       key: 'ProjectId'\r\n       value: '1234567'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5674", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5674/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5674/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5674/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5674", "id": 609383499, "node_id": "MDU6SXNzdWU2MDkzODM0OTk=", "number": 5674, "title": "finding filter interacts strangely with cache", "user": {"login": "kiwiz", "id": 3122114, "node_id": "MDQ6VXNlcjMxMjIxMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3122114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiwiz", "html_url": "https://github.com/kiwiz", "followers_url": "https://api.github.com/users/kiwiz/followers", "following_url": "https://api.github.com/users/kiwiz/following{/other_user}", "gists_url": "https://api.github.com/users/kiwiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiwiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiwiz/subscriptions", "organizations_url": "https://api.github.com/users/kiwiz/orgs", "repos_url": "https://api.github.com/users/kiwiz/repos", "events_url": "https://api.github.com/users/kiwiz/events{/privacy}", "received_events_url": "https://api.github.com/users/kiwiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}, {"id": 876681585, "node_id": "MDU6TGFiZWw4NzY2ODE1ODU=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/status/awaiting-response", "name": "status/awaiting-response", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-29T21:51:19Z", "updated_at": "2020-05-05T22:07:14Z", "closed_at": "2020-05-05T22:06:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`--cache-period 0` seems to be required if a c7n policy queries a resource and then subsequently updates that resource (otherwise, the findings are stale).\r\nWe run policies every hour and the default cache expiry is 15 minutes - I don't fully understand the interaction here, but disabling the cache definitely seems to fix it.\r\n\r\n**To Reproduce**\r\n\r\n1. Run the policy with caching\r\n2. Run the policy without caching (`--cache-period 0`)\r\n3. Run the policy with caching\r\n\r\n**Current behaviour**\r\n\r\nSecurity Hub results are created on step 1 and updated on step 3\r\n\r\n**Expected behavior**\r\n\r\nSecurity Hub results are created once and are not updated.\r\n\r\n\r\n**Background (please complete the following information):**\r\n - OS: Amazon Linux 2\r\n - Python Version: Python 3.7.6\r\n - Custodian Version: 5d62972c13e823b07db58b802ad5b5d5d7be9065\r\n - Cloud Provider: AWS\r\n - Policy:\r\n```yaml\r\n- name: ec2-public-ip-address\r\n  resource: aws.ec2\r\n  filters:\r\n  - type: value\r\n    key: PublicIpAddress\r\n    value: not-null\r\n  - not:\r\n    - type: finding\r\n      query:\r\n        RecordState:\r\n        - Comparison: EQUALS\r\n          Value: ACTIVE\r\n  actions:\r\n  - type: post-finding\r\n    severity_normalized: 50\r\n    description: EC2 instance with public IP address\r\n    types:\r\n    - Software and Configuration Checks/AWS Security Best Practices\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5670", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5670/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5670/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5670/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5670", "id": 608776775, "node_id": "MDU6SXNzdWU2MDg3NzY3NzU=", "number": 5670, "title": "Azure: webhook returning 400", "user": {"login": "tomarv2", "id": 11890959, "node_id": "MDQ6VXNlcjExODkwOTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/11890959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomarv2", "html_url": "https://github.com/tomarv2", "followers_url": "https://api.github.com/users/tomarv2/followers", "following_url": "https://api.github.com/users/tomarv2/following{/other_user}", "gists_url": "https://api.github.com/users/tomarv2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomarv2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomarv2/subscriptions", "organizations_url": "https://api.github.com/users/tomarv2/orgs", "repos_url": "https://api.github.com/users/tomarv2/repos", "events_url": "https://api.github.com/users/tomarv2/events{/privacy}", "received_events_url": "https://api.github.com/users/tomarv2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 876678619, "node_id": "MDU6TGFiZWw4NzY2Nzg2MTk=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/cloud/azure", "name": "cloud/azure", "color": "bfd4f2", "default": false, "description": ""}, {"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "logachev", "id": 1036695, "node_id": "MDQ6VXNlcjEwMzY2OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1036695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logachev", "html_url": "https://github.com/logachev", "followers_url": "https://api.github.com/users/logachev/followers", "following_url": "https://api.github.com/users/logachev/following{/other_user}", "gists_url": "https://api.github.com/users/logachev/gists{/gist_id}", "starred_url": "https://api.github.com/users/logachev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logachev/subscriptions", "organizations_url": "https://api.github.com/users/logachev/orgs", "repos_url": "https://api.github.com/users/logachev/repos", "events_url": "https://api.github.com/users/logachev/events{/privacy}", "received_events_url": "https://api.github.com/users/logachev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "logachev", "id": 1036695, "node_id": "MDQ6VXNlcjEwMzY2OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1036695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logachev", "html_url": "https://github.com/logachev", "followers_url": "https://api.github.com/users/logachev/followers", "following_url": "https://api.github.com/users/logachev/following{/other_user}", "gists_url": "https://api.github.com/users/logachev/gists{/gist_id}", "starred_url": "https://api.github.com/users/logachev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logachev/subscriptions", "organizations_url": "https://api.github.com/users/logachev/orgs", "repos_url": "https://api.github.com/users/logachev/repos", "events_url": "https://api.github.com/users/logachev/events{/privacy}", "received_events_url": "https://api.github.com/users/logachev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-04-29T04:54:02Z", "updated_at": "2020-04-29T14:23:51Z", "closed_at": "2020-04-29T14:23:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am testing webhook action for azure and was following this example: https://gist.github.com/aluong/acebbd1691b4375e5e0d02dde9cd040b\r\n\r\n```\r\npolicies:\r\n  - name: auto-owner-storage-account\r\n    resource: azure.storage\r\n    mode:\r\n      type: azure-event-grid\r\n      events: [{\r\n          resourceProvider: 'Microsoft.Storage/storageAccounts',\r\n          event: 'write'\r\n        }]\r\n    filters:\r\n      - \"tag:Owner\": null\r\n    description: |\r\n      Tag all new StorageAccounts with the 'Owner email' tag.\r\n    actions:\r\n      - type: auto-tag-user\r\n        tag: Owner\r\n      - *notify\r\n      - type: webhook\r\n        url: https://c7ntest1.azurewebsites.net/api/HttpTrigger?code=abc==\r\n        batch: false\r\n        method: POST\r\n        body: >\r\n          {\r\n            \"PolicyName\": \"policy.name\"\r\n            \"PolicyDescription\": \"policy.location\"\r\n            \"Resource\": \"policy.type\"\r\n          }\r\n```\r\n\r\nError:\r\n```\r\nPOST got response 400 with URL https://c7ntest1.azurewebsites.net/api/HttpTrigger?code=abc==\r\n```\r\n\r\nIf I do a curl it works:\r\n\r\n```\r\ncurl --header \"Content-Type: application/json\" \\\r\n    --request POST \\\r\n    --data '{\"PolicyName\":\"demo-policy\", \"PolicyDescription\":\"demo policy\", \"Resource\": \"demo resource\"}' \\\r\n  https://c7ntestxxxxx.azurewebsites.net/api/HttpTrigger?code=xxxxxx==\r\n```\r\n\r\nAny pointers? @aluong @stefangordon", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5666", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5666/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5666/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5666/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5666", "id": 608488995, "node_id": "MDU6SXNzdWU2MDg0ODg5OTU=", "number": 5666, "title": "aws - Allow config-compliance filter on all resource types supported by CloudFormation", "user": {"login": "mithun", "id": 68682, "node_id": "MDQ6VXNlcjY4Njgy", "avatar_url": "https://avatars2.githubusercontent.com/u/68682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mithun", "html_url": "https://github.com/mithun", "followers_url": "https://api.github.com/users/mithun/followers", "following_url": "https://api.github.com/users/mithun/following{/other_user}", "gists_url": "https://api.github.com/users/mithun/gists{/gist_id}", "starred_url": "https://api.github.com/users/mithun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mithun/subscriptions", "organizations_url": "https://api.github.com/users/mithun/orgs", "repos_url": "https://api.github.com/users/mithun/repos", "events_url": "https://api.github.com/users/mithun/events{/privacy}", "received_events_url": "https://api.github.com/users/mithun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-04-28T17:28:54Z", "updated_at": "2020-05-09T09:47:25Z", "closed_at": "2020-05-09T09:47:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Background**\r\n\r\nAWS Config [supports](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules_nodejs.html#creating-custom-rules-for-additional-resource-types) custom rules that evaluate _Additional Resource Types_.\r\n\r\n_Additional Resource Types_ a types of resources that are **not** yet [supported by AWS Config](https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html), but are valid [AWS CloudFormation Resource Types](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html).\r\n\r\n**Use Case**\r\n\r\nI'm looking at a use-case where we will be deploying various AWS Config custom rules that are, in some cases, evaluating _Additional Resource Types_. Note that these custom rules are _not managed by Custodian_. However, we will be using Custodian policies that uses [`type: config-compliance`](https://cloudcustodian.io/docs/aws/resources/aws-common-filters.html#config-compliance) filter to find resources marked as non-compliant by these custom rules.\r\n\r\n**Feature Request**\r\n\r\nCurrently, for all resources supported by AWS Config, the Custodian `resource_type` has the appropriate `config_type` defined and therefore has the `config-compliance` filter registered.\r\n\r\nIn order to support to use-case described above, the appropriate `config_type` will need to be defined for all resources supported by AWS CloudFormation as well.\r\n\r\n**Caveats**\r\n\r\n* [Config Source](https://cloudcustodian.io/docs/aws/topics/config.html#config-source) would only work for _AWS Config Supported Resource Types_.\r\n* [Config Rule](https://cloudcustodian.io/docs/aws/topics/config.html#config-rule) would only work for _AWS Config Supported Resource Types_.\r\n* [Config Filter](https://cloudcustodian.io/docs/aws/topics/config.html#filter) would work for both _AWS Config Supported Resource Types_ and _Additional Resource Types_.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5664", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5664/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5664/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5664/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5664", "id": 608415639, "node_id": "MDU6SXNzdWU2MDg0MTU2Mzk=", "number": 5664, "title": "github actions - cache failures", "user": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T15:37:03Z", "updated_at": "2020-04-28T20:17:39Z", "closed_at": "2020-04-28T20:17:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nPost job cleanup.\r\n/bin/tar -cz -f /home/runner/work/_temp/2c4ed222-ac5c-466d-b163-19853e6fd4a2/cache.tgz -C /home/runner/work/cloud-custodian/cloud-custodian/.tox/py37 .\r\n[warning]Cache service responded with 500 during chunk upload.\r\nevents.js:187\r\n      throw er; // Unhandled 'error' event\r\n      ^\r\n\r\nError: EBADF: bad file descriptor, read\r\nEmitted 'error' event on ReadStream instance at:\r\n    at internal/fs/streams.js:167:12\r\n    at FSReqCallback.wrapper [as oncomplete] (fs.js:470:5) {\r\n  errno: -9,\r\n  code: 'EBADF',\r\n  syscall: 'read'\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5661", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5661/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5661/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5661/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5661", "id": 607832851, "node_id": "MDU6SXNzdWU2MDc4MzI4NTE=", "number": 5661, "title": "Auto tagging on DMS endpoint creation", "user": {"login": "classickar", "id": 57459175, "node_id": "MDQ6VXNlcjU3NDU5MTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/57459175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/classickar", "html_url": "https://github.com/classickar", "followers_url": "https://api.github.com/users/classickar/followers", "following_url": "https://api.github.com/users/classickar/following{/other_user}", "gists_url": "https://api.github.com/users/classickar/gists{/gist_id}", "starred_url": "https://api.github.com/users/classickar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/classickar/subscriptions", "organizations_url": "https://api.github.com/users/classickar/orgs", "repos_url": "https://api.github.com/users/classickar/repos", "events_url": "https://api.github.com/users/classickar/events{/privacy}", "received_events_url": "https://api.github.com/users/classickar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-27T20:30:26Z", "updated_at": "2020-04-29T17:16:01Z", "closed_at": "2020-04-28T10:34:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nAuto tagging is correctly not suppoted for DMS endpoint and throws Schema error.\r\n\r\n Error on policy:dms-Endpoints-autotag-user resource:dms-endpoint\r\n{'type': 'auto-tag-user', 'update': True, 'tag': 'User'} is not valid under any of the given schemas\r\n\r\nFailed validating 'anyOf' in schema[49]['allOf'][1]['properties']['actions']['items']:\r\n    {'anyOf': [{'$ref': '#/definitions/resources/aws.dms-endpoint/actions/delete'},\r\n               {'$ref': '#/definitions/actions/aws.invoke-lambda'},\r\n               {'$ref': '#/definitions/actions/aws.invoke-sfn'},\r\n               {'$ref': '#/definitions/resources/aws.dms-endpoint/actions/modify-endpoint'},\r\n               {'$ref': '#/definitions/actions/aws.notify'},\r\n               {'$ref': '#/definitions/actions/aws.post-finding'},\r\n               {'$ref': '#/definitions/actions/aws.post-item'},\r\n               {'$ref': '#/definitions/actions/aws.put-metric'},\r\n               {'$ref': '#/definitions/actions/aws.webhook'},\r\n               {'enum': ['notify',\r\n                         'webhook',\r\n                         'modify-endpoint',\r\n                         'delete',\r\n                         'invoke-lambda',\r\n                         'put-metric',\r\n                         'post-finding',\r\n                         'invoke-sfn',\r\n                         'post-item']}]}\r\n\r\nOn instance['actions'][0]:\r\n    {'tag': 'User', 'type': 'auto-tag-user', 'update': True}\r\n2020-04-27 18:31:19,984: custodian.commands:ERROR Found 1 errors.  Exiting.\r\n\r\n**Describe the solution you'd like**\r\nSupport Auto tagging on DMS endpoint creation\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5647", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5647/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5647/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5647/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5647", "id": 606447428, "node_id": "MDU6SXNzdWU2MDY0NDc0Mjg=", "number": 5647, "title": "Running cloudfomation with `type: delete force: true` ", "user": {"login": "agaur123", "id": 41304631, "node_id": "MDQ6VXNlcjQxMzA0NjMx", "avatar_url": "https://avatars2.githubusercontent.com/u/41304631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agaur123", "html_url": "https://github.com/agaur123", "followers_url": "https://api.github.com/users/agaur123/followers", "following_url": "https://api.github.com/users/agaur123/following{/other_user}", "gists_url": "https://api.github.com/users/agaur123/gists{/gist_id}", "starred_url": "https://api.github.com/users/agaur123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agaur123/subscriptions", "organizations_url": "https://api.github.com/users/agaur123/orgs", "repos_url": "https://api.github.com/users/agaur123/repos", "events_url": "https://api.github.com/users/agaur123/events{/privacy}", "received_events_url": "https://api.github.com/users/agaur123/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}, {"id": 876681585, "node_id": "MDU6TGFiZWw4NzY2ODE1ODU=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/status/awaiting-response", "name": "status/awaiting-response", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T16:46:21Z", "updated_at": "2020-04-24T17:15:36Z", "closed_at": "2020-04-24T17:15:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "So we are trying to run the custodian for deletion of Cloud formation templates, the policy which we wrote is , and After running this the output which we get is true, but not able to delete the CFN\r\n\r\n```filters:\r\n    - or:\r\n      - and:\r\n        - StackStatus: CREATE_COMPLETE\r\n        - type: value\r\n          value_type: age\r\n          key: CreationTime\r\n          value: {{ cfn.create_complete.retention_days }}\r\n          op: greater-than\r\n      - and:\r\n        - StackStatus: UPDATE_COMPLETE\r\n        - type: value\r\n          value_type: age\r\n          key: LastUpdatedTime\r\n          value: {{ cfn.update_complete.retention_days }}\r\n          op: greater-than\r\n      - and:\r\n        - StackStatus: ROLLBACK_COMPLETE\r\n        - type: value\r\n          value_type: age\r\n          key: DeletionTime\r\n          value: {{ cfn.rollback_complete.retention_days }}\r\n          op: greater-than\r\n      - and:\r\n        - StackStatus: DELETE_FAILED\r\n        - type: value\r\n          value_type: age\r\n          key: DeletionTime\r\n          value: 2\r\n          op: greater-than\r\n      - and:\r\n        - StackStatus: CREATE_FAILED\r\n        - type: value\r\n          value_type: age\r\n          key: CreationTime\r\n          value: {{ cfn.create_failed.retention_days }}\r\n          op: greater-than\r\n  actions:\r\n  - type: set-protection\r\n    state: false\r\n  - type: delete\r\n    force: true```\r\n-------------------------------------\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5646", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5646/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5646/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5646/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5646", "id": 606251339, "node_id": "MDU6SXNzdWU2MDYyNTEzMzk=", "number": 5646, "title": "c7n-mailer docker image release versions so it can be pinned", "user": {"login": "nitrocode", "id": 7775707, "node_id": "MDQ6VXNlcjc3NzU3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrocode", "html_url": "https://github.com/nitrocode", "followers_url": "https://api.github.com/users/nitrocode/followers", "following_url": "https://api.github.com/users/nitrocode/following{/other_user}", "gists_url": "https://api.github.com/users/nitrocode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrocode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrocode/subscriptions", "organizations_url": "https://api.github.com/users/nitrocode/orgs", "repos_url": "https://api.github.com/users/nitrocode/repos", "events_url": "https://api.github.com/users/nitrocode/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrocode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390730040, "node_id": "MDU6TGFiZWwzOTA3MzAwNDA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/area/docs", "name": "area/docs", "color": "d93f0b", "default": false, "description": null}, {"id": 390676353, "node_id": "MDU6TGFiZWwzOTA2NzYzNTM=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/question", "name": "kind/question", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-24T11:41:30Z", "updated_at": "2020-04-29T20:39:34Z", "closed_at": "2020-04-29T20:08:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nI can pin down custodian using `docker pull cloudcustodian/c7n:0.8.45.4` but I cannot pin down the custodian mailer. I used to be able to do this for the custodian mailer version `0.5.7`.\r\n\r\n**To Reproduce**\r\n\r\n```\r\n# for custodian\r\ndocker pull cloudcustodian/c7n:0.8.45.4\r\n# for custodian mailer\r\ndocker pull cloudcustodian/c7n:0.5.7\r\n```\r\n\r\n**Expected behavior**\r\nContainer is downloaded according to the released version\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5639", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5639/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5639/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5639/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5639", "id": 605134389, "node_id": "MDU6SXNzdWU2MDUxMzQzODk=", "number": 5639, "title": "Homebrew support", "user": {"login": "nitrocode", "id": 7775707, "node_id": "MDQ6VXNlcjc3NzU3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitrocode", "html_url": "https://github.com/nitrocode", "followers_url": "https://api.github.com/users/nitrocode/followers", "following_url": "https://api.github.com/users/nitrocode/following{/other_user}", "gists_url": "https://api.github.com/users/nitrocode/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitrocode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitrocode/subscriptions", "organizations_url": "https://api.github.com/users/nitrocode/orgs", "repos_url": "https://api.github.com/users/nitrocode/repos", "events_url": "https://api.github.com/users/nitrocode/events{/privacy}", "received_events_url": "https://api.github.com/users/nitrocode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390675751, "node_id": "MDU6TGFiZWwzOTA2NzU3NTE=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/area/cli", "name": "area/cli", "color": "d93f0b", "default": false, "description": null}, {"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-04-22T23:22:40Z", "updated_at": "2020-08-05T00:01:16Z", "closed_at": "2020-08-05T00:01:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'd like to install custodian using homebrew on osx\r\n\r\n**Describe the solution you'd like**\r\n```\r\nbrew install c7n\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nN/A\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5635", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5635/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5635/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5635/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5635", "id": 604745119, "node_id": "MDU6SXNzdWU2MDQ3NDUxMTk=", "number": 5635, "title": "Add support for elasticsearch filter type config-compliance", "user": {"login": "charles545587", "id": 22300052, "node_id": "MDQ6VXNlcjIyMzAwMDUy", "avatar_url": "https://avatars2.githubusercontent.com/u/22300052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charles545587", "html_url": "https://github.com/charles545587", "followers_url": "https://api.github.com/users/charles545587/followers", "following_url": "https://api.github.com/users/charles545587/following{/other_user}", "gists_url": "https://api.github.com/users/charles545587/gists{/gist_id}", "starred_url": "https://api.github.com/users/charles545587/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charles545587/subscriptions", "organizations_url": "https://api.github.com/users/charles545587/orgs", "repos_url": "https://api.github.com/users/charles545587/repos", "events_url": "https://api.github.com/users/charles545587/events{/privacy}", "received_events_url": "https://api.github.com/users/charles545587/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/milestones/22", "html_url": "https://github.com/cloud-custodian/cloud-custodian/milestone/22", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/milestones/22/labels", "id": 5348477, "node_id": "MDk6TWlsZXN0b25lNTM0ODQ3Nw==", "number": 22, "title": "0.9.2", "description": "next release", "creator": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 3, "state": "open", "created_at": "2020-04-25T14:53:48Z", "updated_at": "2020-05-05T10:12:09Z", "due_on": "2020-05-08T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-04-22T13:10:28Z", "updated_at": "2020-04-30T13:45:37Z", "closed_at": "2020-04-30T13:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen trying to write a policy to use the config managed rule \"elasticsearch-encrypted-at-rest\" there is no filter for the type: config-compliance\r\n\r\n**Describe the solution you'd like**\r\nAdded support for the filter type: config-compliance for the elasticsearch resource.\r\n\r\n**Describe alternatives you've considered**\r\nUsing c7n to create the config rule.\r\n\r\n**Additional context**\r\nRelates to a thread on gitter raised  @charles545587 Apr 21 16:08\r\n\r\naws.elasticsearch:\r\n  filters:\r\n  - event\r\n  - finding\r\n  - marked-for-op\r\n  - metrics\r\n  - ops-item\r\n  - security-group\r\n  - subnet\r\n  - value\r\n  - vpc\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5633", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5633/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5633/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5633/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5633", "id": 604350794, "node_id": "MDU6SXNzdWU2MDQzNTA3OTQ=", "number": 5633, "title": "Add option to ignore AWS Cloudformation stack deletion error", "user": {"login": "xiaket", "id": 171967, "node_id": "MDQ6VXNlcjE3MTk2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/171967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaket", "html_url": "https://github.com/xiaket", "followers_url": "https://api.github.com/users/xiaket/followers", "following_url": "https://api.github.com/users/xiaket/following{/other_user}", "gists_url": "https://api.github.com/users/xiaket/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaket/subscriptions", "organizations_url": "https://api.github.com/users/xiaket/orgs", "repos_url": "https://api.github.com/users/xiaket/repos", "events_url": "https://api.github.com/users/xiaket/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaket/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-21T23:38:36Z", "updated_at": "2020-04-23T21:59:46Z", "closed_at": "2020-04-23T21:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWe are trying to use Custodian to enforce some cost-saving policies, for example, we want to remove all the stacks with `ephemeral: true` tags. That's all working fine until someone sets the `EnableTerminationProtection` to true, and the cleanup will fail.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAs discussed in #2964, AWS does not send `EnableTerminationProtection` when we do the `describe-stacks` call without giving the stack name as parameter, so we cannot filter out the protected stacks. In this case, I would suggest that we add an option to the delete action to ignore the error when the API call failed, add a warning message in the log, and continue with the cleanup of other stacks.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nOther than that, we can also add some logic to look at why the delete-stack API call failed and do a describe-stack call to determine if this stack is protected. But I feel that's overkill.\r\n\r\n\r\nThanks,\r\nKai", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5631", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5631/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5631/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5631/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5631", "id": 604286046, "node_id": "MDU6SXNzdWU2MDQyODYwNDY=", "number": 5631, "title": "rds-cluster-snapshot", "user": {"login": "pendyalal", "id": 25062814, "node_id": "MDQ6VXNlcjI1MDYyODE0", "avatar_url": "https://avatars0.githubusercontent.com/u/25062814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pendyalal", "html_url": "https://github.com/pendyalal", "followers_url": "https://api.github.com/users/pendyalal/followers", "following_url": "https://api.github.com/users/pendyalal/following{/other_user}", "gists_url": "https://api.github.com/users/pendyalal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pendyalal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pendyalal/subscriptions", "organizations_url": "https://api.github.com/users/pendyalal/orgs", "repos_url": "https://api.github.com/users/pendyalal/repos", "events_url": "https://api.github.com/users/pendyalal/events{/privacy}", "received_events_url": "https://api.github.com/users/pendyalal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 876680469, "node_id": "MDU6TGFiZWw4NzY2ODA0Njk=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/cloud/aws", "name": "cloud/aws", "color": "bfd4f2", "default": false, "description": ""}, {"id": 334062492, "node_id": "MDU6TGFiZWwzMzQwNjI0OTI=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/enhancement", "name": "kind/enhancement", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-21T21:06:46Z", "updated_at": "2020-04-27T19:32:43Z", "closed_at": "2020-04-27T19:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nNo, It's an enhancement\r\n\r\n**Describe the solution you'd like**\r\nNeed Cross-account filters on AWS RDS Cluster Snapshots.\r\n\r\n**Describe alternatives you've considered**\r\nI modified custodian code until it gets fixed.\r\n\r\n**Additional context**\r\n\r\nfrom c7n.filters import CrossAccountAccessFilter\r\n\r\n@RDSClusterSnapshot.filter_registry.register('cross-account')\r\nclass CrossAccountAccess(CrossAccountAccessFilter):\r\n\r\n    permissions = ('rds:DescribeDBClusterSnapshotAttributes',)\r\n\r\n    def process(self, resources, event=None):\r\n        self.accounts = self.get_accounts()\r\n        results = []\r\n        with self.executor_factory(max_workers=2) as w:\r\n            futures = []\r\n            for resource_set in chunks(resources, 20):\r\n                futures.append(w.submit(\r\n                    self.process_resource_set, resource_set))\r\n            for f in as_completed(futures):\r\n                if f.exception():\r\n                    self.log.error(\r\n                        \"Exception checking cross account access\\n %s\" % (\r\n                            f.exception()))\r\n                    continue\r\n                results.extend(f.result())\r\n        return results\r\n\r\n    def process_resource_set(self, resource_set):\r\n        client = local_session(self.manager.session_factory).client('rds')\r\n        results = []\r\n        for r in resource_set:\r\n            attrs = {t['AttributeName']: t['AttributeValues']\r\n             #for t in client.describe_db_cluster_snapshot_attributes(\r\n             for t in self.manager.retry(\r\n                client.describe_db_cluster_snapshot_attributes,\r\n                DBClusterSnapshotIdentifier=r['DBClusterSnapshotIdentifier'])[\r\n                    'DBClusterSnapshotAttributesResult']['DBClusterSnapshotAttributes']}\r\n            r['c7n:attributes'] = attrs\r\n            shared_accounts = set(attrs.get('restore', []))\r\n            delta_accounts = shared_accounts.difference(self.accounts)\r\n            if delta_accounts:\r\n                r['c7n:CrossAccountViolations'] = list(delta_accounts)\r\n                results.append(r)\r\n        return results\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5628", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5628/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5628/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5628/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5628", "id": 604219235, "node_id": "MDU6SXNzdWU2MDQyMTkyMzU=", "number": 5628, "title": "rds-subnet-group \"unused\" filter finding in-use groups (not filtering at all)", "user": {"login": "bostrowski13", "id": 19539734, "node_id": "MDQ6VXNlcjE5NTM5NzM0", "avatar_url": "https://avatars0.githubusercontent.com/u/19539734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bostrowski13", "html_url": "https://github.com/bostrowski13", "followers_url": "https://api.github.com/users/bostrowski13/followers", "following_url": "https://api.github.com/users/bostrowski13/following{/other_user}", "gists_url": "https://api.github.com/users/bostrowski13/gists{/gist_id}", "starred_url": "https://api.github.com/users/bostrowski13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bostrowski13/subscriptions", "organizations_url": "https://api.github.com/users/bostrowski13/orgs", "repos_url": "https://api.github.com/users/bostrowski13/repos", "events_url": "https://api.github.com/users/bostrowski13/events{/privacy}", "received_events_url": "https://api.github.com/users/bostrowski13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-21T19:12:31Z", "updated_at": "2020-04-30T18:58:32Z", "closed_at": "2020-04-30T18:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm using the \"unused\" filter on the \"aws.rds-subnet-group\" resource and it is not filtering based on the resource being unused.  Specifically, it looks like its not filtering at all and I'm getting a list of all my db subnet groups.  I'm using the policy for \"unused\" in the resource docs at https://cloudcustodian.io/docs/aws/resources/rds-subnet-group.html.\r\n\r\n**To Reproduce**\r\nRun with the filter below\r\n\r\n**Expected behavior**\r\nFind unused RDS DB Subnet Groups (or none, if there aren't any)\r\n\r\n**Background (please complete the following information):**\r\n - Python Version: python 3.7.x\r\n - Custodian Version: e.g. 0.8.46.1\r\n - Cloud Provider: aws\r\n - Policy: \r\n```yaml\r\npolicies:\r\n  - name: rds-subnet-group-delete-unused\r\n    resource: rds-subnet-group\r\n    filters:\r\n      - unused\r\n```\r\n\r\n**Additional context**\r\nWe are using Aurora Serverless RDS Clusters.\r\nResources are named like: <unique_id>-<env>-dbcluster\r\nSubnet Groups are named like:  <unique_id>-<env>-db-subnet-group\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5627", "repository_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian", "labels_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5627/labels{/name}", "comments_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5627/comments", "events_url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/issues/5627/events", "html_url": "https://github.com/cloud-custodian/cloud-custodian/issues/5627", "id": 604160304, "node_id": "MDU6SXNzdWU2MDQxNjAzMDQ=", "number": 5627, "title": "c7n-org report error for gcp resource", "user": {"login": "jpearsonmv", "id": 42300423, "node_id": "MDQ6VXNlcjQyMzAwNDIz", "avatar_url": "https://avatars1.githubusercontent.com/u/42300423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpearsonmv", "html_url": "https://github.com/jpearsonmv", "followers_url": "https://api.github.com/users/jpearsonmv/followers", "following_url": "https://api.github.com/users/jpearsonmv/following{/other_user}", "gists_url": "https://api.github.com/users/jpearsonmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpearsonmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpearsonmv/subscriptions", "organizations_url": "https://api.github.com/users/jpearsonmv/orgs", "repos_url": "https://api.github.com/users/jpearsonmv/repos", "events_url": "https://api.github.com/users/jpearsonmv/events{/privacy}", "received_events_url": "https://api.github.com/users/jpearsonmv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390676190, "node_id": "MDU6TGFiZWwzOTA2NzYxOTA=", "url": "https://api.github.com/repos/cloud-custodian/cloud-custodian/labels/kind/bug", "name": "kind/bug", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-21T17:34:38Z", "updated_at": "2020-04-24T17:04:29Z", "closed_at": "2020-04-24T17:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nc7n-org report for GCP storage resource returns an AttributeError. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nuse c7n-org report using the defined policy (below) and output directory.\r\n\r\nAfter policy completes, run a report with default settings (example):\r\nc7n-org report -c config/gcp-projects.yml -s gcp-storage -u policy/gcp-storage.yml -p gcp-bucket-all -v > gcp-storage-April-21-2020.csv\r\n\r\n**Expected behavior**\r\nCreate .csv report without error\r\n\r\nPer Kapil \"yeah its not metadata we're tracking on gcp resources, we should be and fail gracefully.. please file an issue.. it looks like we should alias id to name on gcp resources.\"\r\n\r\n**Background (please complete the following information):**\r\n - OS: Ubuntu 18\r\n - Python Version: 3.8.2\r\n - Custodian Version: 0.8.46.1\r\n - Tool Version: [if applicable]\r\n - Cloud Provider: gcp\r\n - Policy: [please exclude any account/sensitive information]\r\n```yaml\r\npolicies:\r\n    - name: gcp-bucket-all\r\n      description: |\r\n        Example of notify action\r\n      resource: gcp.bucket\r\n```\r\n - Traceback: [if applicable, please exclude sensitive/account information]\r\n - `custodian version --debug` output\r\n```\r\n2020-04-21 14:12:15,855: c7n_org:DEBUG Found 1642 records across 350 accounts and 1 policies\r\nTraceback (most recent call last):\r\n  File \"/home/user/projects/custodian/bin/c7n-org\", line 11, in <module>\r\n    load_entry_point('c7n-org==0.5.7', 'console_scripts', 'c7n-org')()\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/c7n_org/cli.py\", line 383, in report\r\n    formatter = Formatter(\r\n  File \"/home/user/projects/custodian/lib/python3.8/site-packages/c7n/reports/csvout.py\", line 162, in __init__\r\n    if model.name != model.id:\r\nAttributeError: type object 'resource_type' has no attribute 'name'\r\n```\r\n**Additional context**\r\nusing c7n-org for GCP; have a basic policy with no filters to manually report on all gcp buckets. The intent is to define a gcp.storage policy that will identify buckets with public access. The policy runs fine and returns a resource.json for every project. When I try to run a report using c7n-org report I get the traceback error.", "performed_via_github_app": null, "score": 1.0}]}