{"total_count": 24, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/75", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/75/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/75/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/75", "id": 551228601, "node_id": "MDU6SXNzdWU1NTEyMjg2MDE=", "number": 75, "title": "to much logging info ", "user": {"login": "sanren99999", "id": 5664399, "node_id": "MDQ6VXNlcjU2NjQzOTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5664399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanren99999", "html_url": "https://github.com/sanren99999", "followers_url": "https://api.github.com/users/sanren99999/followers", "following_url": "https://api.github.com/users/sanren99999/following{/other_user}", "gists_url": "https://api.github.com/users/sanren99999/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanren99999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanren99999/subscriptions", "organizations_url": "https://api.github.com/users/sanren99999/orgs", "repos_url": "https://api.github.com/users/sanren99999/repos", "events_url": "https://api.github.com/users/sanren99999/events{/privacy}", "received_events_url": "https://api.github.com/users/sanren99999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T06:27:56Z", "updated_at": "2020-01-17T06:35:18Z", "closed_at": "2020-01-17T06:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "there is too much logging info in the log file who use the source file.\r\nplease remove the LOG object.\r\n\r\n2020-01-17 11:23:04,669 [17608] INFO dicttoxml.py-209: Looping inside convert_dict(): key=\"appid\", val=\"wxfe6689008f52e1d4\", type(val)=\"str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"appid\" with attr \"{}\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"appid\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-327: Inside convert_kv(): key=\"appid\", val=\"wxfe6689008f52e1d4\", type(val) is: \"str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"appid\" with attr \"{}\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"appid\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-209: Looping inside convert_dict(): key=\"mch_id\", val=\"1570462241\", type(val)=\"str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"mch_id\" with attr \"{}\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"mch_id\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-327: Inside convert_kv(): key=\"mch_id\", val=\"1570462241\", type(val) is: \"str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"mch_id\" with attr \"{}\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"mch_id\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-209: Looping inside convert_dict(): key=\"nonce_str\", val=\"689c2e4e08764999940e649d2663a446\", type(val)=\"str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"nonce_str\" with attr \"{}\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"nonce_str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-327: Inside convert_kv(): key=\"nonce_str\", val=\"689c2e4e08764999940e649d2663a446\", type(val) is: \"str\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"nonce_str\" with attr \"{}\"\r\n2020-01-17 11:23:04,670 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"nonce_str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-209: Looping inside convert_dict(): key=\"sign_type\", val=\"MD5\", type(val)=\"str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"sign_type\" with attr \"{}\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"sign_type\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-327: Inside convert_kv(): key=\"sign_type\", val=\"MD5\", type(val) is: \"str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"sign_type\" with attr \"{}\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"sign_type\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-209: Looping inside convert_dict(): key=\"out_trade_no\", val=\"2020011711224600003020110095\", type(val)=\"str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"out_trade_no\" with attr \"{}\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"out_trade_no\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-327: Inside convert_kv(): key=\"out_trade_no\", val=\"2020011711224600003020110095\", type(val) is: \"str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"out_trade_no\" with attr \"{}\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"out_trade_no\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-209: Looping inside convert_dict(): key=\"sign\", val=\"5EB02FB256A94478A7E64AD85C9047D6\", type(val)=\"str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"sign\" with attr \"{}\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"sign\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-327: Inside convert_kv(): key=\"sign\", val=\"5EB02FB256A94478A7E64AD85C9047D6\", type(val) is: \"str\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-135: Inside make_valid_xml_name(). Testing key \"sign\" with attr \"{}\"\r\n2020-01-17 11:23:04,671 [17608] INFO dicttoxml.py-123: Inside key_is_valid_xml(). Testing \"sign\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/63", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/63/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/63/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/63", "id": 304984447, "node_id": "MDU6SXNzdWUzMDQ5ODQ0NDc=", "number": 63, "title": "Empty tag is not returned with both sides", "user": {"login": "SimiCode", "id": 20975616, "node_id": "MDQ6VXNlcjIwOTc1NjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/20975616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimiCode", "html_url": "https://github.com/SimiCode", "followers_url": "https://api.github.com/users/SimiCode/followers", "following_url": "https://api.github.com/users/SimiCode/following{/other_user}", "gists_url": "https://api.github.com/users/SimiCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimiCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimiCode/subscriptions", "organizations_url": "https://api.github.com/users/SimiCode/orgs", "repos_url": "https://api.github.com/users/SimiCode/repos", "events_url": "https://api.github.com/users/SimiCode/events{/privacy}", "received_events_url": "https://api.github.com/users/SimiCode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-14T00:41:21Z", "updated_at": "2018-03-14T14:01:50Z", "closed_at": "2018-03-14T14:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider and empty key like {''experience\": ''}\r\nprogram returns `<experience/>`\r\nInstead of `<experience></experience>`\r\n\r\nHow can i return double tags when value is null?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/50", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/50/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/50/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/50", "id": 170066923, "node_id": "MDU6SXNzdWUxNzAwNjY5MjM=", "number": 50, "title": "Proposal: Add namespace and attribute support", "user": {"login": "watzon", "id": 4535422, "node_id": "MDQ6VXNlcjQ1MzU0MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4535422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/watzon", "html_url": "https://github.com/watzon", "followers_url": "https://api.github.com/users/watzon/followers", "following_url": "https://api.github.com/users/watzon/following{/other_user}", "gists_url": "https://api.github.com/users/watzon/gists{/gist_id}", "starred_url": "https://api.github.com/users/watzon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/watzon/subscriptions", "organizations_url": "https://api.github.com/users/watzon/orgs", "repos_url": "https://api.github.com/users/watzon/repos", "events_url": "https://api.github.com/users/watzon/events{/privacy}", "received_events_url": "https://api.github.com/users/watzon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-09T02:15:45Z", "updated_at": "2016-08-22T03:59:29Z", "closed_at": "2016-08-09T18:57:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Namespaces are definitely a needed feature, as is an easier way to add attributes to tags. I propose this be done in the following way:\n\n``` python\nfrom dicttoxml import dicttoxml\n\ndict = {\n    \"Envelope\": {\n        \"_ns\":    \"soapenv\",\n        \"_attrs\": {\n            \"soapenv\": { \"_ns\": \"xmlns\", \"value\": \"http://schemas.xmlsoap.org/soap/envelope/\" },\n            \"urn\": { \"_ns\": \"xmlns\", \"value\": \"urn:partner.soap.sforce.com\" },\n            \"otherExample\": \"test value\"\n        },\n        \"Header\": {\n            \"_ns\":    \"soapenv\",\n            \"SessionHeader\": {\n                \"_ns\": \"urn\",\n                \"sessionId\": \"3MVG9uudbyLbNPZMtuxO54qpe.DK5jaS6q_pb7mBcusBAzQcItE_a2ZZoOSucuDuYqLgWgFd6iHKr6GUAWjWx\"\n            }\n        },\n        \"Body\": {\n            \"_ns\": \"soapenv\",\n            \"query\": {\n                \"_ns\": \"urn\",\n                \"queryString\": {\n                    \"_ns\": \"urn\",\n                    \"text\": \"SELECT Id, Name FROM Account LIMIT 2\"\n                } \n            }\n        }\n    }\n}\n\nmyXml = dicttoxml(dict, root=False, attrType=False)\nprint(myXml)\n```\n\nWhich would return the following XML structure:\n\n``` xml\n<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"\n   xmlns:urn=\"partner.soap.sforce.com\" otherExample=\"test value\">\n  <soapenv:Header>\n     <urn:SessionHeader\n    <urn:sessionId>3MVG9uudbyLbNPZMtuxO54qpe.DK5jaS6q_pb7mBcusBAzQcItE_a2ZZoOSucuDuYqLgWgFd6iHKr6GUAWjWx</urn:sessionId>\n     </urn:SessionHeader>\n  </soapenv:Header>\n  <soapenv:Body>\n     <urn:query>\n        <urn:queryString>SELECT Id, Name FROM Account LIMIT 2</urn:queryString>\n     </urn:query>\n  </soapenv:Body>\n</soapenv:Envelope>\n```\n\nI could take a crack at implementing this myself, but I am by no means a great python developer yet. This is just a feature I feel is sorely needed and would put this library ahead of all the rest. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/46", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/46/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/46/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/46", "id": 164304819, "node_id": "MDU6SXNzdWUxNjQzMDQ4MTk=", "number": 46, "title": "item_func usage - end tag mismatch", "user": {"login": "robbincatz", "id": 20337216, "node_id": "MDQ6VXNlcjIwMzM3MjE2", "avatar_url": "https://avatars0.githubusercontent.com/u/20337216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbincatz", "html_url": "https://github.com/robbincatz", "followers_url": "https://api.github.com/users/robbincatz/followers", "following_url": "https://api.github.com/users/robbincatz/following{/other_user}", "gists_url": "https://api.github.com/users/robbincatz/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbincatz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbincatz/subscriptions", "organizations_url": "https://api.github.com/users/robbincatz/orgs", "repos_url": "https://api.github.com/users/robbincatz/repos", "events_url": "https://api.github.com/users/robbincatz/events{/privacy}", "received_events_url": "https://api.github.com/users/robbincatz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-07T13:08:45Z", "updated_at": "2016-07-08T00:53:23Z", "closed_at": "2016-07-08T00:53:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to change a list of dicts to xml.  In the xml I need the item name to be 'module' instead of the default 'item' so have been trying to use the new item_func argument to dicttoxml to achieve this.  Example of my list:\n`[{\"key1\": \"1\", \"key2\": \"2\", \"key3\": \"3\"}, {\"key1\": \"1\", \"key2\": \"2\", \"key3\": \"3\"}]`\n\nThe following code nearly works but the module/item tags are incorrect i.e. the resulting xml has opening 'module' tags but closing 'item' tags:\n\n```\nimport dicttoxml\na = [{\"key1\": \"1\", \"key2\": \"2\", \"key3\": \"3\"}, {\"key1\": \"1\", \"key2\": \"2\", \"key3\": \"3\"}]\nf = lambda x: 'module'\noutput = dicttoxml.dicttoxml(a, attr_type=False, custom_root='xml', item_func=f)\nprint(output)\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?><xml><module><key3>3</key3><key2>2</key2><key1>1</key1></item><module><key3>3</key3><key2>2</key2><key1>1</key1></item></xml>\n```\n\n(May be easier to spot issue from xml output substring:  `<module><key3>3</key3><key2>2</key2><key1>1</key1></item>` - see start 'module' tag & end 'item' tag)\n\nIs this a bug in item_func?  Or is my use case just not supported?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/41", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/41/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/41/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/41", "id": 97237312, "node_id": "MDU6SXNzdWU5NzIzNzMxMg==", "number": 41, "title": "Library is susceptible to XML Injection", "user": {"login": "thomaskonrad", "id": 2149539, "node_id": "MDQ6VXNlcjIxNDk1Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2149539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomaskonrad", "html_url": "https://github.com/thomaskonrad", "followers_url": "https://api.github.com/users/thomaskonrad/followers", "following_url": "https://api.github.com/users/thomaskonrad/following{/other_user}", "gists_url": "https://api.github.com/users/thomaskonrad/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomaskonrad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomaskonrad/subscriptions", "organizations_url": "https://api.github.com/users/thomaskonrad/orgs", "repos_url": "https://api.github.com/users/thomaskonrad/repos", "events_url": "https://api.github.com/users/thomaskonrad/events{/privacy}", "received_events_url": "https://api.github.com/users/thomaskonrad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-25T16:33:59Z", "updated_at": "2016-07-07T02:25:54Z", "closed_at": "2016-07-07T02:25:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nthe library fails to XML-encode the dict input and is therefore susceptible to XML injection. See this example:\n\n```\n>>> from dicttoxml import dicttoxml\n>>> dict = {'foo': 'bar', '\" injected-attribute=\"value\" <!--': 'bar'}\n>>> print(dicttoxml(dict, attr_type=False))\nb'<?xml version=\"1.0\" encoding=\"UTF-8\" ?><root><key name=\"\" injected-attribute=\"value\" <!--\">bar</key><foo>bar</foo></root>'\n```\n\nSo one can change the XML structure. Suppose the application using this library and the input comes (at least partially) from the user, then this may lead to severe security vulnerabilities. See also [here](https://www.owasp.org/index.php/Testing_for_XML_Injection_%28OTG-INPVAL-008%29).\n\nProposed solution: XML-encode all data that is placed into the XML document.\n\nCheers\nThomas\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/37", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/37/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/37/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/37", "id": 67411572, "node_id": "MDU6SXNzdWU2NzQxMTU3Mg==", "number": 37, "title": "Boolean turns into number", "user": {"login": "badsequel", "id": 1859366, "node_id": "MDQ6VXNlcjE4NTkzNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1859366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badsequel", "html_url": "https://github.com/badsequel", "followers_url": "https://api.github.com/users/badsequel/followers", "following_url": "https://api.github.com/users/badsequel/following{/other_user}", "gists_url": "https://api.github.com/users/badsequel/gists{/gist_id}", "starred_url": "https://api.github.com/users/badsequel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badsequel/subscriptions", "organizations_url": "https://api.github.com/users/badsequel/orgs", "repos_url": "https://api.github.com/users/badsequel/repos", "events_url": "https://api.github.com/users/badsequel/events{/privacy}", "received_events_url": "https://api.github.com/users/badsequel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-09T17:29:30Z", "updated_at": "2015-04-10T06:41:20Z", "closed_at": "2015-04-10T00:25:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nRef this:\n\n> Python -> XML\n> integer   int\n> long      long\n> float     float\n> Decimal   number\n> string    str\n> unicode   str\n> datetime  str\n> None      null\n> boolean   bool\n> list      list\n> set       list\n> tuple     list\n> dict      dict\n\nThis code produces the below xml. the <kid> element has a type attribute set to \"number\". Should be bool, if I am reading the above correctly and haven't missed something obvious. \n\n```\nfrom dicttoxml import dicttoxml\n\naBool = bool(1) \naString = str(\"Bob\")\nanInt = int(10)\n\ndata = [\n   { \"person\": {\n   \"name\" : aString,\"age\":anInt, \"kid\": aBool}\n   }\n   ]\n\nxml = dicttoxml(data,attr_type = True, root=False) \nxml_string = xml.decode('utf-8')\n\nprint(xml_string)\n```\n\n``` javascript\n<item type=\"dict\">\n    <person type=\"dict\">\n        <kid type=\"number\">True</kid>\n        <name type=\"str\">Bob</name>\n        <age type=\"int\">10</age>\n    </person>\n</item>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/36", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/36/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/36/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/36", "id": 60199234, "node_id": "MDU6SXNzdWU2MDE5OTIzNA==", "number": 36, "title": "codec error", "user": {"login": "beef9999", "id": 4076315, "node_id": "MDQ6VXNlcjQwNzYzMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4076315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beef9999", "html_url": "https://github.com/beef9999", "followers_url": "https://api.github.com/users/beef9999/followers", "following_url": "https://api.github.com/users/beef9999/following{/other_user}", "gists_url": "https://api.github.com/users/beef9999/gists{/gist_id}", "starred_url": "https://api.github.com/users/beef9999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beef9999/subscriptions", "organizations_url": "https://api.github.com/users/beef9999/orgs", "repos_url": "https://api.github.com/users/beef9999/repos", "events_url": "https://api.github.com/users/beef9999/events{/privacy}", "received_events_url": "https://api.github.com/users/beef9999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-07T09:29:46Z", "updated_at": "2015-03-12T00:36:12Z", "closed_at": "2015-03-12T00:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > a\n\n{'body': '\\xe6\\xb4\\xbb\\xe5\\x8a\\xa8\\xe8\\xae\\xa2\\xe5\\x8d\\x95', 'mch_id': '10075693', 'out_trade_no': 'iT201ac2FuqnlLpgq0rtM74mh8MCL81b', 'total_fee': 888, 'appid': 'wxb16fc7aa939867f6', 'notify_url': 'http://wagon.cn/place_order_success', 'spbill_create_ip': '0.0.0.0', 'nonce_str': 'gxA4XI1gMAALItAHQlzaUoNIE4xCYA8N', 'trade_type': 'JSAPI', 'sign': '2D2BF7CD5263D1113E1AB5601059AF82'}\n\n> > > dicttoxml.dicttoxml(a)\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/dicttoxml.py\", line 257, in dicttoxml\n    addline('<%s>%s</%s>' % (custom_root, convert(obj, ids, attr_type, parent=custom_root), custom_root))\n  File \"/usr/local/lib/python2.7/dist-packages/dicttoxml.py\", line 134, in convert\n    return convert_dict(obj, ids, parent, attr_type)\n  File \"/usr/local/lib/python2.7/dist-packages/dicttoxml.py\", line 145, in convert_dict\n    LOG.info('Looping inside convert_dict(): key=\"%s\", val=\"%s\", type(val)=\"%s\"' % (key, val, type(val).**name**))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe6 in position 0: ordinal not in range(128)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/35", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/35/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/35/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/35", "id": 59933780, "node_id": "MDU6SXNzdWU1OTkzMzc4MA==", "number": 35, "title": "Support Decimal", "user": {"login": "jmagnusson", "id": 190835, "node_id": "MDQ6VXNlcjE5MDgzNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/190835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmagnusson", "html_url": "https://github.com/jmagnusson", "followers_url": "https://api.github.com/users/jmagnusson/followers", "following_url": "https://api.github.com/users/jmagnusson/following{/other_user}", "gists_url": "https://api.github.com/users/jmagnusson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmagnusson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmagnusson/subscriptions", "organizations_url": "https://api.github.com/users/jmagnusson/orgs", "repos_url": "https://api.github.com/users/jmagnusson/repos", "events_url": "https://api.github.com/users/jmagnusson/events{/privacy}", "received_events_url": "https://api.github.com/users/jmagnusson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-05T10:37:02Z", "updated_at": "2015-03-06T07:14:07Z", "closed_at": "2015-03-06T01:14:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``` python\n>>> import dicttoxml\n>>> from decimal import Decimal\n>>> mydict = dict(mydecimal=Decimal('1.2345'))\n>>> dicttoxml.convert_dict(mydict, False, 'objects', True)\nTypeError: Unsupported data type: 1.2345 (Decimal)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/32", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/32/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/32/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/32", "id": 53636956, "node_id": "MDU6SXNzdWU1MzYzNjk1Ng==", "number": 32, "title": "Duplication in detecting a list, tuple, set or iterable data type", "user": {"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-07T14:25:41Z", "updated_at": "2015-02-23T21:33:12Z", "closed_at": "2015-02-23T21:33:12Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Line 69 in `get_xml_type()` reads:\n\n```\nif type(val).__name__ in ('list', 'set', 'tuple') or isinstance(val, collections.Iterable):\n```\n\nThis is redundant. List, set and tuple types are also instances of collections.Iterable. So the line can be changed to:\n\n```\nif isinstance(val, collections.Iterable):\n```\n\nSame with line 127 in `convert()`:\n\n```\nif type(obj) in (list, set, tuple) or isinstance(obj, collections.Iterable):\n```\n\nIt can be changed to:\n\n```\nif isinstance(obj, collections.Iterable):\n```\n\nSame with line 158 in `convert_dict()`:\n\n```\nelif type(val) in (list, set, tuple) or isinstance(val, collections.Iterable):\n```\n\nIt can be changed to:\n\n```\nelif isinstance(val, collections.Iterable):\n```\n\nSame with line 193 in `convert_list()`:\n\n```\nelif type(item) in (list, set, tuple) or isinstance(item, collections.Iterable):\n```\n\nIt can be changed to:\n\n```\nelif isinstance(item, collections.Iterable):\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/30", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/30/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/30/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/30", "id": 52305812, "node_id": "MDU6SXNzdWU1MjMwNTgxMg==", "number": 30, "title": "Invalid links in pypi distribution", "user": {"login": "isaac-councill", "id": 5167899, "node_id": "MDQ6VXNlcjUxNjc4OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5167899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaac-councill", "html_url": "https://github.com/isaac-councill", "followers_url": "https://api.github.com/users/isaac-councill/followers", "following_url": "https://api.github.com/users/isaac-councill/following{/other_user}", "gists_url": "https://api.github.com/users/isaac-councill/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaac-councill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaac-councill/subscriptions", "organizations_url": "https://api.github.com/users/isaac-councill/orgs", "repos_url": "https://api.github.com/users/isaac-councill/repos", "events_url": "https://api.github.com/users/isaac-councill/events{/privacy}", "received_events_url": "https://api.github.com/users/isaac-councill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-17T23:20:14Z", "updated_at": "2015-01-07T15:36:14Z", "closed_at": "2015-01-06T22:21:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The links page https://pypi.python.org/simple/dicttoxml/ contains broken build_url links, e.g.:\n\nhttps://github.com/quandyfactory/dicttoxml/blob/master/dist/dicttoxml-1.5.7.tar.gz?raw=true\n\nThis confuses some build tools such as pants (http://pantsbuild.github.io/), which parse the link content.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/28", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/28/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/28/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/28", "id": 49444252, "node_id": "MDU6SXNzdWU0OTQ0NDI1Mg==", "number": 28, "title": "Issue raised on StackOverflow", "user": {"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-19T19:48:40Z", "updated_at": "2016-07-07T02:30:59Z", "closed_at": "2016-07-07T02:30:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "http://stackoverflow.com/questions/25104385/error-in-python-generated-xml/25105745\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/24", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/24/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/24/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/24", "id": 40243732, "node_id": "MDU6SXNzdWU0MDI0MzczMg==", "number": 24, "title": "Creates invalid XML when a dict has keys containing \"/\"", "user": {"login": "gdude2002", "id": 204153, "node_id": "MDQ6VXNlcjIwNDE1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/204153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdude2002", "html_url": "https://github.com/gdude2002", "followers_url": "https://api.github.com/users/gdude2002/followers", "following_url": "https://api.github.com/users/gdude2002/following{/other_user}", "gists_url": "https://api.github.com/users/gdude2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdude2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdude2002/subscriptions", "organizations_url": "https://api.github.com/users/gdude2002/orgs", "repos_url": "https://api.github.com/users/gdude2002/repos", "events_url": "https://api.github.com/users/gdude2002/events{/privacy}", "received_events_url": "https://api.github.com/users/gdude2002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-08-14T11:02:14Z", "updated_at": "2014-08-18T20:47:59Z", "closed_at": "2014-08-18T20:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I have this JSON..\n\n``` json\n{\n    \"routes\": {\n        \"/test/[test variable]\": {\n            \"GET\": \"A test route\"\n        },\n        \"/routes\": {\n            \"GET\": \"The list of routes in a computer-readable format\"\n        }\n    }\n}\n```\n\nThis gives us..\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<root>\n    <routes type=\"dict\">\n        </test/[test variable] type=\"dict\">\n            <GET type=\"str\">A test route</GET>\n        <//test/[test variable]>\n        </routes type=\"dict\">\n            <GET type=\"str\">The list of routes in a computer-readable format</GET>\n        <//routes>\n    </routes>\n</root>\n```\n\nThis is invalid XML. Any ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/23", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/23/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/23/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/23", "id": 39896280, "node_id": "MDU6SXNzdWUzOTg5NjI4MA==", "number": 23, "title": "Memory leak??", "user": {"login": "wcatino", "id": 4720312, "node_id": "MDQ6VXNlcjQ3MjAzMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4720312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcatino", "html_url": "https://github.com/wcatino", "followers_url": "https://api.github.com/users/wcatino/followers", "following_url": "https://api.github.com/users/wcatino/following{/other_user}", "gists_url": "https://api.github.com/users/wcatino/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcatino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcatino/subscriptions", "organizations_url": "https://api.github.com/users/wcatino/orgs", "repos_url": "https://api.github.com/users/wcatino/repos", "events_url": "https://api.github.com/users/wcatino/events{/privacy}", "received_events_url": "https://api.github.com/users/wcatino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-09T22:54:53Z", "updated_at": "2014-12-10T02:00:22Z", "closed_at": "2014-12-10T02:00:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I executed dicttoxml.dicttoxml( ) in rapid succession on JSON data, and each execution would be slower than the previous. I am applying this to conversion of large amounts of data. So in a very short time, the conversion became too slow to finish in a reasonable time. The conversion times for 1000 records per iteration were approximately: 5s, 15s, 22s, 45s...\nI think there may be a memory leak.\nSo, to hack around this issue, I used reload(dicttoxml) after each conversion, and the conversion times remained constant each time.\nIs this issue known?  Is there a better workaround available?  Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/19", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/19/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/19/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/19", "id": 34887432, "node_id": "MDU6SXNzdWUzNDg4NzQzMg==", "number": 19, "title": "Add support to specify a custom `item` name", "user": {"login": "murielsilveira", "id": 4459232, "node_id": "MDQ6VXNlcjQ0NTkyMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4459232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murielsilveira", "html_url": "https://github.com/murielsilveira", "followers_url": "https://api.github.com/users/murielsilveira/followers", "following_url": "https://api.github.com/users/murielsilveira/following{/other_user}", "gists_url": "https://api.github.com/users/murielsilveira/gists{/gist_id}", "starred_url": "https://api.github.com/users/murielsilveira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murielsilveira/subscriptions", "organizations_url": "https://api.github.com/users/murielsilveira/orgs", "repos_url": "https://api.github.com/users/murielsilveira/repos", "events_url": "https://api.github.com/users/murielsilveira/events{/privacy}", "received_events_url": "https://api.github.com/users/murielsilveira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-06-03T17:51:10Z", "updated_at": "2016-07-07T02:32:15Z", "closed_at": "2016-07-07T02:32:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add support to specify a custom `item` name.\ne.g.:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<root>\n    <my_list>\n        <my_custom_item_name>\n            <foo>Abc</foo>\n            <bar>123</bar>\n        </my_custom_item_name>\n        <my_custom_item_name>\n            <foo>Def</foo>\n            <bar>456</bar>\n        </my_custom_item_name>\n    </my_list>\n</root>\n```\n\ninstead of:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<root>\n    <my_list>\n        <item>\n            <foo>Abc</foo>\n            <bar>123</bar>\n        </item>\n        <item>\n            <foo>Def</foo>\n            <bar>456</bar>\n        </item>\n    </my_list>\n</root>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/18", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/18/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/18/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/18", "id": 34864674, "node_id": "MDU6SXNzdWUzNDg2NDY3NA==", "number": 18, "title": "Add support to a custom root element.", "user": {"login": "murielsilveira", "id": 4459232, "node_id": "MDQ6VXNlcjQ0NTkyMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4459232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murielsilveira", "html_url": "https://github.com/murielsilveira", "followers_url": "https://api.github.com/users/murielsilveira/followers", "following_url": "https://api.github.com/users/murielsilveira/following{/other_user}", "gists_url": "https://api.github.com/users/murielsilveira/gists{/gist_id}", "starred_url": "https://api.github.com/users/murielsilveira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murielsilveira/subscriptions", "organizations_url": "https://api.github.com/users/murielsilveira/orgs", "repos_url": "https://api.github.com/users/murielsilveira/repos", "events_url": "https://api.github.com/users/murielsilveira/events{/privacy}", "received_events_url": "https://api.github.com/users/murielsilveira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-03T13:49:13Z", "updated_at": "2014-06-03T16:48:42Z", "closed_at": "2014-06-03T16:48:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add support to a custom root element.\ne.g.:\n<? xml version=\"1.0\" encoding=\"UTF-8\" ? >\n< customroot >\n    < foo >Abc< /foo >\n    < bar >123< /bar >\n< /customroot >\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/15", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/15/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/15/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/15", "id": 32081254, "node_id": "MDU6SXNzdWUzMjA4MTI1NA==", "number": 15, "title": "Include README.markdown and LICENCE.txt in tarballs", "user": {"login": "stpierre", "id": 632407, "node_id": "MDQ6VXNlcjYzMjQwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/632407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stpierre", "html_url": "https://github.com/stpierre", "followers_url": "https://api.github.com/users/stpierre/followers", "following_url": "https://api.github.com/users/stpierre/following{/other_user}", "gists_url": "https://api.github.com/users/stpierre/gists{/gist_id}", "starred_url": "https://api.github.com/users/stpierre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stpierre/subscriptions", "organizations_url": "https://api.github.com/users/stpierre/orgs", "repos_url": "https://api.github.com/users/stpierre/repos", "events_url": "https://api.github.com/users/stpierre/events{/privacy}", "received_events_url": "https://api.github.com/users/stpierre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-23T17:23:16Z", "updated_at": "2014-04-24T11:38:09Z", "closed_at": "2014-04-23T20:51:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've posed dicttoxml for inclusion in Fedora and EPEL (https://bugzilla.redhat.com/show_bug.cgi?id=1084199), and they'd like the licence included in the tarball so that there's more of a guarantee that the LICENSE file for a given release agrees with the actual license for that release.  Would it be possible to include LICENSE.txt (and, ideally, README.markdown) in the release tarballs in the future?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/14", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/14/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/14/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/14", "id": 30592450, "node_id": "MDU6SXNzdWUzMDU5MjQ1MA==", "number": 14, "title": "Possible corrupt 1.3.1 release?", "user": {"login": "oliviervg1", "id": 1789233, "node_id": "MDQ6VXNlcjE3ODkyMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1789233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oliviervg1", "html_url": "https://github.com/oliviervg1", "followers_url": "https://api.github.com/users/oliviervg1/followers", "following_url": "https://api.github.com/users/oliviervg1/following{/other_user}", "gists_url": "https://api.github.com/users/oliviervg1/gists{/gist_id}", "starred_url": "https://api.github.com/users/oliviervg1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oliviervg1/subscriptions", "organizations_url": "https://api.github.com/users/oliviervg1/orgs", "repos_url": "https://api.github.com/users/oliviervg1/repos", "events_url": "https://api.github.com/users/oliviervg1/events{/privacy}", "received_events_url": "https://api.github.com/users/oliviervg1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-01T12:00:22Z", "updated_at": "2014-04-15T14:29:15Z", "closed_at": "2014-04-14T21:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have successfully been installing v1.3.1 of dicttoxml up until today via easy_install as part of a build job.\n\nHowever, it seems that the release might have gotten corrupted:\n\n```\nSearching for dicttoxml\nReading http://pypi.python.org/simple/dicttoxml/\nBest match: dicttoxml 1.3.1\nDownloading https://github.com/quandyfactory/dicttoxml/blob/master/dist/dicttoxml-1.3.1.tar.gz?raw=true\nProcessing dicttoxml-1.3.1.tar.gz\nerror: Not a recognized archive type: /tmp/easy_install-MtVemN/dicttoxml-1.3.1.tar.gz\n```\n\nIt's very likely that this was caused by GitHub itself... Maybe you could delete the release and make it available again?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/13", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/13/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/13/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/13", "id": 29251920, "node_id": "MDU6SXNzdWUyOTI1MTkyMA==", "number": 13, "title": "An error while converting lists containing 'None' elements", "user": {"login": "gray75c", "id": 3264888, "node_id": "MDQ6VXNlcjMyNjQ4ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3264888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gray75c", "html_url": "https://github.com/gray75c", "followers_url": "https://api.github.com/users/gray75c/followers", "following_url": "https://api.github.com/users/gray75c/following{/other_user}", "gists_url": "https://api.github.com/users/gray75c/gists{/gist_id}", "starred_url": "https://api.github.com/users/gray75c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gray75c/subscriptions", "organizations_url": "https://api.github.com/users/gray75c/orgs", "repos_url": "https://api.github.com/users/gray75c/repos", "events_url": "https://api.github.com/users/gray75c/events{/privacy}", "received_events_url": "https://api.github.com/users/gray75c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-12T10:32:31Z", "updated_at": "2014-04-14T20:50:21Z", "closed_at": "2014-04-14T20:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code:\n\n``` python\ndicttoxml([None])\n```\n\nproduces:\n\n```\nTypeError: Unsupported data type: None (NoneType)\n```\n\nI belive it should return:\n\n```\nu'<?xml version=\"1.0\" encoding=\"UTF-8\" ?><root><item type=\"null\"></item></root>'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/10", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/10/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/10/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/10", "id": 22475281, "node_id": "MDU6SXNzdWUyMjQ3NTI4MQ==", "number": 10, "title": "Conversion fails when JSON key name is not a legal XML element name", "user": {"login": "dwcramer", "id": 886685, "node_id": "MDQ6VXNlcjg4NjY4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/886685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwcramer", "html_url": "https://github.com/dwcramer", "followers_url": "https://api.github.com/users/dwcramer/followers", "following_url": "https://api.github.com/users/dwcramer/following{/other_user}", "gists_url": "https://api.github.com/users/dwcramer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwcramer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwcramer/subscriptions", "organizations_url": "https://api.github.com/users/dwcramer/orgs", "repos_url": "https://api.github.com/users/dwcramer/repos", "events_url": "https://api.github.com/users/dwcramer/events{/privacy}", "received_events_url": "https://api.github.com/users/dwcramer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-11T20:45:53Z", "updated_at": "2014-04-14T18:36:12Z", "closed_at": "2014-04-14T18:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the input JSON:\n\n```\n{\n   \"^.{0,256}$\": \"foo\"\n}\n```\n\nI receive the following error:\n\n```\ndcramer@anatine ~/Desktop/json2plainparams/json_schema (master)\n$ ./json2xml.py test.json \nDebug mode is on. Events are logged at: dicttoxml.log\ntest.json\nTraceback (most recent call last):\n  File \"./json2xml.py\", line 18, in <module>\n    dom = parseString(xml)\n  File \"/usr/lib/python2.7/xml/dom/minidom.py\", line 1931, in parseString\n    return expatbuilder.parseString(string)\n  File \"/usr/lib/python2.7/xml/dom/expatbuilder.py\", line 940, in parseString\n    return builder.parseString(string)\n  File \"/usr/lib/python2.7/xml/dom/expatbuilder.py\", line 223, in parseString\n    parser.Parse(string, True)\nxml.parsers.expat.ExpatError: not well-formed (invalid token): line 1, column 46\n```\n\nDue to the fact that <^.{0,256}$>foo</^.{0,256}$> would not be well-formed xml.\n\nI would suggest an xml format like <key name=\"^.{0,256}$\">foo</key> to avoid this problem. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/9", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/9/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/9/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/9", "id": 16627243, "node_id": "MDU6SXNzdWUxNjYyNzI0Mw==", "number": 9, "title": "Checking int the \"convert_list\" function.", "user": {"login": "akryazhev", "id": 4558209, "node_id": "MDQ6VXNlcjQ1NTgyMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4558209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akryazhev", "html_url": "https://github.com/akryazhev", "followers_url": "https://api.github.com/users/akryazhev/followers", "following_url": "https://api.github.com/users/akryazhev/following{/other_user}", "gists_url": "https://api.github.com/users/akryazhev/gists{/gist_id}", "starred_url": "https://api.github.com/users/akryazhev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akryazhev/subscriptions", "organizations_url": "https://api.github.com/users/akryazhev/orgs", "repos_url": "https://api.github.com/users/akryazhev/repos", "events_url": "https://api.github.com/users/akryazhev/events{/privacy}", "received_events_url": "https://api.github.com/users/akryazhev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-07-11T12:02:55Z", "updated_at": "2013-07-16T19:36:34Z", "closed_at": "2013-07-12T16:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > elif type(item) in (list, set, tuple):\n> > > May be this checking is too narrow? It will be cool to make it more wide.\n> > > For example, let it to use any iterable Python-object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/8", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/8/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/8/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/8", "id": 16627060, "node_id": "MDU6SXNzdWUxNjYyNzA2MA==", "number": 8, "title": "Typo in \"convert_list\" function", "user": {"login": "akryazhev", "id": 4558209, "node_id": "MDQ6VXNlcjQ1NTgyMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4558209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akryazhev", "html_url": "https://github.com/akryazhev", "followers_url": "https://api.github.com/users/akryazhev/followers", "following_url": "https://api.github.com/users/akryazhev/following{/other_user}", "gists_url": "https://api.github.com/users/akryazhev/gists{/gist_id}", "starred_url": "https://api.github.com/users/akryazhev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akryazhev/subscriptions", "organizations_url": "https://api.github.com/users/akryazhev/orgs", "repos_url": "https://api.github.com/users/akryazhev/repos", "events_url": "https://api.github.com/users/akryazhev/events{/privacy}", "received_events_url": "https://api.github.com/users/akryazhev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-11T11:57:49Z", "updated_at": "2013-07-11T13:35:03Z", "closed_at": "2013-07-11T13:35:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > raise TypeError('Unsupported data type: %s (%s)' % (obj, type(obj).**name**))\n> > > There is no \"obj\" definition in this function.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/7", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/7/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/7/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/7", "id": 13778986, "node_id": "MDU6SXNzdWUxMzc3ODk4Ng==", "number": 7, "title": "Unique identifier for <item> containers ", "user": {"login": "cpetz", "id": 4295816, "node_id": "MDQ6VXNlcjQyOTU4MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4295816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpetz", "html_url": "https://github.com/cpetz", "followers_url": "https://api.github.com/users/cpetz/followers", "following_url": "https://api.github.com/users/cpetz/following{/other_user}", "gists_url": "https://api.github.com/users/cpetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpetz/subscriptions", "organizations_url": "https://api.github.com/users/cpetz/orgs", "repos_url": "https://api.github.com/users/cpetz/repos", "events_url": "https://api.github.com/users/cpetz/events{/privacy}", "received_events_url": "https://api.github.com/users/cpetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-04-29T20:17:40Z", "updated_at": "2013-05-07T01:34:07Z", "closed_at": "2013-05-07T01:34:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add some way to uniquely identify consecutive <item></item> tag pairs in the same nested level. As per your suggestion, an incremented tag attribute should do the trick.Should probably be optional with a flag passed to dicttoxml(). \n\nI assume the unique id will be akin to the item/array index number that the <item> tag represents, and will reset for each nested level. (globally unique seems silly, but on that note..)\n\nA longer term goal might be to accept an iterator from the user at the beginning of each sequence; leaving flexibility open without excessive complication. The trick might be embedding the iterator. Maybe perform a typecheck on the 0th index of any sequence, and if a custom class instance is found, pop it from the sequence and process it as an attibute value iterator. \nWe can let this last one ferment for a while ;) Thanks for your hard work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/2", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/2/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/2/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/2", "id": 3082557, "node_id": "MDU6SXNzdWUzMDgyNTU3", "number": 2, "title": "Bug: dict value with unsupported type fails silently", "user": {"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-02-03T12:42:13Z", "updated_at": "2012-02-29T13:48:38Z", "closed_at": "2012-02-29T13:48:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "If you pass in a dict and one of the values is an unsupported type (e.g. a datetime object), the code doesn't raise an exception - it just passes silently over the value without adding it to the XML output. Here's an example that produces the issue:\n\n```\n>>> import dict2xml\n>>> import datetime\n>>> now = datetime.datetime.today()\n>>> mydict = { 'name': 'Joe Blow', 'time': now }\n>>> xml = dict2xml.dict2xml(mydict)\n>>> print xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?><root><name type=\"str\">Joe Blow</name></root>\n>>> # the 'time' key and its datetime value just silently disappeared\n```\n\nI propose the following fix:\n- Raise an exception in `convert_dict()` and `convert_list()` if one of the elements is an unsupported type (currently, only `convert()` raises an exception).\n- Include an optional parameter that will automatically convert datetimes into UTC strings in the XML output.\n- Include an optional parameter that will automatically convert other unsupported types into their string representations.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/1", "repository_url": "https://api.github.com/repos/quandyfactory/dicttoxml", "labels_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/1/comments", "events_url": "https://api.github.com/repos/quandyfactory/dicttoxml/issues/1/events", "html_url": "https://github.com/quandyfactory/dicttoxml/issues/1", "id": 2963689, "node_id": "MDU6SXNzdWUyOTYzNjg5", "number": 1, "title": "Feature Requests", "user": {"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "quandyfactory", "id": 112416, "node_id": "MDQ6VXNlcjExMjQxNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quandyfactory", "html_url": "https://github.com/quandyfactory", "followers_url": "https://api.github.com/users/quandyfactory/followers", "following_url": "https://api.github.com/users/quandyfactory/following{/other_user}", "gists_url": "https://api.github.com/users/quandyfactory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quandyfactory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quandyfactory/subscriptions", "organizations_url": "https://api.github.com/users/quandyfactory/orgs", "repos_url": "https://api.github.com/users/quandyfactory/repos", "events_url": "https://api.github.com/users/quandyfactory/events{/privacy}", "received_events_url": "https://api.github.com/users/quandyfactory/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2012-01-25T11:25:24Z", "updated_at": "2012-01-27T02:33:13Z", "closed_at": "2012-01-27T02:33:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Feature requests:\n1. Add a `root` argument to `dict2xml()` with a default value of `True`. If it is set to false, the function does not wrap the generated XML in an XML declaration and a `<root> ... </root>` element.\n2. Allow `dict2xml()` to consume any supported data type, not just a dict, so you could, e.g. feed a list into the function and it would return XML.\n", "performed_via_github_app": null, "score": 1.0}]}