{"total_count": 307, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/MISP/PyMISP/issues/616", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/616/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/616/events", "html_url": "https://github.com/MISP/PyMISP/issues/616", "id": 679197510, "node_id": "MDU6SXNzdWU2NzkxOTc1MTA=", "number": 616, "title": "bulk change to_ids for an event", "user": {"login": "clucas-gh", "id": 69684411, "node_id": "MDQ6VXNlcjY5Njg0NDEx", "avatar_url": "https://avatars2.githubusercontent.com/u/69684411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clucas-gh", "html_url": "https://github.com/clucas-gh", "followers_url": "https://api.github.com/users/clucas-gh/followers", "following_url": "https://api.github.com/users/clucas-gh/following{/other_user}", "gists_url": "https://api.github.com/users/clucas-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/clucas-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clucas-gh/subscriptions", "organizations_url": "https://api.github.com/users/clucas-gh/orgs", "repos_url": "https://api.github.com/users/clucas-gh/repos", "events_url": "https://api.github.com/users/clucas-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/clucas-gh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-14T14:32:19Z", "updated_at": "2020-08-14T16:26:23Z", "closed_at": "2020-08-14T16:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "This might be similar to the bulk tagging issues in https://github.com/MISP/MISP/issues/3985, but I was hoping to find a way to hit the API to bulk change attributes to_ids values in a field. Right now I am looping through update_attribute but that is slower than doing it by hand. I have a large amount that at this rate would take a week or so to change as it creates a new post request for each attribute change. Is there a way to add functionality to pass a large set of attribute uuids and change the to_ids or any other way to do this other than iterating through each attribute in each event and creating a new post request for each? Perhaps even a bulk change to_ids for all attributes in an event would be really welcome? Going through the GUI I know i can change one page at a time, but when I'm dealing with sometimes 60,000+ attributes in an event and I'm trying to change several hundred events that takes a little while :).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/615", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/615/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/615/events", "html_url": "https://github.com/MISP/PyMISP/issues/615", "id": 678353269, "node_id": "MDU6SXNzdWU2NzgzNTMyNjk=", "number": 615, "title": "Suppress warnings", "user": {"login": "gsonetic", "id": 69247026, "node_id": "MDQ6VXNlcjY5MjQ3MDI2", "avatar_url": "https://avatars2.githubusercontent.com/u/69247026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsonetic", "html_url": "https://github.com/gsonetic", "followers_url": "https://api.github.com/users/gsonetic/followers", "following_url": "https://api.github.com/users/gsonetic/following{/other_user}", "gists_url": "https://api.github.com/users/gsonetic/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsonetic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsonetic/subscriptions", "organizations_url": "https://api.github.com/users/gsonetic/orgs", "repos_url": "https://api.github.com/users/gsonetic/repos", "events_url": "https://api.github.com/users/gsonetic/events{/privacy}", "received_events_url": "https://api.github.com/users/gsonetic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T11:09:14Z", "updated_at": "2020-08-14T07:44:37Z", "closed_at": "2020-08-14T07:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a warning when adding an attribute which does'nt have an object relation:\r\nWARNING [mispevent.py:xx - add_attribute() ] The template (xxx) doesn't have the object_relation (xxx) you're trying to add.\r\n\r\nDebug=False does'nt suppress warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/614", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/614/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/614/events", "html_url": "https://github.com/MISP/PyMISP/issues/614", "id": 677129222, "node_id": "MDU6SXNzdWU2NzcxMjkyMjI=", "number": 614, "title": "Correlation issues - ssdeep on .rsrc", "user": {"login": "imidoriya", "id": 45568592, "node_id": "MDQ6VXNlcjQ1NTY4NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/45568592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imidoriya", "html_url": "https://github.com/imidoriya", "followers_url": "https://api.github.com/users/imidoriya/followers", "following_url": "https://api.github.com/users/imidoriya/following{/other_user}", "gists_url": "https://api.github.com/users/imidoriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/imidoriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imidoriya/subscriptions", "organizations_url": "https://api.github.com/users/imidoriya/orgs", "repos_url": "https://api.github.com/users/imidoriya/repos", "events_url": "https://api.github.com/users/imidoriya/events{/privacy}", "received_events_url": "https://api.github.com/users/imidoriya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-08-11T19:13:53Z", "updated_at": "2020-08-19T21:30:13Z", "closed_at": "2020-08-19T21:30:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Most ssdeep correlations on the PE sections add value, but `.rsrc` seems to be an exception.  Can this be excluded or have an option to exclude it from correlation on that section?  If correlation can't be controlled when adding that attribute, I'd skip the ssdeep hash on that section.  For us, it is creating way too many correlations to be useful for anything and it's growing the correlation table quickly.  I think I have about 300 million correlations associated with the ssdeep of the `.rsrc` section, with many events listing 12,000+ correlations each.  It's drowning out anything else.\r\nhttps://github.com/MISP/PyMISP/blob/a5ff0b850e5c38f22b8230e40e5eb2a3f8987dd8/pymisp/tools/peobject.py#L145\r\n\r\nAs an additional though, any suggestions on how best to delete those correlations from the existing system? :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/611", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/611/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/611/events", "html_url": "https://github.com/MISP/PyMISP/issues/611", "id": 667422330, "node_id": "MDU6SXNzdWU2Njc0MjIzMzA=", "number": 611, "title": "Adding tags to attributes within events Question", "user": {"login": "laostmann", "id": 48743459, "node_id": "MDQ6VXNlcjQ4NzQzNDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/48743459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laostmann", "html_url": "https://github.com/laostmann", "followers_url": "https://api.github.com/users/laostmann/followers", "following_url": "https://api.github.com/users/laostmann/following{/other_user}", "gists_url": "https://api.github.com/users/laostmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/laostmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laostmann/subscriptions", "organizations_url": "https://api.github.com/users/laostmann/orgs", "repos_url": "https://api.github.com/users/laostmann/repos", "events_url": "https://api.github.com/users/laostmann/events{/privacy}", "received_events_url": "https://api.github.com/users/laostmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-28T22:28:00Z", "updated_at": "2020-07-30T09:48:11Z", "closed_at": "2020-07-30T09:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more so a question rather than an issue, but how is it possible to locate the attribute id argument to include in the command below where the underscores are:\r\n\r\npython3 addtag.py -e 8 -a ______ -t 5\r\n\r\nI'm having a hard time locating these id's; hence making a tenfold scenario each time I make an event and have to go looking for the attribute id attached to that event.\r\n\r\nAppreciate any guidance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/609", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/609/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/609/events", "html_url": "https://github.com/MISP/PyMISP/issues/609", "id": 667236078, "node_id": "MDU6SXNzdWU2NjcyMzYwNzg=", "number": 609, "title": "Missing whitespace around keyword argument assignment", "user": {"login": "paalbra", "id": 265215, "node_id": "MDQ6VXNlcjI2NTIxNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/265215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paalbra", "html_url": "https://github.com/paalbra", "followers_url": "https://api.github.com/users/paalbra/followers", "following_url": "https://api.github.com/users/paalbra/following{/other_user}", "gists_url": "https://api.github.com/users/paalbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/paalbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paalbra/subscriptions", "organizations_url": "https://api.github.com/users/paalbra/orgs", "repos_url": "https://api.github.com/users/paalbra/repos", "events_url": "https://api.github.com/users/paalbra/events{/privacy}", "received_events_url": "https://api.github.com/users/paalbra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T17:12:25Z", "updated_at": "2020-07-29T09:27:53Z", "closed_at": "2020-07-29T09:27:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "E.g. this line: https://github.com/MISP/PyMISP/blob/706e553f5df9735204acb1aa8868ffec92f9aee9/pymisp/mispevent.py#L177\r\n\r\npylint says:\r\n```\r\npymisp/mispevent.py:177:53: C0326: Exactly one space required around keyword argument assignment\r\n    def __init__(self, describe_types: Optional[Dict]=None, strict: bool=False):\r\n                                                     ^ (bad-whitespace)\r\npymisp/mispevent.py:177:72: C0326: Exactly one space required around keyword argument assignment\r\n    def __init__(self, describe_types: Optional[Dict]=None, strict: bool=False):\r\n                                                                        ^ (bad-whitespace)\r\n```\r\n\r\nflake8 says:\r\n```\r\npymisp/mispevent.py:177:54: E252 missing whitespace around parameter equals\r\npymisp/mispevent.py:177:55: E252 missing whitespace around parameter equals\r\npymisp/mispevent.py:177:73: E252 missing whitespace around parameter equals\r\npymisp/mispevent.py:177:74: E252 missing whitespace around parameter equals\r\n```\r\n\r\nFrom [PEP 8](https://www.python.org/dev/peps/pep-0008/):\r\n\r\n> Don't use spaces around the = sign when used to indicate a keyword argument, or when used to indicate a default value for an unannotated function parameter.\r\n> When combining an argument annotation with a default value, however, do use spaces around the = sign\r\n\r\n```\r\n# Correct:\r\ndef munge(sep: AnyStr = None): ...\r\ndef munge(input: AnyStr, sep: AnyStr = None, limit=1000): ...\r\n# Wrong:\r\ndef munge(input: AnyStr=None): ...\r\ndef munge(input: AnyStr, limit = 1000): ...\r\n```\r\n\r\nAlso some examples in [PEP 484](https://www.python.org/dev/peps/pep-0484/)\r\n\r\nDoes this project follow some formal linting rules? I haven't seen any, but might have missed them", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/603", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/603/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/603/events", "html_url": "https://github.com/MISP/PyMISP/issues/603", "id": 663997611, "node_id": "MDU6SXNzdWU2NjM5OTc2MTE=", "number": 603, "title": "Addtag and Addtag2 error", "user": {"login": "laostmann", "id": 48743459, "node_id": "MDQ6VXNlcjQ4NzQzNDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/48743459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laostmann", "html_url": "https://github.com/laostmann", "followers_url": "https://api.github.com/users/laostmann/followers", "following_url": "https://api.github.com/users/laostmann/following{/other_user}", "gists_url": "https://api.github.com/users/laostmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/laostmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laostmann/subscriptions", "organizations_url": "https://api.github.com/users/laostmann/orgs", "repos_url": "https://api.github.com/users/laostmann/repos", "events_url": "https://api.github.com/users/laostmann/events{/privacy}", "received_events_url": "https://api.github.com/users/laostmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T19:28:45Z", "updated_at": "2020-07-28T18:49:09Z", "closed_at": "2020-07-28T18:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "After running the following command, received the error below: \"python3 addtag2.py -e 8 -t 5\"\r\n\r\nFile \"addtag2.py\", line 32, in <module>\r\n    data = result['response']\r\nTypeError: list indices must be integers or slices, not str", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/602", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/602/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/602/events", "html_url": "https://github.com/MISP/PyMISP/issues/602", "id": 663279236, "node_id": "MDU6SXNzdWU2NjMyNzkyMzY=", "number": 602, "title": "addtag2.py Error", "user": {"login": "laostmann", "id": 48743459, "node_id": "MDQ6VXNlcjQ4NzQzNDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/48743459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laostmann", "html_url": "https://github.com/laostmann", "followers_url": "https://api.github.com/users/laostmann/followers", "following_url": "https://api.github.com/users/laostmann/following{/other_user}", "gists_url": "https://api.github.com/users/laostmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/laostmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laostmann/subscriptions", "organizations_url": "https://api.github.com/users/laostmann/orgs", "repos_url": "https://api.github.com/users/laostmann/repos", "events_url": "https://api.github.com/users/laostmann/events{/privacy}", "received_events_url": "https://api.github.com/users/laostmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T20:13:26Z", "updated_at": "2020-07-22T10:20:03Z", "closed_at": "2020-07-22T10:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"addtag2.py\", line 41, in <module>\r\n    data = result['response']\r\nTypeError: list indices must be integers or slices, not str\r\n\r\nCommand run to produce error, \"python3 addtag2.py -e 6 -a 19203 -t 3\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/601", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/601/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/601/events", "html_url": "https://github.com/MISP/PyMISP/issues/601", "id": 663237022, "node_id": "MDU6SXNzdWU2NjMyMzcwMjI=", "number": 601, "title": "Error when adding named attributes to event in MISP (Need category?)", "user": {"login": "laostmann", "id": 48743459, "node_id": "MDQ6VXNlcjQ4NzQzNDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/48743459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laostmann", "html_url": "https://github.com/laostmann", "followers_url": "https://api.github.com/users/laostmann/followers", "following_url": "https://api.github.com/users/laostmann/following{/other_user}", "gists_url": "https://api.github.com/users/laostmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/laostmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laostmann/subscriptions", "organizations_url": "https://api.github.com/users/laostmann/orgs", "repos_url": "https://api.github.com/users/laostmann/repos", "events_url": "https://api.github.com/users/laostmann/events{/privacy}", "received_events_url": "https://api.github.com/users/laostmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-21T18:57:06Z", "updated_at": "2020-07-22T17:09:30Z", "closed_at": "2020-07-22T17:09:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Below is the error thrown, \r\n\r\n\"ERROR [api.py:2297 - _check_response() ] Something went wrong (403): {'saved': False, 'name': 'Could not add Attribute', 'message': 'Could not add Attribute', 'url': '/attributes/add', 'errors': {'category': ['Options : Payload delivery, Antivirus detection, Payload installation, Files dropped ...'], 'type': ['Options depend on the selected category.'], 'value': ['Value not in the right type/format. Please double check the value or select type \"other\".']}}\r\n{'errors': (403, {'saved': False, 'name': 'Could not add Attribute', 'message': 'Could not add Attribute', 'url': '/attributes/add', 'errors': {'category': ['Options : Payload delivery, Antivirus detection, Payload installation, Files dropped ...'], 'type': ['Options depend on the selected category.'], 'value': ['Value not in the right type/format. Please double check the value or select type \"other\".']}})}\"\r\n\r\nCommand ran \"python3 add_named_attribute.py -e 6 -t ip-dist -v 112.217.108.138\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/600", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/600/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/600/events", "html_url": "https://github.com/MISP/PyMISP/issues/600", "id": 658983099, "node_id": "MDU6SXNzdWU2NTg5ODMwOTk=", "number": 600, "title": "Export Events in STIX v1 in XML", "user": {"login": "matthiascroos4888", "id": 61494294, "node_id": "MDQ6VXNlcjYxNDk0Mjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/61494294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiascroos4888", "html_url": "https://github.com/matthiascroos4888", "followers_url": "https://api.github.com/users/matthiascroos4888/followers", "following_url": "https://api.github.com/users/matthiascroos4888/following{/other_user}", "gists_url": "https://api.github.com/users/matthiascroos4888/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiascroos4888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiascroos4888/subscriptions", "organizations_url": "https://api.github.com/users/matthiascroos4888/orgs", "repos_url": "https://api.github.com/users/matthiascroos4888/repos", "events_url": "https://api.github.com/users/matthiascroos4888/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiascroos4888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-17T07:54:22Z", "updated_at": "2020-07-17T12:22:35Z", "closed_at": "2020-07-17T12:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is currently not possible to get STIX as return type in XML format from the `events/restSearch` endpoint.\r\nI use the `search(controller=\"events\", return_format=\"stix\")` method of the `PyMISPExpanded` class.\r\n\r\nThis is caused by an invalid `Accept` header which gets set to `Accept: application/json` instead of `Accept: application/xml`.\r\nThus, the STIX content returned is a JSON object and not an XML as in prior MISP releases. \r\n\r\nThis issue is referenced to the following issue in the MISP project https://github.com/MISP/MISP/issues/5618.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/599", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/599/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/599/events", "html_url": "https://github.com/MISP/PyMISP/issues/599", "id": 658039545, "node_id": "MDU6SXNzdWU2NTgwMzk1NDU=", "number": 599, "title": "Unable to build doc with epydoc", "user": {"login": "paalbra", "id": 265215, "node_id": "MDQ6VXNlcjI2NTIxNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/265215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paalbra", "html_url": "https://github.com/paalbra", "followers_url": "https://api.github.com/users/paalbra/followers", "following_url": "https://api.github.com/users/paalbra/following{/other_user}", "gists_url": "https://api.github.com/users/paalbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/paalbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paalbra/subscriptions", "organizations_url": "https://api.github.com/users/paalbra/orgs", "repos_url": "https://api.github.com/users/paalbra/repos", "events_url": "https://api.github.com/users/paalbra/events{/privacy}", "received_events_url": "https://api.github.com/users/paalbra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T09:50:26Z", "updated_at": "2020-07-16T10:17:29Z", "closed_at": "2020-07-16T10:17:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/MISP/PyMISP/blob/main/README.md says that you may build documentation with:\r\n\r\n`epydoc --url https://github.com/MISP/PyMISP --graph all --name PyMISP --pdf pymisp -o doc`\r\n\r\nThis fails with python3 because of incompatibility (epydoc 3.0.1).\r\n\r\nIs epydoc abandoned?\r\n\r\nAre there any good alternatives?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/598", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/598/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/598/events", "html_url": "https://github.com/MISP/PyMISP/issues/598", "id": 657601044, "node_id": "MDU6SXNzdWU2NTc2MDEwNDQ=", "number": 598, "title": "Attribute Error: Create_dummy_event (object has no attribute)", "user": {"login": "laostmann", "id": 48743459, "node_id": "MDQ6VXNlcjQ4NzQzNDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/48743459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laostmann", "html_url": "https://github.com/laostmann", "followers_url": "https://api.github.com/users/laostmann/followers", "following_url": "https://api.github.com/users/laostmann/following{/other_user}", "gists_url": "https://api.github.com/users/laostmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/laostmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laostmann/subscriptions", "organizations_url": "https://api.github.com/users/laostmann/orgs", "repos_url": "https://api.github.com/users/laostmann/repos", "events_url": "https://api.github.com/users/laostmann/events{/privacy}", "received_events_url": "https://api.github.com/users/laostmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T19:36:05Z", "updated_at": "2020-07-16T09:31:09Z", "closed_at": "2020-07-16T09:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"create_dummy_event.py\", line 23, in <module>\r\n    tools.create_dummy_event(misp)\r\n  File \"/Users/user/Desktop/PyMISP/examples/events/tools.py\", line 58, in create_dummy_event\r\n    return misp.new_event(0, 4, 0, 'dummy event')\r\nAttributeError: 'PyMISP' object has no attribute 'new_event'\r\n\r\nInstalled PyMISP pip3 and tried to run an example (create_dummy_event) Error above was displayed upon run", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/596", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/596/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/596/events", "html_url": "https://github.com/MISP/PyMISP/issues/596", "id": 648390018, "node_id": "MDU6SXNzdWU2NDgzOTAwMTg=", "number": 596, "title": "Unexpected response from server: ", "user": {"login": "nbyt3", "id": 55763581, "node_id": "MDQ6VXNlcjU1NzYzNTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/55763581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbyt3", "html_url": "https://github.com/nbyt3", "followers_url": "https://api.github.com/users/nbyt3/followers", "following_url": "https://api.github.com/users/nbyt3/following{/other_user}", "gists_url": "https://api.github.com/users/nbyt3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbyt3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbyt3/subscriptions", "organizations_url": "https://api.github.com/users/nbyt3/orgs", "repos_url": "https://api.github.com/users/nbyt3/repos", "events_url": "https://api.github.com/users/nbyt3/events{/privacy}", "received_events_url": "https://api.github.com/users/nbyt3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-30T18:07:48Z", "updated_at": "2020-07-22T10:23:18Z", "closed_at": "2020-07-22T10:23:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 18.04 \r\n32GB Ram\r\n10 CPU\r\nMISP 2.4.124\r\n19453 Events\r\n218895 Attributes\r\n\r\nI am getting the following error when running:\r\nr = misp.search(controller='events', includeDecayScore=True)\r\n\r\nIs there somewhere on the MISP server where I can see the error message from either Apache2 or the MISP logging found in /var/www/MISP/app/tmp/logs?\r\n\r\nError:\r\n  File \"/home/_/.local/lib/python3.6/site-packages/pymisp/api.py\", line 1524, in search\r\n    normalized_response = self._check_json_response(response)\r\n  File \"/home/_/.local/lib/python3.6/site-packages/pymisp/api.py\", line 2160, in _check_json_response\r\n    r = self._check_response(response, expect_json=True)\r\n  File \"/home/_/.local/lib/python3.6/site-packages/pymisp/api.py\", line 2195, in _check_response\r\n    raise PyMISPUnexpectedResponse(f'Unexpected response from server: {response.text}')\r\npymisp.exceptions.PyMISPUnexpectedResponse: Unexpected response from server: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/594", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/594/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/594/events", "html_url": "https://github.com/MISP/PyMISP/issues/594", "id": 645582961, "node_id": "MDU6SXNzdWU2NDU1ODI5NjE=", "number": 594, "title": "ImportError: cannot import name 'ExpandedPyMISP'", "user": {"login": "dmolina213", "id": 42444130, "node_id": "MDQ6VXNlcjQyNDQ0MTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/42444130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmolina213", "html_url": "https://github.com/dmolina213", "followers_url": "https://api.github.com/users/dmolina213/followers", "following_url": "https://api.github.com/users/dmolina213/following{/other_user}", "gists_url": "https://api.github.com/users/dmolina213/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmolina213/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmolina213/subscriptions", "organizations_url": "https://api.github.com/users/dmolina213/orgs", "repos_url": "https://api.github.com/users/dmolina213/repos", "events_url": "https://api.github.com/users/dmolina213/events{/privacy}", "received_events_url": "https://api.github.com/users/dmolina213/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-06-25T13:54:08Z", "updated_at": "2020-06-25T21:25:34Z", "closed_at": "2020-06-25T21:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the error. I wasnt getting the error the other day. I am using python3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/593", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/593/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/593/events", "html_url": "https://github.com/MISP/PyMISP/issues/593", "id": 644406256, "node_id": "MDU6SXNzdWU2NDQ0MDYyNTY=", "number": 593, "title": "Should a FileObject be standalone ?", "user": {"login": "ldbo", "id": 57808795, "node_id": "MDQ6VXNlcjU3ODA4Nzk1", "avatar_url": "https://avatars0.githubusercontent.com/u/57808795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldbo", "html_url": "https://github.com/ldbo", "followers_url": "https://api.github.com/users/ldbo/followers", "following_url": "https://api.github.com/users/ldbo/following{/other_user}", "gists_url": "https://api.github.com/users/ldbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldbo/subscriptions", "organizations_url": "https://api.github.com/users/ldbo/orgs", "repos_url": "https://api.github.com/users/ldbo/repos", "events_url": "https://api.github.com/users/ldbo/events{/privacy}", "received_events_url": "https://api.github.com/users/ldbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-24T08:01:10Z", "updated_at": "2020-07-02T16:17:55Z", "closed_at": "2020-07-02T16:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The constructor of `tools.fileobject.FileObject` uses the default value `True` for `standalone`, which prevents the user from using `FileObject.add_reference` to add a reference to another object. A workaround is to use `PyMISP.add_object_reference`, but this is less convenient.\r\n\r\nIs there any particular reason for `FileObject` to be standalone ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/592", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/592/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/592/events", "html_url": "https://github.com/MISP/PyMISP/issues/592", "id": 640055379, "node_id": "MDU6SXNzdWU2NDAwNTUzNzk=", "number": 592, "title": "obj.add_attribute fails to set sharing group", "user": {"login": "imidoriya", "id": 45568592, "node_id": "MDQ6VXNlcjQ1NTY4NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/45568592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imidoriya", "html_url": "https://github.com/imidoriya", "followers_url": "https://api.github.com/users/imidoriya/followers", "following_url": "https://api.github.com/users/imidoriya/following{/other_user}", "gists_url": "https://api.github.com/users/imidoriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/imidoriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imidoriya/subscriptions", "organizations_url": "https://api.github.com/users/imidoriya/orgs", "repos_url": "https://api.github.com/users/imidoriya/repos", "events_url": "https://api.github.com/users/imidoriya/events{/privacy}", "received_events_url": "https://api.github.com/users/imidoriya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-17T00:33:10Z", "updated_at": "2020-06-18T14:47:49Z", "closed_at": "2020-06-18T14:47:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I try to set the sharing group for an attribute when adding it to an object, it fails to do so.\r\nI expect that including the distribution (set to sharing) and setting the sharing_group_id would then set these values when update_object is run.  It instead sets to inherit.\r\n\r\nI also tried capturing the attribute, then setting it manually, but when I do update_attribute, it says \"Attribute could not be saved: Attribute in the request not newer than the local copy'.\r\n\r\nI also tried to include the SharingGroup info with the attribute creation, but it still didn't work.\r\nAny idea how to set this?\r\n\r\n```\r\nobj.add_attribute(\r\n    \"tlsh\",\r\n    value=digest,\r\n    category=\"Payload delivery\",\r\n    to_ids=True,\r\n    distribution=4,\r\n    sharing_group_id=3\r\n)\r\nclient.update_object(obj, obj.id)\r\n```\r\nThis results in a distribution of 5 and a sharing_group_id of 0.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/589", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/589/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/589/events", "html_url": "https://github.com/MISP/PyMISP/issues/589", "id": 630778645, "node_id": "MDU6SXNzdWU2MzA3Nzg2NDU=", "number": 589, "title": "misp_update for unaltered event unpublishes it", "user": {"login": "sustefil", "id": 32512488, "node_id": "MDQ6VXNlcjMyNTEyNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/32512488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sustefil", "html_url": "https://github.com/sustefil", "followers_url": "https://api.github.com/users/sustefil/followers", "following_url": "https://api.github.com/users/sustefil/following{/other_user}", "gists_url": "https://api.github.com/users/sustefil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sustefil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sustefil/subscriptions", "organizations_url": "https://api.github.com/users/sustefil/orgs", "repos_url": "https://api.github.com/users/sustefil/repos", "events_url": "https://api.github.com/users/sustefil/events{/privacy}", "received_events_url": "https://api.github.com/users/sustefil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-04T12:27:49Z", "updated_at": "2020-06-11T07:50:56Z", "closed_at": "2020-06-11T07:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nSo I noticed this thing, If I call the misp_update method on an unaltered event (like this),\r\nthe event actually gets unpublished, is that a bug or feature?\r\n\r\n```\r\n        jevent = misp.get_event(item['id'])\r\n        event = pymisp.MISPEvent()\r\n        event.load(jevent)\r\n        misp.update_event(item['id'])\r\n```\r\n\r\nAlso I get this error from pymisp:\r\n```\r\nERROR [api.py:2178 - _check_response() ] Something went wrong (403): {'saved': False, 'name': 'Could not edit Event', 'message': 'Could not edit Event', 'url': '/events/edit/25619', 'errors': 'Event could not be saved: Event in the request not newer than the local copy.'}\r\n```\r\nI would then assume that the event won't be touched at all..\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/588", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/588/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/588/events", "html_url": "https://github.com/MISP/PyMISP/issues/588", "id": 627572213, "node_id": "MDU6SXNzdWU2Mjc1NzIyMTM=", "number": 588, "title": "'change_user_password' does not use 'user' parameter", "user": {"login": "jagprog5", "id": 17582321, "node_id": "MDQ6VXNlcjE3NTgyMzIx", "avatar_url": "https://avatars3.githubusercontent.com/u/17582321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jagprog5", "html_url": "https://github.com/jagprog5", "followers_url": "https://api.github.com/users/jagprog5/followers", "following_url": "https://api.github.com/users/jagprog5/following{/other_user}", "gists_url": "https://api.github.com/users/jagprog5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jagprog5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jagprog5/subscriptions", "organizations_url": "https://api.github.com/users/jagprog5/orgs", "repos_url": "https://api.github.com/users/jagprog5/repos", "events_url": "https://api.github.com/users/jagprog5/events{/privacy}", "received_events_url": "https://api.github.com/users/jagprog5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-29T22:10:17Z", "updated_at": "2020-06-02T08:08:22Z", "closed_at": "2020-06-02T08:08:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/MISP/PyMISP/blob/1e9eed198eba65d829d7211b6d5fea3d435b169e/pymisp/api.py#L1379\r\n\r\nThis is misleading. e.g. If PyMISP is instantiated with an admin's auth key, and this function is used to change a different user's password, not only will an ok response be given despite the user's password not changing, it will instead have change the admin's password.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/587", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/587/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/587/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/587/events", "html_url": "https://github.com/MISP/PyMISP/issues/587", "id": 627154065, "node_id": "MDU6SXNzdWU2MjcxNTQwNjU=", "number": 587, "title": "MODULE API NOT WORKING : {'name': 'Module not found or not available.', 'message': 'Module not found or not available.', 'url': '/modules/queryEnrichment'}", "user": {"login": "Alaa-HIjazi", "id": 54832687, "node_id": "MDQ6VXNlcjU0ODMyNjg3", "avatar_url": "https://avatars1.githubusercontent.com/u/54832687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alaa-HIjazi", "html_url": "https://github.com/Alaa-HIjazi", "followers_url": "https://api.github.com/users/Alaa-HIjazi/followers", "following_url": "https://api.github.com/users/Alaa-HIjazi/following{/other_user}", "gists_url": "https://api.github.com/users/Alaa-HIjazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alaa-HIjazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alaa-HIjazi/subscriptions", "organizations_url": "https://api.github.com/users/Alaa-HIjazi/orgs", "repos_url": "https://api.github.com/users/Alaa-HIjazi/repos", "events_url": "https://api.github.com/users/Alaa-HIjazi/events{/privacy}", "received_events_url": "https://api.github.com/users/Alaa-HIjazi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-29T10:06:10Z", "updated_at": "2020-05-29T10:24:43Z", "closed_at": "2020-05-29T10:24:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "This template is meant for bug reports, if you have a feature request user the other template.\r\nIf you would like to report a bug, please fill the template bellow\r\n\r\nWork environment\r\nQuestions Answers\r\nType of issue No Module Found\r\nOS version (server) Ubuntu\r\nOS version (client) Win10\r\nPHP version 7.4\r\nMISP version / git hash 2.4.125 (4604aa4)\r\nBrowser Firefox\r\nExpected behavior\r\nWhen Using CURL: curl -k --header \"Authorization: Api key\" --header \"Accept: application/json\" --header \"Content-Type: application/json\" --data @event.json -X POST https://misp.local/modules/queryEnrichment\r\n\r\nand event.json is:\r\n{\r\n\"domain\": \"Test.com\",\r\n\"module\": \"virustotal\"\r\n}\r\nit should get as a response json format, because with securitytrails it's working fine\r\n\r\nActual behavior\r\nWhat i'am receiving is an error :\r\n{'name': 'Module not found or not available.', 'message': 'Module not found or not available.', 'url': '/modules/queryEnrichment'}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/586", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/586/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/586/events", "html_url": "https://github.com/MISP/PyMISP/issues/586", "id": 624501473, "node_id": "MDU6SXNzdWU2MjQ1MDE0NzM=", "number": 586, "title": "MISPEvent.delete_attribute(uuid) doesn't work with feeds", "user": {"login": "ivocarv", "id": 10598647, "node_id": "MDQ6VXNlcjEwNTk4NjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/10598647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivocarv", "html_url": "https://github.com/ivocarv", "followers_url": "https://api.github.com/users/ivocarv/followers", "following_url": "https://api.github.com/users/ivocarv/following{/other_user}", "gists_url": "https://api.github.com/users/ivocarv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivocarv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivocarv/subscriptions", "organizations_url": "https://api.github.com/users/ivocarv/orgs", "repos_url": "https://api.github.com/users/ivocarv/repos", "events_url": "https://api.github.com/users/ivocarv/events{/privacy}", "received_events_url": "https://api.github.com/users/ivocarv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T22:05:46Z", "updated_at": "2020-05-26T08:57:09Z", "closed_at": "2020-05-26T08:57:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deleting an attribute in a JSON event from a feed don't work. To reproduce this:\r\n\r\n1. Load a MISPEvent() object from a json with attributes:\r\nevent.from_dict(**loadEvent(result_uuid)) # loadEvent uses json.load(file)\r\n\r\n2. Delete an attribute from the event (given it's uuid or id):\r\nevent.delete_attribute(uuid)\r\n\r\n3. Save event\r\ne_feed = event.to_feed(with_meta=True)\r\nsaveEvent(e_feed) # uses json.dump to write back to file\r\n\r\nSeems like the problem is with the \"soft delete\" feature from pymisp (to_feed doesn't care about self.deleted in attributes):\r\n\r\ndef delete_attribute(self, attribute_id: str):\r\n        \"\"\"Delete an attribute, you can search by ID or UUID\"\"\"\r\n        found = False\r\n        for a in self.attributes:\r\n            if ((hasattr(a, 'id') and a.id == attribute_id)\r\n                    or (hasattr(a, 'uuid') and a.uuid == attribute_id)):\r\n                **a.delete()**\r\n                found = True\r\n                break\r\n        if not found:\r\n            raise PyMISPError('No attribute with UUID/ID {} found.'.format(attribute_id))\r\n\r\ndef delete(self):\r\n        \"\"\"Mark the attribute as deleted (soft delete)\"\"\"\r\n        **self.deleted = True**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/584", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/584/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/584/events", "html_url": "https://github.com/MISP/PyMISP/issues/584", "id": 622680594, "node_id": "MDU6SXNzdWU2MjI2ODA1OTQ=", "number": 584, "title": "allow configurable timeout", "user": {"login": "cvandeplas", "id": 1073662, "node_id": "MDQ6VXNlcjEwNzM2NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1073662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvandeplas", "html_url": "https://github.com/cvandeplas", "followers_url": "https://api.github.com/users/cvandeplas/followers", "following_url": "https://api.github.com/users/cvandeplas/following{/other_user}", "gists_url": "https://api.github.com/users/cvandeplas/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvandeplas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvandeplas/subscriptions", "organizations_url": "https://api.github.com/users/cvandeplas/orgs", "repos_url": "https://api.github.com/users/cvandeplas/repos", "events_url": "https://api.github.com/users/cvandeplas/events{/privacy}", "received_events_url": "https://api.github.com/users/cvandeplas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 92856196, "node_id": "MDU6TGFiZWw5Mjg1NjE5Ng==", "url": "https://api.github.com/repos/MISP/PyMISP/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cvandeplas", "id": 1073662, "node_id": "MDQ6VXNlcjEwNzM2NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1073662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvandeplas", "html_url": "https://github.com/cvandeplas", "followers_url": "https://api.github.com/users/cvandeplas/followers", "following_url": "https://api.github.com/users/cvandeplas/following{/other_user}", "gists_url": "https://api.github.com/users/cvandeplas/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvandeplas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvandeplas/subscriptions", "organizations_url": "https://api.github.com/users/cvandeplas/orgs", "repos_url": "https://api.github.com/users/cvandeplas/repos", "events_url": "https://api.github.com/users/cvandeplas/events{/privacy}", "received_events_url": "https://api.github.com/users/cvandeplas/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cvandeplas", "id": 1073662, "node_id": "MDQ6VXNlcjEwNzM2NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1073662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvandeplas", "html_url": "https://github.com/cvandeplas", "followers_url": "https://api.github.com/users/cvandeplas/followers", "following_url": "https://api.github.com/users/cvandeplas/following{/other_user}", "gists_url": "https://api.github.com/users/cvandeplas/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvandeplas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvandeplas/subscriptions", "organizations_url": "https://api.github.com/users/cvandeplas/orgs", "repos_url": "https://api.github.com/users/cvandeplas/repos", "events_url": "https://api.github.com/users/cvandeplas/events{/privacy}", "received_events_url": "https://api.github.com/users/cvandeplas/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-21T18:07:33Z", "updated_at": "2020-05-21T21:03:33Z", "closed_at": "2020-05-21T21:03:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PyMISP assumes the server configured in the URL is up and running.\r\nWhen connecting to a server that does not respond to a TCP handshake PyMISP waits about 120 seconds before raising a `PyMISPError`: `PyMISPError: Unable to connect to MISP (https://1.2.3.4). Please make sure the API key and the URL are correct (http/https is required): HTTPSConnectionPool(host='1.2.3.4', port=443): Max retries exceeded with url: /servers/getPyMISPVersion.json (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f796dda16d8>: Failed to establish a new connection: [Errno 110] Connection timed out',))`\r\n\r\nIt would be very nice if we could configure a timeout when initiating the connection to MISP:\r\n```\r\nmisp = PyMISP(url='https://1.2.3.4', key='ajfljlds', timeout=2)\r\n```\r\nThis way we don't have to wait for so long to get our error thrown at us.\r\n\r\nThis is annoying for use-cases such as https://github.com/MISP/MISP-maltego/issues/31.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/581", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/581/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/581/events", "html_url": "https://github.com/MISP/PyMISP/issues/581", "id": 621046431, "node_id": "MDU6SXNzdWU2MjEwNDY0MzE=", "number": 581, "title": "Misbehaving event", "user": {"login": "sustefil", "id": 32512488, "node_id": "MDQ6VXNlcjMyNTEyNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/32512488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sustefil", "html_url": "https://github.com/sustefil", "followers_url": "https://api.github.com/users/sustefil/followers", "following_url": "https://api.github.com/users/sustefil/following{/other_user}", "gists_url": "https://api.github.com/users/sustefil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sustefil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sustefil/subscriptions", "organizations_url": "https://api.github.com/users/sustefil/orgs", "repos_url": "https://api.github.com/users/sustefil/repos", "events_url": "https://api.github.com/users/sustefil/events{/privacy}", "received_events_url": "https://api.github.com/users/sustefil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-19T14:56:31Z", "updated_at": "2020-06-04T12:22:33Z", "closed_at": "2020-06-04T12:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nwe have some weird problem with specific events. We are running a constant enrichment script which attaches tags to events (calls update_event), and worked pretty fine until it encountered specific feed of events. If an update_event method is called upon one of these events, on the client-side, I get this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/administrator/git/misp-g2-enricher/misp_g2_enricher.py\", line 231, in submit_g2_data_to_misp\r\n    misp.update_event(event_to_update)\r\n  File \"/home/administrator/git/misp-g2-enricher/venv/lib/python3.6/site-packages/pymisp/aping.py\", line 235, in update_event\r\n    updated_event = self._check_response(updated_event, expect_json=True)\r\n  File \"/home/administrator/git/misp-g2-enricher/venv/lib/python3.6/site-packages/pymisp/aping.py\", line 2160, in _check_response\r\n    raise MISPServerError(f'Error code 500:\\n{response.text}')\r\npymisp.exceptions.MISPServerError: Error code 500:\r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\":\"An Internal Error Has Occurred.\",\"url\":\"\\/events\\/5ec1eaf9-5bfc-4d79-988d-a8a9c0a8f02c\"}\r\n\r\n```\r\n\r\nOn the server-side, I can see a bunch of errors like this one.\r\n```\r\n2020-05-18 23:52:47 Error: [PDOException] SQLSTATE[HY000]: General error: 1205 Lock wait timeout exceeded; try restarting transaction\r\nRequest URL: /events/5ec0f609-f98c-4a1b-b750-146cc0a8f02c\r\nStack Trace:\r\n#0 /var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/DboSource.php(502): PDOStatement->execute(Array)\r\n#1 /var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/DboSource.php(468): DboSource->_execute('UPDATE `misp`.`...', Array)\r\n#2 /var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/Database/Mysql.php(425): DboSource->execute('UPDATE `misp`.`...')\r\n#3 /var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Model.php(1926): Mysql->update(Object(Event), '`id` = 1180624,...', Array)\r\n#4 /var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Model.php(1760): Model->_doSave(Array, Array)\r\n#5 /var/www/MISP/app/Model/Event.php(5651): Model->save(Array)\r\n#6 /var/www/MISP/app/Model/MispObject.php(696): Event->unpublishEvent('1180624')\r\n#7 /var/www/MISP/app/Model/Event.php(3713): MispObject->editObject(Array, '1180624', Array, Object(Log))\r\n#8 /var/www/MISP/app/Controller/EventsController.php(2338): Event->_edit(Array, Array, '1180624')\r\n#9 [internal function]: EventsController->edit('1180624')\r\n#10 /var/www/MISP/app/Lib/cakephp/lib/Cake/Controller/Controller.php(499): ReflectionMethod->invokeArgs(Object(EventsController), Array)\r\n#11 /var/www/MISP/app/Lib/cakephp/lib/Cake/Routing/Dispatcher.php(193): Controller->invokeAction(Object(CakeRequest))\r\n#12 /var/www/MISP/app/Lib/cakephp/lib/Cake/Routing/Dispatcher.php(167): Dispatcher->_invoke(Object(EventsController), Object(CakeRequest))\r\n#13 /var/www/MISP/app/webroot/index.php(92): Dispatcher->dispatch(Object(CakeRequest), Object(CakeResponse))\r\n#14 {main}\r\n```\r\n\r\nThe same errors are observed when creating this event's Objects, where they are just catched and ignored. As a result, the event then has some empty objects, like here:\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/32512488/82341649-fd5aab80-99f0-11ea-93dc-5e9c79f8eb83.png)\r\n\r\n\r\nAny ideas how to tackle the error?\r\n `Error: [PDOException] SQLSTATE[HY000]: General error: 1205 Lock wait timeout exceeded; try restarting transaction`\r\n\r\nThe MISP instance is pretty heavy. Can the DB be overloaded?\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/578", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/578/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/578/events", "html_url": "https://github.com/MISP/PyMISP/issues/578", "id": 617650012, "node_id": "MDU6SXNzdWU2MTc2NTAwMTI=", "number": 578, "title": "search(controller='attributes', eventid=id, timestamp=t) no matches when should be?", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2020-05-13T18:07:10Z", "updated_at": "2020-05-15T15:27:41Z", "closed_at": "2020-05-14T10:48:39Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "2.4.125\r\n\r\nam i doing something silly? thx...\r\n\r\n```pymisp.search(controller='attributes', eventid=id, timestamp=t)```\r\n\r\nwhere `t` could be something like `'1d'` or an epoch `int`, and there are definitely attributes that are newer than that `t`, i get no matches. same on 2.4.118 does yield attrs that match.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/577", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/577/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/577/events", "html_url": "https://github.com/MISP/PyMISP/issues/577", "id": 617514193, "node_id": "MDU6SXNzdWU2MTc1MTQxOTM=", "number": 577, "title": "search: be robust against empty AND strings to search for", "user": {"login": "bernhardreiter", "id": 8190008, "node_id": "MDQ6VXNlcjgxOTAwMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8190008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernhardreiter", "html_url": "https://github.com/bernhardreiter", "followers_url": "https://api.github.com/users/bernhardreiter/followers", "following_url": "https://api.github.com/users/bernhardreiter/following{/other_user}", "gists_url": "https://api.github.com/users/bernhardreiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernhardreiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernhardreiter/subscriptions", "organizations_url": "https://api.github.com/users/bernhardreiter/orgs", "repos_url": "https://api.github.com/users/bernhardreiter/repos", "events_url": "https://api.github.com/users/bernhardreiter/events{/privacy}", "received_events_url": "https://api.github.com/users/bernhardreiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-05-13T14:49:40Z", "updated_at": "2020-05-14T20:55:11Z", "closed_at": "2020-05-14T11:10:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using pymsip  '2.4.125', when searching the following  way:\r\n\r\n```python3\r\nl = [\"bad.example.org\",\"\"]\r\nq = misp.build_complex_query(and_parameters=l)\r\nprint(q)\r\n# {'AND': ['bad.example.org', '']}\r\nr = misp.search(tags=\"Inserted-by:IntelMQ\", value=q)\r\n```\r\n\r\nwill lead to r having all events, not just the ones that match \"bad.example.org\".\r\n(And it takes a long time as well.)\r\n\r\nExpected behaviour:\r\n * only the ones matching a non-empty string will be returned\r\n * (alternatively) throws an exeception which is documented in search()\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/576", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/576/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/576/events", "html_url": "https://github.com/MISP/PyMISP/issues/576", "id": 617505172, "node_id": "MDU6SXNzdWU2MTc1MDUxNzI=", "number": 576, "title": "PyMISP version", "user": {"login": "Rickozono", "id": 51711170, "node_id": "MDQ6VXNlcjUxNzExMTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/51711170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rickozono", "html_url": "https://github.com/Rickozono", "followers_url": "https://api.github.com/users/Rickozono/followers", "following_url": "https://api.github.com/users/Rickozono/following{/other_user}", "gists_url": "https://api.github.com/users/Rickozono/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rickozono/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rickozono/subscriptions", "organizations_url": "https://api.github.com/users/Rickozono/orgs", "repos_url": "https://api.github.com/users/Rickozono/repos", "events_url": "https://api.github.com/users/Rickozono/events{/privacy}", "received_events_url": "https://api.github.com/users/Rickozono/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-13T14:38:46Z", "updated_at": "2020-05-14T13:57:41Z", "closed_at": "2020-05-14T13:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I having trouble with the PyMISP version.\r\nI updated following the commands in this link: https://www.circl.lu/doc/misp/updating-python/\r\n# Update PyMISP\r\ncd /var/www/MISP/PyMISP\r\nsudo -H /var/www/MISP/venv/bin/pip install -U .\r\nthe output said: Successfully installed pymisp-2.4.125\r\nBut in my misp instance, in the Server Settings & Maintenance section, doesn\u00b4t appear my PyMISP version\r\n![Issue](https://user-images.githubusercontent.com/51711170/81826506-3c2ec400-950e-11ea-9aee-c84b49f76a79.jpg)\r\n\r\nAny ideas how to solve this?\r\nThanks for any reply\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/574", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/574/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/574/events", "html_url": "https://github.com/MISP/PyMISP/issues/574", "id": 616164530, "node_id": "MDU6SXNzdWU2MTYxNjQ1MzA=", "number": 574, "title": "question re' pymisp.update_feed treatment of settings", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-11T20:29:20Z", "updated_at": "2020-05-12T13:02:18Z", "closed_at": "2020-05-12T09:28:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "2.4.125\r\n\r\nWe are attempting to enable/disable Default Feeds via `PyMISP.update_feed` and are seeing the content of the `feeds.settings` column changing different than expected. Would appreciate the right way to make cases 1 and 3 below work as expected. **Thanks**...\r\n\r\n1. **Disable with a mostly barren `MISPFeed` -- `settings` becomes `[]`**:\r\n* 1.1 Code:\r\n```\r\nmispFeed = MISPFeed()\r\nmispFeed.id      = 1\r\nmispFeed.enabled = False\r\npymisp.update_feed(mispFeed)\r\n```\r\n* 1.2 Before\r\n```\r\nMariaDB [misp]> select settings from feeds where id=1;\r\n+------------------------------------------------------------------+\r\n| settings                                                         |\r\n+------------------------------------------------------------------+\r\n| {\"csv\":{\"value\":\"\",\"delimiter\":\"\"},\"common\":{\"excluderegex\":\"\"}} |\r\n+------------------------------------------------------------------+\r\n```\r\n* 1.3 After\r\n```\r\nMariaDB [misp]> select settings from feeds where id=1;\r\n+----------+\r\n| settings |\r\n+----------+\r\n| []       |\r\n+----------+\r\n```\r\n\r\n---- o ----\r\n\r\n2. **Disable with a fully populated `MISPFeed` -- works well**:\r\n* 2.1 Code:\r\n```\r\nmispFeed = pymisp.get_feed(1)\r\nmispFeed.enabled  = False\r\nmispFeed = pymisp.update_feed(mispFeed)\r\n```\r\n* 2.2 This works: `settings` Before and After are UNCHANGED as expected\r\n\r\n---- o ----\r\n\r\n3. **Related: Defining `settings` -- escapes the JSON quotes with backslashes**:\r\n* 3.1 Code\r\n```\r\nmispFeed = MISPFeed()\r\nmispFeed.id       = mispFeed.id\r\nmispFeed.enabled  = False\r\nmispFeed.settings = '{\"csv\":{\"value\":\"\",\"delimiter\":\"\"},\"common\":{\"excluderegex\":\"\"}}'\r\nmispFeed = pymisp.update_feed(mispFeed)\r\n```\r\n* 3.2 Before\r\n```\r\nMariaDB [misp]> select settings from feeds where id=1;\r\n+------------------------------------------------------------------+\r\n| settings                                                         |\r\n+------------------------------------------------------------------+\r\n| {\"csv\":{\"value\":\"\",\"delimiter\":\"\"},\"common\":{\"excluderegex\":\"\"}} |\r\n+------------------------------------------------------------------+\r\n```\r\n* 3.3 After\r\n```\r\nMariaDB [misp]> select settings from feeds where id=1;\r\n+------------------------------------------------------------------------------------+\r\n| settings                                                                           |\r\n+------------------------------------------------------------------------------------+\r\n| \"{\\\"csv\\\":{\\\"value\\\":\\\"\\\",\\\"delimiter\\\":\\\"\\\"},\\\"common\\\":{\\\"excluderegex\\\":\\\"\\\"}}\" |\r\n+------------------------------------------------------------------------------------+\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/569", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/569/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/569/events", "html_url": "https://github.com/MISP/PyMISP/issues/569", "id": 607529271, "node_id": "MDU6SXNzdWU2MDc1MjkyNzE=", "number": 569, "title": "PyMISP.add_event(MISPEvent) - Orgc_id cannot be empty", "user": {"login": "JoeP-oss", "id": 60189659, "node_id": "MDQ6VXNlcjYwMTg5NjU5", "avatar_url": "https://avatars1.githubusercontent.com/u/60189659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoeP-oss", "html_url": "https://github.com/JoeP-oss", "followers_url": "https://api.github.com/users/JoeP-oss/followers", "following_url": "https://api.github.com/users/JoeP-oss/following{/other_user}", "gists_url": "https://api.github.com/users/JoeP-oss/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoeP-oss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoeP-oss/subscriptions", "organizations_url": "https://api.github.com/users/JoeP-oss/orgs", "repos_url": "https://api.github.com/users/JoeP-oss/repos", "events_url": "https://api.github.com/users/JoeP-oss/events{/privacy}", "received_events_url": "https://api.github.com/users/JoeP-oss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-27T13:00:02Z", "updated_at": "2020-04-28T11:24:42Z", "closed_at": "2020-04-28T09:42:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Server\r\nMISP: 2.4.124 (via https://github.com/amuehlem/MISP-RPM/)\r\n\r\n# Client\r\nPyMISP: 2.4.124 (via pip3)\r\nPython: 3.8.2\r\n\r\n# Goal\r\nI have an external feed that arrives as XML, i'm filtering this down to relevant IPs and splitting those by event; I'm then trying to add the events into MISP via PyMISP, once created I want to update the same events (adding and removing attributes) based on the feed.\r\n\r\n# Error\r\nI keep getting `Orgc_id cannot be empty` when adding despite setting Orgc and Orgc_id too; just setting Orgc has the same issue and just setting Orgc_id adds the event but the creator is set to the local org not the feed provider. \r\n\r\nI assume I'm missing something; but cannot work out what from the documentation.\r\n\r\n# Sample Script\r\n```python\r\n#!/usr/bin/env python3\r\nfrom datetime import datetime\r\nfrom json import load, dump\r\nfrom uuid import uuid4\r\nfrom xml.dom.minidom import parse\r\nfrom pymisp import PyMISP, MISPEvent\r\n\r\n# code which filters and sorts events into a dict (eventIps) with str keys and list values\r\n\r\npymisp = PyMISP('http://misp/',\r\n                \"123456789012345678901234567890\", tool=\"XMLFeedProcessor\")\r\nlocalOrg = pymisp.get_organisation('00000000-0000-0000-0000-000000000000')\r\nfeedProvider = pymisp.get_organisation('11111111-1111-1111-1111-111111111111')\r\nwith open('eventIds.json', 'r') as idFile:\r\n    # file containing event name to UUID mappings\r\n    eventIds = load(idFile)\r\nfor eventName, ips in eventIps.items():\r\n    if eventName not in eventIds:\r\n        # new event from feed\r\n        eventIds[eventName] = str(uuid4())\r\n        with open('eventIds.json', 'w') as idFile:\r\n            dump(eventIds, idFile)\r\n    mispEvent = MISPEvent()\r\n    mispEvent.analysis = 1\r\n    mispEvent.date = datetime.now()\r\n    mispEvent.distribution = 0\r\n    mispEvent.info = eventName\r\n    mispEvent.Org = localOrg\r\n    mispEvent.Org_id = localOrg['Organisation']['id']\r\n    mispEvent.Orgc = feedProvider\r\n    mispEvent.Orgc_id = feedProvider['Organisation']['id']\r\n    mispEvent.add_tag('local:tag:here')\r\n    mispEvent.threat_level_id = 2\r\n    mispEvent.timestamp = datetime.now()\r\n    mispEvent.uuid = eventIds[eventName]\r\n    for ip in ips:\r\n        mispEvent.add_attribute('ip-dst', to_ids=True, value=ip)\r\n    mispEvent.publish()\r\n    existingEvent = pymisp.search(uuid=mispEvent.uuid)\r\n    if type(existingEvent) == list and len(existingEvent) == 0:\r\n        # Search succeeded and event doesn't exist\r\n        add = pymisp.add_event(mispEvent)\r\n        if 'errors' in add:\r\n            # This is always reached\r\n            exit(2)\r\n    elif type(existingEvent) == list:\r\n       # search succeeded and event exists\r\n        update = pymisp.update_event(mispEvent)\r\n        if 'errors' in update:\r\n            exit(3)\r\n    else:\r\n        exit(4)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/568", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/568/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/568/events", "html_url": "https://github.com/MISP/PyMISP/issues/568", "id": 607298727, "node_id": "MDU6SXNzdWU2MDcyOTg3Mjc=", "number": 568, "title": "Maybe invalid `test_user_settings` test", "user": {"login": "JakubOnderka", "id": 163343, "node_id": "MDQ6VXNlcjE2MzM0Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/163343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakubOnderka", "html_url": "https://github.com/JakubOnderka", "followers_url": "https://api.github.com/users/JakubOnderka/followers", "following_url": "https://api.github.com/users/JakubOnderka/following{/other_user}", "gists_url": "https://api.github.com/users/JakubOnderka/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakubOnderka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakubOnderka/subscriptions", "organizations_url": "https://api.github.com/users/JakubOnderka/orgs", "repos_url": "https://api.github.com/users/JakubOnderka/repos", "events_url": "https://api.github.com/users/JakubOnderka/events{/privacy}", "received_events_url": "https://api.github.com/users/JakubOnderka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-27T07:14:47Z", "updated_at": "2020-04-27T11:31:40Z", "closed_at": "2020-04-27T10:23:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to figure out why `test_user_settings` is failing after my change in MISP https://github.com/MISP/MISP/pull/5240.\r\n\r\nIf I understand correctly, this test sets user setting to receive alert mails just for events containing tag `test_publish_filter`, then is creates and publish two events, one with this tag and then without and change user password.\r\n\r\nBut this test asserts that 3 mails should be generated:\r\n\r\nhttps://github.com/MISP/PyMISP/blob/5a78b63d9b7b2ee6751e1fae5e3aa65a5626b871/tests/testlive_comprehensive.py#L2033-L2036\r\n\r\nBut in reality two mails are generated (see https://travis-ci.org/github/MISP/MISP/jobs/679840838#L3401):\r\n\r\n```\r\n+------+---------------------------------------------------------------------------------------+---------------------+-------+----------+--------+---------+--------+--------------------+--------+-------------+----+\r\n| id   | title                                                                                 | created             | model | model_id | action | user_id | change | email              | org    | description | ip |\r\n+------+---------------------------------------------------------------------------------------+---------------------+-------+----------+--------+---------+--------+--------------------+--------+-------------+----+\r\n| 1612 | Email to testusr@user.local sent, titled \"[ORGNAME MISP] Event 71 - Low - tlp:amber\". | 2020-04-26 21:16:45 | User  |        2 | email  |       0 |        | testusr@user.local | SYSTEM |             |    |\r\n| 1613 | Email to testusr@user.local sent, titled \"[ORGNAME MISP] Event 72 - Low - tlp:amber\". | 2020-04-26 21:16:46 | User  |        2 | email  |       0 |        | testusr@user.local | SYSTEM |             |    |\r\n+------+---------------------------------------------------------------------------------------+---------------------+-------+----------+--------+---------+--------+--------------------+--------+-------------+----+\r\n```\r\n\r\nSo my questions are:\r\n* why test asserts that 3 e-mails should be generated?\r\n* why e-mail is send for both events, when just one contains tag from filter?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/566", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/566/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/566/events", "html_url": "https://github.com/MISP/PyMISP/issues/566", "id": 606733096, "node_id": "MDU6SXNzdWU2MDY3MzMwOTY=", "number": 566, "title": "Publish_timestamp not work", "user": {"login": "lprat", "id": 1132448, "node_id": "MDQ6VXNlcjExMzI0NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lprat", "html_url": "https://github.com/lprat", "followers_url": "https://api.github.com/users/lprat/followers", "following_url": "https://api.github.com/users/lprat/following{/other_user}", "gists_url": "https://api.github.com/users/lprat/gists{/gist_id}", "starred_url": "https://api.github.com/users/lprat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lprat/subscriptions", "organizations_url": "https://api.github.com/users/lprat/orgs", "repos_url": "https://api.github.com/users/lprat/repos", "events_url": "https://api.github.com/users/lprat/events{/privacy}", "received_events_url": "https://api.github.com/users/lprat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-25T09:47:38Z", "updated_at": "2020-04-26T19:52:17Z", "closed_at": "2020-04-26T16:08:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI try tu use publish_timestamp in search(), but it's not work correctly.\r\n(i use last version of pymisp)\r\nExemple (tested on misp.circl):\r\n>>> ret=misp.search(publish_timestamp='45d', value='X.X.X.X', to_ids='1', pythonify=true)\r\n>>> ret\r\n[]\r\n>>> ret=misp.search(value='X.X.X.X', to_ids='1', pythonify=true)\r\n>>> ret[0]['date']\r\ndatetime.date(2020, 3, 25)\r\n>>>\r\nI'm sorry, i thinking that publish_timestamp give all event between now() and now()-45days, i am wrong?\r\nThank for you help.\r\nLionel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/564", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/564/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/564/events", "html_url": "https://github.com/MISP/PyMISP/issues/564", "id": 602643184, "node_id": "MDU6SXNzdWU2MDI2NDMxODQ=", "number": 564, "title": "Many AttributeError", "user": {"login": "jack51706", "id": 5326169, "node_id": "MDQ6VXNlcjUzMjYxNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5326169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack51706", "html_url": "https://github.com/jack51706", "followers_url": "https://api.github.com/users/jack51706/followers", "following_url": "https://api.github.com/users/jack51706/following{/other_user}", "gists_url": "https://api.github.com/users/jack51706/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack51706/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack51706/subscriptions", "organizations_url": "https://api.github.com/users/jack51706/orgs", "repos_url": "https://api.github.com/users/jack51706/repos", "events_url": "https://api.github.com/users/jack51706/events{/privacy}", "received_events_url": "https://api.github.com/users/jack51706/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T07:09:51Z", "updated_at": "2020-04-19T11:50:54Z", "closed_at": "2020-04-19T11:50:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use python3.6 and git clond --recursive https://github.com/MISP/PyMISP.git\r\nWhen I use pymisp/example/searchall.py\r\nget error message like\r\nAttributeError: 'PyMISP' object has no attribute 'search_all'\r\n\r\nIs there anything wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/563", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/563/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/563/events", "html_url": "https://github.com/MISP/PyMISP/issues/563", "id": 601227706, "node_id": "MDU6SXNzdWU2MDEyMjc3MDY=", "number": 563, "title": "Unable to update event attributes (info, analysis, etc.)", "user": {"login": "bit111", "id": 6236258, "node_id": "MDQ6VXNlcjYyMzYyNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6236258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bit111", "html_url": "https://github.com/bit111", "followers_url": "https://api.github.com/users/bit111/followers", "following_url": "https://api.github.com/users/bit111/following{/other_user}", "gists_url": "https://api.github.com/users/bit111/gists{/gist_id}", "starred_url": "https://api.github.com/users/bit111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bit111/subscriptions", "organizations_url": "https://api.github.com/users/bit111/orgs", "repos_url": "https://api.github.com/users/bit111/repos", "events_url": "https://api.github.com/users/bit111/events{/privacy}", "received_events_url": "https://api.github.com/users/bit111/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-16T16:28:28Z", "updated_at": "2020-04-17T11:01:12Z", "closed_at": "2020-04-17T11:01:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm using PyMISP 2.4.119 with a test instance of MISP v. 2.4.102.\r\nWhen I try to update an event, basic informations are not updated:\r\n```\r\nmisp = ExpandedPyMISP(MISP_URL,MISP_API,VERIFY_SSL,debug = DEBUG)\r\nevent = misp.get_event(EVENT_ID)\r\ntemp_event = MISPEvent()\r\ntemp_event.load(event)\r\n# tag addition works\r\nmisp.tag(event.get('Event').get('uuid'), 'myTag')\r\n\r\ntemp_event.info = \"New title\"\r\ntemp_event.threat_level_id = 2 \r\ntemp_event.analysis = 2    \r\ntemp_event.distribution = 2\r\n\r\nmisp.publish(temp_event)\r\nupdated_event = misp.update_event(EVENT_ID, temp_event)\r\n```\r\n\r\nWhere is the error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/561", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/561/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/561/events", "html_url": "https://github.com/MISP/PyMISP/issues/561", "id": 592091918, "node_id": "MDU6SXNzdWU1OTIwOTE5MTg=", "number": 561, "title": "Suricata_search.py - list indices error ", "user": {"login": "erosseleth", "id": 9632018, "node_id": "MDQ6VXNlcjk2MzIwMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9632018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erosseleth", "html_url": "https://github.com/erosseleth", "followers_url": "https://api.github.com/users/erosseleth/followers", "following_url": "https://api.github.com/users/erosseleth/following{/other_user}", "gists_url": "https://api.github.com/users/erosseleth/gists{/gist_id}", "starred_url": "https://api.github.com/users/erosseleth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erosseleth/subscriptions", "organizations_url": "https://api.github.com/users/erosseleth/orgs", "repos_url": "https://api.github.com/users/erosseleth/repos", "events_url": "https://api.github.com/users/erosseleth/events{/privacy}", "received_events_url": "https://api.github.com/users/erosseleth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-01T17:45:31Z", "updated_at": "2020-04-02T15:16:09Z", "closed_at": "2020-04-02T12:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following command: \r\n\r\n(PyMISP) root@kali:~/PyMISP/examples/suricata_search# python3 suricata_search.py -p tags -s 'APT' -o misp_ids.rules -t 5\r\n\r\nBrings me this error:\r\n\r\nTraceback (most recent call last):\r\n  File \"suricata_search.py\", line 213, in <module>\r\n    format_request(args.param, args.search, misp, args.quiet, args.output, args.thread, args.noevent)\r\n  File \"suricata_search.py\", line 163, in format_request\r\n    search(misp, quiet, noevent, **kwargs)\r\n File \"suricata_search.py\", line 70, in search\r\n    for event in result['response']:\r\nTypeError: list indices must be integers or slices, not str**\r\n\r\nSome help? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/559", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/559/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/559/events", "html_url": "https://github.com/MISP/PyMISP/issues/559", "id": 588617921, "node_id": "MDU6SXNzdWU1ODg2MTc5MjE=", "number": 559, "title": "concurrent.futures and pymisp question... possible?", "user": {"login": "mathurin68", "id": 5932961, "node_id": "MDQ6VXNlcjU5MzI5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5932961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathurin68", "html_url": "https://github.com/mathurin68", "followers_url": "https://api.github.com/users/mathurin68/followers", "following_url": "https://api.github.com/users/mathurin68/following{/other_user}", "gists_url": "https://api.github.com/users/mathurin68/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathurin68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathurin68/subscriptions", "organizations_url": "https://api.github.com/users/mathurin68/orgs", "repos_url": "https://api.github.com/users/mathurin68/repos", "events_url": "https://api.github.com/users/mathurin68/events{/privacy}", "received_events_url": "https://api.github.com/users/mathurin68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T18:03:03Z", "updated_at": "2020-04-02T18:29:52Z", "closed_at": "2020-04-02T18:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking to speed up code like this... it does a search and either adds event or just a tag to an event; it works, but it's 1,000's of CEF events and its sooooo slow.  \r\n\r\nCan MISP api handle concurrent.futures for adding events?  Full disclosure I could have it totally wrong my python is terrible. \r\n\r\nWhen I run it, it _seems_ to work buuuut the MISP instance has to catch up with everything.  \r\n\r\nI'd definitely appreciate any thoughts or help.  \r\n\r\n```\r\n#My generic create_event\r\ndef create_misp_event(ioc, misp):\r\n    date = datetime.datetime.utcnow()\r\n    event = MISPEvent()\r\n    event.distribution = 0 # This organization onl\r\n    event.threat_level_id = 1 \r\n    event.analysis = 2 # Completed\r\n    event.info = \"see Attr for details\"\r\n    event.date = date\r\n    my_event = misp.add_event(event, pythonify=True)\r\n    misp.tag(my_event, 'Generic')\r\n    misp.tag(my_event, tag)\r\n    misp.add_attribute(my_event, {'category': 'Network activity', 'type': 'ip-dst', 'to_ids': True,\r\n                                                'comment': comment,'value': ioc}, pythonify=True)\r\n#open list of CEF events\r\nn_lgcef = open('new_lg.cef', 'r+')\r\ndef mispwork(n_lgcef):\r\n\t#move CEF to python dict\r\n    d = pycef.parse(n_lgcef)\r\n    ioc = dict.get(d,\"src\", \"None\")\r\n\ttag = dict.get(d,\"deviceFacility\", \"None\")\r\n\tcomment = dict.get(d,\"msg\", \"None\")\r\n\tcategory = dict.get(d,\"cat\", \"None\")\r\n\tthreatlevel = dict.get(d,\"DeviceSeverity\", \"None\")\r\n\tsource = dict.get(d,\"deviceFacility\", \"None\")\r\n\t#search for current value in misp \r\n\tresponse = misp.search(value=ioc)\t\r\n\t#search for current value AND tag in MISP\r\n\tresponse2 = misp.search(value=ioc, tags=tag)\t\r\n\tif(len(response)==0):\r\n\t\t#if value doesn't exist at all go ahead and create event\r\n\t\tcreate_misp_event(ioc, misp)\r\n\telif(len(response)!=0 and len(response2)==0):\r\n\t\t#if value does exist and doesn't have tag just add the tag\r\n\t\tevent_id = response[0]['Event']['id']\r\n\t\tevent = misp.get_event(event_id)\r\n\t\tmisp.add_attribute(event, {'category': 'Internal reference', 'type': 'other', 'value': tag,\r\n\t\t\t\t\t\t\t\t\t\t\t'comment': comment, 'disable_correlation':True}, pythonify=True)\r\n\t\tuuid = response[0]['Event']['uuid']\r\n\t\tmisp.tag(uuid,tag)\r\n\telse:\r\n\t\tpass\r\n\r\nwith ThreadPoolExecutor(max_workers = 5) as executor:\r\n    executor.map(mispwork, n_lgcef)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/558", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/558/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/558/events", "html_url": "https://github.com/MISP/PyMISP/issues/558", "id": 585576915, "node_id": "MDU6SXNzdWU1ODU1NzY5MTU=", "number": 558, "title": "add_tag after if/else not working...", "user": {"login": "mathurin68", "id": 5932961, "node_id": "MDQ6VXNlcjU5MzI5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5932961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathurin68", "html_url": "https://github.com/mathurin68", "followers_url": "https://api.github.com/users/mathurin68/followers", "following_url": "https://api.github.com/users/mathurin68/following{/other_user}", "gists_url": "https://api.github.com/users/mathurin68/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathurin68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathurin68/subscriptions", "organizations_url": "https://api.github.com/users/mathurin68/orgs", "repos_url": "https://api.github.com/users/mathurin68/repos", "events_url": "https://api.github.com/users/mathurin68/events{/privacy}", "received_events_url": "https://api.github.com/users/mathurin68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-21T20:28:49Z", "updated_at": "2020-03-26T17:06:12Z", "closed_at": "2020-03-26T17:06:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a CEF list where the same IP address might be on multiple lines BUT each line has a different TAG.  \r\n\r\nTAG1 IP1\r\nTAG2 IP1\r\n\r\nTAG1 IP2\r\nTAG2 IP2\r\n\r\nI want to go over each line and instead of adding a new event for each IP and tag, if the event_id already has the IP address just add the tag don't create a new event. So by the end I'll have the same IP address 'tagged' multiple times.  \r\n\r\nHere's my code, I can't get the add_tag to work.  I think it's pretty close and would appreciate a fresh set of eyes.\r\nThank you!\r\n```\r\n\r\nimport pycef \r\nimport json\r\nfrom pymisp import PyMISP, MISPEvent, MISPObject\r\nfrom keys import misp_url, misp_key\r\nimport argparse\r\nimport datetime\r\nimport time\r\n\r\ndef init(url, key):\r\n    return PyMISP(url, key, False)\r\n\t\r\nif __name__ == '__main__':\r\n    parser = argparse.ArgumentParser(description='Create an event on MISP.')\r\n    parser.add_argument(\"-e\", \"--event\", type=int, help=\"The id of the event to update.\")\r\n    parser.add_argument(\"-t\", \"--type\", help=\"The type of the added attribute\")\r\n    parser.add_argument(\"-v\", \"--value\", help=\"The value of the attribute\")\r\n    args = parser.parse_args()\r\n\r\nmisp = init(misp_url, misp_key, )\r\n\r\ndef create_misp_event(ioc, misp):\r\n    date = datetime.datetime.utcnow()\r\n    event = MISPEvent()\r\n    event.distribution = 1 # This community only\r\n    if threatlevel == 'Very High':\r\n        event.threat_level_id = 1 # Unknown\r\n    else:\r\n        event.threat_level_id = 4 # Unknown\r\n    event.analysis = 2 # Completed\r\n    event.info = source\r\n    event.date = date\r\n    my_event = misp.add_event(event, pythonify=True)\r\n    misp.tag(my_event, 'source_tag')\r\n    misp.tag(my_event, tag)\r\n    misp.add_attribute(my_event, {'category': 'Network activity', 'type': 'ip-dst', 'to_ids': True,\r\n                                               'value': ioc}, pythonify=True)\r\n\r\nwith open('ioc.cef', 'r+') as lgcef:\r\n    work = lgcef.readlines()[:3]\r\n    for i in work:\r\n        d = pycef.parse(i)\r\n        ioc = dict.get(d,\"src\", \"None\")\r\n        tag = dict.get(d,\"msg\", \"None\")\r\n        category = dict.get(d,\"cat\", \"None\")\r\n        threatlevel = dict.get(d,\"DeviceSeverity\", \"None\")\r\n        source = dict.get(d,\"deviceFacility\", \"None\")\r\n        response = misp.search(value=ioc)\r\n        response2 = misp.search(value=ioc, tags=tag)\r\n        if(len(response)==0):\r\n            print(\"Creating Event\")\r\n            create_misp_event(ioc, misp)\r\n        elif(len(response)!=0 and len(response2)==0):\r\n            event_id = response[0]['Event']['id']\r\n            print(event_id)\r\n            misp.add_tag(event_id, tag)\r\n        else:\r\n            pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/556", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/556/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/556/events", "html_url": "https://github.com/MISP/PyMISP/issues/556", "id": 582609931, "node_id": "MDU6SXNzdWU1ODI2MDk5MzE=", "number": 556, "title": "List of MD5's to MISP... str object", "user": {"login": "mathurin68", "id": 5932961, "node_id": "MDQ6VXNlcjU5MzI5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5932961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathurin68", "html_url": "https://github.com/mathurin68", "followers_url": "https://api.github.com/users/mathurin68/followers", "following_url": "https://api.github.com/users/mathurin68/following{/other_user}", "gists_url": "https://api.github.com/users/mathurin68/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathurin68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathurin68/subscriptions", "organizations_url": "https://api.github.com/users/mathurin68/orgs", "repos_url": "https://api.github.com/users/mathurin68/repos", "events_url": "https://api.github.com/users/mathurin68/events{/privacy}", "received_events_url": "https://api.github.com/users/mathurin68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-16T21:29:11Z", "updated_at": "2020-03-16T22:30:00Z", "closed_at": "2020-03-16T22:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sure just something simple here - \r\n\r\nTrying to loop through a list of MD5's to add to MISP... \r\n\r\nHere is my code:\r\n\r\n```\r\nimport json\r\nfrom pymisp import PyMISP, MISPEvent, MISPObject\r\nfrom keys import misp_url, misp_key\r\nimport argparse\r\nimport datetime\r\n\r\ndef init(url, key):\r\n    return PyMISP(url, key, False, 'json')\r\n\r\nif __name__ == '__main__':\r\n    parser = argparse.ArgumentParser(description='Create an event on MISP.')\r\n    parser.add_argument(\"-e\", \"--event\", type=int, help=\"The id of the event to update.\")\r\n    parser.add_argument(\"-t\", \"--type\", help=\"The type of the added attribute\")\r\n    parser.add_argument(\"-v\", \"--value\", help=\"The value of the attribute\")\r\n    args = parser.parse_args()\r\n\r\nmisp = init(misp_url, misp_key, )\r\n\r\ndef create_misp_event(misp , md5hash):\r\n    print(md5hash)\r\n    print(type(md5hash))\r\n    date = datetime.datetime.utcnow()\r\n    event = MISPEvent()\r\n    event.distribution = 1 # This community only\r\n    event.threat_level_id = 4 # Unknown\r\n    event.analysis = 2 # Completed\r\n    event.info = \"MD5s\"\r\n    event.date = date\r\n\r\n    my_event = misp.add_event(event, pythonify=True)\r\n\r\n    misp.tag(my_event, 'tlp:amber')\r\n    misp.tag(my_event, 'My Event')\r\n    misp.add_attribute(my_event, {'category': 'External analysis', 'type': 'text', 'to_ids': False,\r\n                                               'value': md5hash}, pythonify=True)\r\n\r\n    update_misp_event(misp, my_event, md5hash)\r\n\r\nf = open('md5.txt', 'r+')\r\nlines = [line.rstrip('\\n') for line in f.readlines()]\r\nfor md5hash in lines:\r\n    create_misp_event(md5hash, misp)\r\n```\r\nBut I keep getting the error \r\n    my_event = misp.add_event(event, pythonify=True)\r\nAttributeError: 'str' object has no attribute 'add_event'\r\n\r\n\r\nAnyone have any suggestions?  I'd appreciate it!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/555", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/555/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/555/events", "html_url": "https://github.com/MISP/PyMISP/issues/555", "id": 582344848, "node_id": "MDU6SXNzdWU1ODIzNDQ4NDg=", "number": 555, "title": "Suricata_search.py : MISPServerError: Error Code 500", "user": {"login": "KZcsirtCY", "id": 62246794, "node_id": "MDQ6VXNlcjYyMjQ2Nzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/62246794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KZcsirtCY", "html_url": "https://github.com/KZcsirtCY", "followers_url": "https://api.github.com/users/KZcsirtCY/followers", "following_url": "https://api.github.com/users/KZcsirtCY/following{/other_user}", "gists_url": "https://api.github.com/users/KZcsirtCY/gists{/gist_id}", "starred_url": "https://api.github.com/users/KZcsirtCY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KZcsirtCY/subscriptions", "organizations_url": "https://api.github.com/users/KZcsirtCY/orgs", "repos_url": "https://api.github.com/users/KZcsirtCY/repos", "events_url": "https://api.github.com/users/KZcsirtCY/events{/privacy}", "received_events_url": "https://api.github.com/users/KZcsirtCY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-16T14:31:50Z", "updated_at": "2020-04-02T13:20:11Z", "closed_at": "2020-04-02T12:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Team,\r\n\r\nPlease, check the below error that appears:\r\n\r\nRunning the below command, results to Error 500\r\npython3.6 suricata_search.py -p 'malware' -s 'APT25' - o msip_nids.rules\r\n........\r\n........\r\nFile \"/home/../PyMISP/pymisp/api.py\" line 2169, in _check_response\r\n    raise MISPServerError(f'Error code 500:\\n{response.text}')\r\npymisp.exceptions.MISPServerError: Error code 500:\r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\": \"An Internal Error Has Occurred.\",\"url\":\"\\/events\\/restSearch\"}\r\n\r\nAdded to the above, when running curl command, we get he below:\r\ncurl -k -H 'Accept:application/json' -H 'Authorization:-Our_API_Key' -H 'enforceWarninglist: 1' https://misp.xxxx.xxx/events/nids/suricata/download \r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\": \"An Internal Error Has Occurred.\",\"url\":\"\\/events\\/nids\\/suricata\\/download\"}\r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/553", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/553/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/553/events", "html_url": "https://github.com/MISP/PyMISP/issues/553", "id": 580216523, "node_id": "MDU6SXNzdWU1ODAyMTY1MjM=", "number": 553, "title": "Bug in add_attribute_tag method ", "user": {"login": "sustefil", "id": 32512488, "node_id": "MDQ6VXNlcjMyNTEyNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/32512488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sustefil", "html_url": "https://github.com/sustefil", "followers_url": "https://api.github.com/users/sustefil/followers", "following_url": "https://api.github.com/users/sustefil/following{/other_user}", "gists_url": "https://api.github.com/users/sustefil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sustefil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sustefil/subscriptions", "organizations_url": "https://api.github.com/users/sustefil/orgs", "repos_url": "https://api.github.com/users/sustefil/repos", "events_url": "https://api.github.com/users/sustefil/events{/privacy}", "received_events_url": "https://api.github.com/users/sustefil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-12T21:01:40Z", "updated_at": "2020-03-13T11:02:47Z", "closed_at": "2020-03-13T10:03:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI came accross this bug in `add_attribute_tag` method of the Event object, when I have an event which has some `datetime` attribute and I want to add a tag to a different attribute (e.g. `ip-dst`), this code fails with following error:\r\n\r\n```\r\nevent_to_update.add_attribute_tag('{tag}:{value}'.format(tag=g2_ip_tag, value=ip_data.score), attr_uuid)\r\n  File \"/home/abc/.local/lib/python3.6/site-packages/pymisp/mispevent.py\", line 1285, in add_attribute_tag\r\n    or attribute_identifier in a.value.split('|'))):\r\nAttributeError: 'datetime.datetime' object has no attribute 'split'\r\n```\r\nhttps://github.com/MISP/PyMISP/blob/master/pymisp/mispevent.py#L1293\r\n\r\nI just deleted the last condition in my code and it works for me, but I believe you will come with a better fix (I am not sure what is this for anyway: `or attribute_identifier in a.value.split('|'))`. Below I am posting an example event, which triggers this error when you want to add a tag to the `ip-src` attribute.\r\n\r\n--------------------------------------------\r\n```\r\n{\r\n    \"Event\": {\r\n        \"id\": \"6684\",\r\n        \"orgc_id\": \"1\",\r\n        \"org_id\": \"1\",\r\n        \"date\": \"2020-03-12\",\r\n        \"threat_level_id\": \"1\",\r\n        \"info\": \"PyMISP fail\",\r\n        \"published\": false,\r\n        \"uuid\": \"5e6a9fd2-cf10-43a3-a2ea-42d8c0a8f087\",\r\n        \"attribute_count\": \"2\",\r\n        \"analysis\": \"0\",\r\n        \"timestamp\": \"1584046082\",\r\n        \"distribution\": \"1\",\r\n        \"proposal_email_lock\": false,\r\n        \"locked\": false,\r\n        \"publish_timestamp\": \"0\",\r\n        \"sharing_group_id\": \"0\",\r\n        \"disable_correlation\": false,\r\n        \"extends_uuid\": \"\",\r\n        \"event_creator_email\": \"admin@admin.test\",\r\n        \"Org\": {\r\n            \"id\": \"1\",\r\n            \"name\": \"ORGNAME\",\r\n            \"uuid\": \"5df77268-e780-4cea-9ac9-6d191baa22da\",\r\n            \"local\": true\r\n        },\r\n        \"Orgc\": {\r\n            \"id\": \"1\",\r\n            \"name\": \"ORGNAME\",\r\n            \"uuid\": \"5df77268-e780-4cea-9ac9-6d191baa22da\",\r\n            \"local\": true\r\n        },\r\n        \"Attribute\": [\r\n            {\r\n                \"id\": \"137943\",\r\n                \"type\": \"ip-src\",\r\n                \"category\": \"Network activity\",\r\n                \"to_ids\": false,\r\n                \"uuid\": \"5e6a9fe4-816c-4179-93c4-438cc0a8f087\",\r\n                \"event_id\": \"6684\",\r\n                \"distribution\": \"5\",\r\n                \"timestamp\": \"1584046052\",\r\n                \"comment\": \"\",\r\n                \"sharing_group_id\": \"0\",\r\n                \"deleted\": false,\r\n                \"disable_correlation\": false,\r\n                \"object_id\": \"0\",\r\n                \"object_relation\": null,\r\n                \"first_seen\": null,\r\n                \"last_seen\": null,\r\n                \"value\": \"5.6.7.8\",\r\n                \"Galaxy\": [],\r\n                \"ShadowAttribute\": []\r\n            },\r\n            {\r\n                \"id\": \"137944\",\r\n                \"type\": \"datetime\",\r\n                \"category\": \"Other\",\r\n                \"to_ids\": false,\r\n                \"uuid\": \"5e6aa002-fb34-4cab-8b50-479dc0a8f087\",\r\n                \"event_id\": \"6684\",\r\n                \"distribution\": \"5\",\r\n                \"timestamp\": \"1584046082\",\r\n                \"comment\": \"\",\r\n                \"sharing_group_id\": \"0\",\r\n                \"deleted\": false,\r\n                \"disable_correlation\": false,\r\n                \"object_id\": \"0\",\r\n                \"object_relation\": null,\r\n                \"first_seen\": null,\r\n                \"last_seen\": null,\r\n                \"value\": \"2020-03-12T14:20:47.000000+0000\",\r\n                \"Galaxy\": [],\r\n                \"ShadowAttribute\": []\r\n            }\r\n        ],\r\n        \"ShadowAttribute\": [],\r\n        \"RelatedEvent\": [],\r\n        \"Galaxy\": [],\r\n        \"Object\": []\r\n    }\r\n}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/549", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/549/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/549/events", "html_url": "https://github.com/MISP/PyMISP/issues/549", "id": 577229597, "node_id": "MDU6SXNzdWU1NzcyMjk1OTc=", "number": 549, "title": "Update misp-objects to current", "user": {"login": "pettai", "id": 3317462, "node_id": "MDQ6VXNlcjMzMTc0NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3317462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pettai", "html_url": "https://github.com/pettai", "followers_url": "https://api.github.com/users/pettai/followers", "following_url": "https://api.github.com/users/pettai/following{/other_user}", "gists_url": "https://api.github.com/users/pettai/gists{/gist_id}", "starred_url": "https://api.github.com/users/pettai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pettai/subscriptions", "organizations_url": "https://api.github.com/users/pettai/orgs", "repos_url": "https://api.github.com/users/pettai/repos", "events_url": "https://api.github.com/users/pettai/events{/privacy}", "received_events_url": "https://api.github.com/users/pettai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-06T23:35:39Z", "updated_at": "2020-03-11T08:18:27Z", "closed_at": "2020-03-11T08:18:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please update misp-objects to current for this update https://github.com/MISP/misp-objects/commit/b457df2a3631c20f0daf34bac3fc7ae0ef69ebb9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/547", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/547/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/547/events", "html_url": "https://github.com/MISP/PyMISP/issues/547", "id": 574843925, "node_id": "MDU6SXNzdWU1NzQ4NDM5MjU=", "number": 547, "title": "Pagination is not accounted for", "user": {"login": "automationator", "id": 22526682, "node_id": "MDQ6VXNlcjIyNTI2Njgy", "avatar_url": "https://avatars0.githubusercontent.com/u/22526682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/automationator", "html_url": "https://github.com/automationator", "followers_url": "https://api.github.com/users/automationator/followers", "following_url": "https://api.github.com/users/automationator/following{/other_user}", "gists_url": "https://api.github.com/users/automationator/gists{/gist_id}", "starred_url": "https://api.github.com/users/automationator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/automationator/subscriptions", "organizations_url": "https://api.github.com/users/automationator/orgs", "repos_url": "https://api.github.com/users/automationator/repos", "events_url": "https://api.github.com/users/automationator/events{/privacy}", "received_events_url": "https://api.github.com/users/automationator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-03T18:01:47Z", "updated_at": "2020-03-03T18:13:35Z", "closed_at": "2020-03-03T18:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a script that programmatically creates new sharing groups and associates organizations with them. If I attempt to create a sharing group that already exists, my script returns the existing group instead of creating a new one.\r\n\r\nHowever, MISP uses a default limit of 60 for pagination for everything I've seen so far, so if I use PyMISP to get a list of the existing sharing groups, it only gets the first page of 60. That means that if I tried to create a group that already exists but is on the second page, I get an error since it was not returned in the original query that got a list of all of the existing groups. There does not seem to be any way to be able to get ALL of the sharing groups.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/546", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/546/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/546/events", "html_url": "https://github.com/MISP/PyMISP/issues/546", "id": 574741080, "node_id": "MDU6SXNzdWU1NzQ3NDEwODA=", "number": 546, "title": "Ignore None fields in File Upload", "user": {"login": "imidoriya", "id": 45568592, "node_id": "MDQ6VXNlcjQ1NTY4NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/45568592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imidoriya", "html_url": "https://github.com/imidoriya", "followers_url": "https://api.github.com/users/imidoriya/followers", "following_url": "https://api.github.com/users/imidoriya/following{/other_user}", "gists_url": "https://api.github.com/users/imidoriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/imidoriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imidoriya/subscriptions", "organizations_url": "https://api.github.com/users/imidoriya/orgs", "repos_url": "https://api.github.com/users/imidoriya/repos", "events_url": "https://api.github.com/users/imidoriya/events{/privacy}", "received_events_url": "https://api.github.com/users/imidoriya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-03-03T15:18:03Z", "updated_at": "2020-05-29T00:43:57Z", "closed_at": "2020-03-24T13:34:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `pymisp.tools.make_binary_objects` it throws errors when it deals with missing fields, perhaps due to the type of binary.  Is there any way to ignore these error messages?  If it has the field great, but if not, I don't need a warning and error on it.\r\n\r\nExample:\r\n```\r\n2020-03-03:15:04:03 WARNING  [mispevent.py:838] The value of the attribute you're trying to add is None or empty string, skipping it. Object relation: product-name\r\n2020-03-03:15:04:03 WARNING  [mispevent.py:838] The value of the attribute you're trying to add is None or empty string, skipping it. Object relation: company-name\r\n2020-03-03:15:04:04 ERROR    [api.py:2178] Something went wrong (403): {'saved': False, 'name': 'Could not add object', 'message': 'Could not add object', 'url': '/objects/add/39179/', 'errors': 'Could not save object as at least one attribute has failed validation (legal-copyright). {\"value\":[\"Value cannot be empty.\"]}'}\r\n2020-03-03:15:04:04 ERROR    [api.py:2178] Something went wrong (404): {'name': 'Invalid Object', 'message': 'Invalid Object', 'url': '/object_references/add'}\r\n2020-03-03:15:04:04 ERROR    [api.py:2178] Something went wrong (404): {'name': 'Invalid Object', 'message': 'Invalid Object', 'url': '/object_references/add'}\r\n2020-03-03:15:04:04 ERROR    [api.py:2178] Something went wrong (404): {'name': 'Invalid Object', 'message': 'Invalid Object', 'url': '/object_references/add'}\r\n2020-03-03:15:04:04 ERROR    [api.py:2178] Something went wrong (404): {'name': 'Invalid target.', 'message': 'Invalid target.', 'url': '/object_references/add'}\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/544", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/544/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/544/events", "html_url": "https://github.com/MISP/PyMISP/issues/544", "id": 571611454, "node_id": "MDU6SXNzdWU1NzE2MTE0NTQ=", "number": 544, "title": "Question: Is pagination handled by the pymisp.PyMISP.search function? ", "user": {"login": "fhightower", "id": 3599813, "node_id": "MDQ6VXNlcjM1OTk4MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3599813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhightower", "html_url": "https://github.com/fhightower", "followers_url": "https://api.github.com/users/fhightower/followers", "following_url": "https://api.github.com/users/fhightower/following{/other_user}", "gists_url": "https://api.github.com/users/fhightower/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhightower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhightower/subscriptions", "organizations_url": "https://api.github.com/users/fhightower/orgs", "repos_url": "https://api.github.com/users/fhightower/repos", "events_url": "https://api.github.com/users/fhightower/events{/privacy}", "received_events_url": "https://api.github.com/users/fhightower/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T19:39:19Z", "updated_at": "2020-02-27T17:39:11Z", "closed_at": "2020-02-27T17:38:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Background\r\n\r\nI'm using the `pymisp.PyMISP.search` function to pull data from a misp instance. I've tried with pymisp versions `2.4.95.1` and `2.4.119.1`.\r\n\r\n# The Problem\r\n\r\nWhen running the `search` function to pull all of the data:\r\n\r\n```\r\nd = {\r\n    'published': 0,\r\n    'date_from': '1970-01-01'\r\n}\r\ne = p.search(**d)\r\n```\r\n\r\nI get a 500 error:\r\n\r\n```\r\n{'errors': [\"500 exception: {'name': 'An Internal Error Has Occurred.', 'message': 'An Internal Error Has Occurred.', 'url': '/events/restSearch/download'}\"],\r\n 'message': 'An Internal Error Has Occurred.',\r\n 'name': 'An Internal Error Has Occurred.',\r\n 'url': '/events/restSearch/download'}\r\n```\r\n\r\nThere is a lot of data in the instance, so I'm guessing the 500 error is caused because I'm trying to get too much data from the instance. Is there any way to test this hypothesis?\r\n\r\nIf the problem is indeed that my search is requesting too much data, is there a way to paginate through the results in a way that won't error out?\r\n\r\nThanks in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/543", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/543/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/543/events", "html_url": "https://github.com/MISP/PyMISP/issues/543", "id": 571450787, "node_id": "MDU6SXNzdWU1NzE0NTA3ODc=", "number": 543, "title": "How to preserve publishment timestamp", "user": {"login": "sustefil", "id": 32512488, "node_id": "MDQ6VXNlcjMyNTEyNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/32512488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sustefil", "html_url": "https://github.com/sustefil", "followers_url": "https://api.github.com/users/sustefil/followers", "following_url": "https://api.github.com/users/sustefil/following{/other_user}", "gists_url": "https://api.github.com/users/sustefil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sustefil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sustefil/subscriptions", "organizations_url": "https://api.github.com/users/sustefil/orgs", "repos_url": "https://api.github.com/users/sustefil/repos", "events_url": "https://api.github.com/users/sustefil/events{/privacy}", "received_events_url": "https://api.github.com/users/sustefil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T15:05:36Z", "updated_at": "2020-06-04T12:23:17Z", "closed_at": "2020-06-04T12:23:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys!\r\n\r\nI am using PyMISP to alter some events (adding tags/comments to attributes). When I update the event, I do **not** want to republish it and keep the current publish timestamp (so I don't want to unpublish). Is there a way to do this please?\r\n\r\nFrom what I understood so far, an altered event is automatically republished (when was published before), unless explicitly set to unpublished.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/542", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/542/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/542/events", "html_url": "https://github.com/MISP/PyMISP/issues/542", "id": 569632102, "node_id": "MDU6SXNzdWU1Njk2MzIxMDI=", "number": 542, "title": "add_event weird reaction: returning an list of ALL existing events but none new one", "user": {"login": "dragonyy", "id": 34716, "node_id": "MDQ6VXNlcjM0NzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/34716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dragonyy", "html_url": "https://github.com/dragonyy", "followers_url": "https://api.github.com/users/dragonyy/followers", "following_url": "https://api.github.com/users/dragonyy/following{/other_user}", "gists_url": "https://api.github.com/users/dragonyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dragonyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dragonyy/subscriptions", "organizations_url": "https://api.github.com/users/dragonyy/orgs", "repos_url": "https://api.github.com/users/dragonyy/repos", "events_url": "https://api.github.com/users/dragonyy/events{/privacy}", "received_events_url": "https://api.github.com/users/dragonyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-24T04:39:40Z", "updated_at": "2020-02-25T01:39:51Z", "closed_at": "2020-02-25T01:39:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "using MISP 2.4.117, with PyMISP 2.4.117, two months ago the code below worked correctly\r\n\r\n```python\r\nmisp = ExpandedPyMISP(misp_url, misp_key, False)\r\ne = MISPEvent()\r\ne.info = 'ONE'\r\ne.threat_level_id = 4\r\ne.set_date('2020-02-24')\r\nekkk = misp.add_event(e)\r\n```\r\n\r\nI remember the variable 'ekkk' contained ONE instance of MISPEvent/dict. But today ekkk is a LIST of ALL existing events (5470 events); and no new event has been created.\r\n\r\nI tried another chance (listed in [tutorial](https://github.com/MISP/PyMISP/blob/master/docs/tutorial/FullOverview.ipynb) )\r\n\r\n```python\r\nevent = misp.add_event({'distribution': 1, \"threat_level_id\": 1, \"analysis\": 1, 'info':\"Event from notebook\"})\r\n```\r\n\r\nBut the condition remains. Someone else encounters this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/541", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/541/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/541/events", "html_url": "https://github.com/MISP/PyMISP/issues/541", "id": 565315937, "node_id": "MDU6SXNzdWU1NjUzMTU5Mzc=", "number": 541, "title": "No email notification after publish event", "user": {"login": "6Xkljk8Vj7Tk1k4", "id": 754027, "node_id": "MDQ6VXNlcjc1NDAyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/754027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4", "html_url": "https://github.com/6Xkljk8Vj7Tk1k4", "followers_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/followers", "following_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/following{/other_user}", "gists_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/gists{/gist_id}", "starred_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/subscriptions", "organizations_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/orgs", "repos_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/repos", "events_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/events{/privacy}", "received_events_url": "https://api.github.com/users/6Xkljk8Vj7Tk1k4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-14T13:06:21Z", "updated_at": "2020-02-14T13:14:34Z", "closed_at": "2020-02-14T13:14:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIn latest version i have problem with email notification with following python code:\r\n\r\n> pymisp = PyMISP(misp_url, misp_key)\r\n        event = MISPEvent()\r\n        event.info = threatName\r\n        event.analysis = 2\r\n        event.distribution = 0\r\n        event.threat_level_id = 3\r\n        event.add_attribute('target-user', userName)\r\n        event.add_attribute('text', contentVersion)\r\n        event.add_attribute('text', osType)\r\n        event.add_attribute('datetime', detectedUTC)\r\n        event.add_attribute('target-location', nodeTextPath)\r\n        event.add_attribute('target-machine', hostName)\r\n        event.add_attribute('ip-src', ipv4)\r\n        event.add_attribute('mac-address', mac)\r\n        event.add_attribute('port', port)\r\n        event.add_attribute('malware-type', threatType)\r\n        event.add_attribute('filename', fileName)\r\n        x = pymisp.add_event(event)\r\n        pymisp.publish(x)\r\n\r\nevent added successfully but no email notification:\r\n![image](https://user-images.githubusercontent.com/754027/74533912-fe33fb00-4f32-11ea-8f98-7f58a73c64a3.png)\r\n\r\nHowever adding event manually via gui trigger email notification:\r\n![image](https://user-images.githubusercontent.com/754027/74534001-27ed2200-4f33-11ea-89b1-89878dc43c37.png)\r\n\r\nPlease advise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/540", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/540/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/540/events", "html_url": "https://github.com/MISP/PyMISP/issues/540", "id": 564002320, "node_id": "MDU6SXNzdWU1NjQwMDIzMjA=", "number": 540, "title": "disappearance \"attribute\" in fonction \"search_index\"", "user": {"login": "di-iode", "id": 10499367, "node_id": "MDQ6VXNlcjEwNDk5MzY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10499367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di-iode", "html_url": "https://github.com/di-iode", "followers_url": "https://api.github.com/users/di-iode/followers", "following_url": "https://api.github.com/users/di-iode/following{/other_user}", "gists_url": "https://api.github.com/users/di-iode/gists{/gist_id}", "starred_url": "https://api.github.com/users/di-iode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di-iode/subscriptions", "organizations_url": "https://api.github.com/users/di-iode/orgs", "repos_url": "https://api.github.com/users/di-iode/repos", "events_url": "https://api.github.com/users/di-iode/events{/privacy}", "received_events_url": "https://api.github.com/users/di-iode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-12T13:32:15Z", "updated_at": "2020-02-12T15:42:10Z", "closed_at": "2020-02-12T15:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI use habitually pymisp 2.4.65 (not good!!).\r\nI juste updated it and i have a problem.\r\nNow, the function \"search_index\" don't accepts the parameter \"attribute\" like in version 2.4.65.\r\n\r\nWhat is the good practis to search fastly and easilyan attribut ? \r\n\r\nThank for your help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/538", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/538/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/538/events", "html_url": "https://github.com/MISP/PyMISP/issues/538", "id": 561231952, "node_id": "MDU6SXNzdWU1NjEyMzE5NTI=", "number": 538, "title": "peobject.py references optional lief object", "user": {"login": "sebix", "id": 199050, "node_id": "MDQ6VXNlcjE5OTA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/199050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebix", "html_url": "https://github.com/sebix", "followers_url": "https://api.github.com/users/sebix/followers", "following_url": "https://api.github.com/users/sebix/following{/other_user}", "gists_url": "https://api.github.com/users/sebix/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebix/subscriptions", "organizations_url": "https://api.github.com/users/sebix/orgs", "repos_url": "https://api.github.com/users/sebix/repos", "events_url": "https://api.github.com/users/sebix/events{/privacy}", "received_events_url": "https://api.github.com/users/sebix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-02-06T19:49:57Z", "updated_at": "2020-02-07T12:25:55Z", "closed_at": "2020-02-07T10:52:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/MISP/PyMISP/blob/70dca1d4087cd6e30f2d3403dbc997d3eb2bab26/pymisp/tools/peobject.py#L30\r\nhttps://github.com/MISP/PyMISP/blob/70dca1d4087cd6e30f2d3403dbc997d3eb2bab26/pymisp/tools/peobject.py#L122\r\n\r\nlief is an optional dependency and the import in peobject.py is optional too. `But lief.PE.Binary` is referenced as type for arguments", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/537", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/537/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/537/events", "html_url": "https://github.com/MISP/PyMISP/issues/537", "id": 560999302, "node_id": "MDU6SXNzdWU1NjA5OTkzMDI=", "number": 537, "title": "Negative wildcard attribute tag search", "user": {"login": "sustefil", "id": 32512488, "node_id": "MDQ6VXNlcjMyNTEyNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/32512488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sustefil", "html_url": "https://github.com/sustefil", "followers_url": "https://api.github.com/users/sustefil/followers", "following_url": "https://api.github.com/users/sustefil/following{/other_user}", "gists_url": "https://api.github.com/users/sustefil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sustefil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sustefil/subscriptions", "organizations_url": "https://api.github.com/users/sustefil/orgs", "repos_url": "https://api.github.com/users/sustefil/repos", "events_url": "https://api.github.com/users/sustefil/events{/privacy}", "received_events_url": "https://api.github.com/users/sustefil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-06T13:03:53Z", "updated_at": "2020-02-07T16:31:58Z", "closed_at": "2020-02-07T16:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI am trying to build a query for searching attributes which do **not** have a wildcarded tag.. so far I have been experimenting with `search` and `build_complex_query` methods, but no success.. can you give me a hint how to do it please?\r\n\r\nI need something like this:\r\n```\r\ntag_query = misp.build_complex_query(not_parameters=['%score%'])\r\nmisp.search(controller='attributes', category='Network activity', tags=tag_query)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/536", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/536/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/536/events", "html_url": "https://github.com/MISP/PyMISP/issues/536", "id": 560582137, "node_id": "MDU6SXNzdWU1NjA1ODIxMzc=", "number": 536, "title": "Feed Generator in 2.4.120 not working in certain python environments ", "user": {"login": "cbboggs", "id": 18554987, "node_id": "MDQ6VXNlcjE4NTU0OTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/18554987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbboggs", "html_url": "https://github.com/cbboggs", "followers_url": "https://api.github.com/users/cbboggs/followers", "following_url": "https://api.github.com/users/cbboggs/following{/other_user}", "gists_url": "https://api.github.com/users/cbboggs/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbboggs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbboggs/subscriptions", "organizations_url": "https://api.github.com/users/cbboggs/orgs", "repos_url": "https://api.github.com/users/cbboggs/repos", "events_url": "https://api.github.com/users/cbboggs/events{/privacy}", "received_events_url": "https://api.github.com/users/cbboggs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-02-05T19:31:13Z", "updated_at": "2020-02-07T16:17:57Z", "closed_at": "2020-02-07T16:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a Ubuntu 18.04 desktop environment, with both python2.7 and python3.6 installed (as is default currently), I'm unable to run the example feed generator script (generate.py) in the latest builds of pymisp (2.4.120) using python3.  I receive the error `Unable to export in the feed format, _fields_for_feed is missing.`\r\n\r\nIf I downgrade to pymisp 2.4.119.1, then it works fine.\r\n\r\nI verified that I'm executing with python3 - so I'm unsure what is causing the problem.\r\n\r\nJust as confusing to me, the only success I've had running the feed generator with the latest version of pymisp has been in a brand new Ubuntu 18.04 Server install, fresh MISP install (using install.sh) and within the MISP venv.   If I try to duplicate the venv's Python versions and dependencies elsewhere and run feed generator, it still gives the same error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/535", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/535/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/535/events", "html_url": "https://github.com/MISP/PyMISP/issues/535", "id": 558988818, "node_id": "MDU6SXNzdWU1NTg5ODg4MTg=", "number": 535, "title": "Analysis field should be string, not integer", "user": {"login": "dronnix", "id": 2401009, "node_id": "MDQ6VXNlcjI0MDEwMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2401009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dronnix", "html_url": "https://github.com/dronnix", "followers_url": "https://api.github.com/users/dronnix/followers", "following_url": "https://api.github.com/users/dronnix/following{/other_user}", "gists_url": "https://api.github.com/users/dronnix/gists{/gist_id}", "starred_url": "https://api.github.com/users/dronnix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dronnix/subscriptions", "organizations_url": "https://api.github.com/users/dronnix/orgs", "repos_url": "https://api.github.com/users/dronnix/repos", "events_url": "https://api.github.com/users/dronnix/events{/privacy}", "received_events_url": "https://api.github.com/users/dronnix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-02-03T10:30:37Z", "updated_at": "2020-02-05T12:58:15Z", "closed_at": "2020-02-05T12:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nAccording to [specification](https://github.com/MISP/misp-rfc/blob/master/misp-core-format/raw.md#manifest) analysis has a string type, not an integer. However, in some places (like [this](https://github.com/MISP/PyMISP/blob/85b4f1d05178bdaa601fb63aff457f0221923be8/pymisp/mispevent.py#L970) ) it filled with an integer value. Affects generating feeds.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/533", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/533/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/533/events", "html_url": "https://github.com/MISP/PyMISP/issues/533", "id": 557949806, "node_id": "MDU6SXNzdWU1NTc5NDk4MDY=", "number": 533, "title": "PyMISP event export and import example", "user": {"login": "Tubbs10", "id": 10351827, "node_id": "MDQ6VXNlcjEwMzUxODI3", "avatar_url": "https://avatars1.githubusercontent.com/u/10351827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tubbs10", "html_url": "https://github.com/Tubbs10", "followers_url": "https://api.github.com/users/Tubbs10/followers", "following_url": "https://api.github.com/users/Tubbs10/following{/other_user}", "gists_url": "https://api.github.com/users/Tubbs10/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tubbs10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tubbs10/subscriptions", "organizations_url": "https://api.github.com/users/Tubbs10/orgs", "repos_url": "https://api.github.com/users/Tubbs10/repos", "events_url": "https://api.github.com/users/Tubbs10/events{/privacy}", "received_events_url": "https://api.github.com/users/Tubbs10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-01-31T06:55:24Z", "updated_at": "2020-02-06T14:27:52Z", "closed_at": "2020-02-06T14:27:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could someone please be able **to provide an example** using PyMISP of how to export events with all attributes from specific time range (or last day or last two days etc.) and then import them to another MISP instance as new events?\r\n\r\nI've tried to solve this for a long time now without success as I find the documentation not very clear on this and it's getting very frustrating.\r\n\r\nThank you so much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/532", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/532/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/532/events", "html_url": "https://github.com/MISP/PyMISP/issues/532", "id": 557582062, "node_id": "MDU6SXNzdWU1NTc1ODIwNjI=", "number": 532, "title": "Struggling with update_attribute", "user": {"login": "sustefil", "id": 32512488, "node_id": "MDQ6VXNlcjMyNTEyNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/32512488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sustefil", "html_url": "https://github.com/sustefil", "followers_url": "https://api.github.com/users/sustefil/followers", "following_url": "https://api.github.com/users/sustefil/following{/other_user}", "gists_url": "https://api.github.com/users/sustefil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sustefil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sustefil/subscriptions", "organizations_url": "https://api.github.com/users/sustefil/orgs", "repos_url": "https://api.github.com/users/sustefil/repos", "events_url": "https://api.github.com/users/sustefil/events{/privacy}", "received_events_url": "https://api.github.com/users/sustefil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-30T15:48:19Z", "updated_at": "2020-02-05T15:07:03Z", "closed_at": "2020-02-05T15:07:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, I am struggling with the method update_attribute. It does not work as expected.\r\nBasically I need to filter for attributes' specific tags and add/edit them.\r\n\r\nThe corresponding method for event works, but not for attribute, see below:\r\n\r\n```\r\n# This works fine\r\nm = pymisp.ExpandedPyMISP(misp_test_endpoint, misp_test_api_key, ssl=False)\r\n\r\nev = m.get_event(event=45, pythonify=True)\r\nev.add_attribute('ip-dst', '10.20.30.40')\r\n\r\nm.update_event(ev)\r\n\r\n----------------------------------------------------------------------------------------\r\n# This does not work, although the update finishes successfully with 200\r\ntest_attr = ev.attributes[0]\r\ntest_attr.add_tag('This tag wont show in MISP')\r\n\r\nm.update_attribute(test_attr)\r\n```\r\n\r\nSeems that this request can not really update attribute's tags?\r\nhttps://github.com/MISP/PyMISP/blob/master/pymisp/api.py#L424\r\n\r\nThanks for help!\r\n\r\nI am using PyMISP 2.4.120 and MISP 2.4.119", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/529", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/529/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/529/events", "html_url": "https://github.com/MISP/PyMISP/issues/529", "id": 554330932, "node_id": "MDU6SXNzdWU1NTQzMzA5MzI=", "number": 529, "title": "Feature Request: provide a merge event function in PyMISP", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-23T18:33:45Z", "updated_at": "2020-01-29T14:40:37Z", "closed_at": "2020-01-29T09:57:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nThere are times that we have a need to merge many events into one. One case is related to https://github.com/MISP/MISP/issues/5544 where we needed to change default feeds from daily events to a fixed event, and we need to merge all the prior daily events into the one new fixed event. (This need to merge is triggered by duplicate attributes spanning separate events causing huge and false correlation growth)\r\n\r\nThere is now a method to merge two events in the WebUI (see https://github.com/MISP/MISP/issues/5544).\r\n\r\nWould be great if `PyMISP.merge` could specify a list of existing events and a target event to merge them all into.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/528", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/528/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/528/events", "html_url": "https://github.com/MISP/PyMISP/issues/528", "id": 553756897, "node_id": "MDU6SXNzdWU1NTM3NTY4OTc=", "number": 528, "title": "Questions re' 2.4.120 first_seen last_seen PyMISP behavior", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-01-22T19:50:09Z", "updated_at": "2020-02-17T12:26:55Z", "closed_at": "2020-02-17T08:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "A few questions regarding the excellent addition of `first_seen` and `last_seen` into the MISP attribute model with 2.4.120 with respect to PyMISP.\r\n\r\n1. All pre-existing attributes have those two values set to `null`. Might it make sense that the 2.4.120 database update to the new schema also set the `last_seen` column with the existing `attributes.timestamp`? Just checking before we write our own script to do this to meet our needs.\r\n\r\n2. Can PyMISP, when ingesting an attribute that already exists in an event, with `last_seen` set to a date greater than the prior `last_seen`, update `last_seen`? My tests show it not being updated and a trigger inserting a validation error into the `logs` table stating `A similar attribute already exists for this event`.\r\n\r\nQuestions 3 and 4 are considered in order to support existing PyMISP apps that do not set these two new `*_seen` arguments (i.e. backwards support). I understand these are arguable as ingesting now doesn't necessarily mean now is `first_seen` or `last_seen`; hence, prior code may need to be enhanced. Wanted to ask the questions before going back to modify prior code.\r\n\r\n3. Any possibility to offer a way when ingesting an attribute that already exists in an event that the `last_seen` would be updated, _even if not set in the API call_ (and also not inserting a validation error into the `logs` table)? (related to question 2 above)\r\n\r\n4. Same when adding a new attribute: set `first_seen` _even if that value is not passed to the API function_?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/525", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/525/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/525/events", "html_url": "https://github.com/MISP/PyMISP/issues/525", "id": 553180171, "node_id": "MDU6SXNzdWU1NTMxODAxNzE=", "number": 525, "title": "events/restSearch API error after updating MISP to 2.4.120", "user": {"login": "goodlandsecurity", "id": 41647202, "node_id": "MDQ6VXNlcjQxNjQ3MjAy", "avatar_url": "https://avatars0.githubusercontent.com/u/41647202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodlandsecurity", "html_url": "https://github.com/goodlandsecurity", "followers_url": "https://api.github.com/users/goodlandsecurity/followers", "following_url": "https://api.github.com/users/goodlandsecurity/following{/other_user}", "gists_url": "https://api.github.com/users/goodlandsecurity/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodlandsecurity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodlandsecurity/subscriptions", "organizations_url": "https://api.github.com/users/goodlandsecurity/orgs", "repos_url": "https://api.github.com/users/goodlandsecurity/repos", "events_url": "https://api.github.com/users/goodlandsecurity/events{/privacy}", "received_events_url": "https://api.github.com/users/goodlandsecurity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-21T22:30:17Z", "updated_at": "2020-01-22T13:55:47Z", "closed_at": "2020-01-22T13:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just updated MISP to 2.4.120 and now I get this error when trying to reach events/restSearch api. \r\n\r\nCan/will provide additional information as needed. \r\n\r\nStderr: CRITICAL [aping.py:67 - _check_response() ] Unknown error: the response is not in JSON.\r\nSomething is broken server-side, please send us everything that follows (careful with the auth key):\r\nRequest headers:\r\n{'User-Agent': 'PyMISP 2.4.120 - Python 3.7.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Length': '44', 'Authorization': '#{API_KEY}', 'content-type': 'application/json'}\r\nRequest body:\r\n{\"returnFormat\": \"json\", \"value\": \"8.8.8.8\"}\r\nResponse (if any):\r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\":\"An Internal Error Has Occurred.\",\"url\":\"\\/events\\/restSearch\"}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/523", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/523/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/523/events", "html_url": "https://github.com/MISP/PyMISP/issues/523", "id": 552181223, "node_id": "MDU6SXNzdWU1NTIxODEyMjM=", "number": 523, "title": "'Role' error when executing \"last.py\"", "user": {"login": "TotoRafa", "id": 23572539, "node_id": "MDQ6VXNlcjIzNTcyNTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/23572539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TotoRafa", "html_url": "https://github.com/TotoRafa", "followers_url": "https://api.github.com/users/TotoRafa/followers", "following_url": "https://api.github.com/users/TotoRafa/following{/other_user}", "gists_url": "https://api.github.com/users/TotoRafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/TotoRafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TotoRafa/subscriptions", "organizations_url": "https://api.github.com/users/TotoRafa/orgs", "repos_url": "https://api.github.com/users/TotoRafa/repos", "events_url": "https://api.github.com/users/TotoRafa/events{/privacy}", "received_events_url": "https://api.github.com/users/TotoRafa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-20T09:39:36Z", "updated_at": "2020-01-20T10:50:38Z", "closed_at": "2020-01-20T10:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n\r\nI am sorry if this problem has already been solved but I couldn't find anything on the internet. When I am trying \"last.py\" example with python3 or python3.7, I get the following error: \r\n```\r\n/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py:857: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning)\r\n/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py:857: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning)\r\n/anaconda3/lib/python3.7/site-packages/urllib3/connectionpool.py:857: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning)\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/lib/python3.7/site-packages/pymisp/api.py\", line 90, in __init__\r\n    self._current_user, self._current_role, self._current_user_settings = self.get_user(pythonify=True, expanded=True)\r\n  File \"/anaconda3/lib/python3.7/site-packages/pymisp/api.py\", line 1269, in get_user\r\n    r.from_dict(**user['Role'])\r\nKeyError: 'Role'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"last.py\", line 31, in <module>\r\n    misp = ExpandedPyMISP(misp_url, misp_key, misp_verifycert, cert=misp_client_cert)\r\n  File \"/anaconda3/lib/python3.7/site-packages/pymisp/api.py\", line 92, in __init__\r\n    raise PyMISPError(f'Unable to connect to MISP ({self.root_url}). Please make sure the API key and the URL are correct (http/https is required): {e}')\r\npymisp.exceptions.PyMISPError: Unable to connect to MISP (https://<misp-url>). Please make sure the API key and the URL are correct (http/https is required): 'Role'  \r\n```\r\nI do not really understand why... I think I am using the right API key (found in \"https://<misp-url>/events/automation\") and URL. I also set the verification certificate to false. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/519", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/519/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/519/events", "html_url": "https://github.com/MISP/PyMISP/issues/519", "id": 550393763, "node_id": "MDU6SXNzdWU1NTAzOTM3NjM=", "number": 519, "title": "Error when updating PyMISP in AIL", "user": {"login": "robertnixon2003", "id": 20773170, "node_id": "MDQ6VXNlcjIwNzczMTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/20773170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertnixon2003", "html_url": "https://github.com/robertnixon2003", "followers_url": "https://api.github.com/users/robertnixon2003/followers", "following_url": "https://api.github.com/users/robertnixon2003/following{/other_user}", "gists_url": "https://api.github.com/users/robertnixon2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertnixon2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertnixon2003/subscriptions", "organizations_url": "https://api.github.com/users/robertnixon2003/orgs", "repos_url": "https://api.github.com/users/robertnixon2003/repos", "events_url": "https://api.github.com/users/robertnixon2003/events{/privacy}", "received_events_url": "https://api.github.com/users/robertnixon2003/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-15T19:48:26Z", "updated_at": "2020-04-14T20:50:56Z", "closed_at": "2020-04-14T20:50:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting this syntax error:\r\n\r\n```\r\nCollecting git+https://github.com/MISP/PyMISP\r\n  Cloning https://github.com/MISP/PyMISP to /tmp/pip-req-build-jkk6r9yq\r\n  Running command git clone -q https://github.com/MISP/PyMISP /tmp/pip-req-build-jkk6r9yq\r\n  Running command git submodule update --init --recursive -q\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /opt/AIL-framework//AILENV//bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-req-build-jkk6r9yq/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-req-build-jkk6r9yq/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-req-build-jkk6r9yq/pip-egg-info\r\n         cwd: /tmp/pip-req-build-jkk6r9yq/\r\n    Complete output (10 lines):\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-req-build-jkk6r9yq/setup.py\", line 7, in <module>\r\n        import pymisp\r\n      File \"/tmp/pip-req-build-jkk6r9yq/pymisp/__init__.py\", line 28, in <module>\r\n        from .abstract import AbstractMISP, MISPEncode, pymisp_json_default, MISPTag, Distribution, ThreatLevel, Analysis  # noqa\r\n      File \"/tmp/pip-req-build-jkk6r9yq/pymisp/abstract.py\", line 111\r\n        self.__edited: bool = True  # As we create a new object, we assume it is edited\r\n                     ^\r\n    SyntaxError: invalid syntax\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/513", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/513/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/513/events", "html_url": "https://github.com/MISP/PyMISP/issues/513", "id": 547484830, "node_id": "MDU6SXNzdWU1NDc0ODQ4MzA=", "number": 513, "title": "Feature Request: case-insensitive searching", "user": {"login": "github-pba", "id": 50981940, "node_id": "MDQ6VXNlcjUwOTgxOTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/50981940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-pba", "html_url": "https://github.com/github-pba", "followers_url": "https://api.github.com/users/github-pba/followers", "following_url": "https://api.github.com/users/github-pba/following{/other_user}", "gists_url": "https://api.github.com/users/github-pba/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-pba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-pba/subscriptions", "organizations_url": "https://api.github.com/users/github-pba/orgs", "repos_url": "https://api.github.com/users/github-pba/repos", "events_url": "https://api.github.com/users/github-pba/events{/privacy}", "received_events_url": "https://api.github.com/users/github-pba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T13:41:08Z", "updated_at": "2020-01-09T13:42:41Z", "closed_at": "2020-01-09T13:42:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nI just stumbled over an issue when searching for MISP events using the Search Attribute function. Obviously the search is case sensitive.\r\n\r\nSearching for the hash \r\n`7ab9afbc5f9a1df687558d570192fbfe9e085712657d2cfa5524f2c8caccca31` \r\nretuns events in my installation, but \r\n`7AB9AFBC5F9A1DF687558D570192FBFE9E085712657D2CFA5524F2C8CACCCA31`\r\ndoesn't.\r\n\r\nEven though I do not have an issue with this right now, I suspect I will run in problems when interfacing with other tools, which might store hashes uppercase. And I'm not sure every feed provider uses lowercase hashes/tags/...\r\n\r\nI don't see the chance to make the underlying mySQL DB case insensitive by itself, so I think this point should be done in MISP by running only case-normalized searches:\r\n\r\n`SELECT .... FROM .... WHERE lower({field}) = lower ({user entry})`\r\n\r\nWhat do you think? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/512", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/512/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/512/events", "html_url": "https://github.com/MISP/PyMISP/issues/512", "id": 546446000, "node_id": "MDU6SXNzdWU1NDY0NDYwMDA=", "number": 512, "title": "PyMISP.search_logs(created=...) does not seem to filter results by date", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T18:45:56Z", "updated_at": "2020-01-13T19:58:22Z", "closed_at": "2020-01-13T19:58:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would like to use the `created` arg in `pymisp.search_logs` to filter query results for a range of dates. Wasn't sure if it supports a range (i.e. to/from). I did try a specific date string, but that appears to be ignored (setting `created` to any date or not passing `created` always gets the same result length): see below.\r\n\r\nGuidance appreciated on how to to get this to work.\r\n\r\n* **MySQL**\r\n```\r\nMariaDB [misp]> select count(*) from logs where created = '2019-12-31 00:20:11' and action='add' and model='Attribute';\r\n+----------+\r\n| count(*) |\r\n+----------+\r\n|        3 |\r\n+----------+\r\n```\r\n* **PyMISP** output from code snippet below:\r\n   * `search_logs(Attribute): count=177608`\r\n```\r\nresult = misp.search_logs(\r\n    created = '2019-12-31 00:20:11',\r\n    model   = 'Attribute',\r\n    action  = 'add')\r\nprint('search_logs(Attribute): count=%d' % (len(result)))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/507", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/507/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/507/events", "html_url": "https://github.com/MISP/PyMISP/issues/507", "id": 541976540, "node_id": "MDU6SXNzdWU1NDE5NzY1NDA=", "number": 507, "title": "feed-generator/generate.py - not observing the filter clause", "user": {"login": "AndreC10002", "id": 4982521, "node_id": "MDQ6VXNlcjQ5ODI1MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4982521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreC10002", "html_url": "https://github.com/AndreC10002", "followers_url": "https://api.github.com/users/AndreC10002/followers", "following_url": "https://api.github.com/users/AndreC10002/following{/other_user}", "gists_url": "https://api.github.com/users/AndreC10002/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreC10002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreC10002/subscriptions", "organizations_url": "https://api.github.com/users/AndreC10002/orgs", "repos_url": "https://api.github.com/users/AndreC10002/repos", "events_url": "https://api.github.com/users/AndreC10002/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreC10002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-24T03:37:49Z", "updated_at": "2019-12-24T16:02:33Z", "closed_at": "2019-12-24T16:02:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In tests, I've found that the script isn't filtering events according to the 'filters' clause from settings.py.  Feed files are created with events sorted by date and not observing tag filtering.\r\n\r\nfilters = {'published':'true','tag':'_my_tag_'}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/506", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/506/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/506/events", "html_url": "https://github.com/MISP/PyMISP/issues/506", "id": 541793102, "node_id": "MDU6SXNzdWU1NDE3OTMxMDI=", "number": 506, "title": "feed-generator/generate.py - KeyError: '_hashes'", "user": {"login": "AndreC10002", "id": 4982521, "node_id": "MDQ6VXNlcjQ5ODI1MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4982521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreC10002", "html_url": "https://github.com/AndreC10002", "followers_url": "https://api.github.com/users/AndreC10002/followers", "following_url": "https://api.github.com/users/AndreC10002/following{/other_user}", "gists_url": "https://api.github.com/users/AndreC10002/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreC10002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreC10002/subscriptions", "organizations_url": "https://api.github.com/users/AndreC10002/orgs", "repos_url": "https://api.github.com/users/AndreC10002/repos", "events_url": "https://api.github.com/users/AndreC10002/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreC10002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-12-23T15:09:39Z", "updated_at": "2019-12-24T02:55:19Z", "closed_at": "2019-12-23T23:17:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to export a feed from a MISP instance using the example script feed-generator/generate.py.  First, found out it only works with Python > 3.6.  It would be nice to document that.\r\n\r\nGot Python 3.6.9 and PyMISP installed, but now I see the following error:\r\n\r\n$ python3.6 generate.py\r\n\r\nTraceback (most recent call last):\r\n  File \"generate.py\", line 71, in <module>\r\n    hashes += [[h, e.uuid] for h in e_feed.pop('_hashes')]\r\nKeyError: '_hashes'\r\n\r\nThe settings.py file is correctly configured. I believe the script is able to reach MISP.  Couldn't figure out why '_hashes' isn't a valid key for e_feed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/504", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/504/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/504/events", "html_url": "https://github.com/MISP/PyMISP/issues/504", "id": 533022796, "node_id": "MDU6SXNzdWU1MzMwMjI3OTY=", "number": 504, "title": "STIX 1.x XML import via WebUI fail after update to v2.4.119", "user": {"login": "mrdthomas", "id": 236442, "node_id": "MDQ6VXNlcjIzNjQ0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/236442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrdthomas", "html_url": "https://github.com/mrdthomas", "followers_url": "https://api.github.com/users/mrdthomas/followers", "following_url": "https://api.github.com/users/mrdthomas/following{/other_user}", "gists_url": "https://api.github.com/users/mrdthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrdthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrdthomas/subscriptions", "organizations_url": "https://api.github.com/users/mrdthomas/orgs", "repos_url": "https://api.github.com/users/mrdthomas/repos", "events_url": "https://api.github.com/users/mrdthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/mrdthomas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-12-05T00:02:42Z", "updated_at": "2020-03-13T12:03:19Z", "closed_at": "2020-03-13T10:54:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nAfter updating PyMISP from v2.4.113 to v2.4.119, importing STIX 1.x XML files fail with following error in browser:\r\n\r\n> Could not import STIX document: Issues executing the ingestion script or invalid input. Please check whether the dependencies for STIX are met via the diagnostic tool.\r\n\r\nWhen checking exec-errors.log the following error is reported:\r\n\r\n> WARNING [__init__.py:56 - <module>() ] Unable to load pymisp properly: No module named 'deprecated'\r\n> Traceback (most recent call last):\r\n>   File \"/var/www/MISP/app/files/scripts/stix2misp.py\", line 39, in <module>\r\n>     from pymisp.mispevent import MISPEvent, MISPObject, MISPAttribute\r\n>   File \"/var/www/MISP/PyMISP/pymisp/mispevent.py\", line 15, in <module>\r\n>     from deprecated import deprecated\r\n> ModuleNotFoundError: No module named 'deprecated'\r\n\r\nThe issue was first noticed after updating MISP from MISP 2.4.111 to MISP 2.4.119. \r\n\r\nThen a STIX import test was performed on a MISP 2.4.113 instance with PyMISP 2.4.113 with success. After updating PyMISP to the latest version, STIX imports fail. \r\n\r\nSo it seems that updating MISP to the latest version or only updating PyMISP causes this error.\r\n\r\nAny assistance would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/503", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/503/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/503/events", "html_url": "https://github.com/MISP/PyMISP/issues/503", "id": 531044624, "node_id": "MDU6SXNzdWU1MzEwNDQ2MjQ=", "number": 503, "title": "Could not add Attribute (add_attribute)", "user": {"login": "ClaraMS", "id": 24474498, "node_id": "MDQ6VXNlcjI0NDc0NDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/24474498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClaraMS", "html_url": "https://github.com/ClaraMS", "followers_url": "https://api.github.com/users/ClaraMS/followers", "following_url": "https://api.github.com/users/ClaraMS/following{/other_user}", "gists_url": "https://api.github.com/users/ClaraMS/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClaraMS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClaraMS/subscriptions", "organizations_url": "https://api.github.com/users/ClaraMS/orgs", "repos_url": "https://api.github.com/users/ClaraMS/repos", "events_url": "https://api.github.com/users/ClaraMS/events{/privacy}", "received_events_url": "https://api.github.com/users/ClaraMS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-12-02T10:47:08Z", "updated_at": "2020-03-04T13:55:33Z", "closed_at": "2020-03-04T13:55:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm trying to add multiple events to misp with multiple attributes and misp objects but when I try to add 2 or more attributes with the same value fails with the following error:\r\n\r\n> ERROR [aping.py:2158 - _check_response() ] Something went wrong (403): {'name': 'Could not add Attribute', 'message': 'Could not add Attribute', 'url': '/attributes/add', 'errors': {'value': ['A similar attribute already exists for this event.']}}\r\n\r\nThis happens too with duplicated attributes in MISPObjects:\r\n\r\n> ERROR [aping.py:2158 - _check_response() ] Something went wrong (403): {'name': 'Could not add object', 'message': 'Could not add object', 'url': '/objects/add/1757/', 'errors': 'Could not save object as at least one attribute has failed validation (text). {\"uuid\":[\"The UUID provided is not unique\"]}'}\r\n\r\n\r\nThis is part of my code:\r\n\r\n```\r\ndef create_attribute(type,value,category,comment):\r\n    attribute = MISPAttribute()\r\n    attribute.type = type\r\n    attribute.value = value\r\n    attribute.category = category\r\n    attribute.comment = comment\r\n\r\n    return attribute\r\napi = ExpandedPyMISP('https://x.x.x.x.', 'xxxx', ssl=False, debug=None, proxies=None, cert=None)\r\n event = api.new_event(0,4,0,(\"[Event]\"+ \" \" + \"Event example))\r\n\r\n# for loop\r\napi.add_attribute(event,create_attribute('other',str(key['Name']),'Artifacts dropped',str('DELETED')))\r\nmisp_object = MISPObject('file', standalone=False)\r\nmisp_object.add_attribute('path', value=str(key['sources'][source]['@process']))\r\nmisp_object.add_attribute('filename', value=str(key['@desc']))\r\nmisp_object.add_attribute('text', value=str(key['sources'][source]['$']))\r\nmisp_object.add_attribute('text', value=str('null'))\r\n\r\nresponse = api.add_object(event,misp_object)\r\n\r\n# outside the for loop \r\nadd_event = api.add_event(event)\r\n\r\n```\r\n\r\nThis code is inside a for loop, thats the reason why I have and want repeated attributes, some of them have different categories or comments even if the value is the same.\r\n\r\nI've checked this issue which looks similar to mine: https://github.com/MISP/MISP/issues/3897 \r\nBut the issue is not a warning now, is an ERROR causing the attribute not being added to the event, so none of those examples are valid anymore.\r\n\r\nI'm using the last version of PyMisp and python 3.6\r\nMaybe I'm not using it the right way :/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/501", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/501/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/501/events", "html_url": "https://github.com/MISP/PyMISP/issues/501", "id": 529225925, "node_id": "MDU6SXNzdWU1MjkyMjU5MjU=", "number": 501, "title": "setup: python >= 3.6 not explicitly required", "user": {"login": "wagner-certat", "id": 25031221, "node_id": "MDQ6VXNlcjI1MDMxMjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/25031221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wagner-certat", "html_url": "https://github.com/wagner-certat", "followers_url": "https://api.github.com/users/wagner-certat/followers", "following_url": "https://api.github.com/users/wagner-certat/following{/other_user}", "gists_url": "https://api.github.com/users/wagner-certat/gists{/gist_id}", "starred_url": "https://api.github.com/users/wagner-certat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wagner-certat/subscriptions", "organizations_url": "https://api.github.com/users/wagner-certat/orgs", "repos_url": "https://api.github.com/users/wagner-certat/repos", "events_url": "https://api.github.com/users/wagner-certat/events{/privacy}", "received_events_url": "https://api.github.com/users/wagner-certat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-27T09:36:29Z", "updated_at": "2019-11-27T10:16:10Z", "closed_at": "2019-11-27T10:15:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just noticed that the python version requirement (>= 3.6) is *not* in the packages' metadata despite it is required in the current versions. For docs see: https://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires\r\n\r\n```python\r\npython_requires='>=3.6',\r\n```\r\n\r\nThis is missing in various already released versions, but can still be applied for those too. The entry as the advantage that for users running older python versions pip installed the latest compatible version instead of a broken one (raising SyntaxErrors).\r\n\r\nAlso: Reading the changelogs I could not determine the last version compatible with python < 3.6. I would have expected a clear changelog message for such a change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/497", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/497/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/497/events", "html_url": "https://github.com/MISP/PyMISP/issues/497", "id": 525771149, "node_id": "MDU6SXNzdWU1MjU3NzExNDk=", "number": 497, "title": "Search results differences between PyMISP and ExpandedPyMISP", "user": {"login": "andurin", "id": 541348, "node_id": "MDQ6VXNlcjU0MTM0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/541348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andurin", "html_url": "https://github.com/andurin", "followers_url": "https://api.github.com/users/andurin/followers", "following_url": "https://api.github.com/users/andurin/following{/other_user}", "gists_url": "https://api.github.com/users/andurin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andurin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andurin/subscriptions", "organizations_url": "https://api.github.com/users/andurin/orgs", "repos_url": "https://api.github.com/users/andurin/repos", "events_url": "https://api.github.com/users/andurin/events{/privacy}", "received_events_url": "https://api.github.com/users/andurin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-11-20T12:24:25Z", "updated_at": "2019-11-21T10:01:53Z", "closed_at": "2019-11-21T10:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'll try to get all Events which have a specific Tag and of course I tried using ExpandedPyMISP but it serves me \"all\" events, not only the expected one which I tagged.\r\n\r\nExpandedPyMISP differs in that way that nearly all allowed parameters will be set. Why and which is the one that invalids my wanted tags Filter?\r\n\r\nUsing PyMISP:\r\n```\r\nIn [18]: events = misp.search('events', tags=\"OpenCTI:Import\")                                                                                                                                                     \r\n/ipython:1: DeprecationWarning: Call to deprecated method search. (Use ExpandedPyMISP.search) -- Deprecated since version 2.4.111.\r\nDEBUG [api.py:155 - _prepare_request() ] POST - http://misp.example.com/events/restSearch\r\nDEBUG [api.py:157 - _prepare_request() ] {\"tags\": [\"OpenCTI:Import\"], \"returnFormat\": \"json\"}\r\nDEBUG [api.py:183 - _prepare_request() ] {'User-Agent': 'PyMISP 2.4.117.2 - Python 3.7.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Length': '52', 'Authorization': 'LOLOMAT', 'content-type': 'application/json'}\r\n```\r\n\r\nAbove gives me exactly one Event - as expected.\r\n\r\nNow using ExpandedPyMISP:\r\n\r\n```\r\nIn [21]: events = misp.search('events', tags=\"OpenCTI:Import\")                                                                                                                                                     \r\nDEBUG [aping.py:2192 - _prepare_request() ] POST - http://misp.example.com/events/restSearch\r\nDEBUG [aping.py:2194 - _prepare_request() ] {'returnFormat': 'json', 'page': None, 'limit': None, 'value': None, 'type': None, 'category': None, 'org': None, 'tags': 'OpenCTI:Import', 'quickFilter': None, 'from': None, 'to': None, 'eventid': None, 'withAttachments': 0, 'metadata': 0, 'uuid': None, 'published': None, 'enforceWarninglist': 0, 'deleted': None, 'includeEventUuid': 0, 'includeEventTags': 0, 'sgReferenceOnly': 0, 'eventinfo': None, 'searchall': None, 'requested_attributes': None, 'includeContext': 0, 'headerless': 0, 'includeSightings': 0, 'includeCorrelations': 0}\r\nDEBUG [aping.py:2219 - _prepare_request() ] {'User-Agent': 'PyMISP 2.4.117.2 - Python 3.7', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Length': '267', 'Authorization': 'LOLOMAT', 'content-type': 'application/json'}\r\n```\r\n\r\n\r\nRegards,\r\nHendrk", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/496", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/496/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/496/events", "html_url": "https://github.com/MISP/PyMISP/issues/496", "id": 525194976, "node_id": "MDU6SXNzdWU1MjUxOTQ5NzY=", "number": 496, "title": "Advanced extraction in ExpandedPymisp", "user": {"login": "AndersonLT", "id": 47088801, "node_id": "MDQ6VXNlcjQ3MDg4ODAx", "avatar_url": "https://avatars2.githubusercontent.com/u/47088801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndersonLT", "html_url": "https://github.com/AndersonLT", "followers_url": "https://api.github.com/users/AndersonLT/followers", "following_url": "https://api.github.com/users/AndersonLT/following{/other_user}", "gists_url": "https://api.github.com/users/AndersonLT/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndersonLT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndersonLT/subscriptions", "organizations_url": "https://api.github.com/users/AndersonLT/orgs", "repos_url": "https://api.github.com/users/AndersonLT/repos", "events_url": "https://api.github.com/users/AndersonLT/events{/privacy}", "received_events_url": "https://api.github.com/users/AndersonLT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-19T18:47:45Z", "updated_at": "2019-11-21T20:04:22Z", "closed_at": "2019-11-21T20:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do i upload a sample with advanced extraction in the new API ? i usually used upload_sample with advanced_extraction=True, how do i do this now ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/495", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/495/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/495/events", "html_url": "https://github.com/MISP/PyMISP/issues/495", "id": 523616471, "node_id": "MDU6SXNzdWU1MjM2MTY0NzE=", "number": 495, "title": "Adding Tag to Existing Event", "user": {"login": "brianwarehime", "id": 403903, "node_id": "MDQ6VXNlcjQwMzkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/403903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianwarehime", "html_url": "https://github.com/brianwarehime", "followers_url": "https://api.github.com/users/brianwarehime/followers", "following_url": "https://api.github.com/users/brianwarehime/following{/other_user}", "gists_url": "https://api.github.com/users/brianwarehime/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianwarehime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianwarehime/subscriptions", "organizations_url": "https://api.github.com/users/brianwarehime/orgs", "repos_url": "https://api.github.com/users/brianwarehime/repos", "events_url": "https://api.github.com/users/brianwarehime/events{/privacy}", "received_events_url": "https://api.github.com/users/brianwarehime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-15T18:14:46Z", "updated_at": "2019-11-15T18:25:00Z", "closed_at": "2019-11-15T18:25:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to add an existing tag to an existing event, but running into difficulties:\r\n\r\nWhen looking at the docs, I see that I should use `add_tag`, however, when looking at the library, add_tag does:\r\n```\r\n    def add_tag(self, tag: MISPTag, pythonify: bool=False):\r\n        '''Add a new tag on a MISP instance'''\r\n```\r\n\r\nI don't need to add a new tag to my instance, just want to update an existing event with a tag that has already been added. \r\n\r\nRight now, I'm trying this:\r\n```\r\nfrom pymisp import ExpandedPyMISP, MISPEvent\r\n\r\ndef create_misp_event(info):\r\n    event = MISPEvent()\r\n    event.distribution = 0\r\n    event.analysis = 0\r\n    event.info = info\r\n    created_event = misp.add_event(event, pythonify=True)\r\n    \r\n    return created_event\r\n\r\npulses = fetch_pulses()\r\n\r\nfor pulse in pulses:\r\n    new_event = create_misp_event(pulse.get('name'))\r\n    created = json.loads(new_event.to_json())\r\n    event_id = created.get('id')  \r\n    misp.tag(event_id,'AlienVault')\r\n```\r\n  \r\nWhen doing that, I get the following response:\r\n```\r\nCRITICAL [aping.py:2060 - _check_response() ] Unknown error: the response is not in JSON.\r\nSomething is broken server-side, please send us everything that follows (careful with the auth key):\r\nRequest headers:\r\n{'User-Agent': 'PyMISP 2.4.117 - Python 3.7', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Length': '51', 'Authorization': 'redacted', 'content-type': 'application/json'}\r\nRequest body:\r\n{\"uuid\": \"90\", \"tag\": \"AlienVault\", \"local\": false}\r\nResponse (if any):\r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\":\"An Internal Error Has Occurred.\",\"url\":\"\\/tags\\/attachTagToObject\"}\r\nTraceback (most recent call last):\r\n  File \"otx.py\", line 93, in <module>\r\n    misp.tag(event_id,'AlienVault')\r\n  File \"/usr/local/lib/python3.7/site-packages/pymisp/aping.py\", line 1974, in tag\r\n    return self._check_response(response, expect_json=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/pymisp/aping.py\", line 2061, in _check_response\r\n    raise MISPServerError(f'Error code 500:\\n{response.text}')\r\npymisp.exceptions.MISPServerError: Error code 500:\r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\":\"An Internal Error Has Occurred.\",\"url\":\"\\/tags\\/attachTagToObject\"}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/494", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/494/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/494/events", "html_url": "https://github.com/MISP/PyMISP/issues/494", "id": 520621275, "node_id": "MDU6SXNzdWU1MjA2MjEyNzU=", "number": 494, "title": "Is it possible to get explanation of Threat Level, Distribution, and Analysis levels", "user": {"login": "todonaki", "id": 57256761, "node_id": "MDQ6VXNlcjU3MjU2NzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/57256761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/todonaki", "html_url": "https://github.com/todonaki", "followers_url": "https://api.github.com/users/todonaki/followers", "following_url": "https://api.github.com/users/todonaki/following{/other_user}", "gists_url": "https://api.github.com/users/todonaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/todonaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/todonaki/subscriptions", "organizations_url": "https://api.github.com/users/todonaki/orgs", "repos_url": "https://api.github.com/users/todonaki/repos", "events_url": "https://api.github.com/users/todonaki/events{/privacy}", "received_events_url": "https://api.github.com/users/todonaki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-10T16:10:17Z", "updated_at": "2019-11-15T13:36:09Z", "closed_at": "2019-11-15T13:36:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation, I see that the levels for each of the attributes we are setting are as follows:\r\n\r\n> threatlevel \u2013 Threat level(s) (1,2,3,4) | str or list\r\n> distribution \u2013 Distribution level(s) (0,1,2,3) | str or list\r\n> analysis \u2013 Analysis level(s) (0,1,2) | str or list\r\n\r\nFor example, I've from the documentation that threatlevel (threat_level_id) is mapped as follows:\r\n\r\n> 0 = high\r\n> 1 = medium\r\n> 2 = low\r\n> 3 = undefined\r\n\r\nIs it possible to get what each of the levels mean for distribution, and analysis?\r\n\r\nI've searched all of the documentation and cant seem to find anything that explains.  I'd like to get a more comprehensive explanation l that I can share with others in my organisation who are using PyMISP to add events to our feed.\r\n\r\n**Thank you!**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/493", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/493/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/493/events", "html_url": "https://github.com/MISP/PyMISP/issues/493", "id": 520230007, "node_id": "MDU6SXNzdWU1MjAyMzAwMDc=", "number": 493, "title": "Clarification on the \"deleted\" keyword arg to the search function", "user": {"login": "fhightower", "id": 3599813, "node_id": "MDQ6VXNlcjM1OTk4MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3599813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhightower", "html_url": "https://github.com/fhightower", "followers_url": "https://api.github.com/users/fhightower/followers", "following_url": "https://api.github.com/users/fhightower/following{/other_user}", "gists_url": "https://api.github.com/users/fhightower/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhightower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhightower/subscriptions", "organizations_url": "https://api.github.com/users/fhightower/orgs", "repos_url": "https://api.github.com/users/fhightower/repos", "events_url": "https://api.github.com/users/fhightower/events{/privacy}", "received_events_url": "https://api.github.com/users/fhightower/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-08T20:56:20Z", "updated_at": "2020-02-06T07:49:14Z", "closed_at": "2020-02-06T07:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! According to the documentation (https://pymisp.readthedocs.io/modules.html#pymisp.PyMISP.search), adding the `deleted` keyword argument to the `PyMISP.search` function \"also return[s] the deleted attributes\".\r\n\r\nWhen I read this, I expected the `deleted` keyword (as shown in the example code below) to return *both* deleted *and also* existing (non-deleted) attributes\r\n\r\n```python\r\nfrom pymisp import PyMISP\r\nmisp = PyMISP(url, key, False, 'json')\r\n\r\nresponse = misp.search(\r\n    last='365d',\r\n    deleted=True\r\n)\r\n```\r\n\r\nWhen I run a search like this ^, however, it does not return existing attributes; only the deleted ones.\r\n\r\nSo, when the documentation describes the deleted keyword as one which \"also return[s] the deleted attributes\", does the \"also return\" mean that I should expect the existing attributes and also the deleted ones **or** does the \"also return\" mean that a query with the `deleted` keyword returns event data and also the deleted attributes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/492", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/492/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/492/events", "html_url": "https://github.com/MISP/PyMISP/issues/492", "id": 519993797, "node_id": "MDU6SXNzdWU1MTk5OTM3OTc=", "number": 492, "title": "[Tests] Add test for DB schema diagnostic", "user": {"login": "mokaddem", "id": 6977223, "node_id": "MDQ6VXNlcjY5NzcyMjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6977223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mokaddem", "html_url": "https://github.com/mokaddem", "followers_url": "https://api.github.com/users/mokaddem/followers", "following_url": "https://api.github.com/users/mokaddem/following{/other_user}", "gists_url": "https://api.github.com/users/mokaddem/gists{/gist_id}", "starred_url": "https://api.github.com/users/mokaddem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mokaddem/subscriptions", "organizations_url": "https://api.github.com/users/mokaddem/orgs", "repos_url": "https://api.github.com/users/mokaddem/repos", "events_url": "https://api.github.com/users/mokaddem/events{/privacy}", "received_events_url": "https://api.github.com/users/mokaddem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-08T12:40:43Z", "updated_at": "2019-11-11T13:28:42Z", "closed_at": "2019-11-11T13:28:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PR #5002 introduce a Database schema diagnostic.\r\nI could be great to have a unit test for this one during the installation process to spot inconsistency between the expected schema and the actual one.\r\nThe endpoint is \r\n```\r\nGET\r\n/servers/dbSchemaDiagnostic\r\nContent-Type: application/json\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/484", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/484/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/484/events", "html_url": "https://github.com/MISP/PyMISP/issues/484", "id": 510928138, "node_id": "MDU6SXNzdWU1MTA5MjgxMzg=", "number": 484, "title": "Syntax Error missing quotations around url and key values in keys.py", "user": {"login": "fnuq", "id": 56896623, "node_id": "MDQ6VXNlcjU2ODk2NjIz", "avatar_url": "https://avatars2.githubusercontent.com/u/56896623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fnuq", "html_url": "https://github.com/fnuq", "followers_url": "https://api.github.com/users/fnuq/followers", "following_url": "https://api.github.com/users/fnuq/following{/other_user}", "gists_url": "https://api.github.com/users/fnuq/gists{/gist_id}", "starred_url": "https://api.github.com/users/fnuq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fnuq/subscriptions", "organizations_url": "https://api.github.com/users/fnuq/orgs", "repos_url": "https://api.github.com/users/fnuq/repos", "events_url": "https://api.github.com/users/fnuq/events{/privacy}", "received_events_url": "https://api.github.com/users/fnuq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-10-22T21:28:49Z", "updated_at": "2019-11-03T07:38:39Z", "closed_at": "2019-11-03T07:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When keys.py is created, there are no quotations around the strings in the resulting file:\r\n\r\n/var/www/MISP/PyMISP/tests/keys.py\r\n\r\n```\r\nurl = https://localhost:8443\r\nkey = xxxxxxxxx\r\n```\r\n\r\nWhen this is imported into other files, it creates a syntax error:\r\n\r\nfatal: destination path '/var/www/MISP/PyMISP/tests/viper-test-files' already exists and is not an empty directory.\r\nTraceback (most recent call last):\r\n  File \"tests/testlive_comprehensive.py\", line 39, in <module>\r\n    from keys import url, key\r\n  File \"/var/www/MISP/PyMISP/tests/keys.py\", line 1\r\n    url = https://localhost:8443\r\n               ^\r\nSyntaxError: invalid syntax\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/483", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/483/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/483/events", "html_url": "https://github.com/MISP/PyMISP/issues/483", "id": 510526297, "node_id": "MDU6SXNzdWU1MTA1MjYyOTc=", "number": 483, "title": "Test request: Tagging", "user": {"login": "iglocska", "id": 3668672, "node_id": "MDQ6VXNlcjM2Njg2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3668672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iglocska", "html_url": "https://github.com/iglocska", "followers_url": "https://api.github.com/users/iglocska/followers", "following_url": "https://api.github.com/users/iglocska/following{/other_user}", "gists_url": "https://api.github.com/users/iglocska/gists{/gist_id}", "starred_url": "https://api.github.com/users/iglocska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iglocska/subscriptions", "organizations_url": "https://api.github.com/users/iglocska/orgs", "repos_url": "https://api.github.com/users/iglocska/repos", "events_url": "https://api.github.com/users/iglocska/events{/privacy}", "received_events_url": "https://api.github.com/users/iglocska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-10-22T09:14:02Z", "updated_at": "2019-11-11T15:39:36Z", "closed_at": "2019-11-11T15:39:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Could we get a test on the org/user restriction on tags to ensure that only users that can set a certain tag are in fact allowed to do it?\r\n\r\nevent add/event edit are good candidates to run the tests against", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/482", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/482/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/482/events", "html_url": "https://github.com/MISP/PyMISP/issues/482", "id": 508963458, "node_id": "MDU6SXNzdWU1MDg5NjM0NTg=", "number": 482, "title": "Conflict between use of os.path.join and pathlib.Path", "user": {"login": "tomking2", "id": 15731689, "node_id": "MDQ6VXNlcjE1NzMxNjg5", "avatar_url": "https://avatars1.githubusercontent.com/u/15731689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomking2", "html_url": "https://github.com/tomking2", "followers_url": "https://api.github.com/users/tomking2/followers", "following_url": "https://api.github.com/users/tomking2/following{/other_user}", "gists_url": "https://api.github.com/users/tomking2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomking2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomking2/subscriptions", "organizations_url": "https://api.github.com/users/tomking2/orgs", "repos_url": "https://api.github.com/users/tomking2/repos", "events_url": "https://api.github.com/users/tomking2/events{/privacy}", "received_events_url": "https://api.github.com/users/tomking2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-18T09:29:45Z", "updated_at": "2019-10-18T09:56:35Z", "closed_at": "2019-10-18T09:56:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Discovered that when using the legacy PyMISP (api.py), there is conflicting information between the use of `os.path.join` and `pathlib.Path`.\r\n\r\nhttps://github.com/MISP/PyMISP/blob/master/pymisp/mispevent.py#L430=L433\r\n\r\nThe above code will only use `pathlib.Path` if the python version is >= 3,6 (thus for ExpandedPyMISP only)\r\n\r\nHowever the variable in abstract.py is always `pathlib.Path` if the python version is >= 3,0\r\nhttps://github.com/MISP/PyMISP/blob/master/pymisp/abstract.py\r\n\r\nThis causes a crash when attempting to join the path.\r\n\r\nAny ideas what the best approach for a fix is? Given that api.py is expiring real soon, not worth considering any bigger changes. Would altering abstract.py to check for python version >= 3,6 do the job for now without any repercussions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/481", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/481/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/481/events", "html_url": "https://github.com/MISP/PyMISP/issues/481", "id": 508520870, "node_id": "MDU6SXNzdWU1MDg1MjA4NzA=", "number": 481, "title": "PyMISP / MISP version mismatches", "user": {"login": "carnak", "id": 1611753, "node_id": "MDQ6VXNlcjE2MTE3NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1611753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carnak", "html_url": "https://github.com/carnak", "followers_url": "https://api.github.com/users/carnak/followers", "following_url": "https://api.github.com/users/carnak/following{/other_user}", "gists_url": "https://api.github.com/users/carnak/gists{/gist_id}", "starred_url": "https://api.github.com/users/carnak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carnak/subscriptions", "organizations_url": "https://api.github.com/users/carnak/orgs", "repos_url": "https://api.github.com/users/carnak/repos", "events_url": "https://api.github.com/users/carnak/events{/privacy}", "received_events_url": "https://api.github.com/users/carnak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-17T14:36:14Z", "updated_at": "2019-10-18T08:24:47Z", "closed_at": "2019-10-18T08:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello - I first want to thank those who created, and continue to enhance MISP, as it is an incredibly enabling platform that all in our industry should be using / supporting.\r\n\r\nBack to subject issue - I have updated our MISP instance to v2.4.117, but it seems the latest version of PyMISP available on github is version 2.4.114, as of today.  My issue with this scenario is that my PyMISP scripts constantly warn like so:\r\n\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\n\r\nYet when I try to update PyMISP, pip responds with:\r\n\r\n$ pip3 install --trusted-host pypi.org --trusted-host files.pythonhosted.org --upgrade pymisp\r\nRequirement already up-to-date: pymisp in /usr/lib/python3.6/site-packages (2.4.114)\r\n\r\nI have python scripts that echo out information of interest while running, but it is difficult to find the results I am looking for, as they are intermixed with all of these warnings, e.g.:\r\n\r\nadded attribute from ego_node to common_attributes - zz.bdstatic.com for node: 34971\r\nadded attribute from ego_node to common_attributes - zz.connextra.com for node: 34971\r\nadded attribute from ego_node to common_attributes - zz44smpc.micpn.com for node: 34971\r\nadded attribute from ego_node to common_attributes - zzmibqlk.github.stackblitz.io for node: 34971\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\nadded edge: krakow.pl for network: n/a\r\nadded common_attribute edge krakow.pl for node: 19571\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\nadded edge: 1fichier.com for network: n/a\r\nadded common_attribute edge 1fichier.com for node: 220\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\nadded edge: mybestdc.com for network: n/a\r\nadded common_attribute edge mybestdc.com for node: 34622\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\nfound domain|ip: captainblack.pro|178.159.36.91\r\nWARNING [aping.py:81 - __init__() ] The version of PyMISP recommended by the MI)SP instance (2.4.117) is newer than the one you're using now (2.4.114). Please upgrade PyM\r\nISP.\r\n\r\nHope all of that makes sense, and this is not a big problem, just a minor irritant.\r\n\r\np.s. - Is the MISP team coming to the states this year, or maybe next for training events?  I would love to attend your MISP training events, but don't want to travel far.\r\n\r\nThanks!!!\r\nAlan\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/479", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/479/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/479/events", "html_url": "https://github.com/MISP/PyMISP/issues/479", "id": 507130780, "node_id": "MDU6SXNzdWU1MDcxMzA3ODA=", "number": 479, "title": "MITRE Mapping via API", "user": {"login": "mohlcyber", "id": 25227268, "node_id": "MDQ6VXNlcjI1MjI3MjY4", "avatar_url": "https://avatars2.githubusercontent.com/u/25227268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohlcyber", "html_url": "https://github.com/mohlcyber", "followers_url": "https://api.github.com/users/mohlcyber/followers", "following_url": "https://api.github.com/users/mohlcyber/following{/other_user}", "gists_url": "https://api.github.com/users/mohlcyber/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohlcyber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohlcyber/subscriptions", "organizations_url": "https://api.github.com/users/mohlcyber/orgs", "repos_url": "https://api.github.com/users/mohlcyber/repos", "events_url": "https://api.github.com/users/mohlcyber/events{/privacy}", "received_events_url": "https://api.github.com/users/mohlcyber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T09:45:40Z", "updated_at": "2019-10-16T12:14:47Z", "closed_at": "2019-10-16T12:14:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\nquick question. I wrote an integration between the McAfee Advanced Threat Defense that pushed threat intel to MISP (https://github.com/mohlcyber/OpenDXL-ATD-MISP). Just updated the integration to use the newest PyMISP libraries.\r\nAs part of the analysis result I am also receiving MITRE techniques. I would like to use the MITRE information i receive from McAfee ATD also in MISP. Is there any API expose to add the MITRE techniques to a MISP event? I couldn't find anything in the libs as well as in the examples. I would like to highlight the findings here:\r\n \r\n<img width=\"1253\" alt=\"Screenshot 2019-10-15 at 11 39 53\" src=\"https://user-images.githubusercontent.com/25227268/66820204-8633d500-ef40-11e9-86ba-425949f3ac1e.png\">\r\n\r\nAny ideas? Many thanks and all the best,\r\nMartin\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/478", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/478/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/478/events", "html_url": "https://github.com/MISP/PyMISP/issues/478", "id": 507098079, "node_id": "MDU6SXNzdWU1MDcwOTgwNzk=", "number": 478, "title": "Feature: loading the MISP User connecting to the MISP instance on instantiation", "user": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 92856196, "node_id": "MDU6TGFiZWw5Mjg1NjE5Ng==", "url": "https://api.github.com/repos/MISP/PyMISP/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-15T08:47:35Z", "updated_at": "2020-01-30T12:58:09Z", "closed_at": "2020-01-30T12:58:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "That would allow the library to automatically guess the user profile to update for example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/477", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/477/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/477/events", "html_url": "https://github.com/MISP/PyMISP/issues/477", "id": 506825085, "node_id": "MDU6SXNzdWU1MDY4MjUwODU=", "number": 477, "title": "Help creating, using a custom MISPObject via PyMISP", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-10-14T19:08:05Z", "updated_at": "2019-10-18T13:04:31Z", "closed_at": "2019-10-18T12:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where can I find documentation to help me write a PyMISP script to define and then use a custom MISP Object to ingest data from a file. Want to drive everything in a script (i.e. is that possible without doing any WebUI clicks?)...\r\n\r\n1. Create a custom MISP Object via PyMISP\r\n1. Instantiate that `MISPObject` template by name\r\n1. Populate that template `MISPObject`\r\n1. Add that `MISPObject` to an event\r\n\r\n-- o --\r\n\r\nFollowup question: If we create a template in the WebUI and can see it on `https://localhost/templates/view/8` for example, other than populating an existing Event in the WebUI with that template, where else can it be used, e.g. can it be added locally to the MISP-known template object list, can it be utilized anywhere else on the WebUI (e.g. add feed), how about from PyMISP?\r\n\r\nTHANKS!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/468", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/468/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/468/events", "html_url": "https://github.com/MISP/PyMISP/issues/468", "id": 501327999, "node_id": "MDU6SXNzdWU1MDEzMjc5OTk=", "number": 468, "title": "Huge memory usage by MISP objects", "user": {"login": "mback2k", "id": 231943, "node_id": "MDQ6VXNlcjIzMTk0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/231943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mback2k", "html_url": "https://github.com/mback2k", "followers_url": "https://api.github.com/users/mback2k/followers", "following_url": "https://api.github.com/users/mback2k/following{/other_user}", "gists_url": "https://api.github.com/users/mback2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/mback2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mback2k/subscriptions", "organizations_url": "https://api.github.com/users/mback2k/orgs", "repos_url": "https://api.github.com/users/mback2k/repos", "events_url": "https://api.github.com/users/mback2k/events{/privacy}", "received_events_url": "https://api.github.com/users/mback2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-02T07:40:15Z", "updated_at": "2019-10-17T09:03:49Z", "closed_at": "2019-10-10T12:15:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nwe are running into issues, because creating a lot of MISPObjects (and other similar types) requires **a lot** of memory at the moment. We had an example here with roughly 60 GB of Python memory usage in our toolchain.\r\n\r\nThis is caused by the fact that each instance of MISPObject loads the JSON template files for itself instead of using a global cache (based on filename and hash maybe):\r\nhttps://github.com/MISP/PyMISP/blob/de6a64ba45b56cef1a233df306da411c49801c03/pymisp/mispevent.py#L1206-L1218\r\n\r\nI can try to implement such caching, but would you be interested in that?\r\n\r\nBest regards,\r\nMarc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/462", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/462/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/462/events", "html_url": "https://github.com/MISP/PyMISP/issues/462", "id": 498195923, "node_id": "MDU6SXNzdWU0OTgxOTU5MjM=", "number": 462, "title": "Adding custom object to event", "user": {"login": "thomasb454", "id": 3227508, "node_id": "MDQ6VXNlcjMyMjc1MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3227508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasb454", "html_url": "https://github.com/thomasb454", "followers_url": "https://api.github.com/users/thomasb454/followers", "following_url": "https://api.github.com/users/thomasb454/following{/other_user}", "gists_url": "https://api.github.com/users/thomasb454/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasb454/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasb454/subscriptions", "organizations_url": "https://api.github.com/users/thomasb454/orgs", "repos_url": "https://api.github.com/users/thomasb454/repos", "events_url": "https://api.github.com/users/thomasb454/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasb454/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2019-09-25T10:29:34Z", "updated_at": "2020-01-30T12:59:28Z", "closed_at": "2020-01-30T12:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm having issues when trying to update an event with a custom object.\r\n\r\nPyMISP version: 2.4.114\r\nPython version: 3.7\r\n\r\nThe object template is present on the web server (I can manually add the object to an event), however when using ExpandedPyMISP it returns a 403.\r\n`ERROR [aping.py:2039 - _check_response() ] Something went wrong (403): {'name': 'Could not add object', 'message': 'Could not add object', 'url': '/objects/add/9/', 'errors': 'No valid template found to edit the object.'}`\r\n\r\n```\r\nfrom pymisp import ExpandedPyMISP\r\nfrom pymisp import MISPObject\r\n\r\nmisp = ExpandedPyMISP('<url>', '<key>', False)\r\n\r\nevent = misp.search(uuid='5d89ea9a-0778-4a90-a4d0-05a7ac1002c7')\r\n\r\nobj = MISPObject(name='mopr-report', misp_objects_path_custom='mopr')\r\n\r\nobj.add_attribute('score', value=0.02)\r\nobj.add_attribute('malicious', value=False)\r\nobj.add_attribute('benign', value=True)\r\n\r\nmisp.add_object('5d89ea9a-0778-4a90-a4d0-05a7ac1002c7', misp_object=obj)\r\n ```\r\n\r\nAny advice is appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/459", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/459/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/459/events", "html_url": "https://github.com/MISP/PyMISP/issues/459", "id": 496836985, "node_id": "MDU6SXNzdWU0OTY4MzY5ODU=", "number": 459, "title": "inconsistent returns from ExpandedPyMISP.add_attribute", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-22T21:44:57Z", "updated_at": "2019-09-23T14:37:41Z", "closed_at": "2019-09-23T14:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to have one consistent format returned from `ExpandedPyMISP.add_attribute`? It seems to vary depending on whether the `attribute` argument is a `list` of not, and based on the mix of successes and failures in the case of a `list`.\r\n\r\nI've observed the following 3 cases:\r\n\r\n1. when only including one attribute for `add_attribute`:\r\n```\r\n  {\r\n    'errors':\r\n    (\r\n      403,\r\n      {\r\n       \t'name': 'Could not add Attribute',\r\n        'message': 'Could not add Attribute',\r\n        'url': '/attributes/add',\r\n        'errors':\r\n        {\r\n          'value':\r\n          [\r\n            'A similar attribute already exists for this event.'\r\n          ]\r\n\t}\r\n      }\r\n    )\r\n  }\r\n```\r\n\r\n2. with multiple attrs, and all failures\r\n```\r\n  {\r\n    'errors':\r\n    (\r\n      403,\r\n      {\r\n        'name': 'Could not add Attribute',\r\n        'message': 'Could not add Attribute',\r\n        'url': '/attributes/add',\r\n\t'errors':\r\n\t{\r\n          'attribute_0':\r\n          {\r\n            'value':\r\n            [\r\n              'A similar attribute already exists for this event.'\r\n            ]\r\n          },\r\n\t  ...\r\n        }\r\n      }\r\n    )\r\n  }\r\n```\r\n\r\n3. with multiple attrs, some succeed, others fail\r\n```\r\n  {\r\n    'Attribute:\r\n    {\r\n      'id': ...,\r\n      ...\r\n    },\r\n    'AttributeTag: [],\r\n    'errors':\r\n    {\r\n      'attribute_0':\r\n      {\r\n       \t'value':\r\n\t[\r\n          'A similar attribute already exists for this event.']\r\n\t]\r\n      },\r\n      ...\r\n    }\r\n  }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/457", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/457/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/457/events", "html_url": "https://github.com/MISP/PyMISP/issues/457", "id": 496560233, "node_id": "MDU6SXNzdWU0OTY1NjAyMzM=", "number": 457, "title": "ExpandedPyMISP.add_attribute(event, attributeList) question", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-20T21:50:16Z", "updated_at": "2019-09-23T14:36:41Z", "closed_at": "2019-09-23T14:32:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "2.4.114 using `ExpandedPyMISP`\r\n\r\nI am trying to pass a list of `MISPAttribute` to `ExpandedPyMISP.add_attribute` to add to an existing event. The return is simply `{'Attribute': []}` and no attributes in the list have been added to that event.\r\n\r\nMy goal was to benchmark adding a large number of new attributes to an existing event comparing:\r\n1. pulling the the event into memory and adding the attributes to that event in memory with `mispEvent.add_attribute` and then doing `misp.update_event`\r\n\r\nvs.\r\n\r\n2. constructing the list of attributes, and just doing `misp.add_attribute`\r\n\r\nCan you help me see what I am doing incorrectly please. `misp.add_attribute` reports nothing added and that's true when looking in the WebUI. (for this test, the attr list has only one item)\r\n\r\n```\r\n(Pdb) print(mispAttrList)\r\n[<MISPAttribute(type=('url',), value=('https//misp.load.test.com/1',))]\r\n(Pdb) print(addedMispEvent['Event']['id'])\r\n137062\r\n(Pdb) list 127,130\r\n127  \t        r = misp.add_attribute(\r\n128  \t            event     = addedMispEvent['Event']['id'],\r\n129  \t            attribute = mispAttrList)\r\n130 B->\t        if isinstance(r, dict) and 'errors' in r:\r\n(Pdb) print(r)\r\n{'Attribute': []}\r\n(Pdb)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/454", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/454/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/454/events", "html_url": "https://github.com/MISP/PyMISP/issues/454", "id": 493189841, "node_id": "MDU6SXNzdWU0OTMxODk4NDE=", "number": 454, "title": "certificate verify failed: self signed certificate (_sslc:1076)", "user": {"login": "lemmou", "id": 49797604, "node_id": "MDQ6VXNlcjQ5Nzk3NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/49797604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemmou", "html_url": "https://github.com/lemmou", "followers_url": "https://api.github.com/users/lemmou/followers", "following_url": "https://api.github.com/users/lemmou/following{/other_user}", "gists_url": "https://api.github.com/users/lemmou/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemmou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemmou/subscriptions", "organizations_url": "https://api.github.com/users/lemmou/orgs", "repos_url": "https://api.github.com/users/lemmou/repos", "events_url": "https://api.github.com/users/lemmou/events{/privacy}", "received_events_url": "https://api.github.com/users/lemmou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-13T08:03:21Z", "updated_at": "2019-09-13T08:12:33Z", "closed_at": "2019-09-13T08:12:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed manually the misp using the documentation on the ubuntu server.\r\nI used my scripts that work correctly using the misp vm, but using the new installed misp, i have the following error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 603, in urlopen\r\n    chunked=chunked)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 344, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 843, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\connection.py\", line 370, in connect\r\n    ssl_context=context)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 368, in ssl_wrap_socket\r\n    return context.wrap_socket(sock)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate (_ssl.c:1076)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 641, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\urllib3\\util\\retry.py\", line 399, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='192.168.56.102', port=443): Max retries exceeded with url: /servers/getPyMISPVersion.json (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate (_ssl.c:1076)')))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pymisp\\aping.py\", line 72, in __init__\r\n    response = self.recommended_pymisp_version\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pymisp\\aping.py\", line 122, in recommended_pymisp_version\r\n    response = self._prepare_request('GET', 'servers/getPyMISPVersion.json')\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pymisp\\aping.py\", line 2102, in _prepare_request\r\n    return s.send(prepped, **settings)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 514, in send\r\n    raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='192.168.56.102', port=443): Max retries exceeded with url: /servers/getPyMISPVersion.json (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate (_ssl.c:1076)')))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ylemmou\\Desktop\\Search.py\", line 5, in <module>\r\n    misp = ExpandedPyMISP(misp_url, misp_key, misp_verifycert)\r\n  File \"C:\\Users\\ylemmou\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\pymisp\\aping.py\", line 87, in __init__\r\n    raise PyMISPError(f'Unable to connect to MISP ({self.root_url}). Please make sure the API key and the URL are correct (http/https is required): {e}')\r\npymisp.exceptions.PyMISPError: Unable to connect to MISP (https://192.168.56.102/). Please make sure the API key and the URL are correct (http/https is required): HTTPSConnectionPool(host='192.168.56.102', port=443): Max retries exceeded with url: /servers/getPyMISPVersion.json (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate (_ssl.c:1076)')))`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/453", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/453/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/453/events", "html_url": "https://github.com/MISP/PyMISP/issues/453", "id": 492817936, "node_id": "MDU6SXNzdWU0OTI4MTc5MzY=", "number": 453, "title": "Add action=default to deprecation decorator", "user": {"login": "baderj", "id": 5196024, "node_id": "MDQ6VXNlcjUxOTYwMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5196024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baderj", "html_url": "https://github.com/baderj", "followers_url": "https://api.github.com/users/baderj/followers", "following_url": "https://api.github.com/users/baderj/following{/other_user}", "gists_url": "https://api.github.com/users/baderj/gists{/gist_id}", "starred_url": "https://api.github.com/users/baderj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baderj/subscriptions", "organizations_url": "https://api.github.com/users/baderj/orgs", "repos_url": "https://api.github.com/users/baderj/repos", "events_url": "https://api.github.com/users/baderj/events{/privacy}", "received_events_url": "https://api.github.com/users/baderj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-09-12T13:48:06Z", "updated_at": "2019-09-13T12:33:19Z", "closed_at": "2019-09-13T12:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "``PyMISP`` was deprecated in favor of ``ExpandedPyMISP``. Unfortunately, many LTS releases are not yet on Python 3.6, which is required by ``ExpandedPyMISP``. So changing to the new API is not always possible.\r\n\r\nThe deprecation warnings are emitted by a decorator in module ``deprecated``, which has a strange default setting of always emitting deprecation warnings, regardless of the decision of Python not to do so by default, and even worse, by turning off all filters that are set on warnings.\r\n\r\nSo even running PyMISP scripts with ``python3 -W ignore::DeprecationWarning`` will still show the warnings. This will fill up logs with messages that a user might already be aware of, but can't change at the moment because he needs to update his or her server to use ``ExpandedPyMISP``.\r\n\r\nI recommend to use the much more established ``deprecation`` module in favor of ``deprecated``, or to always set the ``action`` Parameter to ``default``. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/451", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/451/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/451/events", "html_url": "https://github.com/MISP/PyMISP/issues/451", "id": 492024031, "node_id": "MDU6SXNzdWU0OTIwMjQwMzE=", "number": 451, "title": "Support for Client Certificates ", "user": {"login": "camAtGitHub", "id": 2858315, "node_id": "MDQ6VXNlcjI4NTgzMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2858315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camAtGitHub", "html_url": "https://github.com/camAtGitHub", "followers_url": "https://api.github.com/users/camAtGitHub/followers", "following_url": "https://api.github.com/users/camAtGitHub/following{/other_user}", "gists_url": "https://api.github.com/users/camAtGitHub/gists{/gist_id}", "starred_url": "https://api.github.com/users/camAtGitHub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camAtGitHub/subscriptions", "organizations_url": "https://api.github.com/users/camAtGitHub/orgs", "repos_url": "https://api.github.com/users/camAtGitHub/repos", "events_url": "https://api.github.com/users/camAtGitHub/events{/privacy}", "received_events_url": "https://api.github.com/users/camAtGitHub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-11T05:26:18Z", "updated_at": "2019-09-17T00:07:43Z", "closed_at": "2019-09-17T00:07:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at this past issue: \"https://github.com/MISP/PyMISP/issues/39\" \r\nA user was told (Client certificates) \"It should work out-of-the-box since August 2016\"\r\n\r\nExcept the feature is un-documented and requires modification of the core library code from what I can determine. \r\n\r\nOut of the box in my opinion would be to set 'misp_cert' and 'misp_cert_key' in the keys.py example file.\r\n\r\nAny guidance on how to use client certificates would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/450", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/450/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/450/events", "html_url": "https://github.com/MISP/PyMISP/issues/450", "id": 491325062, "node_id": "MDU6SXNzdWU0OTEzMjUwNjI=", "number": 450, "title": "return the id of an event", "user": {"login": "lemmou", "id": 49797604, "node_id": "MDQ6VXNlcjQ5Nzk3NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/49797604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemmou", "html_url": "https://github.com/lemmou", "followers_url": "https://api.github.com/users/lemmou/followers", "following_url": "https://api.github.com/users/lemmou/following{/other_user}", "gists_url": "https://api.github.com/users/lemmou/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemmou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemmou/subscriptions", "organizations_url": "https://api.github.com/users/lemmou/orgs", "repos_url": "https://api.github.com/users/lemmou/repos", "events_url": "https://api.github.com/users/lemmou/events{/privacy}", "received_events_url": "https://api.github.com/users/lemmou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-09T21:02:35Z", "updated_at": "2019-09-10T11:40:01Z", "closed_at": "2019-09-10T08:25:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any solution to return the id of an event (MISPEvent) ?\r\n\r\nI need get the id of the current created event.\r\n\r\nThx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/448", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/448/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/448/events", "html_url": "https://github.com/MISP/PyMISP/issues/448", "id": 489408898, "node_id": "MDU6SXNzdWU0ODk0MDg4OTg=", "number": 448, "title": "Error when fetching attributes inside an object", "user": {"login": "joydragon", "id": 4154219, "node_id": "MDQ6VXNlcjQxNTQyMTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4154219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joydragon", "html_url": "https://github.com/joydragon", "followers_url": "https://api.github.com/users/joydragon/followers", "following_url": "https://api.github.com/users/joydragon/following{/other_user}", "gists_url": "https://api.github.com/users/joydragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/joydragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joydragon/subscriptions", "organizations_url": "https://api.github.com/users/joydragon/orgs", "repos_url": "https://api.github.com/users/joydragon/repos", "events_url": "https://api.github.com/users/joydragon/events{/privacy}", "received_events_url": "https://api.github.com/users/joydragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-04T21:32:04Z", "updated_at": "2019-09-04T21:53:59Z", "closed_at": "2019-09-04T21:53:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm having trouble fetching attributes when they are added as objects on MISP. I'm trying to get all the attributes that were added on the last X days.\r\nThere are a lot of them missing, and then I realize that the ones that are on objects are missing, mainly the hashes of the uploaded files.\r\nIs that the intended way?\r\n\r\nSteps to reproduce:\r\n- Create an object (domain-ip?) with some field in it\r\n- Search for the attribute with the example scritp last.py with -l 1d\r\n- The attribute added is not there\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/447", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/447/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/447/events", "html_url": "https://github.com/MISP/PyMISP/issues/447", "id": 488826977, "node_id": "MDU6SXNzdWU0ODg4MjY5Nzc=", "number": 447, "title": "Upload files", "user": {"login": "lemmou", "id": 49797604, "node_id": "MDQ6VXNlcjQ5Nzk3NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/49797604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemmou", "html_url": "https://github.com/lemmou", "followers_url": "https://api.github.com/users/lemmou/followers", "following_url": "https://api.github.com/users/lemmou/following{/other_user}", "gists_url": "https://api.github.com/users/lemmou/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemmou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemmou/subscriptions", "organizations_url": "https://api.github.com/users/lemmou/orgs", "repos_url": "https://api.github.com/users/lemmou/repos", "events_url": "https://api.github.com/users/lemmou/events{/privacy}", "received_events_url": "https://api.github.com/users/lemmou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-03T21:11:14Z", "updated_at": "2019-09-05T09:13:08Z", "closed_at": "2019-09-04T12:00:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to upload some files, ransom notes files or some reports to my MISP. I found that i can upload files only by the example upload.py. The problem that all loaded files has a label malware sample despite that there are not malware sample.\r\nAny solution to upload normapl file using the PyMISP ?\r\n\r\nThanx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/446", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/446/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/446/events", "html_url": "https://github.com/MISP/PyMISP/issues/446", "id": 487815529, "node_id": "MDU6SXNzdWU0ODc4MTU1Mjk=", "number": 446, "title": "adding a tag to multiple attributes", "user": {"login": "dac26", "id": 51828511, "node_id": "MDQ6VXNlcjUxODI4NTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/51828511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dac26", "html_url": "https://github.com/dac26", "followers_url": "https://api.github.com/users/dac26/followers", "following_url": "https://api.github.com/users/dac26/following{/other_user}", "gists_url": "https://api.github.com/users/dac26/gists{/gist_id}", "starred_url": "https://api.github.com/users/dac26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dac26/subscriptions", "organizations_url": "https://api.github.com/users/dac26/orgs", "repos_url": "https://api.github.com/users/dac26/repos", "events_url": "https://api.github.com/users/dac26/events{/privacy}", "received_events_url": "https://api.github.com/users/dac26/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-08-31T22:02:55Z", "updated_at": "2020-01-16T11:25:06Z", "closed_at": "2020-01-16T11:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am a noob and I was wondering if it is possible to add a tag to multiple attributes when these are being created and added to an event, instead of waiting for them to be created and use their uuid, because if they are a lot I don't want to start calling a lot the function:\r\n\r\ndef tag(self, uuid, tag):\r\n        \"\"\"Tag an event or an attribute\"\"\"\r\n        if not self._valid_uuid(uuid):\r\n            raise PyMISPError('Invalid UUID')\r\n        url = urljoin(self.root_url, 'tags/attachTagToObject')\r\n        to_post = {'uuid': uuid, 'tag': tag}\r\n        response = self._prepare_request('POST', url, json.dumps(to_post))\r\n        return self._check_response(response)\r\n\r\nI was wondering if anyone knows if it is possible to add a tag like it was a comment, because that's how I am identifying currently the attributes like so:\r\n\r\n misp.add_hashes_payload_delivery(parEvent, filename=None, md5=md5, sha1=sha1, sha256=sha256, ssdeep=None,\r\n                                     **comment=\"VirusTotal\"**, distribution=None)\r\n\r\n    for k, v in engineFindings.items():\r\n        name = 'Engine: ' + k + ' - Result: ' + str(v)\r\n        event = misp.add_engine_result(parEvent, name=name, **comment=\"VirusTotal\"**, distribution=None)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/443", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/443/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/443/events", "html_url": "https://github.com/MISP/PyMISP/issues/443", "id": 485750095, "node_id": "MDU6SXNzdWU0ODU3NTAwOTU=", "number": 443, "title": "search_logs not working", "user": {"login": "carnak", "id": 1611753, "node_id": "MDQ6VXNlcjE2MTE3NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1611753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carnak", "html_url": "https://github.com/carnak", "followers_url": "https://api.github.com/users/carnak/followers", "following_url": "https://api.github.com/users/carnak/following{/other_user}", "gists_url": "https://api.github.com/users/carnak/gists{/gist_id}", "starred_url": "https://api.github.com/users/carnak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carnak/subscriptions", "organizations_url": "https://api.github.com/users/carnak/orgs", "repos_url": "https://api.github.com/users/carnak/repos", "events_url": "https://api.github.com/users/carnak/events{/privacy}", "received_events_url": "https://api.github.com/users/carnak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-08-27T11:22:35Z", "updated_at": "2019-08-28T14:51:45Z", "closed_at": "2019-08-28T14:51:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently installed version\u2026 v2.4.113 (3b555ec2c78e50bce4b7006bbe0c4ac4cdaeb48f) \r\n\r\nWhen invoking the ExpandedPyMISP method \"search_logs\", system console returns following error:\r\n\r\nMISPServerError: Error code 500:\r\n{\"name\":\"An Internal Error Has Occurred.\",\"message\":\"An Internal Error Has Occurred.\",\"url\":\"\\/admin\\/logs\\/index\"}\r\n\r\n/var/www/MISP/app/tmp/logs/error.log shows following:\r\n\r\n2019-08-27 07:15:32 Error: [PDOException] SQLSTATE[42S22]: Column not found: 1054 Unknown column 'Log.ip' in 'field list'\r\nRequest URL: /admin/logs/index\r\nStack Trace:\r\n#0 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/DboSource.php(502): PDOStatement->execute(Array)\r\n#1 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/DboSource.php(468): DboSource->_execute('SELECT `Log`.`i...', Array)\r\n#2 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/DboSource.php(715): DboSource->execute('SELECT `Log`.`i...', Array, Array)\r\n#3 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Datasource/DboSource.php(1226): DboSource->fetchAll('SELECT `Log`.`i...', Array)\r\n#4 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Model.php(3040): DboSource->read(Object(Log), Array)\r\n#5 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Model/Model.php(3012): Model->_readDataSource('all', Array)\r\n#6 /disk2/var/www/MISP/app/Controller/LogsController.php(119): Model->find('all', Array)\r\n#7 [internal function]: LogsController->admin_index()\r\n#8 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Controller/Controller.php(499): ReflectionMethod->invokeArgs(Object(LogsController), Array)\r\n#9 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Routing/Dispatcher.php(193): Controller->invokeAction(Object(CakeRequest))\r\n#10 /disk2/var/www/MISP/app/Lib/cakephp/lib/Cake/Routing/Dispatcher.php(167): Dispatcher->_invoke(Object(LogsController), Object(CakeRequest))\r\n#11 /disk2/var/www/MISP/app/webroot/index.php(92): Dispatcher->dispatch(Object(CakeRequest), Object(CakeResponse))\r\n#12 {main}\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/441", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/441/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/441/events", "html_url": "https://github.com/MISP/PyMISP/issues/441", "id": 483660741, "node_id": "MDU6SXNzdWU0ODM2NjA3NDE=", "number": 441, "title": "Pymisp timing out... describetypes.json", "user": {"login": "mathurin68", "id": 5932961, "node_id": "MDQ6VXNlcjU5MzI5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5932961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathurin68", "html_url": "https://github.com/mathurin68", "followers_url": "https://api.github.com/users/mathurin68/followers", "following_url": "https://api.github.com/users/mathurin68/following{/other_user}", "gists_url": "https://api.github.com/users/mathurin68/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathurin68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathurin68/subscriptions", "organizations_url": "https://api.github.com/users/mathurin68/orgs", "repos_url": "https://api.github.com/users/mathurin68/repos", "events_url": "https://api.github.com/users/mathurin68/events{/privacy}", "received_events_url": "https://api.github.com/users/mathurin68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-21T21:25:58Z", "updated_at": "2019-08-22T13:06:52Z", "closed_at": "2019-08-22T13:06:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pymisp my connections to the misp instance seems to work but hangs with the message below...\r\n\r\nI'm using:\r\n```\r\n python -c 'import pymisp; print(pymisp.__version__)'\r\n2.4.112\r\nPython 3.6.8\r\n```\r\nMISP version Currently installed version\u2026 v2.4.113\r\n\r\n... it seems to time out with \r\n```\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): misp.agency.net:443\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): misp.agency.net:443\r\nDEBUG:urllib3.connectionpool:https://misp.agency.net:443 \"GET /attributes/describeTypes.json HTTP/1.1\" 200 18754\r\nDEBUG:urllib3.connectionpool:https://misp.agency.net:443 \"GET /attributes/describeTypes.json HTTP/1.1\" 200 18754\r\nDEBUG:urllib3.connectionpool:https://misp.agency.net:443 \"GET /attributes/describeTypes.json HTTP/1.1\" 200 18754\r\nDEBUG:urllib3.connectionpool:https://misp.agency.net:443 \"GET /attributes/describeTypes.json HTTP/1.1\" 200 18754\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/440", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/440/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/440/events", "html_url": "https://github.com/MISP/PyMISP/issues/440", "id": 483632386, "node_id": "MDU6SXNzdWU0ODM2MzIzODY=", "number": 440, "title": "Error when creating MISPObject instances", "user": {"login": "robbyFux", "id": 6443246, "node_id": "MDQ6VXNlcjY0NDMyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6443246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbyFux", "html_url": "https://github.com/robbyFux", "followers_url": "https://api.github.com/users/robbyFux/followers", "following_url": "https://api.github.com/users/robbyFux/following{/other_user}", "gists_url": "https://api.github.com/users/robbyFux/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbyFux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbyFux/subscriptions", "organizations_url": "https://api.github.com/users/robbyFux/orgs", "repos_url": "https://api.github.com/users/robbyFux/repos", "events_url": "https://api.github.com/users/robbyFux/events{/privacy}", "received_events_url": "https://api.github.com/users/robbyFux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-08-21T20:21:27Z", "updated_at": "2019-08-28T12:07:26Z", "closed_at": "2019-08-28T12:07:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "...  \r\nFile \"/usr/local/lib/python3.7/site-packages/pymisp/mispevent.py\", line 1273, in add_attribute\r\n    attribute.from_dict(object_relation=object_relation, **dict(self._default_attributes_parameters, **value))\r\n  File \"/usr/local/lib/python3.7/site-packages/pymisp/mispevent.py\", line 1037, in from_dict\r\n    raise NewAttributeError(\"The type of the attribute is required. Is the object template missing?\")\r\npymisp.exceptions.NewAttributeError: The type of the attribute is required. Is the object template missing?\r\n\r\nPyMisp-Version = 2.4.113\r\n\r\nThe following code generates the error. The same code is working under the Misp version <= 2.4.112 without errors.\r\n\r\nfrom pymisp import MISPObject\r\nvtobject = MISPObject(name=\"virustotal-report\")\r\nvtobject.add_attribute(\"first-submission\", value=\"2019-08-01 12:00:00\")\r\nprint(vtobject)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/439", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/439/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/439/events", "html_url": "https://github.com/MISP/PyMISP/issues/439", "id": 483623764, "node_id": "MDU6SXNzdWU0ODM2MjM3NjQ=", "number": 439, "title": "make_binary_objects creates errors by empty PE object file-description attribute.", "user": {"login": "robbyFux", "id": 6443246, "node_id": "MDQ6VXNlcjY0NDMyNDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6443246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbyFux", "html_url": "https://github.com/robbyFux", "followers_url": "https://api.github.com/users/robbyFux/followers", "following_url": "https://api.github.com/users/robbyFux/following{/other_user}", "gists_url": "https://api.github.com/users/robbyFux/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbyFux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbyFux/subscriptions", "organizations_url": "https://api.github.com/users/robbyFux/orgs", "repos_url": "https://api.github.com/users/robbyFux/repos", "events_url": "https://api.github.com/users/robbyFux/events{/privacy}", "received_events_url": "https://api.github.com/users/robbyFux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-08-21T20:01:15Z", "updated_at": "2019-08-28T12:46:37Z", "closed_at": "2019-08-28T12:46:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using make_binary_objects, the PE object generates an error by an empty file-description attribute.\r\nPyMisp-Version >= 2.4.112\r\n\r\nThe error message is:\r\nSomething went wrong (403): {'name': 'Could not add object', 'message': 'Could not add object', 'url': '/objects/add/3231/', 'errors': 'Could not save object as at least one attribute has failed validation (file-description). {\"value\":[\"Value cannot be empty.\"]}'}\r\n\r\nExample pseudocode:\r\n\r\nfrom pymisp.tools.create_misp_object import make_binary_objects\r\n...\r\n\r\nfileObjs = make_binary_objects(filepath=malsample)\r\n...\r\npymisp.add_object(self.mispevent, obj[1])\r\n\r\n\r\nThe file with the MD5 hash a79c7e344932bbd5692db7dfc1e1e0cd creates the following PE-Object Dict:\r\n\r\n{\r\n   'name':'pe',\r\n   'meta-category':'file',\r\n   'template_uuid':'cf7adecc-d4f0-4e88-9d90-f978ee151a07',\r\n   'description':'Object describing a Portable Executable',\r\n   'template_version':'3',\r\n   'uuid':'97fffd04-e449-4c86-8394-d4515474881b',\r\n   'Attribute':[\r\n      <MISPObjectAttribute(object_relation=type,\r\n      value=exe),\r\n      <MISPObjectAttribute(object_relation=entrypoint-address,\r\n      value=4285889),\r\n      <MISPObjectAttribute(object_relation=compilation-timestamp,\r\n      value=2012-01-29 21:32:28      ),\r\n      <MISPObjectAttribute(object_relation=file-description,\r\n      value=),\r\n      <MISPObjectAttribute(object_relation=file-version,\r\n      value=3,\r\n      3,\r\n      8,\r\n      1      ),\r\n      <MISPObjectAttribute(object_relation=lang-id,\r\n      value=080904b0),\r\n      <MISPObjectAttribute(object_relation=number-sections,\r\n      value=4)\r\n   ],\r\n   'distribution':'5',\r\n   'sharing_group_id':'0',\r\n   'sections':[\r\n      <PESectionObject(name=pe-section),\r\n      <PESectionObject(name=pe-section),\r\n      <PESectionObject(name=pe-section),\r\n      <PESectionObject(name=pe-section)\r\n   ]\r\n}\r\n\r\nThe error occurs in the PEObject class. Here, the following code fragment for the hash a79c7e344932bbd5692db7dfc1e1e0cd creates the fileinfo dictionary: \r\n\r\n__pe = lief.PE.parse(\"acc7e019f3f16823e83328b9df66170d\")\r\n\r\nif (__pe.has_resources and\r\n        __pe.resources_manager.has_version and\r\n        __pe.resources_manager.version.has_string_file_info and\r\n        __pe.resources_manager.version.string_file_info.langcode_items):\r\n    fileinfo = dict(__pe.resources_manager.version.string_file_info.langcode_items[0].items.items())\r\n\r\n    print('file-description: %s' % fileinfo.get('FileDescription'))\r\n>>> {'CompiledScript': 'AutoIt v3 Script: 3, 3, 8, 1', 'FileDescription': '', 'FileVersion': '3, 3, 8, 1'}\r\n\r\nThe same code creates the fileinfo dictionary for the hash acc7e019f3f16823e83328b9df66170d:\r\n\r\n{'FileVersion': '6.1.7600.17793', 'LegalCopyright': '\u00a9All rights reserved.', 'ProductVersion': '6.1.7600.17793'}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/437", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/437/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/437/events", "html_url": "https://github.com/MISP/PyMISP/issues/437", "id": 481141072, "node_id": "MDU6SXNzdWU0ODExNDEwNzI=", "number": 437, "title": "Upload Event Object with attachment", "user": {"login": "garrit-schroeder", "id": 12541078, "node_id": "MDQ6VXNlcjEyNTQxMDc4", "avatar_url": "https://avatars1.githubusercontent.com/u/12541078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garrit-schroeder", "html_url": "https://github.com/garrit-schroeder", "followers_url": "https://api.github.com/users/garrit-schroeder/followers", "following_url": "https://api.github.com/users/garrit-schroeder/following{/other_user}", "gists_url": "https://api.github.com/users/garrit-schroeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/garrit-schroeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garrit-schroeder/subscriptions", "organizations_url": "https://api.github.com/users/garrit-schroeder/orgs", "repos_url": "https://api.github.com/users/garrit-schroeder/repos", "events_url": "https://api.github.com/users/garrit-schroeder/events{/privacy}", "received_events_url": "https://api.github.com/users/garrit-schroeder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T13:03:48Z", "updated_at": "2019-08-15T13:10:29Z", "closed_at": "2019-08-15T13:10:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nhow do i upload an MISP Object?\r\n\r\n obj = MISPObject(\"file\")\r\n        obj.add_attribute(\"attachment\", value=base64.b64encode(attachment.payload)) ### does not work\r\n        obj.add_attribute(\"filename\", attachment.filename)\r\n        obj.add_attribute(\"md5\", attachment.md5)\r\n        obj.add_attribute(\"sha1\", attachment.sha1)\r\n        obj.add_attribute(\"sha256\", attachment.sha256)\r\n        event.add_object(obj)\r\n\r\nHow do i add the payload of an attribute?\r\n\r\nCheers and thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/432", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/432/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/432/events", "html_url": "https://github.com/MISP/PyMISP/issues/432", "id": 476661893, "node_id": "MDU6SXNzdWU0NzY2NjE4OTM=", "number": 432, "title": "misp.search issue - 'Invalid output format.', 'url': '/attributes/restSearch/servers/getPyMISPVersion.json'", "user": {"login": "befrankt", "id": 32216427, "node_id": "MDQ6VXNlcjMyMjE2NDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/32216427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/befrankt", "html_url": "https://github.com/befrankt", "followers_url": "https://api.github.com/users/befrankt/followers", "following_url": "https://api.github.com/users/befrankt/following{/other_user}", "gists_url": "https://api.github.com/users/befrankt/gists{/gist_id}", "starred_url": "https://api.github.com/users/befrankt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/befrankt/subscriptions", "organizations_url": "https://api.github.com/users/befrankt/orgs", "repos_url": "https://api.github.com/users/befrankt/repos", "events_url": "https://api.github.com/users/befrankt/events{/privacy}", "received_events_url": "https://api.github.com/users/befrankt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-05T05:22:35Z", "updated_at": "2019-08-05T08:22:07Z", "closed_at": "2019-08-05T08:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, since MISP 2.4.111 (I tried with 2.4.112 as well) I am having the following issue when I run a PyMISP query:\r\n\r\nERROR [aping.py:72 - _check_response() ] Something went wrong (404): {'name': 'Invalid output format.', 'message': 'Invalid output format.', 'url': '/attributes/restSearch/servers/getPyMISPVersion.json'}\r\nWARNING [api.py:103 - __init__() ] 404\r\nERROR [aping.py:72 - _check_response() ] Something went wrong (404): {'name': 'Invalid output format.', 'message': 'Invalid output format.', 'url': '/attributes/restSearch/attributes/describeTypes.json'}\r\nCount: 0\r\n{'Attribute': []}\r\nProcess finished with exit code 0`\r\n\r\nThis is my code which was previously working (The \"date\" value I am using wasn't working which was fixed in 2.4.111):\r\n\r\n--------\r\n```\r\nfrom pymisp import ExpandedPyMISP\r\nfrom pprint import pprint\r\nAUTHKEY = \"redacted\"\r\nURL = \"https://192.168.1.103\"\r\nimport os\r\nimport json\r\nimport urllib3\r\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\r\n\r\n\r\n\r\ndef print_result(result):\r\n    flag_printed = False\r\n    if isinstance(result, list):\r\n        print(\"Count: %s\" % len(result))\r\n        flag_printed = True\r\n        for i in res:\r\n            if 'Event' in i and 'Attribute' in i['Event']:\r\n                print(\"  - Attribute count: %s\" % len(i['Event']['Attribute']))\r\n    elif isinstance(result, dict):\r\n        if 'Attribute' in result:\r\n            print(\"Count: %s\" % len(result['Attribute']))\r\n            flag_printed = True\r\n        elif 'Event' in result and 'Attribute' in result['Event']['Attribute']:\r\n            print(\"Attribute count: %s\" % len(result['Event']['Attribute']))\r\n            flag_printed = True\r\n    if flag_printed:\r\n        print('----------')\r\n    pprint(result)\r\n\r\n\r\nmisp_url = URL + '/attributes/restSearch/'\r\nrelative_path = ''\r\n\r\nbody = {\r\n    \"returnFormat\": \"json\",\r\n    \"debug\":True,\r\n    # \"eventid\": 13,\r\n    # \"limit\": 1,\r\n    \"date\": \"[100d,200d]\"\r\n}\r\n\r\nmisp = ExpandedPyMISP(misp_url, AUTHKEY, False)\r\nres = misp.direct_call(relative_path, body)\r\nprint_result(res)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/429", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/429/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/429/events", "html_url": "https://github.com/MISP/PyMISP/issues/429", "id": 475686901, "node_id": "MDU6SXNzdWU0NzU2ODY5MDE=", "number": 429, "title": "User-Agent is python code", "user": {"login": "paalbra", "id": 265215, "node_id": "MDQ6VXNlcjI2NTIxNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/265215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paalbra", "html_url": "https://github.com/paalbra", "followers_url": "https://api.github.com/users/paalbra/followers", "following_url": "https://api.github.com/users/paalbra/following{/other_user}", "gists_url": "https://api.github.com/users/paalbra/gists{/gist_id}", "starred_url": "https://api.github.com/users/paalbra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paalbra/subscriptions", "organizations_url": "https://api.github.com/users/paalbra/orgs", "repos_url": "https://api.github.com/users/paalbra/repos", "events_url": "https://api.github.com/users/paalbra/events{/privacy}", "received_events_url": "https://api.github.com/users/paalbra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-01T13:34:56Z", "updated_at": "2019-08-01T13:53:18Z", "closed_at": "2019-08-01T13:53:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here the User-Agent is set to a string containing python code:\r\nhttps://github.com/MISP/PyMISP/blob/b1c79f939b5a2dbabd92a0f9167ed4987109c225/pymisp/aping.py#L1844\r\n\r\nReproduction:\r\n\r\n```python\r\nimport pymisp\r\n\r\nmisp = pymisp.ExpandedPyMISP(\"http://localhost:1337\", \"asdf\")\r\nevent = pymisp.MISPEvent()\r\nmisp.add_event(event)\r\n```\r\nListening to localhost produces:\r\n```\r\n$ nc -l 1337\r\nGET /servers/getPyMISPVersion.json HTTP/1.1\r\nHost: localhost:1337\r\nUser-Agent: PyMISP {__version__} - Python {\".\".join(str(x) for x in sys.version_info[:2])}\r\nAccept-Encoding: gzip, deflate\r\nAccept: application/json\r\nConnection: keep-alive\r\nAuthorization: asdf\r\ncontent-type: application/json\r\n\r\n```\r\n\r\nI assume that this is not intended behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/425", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/425/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/425/events", "html_url": "https://github.com/MISP/PyMISP/issues/425", "id": 472163890, "node_id": "MDU6SXNzdWU0NzIxNjM4OTA=", "number": 425, "title": "How can I update custom object?", "user": {"login": "kovacsbalu", "id": 3726055, "node_id": "MDQ6VXNlcjM3MjYwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3726055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kovacsbalu", "html_url": "https://github.com/kovacsbalu", "followers_url": "https://api.github.com/users/kovacsbalu/followers", "following_url": "https://api.github.com/users/kovacsbalu/following{/other_user}", "gists_url": "https://api.github.com/users/kovacsbalu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kovacsbalu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kovacsbalu/subscriptions", "organizations_url": "https://api.github.com/users/kovacsbalu/orgs", "repos_url": "https://api.github.com/users/kovacsbalu/repos", "events_url": "https://api.github.com/users/kovacsbalu/events{/privacy}", "received_events_url": "https://api.github.com/users/kovacsbalu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 751218849, "node_id": "MDU6TGFiZWw3NTEyMTg4NDk=", "url": "https://api.github.com/repos/MISP/PyMISP/labels/Support", "name": "Support", "color": "efbf6b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-07-24T09:03:10Z", "updated_at": "2019-07-26T14:50:49Z", "closed_at": "2019-07-26T14:50:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can successfully create new object and add some attribute with this: \r\n```\r\nobj = MISPObject('mycustomobject', misp_objects_path_custom='/app/misp_object')\r\nfor key, val in attributes.items():\r\n     obj.add_attribute(key, value=val)\r\nevent = MISPEvent()\r\nevent.add_object(obj)\r\nself.misp.add_event(event, pythonify=True)\r\n``` \r\n\r\nBut I need to define attribute type on update. Probably cannot read template for `mycustomobject` and not prepared with default attributes like `Disable Correlation`.\r\n```\r\nevent = self.misp.get_event(event_id, pythonify=True)\r\nobj = event.objects[0]\r\nfor kk, vv in attributes.items():\r\n    obj.add_attribute(kk, value=vv)\r\n    # obj.add_attribute(kk, type='text', value=vv) # looks better but what if not type=text?\r\nevent.add_object(obj)\r\nself.misp.update_event(event)\r\n```\r\n```\r\n  File \"/usr/local/lib/python3.7/site-packages/pymisp/mispevent.py\", line 1246, in add_attribute\r\n    attribute.from_dict(object_relation=object_relation, **dict(self._default_attributes_parameters, **value))\r\n  File \"/usr/local/lib/python3.7/site-packages/pymisp/mispevent.py\", line 1025, in from_dict\r\n    raise NewAttributeError(\"The type of the attribute is required. Is the object template missing?\")\r\npymisp.exceptions.NewAttributeError: The type of the attribute is required. Is the object template missing?\r\n```\r\nCan you please help with this issue? How should I update custom object?\r\nAll this works perfectly with built-in objects.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/424", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/424/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/424/events", "html_url": "https://github.com/MISP/PyMISP/issues/424", "id": 471044563, "node_id": "MDU6SXNzdWU0NzEwNDQ1NjM=", "number": 424, "title": "AttributeError: 'ExpandedPyMISP' object has no attribute 'update_sharing_group'", "user": {"login": "zeroq", "id": 2749718, "node_id": "MDQ6VXNlcjI3NDk3MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2749718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeroq", "html_url": "https://github.com/zeroq", "followers_url": "https://api.github.com/users/zeroq/followers", "following_url": "https://api.github.com/users/zeroq/following{/other_user}", "gists_url": "https://api.github.com/users/zeroq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeroq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeroq/subscriptions", "organizations_url": "https://api.github.com/users/zeroq/orgs", "repos_url": "https://api.github.com/users/zeroq/repos", "events_url": "https://api.github.com/users/zeroq/events{/privacy}", "received_events_url": "https://api.github.com/users/zeroq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T11:35:20Z", "updated_at": "2019-07-22T13:19:45Z", "closed_at": "2019-07-22T13:18:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Recent PyMISP code issues a deprecation warning: `DeprecationWarning: Call to deprecated method change_sharing_group. (Use ExpandedPyMISP.update_sharing_group)`\r\n- But ExpandedPyMISP does not have function to `update_sharing_group` yet\r\n- Unfortunately deprecated function also does not work anymore, because of: `AttributeError: 'MISPEvent' object has no attribute 'SharingGroup'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/423", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/423/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/423/events", "html_url": "https://github.com/MISP/PyMISP/issues/423", "id": 470673831, "node_id": "MDU6SXNzdWU0NzA2NzM4MzE=", "number": 423, "title": "coverage run setup.py failing", "user": {"login": "juju4", "id": 1300844, "node_id": "MDQ6VXNlcjEzMDA4NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1300844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juju4", "html_url": "https://github.com/juju4", "followers_url": "https://api.github.com/users/juju4/followers", "following_url": "https://api.github.com/users/juju4/following{/other_user}", "gists_url": "https://api.github.com/users/juju4/gists{/gist_id}", "starred_url": "https://api.github.com/users/juju4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juju4/subscriptions", "organizations_url": "https://api.github.com/users/juju4/orgs", "repos_url": "https://api.github.com/users/juju4/repos", "events_url": "https://api.github.com/users/juju4/events{/privacy}", "received_events_url": "https://api.github.com/users/juju4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Rafiot", "id": 248875, "node_id": "MDQ6VXNlcjI0ODg3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/248875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rafiot", "html_url": "https://github.com/Rafiot", "followers_url": "https://api.github.com/users/Rafiot/followers", "following_url": "https://api.github.com/users/Rafiot/following{/other_user}", "gists_url": "https://api.github.com/users/Rafiot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rafiot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rafiot/subscriptions", "organizations_url": "https://api.github.com/users/Rafiot/orgs", "repos_url": "https://api.github.com/users/Rafiot/repos", "events_url": "https://api.github.com/users/Rafiot/events{/privacy}", "received_events_url": "https://api.github.com/users/Rafiot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-20T13:17:51Z", "updated_at": "2019-07-22T07:42:35Z", "closed_at": "2019-07-22T07:42:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From my ansible role travis tests\r\nhttps://api.travis-ci.org/v3/job/561371823/log.txt\r\n```\r\n\u001b[35m         1) Command \"cd /var/www/MISP/PyMISP && /var/www/MISP/venv/bin/coverage run setup.py test 2>&1 | tee /tmp/coverage.out\" stdout should not match /FAILED \\(errors=.*\\)/\u001b[0m\r\n\u001b[35m            \u001b[31mFailure/Error: its(:stdout) { should_not match /FAILED \\(errors=.*\\)/}\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  expected \"running test\\nrunning egg_info\\nwriting pymisp.egg-info/PKG-INFO\\nwriting dependency_links to pymisp...------------------------------------------------------\\nRan 1 test in 0.000s\\n\\nFAILED (errors=1)\\n\" not to match /FAILED \\(errors=.*\\)/\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  Diff:\u001b[0m\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[34m@@ -1,2 +1,32 @@\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[31m-/FAILED \\(errors=.*\\)/\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+running test\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+running egg_info\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+writing pymisp.egg-info/PKG-INFO\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+writing dependency_links to pymisp.egg-info/dependency_links.txt\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+writing requirements to pymisp.egg-info/requires.txt\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+writing top-level names to pymisp.egg-info/top_level.txt\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+writing manifest file 'pymisp.egg-info/SOURCES.txt'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+reading manifest file 'pymisp.egg-info/SOURCES.txt'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+reading manifest template 'MANIFEST.in'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+writing manifest file 'pymisp.egg-info/SOURCES.txt'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+running build_ext\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+/usr/lib64/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'project_urls'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+  warnings.warn(msg)\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+/usr/lib64/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'long_description_content_type'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+  warnings.warn(msg)\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+test_offline (unittest.loader._FailedTest) ... ERROR\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+======================================================================\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+ERROR: test_offline (unittest.loader._FailedTest)\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+----------------------------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+ImportError: Failed to import test module: test_offline\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+Traceback (most recent call last):\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+  File \"/usr/lib64/python3.6/unittest/loader.py\", line 153, in loadTestsFromName\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+    module = __import__(module_name)\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+ModuleNotFoundError: No module named 'tests.test_offline'\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+----------------------------------------------------------------------\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+Ran 1 test in 0.000s\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+\u001b[0m\u001b[0m\r\n\u001b[35m            \u001b[31m  \u001b[0m\u001b[32m+FAILED (errors=1)\u001b[0m\u001b[0m\r\n```\r\n\r\nhappens with both pymisp v2.4.111.1 and v2.4.106\r\n\r\nproblem is from test_suite in setup.py\r\nhttps://github.com/MISP/PyMISP/blob/master/setup.py#L56\r\nnot updated after file removal in https://github.com/MISP/PyMISP/commit/fca835dd22d43e762194d5c5f61c1e097faade11#diff-b61a6d542f9036550ba9c401c80f00ef\r\n\r\nupdate with tests.test_mispevent ?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/420", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/420/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/420/events", "html_url": "https://github.com/MISP/PyMISP/issues/420", "id": 469596071, "node_id": "MDU6SXNzdWU0Njk1OTYwNzE=", "number": 420, "title": "Bug in examples/search_sighting.py", "user": {"login": "github-pba", "id": 50981940, "node_id": "MDQ6VXNlcjUwOTgxOTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/50981940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-pba", "html_url": "https://github.com/github-pba", "followers_url": "https://api.github.com/users/github-pba/followers", "following_url": "https://api.github.com/users/github-pba/following{/other_user}", "gists_url": "https://api.github.com/users/github-pba/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-pba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-pba/subscriptions", "organizations_url": "https://api.github.com/users/github-pba/orgs", "repos_url": "https://api.github.com/users/github-pba/repos", "events_url": "https://api.github.com/users/github-pba/events{/privacy}", "received_events_url": "https://api.github.com/users/github-pba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-18T06:41:52Z", "updated_at": "2019-07-18T06:50:30Z", "closed_at": "2019-07-18T06:50:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In examples, the code for search_sighting.py is buggy.\r\n\r\nit reads in line 17:\r\n\r\n``` \r\nresult = m.sighting_search(context, **kwargs)\r\n```\r\n\r\nwhich has to be \r\n\r\n```\r\nresult = m.search_sightings(context, **kwargs)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/419", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/419/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/419/events", "html_url": "https://github.com/MISP/PyMISP/issues/419", "id": 468142033, "node_id": "MDU6SXNzdWU0NjgxNDIwMzM=", "number": 419, "title": "add_feed doesn't work", "user": {"login": "jochman", "id": 11165655, "node_id": "MDQ6VXNlcjExMTY1NjU1", "avatar_url": "https://avatars2.githubusercontent.com/u/11165655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jochman", "html_url": "https://github.com/jochman", "followers_url": "https://api.github.com/users/jochman/followers", "following_url": "https://api.github.com/users/jochman/following{/other_user}", "gists_url": "https://api.github.com/users/jochman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jochman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jochman/subscriptions", "organizations_url": "https://api.github.com/users/jochman/orgs", "repos_url": "https://api.github.com/users/jochman/repos", "events_url": "https://api.github.com/users/jochman/events{/privacy}", "received_events_url": "https://api.github.com/users/jochman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T13:55:13Z", "updated_at": "2019-07-17T16:03:48Z", "closed_at": "2019-07-17T16:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to add a simple feed, for example CIRCL:\r\n```\r\nr = MISP.add_feed(\r\n    ...:     'misp',\r\n    ...:     \"https://www.circl.lu/doc/misp/feed-osint\",\r\n    ...:     \"CIRCL OSINT Feed\",\r\n    ...:     'network',\r\n    ...:     'CIRCL')\r\n```\r\n\r\nthe response I get:\r\n\r\n```\r\n{'Feed': {'id': '69',\r\n  'name': '',\r\n  'provider': '',\r\n  'url': '',\r\n  'rules': None,\r\n  'enabled': False,\r\n  'distribution': '0',\r\n  'sharing_group_id': '0',\r\n  'tag_id': '0',\r\n  'default': False,\r\n  'source_format': 'freetext',\r\n  'fixed_event': True,\r\n  'delta_merge': False,\r\n  'event_id': '0',\r\n  'publish': False,\r\n  'override_ids': False,\r\n  'settings': '[]',\r\n  'input_source': 'network',\r\n  'delete_local_file': False,\r\n  'lookup_visible': False,\r\n  'headers': None,\r\n  'caching_enabled': False,\r\n  'force_to_ids': False}}\r\n```\r\n\r\nIn the UI: \r\n![image](https://user-images.githubusercontent.com/11165655/61221308-ea1be700-a720-11e9-9498-362b9ecfbb7d.png)\r\n\r\nNo feed is added.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/416", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/416/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/416/events", "html_url": "https://github.com/MISP/PyMISP/issues/416", "id": 466994189, "node_id": "MDU6SXNzdWU0NjY5OTQxODk=", "number": 416, "title": "disable_correlation on object without effect", "user": {"login": "rommelfs", "id": 274748, "node_id": "MDQ6VXNlcjI3NDc0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/274748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rommelfs", "html_url": "https://github.com/rommelfs", "followers_url": "https://api.github.com/users/rommelfs/followers", "following_url": "https://api.github.com/users/rommelfs/following{/other_user}", "gists_url": "https://api.github.com/users/rommelfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rommelfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rommelfs/subscriptions", "organizations_url": "https://api.github.com/users/rommelfs/orgs", "repos_url": "https://api.github.com/users/rommelfs/repos", "events_url": "https://api.github.com/users/rommelfs/events{/privacy}", "received_events_url": "https://api.github.com/users/rommelfs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-11T16:31:32Z", "updated_at": "2019-07-29T22:38:27Z", "closed_at": "2019-07-12T09:52:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "disable_correlation via pymisp on attribute add on object instance has no effect", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/MISP/PyMISP/issues/414", "repository_url": "https://api.github.com/repos/MISP/PyMISP", "labels_url": "https://api.github.com/repos/MISP/PyMISP/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/MISP/PyMISP/issues/414/comments", "events_url": "https://api.github.com/repos/MISP/PyMISP/issues/414/events", "html_url": "https://github.com/MISP/PyMISP/issues/414", "id": 462907275, "node_id": "MDU6SXNzdWU0NjI5MDcyNzU=", "number": 414, "title": "pymisp.search include correlated RelatedEvents", "user": {"login": "github-germ", "id": 8812009, "node_id": "MDQ6VXNlcjg4MTIwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8812009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-germ", "html_url": "https://github.com/github-germ", "followers_url": "https://api.github.com/users/github-germ/followers", "following_url": "https://api.github.com/users/github-germ/following{/other_user}", "gists_url": "https://api.github.com/users/github-germ/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-germ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-germ/subscriptions", "organizations_url": "https://api.github.com/users/github-germ/orgs", "repos_url": "https://api.github.com/users/github-germ/repos", "events_url": "https://api.github.com/users/github-germ/events{/privacy}", "received_events_url": "https://api.github.com/users/github-germ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-01T20:54:52Z", "updated_at": "2019-07-03T14:45:59Z", "closed_at": "2019-07-02T08:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to perform a PyMISP query retrieving all attributes of the last `24h` with `includeEventTags`.\r\n\r\nDoes `pymisp.search(controller='attributes',...)` include the correlated events key `RelatedEvents` in the results?\r\n", "performed_via_github_app": null, "score": 1.0}]}