{"total_count": 24, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bigjason/django-choices/issues/66", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/66/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/66/events", "html_url": "https://github.com/bigjason/django-choices/issues/66", "id": 515804488, "node_id": "MDU6SXNzdWU1MTU4MDQ0ODg=", "number": 66, "title": "Nested choices", "user": {"login": "leowonglaw", "id": 31283495, "node_id": "MDQ6VXNlcjMxMjgzNDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/31283495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leowonglaw", "html_url": "https://github.com/leowonglaw", "followers_url": "https://api.github.com/users/leowonglaw/followers", "following_url": "https://api.github.com/users/leowonglaw/following{/other_user}", "gists_url": "https://api.github.com/users/leowonglaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/leowonglaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leowonglaw/subscriptions", "organizations_url": "https://api.github.com/users/leowonglaw/orgs", "repos_url": "https://api.github.com/users/leowonglaw/repos", "events_url": "https://api.github.com/users/leowonglaw/events{/privacy}", "received_events_url": "https://api.github.com/users/leowonglaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T23:08:20Z", "updated_at": "2020-04-25T03:47:35Z", "closed_at": "2020-04-25T03:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes a list of choices is wanted to be represented in a nested structure, where a parent choice cointains a group of subchoices. Parent choices are not wanted to be saved in the database, but its end-child choices are.\r\n\r\nFor example:\r\n- Free\r\n- Reserved\r\n- Ordered:\r\n    - Requested\r\n    - Approved\r\n    - Billed\r\n    - Delivered\r\n\r\nMaybe the choices can have different nested structure representations. :no_mouth:\r\n\r\nThis kind of grouping is wanted to be used into a cascading dropdown.\r\n![image](https://user-images.githubusercontent.com/31283495/67991885-c796d680-fc08-11e9-9518-10b64fdad5c6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/64", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/64/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/64/events", "html_url": "https://github.com/bigjason/django-choices/issues/64", "id": 453316786, "node_id": "MDU6SXNzdWU0NTMzMTY3ODY=", "number": 64, "title": "Convert Django Choices to simple list of values", "user": {"login": "saranshbansal", "id": 6996732, "node_id": "MDQ6VXNlcjY5OTY3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6996732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saranshbansal", "html_url": "https://github.com/saranshbansal", "followers_url": "https://api.github.com/users/saranshbansal/followers", "following_url": "https://api.github.com/users/saranshbansal/following{/other_user}", "gists_url": "https://api.github.com/users/saranshbansal/gists{/gist_id}", "starred_url": "https://api.github.com/users/saranshbansal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saranshbansal/subscriptions", "organizations_url": "https://api.github.com/users/saranshbansal/orgs", "repos_url": "https://api.github.com/users/saranshbansal/repos", "events_url": "https://api.github.com/users/saranshbansal/events{/privacy}", "received_events_url": "https://api.github.com/users/saranshbansal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739267, "node_id": "MDU6TGFiZWwyNTg3MzkyNjc=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Support", "name": "Support", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-07T02:49:15Z", "updated_at": "2019-07-05T09:27:54Z", "closed_at": "2019-07-05T09:27:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to convert django choices to a simple list of values? It would avoid duplicating the code and creating another enum for non-db related scenarios.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/61", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/61/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/61/events", "html_url": "https://github.com/bigjason/django-choices/issues/61", "id": 402607711, "node_id": "MDU6SXNzdWU0MDI2MDc3MTE=", "number": 61, "title": "Release __iter__ changes", "user": {"login": "nicoknoll", "id": 1143670, "node_id": "MDQ6VXNlcjExNDM2NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1143670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoknoll", "html_url": "https://github.com/nicoknoll", "followers_url": "https://api.github.com/users/nicoknoll/followers", "following_url": "https://api.github.com/users/nicoknoll/following{/other_user}", "gists_url": "https://api.github.com/users/nicoknoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoknoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoknoll/subscriptions", "organizations_url": "https://api.github.com/users/nicoknoll/orgs", "repos_url": "https://api.github.com/users/nicoknoll/repos", "events_url": "https://api.github.com/users/nicoknoll/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoknoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-24T09:11:03Z", "updated_at": "2019-01-24T10:20:35Z", "closed_at": "2019-01-24T10:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, with the merge on November, 2nd (https://github.com/bigjason/django-choices/commit/7e3eb09cb3e499786de5d8ebac7fa7e39d1a1e04) using `FooChoices.choices` became redundant in regards to directly using `FooChoices` as the `__iter__`method is implemented in the metaclass now.\r\n\r\nIs there any release for this planned as the version you get with `pip install` is still 1.6.1 without that change?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/60", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/60/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/60/events", "html_url": "https://github.com/bigjason/django-choices/issues/60", "id": 385004074, "node_id": "MDU6SXNzdWUzODUwMDQwNzQ=", "number": 60, "title": "Sorting by choice", "user": {"login": "deejcoder", "id": 8052327, "node_id": "MDQ6VXNlcjgwNTIzMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8052327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deejcoder", "html_url": "https://github.com/deejcoder", "followers_url": "https://api.github.com/users/deejcoder/followers", "following_url": "https://api.github.com/users/deejcoder/following{/other_user}", "gists_url": "https://api.github.com/users/deejcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/deejcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deejcoder/subscriptions", "organizations_url": "https://api.github.com/users/deejcoder/orgs", "repos_url": "https://api.github.com/users/deejcoder/repos", "events_url": "https://api.github.com/users/deejcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/deejcoder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739310, "node_id": "MDU6TGFiZWwyNTg3MzkzMTA=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Feature", "name": "Feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-27T21:57:42Z", "updated_at": "2018-11-28T02:11:32Z", "closed_at": "2018-11-27T22:28:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just wanted to create a separate issue for this feature request. I'm not sure if this is the best way since I couldn't find anything documented about it.\r\n\r\nhttps://github.com/bigjason/django-choices/issues/59#issuecomment-442231142\r\n\r\nIt would be nice if we could return a sorted query list in some easier way, sorting it by the choice. Could do something similar to what I've done internally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/59", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/59/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/59/events", "html_url": "https://github.com/bigjason/django-choices/issues/59", "id": 380667374, "node_id": "MDU6SXNzdWUzODA2NjczNzQ=", "number": 59, "title": "What advantages in using django-choices?", "user": {"login": "rocchidavide", "id": 4699633, "node_id": "MDQ6VXNlcjQ2OTk2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4699633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rocchidavide", "html_url": "https://github.com/rocchidavide", "followers_url": "https://api.github.com/users/rocchidavide/followers", "following_url": "https://api.github.com/users/rocchidavide/following{/other_user}", "gists_url": "https://api.github.com/users/rocchidavide/gists{/gist_id}", "starred_url": "https://api.github.com/users/rocchidavide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rocchidavide/subscriptions", "organizations_url": "https://api.github.com/users/rocchidavide/orgs", "repos_url": "https://api.github.com/users/rocchidavide/repos", "events_url": "https://api.github.com/users/rocchidavide/events{/privacy}", "received_events_url": "https://api.github.com/users/rocchidavide/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-14T12:02:52Z", "updated_at": "2019-01-24T10:20:59Z", "closed_at": "2019-01-24T10:20:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for this that is not an issue but a clarify question: what are the advantages of using this app?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/54", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/54/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/54/events", "html_url": "https://github.com/bigjason/django-choices/issues/54", "id": 283096218, "node_id": "MDU6SXNzdWUyODMwOTYyMTg=", "number": 54, "title": "DjangoChoices.labels does not do what it's documented for", "user": {"login": "w00kie", "id": 56729, "node_id": "MDQ6VXNlcjU2NzI5", "avatar_url": "https://avatars2.githubusercontent.com/u/56729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w00kie", "html_url": "https://github.com/w00kie", "followers_url": "https://api.github.com/users/w00kie/followers", "following_url": "https://api.github.com/users/w00kie/following{/other_user}", "gists_url": "https://api.github.com/users/w00kie/gists{/gist_id}", "starred_url": "https://api.github.com/users/w00kie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w00kie/subscriptions", "organizations_url": "https://api.github.com/users/w00kie/orgs", "repos_url": "https://api.github.com/users/w00kie/repos", "events_url": "https://api.github.com/users/w00kie/events{/privacy}", "received_events_url": "https://api.github.com/users/w00kie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739310, "node_id": "MDU6TGFiZWwyNTg3MzkzMTA=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Feature", "name": "Feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-19T03:48:01Z", "updated_at": "2019-01-24T10:21:42Z", "closed_at": "2019-01-24T10:21:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm on django-choices==1.6.0 and encounter an issue with `DjangoChoices.label`. The documentation says it should return a dictionary mapping labels to values. What I get is a dictionary mapping *property* to *specified label*.\r\n\r\nWith the following in my model:\r\n```python\r\nclass DevStatus(DjangoChoices):\r\n    na = ChoiceItem('NA', 'NA')\r\n    ready = ChoiceItem('RDY', 'Ready For Development')\r\n    specs_to_discuss = ChoiceItem('TBD', 'Specs To Discuss')\r\n    in_progress = ChoiceItem('INP', 'In Progress')\r\n    partially_delivered = ChoiceItem('PAR', 'Partially Delivered')\r\n    completed = ChoiceItem('COM', 'Completed')\r\n```\r\nI get this result:\r\n```python\r\n>>> PER.DevStatus.labels\r\n{'in_progress': 'In Progress', 'partially_delivered': 'Partially Delivered', 'specs_to_discuss': 'Specs To Discuss', 'completed': 'Completed', 'ready': 'Ready For Development', 'na': 'NA'}\r\n```\r\nWhere what I'm expecting would be:\r\n```python\r\n>>> PER.DevStatus.labels\r\n{'In Progress': 'INP', 'Partially Delivered': 'PAR', 'Specs To Discuss': 'TBD', 'Completed': 'COM', 'Ready For Development': 'RDY', 'NA': 'NA'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/50", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/50/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/50/events", "html_url": "https://github.com/bigjason/django-choices/issues/50", "id": 233860329, "node_id": "MDU6SXNzdWUyMzM4NjAzMjk=", "number": 50, "title": "Ordering doesn't work when setting order kwargs to 0", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739222, "node_id": "MDU6TGFiZWwyNTg3MzkyMjI=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-06T11:25:19Z", "updated_at": "2017-06-21T21:37:32Z", "closed_at": "2017-06-21T21:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "The constructor for `ChoiceItem` checks the `order` kwarg for truthiness instead for wether it's `None`, which puts that `ChoiceItem` in the wrong place in the ordering.\r\n\r\ne.g.\r\n\r\n```python\r\n\r\nIn [5]: class SomeChoices(DjangoChoices):\r\n   ...:         foo = C(order=0)\r\n   ...:         bar = C(order=1)\r\n   ...:         baz = C(order=2)\r\n   ...:\r\n\r\nIn [6]: SomeChoices.choices\r\nOut[6]: (('bar', 'bar'), ('baz', 'baz'), ('foo', 'foo'))\r\n```\r\n\r\nWhile we'd expect the order be the same as the class definition. This behavior is not mentioned in the docs.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/49", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/49/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/49/events", "html_url": "https://github.com/bigjason/django-choices/issues/49", "id": 209709077, "node_id": "MDU6SXNzdWUyMDk3MDkwNzc=", "number": 49, "title": "How to use with localization?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739267, "node_id": "MDU6TGFiZWwyNTg3MzkyNjc=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Support", "name": "Support", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-23T09:36:42Z", "updated_at": "2017-06-22T16:03:54Z", "closed_at": "2017-06-06T11:46:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to use with localization?\r\nSuppose I want to localize my choice to my language.\r\nHow can I do that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/47", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/47/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/47/events", "html_url": "https://github.com/bigjason/django-choices/issues/47", "id": 208868270, "node_id": "MDU6SXNzdWUyMDg4NjgyNzA=", "number": 47, "title": "API to get the attribute name from value? ", "user": {"login": "jaseemabid", "id": 601714, "node_id": "MDQ6VXNlcjYwMTcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/601714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaseemabid", "html_url": "https://github.com/jaseemabid", "followers_url": "https://api.github.com/users/jaseemabid/followers", "following_url": "https://api.github.com/users/jaseemabid/following{/other_user}", "gists_url": "https://api.github.com/users/jaseemabid/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaseemabid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaseemabid/subscriptions", "organizations_url": "https://api.github.com/users/jaseemabid/orgs", "repos_url": "https://api.github.com/users/jaseemabid/repos", "events_url": "https://api.github.com/users/jaseemabid/events{/privacy}", "received_events_url": "https://api.github.com/users/jaseemabid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739310, "node_id": "MDU6TGFiZWwyNTg3MzkzMTA=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Feature", "name": "Feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-02-20T12:38:31Z", "updated_at": "2017-06-21T21:40:06Z", "closed_at": "2017-06-21T21:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the example from the README.\r\n\r\n```\r\nclass PersonType(DjangoChoices):\r\n    customer = ChoiceItem(\"C\", \"Cust label\") \r\n    employee = ChoiceItem(\"E\")\r\n    groundhog = ChoiceItem(\"G\")\r\n```\r\n\r\nIs there an API to get the attribute name as a string (`customer`) from the value (`C`) ?\r\n\r\nThe existing API `PersonType.labels` maps attributes to label, `PersonType.values` maps values to label, but I need the reverse. I need a map from value to attribute name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/44", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/44/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/44/events", "html_url": "https://github.com/bigjason/django-choices/issues/44", "id": 205295374, "node_id": "MDU6SXNzdWUyMDUyOTUzNzQ=", "number": 44, "title": "Use ordered dict for values", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-03T23:14:24Z", "updated_at": "2017-02-13T22:03:21Z", "closed_at": "2017-02-13T22:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!  The `choices` attribute is a list of tuples that\u2019s convenient for a django model field declaration, but recently I had a need to convert that to an OrderedDict to send it in a JSON response.  I noticed that a dict can be found as the `values` attribute, but it isn\u2019t ordered.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/36", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/36/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/36/events", "html_url": "https://github.com/bigjason/django-choices/issues/36", "id": 155232669, "node_id": "MDU6SXNzdWUxNTUyMzI2Njk=", "number": 36, "title": "Confusing ChoiceItem behavior", "user": {"login": "megapctr", "id": 4096683, "node_id": "MDQ6VXNlcjQwOTY2ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megapctr", "html_url": "https://github.com/megapctr", "followers_url": "https://api.github.com/users/megapctr/followers", "following_url": "https://api.github.com/users/megapctr/following{/other_user}", "gists_url": "https://api.github.com/users/megapctr/gists{/gist_id}", "starred_url": "https://api.github.com/users/megapctr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megapctr/subscriptions", "organizations_url": "https://api.github.com/users/megapctr/orgs", "repos_url": "https://api.github.com/users/megapctr/repos", "events_url": "https://api.github.com/users/megapctr/events{/privacy}", "received_events_url": "https://api.github.com/users/megapctr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-17T11:02:58Z", "updated_at": "2016-05-17T11:16:10Z", "closed_at": "2016-05-17T11:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Turns out that values and labels are created differently than I'd expect:\n\n```\nclass Choices(DjangoChoices):\n    foo = ChoiceItem(_(\"Footastic\"))\n    bar = ChoiceItem(_(\"Baraboom\"))\n```\n\nIn this example, `foo` and `bar` are labels and `Footastic` and `Baraboom` are values - I'd expect the opposite behavior.\n\nI also noticed that explicitly passing the label is not enough\n\n```\nfoo = ChoceItem(label=_(\"Footastic\"))\n```\n\n...because then both values and labels are \"Footastic\"\n\nThis is confusing to me, because labels are usually more verbose as well as more prone to change, and theferore they are less suitable for use in code:\n\n```\nclass PizzaCrust(DjangoChoices):\n    extra_thick_chicago_style = ChoiceItem('thick')\n```\n\nWhy labels, instead of values, are inferred from the attribute name?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/35", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/35/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/35/events", "html_url": "https://github.com/bigjason/django-choices/issues/35", "id": 155224611, "node_id": "MDU6SXNzdWUxNTUyMjQ2MTE=", "number": 35, "title": "Invalid exception formatting within Chocies.validator", "user": {"login": "megapctr", "id": 4096683, "node_id": "MDQ6VXNlcjQwOTY2ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megapctr", "html_url": "https://github.com/megapctr", "followers_url": "https://api.github.com/users/megapctr/followers", "following_url": "https://api.github.com/users/megapctr/following{/other_user}", "gists_url": "https://api.github.com/users/megapctr/gists{/gist_id}", "starred_url": "https://api.github.com/users/megapctr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megapctr/subscriptions", "organizations_url": "https://api.github.com/users/megapctr/orgs", "repos_url": "https://api.github.com/users/megapctr/repos", "events_url": "https://api.github.com/users/megapctr/events{/privacy}", "received_events_url": "https://api.github.com/users/megapctr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739222, "node_id": "MDU6TGFiZWwyNTg3MzkyMjI=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-17T10:18:42Z", "updated_at": "2016-06-01T07:44:50Z", "closed_at": "2016-06-01T07:44:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm' sorry to spam you with issues like that :^) I noticed a small bug in Choices.validator, you don't pass the value to exception:\n\n```\npython3.4/site-packages/djchoices/choices.py in __call__(self, value)\n    118     def __call__(self, value):\n    119         if value not in self.values:\n--> 120             raise ValidationError('Select a valid choice. %(value)s is not '\n    121                                   'one of the available choices.')\n    122 \n\nValidationError: ['Select a valid choice. %(value)s is not one of the available choices.']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/34", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/34/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/34/events", "html_url": "https://github.com/bigjason/django-choices/issues/34", "id": 155213656, "node_id": "MDU6SXNzdWUxNTUyMTM2NTY=", "number": 34, "title": "Reduce boilerplate with custom ChoiceField", "user": {"login": "megapctr", "id": 4096683, "node_id": "MDQ6VXNlcjQwOTY2ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megapctr", "html_url": "https://github.com/megapctr", "followers_url": "https://api.github.com/users/megapctr/followers", "following_url": "https://api.github.com/users/megapctr/following{/other_user}", "gists_url": "https://api.github.com/users/megapctr/gists{/gist_id}", "starred_url": "https://api.github.com/users/megapctr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megapctr/subscriptions", "organizations_url": "https://api.github.com/users/megapctr/orgs", "repos_url": "https://api.github.com/users/megapctr/repos", "events_url": "https://api.github.com/users/megapctr/events{/privacy}", "received_events_url": "https://api.github.com/users/megapctr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-17T09:24:34Z", "updated_at": "2017-01-28T13:13:50Z", "closed_at": "2016-05-17T09:53:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The readme suggests this usage:\n\n```\ntype = models.CharField(max_length=1,\n                            choices=PersonType.choices,\n                            validators=[PersonType.validator])\n```\n\nHowever, we could provide default behavior with a custom CharField:\n- `choices` accepts `DjangoChoices` subclass\n- `max_length` is inferred from max(len(l) for l in GivenChoices.labels)\n- `validators` is `[GivenChoices.validator]` by default\n\n(While most of these are a matter of preference, automatically picking the `max_length` value would surely be an useful feature)\n\nThen we can simply do this\n\n```\ntype = ChoiceField(choices=PersonType.choices)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/33", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/33/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/33/events", "html_url": "https://github.com/bigjason/django-choices/issues/33", "id": 155210119, "node_id": "MDU6SXNzdWUxNTUyMTAxMTk=", "number": 33, "title": "In IPython, DjangoChoices.labels raises AttributeError for 'keys'", "user": {"login": "megapctr", "id": 4096683, "node_id": "MDQ6VXNlcjQwOTY2ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4096683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megapctr", "html_url": "https://github.com/megapctr", "followers_url": "https://api.github.com/users/megapctr/followers", "following_url": "https://api.github.com/users/megapctr/following{/other_user}", "gists_url": "https://api.github.com/users/megapctr/gists{/gist_id}", "starred_url": "https://api.github.com/users/megapctr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megapctr/subscriptions", "organizations_url": "https://api.github.com/users/megapctr/orgs", "repos_url": "https://api.github.com/users/megapctr/repos", "events_url": "https://api.github.com/users/megapctr/events{/privacy}", "received_events_url": "https://api.github.com/users/megapctr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-17T09:06:49Z", "updated_at": "2016-08-28T20:10:20Z", "closed_at": "2016-08-28T20:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I noticed this behavior in ipython. Here's my environment:\n\n```\nPython 3.4.3\n\nDjango==1.9.6\ndjango-choices==1.4.2\nipython==4.2.0\n```\n\nAnd the traceback:\n\n```\nIn [20]: class C(DjangoChoices):\n    a = ChoiceItem('a', 'A')\n    b = ChoiceItem('b', 'B')\n    c = ChoiceItem('c', 'C')\n   ....:     \n\nIn [21]: C.labels\nOut[21]: AttributeError\nTraceback (most recent call last)\npython3.4/site-packages/IPython/core/formatters.py in __call__(self, obj)\n    697                 type_pprinters=self.type_printers,\n    698                 deferred_pprinters=self.deferred_printers)\n--> 699             printer.pretty(obj)\n    700             printer.flush()\n    701             return stream.getvalue()\n\npython3.4/site-packages/IPython/lib/pretty.py in pretty(self, obj)\n    366                 if cls in self.type_pprinters:\n    367                     # printer registered in self.type_pprinters\n--> 368                     return self.type_pprinters[cls](obj, self, cycle)\n    369                 else:\n    370                     # deferred printer\n\npython3.4/site-packages/IPython/lib/pretty.py in inner(obj, p, cycle)\n    607             return p.text('{...}')\n    608         p.begin_group(1, start)\n--> 609         keys = obj.keys()\n    610         # if dict isn't large enough to be truncated, sort keys before displaying\n    611         if not (p.max_seq_length and len(obj) >= p.max_seq_length):\n\npython3.4/site-packages/djchoices/choices.py in __getattribute__(self, name)\n     17             return result\n     18         else:\n---> 19             raise AttributeError(\"Label for field %s was not found.\" % name)\n     20 \n     21     def __setattr__(self, name, value):\n\nAttributeError: Label for field keys was not found.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/31", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/31/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/31/events", "html_url": "https://github.com/bigjason/django-choices/issues/31", "id": 138008298, "node_id": "MDU6SXNzdWUxMzgwMDgyOTg=", "number": 31, "title": "A method to lookup the label for a ChoiceItem", "user": {"login": "tedmiston", "id": 366688, "node_id": "MDQ6VXNlcjM2NjY4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/366688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedmiston", "html_url": "https://github.com/tedmiston", "followers_url": "https://api.github.com/users/tedmiston/followers", "following_url": "https://api.github.com/users/tedmiston/following{/other_user}", "gists_url": "https://api.github.com/users/tedmiston/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedmiston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedmiston/subscriptions", "organizations_url": "https://api.github.com/users/tedmiston/orgs", "repos_url": "https://api.github.com/users/tedmiston/repos", "events_url": "https://api.github.com/users/tedmiston/events{/privacy}", "received_events_url": "https://api.github.com/users/tedmiston/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-02T22:14:29Z", "updated_at": "2016-03-02T22:19:40Z", "closed_at": "2016-03-02T22:19:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I attempted to use your library for choices in a Django model field, but ended up rolling back to a more primitive approach.  Here's a (slightly obfuscated) overview of my use case:\n\n```\nclass User(models.Model):\n\n    class UserType(DjangoChoices):\n        Trial = ChoiceItem('T', label='Trial')\n        Active = ChoiceItem('A', label='Active')\n        Expired = ChoiceItem('E', label='Expired')\n\n    status = models.CharField(max_length=1, choices=UserType.choices,\n                              default=UserType.Trial,\n                              validators=[UserType.validator])\n\n    ...\n```\n\nBut I needed a way to represent the status in in a view.\n\nWhat I'd like to be able to do is something like this:\n\n```\nu = User.objects.get(...)\nprint u.status.label\n```\n\nand get:\n\n```\n'Expired'\n```\n\nI didn't see an intuitive way to do this mentioned in the docs.\n\nBecause at view level, I have access to the model field, all I can see is `E`.\n\nSo I considered iterating through the dict from `UserType`, but in terms of interface, that felt weird.  I was wondering if there's a better solution or if you've had this use case?\n\nBest,\nTaylor\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/30", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/30/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/30/events", "html_url": "https://github.com/bigjason/django-choices/issues/30", "id": 129733755, "node_id": "MDU6SXNzdWUxMjk3MzM3NTU=", "number": 30, "title": "How to use this Choices which need to be translated: _('my string to translate?')", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-29T11:04:34Z", "updated_at": "2016-02-05T19:14:45Z", "closed_at": "2016-02-05T19:14:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to use this Choices which need to be translated?\n\nExample: _('my string to translate?')\n\nPlease don't tell me ... but update the docs :-)\n\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/25", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/25/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/25/events", "html_url": "https://github.com/bigjason/django-choices/issues/25", "id": 105815901, "node_id": "MDU6SXNzdWUxMDU4MTU5MDE=", "number": 25, "title": "Cannot install django-choices due to __version__ import that was added setup.py", "user": {"login": "ishirav", "id": 615559, "node_id": "MDQ6VXNlcjYxNTU1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/615559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishirav", "html_url": "https://github.com/ishirav", "followers_url": "https://api.github.com/users/ishirav/followers", "following_url": "https://api.github.com/users/ishirav/following{/other_user}", "gists_url": "https://api.github.com/users/ishirav/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishirav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishirav/subscriptions", "organizations_url": "https://api.github.com/users/ishirav/orgs", "repos_url": "https://api.github.com/users/ishirav/repos", "events_url": "https://api.github.com/users/ishirav/events{/privacy}", "received_events_url": "https://api.github.com/users/ishirav/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258739222, "node_id": "MDU6TGFiZWwyNTg3MzkyMjI=", "url": "https://api.github.com/repos/bigjason/django-choices/labels/Bug", "name": "Bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-10T14:18:32Z", "updated_at": "2015-09-10T19:27:32Z", "closed_at": "2015-09-10T19:14:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `pip install django-choices` in a clean virtualenv I'm getting this error:\n\n```\n  Downloading django-choices-1.4.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/tmp/pip-build-EUbJR5/django-choices/setup.py\", line 11, in <module>\n        from djchoices import __version__\n      File \"djchoices/__init__.py\", line 1, in <module>\n        from djchoices.choices import ChoiceItem, DjangoChoices, C\n      File \"djchoices/choices.py\", line 2, in <module>\n        from django.core.exceptions import ValidationError\n    ImportError: No module named django.core.exceptions\n\n```\n\nThe traceback shows that setup.py imports `__version__`, and this causes a premature import of djchoices.choices .\n\nThe bad import was added here: https://github.com/bigjason/django-choices/commit/9e640f6dd89a9824e0fd8e524a53069f57b7f017\n\nI think that if you want to import the version in setup.py, you should move it to a separate file (one that does not cause djchoices.choices to get imported)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/22", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/22/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/22/events", "html_url": "https://github.com/bigjason/django-choices/issues/22", "id": 103503156, "node_id": "MDU6SXNzdWUxMDM1MDMxNTY=", "number": 22, "title": "Active maintainer needed", "user": {"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-27T13:02:35Z", "updated_at": "2015-08-28T12:08:07Z", "closed_at": "2015-08-27T21:26:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "From the time it takes before PR's get noticed, and even worse, to upload new versions to PyPI, I think it's clear that is project can be considered abandoned by @bigjason. @dokterbob can still be reached, but he has no PyPI privileges and from what I understand also a lack of time to really support this project.\n\nSo, I'd like to volunteer to take over this project's maintenance. Unless @bigjason contacts me (I've tried contacting him already, with no avail), in the coming week I'll make an official fork of this repo and upload to PyPI under a slightly different name (probably django-choices2). I would then ask @dokterbob to change the readme (or accept a PR) to point people from this repo to the maintained version.\n\nThe current PyPI version will break in Django 1.9, would be a shame for this project to go away since it's really useful for clear Choices.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/18", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/18/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/18/events", "html_url": "https://github.com/bigjason/django-choices/issues/18", "id": 42305322, "node_id": "MDU6SXNzdWU0MjMwNTMyMg==", "number": 18, "title": "Unable to use value=0 anymore", "user": {"login": "vladvasiliu", "id": 175579, "node_id": "MDQ6VXNlcjE3NTU3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/175579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladvasiliu", "html_url": "https://github.com/vladvasiliu", "followers_url": "https://api.github.com/users/vladvasiliu/followers", "following_url": "https://api.github.com/users/vladvasiliu/following{/other_user}", "gists_url": "https://api.github.com/users/vladvasiliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladvasiliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladvasiliu/subscriptions", "organizations_url": "https://api.github.com/users/vladvasiliu/orgs", "repos_url": "https://api.github.com/users/vladvasiliu/repos", "events_url": "https://api.github.com/users/vladvasiliu/events{/privacy}", "received_events_url": "https://api.github.com/users/vladvasiliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-09T13:23:21Z", "updated_at": "2014-09-09T13:31:53Z", "closed_at": "2014-09-09T13:31:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nYour august 9 update breaks previous code when the choice value is 0.\nWhen value is 0, it uses the label as value.\n\nRegards,\nVlad\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/15", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/15/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/15/events", "html_url": "https://github.com/bigjason/django-choices/issues/15", "id": 36957716, "node_id": "MDU6SXNzdWUzNjk1NzcxNg==", "number": 15, "title": "validator will brick with django 1.7 migrations", "user": {"login": "minddust", "id": 1268978, "node_id": "MDQ6VXNlcjEyNjg5Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1268978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minddust", "html_url": "https://github.com/minddust", "followers_url": "https://api.github.com/users/minddust/followers", "following_url": "https://api.github.com/users/minddust/following{/other_user}", "gists_url": "https://api.github.com/users/minddust/gists{/gist_id}", "starred_url": "https://api.github.com/users/minddust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minddust/subscriptions", "organizations_url": "https://api.github.com/users/minddust/orgs", "repos_url": "https://api.github.com/users/minddust/repos", "events_url": "https://api.github.com/users/minddust/events{/privacy}", "received_events_url": "https://api.github.com/users/minddust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-02T07:21:27Z", "updated_at": "2015-08-29T19:04:32Z", "closed_at": "2015-08-29T19:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nraise ValueError(\"Cannot serialize: %r\\nThere are some values Django cannot serialize into migration files.\\nFor more, see https://docs.djangoproject.com/en/dev/topics/migrations/#migration-serializing\" % value)\nValueError: Cannot serialize: <bound method DjangoChoicesMeta.validator of <class 'md.apps.notifications.models.NotificationType'>>\nThere are some values Django cannot serialize into migration files.\nFor more, see https://docs.djangoproject.com/en/dev/topics/migrations/#migration-serializing\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/14", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/14/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/14/events", "html_url": "https://github.com/bigjason/django-choices/issues/14", "id": 36627387, "node_id": "MDU6SXNzdWUzNjYyNzM4Nw==", "number": 14, "title": "new package release?", "user": {"login": "minddust", "id": 1268978, "node_id": "MDQ6VXNlcjEyNjg5Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1268978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minddust", "html_url": "https://github.com/minddust", "followers_url": "https://api.github.com/users/minddust/followers", "following_url": "https://api.github.com/users/minddust/following{/other_user}", "gists_url": "https://api.github.com/users/minddust/gists{/gist_id}", "starred_url": "https://api.github.com/users/minddust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minddust/subscriptions", "organizations_url": "https://api.github.com/users/minddust/orgs", "repos_url": "https://api.github.com/users/minddust/repos", "events_url": "https://api.github.com/users/minddust/events{/privacy}", "received_events_url": "https://api.github.com/users/minddust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-27T00:35:19Z", "updated_at": "2014-07-02T07:02:51Z", "closed_at": "2014-07-02T05:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "pypi still list 1.1.12 (which doesn't have validator support)\n\nnew release would be great!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/10", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/10/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/10/events", "html_url": "https://github.com/bigjason/django-choices/issues/10", "id": 15969933, "node_id": "MDU6SXNzdWUxNTk2OTkzMw==", "number": 10, "title": "Empty label not possible?", "user": {"login": "marekmalek", "id": 1080280, "node_id": "MDQ6VXNlcjEwODAyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1080280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marekmalek", "html_url": "https://github.com/marekmalek", "followers_url": "https://api.github.com/users/marekmalek/followers", "following_url": "https://api.github.com/users/marekmalek/following{/other_user}", "gists_url": "https://api.github.com/users/marekmalek/gists{/gist_id}", "starred_url": "https://api.github.com/users/marekmalek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marekmalek/subscriptions", "organizations_url": "https://api.github.com/users/marekmalek/orgs", "repos_url": "https://api.github.com/users/marekmalek/repos", "events_url": "https://api.github.com/users/marekmalek/events{/privacy}", "received_events_url": "https://api.github.com/users/marekmalek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-06-25T09:59:38Z", "updated_at": "2013-06-28T10:49:57Z", "closed_at": "2013-06-28T10:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just noticed that it's impossible to have a choice item with empty label:\n\n```\nclass MyChoices(DjangoChoices):\n    empty = ChoiceItem(\"\", \"\")\n    opt1 = ChoiceItem(\"opt1\")\n```\n\nas a result I'm getting:\n\n```\n<select>\n<option value=\"\">empty</option>\n<option value=\"opt1\">opt1</option>\n</select>\n```\n\ninstead of:\n\n```\n<select>\n<option value=\"\"></option>\n<option value=\"opt1\">opt1</option>\n</select>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/4", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/4/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/4/events", "html_url": "https://github.com/bigjason/django-choices/issues/4", "id": 6337417, "node_id": "MDU6SXNzdWU2MzM3NDE3", "number": 4, "title": "Setup.py imports djchoices (with requirements)", "user": {"login": "dokterbob", "id": 22742, "node_id": "MDQ6VXNlcjIyNzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/22742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dokterbob", "html_url": "https://github.com/dokterbob", "followers_url": "https://api.github.com/users/dokterbob/followers", "following_url": "https://api.github.com/users/dokterbob/following{/other_user}", "gists_url": "https://api.github.com/users/dokterbob/gists{/gist_id}", "starred_url": "https://api.github.com/users/dokterbob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dokterbob/subscriptions", "organizations_url": "https://api.github.com/users/dokterbob/orgs", "repos_url": "https://api.github.com/users/dokterbob/repos", "events_url": "https://api.github.com/users/dokterbob/events{/privacy}", "received_events_url": "https://api.github.com/users/dokterbob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-20T22:04:05Z", "updated_at": "2013-02-21T21:39:55Z", "closed_at": "2013-02-21T21:39:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Because setup.py imports djchoices to get the version, which imports the actual modules in this package, the setup cannot be executed without djchoices' dependencies installed, one of them being Django. In some situations, this means that an automated install with `pip install -r requirements.txt` will fail because Django needs to be installed first.\n\nPerhaps it would make sense to specify the version elsewhere - perhaps even directly in `setup.py` - or to engineer your imports of `VERSIONS` such that they do not require a full import of the package. For this reason (avoiding implicit imports) it is usually wise to avoid using the `__ALL__` pattern and going for explicit module imports most of the time.\n\nAnyways, let me know what you think. I could possibly help you out with a pull request for this one - but the design decision's yours. ^^\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bigjason/django-choices/issues/2", "repository_url": "https://api.github.com/repos/bigjason/django-choices", "labels_url": "https://api.github.com/repos/bigjason/django-choices/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/bigjason/django-choices/issues/2/comments", "events_url": "https://api.github.com/repos/bigjason/django-choices/issues/2/events", "html_url": "https://github.com/bigjason/django-choices/issues/2", "id": 3809358, "node_id": "MDU6SXNzdWUzODA5MzU4", "number": 2, "title": "Internationalization impossible with choice names?", "user": {"login": "dokterbob", "id": 22742, "node_id": "MDQ6VXNlcjIyNzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/22742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dokterbob", "html_url": "https://github.com/dokterbob", "followers_url": "https://api.github.com/users/dokterbob/followers", "following_url": "https://api.github.com/users/dokterbob/following{/other_user}", "gists_url": "https://api.github.com/users/dokterbob/gists{/gist_id}", "starred_url": "https://api.github.com/users/dokterbob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dokterbob/subscriptions", "organizations_url": "https://api.github.com/users/dokterbob/orgs", "repos_url": "https://api.github.com/users/dokterbob/repos", "events_url": "https://api.github.com/users/dokterbob/events{/privacy}", "received_events_url": "https://api.github.com/users/dokterbob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-03-26T14:19:41Z", "updated_at": "2016-03-24T13:23:25Z", "closed_at": "2015-09-10T14:23:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Looking at your code example it seems the fact that the property name declares the string rendering of the choice, which is a pity as this makes it impossible (or at least very hard) to make them translatable.\n\nA proper solution might be to do it the other way around, making it look somewhat like this:\n\n```\nclass PersonType(DjangoChoices):\n    c = ChoiceItem(_('Customer'))\n    e = ChoiceItem(_('Employee'))\n    g = ChoiceItem(_('Groundhog'))\n```\n", "performed_via_github_app": null, "score": 1.0}]}