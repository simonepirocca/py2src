{"total_count": 6, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/86", "repository_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py", "labels_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/86/comments", "events_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/86/events", "html_url": "https://github.com/yeraydiazdiaz/lunr.py/issues/86", "id": 678564781, "node_id": "MDU6SXNzdWU2Nzg1NjQ3ODE=", "number": 86, "title": "Lunr.py Performance", "user": {"login": "GabrielGhe", "id": 5266128, "node_id": "MDQ6VXNlcjUyNjYxMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5266128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GabrielGhe", "html_url": "https://github.com/GabrielGhe", "followers_url": "https://api.github.com/users/GabrielGhe/followers", "following_url": "https://api.github.com/users/GabrielGhe/following{/other_user}", "gists_url": "https://api.github.com/users/GabrielGhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/GabrielGhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GabrielGhe/subscriptions", "organizations_url": "https://api.github.com/users/GabrielGhe/orgs", "repos_url": "https://api.github.com/users/GabrielGhe/repos", "events_url": "https://api.github.com/users/GabrielGhe/events{/privacy}", "received_events_url": "https://api.github.com/users/GabrielGhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T16:22:13Z", "updated_at": "2020-08-13T17:12:56Z", "closed_at": "2020-08-13T17:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran the same query on lunr.js and lunr.py to test the performance and the python implementation is 4x slower.\r\n\r\nI think it could be fixed by using multiprocessing but it still might not match javascript's speed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/82", "repository_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py", "labels_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/82/comments", "events_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/82/events", "html_url": "https://github.com/yeraydiazdiaz/lunr.py/issues/82", "id": 660026012, "node_id": "MDU6SXNzdWU2NjAwMjYwMTI=", "number": 82, "title": "Docs around interoperability with Lunr.js", "user": {"login": "yeraydiazdiaz", "id": 6739793, "node_id": "MDQ6VXNlcjY3Mzk3OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6739793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeraydiazdiaz", "html_url": "https://github.com/yeraydiazdiaz", "followers_url": "https://api.github.com/users/yeraydiazdiaz/followers", "following_url": "https://api.github.com/users/yeraydiazdiaz/following{/other_user}", "gists_url": "https://api.github.com/users/yeraydiazdiaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeraydiazdiaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeraydiazdiaz/subscriptions", "organizations_url": "https://api.github.com/users/yeraydiazdiaz/orgs", "repos_url": "https://api.github.com/users/yeraydiazdiaz/repos", "events_url": "https://api.github.com/users/yeraydiazdiaz/events{/privacy}", "received_events_url": "https://api.github.com/users/yeraydiazdiaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-18T09:11:12Z", "updated_at": "2020-07-18T11:02:07Z", "closed_at": "2020-07-18T11:02:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Related https://github.com/yeraydiazdiaz/lunr.py/issues/78\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/80", "repository_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py", "labels_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/80/comments", "events_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/80/events", "html_url": "https://github.com/yeraydiazdiaz/lunr.py/issues/80", "id": 655315789, "node_id": "MDU6SXNzdWU2NTUzMTU3ODk=", "number": 80, "title": "Minimizing index file size?", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T02:16:00Z", "updated_at": "2020-07-18T09:31:50Z", "closed_at": "2020-07-18T09:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you recommend any ways to minimize the size of the serialized index file?\r\n\r\nI'm testing creation of a Lunr index with 30,000 documents, and even after 300 documents are loaded, the serialized index file is over 40 MB. I was hoping to use lunr.py to build an index file server-side, then load this client-side to implement site wide text search. However, this large filesize makes Lunr infeasible. The index filesize for all 30,000 documents would likely be in the GB, that would be impractical to load in the browser.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/79", "repository_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py", "labels_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/79/comments", "events_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/79/events", "html_url": "https://github.com/yeraydiazdiaz/lunr.py/issues/79", "id": 655286175, "node_id": "MDU6SXNzdWU2NTUyODYxNzU=", "number": 79, "title": "Update existing index?", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-11T21:56:00Z", "updated_at": "2020-07-18T09:17:44Z", "closed_at": "2020-07-18T09:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the code in `__main__.py`, it looks like an index has to be created in a batch, and can't be incrementally updated. Is this correct?\r\n\r\nIs there any way to add a new document to an index without having to retrieve all documents and pass them in as a list to `lunr()`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/78", "repository_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py", "labels_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/78/comments", "events_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/78/events", "html_url": "https://github.com/yeraydiazdiaz/lunr.py/issues/78", "id": 655273691, "node_id": "MDU6SXNzdWU2NTUyNzM2OTE=", "number": 78, "title": "How to export serialized indexes?", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-11T20:26:15Z", "updated_at": "2020-07-18T09:11:36Z", "closed_at": "2020-07-13T03:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In your README, you write, \"Lunr.py provides a backend solution, allowing you to parse the documents ahead of time and create a Lunr.js compatible index you can pass have the browser version read, minimizing start up time of your application.\"\r\n\r\nThis is exactly what I'd like to do. However, aside from this brief mention, I can find no [documentation](https://lunr.readthedocs.io/en/latest/) on how to do this. There's a lot of great example on how to create indexes in Python, but it's unclear how to save or export these indexes for use elsewhere, like you describe.\r\n\r\nIs serialization currently supported by lunr.py? If so, how do you export a serialized index suitable for loading into lunr.js?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/68", "repository_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py", "labels_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/68/comments", "events_url": "https://api.github.com/repos/yeraydiazdiaz/lunr.py/issues/68/events", "html_url": "https://github.com/yeraydiazdiaz/lunr.py/issues/68", "id": 555219774, "node_id": "MDU6SXNzdWU1NTUyMTk3NzQ=", "number": 68, "title": "Dependabot couldn't fetch all your path-based dependencies", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-26T12:13:54Z", "updated_at": "2020-01-26T12:16:18Z", "closed_at": "2020-01-26T12:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dependabot couldn't fetch one or more of your project's path-based Python dependencies. The affected dependencies were `requirements/setup.py`.\n\nTo use path-based dependencies with Dependabot the paths must be relative and resolve to a directory in this project's source code.\n\n[View the update logs](https://app.dependabot.com/accounts/yeraydiazdiaz/update-logs/21525768).", "performed_via_github_app": null, "score": 1.0}]}