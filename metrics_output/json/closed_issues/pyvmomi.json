{"total_count": 327, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/vmware/pyvmomi/issues/921", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/921/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/921/events", "html_url": "https://github.com/vmware/pyvmomi/issues/921", "id": 680206992, "node_id": "MDU6SXNzdWU2ODAyMDY5OTI=", "number": 921, "title": "how can i get only vm powered on ", "user": {"login": "victorh972", "id": 67958946, "node_id": "MDQ6VXNlcjY3OTU4OTQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/67958946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorh972", "html_url": "https://github.com/victorh972", "followers_url": "https://api.github.com/users/victorh972/followers", "following_url": "https://api.github.com/users/victorh972/following{/other_user}", "gists_url": "https://api.github.com/users/victorh972/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorh972/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorh972/subscriptions", "organizations_url": "https://api.github.com/users/victorh972/orgs", "repos_url": "https://api.github.com/users/victorh972/repos", "events_url": "https://api.github.com/users/victorh972/events{/privacy}", "received_events_url": "https://api.github.com/users/victorh972/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-17T12:44:01Z", "updated_at": "2020-08-17T13:55:47Z", "closed_at": "2020-08-17T13:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello guys, what i want is to print only all vm poweredOn  the others vm poweredOff \r\nDoes not interest me. how can i do that ? please\r\nwith python", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/916", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/916/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/916/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/916/events", "html_url": "https://github.com/vmware/pyvmomi/issues/916", "id": 669681984, "node_id": "MDU6SXNzdWU2Njk2ODE5ODQ=", "number": 916, "title": "Esxi 7 support", "user": {"login": "darox", "id": 9934402, "node_id": "MDQ6VXNlcjk5MzQ0MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9934402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darox", "html_url": "https://github.com/darox", "followers_url": "https://api.github.com/users/darox/followers", "following_url": "https://api.github.com/users/darox/following{/other_user}", "gists_url": "https://api.github.com/users/darox/gists{/gist_id}", "starred_url": "https://api.github.com/users/darox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darox/subscriptions", "organizations_url": "https://api.github.com/users/darox/orgs", "repos_url": "https://api.github.com/users/darox/repos", "events_url": "https://api.github.com/users/darox/events{/privacy}", "received_events_url": "https://api.github.com/users/darox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-31T10:44:51Z", "updated_at": "2020-08-06T12:54:52Z", "closed_at": "2020-08-06T12:53:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Starting from Esxi 7 on I can't connect to the esxi node anymore:\r\n\r\nTraceback (most recent call last):\r\n  File \"esxi-1-list-vms.py\", line 35, in <module>\r\n    vconnect()\r\n  File \"esxi-1-list-vms.py\", line 15, in vconnect\r\n    sslContext=s)\r\n  File \"/home/dario/.local/lib/python3.7/site-packages/pyVim/connect.py\", line 847, in SmartConnect\r\n    sslContext)\r\n  File \"/home/dario/.local/lib/python3.7/site-packages/pyVim/connect.py\", line 726, in __FindSupportedVersion\r\n    httpProxyPort)\r\n  File \"/home/dario/.local/lib/python3.7/site-packages/pyVim/connect.py\", line 643, in __GetServiceVersionDescription\r\n    httpProxyHost, httpProxyPort)\r\n  File \"/home/dario/.local/lib/python3.7/site-packages/pyVim/connect.py\", line 608, in __GetElementTree\r\n    conn.request(\"GET\", path)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1252, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1298, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1247, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 966, in send\r\n    self.connect()\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1422, in connect\r\n    server_hostname=server_hostname)\r\n  File \"/usr/lib/python3.7/ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"/usr/lib/python3.7/ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"/usr/lib/python3.7/ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n\r\n\r\nIs Esxi 7 supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/913", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/913/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/913/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/913/events", "html_url": "https://github.com/vmware/pyvmomi/issues/913", "id": 657843145, "node_id": "MDU6SXNzdWU2NTc4NDMxNDU=", "number": 913, "title": "Retrieving files from datastore", "user": {"login": "sh1dow3r", "id": 29131514, "node_id": "MDQ6VXNlcjI5MTMxNTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/29131514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh1dow3r", "html_url": "https://github.com/sh1dow3r", "followers_url": "https://api.github.com/users/sh1dow3r/followers", "following_url": "https://api.github.com/users/sh1dow3r/following{/other_user}", "gists_url": "https://api.github.com/users/sh1dow3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh1dow3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh1dow3r/subscriptions", "organizations_url": "https://api.github.com/users/sh1dow3r/orgs", "repos_url": "https://api.github.com/users/sh1dow3r/repos", "events_url": "https://api.github.com/users/sh1dow3r/events{/privacy}", "received_events_url": "https://api.github.com/users/sh1dow3r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-16T04:42:16Z", "updated_at": "2020-07-22T12:01:16Z", "closed_at": "2020-07-22T12:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using pyvmomi library, if the server has been snapshotted is it possible to retrieve files from datastore such as \".vmem\" and \"vmsn\". \r\nIn the script sample 'export_vm' I was able to retrive only 3 files, 'vmdk', 'iso' and 'nvram'\r\nhttps://github.com/vmware/pyvmomi-community-samples/blob/master/samples/export_vm.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/893", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/893/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/893/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/893/events", "html_url": "https://github.com/vmware/pyvmomi/issues/893", "id": 601409568, "node_id": "MDU6SXNzdWU2MDE0MDk1Njg=", "number": 893, "title": "host.Capability.checkpointFtSupported missing ", "user": {"login": "goneri", "id": 49379, "node_id": "MDQ6VXNlcjQ5Mzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/49379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goneri", "html_url": "https://github.com/goneri", "followers_url": "https://api.github.com/users/goneri/followers", "following_url": "https://api.github.com/users/goneri/following{/other_user}", "gists_url": "https://api.github.com/users/goneri/gists{/gist_id}", "starred_url": "https://api.github.com/users/goneri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goneri/subscriptions", "organizations_url": "https://api.github.com/users/goneri/orgs", "repos_url": "https://api.github.com/users/goneri/repos", "events_url": "https://api.github.com/users/goneri/events{/privacy}", "received_events_url": "https://api.github.com/users/goneri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T20:01:32Z", "updated_at": "2020-04-16T20:47:12Z", "closed_at": "2020-04-16T20:47:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @pgbidkar,\r\n\r\nSince v7.0 `vim.host.Capability` does not expose the following attributes anymore:\r\n- `checkpointFtSupported`\r\n- `checkpointFtCompatibilityIssues`\r\n\r\nIs this done on purpose?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/885", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/885/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/885/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/885/events", "html_url": "https://github.com/vmware/pyvmomi/issues/885", "id": 593077598, "node_id": "MDU6SXNzdWU1OTMwNzc1OTg=", "number": 885, "title": "PbmCheckRollupCompliance not working with vSphere 7.0", "user": {"login": "cspnanda", "id": 1474416, "node_id": "MDQ6VXNlcjE0NzQ0MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1474416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cspnanda", "html_url": "https://github.com/cspnanda", "followers_url": "https://api.github.com/users/cspnanda/followers", "following_url": "https://api.github.com/users/cspnanda/following{/other_user}", "gists_url": "https://api.github.com/users/cspnanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/cspnanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cspnanda/subscriptions", "organizations_url": "https://api.github.com/users/cspnanda/orgs", "repos_url": "https://api.github.com/users/cspnanda/repos", "events_url": "https://api.github.com/users/cspnanda/events{/privacy}", "received_events_url": "https://api.github.com/users/cspnanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-03T04:59:42Z", "updated_at": "2020-04-03T16:27:30Z", "closed_at": "2020-04-03T16:14:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having issues while calling PBM Method PbmCheckRollupCompliance against vSphere 7.0. Here is the code\r\n\r\n```\r\nfrom pyVmomi import vim, pbm\r\nfrom pyVim.connect import SoapStubAdapter\r\n\r\nclient_stub = vc_si._GetStub()\r\nsession_cookie = client_stub.cookie.split('\"')[1]\r\nssl_context = client_stub.schemeArgs.get('context')\r\nadditional_headers = {'vcSessionCookie': session_cookie}\r\nstub = SoapStubAdapter(host=hostname, path=\"/pbm/sdk\", version=\"pbm.version.version2\",\r\n                                              sslContext=ssl_context, requestContext=additional_headers)\r\npbm_si = pbm.ServiceInstance(\"ServiceInstance\", stub)\r\npbm_content = pbm_si.PbmRetrieveServiceContent()\r\npbm_object_ref = pbm.ServerObjectRef(key=str(vm._moId), objectType=\"virtualMachine\", serverUuid=vc_si.content.about.instanceUuid)\r\ncompliance_manager = pbm_content.complianceManager\r\nresults = compliance_manager.PbmCheckRollupCompliance(entity=[pbm_object_ref])\r\n```\r\n\r\nThe error is below\r\n\r\n```\r\nFile \\\"/usr/local/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\\\", line 706, in <lambda>\\n    self.f(*(self.args + (obj,) + args), **kwargs)\\n  \r\nFile \\\"/usr/local/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\\\", line 512, in _InvokeMethod\\n    return self._stub.InvokeMethod(self, info, args)\\n  \r\nFile \\\"/usr/local/lib/python2.7/site-packages/pyVmomi/SoapAdapter.py\\\", line 1388, in InvokeMethod\\n    \r\nraise exc\\npyVmomi.SoapAdapter.ParserError: 'xml document: <httplib.HTTPResponse instance at 0x104021098> parse error at: line:1, col:731'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/878", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/878/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/878/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/878/events", "html_url": "https://github.com/vmware/pyvmomi/issues/878", "id": 561853657, "node_id": "MDU6SXNzdWU1NjE4NTM2NTc=", "number": 878, "title": "deleting parent snapshot deletes all children", "user": {"login": "sonalfulkar", "id": 13058831, "node_id": "MDQ6VXNlcjEzMDU4ODMx", "avatar_url": "https://avatars1.githubusercontent.com/u/13058831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonalfulkar", "html_url": "https://github.com/sonalfulkar", "followers_url": "https://api.github.com/users/sonalfulkar/followers", "following_url": "https://api.github.com/users/sonalfulkar/following{/other_user}", "gists_url": "https://api.github.com/users/sonalfulkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonalfulkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonalfulkar/subscriptions", "organizations_url": "https://api.github.com/users/sonalfulkar/orgs", "repos_url": "https://api.github.com/users/sonalfulkar/repos", "events_url": "https://api.github.com/users/sonalfulkar/events{/privacy}", "received_events_url": "https://api.github.com/users/sonalfulkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-07T20:24:41Z", "updated_at": "2020-02-07T20:49:49Z", "closed_at": "2020-02-07T20:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am working on remove snapshot functionality. I understand that vmware has parent child relationship in all snapshot objects.\r\nso, if i have snapshots like:\r\n- snapshot A\r\n     - snapshot B\r\n           - snapshot C\r\nIf i run removeSnapshot_Task with \"snapshot A\"; my snapshot B and snapshot C are also removed.\r\nhow to avoid it?\r\nI need to keep the child snapshots and only delete the parent.\r\nIs that possible? can someone please point me to the related code / example?\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/877", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/877/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/877/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/877/events", "html_url": "https://github.com/vmware/pyvmomi/issues/877", "id": 559726330, "node_id": "MDU6SXNzdWU1NTk3MjYzMzA=", "number": 877, "title": "I'm looking for SRM API support with pyvmomi module.", "user": {"login": "ravic499", "id": 30371896, "node_id": "MDQ6VXNlcjMwMzcxODk2", "avatar_url": "https://avatars3.githubusercontent.com/u/30371896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ravic499", "html_url": "https://github.com/ravic499", "followers_url": "https://api.github.com/users/ravic499/followers", "following_url": "https://api.github.com/users/ravic499/following{/other_user}", "gists_url": "https://api.github.com/users/ravic499/gists{/gist_id}", "starred_url": "https://api.github.com/users/ravic499/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ravic499/subscriptions", "organizations_url": "https://api.github.com/users/ravic499/orgs", "repos_url": "https://api.github.com/users/ravic499/repos", "events_url": "https://api.github.com/users/ravic499/events{/privacy}", "received_events_url": "https://api.github.com/users/ravic499/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-04T13:40:11Z", "updated_at": "2020-02-04T17:20:48Z", "closed_at": "2020-02-04T17:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking for SRM API support with pyvmomi module (Similar to what we have for SPBM APIs).\r\nI tried searching but not able to find any, can someone help me with it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/871", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/871/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/871/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/871/events", "html_url": "https://github.com/vmware/pyvmomi/issues/871", "id": 549788943, "node_id": "MDU6SXNzdWU1NDk3ODg5NDM=", "number": 871, "title": "Traffic Filtering and marking issue", "user": {"login": "cisco7507", "id": 12837444, "node_id": "MDQ6VXNlcjEyODM3NDQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/12837444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cisco7507", "html_url": "https://github.com/cisco7507", "followers_url": "https://api.github.com/users/cisco7507/followers", "following_url": "https://api.github.com/users/cisco7507/following{/other_user}", "gists_url": "https://api.github.com/users/cisco7507/gists{/gist_id}", "starred_url": "https://api.github.com/users/cisco7507/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cisco7507/subscriptions", "organizations_url": "https://api.github.com/users/cisco7507/orgs", "repos_url": "https://api.github.com/users/cisco7507/repos", "events_url": "https://api.github.com/users/cisco7507/events{/privacy}", "received_events_url": "https://api.github.com/users/cisco7507/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T20:05:58Z", "updated_at": "2020-01-15T23:24:14Z", "closed_at": "2020-01-15T23:24:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm Trying to set up a basic example of a filtering rule for a Distributed port group with VMware switch. This runs just fine, no errors, except the rule is not  created. I can see the port group reconfigured in venter's task window but no traffic rules is listed in the PG configuration.\r\nAny ideas as to what could be  happening  here?\r\n\r\n<paste> \r\nfrom pyVim.connect import Disconnect, SmartConnectNoSSL, SmartConnect\r\nfrom pyVmomi import vim, vmodl\r\nfrom community_samples.samples.tools import cli\r\n\r\n\r\ndef get_obj(content, vimtype, name):\r\n    obj = None\r\n    container = content.viewManager.CreateContainerView(\r\n        content.rootFolder, vimtype, True\r\n    )\r\n    for c in container.view:\r\n        if c.name == name:\r\n            obj = c\r\n            break\r\n    return obj\r\n\r\n\r\nhost = 'myhostname'\r\nuser = 'administrator@vsphere.local'\r\npwd = 'somedumbpasswd!'\r\nport = 443\r\nvdsSwitchName = 'apitestdvs'\r\nvdsPGName = 'DPortGroup'\r\n\r\nservice_instance = SmartConnectNoSSL(host=host, user=user, pwd=pwd, port=port)\r\ncontent = service_instance.RetrieveContent()\r\n\r\nds = get_obj(content, [vim.dvs.VmwareDistributedVirtualSwitch], vdsSwitchName)\r\npg = get_obj(content, [vim.DistributedVirtualPortgroup], vdsPGName)\r\n\r\n######\r\n\r\n\r\naction = vim.DvsAcceptNetworkRuleAction  # https://code.vmware.com/apis/196/vsphere/doc/vim.dvs.TrafficRule.Action.html\r\nall_qualifiers = []\r\nqualifier = vim.dvs.TrafficRule.IpQualifier\r\nqualifier.sourceAddress = vim.IpRange\r\nqualifier.sourceAddress.addressPrefix = '192.168.7.0'\r\nqualifier.sourceAddress.prefixLength = 16\r\nqualifier.protocol = vim.IntExpression\r\nqualifier.protocol.value = 6\r\nqualifier.destinationAddress = vim.SingleIp\r\nqualifier.destinationAddress.address = '192.168.7.121'\r\nqualifier.destinationIpPort = vim.dvs.TrafficRule.IpPortRange\r\nqualifier.destinationIpPort.startPortNumber = 1024\r\nqualifier.destinationIpPort.endPortNumber = 2048\r\nall_qualifiers.append(qualifier)\r\n# https://code.vmware.com/apis/196/vsphere/doc/vim.dvs.TrafficRule.html\r\nall_rules = []\r\nrule = vim.dvs.TrafficRule\r\nrule.description = 'Rule added by Script'\r\nrule.direction = 'both'\r\nrule.sequence = 10\r\nrule.qualifier = all_qualifiers\r\nrule.action = action\r\nall_rules.append(rule)\r\n\r\nruleset = vim.dvs.TrafficRuleset\r\nruleset.enabled = True\r\nruleset.rules = all_rules\r\n\r\n\r\ntraffic_filter = vim.dvs.DistributedVirtualPort.TrafficFilterConfig()\r\ntraffic_filter.inherited = False\r\ntraffic_filter.trafficRuleset = ruleset()\r\ntraffic_filter.inherited = False\r\n\r\n\r\ntraffic_filter.agentName = 'dvfilter-generic-vmware'\r\ntraffic_filter.inherited = False\r\ntraffic_filter.onFailure = 'failOpen'\r\n\r\n\r\nspec = vim.dvs.DistributedVirtualPortgroup.ConfigSpec()\r\nspec.configVersion = pg.config.configVersion\r\nspec.defaultPortConfig = vim.dvs.DistributedVirtualPort.Setting()\r\nspec.defaultPortConfig.filterPolicy = vim.dvs.DistributedVirtualPort.FilterPolicy()\r\nspec.defaultPortConfig.filterPolicy.filterConfig = [traffic_filter]\r\n\r\npg.ReconfigureDVPortgroup_Task(spec)\r\n\r\n </paste>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/869", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/869/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/869/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/869/events", "html_url": "https://github.com/vmware/pyvmomi/issues/869", "id": 546457747, "node_id": "MDU6SXNzdWU1NDY0NTc3NDc=", "number": 869, "title": "pyvmomi is not Python3 compatible", "user": {"login": "abhiraut", "id": 1462844, "node_id": "MDQ6VXNlcjE0NjI4NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1462844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhiraut", "html_url": "https://github.com/abhiraut", "followers_url": "https://api.github.com/users/abhiraut/followers", "following_url": "https://api.github.com/users/abhiraut/following{/other_user}", "gists_url": "https://api.github.com/users/abhiraut/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhiraut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhiraut/subscriptions", "organizations_url": "https://api.github.com/users/abhiraut/orgs", "repos_url": "https://api.github.com/users/abhiraut/repos", "events_url": "https://api.github.com/users/abhiraut/events{/privacy}", "received_events_url": "https://api.github.com/users/abhiraut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-07T19:13:10Z", "updated_at": "2020-01-09T21:21:18Z", "closed_at": "2020-01-09T21:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The sso.py module has statements which are not compatible with python3. It is also possible that there are other modules within the code base which are not compatible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/867", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/867/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/867/events", "html_url": "https://github.com/vmware/pyvmomi/issues/867", "id": 537044489, "node_id": "MDU6SXNzdWU1MzcwNDQ0ODk=", "number": 867, "title": "How to vMotion from vSAN Datastore to Datastore", "user": {"login": "willervinNTS", "id": 53794492, "node_id": "MDQ6VXNlcjUzNzk0NDky", "avatar_url": "https://avatars2.githubusercontent.com/u/53794492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willervinNTS", "html_url": "https://github.com/willervinNTS", "followers_url": "https://api.github.com/users/willervinNTS/followers", "following_url": "https://api.github.com/users/willervinNTS/following{/other_user}", "gists_url": "https://api.github.com/users/willervinNTS/gists{/gist_id}", "starred_url": "https://api.github.com/users/willervinNTS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willervinNTS/subscriptions", "organizations_url": "https://api.github.com/users/willervinNTS/orgs", "repos_url": "https://api.github.com/users/willervinNTS/repos", "events_url": "https://api.github.com/users/willervinNTS/events{/privacy}", "received_events_url": "https://api.github.com/users/willervinNTS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-12T15:22:39Z", "updated_at": "2019-12-13T21:19:57Z", "closed_at": "2019-12-13T21:19:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I opened an issue on this about a month ago (https://github.com/vmware/pyvmomi/issues/860) and got no response. The information I provided might have made the issue a little to complicated. Does anyone know how I vMotion VCSA from a vSAN Datastore to a Datastore that I have created on a new ESX host? This would be the equivalent of right-clicking a VCSA VM, clicking Migrate -> Change both compute resource and storage -> Selecting compute resource -> Selecting storage -> Selecting network -> Selecting vMotion priority ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/864", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/864/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/864/events", "html_url": "https://github.com/vmware/pyvmomi/issues/864", "id": 527102568, "node_id": "MDU6SXNzdWU1MjcxMDI1Njg=", "number": 864, "title": "How are you using pyvmomi?", "user": {"login": "kumahesh", "id": 45584927, "node_id": "MDQ6VXNlcjQ1NTg0OTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/45584927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumahesh", "html_url": "https://github.com/kumahesh", "followers_url": "https://api.github.com/users/kumahesh/followers", "following_url": "https://api.github.com/users/kumahesh/following{/other_user}", "gists_url": "https://api.github.com/users/kumahesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumahesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumahesh/subscriptions", "organizations_url": "https://api.github.com/users/kumahesh/orgs", "repos_url": "https://api.github.com/users/kumahesh/repos", "events_url": "https://api.github.com/users/kumahesh/events{/privacy}", "received_events_url": "https://api.github.com/users/kumahesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1691798895, "node_id": "MDU6TGFiZWwxNjkxNzk4ODk1", "url": "https://api.github.com/repos/vmware/pyvmomi/labels/poll", "name": "poll", "color": "d458e8", "default": false, "description": "This label helps to create polling in the forum"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-22T10:05:34Z", "updated_at": "2019-12-06T15:38:35Z", "closed_at": "2019-12-04T09:42:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys,\r\nHow are you using pyVmomi? What is your favorite IDE for python?\r\n1. pyCharm\r\n2. Visual Studio code\r\n3. Netbeans\r\n4. Eclipse\r\n5. python REPL\r\n6. others, please specify\r\n\r\nPlease respond to this poll. It help us to build IDE specific customization around pyVmomi and usability around it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/863", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/863/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/863/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/863/events", "html_url": "https://github.com/vmware/pyvmomi/issues/863", "id": 526451482, "node_id": "MDU6SXNzdWU1MjY0NTE0ODI=", "number": 863, "title": "vmware_guest: Cannot create a single VM on standalone ESXi", "user": {"login": "wioch", "id": 29070885, "node_id": "MDQ6VXNlcjI5MDcwODg1", "avatar_url": "https://avatars1.githubusercontent.com/u/29070885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wioch", "html_url": "https://github.com/wioch", "followers_url": "https://api.github.com/users/wioch/followers", "following_url": "https://api.github.com/users/wioch/following{/other_user}", "gists_url": "https://api.github.com/users/wioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/wioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wioch/subscriptions", "organizations_url": "https://api.github.com/users/wioch/orgs", "repos_url": "https://api.github.com/users/wioch/repos", "events_url": "https://api.github.com/users/wioch/events{/privacy}", "received_events_url": "https://api.github.com/users/wioch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-21T08:57:18Z", "updated_at": "2019-11-21T11:56:57Z", "closed_at": "2019-11-21T11:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\n**SUMMARY**\r\nI'm trying to create a single VM on standalone ESXi  (no vcenter here) with vmware_guest module. Task execution ends with error. \r\n\r\n**ISSUE TYPE**\r\nPossible bug. \r\n\r\n**ENVIROMENT**\r\n```\r\nansible 2.9.0\r\n  config file = /etc/ansible/ansible.cfg\r\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\r\n  executable location = /usr/bin/ansible\r\n  python version = 2.7.5 (default, Aug  7 2019, 00:51:29) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\r\n\r\nPyVmomi 6.7.3\r\nCentOS Linux release 7.7.1908 (Core)\r\nVMware ESXi 6.7.0 Update 2 (Build 13981272)\r\n```\r\n\r\n**STEPS TO REPRODUCE**\r\nTaks I'm using:\r\n```\r\n- name: Create a virtual machine on given ESXi hostname\r\n  vmware_guest:\r\n    hostname: \"10.20.204.86\"\r\n    username: \"root\"\r\n    password: \"somepass\"\r\n    esxi_hostname: \"sgw999vmhost01\"\r\n    validate_certs: no\r\n    folder: /\r\n    name: test_vm_0001\r\n    state: poweredoff\r\n    guest_id: \"centos7_test01\"\r\n    disk:\r\n    - size_gb: 100\r\n      type: thin\r\n      datastore: VSE_datastore\r\n    hardware:\r\n      memory_mb: 2048\r\n      num_cpus: 2\r\n      scsi: paravirtual\r\n    networks:\r\n    - name: VM Network\r\n      device_type: vmxnet3\r\n    wait_for_ip_address: yes\r\n  delegate_to: localhost\r\n  register: deploy_vm\r\n```\r\n\r\n**EXPECTED RESULTS**\r\nOne created virtual machine. \r\n\r\n**ACTUAL RESULTS**\r\n```\r\n \"msg\": \"Unable to find host \\\"sgw999vmhost01\\\"\"\r\n```\r\n\r\n**QUESTIONS**\r\nSo... how the task should look like to create a single VM on standalone ESXi ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/861", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/861/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/861/events", "html_url": "https://github.com/vmware/pyvmomi/issues/861", "id": 523117490, "node_id": "MDU6SXNzdWU1MjMxMTc0OTA=", "number": 861, "title": "Can someone explain get_service_instance_from_managed_object?", "user": {"login": "blinkesto", "id": 37516719, "node_id": "MDQ6VXNlcjM3NTE2NzE5", "avatar_url": "https://avatars1.githubusercontent.com/u/37516719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blinkesto", "html_url": "https://github.com/blinkesto", "followers_url": "https://api.github.com/users/blinkesto/followers", "following_url": "https://api.github.com/users/blinkesto/following{/other_user}", "gists_url": "https://api.github.com/users/blinkesto/gists{/gist_id}", "starred_url": "https://api.github.com/users/blinkesto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blinkesto/subscriptions", "organizations_url": "https://api.github.com/users/blinkesto/orgs", "repos_url": "https://api.github.com/users/blinkesto/repos", "events_url": "https://api.github.com/users/blinkesto/events{/privacy}", "received_events_url": "https://api.github.com/users/blinkesto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-14T21:34:57Z", "updated_at": "2019-12-04T09:41:46Z", "closed_at": "2019-12-04T09:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like some operations use _get_si() to get a connection but others use the si from an existing object?  Is this correct? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/860", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/860/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/860/events", "html_url": "https://github.com/vmware/pyvmomi/issues/860", "id": 522959650, "node_id": "MDU6SXNzdWU1MjI5NTk2NTA=", "number": 860, "title": "vMotion VCSA Storage is only relocating .vmdk files", "user": {"login": "willervinNTS", "id": 53794492, "node_id": "MDQ6VXNlcjUzNzk0NDky", "avatar_url": "https://avatars2.githubusercontent.com/u/53794492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willervinNTS", "html_url": "https://github.com/willervinNTS", "followers_url": "https://api.github.com/users/willervinNTS/followers", "following_url": "https://api.github.com/users/willervinNTS/following{/other_user}", "gists_url": "https://api.github.com/users/willervinNTS/gists{/gist_id}", "starred_url": "https://api.github.com/users/willervinNTS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willervinNTS/subscriptions", "organizations_url": "https://api.github.com/users/willervinNTS/orgs", "repos_url": "https://api.github.com/users/willervinNTS/repos", "events_url": "https://api.github.com/users/willervinNTS/events{/privacy}", "received_events_url": "https://api.github.com/users/willervinNTS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T16:13:13Z", "updated_at": "2019-12-13T19:23:38Z", "closed_at": "2019-12-13T19:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone. I'm attempting to vMotion VCSA from a vSAN Datastore to a Datastore on an ESX Host. I originally tried a `vm.Migrate()` but after reading issue https://github.com/vmware/pyvmomi/issues/401 I've been testing with `vm.Relocate()`. \r\n\r\nI've been successful running the task manually through vCenter and was able to get a PowerShell script through Code Capture. This is what it looks like per disk in PowerShell:\r\n\r\n`$spec = New-Object VMware.Vim.VirtualMachineRelocateSpec\r\n\r\n$spec.Disk = New-Object VMware.Vim.VirtualMachineRelocateSpecDiskLocator[] (13)\r\n\r\n$spec.Disk[0] = New-Object VMware.Vim.VirtualMachineRelocateSpecDiskLocator\r\n\r\n$spec.Disk[0].DiskBackingInfo = New-Object VMware.Vim.VirtualDiskFlatVer2BackingInfo\r\n\r\n$spec.Disk[0].DiskBackingInfo.FileName = ''\r\n\r\n$spec.Disk[0].DiskBackingInfo.EagerlyScrub = $false\r\n\r\n$spec.Disk[0].DiskBackingInfo.ThinProvisioned = $true\r\n\r\n$spec.Disk[0].DiskBackingInfo.DiskMode = ''\r\n\r\n$spec.Disk[0].Datastore = New-Object VMware.Vim.ManagedObjectReference\r\n\r\n$spec.Disk[0].Datastore.Type = 'Datastore'\r\n\r\n$spec.Disk[0].Datastore.Value = 'datastore-11'\r\n\r\n$spec.Disk[0].DiskId = 2000`\r\n\r\nUsing this information I've been looking at this script: https://github.com/vmware/pyvmomi-community-samples/blob/master/samples/relocate_vm.py for help converting the PowerShell to Python. In the `construct_locator(template_disks, datastore_dest_id)` method I've made these changes:\r\n       \r\nlocator = vim.vm.RelocateSpec.DiskLocator()\r\n\r\nlocator.diskBackingInfo = wdisk.backing\r\n\r\nlocator.diskBackingInfo.eagerlyScrub = False\r\n\r\nlocator.diskBackingInfo.thinProvisioned = True\r\n\r\nlocator.diskBackingInfo.diskMode = ''\r\n\r\nlocator.diskId = int(wdisk.key)\r\n\r\nlocator.datastore = datastore_dest_id\r\n\r\nds_disk.append(locator)\r\n\r\n\r\nThis for some reason only moves the .vmdk files to the new Datastore and everything else remains on the vSAN Datastore. There was nothing else in the PowerShell script from code capture that attempted to locate or vMotion any other files. Any help on this issue would be much appreciated. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/858", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/858/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/858/events", "html_url": "https://github.com/vmware/pyvmomi/issues/858", "id": 522148800, "node_id": "MDU6SXNzdWU1MjIxNDg4MDA=", "number": 858, "title": "How to apply storage profile after update it", "user": {"login": "veeravel-vsv", "id": 17877098, "node_id": "MDQ6VXNlcjE3ODc3MDk4", "avatar_url": "https://avatars1.githubusercontent.com/u/17877098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veeravel-vsv", "html_url": "https://github.com/veeravel-vsv", "followers_url": "https://api.github.com/users/veeravel-vsv/followers", "following_url": "https://api.github.com/users/veeravel-vsv/following{/other_user}", "gists_url": "https://api.github.com/users/veeravel-vsv/gists{/gist_id}", "starred_url": "https://api.github.com/users/veeravel-vsv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veeravel-vsv/subscriptions", "organizations_url": "https://api.github.com/users/veeravel-vsv/orgs", "repos_url": "https://api.github.com/users/veeravel-vsv/repos", "events_url": "https://api.github.com/users/veeravel-vsv/events{/privacy}", "received_events_url": "https://api.github.com/users/veeravel-vsv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T11:33:44Z", "updated_at": "2019-11-13T11:41:39Z", "closed_at": "2019-11-13T11:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a scenario to apply update the storage profile and apply to it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/856", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/856/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/856/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/856/events", "html_url": "https://github.com/vmware/pyvmomi/issues/856", "id": 517587294, "node_id": "MDU6SXNzdWU1MTc1ODcyOTQ=", "number": 856, "title": "How to get the host kernel version", "user": {"login": "kinzun", "id": 26301257, "node_id": "MDQ6VXNlcjI2MzAxMjU3", "avatar_url": "https://avatars3.githubusercontent.com/u/26301257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinzun", "html_url": "https://github.com/kinzun", "followers_url": "https://api.github.com/users/kinzun/followers", "following_url": "https://api.github.com/users/kinzun/following{/other_user}", "gists_url": "https://api.github.com/users/kinzun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinzun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinzun/subscriptions", "organizations_url": "https://api.github.com/users/kinzun/orgs", "repos_url": "https://api.github.com/users/kinzun/repos", "events_url": "https://api.github.com/users/kinzun/events{/privacy}", "received_events_url": "https://api.github.com/users/kinzun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-05T07:12:44Z", "updated_at": "2019-11-05T15:35:04Z", "closed_at": "2019-11-05T15:35:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to get the host kernel version? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/853", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/853/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/853/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/853/events", "html_url": "https://github.com/vmware/pyvmomi/issues/853", "id": 514851134, "node_id": "MDU6SXNzdWU1MTQ4NTExMzQ=", "number": 853, "title": "Applying Advance Settings Issue", "user": {"login": "caseysalvador", "id": 15254543, "node_id": "MDQ6VXNlcjE1MjU0NTQz", "avatar_url": "https://avatars0.githubusercontent.com/u/15254543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caseysalvador", "html_url": "https://github.com/caseysalvador", "followers_url": "https://api.github.com/users/caseysalvador/followers", "following_url": "https://api.github.com/users/caseysalvador/following{/other_user}", "gists_url": "https://api.github.com/users/caseysalvador/gists{/gist_id}", "starred_url": "https://api.github.com/users/caseysalvador/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caseysalvador/subscriptions", "organizations_url": "https://api.github.com/users/caseysalvador/orgs", "repos_url": "https://api.github.com/users/caseysalvador/repos", "events_url": "https://api.github.com/users/caseysalvador/events{/privacy}", "received_events_url": "https://api.github.com/users/caseysalvador/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-30T17:27:23Z", "updated_at": "2019-11-07T12:24:59Z", "closed_at": "2019-11-07T12:24:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having an issue trying to run update_esxi_advanced_settings.py\r\nThe issue I'm having is when I input the host information and credentials and try to authenticate the ESXi host, I'm receiving a Caught exception : 'NoneType' object has no attribute 'host'. To clarify, we do not have a cluster everything is being run locally. While looking over the script it appears that it's trying to query the host from the cluster information you parse in as -c for arguments. I don't parse the -c option since we don't have it in a cluster. Any way around this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/846", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/846/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/846/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/846/events", "html_url": "https://github.com/vmware/pyvmomi/issues/846", "id": 508055376, "node_id": "MDU6SXNzdWU1MDgwNTUzNzY=", "number": 846, "title": "how to create a pyvmomi Array object using VmomiSupport.py", "user": {"login": "umaparvat", "id": 22497050, "node_id": "MDQ6VXNlcjIyNDk3MDUw", "avatar_url": "https://avatars1.githubusercontent.com/u/22497050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umaparvat", "html_url": "https://github.com/umaparvat", "followers_url": "https://api.github.com/users/umaparvat/followers", "following_url": "https://api.github.com/users/umaparvat/following{/other_user}", "gists_url": "https://api.github.com/users/umaparvat/gists{/gist_id}", "starred_url": "https://api.github.com/users/umaparvat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umaparvat/subscriptions", "organizations_url": "https://api.github.com/users/umaparvat/orgs", "repos_url": "https://api.github.com/users/umaparvat/repos", "events_url": "https://api.github.com/users/umaparvat/events{/privacy}", "received_events_url": "https://api.github.com/users/umaparvat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T19:35:02Z", "updated_at": "2019-10-21T15:34:57Z", "closed_at": "2019-10-21T15:34:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "i've a list of vim.dvs.EntityBackup.Config object , how do i convert it into vim.dvs.EntityBackup.Config[] in pyvmomi code\r\n\r\narray_type = GetVmodlType(\"vim.dvs.EntityBackup.Config\").Array\r\narray_type.Item= mylist\r\n\r\nnow how to get the output format as below. if i try str(array_type) throws the error that list does not have attribute __name__.\r\n\r\n(vim.dvs.EntityBackup.Config) [\r\n (vim.dvs.EntityBackup.Config){ },  (vim.dvs.EntityBackup.Config){ }, ]\r\n\r\nNotes: Trying this one in VMware HOL labs\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/845", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/845/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/845/events", "html_url": "https://github.com/vmware/pyvmomi/issues/845", "id": 505954051, "node_id": "MDU6SXNzdWU1MDU5NTQwNTE=", "number": 845, "title": "Add a method for VMware System to fetch Notes on a VM via API", "user": {"login": "kedark3", "id": 8180469, "node_id": "MDQ6VXNlcjgxODA0Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8180469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kedark3", "html_url": "https://github.com/kedark3", "followers_url": "https://api.github.com/users/kedark3/followers", "following_url": "https://api.github.com/users/kedark3/following{/other_user}", "gists_url": "https://api.github.com/users/kedark3/gists{/gist_id}", "starred_url": "https://api.github.com/users/kedark3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kedark3/subscriptions", "organizations_url": "https://api.github.com/users/kedark3/orgs", "repos_url": "https://api.github.com/users/kedark3/repos", "events_url": "https://api.github.com/users/kedark3/events{/privacy}", "received_events_url": "https://api.github.com/users/kedark3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T16:45:16Z", "updated_at": "2019-10-11T18:09:37Z", "closed_at": "2019-10-11T18:09:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently wrapanapi is not supporting ability to read notes on a VM. We need to add that as it would be required for the test in the PR https://github.com/ManageIQ/integration_tests/pull/9463/files \r\nCurrently it is added as a TODO to fix the test case once this wrapanapi issue is resolved.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/844", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/844/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/844/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/844/events", "html_url": "https://github.com/vmware/pyvmomi/issues/844", "id": 504624099, "node_id": "MDU6SXNzdWU1MDQ2MjQwOTk=", "number": 844, "title": "Error 32 EPIPE when uploading an iso", "user": {"login": "gvcgael", "id": 8297137, "node_id": "MDQ6VXNlcjgyOTcxMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8297137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvcgael", "html_url": "https://github.com/gvcgael", "followers_url": "https://api.github.com/users/gvcgael/followers", "following_url": "https://api.github.com/users/gvcgael/following{/other_user}", "gists_url": "https://api.github.com/users/gvcgael/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvcgael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvcgael/subscriptions", "organizations_url": "https://api.github.com/users/gvcgael/orgs", "repos_url": "https://api.github.com/users/gvcgael/repos", "events_url": "https://api.github.com/users/gvcgael/events{/privacy}", "received_events_url": "https://api.github.com/users/gvcgael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-09T12:37:21Z", "updated_at": "2019-10-29T06:56:03Z", "closed_at": "2019-10-29T06:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe are tring to use th example [here](https://code.vmware.com/samples/583/upload-file-to-datastore#code) tu upload an iso to the datastore (hosted on vCenter 6.7).\r\n\r\nWe are receiving a weird error, maybe you have some idea ?\r\n\r\n```Traceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 317, in _send_until_done\r\n    return self.connection.send(data)\r\n  File \"/usr/local/lib/python3.7/dist-packages/OpenSSL/SSL.py\", line 1737, in send\r\n    self._raise_ssl_error(self._ssl, result)\r\n  File \"/usr/local/lib/python3.7/dist-packages/OpenSSL/SSL.py\", line 1639, in _raise_ssl_error\r\n    raise SysCallError(errno, errorcode.get(errno))\r\nOpenSSL.SSL.SysCallError: (32, 'EPIPE')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 328, in sendall\r\n    sent = self._send_until_done(data[total_sent:total_sent + SSL_WRITE_BLOCKSIZE])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 323, in _send_until_done\r\n    raise SocketError(str(e))\r\nOSError: (32, 'EPIPE')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/util/retry.py\", line 367, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/lib/python3/dist-packages/six.py\", line 692, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 328, in sendall\r\n    sent = self._send_until_done(data[total_sent:total_sent + SSL_WRITE_BLOCKSIZE])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 323, in _send_until_done\r\n    raise SocketError(str(e))\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', OSError(\"(32, 'EPIPE')\"))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./shell/pyvmomi-community-samples-master/samples/upload_file_to_datastore.py\", line 141, in <module>\r\n    main()\r\n  File \"./shell/pyvmomi-community-samples-master/samples/upload_file_to_datastore.py\", line 131, in main\r\n    verify=verify_cert)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 131, in put\r\n    return request('put', url, data=data, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 60, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', OSError(\"(32, 'EPIPE')\"))\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso#\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso#\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso# bash ./shell/copy_iso_datastore.sh\r\nCould not connect to the specified host using specified username and password\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso# bash ./shell/copy_iso_datastore.sh\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 317, in _send_until_done\r\n    return self.connection.send(data)\r\n  File \"/usr/local/lib/python3.7/dist-packages/OpenSSL/SSL.py\", line 1737, in send\r\n    self._raise_ssl_error(self._ssl, result)\r\n  File \"/usr/local/lib/python3.7/dist-packages/OpenSSL/SSL.py\", line 1639, in _raise_ssl_error\r\n    raise SysCallError(errno, errorcode.get(errno))\r\nOpenSSL.SSL.SysCallError: (32, 'EPIPE')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 328, in sendall\r\n    sent = self._send_until_done(data[total_sent:total_sent + SSL_WRITE_BLOCKSIZE])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 323, in _send_until_done\r\n    raise SocketError(str(e))\r\nOSError: (32, 'EPIPE')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/util/retry.py\", line 367, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/lib/python3/dist-packages/six.py\", line 692, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 328, in sendall\r\n    sent = self._send_until_done(data[total_sent:total_sent + SSL_WRITE_BLOCKSIZE])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 323, in _send_until_done\r\n    raise SocketError(str(e))\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', OSError(\"(32, 'EPIPE')\"))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./shell/pyvmomi-community-samples-master/samples/upload_file_to_datastore.py\", line 141, in <module>\r\n    main()\r\n  File \"./shell/pyvmomi-community-samples-master/samples/upload_file_to_datastore.py\", line 131, in main\r\n    verify=verify_cert)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 131, in put\r\n    return request('put', url, data=data, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 60, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', OSError(\"(32, 'EPIPE')\"))\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso#\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso#\r\nroot@mm2016-env:/mnt/mm2016/centos76_iso# bash ./shell/copy_iso_datastore.sh\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 317, in _send_until_done\r\n    return self.connection.send(data)\r\n  File \"/usr/local/lib/python3.7/dist-packages/OpenSSL/SSL.py\", line 1737, in send\r\n    self._raise_ssl_error(self._ssl, result)\r\n  File \"/usr/local/lib/python3.7/dist-packages/OpenSSL/SSL.py\", line 1639, in _raise_ssl_error\r\n    raise SysCallError(errno, errorcode.get(errno))\r\nOpenSSL.SSL.SysCallError: (32, 'EPIPE')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 328, in sendall\r\n    sent = self._send_until_done(data[total_sent:total_sent + SSL_WRITE_BLOCKSIZE])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 323, in _send_until_done\r\n    raise SocketError(str(e))\r\nOSError: (32, 'EPIPE')\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/util/retry.py\", line 367, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/usr/lib/python3/dist-packages/six.py\", line 692, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/connectionpool.py\", line 354, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1055, in _send_output\r\n    self.send(chunk)\r\n  File \"/usr/lib/python3.7/http/client.py\", line 977, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 328, in sendall\r\n    sent = self._send_until_done(data[total_sent:total_sent + SSL_WRITE_BLOCKSIZE])\r\n  File \"/usr/lib/python3/dist-packages/urllib3/contrib/pyopenssl.py\", line 323, in _send_until_done\r\n    raise SocketError(str(e))\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', OSError(\"(32, 'EPIPE')\"))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./shell/pyvmomi-community-samples-master/samples/upload_file_to_datastore.py\", line 141, in <module>\r\n    main()\r\n  File \"./shell/pyvmomi-community-samples-master/samples/upload_file_to_datastore.py\", line 131, in main\r\n    verify=verify_cert)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 131, in put\r\n    return request('put', url, data=data, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/api.py\", line 60, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/requests/adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', OSError(\"(32, 'EPIPE')\"))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/840", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/840/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/840/events", "html_url": "https://github.com/vmware/pyvmomi/issues/840", "id": 494316871, "node_id": "MDU6SXNzdWU0OTQzMTY4NzE=", "number": 840, "title": " Support for VMware Update Manager", "user": {"login": "acpatric", "id": 55160709, "node_id": "MDQ6VXNlcjU1MTYwNzA5", "avatar_url": "https://avatars1.githubusercontent.com/u/55160709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acpatric", "html_url": "https://github.com/acpatric", "followers_url": "https://api.github.com/users/acpatric/followers", "following_url": "https://api.github.com/users/acpatric/following{/other_user}", "gists_url": "https://api.github.com/users/acpatric/gists{/gist_id}", "starred_url": "https://api.github.com/users/acpatric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acpatric/subscriptions", "organizations_url": "https://api.github.com/users/acpatric/orgs", "repos_url": "https://api.github.com/users/acpatric/repos", "events_url": "https://api.github.com/users/acpatric/events{/privacy}", "received_events_url": "https://api.github.com/users/acpatric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-16T23:01:27Z", "updated_at": "2019-09-25T06:29:36Z", "closed_at": "2019-09-25T06:29:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nAre there plans to support APIs using VUM to update hosts/clusters?  Right now I'm unable to find any pyvmomi support for this.  If there is, can you point me to it?  There seems to only be support in PowerCLI on Windows.\r\n\r\nThanks, appreciate any insight you can give.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/838", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/838/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/838/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/838/events", "html_url": "https://github.com/vmware/pyvmomi/issues/838", "id": 493859786, "node_id": "MDU6SXNzdWU0OTM4NTk3ODY=", "number": 838, "title": "How to upload license file", "user": {"login": "schua1", "id": 8475226, "node_id": "MDQ6VXNlcjg0NzUyMjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8475226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schua1", "html_url": "https://github.com/schua1", "followers_url": "https://api.github.com/users/schua1/followers", "following_url": "https://api.github.com/users/schua1/following{/other_user}", "gists_url": "https://api.github.com/users/schua1/gists{/gist_id}", "starred_url": "https://api.github.com/users/schua1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schua1/subscriptions", "organizations_url": "https://api.github.com/users/schua1/orgs", "repos_url": "https://api.github.com/users/schua1/repos", "events_url": "https://api.github.com/users/schua1/events{/privacy}", "received_events_url": "https://api.github.com/users/schua1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "kumahesh", "id": 45584927, "node_id": "MDQ6VXNlcjQ1NTg0OTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/45584927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumahesh", "html_url": "https://github.com/kumahesh", "followers_url": "https://api.github.com/users/kumahesh/followers", "following_url": "https://api.github.com/users/kumahesh/following{/other_user}", "gists_url": "https://api.github.com/users/kumahesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumahesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumahesh/subscriptions", "organizations_url": "https://api.github.com/users/kumahesh/orgs", "repos_url": "https://api.github.com/users/kumahesh/repos", "events_url": "https://api.github.com/users/kumahesh/events{/privacy}", "received_events_url": "https://api.github.com/users/kumahesh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kumahesh", "id": 45584927, "node_id": "MDQ6VXNlcjQ1NTg0OTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/45584927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kumahesh", "html_url": "https://github.com/kumahesh", "followers_url": "https://api.github.com/users/kumahesh/followers", "following_url": "https://api.github.com/users/kumahesh/following{/other_user}", "gists_url": "https://api.github.com/users/kumahesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kumahesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kumahesh/subscriptions", "organizations_url": "https://api.github.com/users/kumahesh/orgs", "repos_url": "https://api.github.com/users/kumahesh/repos", "events_url": "https://api.github.com/users/kumahesh/events{/privacy}", "received_events_url": "https://api.github.com/users/kumahesh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-09-16T05:55:12Z", "updated_at": "2019-10-10T06:23:33Z", "closed_at": "2019-10-07T07:19:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nIn older version pyVmomi SDK the instance of type LicenseAssignmentManager under path service_instance.content.licenseManager has a method named UploadLicenseFile then I just checked the reference and found this API is not avaiable any more.\r\nMy question is how I can upload license file with this method calling.\r\n\r\nThanks and best regards,\r\nFlik", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/837", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/837/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/837/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/837/events", "html_url": "https://github.com/vmware/pyvmomi/issues/837", "id": 493370739, "node_id": "MDU6SXNzdWU0OTMzNzA3Mzk=", "number": 837, "title": "Tests fail with python2 and version 6.7.3", "user": {"login": "rapgro", "id": 8060894, "node_id": "MDQ6VXNlcjgwNjA4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8060894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rapgro", "html_url": "https://github.com/rapgro", "followers_url": "https://api.github.com/users/rapgro/followers", "following_url": "https://api.github.com/users/rapgro/following{/other_user}", "gists_url": "https://api.github.com/users/rapgro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rapgro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rapgro/subscriptions", "organizations_url": "https://api.github.com/users/rapgro/orgs", "repos_url": "https://api.github.com/users/rapgro/repos", "events_url": "https://api.github.com/users/rapgro/events{/privacy}", "received_events_url": "https://api.github.com/users/rapgro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-13T14:55:41Z", "updated_at": "2019-10-01T06:11:36Z", "closed_at": "2019-10-01T06:11:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Several tests don't work any more with version 6.7.3, e.g.:\r\n\r\n```\r\nBUILDSTDERR: ERROR: test_ssl_tunnel (tests.test_connect.ConnectionTests)\r\nBUILDSTDERR: ----------------------------------------------------------------------\r\nBUILDSTDERR: Traceback (most recent call last):\r\nBUILDSTDERR:   File \"/usr/lib/python2.7/site-packages/vcr/cassette.py\", line 98, in __call__\r\nBUILDSTDERR:     return function(*args, **kwargs)\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/pyvmomi-6.7.3/tests/test_connect.py\", line 96, in test_ssl_tunnel\r\nBUILDSTDERR:     connect.SoapStubAdapter('sdkTunnel', 8089, httpProxyHost='vcsa').GetConnection()\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/pyvmomi-6.7.3/pyVmomi/SoapAdapter.py\", line 1428, in GetConnection\r\nBUILDSTDERR:     result = self.scheme(self.host, **self.schemeArgs)\r\nBUILDSTDERR:   File \"/builddir/build/BUILD/pyvmomi-6.7.3/pyVmomi/SoapAdapter.py\", line 1123, in __call__\r\nBUILDSTDERR:     conn.set_tunnel(self.proxyPath)\r\nBUILDSTDERR: AttributeError: 'VCRHTTPSConnection/builddir/build/BUILD/pyvmomi-6.' object has no attribute 'set_tunnel'\r\n```\r\n\r\nFor now, I decided to stop support for the python2 subpackage in EPEL7 (addons repository for RHEL7 and CentOS7) in favour of python3 with its own subpackage.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/834", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/834/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/834/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/834/events", "html_url": "https://github.com/vmware/pyvmomi/issues/834", "id": 489562362, "node_id": "MDU6SXNzdWU0ODk1NjIzNjI=", "number": 834, "title": "How to get all VM.name  fast on vsphere with pyVmomi6.7.1?", "user": {"login": "shrekee", "id": 35474431, "node_id": "MDQ6VXNlcjM1NDc0NDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/35474431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shrekee", "html_url": "https://github.com/shrekee", "followers_url": "https://api.github.com/users/shrekee/followers", "following_url": "https://api.github.com/users/shrekee/following{/other_user}", "gists_url": "https://api.github.com/users/shrekee/gists{/gist_id}", "starred_url": "https://api.github.com/users/shrekee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shrekee/subscriptions", "organizations_url": "https://api.github.com/users/shrekee/orgs", "repos_url": "https://api.github.com/users/shrekee/repos", "events_url": "https://api.github.com/users/shrekee/events{/privacy}", "received_events_url": "https://api.github.com/users/shrekee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-05T06:52:45Z", "updated_at": "2019-09-17T02:19:48Z", "closed_at": "2019-09-17T02:12:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\nIn a vshpere server, there are thousands of VMs. I really want to find that How to quickly get a list of VM.name (do not want to traverse all VM methods to get, because the speed is too slow)\r\n\r\nIs there any quick way? For example, within 1 second get all VM.name?\r\n\r\nThe following is a method of traversing to get the name of the VM, and too slow.\r\n\r\n`def get_obj(self, content, vimtype, name):\r\n\r\n        container = content.viewManager.CreateContainerView(\r\n            content.rootFolder, [vimtype], True)\r\n        for c in container.view:\r\n            if name:\r\n                if c.name == name:\r\n                    obj = c`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/833", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/833/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/833/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/833/events", "html_url": "https://github.com/vmware/pyvmomi/issues/833", "id": 488765071, "node_id": "MDU6SXNzdWU0ODg3NjUwNzE=", "number": 833, "title": "raw device mapping - invalid configuration for device '0'", "user": {"login": "sandrich", "id": 1625557, "node_id": "MDQ6VXNlcjE2MjU1NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1625557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrich", "html_url": "https://github.com/sandrich", "followers_url": "https://api.github.com/users/sandrich/followers", "following_url": "https://api.github.com/users/sandrich/following{/other_user}", "gists_url": "https://api.github.com/users/sandrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrich/subscriptions", "organizations_url": "https://api.github.com/users/sandrich/orgs", "repos_url": "https://api.github.com/users/sandrich/repos", "events_url": "https://api.github.com/users/sandrich/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-03T18:49:06Z", "updated_at": "2019-09-05T06:01:10Z", "closed_at": "2019-09-05T06:01:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to do a raw device mapping in vsphere 6.5 using pyvmomi but get \"invalid configuration for device 0\"\r\n\r\n```\r\ndisk_spec = vim.vm.device.VirtualDeviceSpec()\r\n    disk_spec.operation = vim.vm.device.VirtualDeviceSpec.Operation.add\r\n    disk_spec.device = vim.vm.device.VirtualDisk()\r\n\r\n    disk_spec.device.backing = vim.vm.device.VirtualDisk.RawDiskMappingVer1BackingInfo()\r\n    disk_spec.device.backing.lunUuid = args.lunuuid\r\n    disk_spec.device.backing.compatibilityMode = 'physicalMode'\r\n    disk_spec.device.controllerKey = 1000\r\n    disk_spec.device.unitNumber = 2\r\n```\r\nAny help would be highly appreciated. The object looks like this\r\n\r\n```\r\n(vim.vm.device.VirtualDeviceSpec) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   operation = 'add',\r\n   fileOperation = <unset>,\r\n   device = (vim.vm.device.VirtualDisk) {\r\n      dynamicType = <unset>,\r\n      dynamicProperty = (vmodl.DynamicProperty) [],\r\n      key = 0,\r\n      deviceInfo = <unset>,\r\n      backing = (vim.vm.device.VirtualDisk.RawDiskMappingVer1BackingInfo) {\r\n         dynamicType = <unset>,\r\n         dynamicProperty = (vmodl.DynamicProperty) [],\r\n         fileName = '',\r\n         datastore = <unset>,\r\n         backingObjectId = <unset>,\r\n         lunUuid = '020000000055cd2e414e3e127a535344534332',\r\n         deviceName = 'vml.020000000055cd2e414e3e127a535344534332',\r\n         compatibilityMode = 'physicalMode',\r\n         diskMode = 'independent_persistent',\r\n         uuid = <unset>,\r\n         contentId = <unset>,\r\n         changeId = <unset>,\r\n         parent = <unset>,\r\n         deltaDiskFormat = <unset>,\r\n         deltaGrainSize = <unset>,\r\n         sharing = 'sharingNone'\r\n      },\r\n      connectable = <unset>,\r\n      slotInfo = <unset>,\r\n      controllerKey = 1000,\r\n      unitNumber = 2,\r\n      capacityInKB = 0,\r\n      capacityInBytes = <unset>,\r\n      shares = <unset>,\r\n      storageIOAllocation = <unset>,\r\n      diskObjectId = <unset>,\r\n      vFlashCacheConfigInfo = <unset>,\r\n      iofilter = (str) [],\r\n      vDiskId = <unset>,\r\n      nativeUnmanagedLinkedClone = <unset>\r\n   },\r\n   profile = (vim.vm.ProfileSpec) [],\r\n   backing = <unset>\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/829", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/829/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/829/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/829/events", "html_url": "https://github.com/vmware/pyvmomi/issues/829", "id": 484416794, "node_id": "MDU6SXNzdWU0ODQ0MTY3OTQ=", "number": 829, "title": "What is the plan to support vSphere 7.0?", "user": {"login": "YeJianXin", "id": 7016867, "node_id": "MDQ6VXNlcjcwMTY4Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7016867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YeJianXin", "html_url": "https://github.com/YeJianXin", "followers_url": "https://api.github.com/users/YeJianXin/followers", "following_url": "https://api.github.com/users/YeJianXin/following{/other_user}", "gists_url": "https://api.github.com/users/YeJianXin/gists{/gist_id}", "starred_url": "https://api.github.com/users/YeJianXin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YeJianXin/subscriptions", "organizations_url": "https://api.github.com/users/YeJianXin/orgs", "repos_url": "https://api.github.com/users/YeJianXin/repos", "events_url": "https://api.github.com/users/YeJianXin/events{/privacy}", "received_events_url": "https://api.github.com/users/YeJianXin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-23T09:05:26Z", "updated_at": "2019-08-28T13:05:19Z", "closed_at": "2019-08-27T06:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\n\r\nAnybody knows the plan to support the vSphere 7.0? thanks in advance!\r\n\r\nRegards,\r\nJason Ye", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/822", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/822/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/822/events", "html_url": "https://github.com/vmware/pyvmomi/issues/822", "id": 481071131, "node_id": "MDU6SXNzdWU0ODEwNzExMzE=", "number": 822, "title": "How to get the basics of a virtual machine", "user": {"login": "kinzun", "id": 26301257, "node_id": "MDQ6VXNlcjI2MzAxMjU3", "avatar_url": "https://avatars3.githubusercontent.com/u/26301257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinzun", "html_url": "https://github.com/kinzun", "followers_url": "https://api.github.com/users/kinzun/followers", "following_url": "https://api.github.com/users/kinzun/following{/other_user}", "gists_url": "https://api.github.com/users/kinzun/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinzun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinzun/subscriptions", "organizations_url": "https://api.github.com/users/kinzun/orgs", "repos_url": "https://api.github.com/users/kinzun/repos", "events_url": "https://api.github.com/users/kinzun/events{/privacy}", "received_events_url": "https://api.github.com/users/kinzun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 104290621, "node_id": "MDU6TGFiZWwxMDQyOTA2MjE=", "url": "https://api.github.com/repos/vmware/pyvmomi/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-15T09:31:48Z", "updated_at": "2019-08-29T01:54:28Z", "closed_at": "2019-08-29T01:54:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Help,\r\npyVmomi. I need to look at the hardware information of the virtual machine in EXSI. Such as hard disk, CPU, memory. Which document should I read? Many thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/821", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/821/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/821/events", "html_url": "https://github.com/vmware/pyvmomi/issues/821", "id": 481002119, "node_id": "MDU6SXNzdWU0ODEwMDIxMTk=", "number": 821, "title": "How can i remove custom values from a vm?", "user": {"login": "chalupaul", "id": 991596, "node_id": "MDQ6VXNlcjk5MTU5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/991596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chalupaul", "html_url": "https://github.com/chalupaul", "followers_url": "https://api.github.com/users/chalupaul/followers", "following_url": "https://api.github.com/users/chalupaul/following{/other_user}", "gists_url": "https://api.github.com/users/chalupaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/chalupaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chalupaul/subscriptions", "organizations_url": "https://api.github.com/users/chalupaul/orgs", "repos_url": "https://api.github.com/users/chalupaul/repos", "events_url": "https://api.github.com/users/chalupaul/events{/privacy}", "received_events_url": "https://api.github.com/users/chalupaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-15T05:40:09Z", "updated_at": "2019-10-01T11:31:08Z", "closed_at": "2019-10-01T11:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems to be that there are only methods to create custom attributes and set them on managed objects, but the methods to delete them don't seem to be there. I tried setting the value to None, but it complains at me. Like, there's vm.setCustomValue(key=tag_name, value=tag_value), but how can I emulate a vm.removeCustomValue() method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/816", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/816/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/816/events", "html_url": "https://github.com/vmware/pyvmomi/issues/816", "id": 471019952, "node_id": "MDU6SXNzdWU0NzEwMTk5NTI=", "number": 816, "title": "How to get provisioned size for vmdk", "user": {"login": "shital1313", "id": 53168568, "node_id": "MDQ6VXNlcjUzMTY4NTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/53168568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shital1313", "html_url": "https://github.com/shital1313", "followers_url": "https://api.github.com/users/shital1313/followers", "following_url": "https://api.github.com/users/shital1313/following{/other_user}", "gists_url": "https://api.github.com/users/shital1313/gists{/gist_id}", "starred_url": "https://api.github.com/users/shital1313/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shital1313/subscriptions", "organizations_url": "https://api.github.com/users/shital1313/orgs", "repos_url": "https://api.github.com/users/shital1313/repos", "events_url": "https://api.github.com/users/shital1313/events{/privacy}", "received_events_url": "https://api.github.com/users/shital1313/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 104290621, "node_id": "MDU6TGFiZWwxMDQyOTA2MjE=", "url": "https://api.github.com/repos/vmware/pyvmomi/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121410266, "node_id": "MDU6TGFiZWwxMjE0MTAyNjY=", "url": "https://api.github.com/repos/vmware/pyvmomi/labels/needs%20test", "name": "needs test", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-22T10:36:18Z", "updated_at": "2019-07-31T09:43:09Z", "closed_at": "2019-07-31T09:43:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "With vm.layoutEx.file, we're able to get list of vmdk with size. But I was not able to get provisioned size. In Case of thin provisioning, I need information: size of vmdk and provisioned size for vmdk", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/815", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/815/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/815/events", "html_url": "https://github.com/vmware/pyvmomi/issues/815", "id": 471016940, "node_id": "MDU6SXNzdWU0NzEwMTY5NDA=", "number": 815, "title": "vmdk file mapping with windows drive letter", "user": {"login": "shital1313", "id": 53168568, "node_id": "MDQ6VXNlcjUzMTY4NTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/53168568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shital1313", "html_url": "https://github.com/shital1313", "followers_url": "https://api.github.com/users/shital1313/followers", "following_url": "https://api.github.com/users/shital1313/following{/other_user}", "gists_url": "https://api.github.com/users/shital1313/gists{/gist_id}", "starred_url": "https://api.github.com/users/shital1313/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shital1313/subscriptions", "organizations_url": "https://api.github.com/users/shital1313/orgs", "repos_url": "https://api.github.com/users/shital1313/repos", "events_url": "https://api.github.com/users/shital1313/events{/privacy}", "received_events_url": "https://api.github.com/users/shital1313/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-22T10:29:07Z", "updated_at": "2019-08-14T09:15:07Z", "closed_at": "2019-08-14T09:15:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need details of vmdk file mapping with windows drive letter. \r\nWith the below methods, I able to get disk info:\r\n_vm.guest.disk        =>  drive, freespace, capacity\r\nvm.layoutEx.file    =>   all datastore items with size._\r\n\r\nI was thinking to map drive with vmdk based on size, but the size information not matching with provisioned size in case of thin provisioning. vmdk size is not displaying provisioned size, it's actual vmdk size.\r\n\r\n**Expected details:**\r\n[datastorename] file3_volume.vmdk     =>      C- drive\r\n[datastorename] file1_volume.vmdk     =>      D- drive\r\n[datastorename] file2_volume.vmdk     =>      E- drive\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/814", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/814/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/814/events", "html_url": "https://github.com/vmware/pyvmomi/issues/814", "id": 469604145, "node_id": "MDU6SXNzdWU0Njk2MDQxNDU=", "number": 814, "title": "Download from Datastore", "user": {"login": "Harish0596", "id": 37104286, "node_id": "MDQ6VXNlcjM3MTA0Mjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/37104286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harish0596", "html_url": "https://github.com/Harish0596", "followers_url": "https://api.github.com/users/Harish0596/followers", "following_url": "https://api.github.com/users/Harish0596/following{/other_user}", "gists_url": "https://api.github.com/users/Harish0596/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harish0596/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harish0596/subscriptions", "organizations_url": "https://api.github.com/users/Harish0596/orgs", "repos_url": "https://api.github.com/users/Harish0596/repos", "events_url": "https://api.github.com/users/Harish0596/events{/privacy}", "received_events_url": "https://api.github.com/users/Harish0596/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 104290621, "node_id": "MDU6TGFiZWwxMDQyOTA2MjE=", "url": "https://api.github.com/repos/vmware/pyvmomi/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-18T07:06:14Z", "updated_at": "2019-08-06T11:56:27Z", "closed_at": "2019-08-06T11:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\n\r\nIs there a python code to download a file from a specific datastore in vSphere using pyvmomi.\r\nKindly help me out on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/813", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/813/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/813/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/813/events", "html_url": "https://github.com/vmware/pyvmomi/issues/813", "id": 469547936, "node_id": "MDU6SXNzdWU0Njk1NDc5MzY=", "number": 813, "title": "Importing SSL Certificates", "user": {"login": "TheNotary", "id": 799247, "node_id": "MDQ6VXNlcjc5OTI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/799247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheNotary", "html_url": "https://github.com/TheNotary", "followers_url": "https://api.github.com/users/TheNotary/followers", "following_url": "https://api.github.com/users/TheNotary/following{/other_user}", "gists_url": "https://api.github.com/users/TheNotary/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheNotary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheNotary/subscriptions", "organizations_url": "https://api.github.com/users/TheNotary/orgs", "repos_url": "https://api.github.com/users/TheNotary/repos", "events_url": "https://api.github.com/users/TheNotary/events{/privacy}", "received_events_url": "https://api.github.com/users/TheNotary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-18T03:01:06Z", "updated_at": "2020-02-26T18:38:07Z", "closed_at": "2020-02-26T14:33:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can pyvmomi be used to import an ssl/ tls certificate?  Monthly certificate rotation is becoming a new technology trend so adding a sample of importing certs would be quite relevant.  \r\n\r\nEdit: \r\nI came across this solution in the mean time which may explain why no one's submitted an example of dealing with certs through pyvmomi or a REST API.\r\n\r\n```\r\n# 1. Copy the certs to ESXi (6.5)\r\nscp fullchain.pem example.com:/etc/vmware/ssl/rui.crt\r\nscp privkey.pem example.com:/etc/vmware/ssl/rui.key\r\n\r\n# 2. Restart the webserver\r\nssh example.com /etc/init.d/rhttpproxy restart\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/811", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/811/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/811/events", "html_url": "https://github.com/vmware/pyvmomi/issues/811", "id": 469121445, "node_id": "MDU6SXNzdWU0NjkxMjE0NDU=", "number": 811, "title": "Problem getting vm's tags on v6.7.1", "user": {"login": "yairshemla", "id": 46296463, "node_id": "MDQ6VXNlcjQ2Mjk2NDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/46296463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yairshemla", "html_url": "https://github.com/yairshemla", "followers_url": "https://api.github.com/users/yairshemla/followers", "following_url": "https://api.github.com/users/yairshemla/following{/other_user}", "gists_url": "https://api.github.com/users/yairshemla/gists{/gist_id}", "starred_url": "https://api.github.com/users/yairshemla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yairshemla/subscriptions", "organizations_url": "https://api.github.com/users/yairshemla/orgs", "repos_url": "https://api.github.com/users/yairshemla/repos", "events_url": "https://api.github.com/users/yairshemla/events{/privacy}", "received_events_url": "https://api.github.com/users/yairshemla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-17T10:46:51Z", "updated_at": "2019-08-14T09:14:53Z", "closed_at": "2019-08-14T09:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, as @jeking3 posted on this thread:\r\nhttps://github.com/vmware/pyvmomi/issues/733\r\nSince v6.7.1 the vm's tags should be attached to the pyVmomi object.\r\nFor some reason I get an empty list: `(vim.Tag) []`\r\nIf I query directly the new API (`/rest/com/vmware/cis/tagging/tag-association?~action=list-attached-tags`) I'm getting the tag_id back: `urn:vmomi:InventoryServiceTag:8b7543da-564a-4ba7-8d24-1f6299aad359:GLOBAL`.\r\n\r\nAm I missing something? Is it possible to get a specific vm's tags through pyVmomi?\r\n\r\nOriginal comment:\r\n\r\nThere were some changes in v6.7.1 for tagging:\r\nhttps://github.com/vmware/pyvmomi/commit/aace16b3257c6d2389554210906f0d63c94ea69e#diff-8fbd2be360383e3b0e54628cfce44c5dL240\r\n\r\nPerhaps this fixed tagging, as now I see tags in the results through pyVmomi:\r\n```\r\n    \"tag\": [\r\n        {\r\n            \"dynamicProperty\": [], \r\n            \"dynamicType\": null, \r\n            \"key\": \"SYSTEM/COM.VMWARE.VIM.VC\"\r\n        }\r\n    ], \r\n```\r\n\r\n_Originally posted by @jeking3 in https://github.com/vmware/pyvmomi/issues/733#issuecomment-434382049_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/809", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/809/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/809/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/809/events", "html_url": "https://github.com/vmware/pyvmomi/issues/809", "id": 468083969, "node_id": "MDU6SXNzdWU0NjgwODM5Njk=", "number": 809, "title": "How to clone vm as-is. No change disks datastores", "user": {"login": "welibekov", "id": 22401997, "node_id": "MDQ6VXNlcjIyNDAxOTk3", "avatar_url": "https://avatars1.githubusercontent.com/u/22401997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/welibekov", "html_url": "https://github.com/welibekov", "followers_url": "https://api.github.com/users/welibekov/followers", "following_url": "https://api.github.com/users/welibekov/following{/other_user}", "gists_url": "https://api.github.com/users/welibekov/gists{/gist_id}", "starred_url": "https://api.github.com/users/welibekov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/welibekov/subscriptions", "organizations_url": "https://api.github.com/users/welibekov/orgs", "repos_url": "https://api.github.com/users/welibekov/repos", "events_url": "https://api.github.com/users/welibekov/events{/privacy}", "received_events_url": "https://api.github.com/users/welibekov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-15T11:51:06Z", "updated_at": "2019-07-18T10:42:05Z", "closed_at": "2019-07-18T10:42:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have vm with two disks, both from different datastores. After clone, vcenter move all two disks to \"recommended\" datastore.\r\nHi, does anyone know, how to clone vm without moving disks to recommended datastore?\r\nAppreciate!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/808", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/808/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/808/events", "html_url": "https://github.com/vmware/pyvmomi/issues/808", "id": 467553610, "node_id": "MDU6SXNzdWU0Njc1NTM2MTA=", "number": 808, "title": "Relocate vm disk datastore only, probably per disk.", "user": {"login": "welibekov", "id": 22401997, "node_id": "MDQ6VXNlcjIyNDAxOTk3", "avatar_url": "https://avatars1.githubusercontent.com/u/22401997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/welibekov", "html_url": "https://github.com/welibekov", "followers_url": "https://api.github.com/users/welibekov/followers", "following_url": "https://api.github.com/users/welibekov/following{/other_user}", "gists_url": "https://api.github.com/users/welibekov/gists{/gist_id}", "starred_url": "https://api.github.com/users/welibekov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/welibekov/subscriptions", "organizations_url": "https://api.github.com/users/welibekov/orgs", "repos_url": "https://api.github.com/users/welibekov/repos", "events_url": "https://api.github.com/users/welibekov/events{/privacy}", "received_events_url": "https://api.github.com/users/welibekov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-12T18:51:40Z", "updated_at": "2019-07-13T13:44:38Z", "closed_at": "2019-07-13T13:44:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, does anyone know, how to relocate disk datastore only.\r\nAnd how to do that per disk? If possible please share code snippet. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/806", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/806/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/806/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/806/events", "html_url": "https://github.com/vmware/pyvmomi/issues/806", "id": 462847358, "node_id": "MDU6SXNzdWU0NjI4NDczNTg=", "number": 806, "title": "Creating RP for a clutser", "user": {"login": "djcutch", "id": 46410638, "node_id": "MDQ6VXNlcjQ2NDEwNjM4", "avatar_url": "https://avatars0.githubusercontent.com/u/46410638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djcutch", "html_url": "https://github.com/djcutch", "followers_url": "https://api.github.com/users/djcutch/followers", "following_url": "https://api.github.com/users/djcutch/following{/other_user}", "gists_url": "https://api.github.com/users/djcutch/gists{/gist_id}", "starred_url": "https://api.github.com/users/djcutch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djcutch/subscriptions", "organizations_url": "https://api.github.com/users/djcutch/orgs", "repos_url": "https://api.github.com/users/djcutch/repos", "events_url": "https://api.github.com/users/djcutch/events{/privacy}", "received_events_url": "https://api.github.com/users/djcutch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-01T18:21:30Z", "updated_at": "2019-07-30T15:36:01Z", "closed_at": "2019-07-30T15:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to create a RP with pyvmomi but am having issues\r\n\r\n# Connect to vCenter Server\r\nsi = SmartConnectNoSSL(host=hostname, user=serverusername, pwd=serverpassword, port=int(443))\r\n\r\n# Disconnect from vCenter upon exit\r\natexit.register(Disconnect, si)\r\n\r\n\r\ndef create_rp(datacenter, clusterName, rpname):\r\n    # ---------------CreateResourcePool---------------\r\n    \r\n    spec = vim.ResourceConfigSpec()\r\n    spec.memoryAllocation = vim.ResourceAllocationInfo()\r\n    spec.memoryAllocation.shares = vim.SharesInfo()\r\n    spec.memoryAllocation.shares.shares = 163840\r\n    spec.memoryAllocation.shares.level = 'normal'\r\n    spec.memoryAllocation.limit = -1\r\n    spec.memoryAllocation.reservation = 0\r\n    spec.memoryAllocation.expandableReservation = True\r\n    spec.cpuAllocation = vim.ResourceAllocationInfo()\r\n    spec.cpuAllocation.shares = vim.SharesInfo()\r\n    spec.cpuAllocation.shares.shares = 4000\r\n    spec.cpuAllocation.shares.level = 'normal'\r\n    spec.cpuAllocation.limit = -1\r\n    spec.cpuAllocation.reservation = 0\r\n    spec.cpuAllocation.expandableReservation = True\r\n    content = si.content\r\n    dc = get_obj(content, vimtype=[vim.Datacenter], name=datacenter)\r\n    cluster = get_obj(content, [vim.ClusterComputeResource], cluster_name)\r\n    rootResourcePool  = cluster.resourcePool\r\n    print('{}'.format(rpname))\r\n    rp_obj = rootResourcePool .CreateResourcePool(rpname, spec)\r\n\r\n\r\n\r\n(ManagedObject) [\r\n   'vim.Datacenter:ha-datacenter'\r\n]\r\n(ManagedObject) []\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 74, in <module>\r\n    create_rp (datacenter, clusterName, rpname)\r\n  File \"test.py\", line 70, in create_rp\r\n    rootResourcePool  = cluster.resourcePool\r\nAttributeError: 'NoneType' object has no attribute 'resourcePool'\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/805", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/805/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/805/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/805/events", "html_url": "https://github.com/vmware/pyvmomi/issues/805", "id": 462640775, "node_id": "MDU6SXNzdWU0NjI2NDA3NzU=", "number": 805, "title": "Can the API create a virtual machine?", "user": {"login": "yJun-Chen", "id": 33723440, "node_id": "MDQ6VXNlcjMzNzIzNDQw", "avatar_url": "https://avatars0.githubusercontent.com/u/33723440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yJun-Chen", "html_url": "https://github.com/yJun-Chen", "followers_url": "https://api.github.com/users/yJun-Chen/followers", "following_url": "https://api.github.com/users/yJun-Chen/following{/other_user}", "gists_url": "https://api.github.com/users/yJun-Chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/yJun-Chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yJun-Chen/subscriptions", "organizations_url": "https://api.github.com/users/yJun-Chen/orgs", "repos_url": "https://api.github.com/users/yJun-Chen/repos", "events_url": "https://api.github.com/users/yJun-Chen/events{/privacy}", "received_events_url": "https://api.github.com/users/yJun-Chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-01T10:39:38Z", "updated_at": "2019-07-29T12:31:00Z", "closed_at": "2019-07-29T12:31:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to create virtual machines in batches using api, but I don't know what to do or I don't know if I have this feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/804", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/804/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/804/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/804/events", "html_url": "https://github.com/vmware/pyvmomi/issues/804", "id": 461392088, "node_id": "MDU6SXNzdWU0NjEzOTIwODg=", "number": 804, "title": "How can I Enable Network I/O Control on a vSphere Distributed Switch ?", "user": {"login": "JackDan9", "id": 12805846, "node_id": "MDQ6VXNlcjEyODA1ODQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/12805846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackDan9", "html_url": "https://github.com/JackDan9", "followers_url": "https://api.github.com/users/JackDan9/followers", "following_url": "https://api.github.com/users/JackDan9/following{/other_user}", "gists_url": "https://api.github.com/users/JackDan9/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackDan9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackDan9/subscriptions", "organizations_url": "https://api.github.com/users/JackDan9/orgs", "repos_url": "https://api.github.com/users/JackDan9/repos", "events_url": "https://api.github.com/users/JackDan9/events{/privacy}", "received_events_url": "https://api.github.com/users/JackDan9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-27T08:33:01Z", "updated_at": "2019-06-28T02:22:31Z", "closed_at": "2019-06-28T02:22:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The DVSFeatureCapability data object represents the capabilities supported by a DistributedVirtualSwitch. These properties are read-only with the exception of vmDirectPathGen2Supported. [https://vdc-download.vmware.com/vmwb-repository/dcr-public/6b586ed2-655c-49d9-9029-bc416323cb22/fa0b429a-a695-4c11-b7d2-2cbc284049dc/doc/vim.DistributedVirtualSwitch.Capability.html](https://vdc-download.vmware.com/vmwb-repository/dcr-public/6b586ed2-655c-49d9-9029-bc416323cb22/fa0b429a-a695-4c11-b7d2-2cbc284049dc/doc/vim.DistributedVirtualSwitch.Capability.html)\r\nHow can i Enable Network I/O Control on a vSphere Distributed Switch ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/803", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/803/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/803/events", "html_url": "https://github.com/vmware/pyvmomi/issues/803", "id": 460566447, "node_id": "MDU6SXNzdWU0NjA1NjY0NDc=", "number": 803, "title": "Handling Login Failures", "user": {"login": "tomburge", "id": 39355437, "node_id": "MDQ6VXNlcjM5MzU1NDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/39355437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomburge", "html_url": "https://github.com/tomburge", "followers_url": "https://api.github.com/users/tomburge/followers", "following_url": "https://api.github.com/users/tomburge/following{/other_user}", "gists_url": "https://api.github.com/users/tomburge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomburge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomburge/subscriptions", "organizations_url": "https://api.github.com/users/tomburge/orgs", "repos_url": "https://api.github.com/users/tomburge/repos", "events_url": "https://api.github.com/users/tomburge/events{/privacy}", "received_events_url": "https://api.github.com/users/tomburge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-25T18:08:46Z", "updated_at": "2019-08-14T09:14:43Z", "closed_at": "2019-08-14T09:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to figure out how to handle a failed login gracefully. When the proper user credentials are entered its easy to check. But if its a failed credential, it dumps  a stack trace. \r\n\r\nIs there a better way to handle this exception than dumping a stack trace? Like http status code 401 or something like that. There is a message about login failed, but I can't seem to catch it to raise the proper exception.\r\n\r\n`{'hostname': 'celery@ba3d63430bb0', 'id': 'f29e9886-d0de-46a0-8595-40f80b502f40', 'name': 'call.vcenter.test', 'exc': '(DataObject) {\\n\\n}', 'traceback': 'Traceback (most recent call last):\\n  File \"/usr/local/lib/python3.7/site-packages/celery/app/trace.py\", line 385, in trace_task\\n    R = retval = fun(*args, **kwargs)\\n  File \"/usr/local/lib/python3.7/site-packages/celery/app/trace.py\", line 648, in __protected_call__\\n    return self.run(*args, **kwargs)\\n  File \"/app/app.py\", line 87, in call_vcenter_test\\n    code = test_vcenter_connect(vchost, vcuser, vcpass, vcport)\\n  File \"/app/test_connect.py\", line 23, in test_vcenter_connect\\n    service_instance = connect.SmartConnect(host=vchost, user=vcuser, pwd=vcpass, port=int(vcport), sslContext=context)\\n  File \"/usr/local/lib/python3.7/site-packages/pyVim/connect.py\", line 856, in SmartConnect\\n    mechanism=mechanism)\\n  File \"/usr/local/lib/python3.7/site-packages/pyVim/connect.py\", line 266, in Connect\\n    keyFile, certFile, thumbprint, sslContext, connectionPoolTimeout)\\n  File \"/usr/local/lib/python3.7/site-packages/pyVim/connect.py\", line 390, in __Login\\n    x = content.sessionManager.Login(user, pwd, None)\\n  File \"/usr/local/lib/python3.7/site-packages/pyVmomi/VmomiSupport.py\", line 706, in <lambda>\\n    self.f(*(self.args + (obj,) + args), **kwargs)\\n  File \"/usr/local/lib/python3.7/site-packages/pyVmomi/VmomiSupport.py\", line 512, in _InvokeMethod\\n    return self._stub.InvokeMethod(self, info, args)\\n  File \"/usr/local/lib/python3.7/site-packages/pyVmomi/SoapAdapter.py\", line 1374, in InvokeMethod\\n    raise obj # pylint: disable-msg=E0702\\npyVmomi.VmomiSupport.vim.fault.InvalidLogin: (vim.fault.InvalidLogin) {\\n   dynamicType = <unset>,\\n   dynamicProperty = (vmodl.DynamicProperty) [],\\n   msg = \\'Cannot complete login due to an incorrect user name or password.\\',\\n   faultCause = <unset>,\\n   faultMessage = (vmodl.LocalizableMessage) []\\n}\\n', 'args': \"['vc01.home.lab', 'administrator@vsphere.local', 'pass', '443']\", 'kwargs': '{}', 'description': 'raised unexpected', 'internal': False}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/802", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/802/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/802/events", "html_url": "https://github.com/vmware/pyvmomi/issues/802", "id": 456858992, "node_id": "MDU6SXNzdWU0NTY4NTg5OTI=", "number": 802, "title": "Datastore Over Provisioning", "user": {"login": "Imranatnisum", "id": 33410001, "node_id": "MDQ6VXNlcjMzNDEwMDAx", "avatar_url": "https://avatars0.githubusercontent.com/u/33410001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Imranatnisum", "html_url": "https://github.com/Imranatnisum", "followers_url": "https://api.github.com/users/Imranatnisum/followers", "following_url": "https://api.github.com/users/Imranatnisum/following{/other_user}", "gists_url": "https://api.github.com/users/Imranatnisum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Imranatnisum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Imranatnisum/subscriptions", "organizations_url": "https://api.github.com/users/Imranatnisum/orgs", "repos_url": "https://api.github.com/users/Imranatnisum/repos", "events_url": "https://api.github.com/users/Imranatnisum/events{/privacy}", "received_events_url": "https://api.github.com/users/Imranatnisum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-17T10:26:18Z", "updated_at": "2019-08-14T09:14:23Z", "closed_at": "2019-08-14T09:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you pls  share some way to to get Datastore Over Provisioning \r\n\r\npython version:\r\n3.7\r\nvSphere version:\r\n6.0, 6.5 and 6.7\r\nOperating System/Shell (used to run SDK-based apps):\r\nMac os", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/793", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/793/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/793/events", "html_url": "https://github.com/vmware/pyvmomi/issues/793", "id": 439238653, "node_id": "MDU6SXNzdWU0MzkyMzg2NTM=", "number": 793, "title": "How to add a user account with no admin access for a Windows vm using pyvmomi", "user": {"login": "bowanggu", "id": 25350728, "node_id": "MDQ6VXNlcjI1MzUwNzI4", "avatar_url": "https://avatars1.githubusercontent.com/u/25350728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bowanggu", "html_url": "https://github.com/bowanggu", "followers_url": "https://api.github.com/users/bowanggu/followers", "following_url": "https://api.github.com/users/bowanggu/following{/other_user}", "gists_url": "https://api.github.com/users/bowanggu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bowanggu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bowanggu/subscriptions", "organizations_url": "https://api.github.com/users/bowanggu/orgs", "repos_url": "https://api.github.com/users/bowanggu/repos", "events_url": "https://api.github.com/users/bowanggu/events{/privacy}", "received_events_url": "https://api.github.com/users/bowanggu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-01T17:03:18Z", "updated_at": "2019-05-02T17:48:07Z", "closed_at": "2019-05-02T17:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I have created a Windows vm and want to find out how to create a user without admin access for this vm? I have done set the password for a  username `Administrator` using ( but it's for admin access): \r\n        ident = vim.vm.customization.Sysprep()\r\n        ident.guiUnattended = vim.vm.customization.GuiUnattended()\r\n        ident.guiUnattended.autoLogon = True  # the machine does not auto-logon\r\n        ident.guiUnattended.password = vim.vm.customization.Password()\r\n        ident.guiUnattended.password.value = 'Password'\r\n        ident.guiUnattended.password.plainText = True  # the password is not encrypted\r\n  \r\nThank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/791", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/791/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/791/events", "html_url": "https://github.com/vmware/pyvmomi/issues/791", "id": 437503010, "node_id": "MDU6SXNzdWU0Mzc1MDMwMTA=", "number": 791, "title": "Issue in pyVim.connect , says __init__() takes exactly 3 arguments (2 given)", "user": {"login": "01pooja", "id": 34595065, "node_id": "MDQ6VXNlcjM0NTk1MDY1", "avatar_url": "https://avatars0.githubusercontent.com/u/34595065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/01pooja", "html_url": "https://github.com/01pooja", "followers_url": "https://api.github.com/users/01pooja/followers", "following_url": "https://api.github.com/users/01pooja/following{/other_user}", "gists_url": "https://api.github.com/users/01pooja/gists{/gist_id}", "starred_url": "https://api.github.com/users/01pooja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/01pooja/subscriptions", "organizations_url": "https://api.github.com/users/01pooja/orgs", "repos_url": "https://api.github.com/users/01pooja/repos", "events_url": "https://api.github.com/users/01pooja/events{/privacy}", "received_events_url": "https://api.github.com/users/01pooja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-26T05:19:41Z", "updated_at": "2019-04-26T07:53:25Z", "closed_at": "2019-04-26T07:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "    si = connect.SmartConnectNoSSL(\r\n            host=vc_host,\r\n            port=int(port),\r\n            user=user,\r\n            pwd=_base64_str(password),\r\n        )\r\n\r\n\r\nThe error is at the above statement, what else need to be passed to this ?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/790", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/790/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/790/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/790/events", "html_url": "https://github.com/vmware/pyvmomi/issues/790", "id": 436856782, "node_id": "MDU6SXNzdWU0MzY4NTY3ODI=", "number": 790, "title": "How to list all VMs absolute folder path", "user": {"login": "vmovva", "id": 10171189, "node_id": "MDQ6VXNlcjEwMTcxMTg5", "avatar_url": "https://avatars2.githubusercontent.com/u/10171189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmovva", "html_url": "https://github.com/vmovva", "followers_url": "https://api.github.com/users/vmovva/followers", "following_url": "https://api.github.com/users/vmovva/following{/other_user}", "gists_url": "https://api.github.com/users/vmovva/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmovva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmovva/subscriptions", "organizations_url": "https://api.github.com/users/vmovva/orgs", "repos_url": "https://api.github.com/users/vmovva/repos", "events_url": "https://api.github.com/users/vmovva/events{/privacy}", "received_events_url": "https://api.github.com/users/vmovva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T18:58:44Z", "updated_at": "2019-08-14T07:06:06Z", "closed_at": "2019-08-14T07:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to list all VMs in VCSA and their absolute Folder Path. \r\n\r\nFor example : \r\n\r\n> [DC1,Folder_A,Folder_AA,myVM1]\r\n> [DC1,Folder_A,myVM0]\r\n> ....\r\n\r\nI found samples to list VMs and also find folder for a given VM. However, i didn't find any sample to list all VMs with it's absolute folder path. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/789", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/789/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/789/events", "html_url": "https://github.com/vmware/pyvmomi/issues/789", "id": 434482432, "node_id": "MDU6SXNzdWU0MzQ0ODI0MzI=", "number": 789, "title": "Anyone knows how to create a vm from a template in content library using pyvmomi? ", "user": {"login": "bowanggu", "id": 25350728, "node_id": "MDQ6VXNlcjI1MzUwNzI4", "avatar_url": "https://avatars1.githubusercontent.com/u/25350728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bowanggu", "html_url": "https://github.com/bowanggu", "followers_url": "https://api.github.com/users/bowanggu/followers", "following_url": "https://api.github.com/users/bowanggu/following{/other_user}", "gists_url": "https://api.github.com/users/bowanggu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bowanggu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bowanggu/subscriptions", "organizations_url": "https://api.github.com/users/bowanggu/orgs", "repos_url": "https://api.github.com/users/bowanggu/repos", "events_url": "https://api.github.com/users/bowanggu/events{/privacy}", "received_events_url": "https://api.github.com/users/bowanggu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-17T20:56:29Z", "updated_at": "2019-04-24T09:47:25Z", "closed_at": "2019-04-24T09:47:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does pyvmomi currently support content library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/788", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/788/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/788/events", "html_url": "https://github.com/vmware/pyvmomi/issues/788", "id": 433523882, "node_id": "MDU6SXNzdWU0MzM1MjM4ODI=", "number": 788, "title": "The guest operations agent could not be contacted.", "user": {"login": "KevinCooper", "id": 5710207, "node_id": "MDQ6VXNlcjU3MTAyMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5710207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KevinCooper", "html_url": "https://github.com/KevinCooper", "followers_url": "https://api.github.com/users/KevinCooper/followers", "following_url": "https://api.github.com/users/KevinCooper/following{/other_user}", "gists_url": "https://api.github.com/users/KevinCooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/KevinCooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KevinCooper/subscriptions", "organizations_url": "https://api.github.com/users/KevinCooper/orgs", "repos_url": "https://api.github.com/users/KevinCooper/repos", "events_url": "https://api.github.com/users/KevinCooper/events{/privacy}", "received_events_url": "https://api.github.com/users/KevinCooper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-15T23:47:39Z", "updated_at": "2020-01-27T13:19:19Z", "closed_at": "2019-04-19T00:03:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n(Pdb) operation['program']\r\n'/usr/bin/sudo'\r\n(Pdb) operation['arguments']\r\n'/bin/bash -c \"hostname lin-server-ubuntu14-1\"'\r\n(Pdb) t_vm.operations.process.execute(operation['program'], operation['arguments'], interactive=False)\r\n*** pyVmomi.VmomiSupport.vim.fault.GuestOperationsUnavailable: (vim.fault.GuestOperationsUnavailable) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   msg = 'The guest operations agent could not be contacted.',\r\n   faultCause = <unset>,\r\n   faultMessage = (vmodl.LocalizableMessage) []\r\n}\r\n(Pdb) t_vm.details\r\n<lin-server-ubuntu14-1_Details: runtime, guest, config, storage>\r\n(Pdb) t_vm.details.guest\r\n(vim.vm.Summary.GuestSummary) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   guestId = 'ubuntuGuest',\r\n   guestFullName = 'Ubuntu Linux (32-bit)',\r\n   toolsStatus = 'toolsOk',\r\n   toolsVersionStatus = 'guestToolsCurrent',\r\n   toolsVersionStatus2 = 'guestToolsSupportedNew',\r\n   toolsRunningStatus = 'guestToolsRunning',\r\n   hostName = 'ubuntu',\r\n   ipAddress = '192.168.10.94'\r\n}\r\n(Pdb)\r\n```\r\n\r\nNo matter what configuration I set for the Linux virtual machine, pyvmomi is unable to run code on Linux guests.  I've tried Ubuntu 14, 16, and 18.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/786", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/786/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/786/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/786/events", "html_url": "https://github.com/vmware/pyvmomi/issues/786", "id": 432395516, "node_id": "MDU6SXNzdWU0MzIzOTU1MTY=", "number": 786, "title": "python \u5bf9esxi\u865a\u62df\u673a\u5185\u5b58cpu\u8fdb\u884c\u6269\u589e", "user": {"login": "llds123", "id": 49547179, "node_id": "MDQ6VXNlcjQ5NTQ3MTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/49547179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llds123", "html_url": "https://github.com/llds123", "followers_url": "https://api.github.com/users/llds123/followers", "following_url": "https://api.github.com/users/llds123/following{/other_user}", "gists_url": "https://api.github.com/users/llds123/gists{/gist_id}", "starred_url": "https://api.github.com/users/llds123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llds123/subscriptions", "organizations_url": "https://api.github.com/users/llds123/orgs", "repos_url": "https://api.github.com/users/llds123/repos", "events_url": "https://api.github.com/users/llds123/events{/privacy}", "received_events_url": "https://api.github.com/users/llds123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-12T05:39:20Z", "updated_at": "2019-04-15T05:45:31Z", "closed_at": "2019-04-15T05:45:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/783", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/783/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/783/events", "html_url": "https://github.com/vmware/pyvmomi/issues/783", "id": 431233771, "node_id": "MDU6SXNzdWU0MzEyMzM3NzE=", "number": 783, "title": "Errors with intervalId=300 seconds", "user": {"login": "shay9748", "id": 49444750, "node_id": "MDQ6VXNlcjQ5NDQ0NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/49444750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shay9748", "html_url": "https://github.com/shay9748", "followers_url": "https://api.github.com/users/shay9748/followers", "following_url": "https://api.github.com/users/shay9748/following{/other_user}", "gists_url": "https://api.github.com/users/shay9748/gists{/gist_id}", "starred_url": "https://api.github.com/users/shay9748/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shay9748/subscriptions", "organizations_url": "https://api.github.com/users/shay9748/orgs", "repos_url": "https://api.github.com/users/shay9748/repos", "events_url": "https://api.github.com/users/shay9748/events{/privacy}", "received_events_url": "https://api.github.com/users/shay9748/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-09T23:07:08Z", "updated_at": "2019-08-06T11:50:23Z", "closed_at": "2019-08-06T11:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to extract data from the past 5 minutes and changed the intervalId from 20 seconds to 300 seconds but it gave me the following error. What exactly is going on? \r\n\r\nCode\r\n//counterID was correct since the code works for 20 seconds intervalId but throws errors for\r\nwhen I change it to 300 seconds\r\nmetricId = vim.PerformanceManager.MetricId(counterId=counterId, instance=\"*\")\r\nquery = vim.PerformanceManager.QuerySpec(intervalId=300, entity=vm, metricId=[metricId]\r\n\r\nThe errors I see:-\r\n   perfResults = perfManager.QueryPerf(querySpec=[query])\r\n  File \"build/bdist.linux-x86_64/egg/pyVmomi/VmomiSupport.py\", line 706, in <lambda>\r\n  File \"build/bdist.linux-x86_64/egg/pyVmomi/VmomiSupport.py\", line 512, in _InvokeMethod\r\n  File \"build/bdist.linux-x86_64/egg/pyVmomi/SoapAdapter.py\", line 1374, in InvokeMethod\r\npyVmomi.VmomiSupport.InvalidArgument: (vmodl.fault.InvalidArgument) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   msg = 'A specified parameter was not correct: querySpec[0].intervalId',\r\n   faultCause = <unset>,\r\n   faultMessage = (vmodl.LocalizableMessage) [],\r\n   invalidProperty = u'querySpec[0].intervalId'\r\n}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/774", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/774/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/774/events", "html_url": "https://github.com/vmware/pyvmomi/issues/774", "id": 424764666, "node_id": "MDU6SXNzdWU0MjQ3NjQ2NjY=", "number": 774, "title": "Pyvmomi-MarkAsTemplate ", "user": {"login": "JackDan9", "id": 12805846, "node_id": "MDQ6VXNlcjEyODA1ODQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/12805846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackDan9", "html_url": "https://github.com/JackDan9", "followers_url": "https://api.github.com/users/JackDan9/followers", "following_url": "https://api.github.com/users/JackDan9/following{/other_user}", "gists_url": "https://api.github.com/users/JackDan9/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackDan9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackDan9/subscriptions", "organizations_url": "https://api.github.com/users/JackDan9/orgs", "repos_url": "https://api.github.com/users/JackDan9/repos", "events_url": "https://api.github.com/users/JackDan9/events{/privacy}", "received_events_url": "https://api.github.com/users/JackDan9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T07:48:26Z", "updated_at": "2019-06-27T09:05:19Z", "closed_at": "2019-06-27T09:05:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The virtual machine is converted to a template and the parameters can be customized through the **vsphere client**.\r\nBut the [MarkAsTemplate](https://vdc-download.vmware.com/vmwb-repository/dcr-public/6b586ed2-655c-49d9-9029-bc416323cb22/fa0b429a-a695-4c11-b7d2-2cbc284049dc/doc/vim.VirtualMachine.html#markAsTemplate) method does not have a way to carry custom parameters.\r\nPlease give me a hand to solve it.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/770", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/770/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/770/events", "html_url": "https://github.com/vmware/pyvmomi/issues/770", "id": 419889330, "node_id": "MDU6SXNzdWU0MTk4ODkzMzA=", "number": 770, "title": "How can i customize a  clone vm with DistributedVirtualSwitch", "user": {"login": "AcidGo", "id": 28675701, "node_id": "MDQ6VXNlcjI4Njc1NzAx", "avatar_url": "https://avatars2.githubusercontent.com/u/28675701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AcidGo", "html_url": "https://github.com/AcidGo", "followers_url": "https://api.github.com/users/AcidGo/followers", "following_url": "https://api.github.com/users/AcidGo/following{/other_user}", "gists_url": "https://api.github.com/users/AcidGo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AcidGo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AcidGo/subscriptions", "organizations_url": "https://api.github.com/users/AcidGo/orgs", "repos_url": "https://api.github.com/users/AcidGo/repos", "events_url": "https://api.github.com/users/AcidGo/events{/privacy}", "received_events_url": "https://api.github.com/users/AcidGo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T09:45:14Z", "updated_at": "2019-03-14T01:44:01Z", "closed_at": "2019-03-14T01:44:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "My use some sample example to clone vm and customize it. But when i change my switch to DistributedVirtualSwitch, it cannot work, so How can i customize a  clone vm with DistributedVirtualSwitch??\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/768", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/768/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/768/events", "html_url": "https://github.com/vmware/pyvmomi/issues/768", "id": 415761428, "node_id": "MDU6SXNzdWU0MTU3NjE0Mjg=", "number": 768, "title": "Unable to enumerate due to an error: vim.CustomFieldsManager.StringValue is not JSON serializable", "user": {"login": "mrthomaskim", "id": 3604270, "node_id": "MDQ6VXNlcjM2MDQyNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3604270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrthomaskim", "html_url": "https://github.com/mrthomaskim", "followers_url": "https://api.github.com/users/mrthomaskim/followers", "following_url": "https://api.github.com/users/mrthomaskim/following{/other_user}", "gists_url": "https://api.github.com/users/mrthomaskim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrthomaskim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrthomaskim/subscriptions", "organizations_url": "https://api.github.com/users/mrthomaskim/orgs", "repos_url": "https://api.github.com/users/mrthomaskim/repos", "events_url": "https://api.github.com/users/mrthomaskim/events{/privacy}", "received_events_url": "https://api.github.com/users/mrthomaskim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-28T18:26:00Z", "updated_at": "2019-03-12T17:48:34Z", "closed_at": "2019-03-12T17:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting an error message when trying to enumerate the list of all VMs using ansible-inventory:\r\nERROR! Unexpected Exception, this is probably a bug: Object of type vim.CustomFieldsManager.StringValue is not JSON serializable\r\n\r\nWe do utilize custom attributes sections for tagging purpose\r\n\r\nBelow is the full debug:\r\n```\r\n$ ansible-inventory  --list -i dynamic.vmware.yml -vvvv\r\nansible-inventory 2.7.8\r\n  config file = /etc/ansible/ansible.cfg\r\n  configured module search path = ['/Users/tkim/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/lib/python3.7/site-packages/ansible\r\n  executable location = /Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/bin/ansible-inventory\r\n  python version = 3.7.2 (default, Feb 12 2019, 08:15:36) [Clang 10.0.0 (clang-1000.11.45.5)]\r\nUsing /etc/ansible/ansible.cfg as config file\r\nsetting up inventory plugins\r\nParsed /Users/tkim/git/ccc/sre/ansible/dynamic.vmware.yml inventory source with vmware_vm_inventory plugin\r\nERROR! Unexpected Exception, this is probably a bug: Object of type vim.CustomFieldsManager.StringValue is not JSON serializable\r\nthe full traceback was:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/bin/ansible-inventory\", line 118, in <module>\r\n    exit_code = cli.run()\r\n  File \"/Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/lib/python3.7/site-packages/ansible/cli/inventory.py\", line 181, in run\r\n    results = self.dump(results)\r\n  File \"/Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/lib/python3.7/site-packages/ansible/cli/inventory.py\", line 199, in dump\r\n    results = json.dumps(stuff, cls=AnsibleJSONEncoder, sort_keys=True, indent=4)\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 201, in encode\r\n    chunks = list(chunks)\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 431, in _iterencode\r\n    yield from _iterencode_dict(o, _current_indent_level)\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 405, in _iterencode_dict\r\n    yield from chunks\r\n  [Previous line repeated 1 more time]\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 325, in _iterencode_list\r\n    yield from chunks\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 438, in _iterencode\r\n    o = _default(o)\r\n  File \"/Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/lib/python3.7/site-packages/ansible/parsing/ajson.py\", line 66, in default\r\n    value = super(AnsibleJSONEncoder, self).default(o)\r\n  File \"/usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type vim.CustomFieldsManager.StringValue is not JSON serializable\r\n```\r\n\r\n```\r\n$ ansible --version\r\nansible 2.7.8\r\n  config file = /etc/ansible/ansible.cfg\r\n  configured module search path = ['/Users/tkim/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/lib/python3.7/site-packages/ansible\r\n  executable location = /Users/tkim/.local/share/virtualenvs/ansible-sskOqjbK/bin/ansible\r\n  python version = 3.7.2 (default, Feb 12 2019, 08:15:36) [Clang 10.0.0 (clang-1000.11.45.5)]\r\n```\r\n\r\n```\r\n$ cat /etc/ansible/ansible.cfg\r\n[inventory]\r\nenable_plugins = vmware_vm_inventory\r\n\r\n```\r\n\r\n```\r\n$ cat dynamic.vmware.yml\r\nplugin: vmware_vm_inventory\r\nstrict: False\r\nhostname: vcenter01.contoso.com\r\nusername: admin_user@contoso.com\r\npassword: abcd1234\r\nvalidate_certs: False\r\nwith_tags: True\r\n```\r\n\r\n```\r\n$ cat requirements.txt\r\nansible==2.7.8\r\nasn1crypto==0.24.0\r\nbcrypt==3.1.6\r\ncertifi==2018.11.29\r\ncffi==1.12.2\r\nchardet==3.0.4\r\ncryptography==2.6.1\r\nidna==2.8\r\nJinja2==2.10\r\nlxml==4.3.1\r\nMarkupSafe==1.1.1\r\nnsx-policy-python-sdk==2.3.0.0.2.11053635\r\nnsx-python-sdk==2.3.0.0.2.11053635\r\nparamiko==2.4.2\r\npyasn1==0.4.5\r\npycparser==2.19\r\nPyNaCl==1.3.0\r\npyOpenSSL==19.0.0\r\npyvmomi==6.7.1.2018.12\r\nPyYAML==3.13\r\nrequests==2.21.0\r\nsix==1.12.0\r\nsuds-jurko==0.6\r\nurllib3==1.24.1\r\nvapi-client-bindings==1.5.0\r\nvapi-common-client==2.10.2\r\nvapi-runtime==2.10.2\r\nvmc-app-python-sdk==2.3.0.0.2.11053635\r\nvmc-client-bindings==1.3.1\r\nWerkzeug==0.14.1\r\n\r\n```\r\nAny thoughts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/767", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/767/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/767/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/767/events", "html_url": "https://github.com/vmware/pyvmomi/issues/767", "id": 415091565, "node_id": "MDU6SXNzdWU0MTUwOTE1NjU=", "number": 767, "title": "pyvmomi - Get VM information through VM Id", "user": {"login": "JackDan9", "id": 12805846, "node_id": "MDQ6VXNlcjEyODA1ODQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/12805846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackDan9", "html_url": "https://github.com/JackDan9", "followers_url": "https://api.github.com/users/JackDan9/followers", "following_url": "https://api.github.com/users/JackDan9/following{/other_user}", "gists_url": "https://api.github.com/users/JackDan9/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackDan9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackDan9/subscriptions", "organizations_url": "https://api.github.com/users/JackDan9/orgs", "repos_url": "https://api.github.com/users/JackDan9/repos", "events_url": "https://api.github.com/users/JackDan9/events{/privacy}", "received_events_url": "https://api.github.com/users/JackDan9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-27T12:05:36Z", "updated_at": "2019-03-06T10:15:57Z", "closed_at": "2019-03-06T05:51:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just want to query the information of this VM Id separately. How can I get it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/765", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/765/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/765/events", "html_url": "https://github.com/vmware/pyvmomi/issues/765", "id": 408473027, "node_id": "MDU6SXNzdWU0MDg0NzMwMjc=", "number": 765, "title": "How to get tags and configurations of all VMs", "user": {"login": "shekharHPE", "id": 46696080, "node_id": "MDQ6VXNlcjQ2Njk2MDgw", "avatar_url": "https://avatars2.githubusercontent.com/u/46696080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shekharHPE", "html_url": "https://github.com/shekharHPE", "followers_url": "https://api.github.com/users/shekharHPE/followers", "following_url": "https://api.github.com/users/shekharHPE/following{/other_user}", "gists_url": "https://api.github.com/users/shekharHPE/gists{/gist_id}", "starred_url": "https://api.github.com/users/shekharHPE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shekharHPE/subscriptions", "organizations_url": "https://api.github.com/users/shekharHPE/orgs", "repos_url": "https://api.github.com/users/shekharHPE/repos", "events_url": "https://api.github.com/users/shekharHPE/events{/privacy}", "received_events_url": "https://api.github.com/users/shekharHPE/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-09T21:33:00Z", "updated_at": "2019-02-11T18:20:34Z", "closed_at": "2019-02-11T18:20:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to get tags and configurations of all VMs\r\nI need the information about tags and configurations assigned to all the Clusters and VMs.\r\nAny help would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/764", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/764/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/764/events", "html_url": "https://github.com/vmware/pyvmomi/issues/764", "id": 407110253, "node_id": "MDU6SXNzdWU0MDcxMTAyNTM=", "number": 764, "title": "pyVmomi.VmomiSupport.UnknownWsdlTypeError: 'ContentLibrary'", "user": {"login": "arunpatyal", "id": 10919488, "node_id": "MDQ6VXNlcjEwOTE5NDg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10919488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunpatyal", "html_url": "https://github.com/arunpatyal", "followers_url": "https://api.github.com/users/arunpatyal/followers", "following_url": "https://api.github.com/users/arunpatyal/following{/other_user}", "gists_url": "https://api.github.com/users/arunpatyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunpatyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunpatyal/subscriptions", "organizations_url": "https://api.github.com/users/arunpatyal/orgs", "repos_url": "https://api.github.com/users/arunpatyal/repos", "events_url": "https://api.github.com/users/arunpatyal/events{/privacy}", "received_events_url": "https://api.github.com/users/arunpatyal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-02-06T07:28:49Z", "updated_at": "2019-03-12T06:49:34Z", "closed_at": "2019-03-12T06:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the below error after performing any action on Content Inventory such as create a new content inventory object. \r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/pyvmomi-6.7.1.2018.12-py3.6.egg/pyVmomi/SoapAdapter.py\", line 509, in ParseData\r\n  File \"../Modules/pyexpat.c\", line 414, in StartElement\r\n  File \"/usr/local/lib/python3.6/dist-packages/pyvmomi-6.7.1.2018.12-py3.6.egg/pyVmomi/SoapAdapter.py\", line 719, in StartElementHandler\r\n  File \"/usr/local/lib/python3.6/dist-packages/pyvmomi-6.7.1.2018.12-py3.6.egg/pyVmomi/VmomiSupport.py\", line 1192, in GuessWsdlType\r\npyVmomi.VmomiSupport.UnknownWsdlTypeError: 'ContentLibrary'\r\n\r\nDebugged and determined that the event EventEx and TaskEvent are being generated which generates this error.\r\n\r\nSteps:\r\n1. Create a new content inventory.\r\n2. Call eventCollector.ReadNextEvents, get all events or EventEx and TaskEvent \r\n\r\nvsphere version 6.5\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/762", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/762/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/762/events", "html_url": "https://github.com/vmware/pyvmomi/issues/762", "id": 402274052, "node_id": "MDU6SXNzdWU0MDIyNzQwNTI=", "number": 762, "title": "Unable to add New Disk to an Existing VM - Invalid Configuration for Device '1'", "user": {"login": "sujeetkp", "id": 16861806, "node_id": "MDQ6VXNlcjE2ODYxODA2", "avatar_url": "https://avatars3.githubusercontent.com/u/16861806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sujeetkp", "html_url": "https://github.com/sujeetkp", "followers_url": "https://api.github.com/users/sujeetkp/followers", "following_url": "https://api.github.com/users/sujeetkp/following{/other_user}", "gists_url": "https://api.github.com/users/sujeetkp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sujeetkp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sujeetkp/subscriptions", "organizations_url": "https://api.github.com/users/sujeetkp/orgs", "repos_url": "https://api.github.com/users/sujeetkp/repos", "events_url": "https://api.github.com/users/sujeetkp/events{/privacy}", "received_events_url": "https://api.github.com/users/sujeetkp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-23T14:48:02Z", "updated_at": "2019-01-24T06:11:58Z", "closed_at": "2019-01-24T06:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to create a VM and add NIC, Disk to it.\r\nI am able to create the VM, add the NIC, also able to create a controller, but when I try to add the disk, I am getting the error as 'invalid configuration for Device 0'.\r\n\r\nI am not sure what I am doing wrong. Please help.\r\n\r\n    service_instance = ConnectToVMWare(ServiceProviderDetails)  \r\n    content = service_instance.RetrieveContent()  \r\n    atexit.register(Disconnect, si)   \r\n    name = 'MyVM'  \r\n    datastore = 'datastore1'       \r\n    datacenter = content.rootFolder.childEntity[0]\r\n    vmfolder = datacenter.vmFolder   \r\n    hosts = datacenter.hostFolder.childEntity  \r\n    resource_pool = hosts[0].resourcePool\r\n          \r\n\tprint(\"Creating VM !!!!!! \")\r\n\t\r\n\tdevices = []\r\n\r\n\tnic_type = 'E1000E'\r\n\tnet_name = 'VM Network02'\r\n\tvm_name = name\r\n\tdatastore_path = '[' + datastore + '] ' + vm_name\r\n\t\r\n\tcontent = service_instance.RetrieveContent()\r\n\t\t\r\n\tvmx_file = vim.vm.FileInfo(logDirectory=None,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshotDirectory=None,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuspendDirectory=None,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvmPathName=datastore_path)\r\n\t#Add Network Card\r\n\tnicspec = vim.vm.device.VirtualDeviceSpec()\r\n\tnicspec.operation = vim.vm.device.VirtualDeviceSpec.Operation.add\r\n\tnicspec.device =  vim.vm.device.VirtualE1000e()\r\n\tnicspec.device.deviceInfo = vim.Description()\r\n\tnicspec.device.backing = vim.vm.device.VirtualEthernetCard.NetworkBackingInfo()\r\n\tnicspec.device.backing.deviceName = net_name\r\n\tnicspec.device.backing.network = Get_Obj(content, [vim.Network], net_name)\r\n\tnicspec.device.connectable = vim.vm.device.VirtualDevice.ConnectInfo()\r\n\tnicspec.device.connectable.startConnected = True\r\n\tnicspec.device.connectable.allowGuestControl = True\r\n\tnicspec.device.connectable.connected = True\r\n\t\r\n\tdevices.append(nicspec)\r\n\t\r\n\tconfig = vim.vm.ConfigSpec(name=vm_name, memoryMB=1024, numCPUs=1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiles=vmx_file, guestId='rhel6_64Guest',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tversion='vmx-09', deviceChange=devices)\r\n\t\r\n\tprint (\"Creating VM %s\" % (vm_name))\r\n\t\r\n\ttasks = vm_folder.CreateVM_Task(config=config, pool=resource_pool)\r\n\t\r\n\tdevices = []\r\n\r\n\ttime.sleep(10)\r\n\t\r\n\tvmobj = Get_Obj(content, [vim.VirtualMachine],'MyVM')\r\n\t\r\n\tprint(vmobj)\r\n\t\r\n\tdatastore = Get_All_Objs_New(content, [vim.Datastore])\r\n\t\r\n\t#Add Hard Disk\r\n\t\r\n\t#Add Controller\r\n\t\r\n\tspec = vim.vm.ConfigSpec()\r\n\tscsi_ctr = vim.vm.device.VirtualDeviceSpec()\r\n\tscsi_ctr.operation = vim.vm.device.VirtualDeviceSpec.Operation.add\r\n\tscsi_ctr.device = vim.vm.device.VirtualLsiLogicController()\r\n\tscsi_ctr.device.deviceInfo = vim.Description()\r\n\tscsi_ctr.device.slotInfo = vim.vm.device.VirtualDevice.PciBusSlotInfo()\r\n\tscsi_ctr.device.slotInfo.pciSlotNumber = 16\r\n\tscsi_ctr.device.controllerKey = 100\r\n\tscsi_ctr.device.unitNumber = 3\r\n\tscsi_ctr.device.busNumber = 0\r\n\tscsi_ctr.device.hotAddRemove = True\r\n\tscsi_ctr.device.sharedBus = 'noSharing'\r\n\tscsi_ctr.device.scsiCtlrUnitNumber = 7\r\n\t\r\n\tunit_number = 3\r\n\tnew_disk_kb = 16 * 1024 * 1024\r\n\tprint(new_disk_kb)\r\n\tdisk_spec = vim.vm.device.VirtualDeviceSpec()\r\n\tdisk_spec.fileOperation = \"create\"\r\n\tdisk_spec.operation = vim.vm.device.VirtualDeviceSpec.Operation.add\r\n\tdisk_spec.device = vim.vm.device.VirtualDisk()\r\n\tdisk_spec.device.backing = vim.vm.device.VirtualDisk.FlatVer2BackingInfo()\r\n\tdisk_spec.device.backing.thinProvisioned = True\r\n\tdisk_spec.device.backing.diskMode = 'Dependent'        \r\n\tdisk_spec.device.capacityInKB = int(new_disk_kb)\r\n\tdisk_spec.device.unitNumber = unit_number\r\n\tdisk_spec.device.backing.datastore = datastore[4]\r\n\tdisk_spec.device.controllerKey = 100        \r\n\t\r\n\tdevices.append( scsi_ctr )\r\n\tdevices.append( disk_spec )\r\n\tspec.deviceChange = devices\r\n\r\n\tvmobj.ReconfigVM_Task( spec=spec )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/761", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/761/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/761/events", "html_url": "https://github.com/vmware/pyvmomi/issues/761", "id": 402156886, "node_id": "MDU6SXNzdWU0MDIxNTY4ODY=", "number": 761, "title": "vmware_guest: fails when using customization", "user": {"login": "iddq", "id": 2134656, "node_id": "MDQ6VXNlcjIxMzQ2NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2134656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iddq", "html_url": "https://github.com/iddq", "followers_url": "https://api.github.com/users/iddq/followers", "following_url": "https://api.github.com/users/iddq/following{/other_user}", "gists_url": "https://api.github.com/users/iddq/gists{/gist_id}", "starred_url": "https://api.github.com/users/iddq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iddq/subscriptions", "organizations_url": "https://api.github.com/users/iddq/orgs", "repos_url": "https://api.github.com/users/iddq/repos", "events_url": "https://api.github.com/users/iddq/events{/privacy}", "received_events_url": "https://api.github.com/users/iddq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-23T09:57:16Z", "updated_at": "2019-01-24T05:31:21Z", "closed_at": "2019-01-24T05:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "##### SUMMARY\r\ncustomization is not successful after cloning from the template.\r\n\r\n##### ISSUE TYPE\r\n- Bug Report\r\n\r\n##### COMPONENT NAME\r\nvmware_guest\r\n\r\n##### ANSIBLE VERSION\r\n\r\n> ansible 2.7.5\r\n>   config file = /etc/ansible/ansible.cfg\r\n>   configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\n>   ansible python module location = /usr/lib/python2.7/site-packages/ansible\r\n>   executable location = /usr/bin/ansible\r\n>   python version = 2.7.5 (default, Oct 30 2018, 23:45:53) [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)]\r\n> \r\n\r\n##### CONFIGURATION\r\n<!--- Paste verbatim output from \"ansible-config dump --only-changed\" between quotes -->\r\n```paste below\r\n\r\n```\r\n\r\n##### OS / ENVIRONMENT\r\nPyVmomi-6.7.1.2018.12\r\nPython 2.7.5\r\nCentOS Linux release 7.6.1810 (Core)\r\nVMware vCenter Server Appliance 6.5.0.15000\r\n\r\n\r\n##### STEPS TO REPRODUCE\r\nansible-playbook test.yml\r\n\r\ncloning has been done, customization not\r\n\r\n<!--- Paste example playbooks or commands between quotes below -->\r\n```yaml\r\n---\r\n- name: test\r\n  hosts: localhost\r\n  become: true\r\n\r\n  tasks:\r\n\r\n  - name:  Clone a virtual machine from Linux template and customize\r\n    vmware_guest:\r\n      hostname: '10.1.1.1'\r\n      username: 'vsphere.local\\administrator'\r\n      password: 'xxxxxxxxxxxxxxxx'\r\n      validate_certs: no\r\n      state: present\r\n      folder: /ansible_created\r\n      datacenter: 'datacenter'\r\n      template: 'template01'\r\n      name: 'centos-test01'\r\n      cluster: 'cluster01'\r\n      networks:\r\n      - name: Management\r\n        ip: 192.168.10.11\r\n        netmask: 255.255.255.0\r\n      wait_for_ip_address: True\r\n      customization:\r\n        dns_servers:\r\n        - 8.9.9.9\r\n        - 7.8.8.9\r\n    delegate_to: localhost\r\n\r\n```\r\n\r\n<!--- HINT: You can paste gist.github.com links for larger files -->\r\n\r\n##### EXPECTED RESULTS\r\nwell configured network interface and DNS servers on the target machine\r\n\r\n##### ACTUAL RESULTS\r\n```paste below\r\n<127.0.0.1> EXEC /bin/sh -c 'echo ~root && sleep 0'\r\n<127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p \"` echo /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277 `\" && echo ansible-tmp-1548236484.79-188277100178277=\"` echo /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277 `\" ) && sleep 0'\r\nUsing module file /usr/lib/python2.7/site-packages/ansible/modules/system/setup.py\r\n<127.0.0.1> PUT /root/.ansible/tmp/ansible-local-4732fN8lQ/tmpjf0xsH TO /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277/AnsiballZ_setup.py\r\n<127.0.0.1> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277/ /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277/AnsiballZ_setup.py && sleep 0'\r\n<127.0.0.1> EXEC /bin/sh -c '/usr/bin/python2 /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277/AnsiballZ_setup.py && sleep 0'\r\n<127.0.0.1> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1548236484.79-188277100178277/ > /dev/null 2>&1 && sleep 0'\r\nok: [localhost]\r\nMETA: ran handlers\r\n\r\nTASK [Clone a virtual machine from Linux template and customize] **************************************************************************************************************************************************************************************************************\r\ntask path: /root/test.yml:11\r\n<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root\r\n<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'\r\n<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p \"` echo /root/.ansible/tmp/ansible-tmp-1548236486.04-10873949181692 `\" && echo ansible-tmp-1548236486.04-10873949181692=\"` echo /root/.ansible/tmp/ansible-tmp-1548236486.04-10873949181692 `\" ) && sleep 0'\r\nUsing module file /usr/lib/python2.7/site-packages/ansible/modules/cloud/vmware/vmware_guest.py\r\n<localhost> PUT /root/.ansible/tmp/ansible-local-4732fN8lQ/tmpuRI2_9 TO /root/.ansible/tmp/ansible-tmp-1548236486.04-10873949181692/AnsiballZ_vmware_guest.py\r\n<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1548236486.04-10873949181692/ /root/.ansible/tmp/ansible-tmp-1548236486.04-10873949181692/AnsiballZ_vmware_guest.py && sleep 0'\r\n<localhost> EXEC /bin/sh -c '/usr/bin/python2 /root/.ansible/tmp/ansible-tmp-1548236486.04-10873949181692/AnsiballZ_vmware_guest.py && sleep 0'\r\nSTUCK HERE\r\n^CProcess WorkerProcess-2:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/multiprocessing/process.py\", line 258, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib/python2.7/site-packages/ansible/executor/process/worker.py\", line 118, in run\r\n    self._final_q\r\n  File \"/usr/lib/python2.7/site-packages/ansible/executor/task_executor.py\", line 140, in run\r\n    res = self._execute()\r\n  File \"/usr/lib/python2.7/site-packages/ansible/executor/task_executor.py\", line 612, in _execute\r\n    result = self._handler.run(task_vars=variables)\r\n  File \"/usr/lib/python2.7/site-packages/ansible/plugins/action/normal.py\", line 46, in run\r\n    result = merge_hash(result, self._execute_module(task_vars=task_vars, wrap_async=wrap_async))\r\n  File \"/usr/lib/python2.7/site-packages/ansible/plugins/action/__init__.py\", line 839, in _execute_module\r\n    res = self._low_level_execute_command(cmd, sudoable=sudoable, in_data=in_data)\r\n  File \"/usr/lib/python2.7/site-packages/ansible/plugins/action/__init__.py\", line 958, in _low_level_execute_command\r\n    rc, stdout, stderr = self._connection.exec_command(cmd, in_data=in_data, sudoable=sudoable)\r\n  File \"/usr/lib/python2.7/site-packages/ansible/plugins/connection/local.py\", line 133, in exec_command\r\n    stdout, stderr = p.communicate(in_data)\r\n  File \"/usr/lib64/python2.7/subprocess.py\", line 800, in communicate\r\n    return self._communicate(input)\r\n  File \"/usr/lib64/python2.7/subprocess.py\", line 1401, in _communicate\r\n    stdout, stderr = self._communicate_with_poll(input)\r\n  File \"/usr/lib64/python2.7/subprocess.py\", line 1455, in _communicate_with_poll\r\n    ready = poller.poll()\r\nKeyboardInterrupt\r\n [ERROR]: User interrupted execution\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/760", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/760/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/760/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/760/events", "html_url": "https://github.com/vmware/pyvmomi/issues/760", "id": 401716623, "node_id": "MDU6SXNzdWU0MDE3MTY2MjM=", "number": 760, "title": "How to InstantClone", "user": {"login": "BarbeRouss", "id": 24474067, "node_id": "MDQ6VXNlcjI0NDc0MDY3", "avatar_url": "https://avatars1.githubusercontent.com/u/24474067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BarbeRouss", "html_url": "https://github.com/BarbeRouss", "followers_url": "https://api.github.com/users/BarbeRouss/followers", "following_url": "https://api.github.com/users/BarbeRouss/following{/other_user}", "gists_url": "https://api.github.com/users/BarbeRouss/gists{/gist_id}", "starred_url": "https://api.github.com/users/BarbeRouss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BarbeRouss/subscriptions", "organizations_url": "https://api.github.com/users/BarbeRouss/orgs", "repos_url": "https://api.github.com/users/BarbeRouss/repos", "events_url": "https://api.github.com/users/BarbeRouss/events{/privacy}", "received_events_url": "https://api.github.com/users/BarbeRouss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T11:18:23Z", "updated_at": "2019-03-07T03:00:19Z", "closed_at": "2019-01-22T12:17:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey everyone,\r\nI'm trying to create a script to clone a VM, in order to prepare a preproduction environment out of a production server.\r\n\r\nSo far, I've been able to clone a VM from the CloneVM sample available. Now I would like to try the InstantClone functionality, but I'm unable to make it work.\r\n\r\nThis works:\r\n```\r\n    # Prepare the clone spec\r\n    clonespec = vim.vm.CloneSpec()\r\n    clonespec.location = relospec\r\n    clonespec.powerOn = power_on\r\n    clonespec.customization = customizationSpec;\r\n\r\n    # Cloning VM\r\n    task = template.Clone(folder=destfolder, name=vm_name, spec=clonespec)\r\n    wait_for_task(task)\r\n```\r\n\r\nThis doesn't:\r\n```\r\n    # Prepare the instant clone spec\r\n    instantCloneSpec = vim.vm.InstantCloneSpec()\r\n    instantCloneSpec.location = relospec\r\n    instantCloneSpec.name = vm_name\r\n\r\n    # Instant cloning VM\r\n    task = template.InstantClone(spec = instantCloneSpec)\r\n    wait_for_task(task)\r\n```\r\n\r\nI receive this error:\r\n```\r\nException has occurred: pyVmomi.VmomiSupport.vmodl.fault.MethodNotFound\r\n(vmodl.fault.MethodNotFound) {    dynamicType = <unset>,    dynamicProperty = (vmodl.DynamicProperty) [],    msg = <unset>,    faultCause = <unset>,    faultMessage = (vmodl.LocalizableMessage) [],    receiver = 'vim.VirtualMachine:vm-2471',    method = 'InstantClone' }\r\n  File \"...\\Script.py\", line 266, in clone_vm\r\n    task = template.InstantClone(spec = instantCloneSpec)\r\n  File \"...\\Script.py\", line 329, in main\r\n    args.destination_IP_Address)\r\n  File \"...\\Script.py\", line 335, in <module>\r\n    main()\r\n```\r\n\r\nI'm usually used to work with C#, but the vSphere API done in C# is just awfully implemented. So I switched to the python version. I'm not used to python, so it may be a newbie mistake.\r\n\r\nThanks for the help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/758", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/758/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/758/events", "html_url": "https://github.com/vmware/pyvmomi/issues/758", "id": 401184485, "node_id": "MDU6SXNzdWU0MDExODQ0ODU=", "number": 758, "title": "how to find the vim(by hostname) blong to which cluster?", "user": {"login": "shrekee", "id": 35474431, "node_id": "MDQ6VXNlcjM1NDc0NDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/35474431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shrekee", "html_url": "https://github.com/shrekee", "followers_url": "https://api.github.com/users/shrekee/followers", "following_url": "https://api.github.com/users/shrekee/following{/other_user}", "gists_url": "https://api.github.com/users/shrekee/gists{/gist_id}", "starred_url": "https://api.github.com/users/shrekee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shrekee/subscriptions", "organizations_url": "https://api.github.com/users/shrekee/orgs", "repos_url": "https://api.github.com/users/shrekee/repos", "events_url": "https://api.github.com/users/shrekee/events{/privacy}", "received_events_url": "https://api.github.com/users/shrekee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-21T03:57:53Z", "updated_at": "2019-01-24T07:06:54Z", "closed_at": "2019-01-24T07:06:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "when connect to the vCenter, I can get all VMs. But, how can i find the VM blong to which cluster?\r\nI need your help", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/755", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/755/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/755/events", "html_url": "https://github.com/vmware/pyvmomi/issues/755", "id": 400580520, "node_id": "MDU6SXNzdWU0MDA1ODA1MjA=", "number": 755, "title": "Is there api to manage content library?", "user": {"login": "dhajoshi", "id": 2979795, "node_id": "MDQ6VXNlcjI5Nzk3OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2979795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhajoshi", "html_url": "https://github.com/dhajoshi", "followers_url": "https://api.github.com/users/dhajoshi/followers", "following_url": "https://api.github.com/users/dhajoshi/following{/other_user}", "gists_url": "https://api.github.com/users/dhajoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhajoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhajoshi/subscriptions", "organizations_url": "https://api.github.com/users/dhajoshi/orgs", "repos_url": "https://api.github.com/users/dhajoshi/repos", "events_url": "https://api.github.com/users/dhajoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/dhajoshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-18T05:43:45Z", "updated_at": "2019-01-22T11:30:40Z", "closed_at": "2019-01-22T11:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Want to manage template in content library, is there API available ( eg clone template to content library )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/754", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/754/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/754/events", "html_url": "https://github.com/vmware/pyvmomi/issues/754", "id": 398446035, "node_id": "MDU6SXNzdWUzOTg0NDYwMzU=", "number": 754, "title": "Incorrect IP", "user": {"login": "shyamdayals", "id": 33338055, "node_id": "MDQ6VXNlcjMzMzM4MDU1", "avatar_url": "https://avatars1.githubusercontent.com/u/33338055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shyamdayals", "html_url": "https://github.com/shyamdayals", "followers_url": "https://api.github.com/users/shyamdayals/followers", "following_url": "https://api.github.com/users/shyamdayals/following{/other_user}", "gists_url": "https://api.github.com/users/shyamdayals/gists{/gist_id}", "starred_url": "https://api.github.com/users/shyamdayals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shyamdayals/subscriptions", "organizations_url": "https://api.github.com/users/shyamdayals/orgs", "repos_url": "https://api.github.com/users/shyamdayals/repos", "events_url": "https://api.github.com/users/shyamdayals/events{/privacy}", "received_events_url": "https://api.github.com/users/shyamdayals/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-11T20:47:06Z", "updated_at": "2019-01-11T21:46:37Z", "closed_at": "2019-01-11T21:46:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a VM with two IP's. But the vm summary, gives me an incorrect IP's.  is there another way to pull multiple IP's of a VM ?\r\n\r\nHere is my code\r\n\r\n       viewType = [vim.VirtualMachine]\r\n       recursive = True\r\n       containerView = self.content.viewManager.CreateContainerView(\r\n       container, viewType, recursive)\r\n\r\n       children = containerView.view\r\n       clientDetailsL = []\r\n       for virtual_machine in children:\r\n           summary         = virtual_machine.summary\r\n\r\nHere is the guest summary output.\r\n\r\n   guest = (vim.vm.Summary.GuestSummary) {\r\n      dynamicType = <unset>,\r\n      dynamicProperty = (vmodl.DynamicProperty) [],\r\n      guestId = 'windows9Server64Guest',\r\n      guestFullName = 'Microsoft Windows Server 2016 (64-bit)',\r\n      toolsStatus = 'toolsOk',\r\n      toolsVersionStatus = 'guestToolsCurrent',\r\n      toolsVersionStatus2 = 'guestToolsSupportedNew',\r\n      toolsRunningStatus = 'guestToolsRunning',\r\n      hostName = 'dvprinfnasw01b.mydomain.com',\r\n      **_ipAddress = '169.254.1.39'_**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/753", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/753/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/753/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/753/events", "html_url": "https://github.com/vmware/pyvmomi/issues/753", "id": 398196199, "node_id": "MDU6SXNzdWUzOTgxOTYxOTk=", "number": 753, "title": "copy a file from local machine to vm guest", "user": {"login": "vaidehi8goliwar", "id": 30145476, "node_id": "MDQ6VXNlcjMwMTQ1NDc2", "avatar_url": "https://avatars1.githubusercontent.com/u/30145476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaidehi8goliwar", "html_url": "https://github.com/vaidehi8goliwar", "followers_url": "https://api.github.com/users/vaidehi8goliwar/followers", "following_url": "https://api.github.com/users/vaidehi8goliwar/following{/other_user}", "gists_url": "https://api.github.com/users/vaidehi8goliwar/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaidehi8goliwar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaidehi8goliwar/subscriptions", "organizations_url": "https://api.github.com/users/vaidehi8goliwar/orgs", "repos_url": "https://api.github.com/users/vaidehi8goliwar/repos", "events_url": "https://api.github.com/users/vaidehi8goliwar/events{/privacy}", "received_events_url": "https://api.github.com/users/vaidehi8goliwar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-11T09:11:50Z", "updated_at": "2019-01-23T13:11:11Z", "closed_at": "2019-01-23T13:11:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "help!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/752", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/752/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/752/events", "html_url": "https://github.com/vmware/pyvmomi/issues/752", "id": 396462214, "node_id": "MDU6SXNzdWUzOTY0NjIyMTQ=", "number": 752, "title": "How to enable virtualethernetcard startconected and customization when I am cloning the template with pyvmomi?", "user": {"login": "AcidGo", "id": 28675701, "node_id": "MDQ6VXNlcjI4Njc1NzAx", "avatar_url": "https://avatars2.githubusercontent.com/u/28675701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AcidGo", "html_url": "https://github.com/AcidGo", "followers_url": "https://api.github.com/users/AcidGo/followers", "following_url": "https://api.github.com/users/AcidGo/following{/other_user}", "gists_url": "https://api.github.com/users/AcidGo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AcidGo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AcidGo/subscriptions", "organizations_url": "https://api.github.com/users/AcidGo/orgs", "repos_url": "https://api.github.com/users/AcidGo/repos", "events_url": "https://api.github.com/users/AcidGo/events{/privacy}", "received_events_url": "https://api.github.com/users/AcidGo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T12:06:56Z", "updated_at": "2019-02-20T01:00:56Z", "closed_at": "2019-02-20T01:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "For convenience, I recently wrote a set of tools about VMware using pyvmomi.\r\nI want to clone the template and then customize the IP of the cloned virtual machine.\r\nHowever, it was found that the startconnected could not be enable.\r\nHere is the summary code for this module:\r\n\r\n```python\r\n# define adapter\r\nadaptermaps = []\r\nguest_map = vim.vm.customization.AdapterMapping()\r\nguest_map.adapter = vim.vm.customization.IPSettings()\r\nguest_map.adapter.ip = vim.vm.customization.FixedIp()\r\nguest_map.adapter.ip.ipAddress = str(setip)\r\nguest_map.adapter.subnetMask = \"255.255.255.0\"\r\nguest_map.adapter.gateway = \"10.10.10.254\"\r\nadaptermaps.append(guest_map)\r\n# EOF define adapter\r\n\r\nident = vim.vm.customization.LinuxPrep()\r\nident.hostName = vim.vm.customization.FixedName()\r\nident.hostName.name = \"testname\"\r\n\r\nglobalip = vim.vm.customization.GlobalIPSettings()\r\n\r\nrelocate_spec = vim.vm.RelocateSpec()\r\nrelocate_spec.datastore = ondatastore\r\nrelocate_spec.host = onhost\r\nrelocate_spec.pool = oncluster.resourcePool\r\n\r\nvmconf_spec = vim.vm.ConfigSpec()\r\nvmconf_spec.cpuHotAddEnabled = True\r\nvmconf_spec.memoryHotAddEnabled = True\r\n\r\ndevices_change = []\r\n# customization\r\ncustom_spec = vim.vm.customization.Specification()\r\ncustom_spec.nicSettingMap = adaptermaps\r\ncustom_spec.identity = ident\r\ncustom_spec.globalIPSettings = globalip\r\n# EOF customization\r\n\r\nnic_spec = vim.vm.device.VirtualDeviceSpec()\r\nnic_spec.operation = vim.vm.device.VirtualDeviceSpec.Operation.edit\r\nfor dev in target.config.hardware.device:\r\n    if isinstance(dev, vim.vm.device.VirtualEthernetCard):\r\n        break\r\nelse:\r\n    raise Exception()\r\n\r\nnic_spec.device = dev\r\nnic_spec.device.wakeOnLanEnabled = True\r\nnic_spec.device.connectable = vim.vm.device.VirtualDevice.ConnectInfo()\r\nnic_spec.device.connectable.allowGuestControl = True\r\n# ========== This!!! ==========\r\nnic_spec.device.connectable.startConnected = True\r\n\r\nnic_spec.device.backing = vim.vm.device.VirtualEthernetCard.NetworkBackingInfo()\r\ntarget_network = get_network_by_name(service_instance, \"10.10.10.x\")\r\nnic_spec.device.backing.network = target_network\r\nnic_spec.device.backing.deviceName = target_network.name\r\n\r\ndevices_change.append(nic_spec)\r\nvmconf_spec.deviceChange = devices_change\r\n\r\nclone_spec = vim.vm.CloneSpec()\r\n\r\nclone_spec.powerOn = False\r\nclone_spec.location = relocate_spec\r\nclone_spec.config = vmconf_spec\r\n\r\nclone_spec.customization = custom_spec\r\ntask = target.Clone(folder=onfolder, name=setname, spec=clone_spec)\r\n```\r\n\r\nAfter testing, the startconnected status can be set to enable when I cancel the customization.As shown below.\r\n\r\n```python\r\n# define adapter\r\n# adaptermaps = []\r\n# guest_map = vim.vm.customization.AdapterMapping()\r\n# guest_map.adapter = vim.vm.customization.IPSettings()\r\n# guest_map.adapter.ip = vim.vm.customization.FixedIp()\r\n# guest_map.adapter.ip.ipAddress = str(setip)\r\n# guest_map.adapter.subnetMask = \"255.255.255.0\"\r\n# guest_map.adapter.gateway = \"10.10.10.254\"\r\n# adaptermaps.append(guest_map)\r\n# EOF define adapter\r\n\r\n# ident = vim.vm.customization.LinuxPrep()\r\n# ident.hostName = vim.vm.customization.FixedName()\r\n# ident.hostName.name = \"testname\"\r\n\r\n# globalip = vim.vm.customization.GlobalIPSettings()\r\n\r\nrelocate_spec = vim.vm.RelocateSpec()\r\nrelocate_spec.datastore = ondatastore\r\nrelocate_spec.host = onhost\r\nrelocate_spec.pool = oncluster.resourcePool\r\n\r\nvmconf_spec = vim.vm.ConfigSpec()\r\nvmconf_spec.cpuHotAddEnabled = True\r\nvmconf_spec.memoryHotAddEnabled = True\r\n\r\ndevices_change = []\r\n# customization\r\n# custom_spec = vim.vm.customization.Specification()\r\n# custom_spec.nicSettingMap = adaptermaps\r\n# custom_spec.identity = ident\r\n# custom_spec.globalIPSettings = globalip\r\n# EOF customization\r\n\r\nnic_spec = vim.vm.device.VirtualDeviceSpec()\r\nnic_spec.operation = vim.vm.device.VirtualDeviceSpec.Operation.edit\r\nfor dev in target.config.hardware.device:\r\n    if isinstance(dev, vim.vm.device.VirtualEthernetCard):\r\n        break\r\nelse:\r\n    raise Exception()\r\n\r\nnic_spec.device = dev\r\nnic_spec.device.wakeOnLanEnabled = True\r\nnic_spec.device.connectable = vim.vm.device.VirtualDevice.ConnectInfo()\r\nnic_spec.device.connectable.allowGuestControl = True\r\n# ========== This!!! ==========\r\nnic_spec.device.connectable.startConnected = True\r\n\r\nnic_spec.device.backing = vim.vm.device.VirtualEthernetCard.NetworkBackingInfo()\r\ntarget_network = get_network_by_name(service_instance, \"10.10.10.x\")\r\nnic_spec.device.backing.network = target_network\r\nnic_spec.device.backing.deviceName = target_network.name\r\n\r\ndevices_change.append(nic_spec)\r\nvmconf_spec.deviceChange = devices_change\r\n\r\nclone_spec = vim.vm.CloneSpec()\r\n\r\nclone_spec.powerOn = False\r\nclone_spec.location = relocate_spec\r\nclone_spec.config = vmconf_spec\r\n\r\n# clone_spec.customization = custom_spec\r\ntask = target.Clone(folder=onfolder, name=setname, spec=clone_spec)\r\n```\r\n\r\nSo, how can I enable startconnected during the cloning process instead of performing additional tasks?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/751", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/751/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/751/events", "html_url": "https://github.com/vmware/pyvmomi/issues/751", "id": 396405659, "node_id": "MDU6SXNzdWUzOTY0MDU2NTk=", "number": 751, "title": "get the snapshot details", "user": {"login": "vaidehi8goliwar", "id": 30145476, "node_id": "MDQ6VXNlcjMwMTQ1NDc2", "avatar_url": "https://avatars1.githubusercontent.com/u/30145476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaidehi8goliwar", "html_url": "https://github.com/vaidehi8goliwar", "followers_url": "https://api.github.com/users/vaidehi8goliwar/followers", "following_url": "https://api.github.com/users/vaidehi8goliwar/following{/other_user}", "gists_url": "https://api.github.com/users/vaidehi8goliwar/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaidehi8goliwar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaidehi8goliwar/subscriptions", "organizations_url": "https://api.github.com/users/vaidehi8goliwar/orgs", "repos_url": "https://api.github.com/users/vaidehi8goliwar/repos", "events_url": "https://api.github.com/users/vaidehi8goliwar/events{/privacy}", "received_events_url": "https://api.github.com/users/vaidehi8goliwar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T09:15:39Z", "updated_at": "2019-01-07T11:24:09Z", "closed_at": "2019-01-07T11:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "i wanted to run the code snapshot_operations.py available in pyvmomi community samples, but in that code we have to pass vm_name as input, i tried to automate it, by taking the arguments through powershell and also i wanted to store the details of snapshot for all the vm's in one run of the code. The issue is when i m collecting the vm names in a list and running it in a loop for assigning each name from list to vm_name variable, it is not fetching the information.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/749", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/749/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/749/events", "html_url": "https://github.com/vmware/pyvmomi/issues/749", "id": 390237326, "node_id": "MDU6SXNzdWUzOTAyMzczMjY=", "number": 749, "title": "Error in si.content.sessionManager.SessionIsActive", "user": {"login": "luminostech1089", "id": 16065932, "node_id": "MDQ6VXNlcjE2MDY1OTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/16065932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luminostech1089", "html_url": "https://github.com/luminostech1089", "followers_url": "https://api.github.com/users/luminostech1089/followers", "following_url": "https://api.github.com/users/luminostech1089/following{/other_user}", "gists_url": "https://api.github.com/users/luminostech1089/gists{/gist_id}", "starred_url": "https://api.github.com/users/luminostech1089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luminostech1089/subscriptions", "organizations_url": "https://api.github.com/users/luminostech1089/orgs", "repos_url": "https://api.github.com/users/luminostech1089/repos", "events_url": "https://api.github.com/users/luminostech1089/events{/privacy}", "received_events_url": "https://api.github.com/users/luminostech1089/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-12T13:57:11Z", "updated_at": "2019-02-04T06:16:07Z", "closed_at": "2019-02-04T06:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using si.content.sessionManager.SessionIsActive to check if the current session is active or not.\r\nI am using pyvmomi version: \r\nHere is my code:6.7.0.2018.9\r\n\r\nsi = connect.SmartConnect(host='192.168.200.10', user='root', pwd=r'abc123', port=443, sslContext=ssl._create_unverified_context())\r\nsessionid = si.content.sessionManager.currentSession.key\r\nprint si.content.sessionManager.SessionIsActive(sessionid, 'root')\r\n\r\nThe above code throws an below exception at line 'print si.content.sessionManager.SessionIsActive(sessionid, 'root')'\r\n\r\nTraceback (most recent call last):\r\n  File \"vsphereUtils.py\", line 448, in <module>\r\n    print si.content.sessionManager.SessionIsActive(sessionid, 'root') \r\n  File \"/usr/local/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\", line 580, in <lambda>\r\n    self.f(*(self.args + (obj,) + args), **kwargs)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\", line 386, in _InvokeMethod\r\n    return self._stub.InvokeMethod(self, info, args)\r\n  File \"/usr/local/lib/python2.7/site-packages/pyVmomi/SoapAdapter.py\", line 1374, in InvokeMethod\r\n    raise obj # pylint: disable-msg=E0702\r\npyVmomi.VmomiSupport.NotImplemented: (vmodl.fault.NotImplemented) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   msg = 'The requested operation is not implemented by the server.',\r\n   faultCause = <unset>,\r\n   faultMessage = (vmodl.LocalizableMessage) []", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/747", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/747/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/747/events", "html_url": "https://github.com/vmware/pyvmomi/issues/747", "id": 384927499, "node_id": "MDU6SXNzdWUzODQ5Mjc0OTk=", "number": 747, "title": "Trying to get vm datastore name fails", "user": {"login": "castertr0y357", "id": 4755578, "node_id": "MDQ6VXNlcjQ3NTU1Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4755578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/castertr0y357", "html_url": "https://github.com/castertr0y357", "followers_url": "https://api.github.com/users/castertr0y357/followers", "following_url": "https://api.github.com/users/castertr0y357/following{/other_user}", "gists_url": "https://api.github.com/users/castertr0y357/gists{/gist_id}", "starred_url": "https://api.github.com/users/castertr0y357/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/castertr0y357/subscriptions", "organizations_url": "https://api.github.com/users/castertr0y357/orgs", "repos_url": "https://api.github.com/users/castertr0y357/repos", "events_url": "https://api.github.com/users/castertr0y357/events{/privacy}", "received_events_url": "https://api.github.com/users/castertr0y357/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-27T18:25:31Z", "updated_at": "2018-11-27T19:48:30Z", "closed_at": "2018-11-27T19:48:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to create a script that will go through and grab relevant VM attributes that I want to inventory, and when I try to pull it from vim.VirtualMachine.datastore.info.name it tells me that ManagedObject[] object doesn't have the attribute 'info'\r\n\r\nCode below: scrubbed for sensitive data\r\n\r\n```\r\nfrom pyVmomi import vim, vmodl\r\nfrom pyVim import connect\r\nimport atexit\r\n\r\nservice_instance = connect.SmartConnectNoSSL(host='hostname',\r\n                               user='user',\r\n                               pwd='password',\r\n                               port=443)\r\n\r\natexit.register(connect.Disconnect, service_instance)\r\n\r\ncontent = service_instance.RetrieveContent()\r\n\r\ncontainer = content.rootFolder\r\nviewType = [vim.VirtualMachine]\r\nrecursive = True\r\ncontainerView = content.viewManager.CreateContainerView(container, viewType, recursive)\r\n\r\nchildren = containerView.view\r\n\r\nfor child in children:\r\n    vm = child\r\n\r\n    # Relevant VM attributes\r\n\r\n    name = vm.summary.config.name\r\n    template = vm.summary.config.template\r\n    numCPU = vm.summary.config.numCpu\r\n    cpuReservation = vm.summary.config.cpuReservation\r\n    memoryReservation = int(vm.summary.config.memoryReservation / 1024)\r\n    memorySizeGB = int(vm.summary.config.memorySizeMB / 1024)\r\n    host = vm.runtime.host.summary.config.name\r\n    toolsStatus = vm.guest.toolsVersionStatus2\r\n    toolsVersion = vm.config.tools.toolsVersion\r\n    guestId = vm.config.guestId\r\n    guestFullName = vm.config.guestFullName\r\n    guestAlternateName = vm.config.alternateGuestName\r\n    description = vm.config.annotation\r\n    instanceUuid = vm.config.instanceUuid\r\n    dataStore = vm.datastore.info.name\r\n    powerState = vm.runtime.powerState\r\n    perDataStoreUsage = vm.storage.perDatastoreUsage\r\n\r\n    # Print test\r\n\r\n    print(\"Name                         : \", name)\r\n    print(\"Power State                  : \", powerState)\r\n    print(\"Is VM a template?            : \", template)\r\n    print(\"Host                         : \", host)\r\n    print(\"Number of CPUs               : \", numCPU)\r\n    print(\"CPU reservations             : \", cpuReservation)\r\n    print(\"Memory Allocated in GB       : \", memorySizeGB)\r\n    print(\"Memory reserved in GB        : \", memoryReservation)\r\n    print(\"Are VMware tools installed?  : \", toolsStatus)\r\n    print(\"VMware tools version         : \", toolsVersion)\r\n    print(\"OS short name                : \", guestId)\r\n    print(\"OS full name                 : \", guestFullName)\r\n    print(\"OS alternate name            : \", guestAlternateName)\r\n    print(\"VM description               : \", description)\r\n    print(\"VM UUID                      : \", instanceUuid)\r\n    print(\"Datastore name               : \", dataStore)\r\n    print(\"Datastore usage              : \", perDataStoreUsage)\r\n\r\n    break\r\n```\r\n\r\nOutput:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:/Users/jfort/PycharmProjects/VMware test/VMware test.py\", line 40, in <module>\r\n    dataStore = vm.datastore.info.name\r\nAttributeError: 'ManagedObject[]' object has no attribute 'info'\r\n\r\nIf I remove the .info.name from that line it simply responds with:\r\nDatastore name               :  (ManagedObject) [\r\n   'vim.Datastore:datastore-59546'\r\n]\r\n\r\nAm I missing something here? Or is this not working as intended?  If I change to pulling datastores directly, I can pull the name just fine, but I'm trying to work with the VMs as the main object, and then I can pull related information about the VM host or datastore in separate requests.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/744", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/744/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/744/events", "html_url": "https://github.com/vmware/pyvmomi/issues/744", "id": 381108384, "node_id": "MDU6SXNzdWUzODExMDgzODQ=", "number": 744, "title": "Increase/update CPU cores , and RAM", "user": {"login": "iahmad-khan", "id": 13478264, "node_id": "MDQ6VXNlcjEzNDc4MjY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13478264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iahmad-khan", "html_url": "https://github.com/iahmad-khan", "followers_url": "https://api.github.com/users/iahmad-khan/followers", "following_url": "https://api.github.com/users/iahmad-khan/following{/other_user}", "gists_url": "https://api.github.com/users/iahmad-khan/gists{/gist_id}", "starred_url": "https://api.github.com/users/iahmad-khan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iahmad-khan/subscriptions", "organizations_url": "https://api.github.com/users/iahmad-khan/orgs", "repos_url": "https://api.github.com/users/iahmad-khan/repos", "events_url": "https://api.github.com/users/iahmad-khan/events{/privacy}", "received_events_url": "https://api.github.com/users/iahmad-khan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T11:00:21Z", "updated_at": "2018-11-18T14:51:03Z", "closed_at": "2018-11-18T14:51:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to increase the cpu and ram of existing VM? \r\n\r\nLet say from 4 cores to 8 cores , from 4 GB ram to 8GB", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/739", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/739/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/739/events", "html_url": "https://github.com/vmware/pyvmomi/issues/739", "id": 378047581, "node_id": "MDU6SXNzdWUzNzgwNDc1ODE=", "number": 739, "title": "Can I invalidate the property cache?", "user": {"login": "jeking3", "id": 11771245, "node_id": "MDQ6VXNlcjExNzcxMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11771245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeking3", "html_url": "https://github.com/jeking3", "followers_url": "https://api.github.com/users/jeking3/followers", "following_url": "https://api.github.com/users/jeking3/following{/other_user}", "gists_url": "https://api.github.com/users/jeking3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeking3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeking3/subscriptions", "organizations_url": "https://api.github.com/users/jeking3/orgs", "repos_url": "https://api.github.com/users/jeking3/repos", "events_url": "https://api.github.com/users/jeking3/events{/privacy}", "received_events_url": "https://api.github.com/users/jeking3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-06T21:48:20Z", "updated_at": "2018-11-07T04:53:59Z", "closed_at": "2018-11-07T04:53:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let's say I have a workflow where I am waiting for a task to complete.\r\nLet's also say that a given task ends up posting TWO questions to the VM that need answering.\r\nWhen I call `vm.runtime.question` I would retrieve the question from the server and it would get cached.\r\nAll future calls to query `vm.runtime.question` would then return the same data, correct?\r\n\r\nHow could I clear out the cached response for the question property and force pyvmomi to go back to the server again?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/735", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/735/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/735/events", "html_url": "https://github.com/vmware/pyvmomi/issues/735", "id": 376285360, "node_id": "MDU6SXNzdWUzNzYyODUzNjA=", "number": 735, "title": "vcrpy 1.13", "user": {"login": "rapgro", "id": 8060894, "node_id": "MDQ6VXNlcjgwNjA4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8060894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rapgro", "html_url": "https://github.com/rapgro", "followers_url": "https://api.github.com/users/rapgro/followers", "following_url": "https://api.github.com/users/rapgro/following{/other_user}", "gists_url": "https://api.github.com/users/rapgro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rapgro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rapgro/subscriptions", "organizations_url": "https://api.github.com/users/rapgro/orgs", "repos_url": "https://api.github.com/users/rapgro/repos", "events_url": "https://api.github.com/users/rapgro/events{/privacy}", "received_events_url": "https://api.github.com/users/rapgro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-01T07:35:12Z", "updated_at": "2018-12-06T17:04:31Z", "closed_at": "2018-12-06T17:04:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've python-vcrpy 1.13 in Fedora 29 and have python3-vcrpy as an enforced build dependency. \r\nTry to start tests fail with an error:\r\n```\r\n+ cd pyvmomi-6.7.1\r\n+ /usr/bin/python3 setup.py test\r\nrunning test\r\nSearching for vcrpy==1.12.0\r\nReading https://pypi.org/simple/vcrpy/\r\nDownload error on https://pypi.org/simple/vcrpy/: [Errno -2] Name or service not known -- Some packages may not be found!\r\nCouldn't retrieve index page for 'vcrpy'\r\nScanning index of all packages (this may take a while)\r\nReading https://pypi.org/simple/\r\nDownload error on https://pypi.org/simple/: [Errno -2] Name or service not known -- Some packages may not be found!\r\nNo local packages or working download links found for vcrpy==1.12.0\r\nerror: Could not find suitable distribution for Requirement.parse('vcrpy==1.12.0')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/733", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/733/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/733/events", "html_url": "https://github.com/vmware/pyvmomi/issues/733", "id": 375521522, "node_id": "MDU6SXNzdWUzNzU1MjE1MjI=", "number": 733, "title": "Tags support in 6.5, 6.7.1?", "user": {"login": "jeking3", "id": 11771245, "node_id": "MDQ6VXNlcjExNzcxMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11771245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeking3", "html_url": "https://github.com/jeking3", "followers_url": "https://api.github.com/users/jeking3/followers", "following_url": "https://api.github.com/users/jeking3/following{/other_user}", "gists_url": "https://api.github.com/users/jeking3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeking3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeking3/subscriptions", "organizations_url": "https://api.github.com/users/jeking3/orgs", "repos_url": "https://api.github.com/users/jeking3/repos", "events_url": "https://api.github.com/users/jeking3/events{/privacy}", "received_events_url": "https://api.github.com/users/jeking3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-30T14:33:54Z", "updated_at": "2018-11-05T13:06:33Z", "closed_at": "2018-11-05T13:06:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Folks on ansible report that tags don't work with pyVmomi 6.5 so they have added code to call out to the vCloud Suite SDK if it is installed in order to get tags.  However when I use pyVmomi 6.7.1 and encode a VirtualMachine to JSON, I see tags.  Was tag support added since 6.5 here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/730", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/730/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/730/events", "html_url": "https://github.com/vmware/pyvmomi/issues/730", "id": 371199529, "node_id": "MDU6SXNzdWUzNzExOTk1Mjk=", "number": 730, "title": "Provide a better way to load an object if the ManagedObjectReference is known", "user": {"login": "jeking3", "id": 11771245, "node_id": "MDQ6VXNlcjExNzcxMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11771245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeking3", "html_url": "https://github.com/jeking3", "followers_url": "https://api.github.com/users/jeking3/followers", "following_url": "https://api.github.com/users/jeking3/following{/other_user}", "gists_url": "https://api.github.com/users/jeking3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeking3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeking3/subscriptions", "organizations_url": "https://api.github.com/users/jeking3/orgs", "repos_url": "https://api.github.com/users/jeking3/repos", "events_url": "https://api.github.com/users/jeking3/events{/privacy}", "received_events_url": "https://api.github.com/users/jeking3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-17T18:00:43Z", "updated_at": "2018-10-19T16:48:47Z", "closed_at": "2018-10-19T16:48:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I look at the `host` property of a `vim.Datastore`, it contains an array of `DatastoreHostMount` (`vim.datastore.HostMount`).  This object has a property called `key` which looks like: `vim.HostSystem:host-14`.  I'm guessing there's an easy (one line) way to load a single object if you know the type and id, but I'm not seeing it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/729", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/729/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/729/events", "html_url": "https://github.com/vmware/pyvmomi/issues/729", "id": 371179143, "node_id": "MDU6SXNzdWUzNzExNzkxNDM=", "number": 729, "title": "vim.datastore.HostMount.key is not declared as F_LINKABLE", "user": {"login": "jeking3", "id": 11771245, "node_id": "MDQ6VXNlcjExNzcxMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11771245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeking3", "html_url": "https://github.com/jeking3", "followers_url": "https://api.github.com/users/jeking3/followers", "following_url": "https://api.github.com/users/jeking3/following{/other_user}", "gists_url": "https://api.github.com/users/jeking3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeking3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeking3/subscriptions", "organizations_url": "https://api.github.com/users/jeking3/orgs", "repos_url": "https://api.github.com/users/jeking3/repos", "events_url": "https://api.github.com/users/jeking3/events{/privacy}", "received_events_url": "https://api.github.com/users/jeking3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-17T17:08:13Z", "updated_at": "2018-10-19T16:49:13Z", "closed_at": "2018-10-19T16:49:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not quite sure how the \"linkable\" concept works yet, but from what I can tell if a field represents a link to another object then the options in the generated code should specify that it is linkable.  In this case vim.datastore.HostMount.key has flags of 0 in the currently checked-in ServerObjects.py (which is generated).  Am I misunderstanding this?  If it is linkable, how am I supposed to be able to navigate from the HostMount.key to the HostSystem without opening a view container for it?  There must be a trivial and easy way to do this...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/726", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/726/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/726/events", "html_url": "https://github.com/vmware/pyvmomi/issues/726", "id": 370392532, "node_id": "MDU6SXNzdWUzNzAzOTI1MzI=", "number": 726, "title": "how to send nmi to VM using pyvmomi?", "user": {"login": "lihlcnkr", "id": 5908778, "node_id": "MDQ6VXNlcjU5MDg3Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5908778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lihlcnkr", "html_url": "https://github.com/lihlcnkr", "followers_url": "https://api.github.com/users/lihlcnkr/followers", "following_url": "https://api.github.com/users/lihlcnkr/following{/other_user}", "gists_url": "https://api.github.com/users/lihlcnkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lihlcnkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lihlcnkr/subscriptions", "organizations_url": "https://api.github.com/users/lihlcnkr/orgs", "repos_url": "https://api.github.com/users/lihlcnkr/repos", "events_url": "https://api.github.com/users/lihlcnkr/events{/privacy}", "received_events_url": "https://api.github.com/users/lihlcnkr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-16T00:23:44Z", "updated_at": "2018-10-25T01:26:26Z", "closed_at": "2018-10-18T04:11:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanna send NMI to VM(hang VM, and generate dump file), and the following API is not works.\r\n`vm.SendNMI()`\r\nafter call SendNMI() method, following error is occurred.\r\n> requested operation is not implemented by the server.\r\n\r\nhow to send NMI to VM? \r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/723", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/723/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/723/events", "html_url": "https://github.com/vmware/pyvmomi/issues/723", "id": 366910519, "node_id": "MDU6SXNzdWUzNjY5MTA1MTk=", "number": 723, "title": "How to use CreateListView / ModifyListView (or, how do I make a ManagedObjectReference)?", "user": {"login": "jeking3", "id": 11771245, "node_id": "MDQ6VXNlcjExNzcxMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11771245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeking3", "html_url": "https://github.com/jeking3", "followers_url": "https://api.github.com/users/jeking3/followers", "following_url": "https://api.github.com/users/jeking3/following{/other_user}", "gists_url": "https://api.github.com/users/jeking3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeking3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeking3/subscriptions", "organizations_url": "https://api.github.com/users/jeking3/orgs", "repos_url": "https://api.github.com/users/jeking3/repos", "events_url": "https://api.github.com/users/jeking3/events{/privacy}", "received_events_url": "https://api.github.com/users/jeking3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-04T18:16:21Z", "updated_at": "2018-10-04T18:46:50Z", "closed_at": "2018-10-04T18:46:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The call to [CreateListView](https://code.vmware.com/apis/358/vsphere#/doc/vim.view.ViewManager.html#createListView) takes an optional array of ManagedObjectReference.\r\n\r\nI know the type and the value I want to pass in, but I see no way to create a ManagedObjectReference.  For example:\r\n```\r\n  File \"/opt/stackstorm/packs.dev/vsphere/actions/vmwarelib/collector.py\", line 46, in collect\r\n    moRef = pyVmomi.vmodl.ManagedObjectReference()\r\n  File \"/opt/stackstorm/virtualenvs/vsphere/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\", line 247, in __getattr__\r\n    raise AttributeError(attr)\r\nAttributeError: ManagedObjectReference\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/719", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/719/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/719/events", "html_url": "https://github.com/vmware/pyvmomi/issues/719", "id": 361224287, "node_id": "MDU6SXNzdWUzNjEyMjQyODc=", "number": 719, "title": "how to power on a esxi host by pyvmomi", "user": {"login": "CengSin", "id": 23357893, "node_id": "MDQ6VXNlcjIzMzU3ODkz", "avatar_url": "https://avatars0.githubusercontent.com/u/23357893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CengSin", "html_url": "https://github.com/CengSin", "followers_url": "https://api.github.com/users/CengSin/followers", "following_url": "https://api.github.com/users/CengSin/following{/other_user}", "gists_url": "https://api.github.com/users/CengSin/gists{/gist_id}", "starred_url": "https://api.github.com/users/CengSin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CengSin/subscriptions", "organizations_url": "https://api.github.com/users/CengSin/orgs", "repos_url": "https://api.github.com/users/CengSin/repos", "events_url": "https://api.github.com/users/CengSin/events{/privacy}", "received_events_url": "https://api.github.com/users/CengSin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-18T09:52:44Z", "updated_at": "2018-09-20T01:37:26Z", "closed_at": "2018-09-20T01:37:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "the esxi host is power off, so , i hope i can do something for power on the host", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/718", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/718/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/718/events", "html_url": "https://github.com/vmware/pyvmomi/issues/718", "id": 361222369, "node_id": "MDU6SXNzdWUzNjEyMjIzNjk=", "number": 718, "title": "how to set the ipmi by the HostIpmiInfo", "user": {"login": "CengSin", "id": 23357893, "node_id": "MDQ6VXNlcjIzMzU3ODkz", "avatar_url": "https://avatars0.githubusercontent.com/u/23357893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CengSin", "html_url": "https://github.com/CengSin", "followers_url": "https://api.github.com/users/CengSin/followers", "following_url": "https://api.github.com/users/CengSin/following{/other_user}", "gists_url": "https://api.github.com/users/CengSin/gists{/gist_id}", "starred_url": "https://api.github.com/users/CengSin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CengSin/subscriptions", "organizations_url": "https://api.github.com/users/CengSin/orgs", "repos_url": "https://api.github.com/users/CengSin/repos", "events_url": "https://api.github.com/users/CengSin/events{/privacy}", "received_events_url": "https://api.github.com/users/CengSin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-18T09:47:58Z", "updated_at": "2018-09-20T01:37:34Z", "closed_at": "2018-09-20T01:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "my code:\r\n```python\r\n    updateIpmi = vim.host.IpmiInfo(\"HostIpmiInfo\", [bmcIpAddress, bmcMacAddress, login, password])\r\n    host.UpdateIpmi(updateIpmi)\r\n```\r\nthe exception information:\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.4\\helpers\\pydev\\pydevd.py\", line 1664, in <module>\r\n    main()\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.4\\helpers\\pydev\\pydevd.py\", line 1658, in main\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.4\\helpers\\pydev\\pydevd.py\", line 1068, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"C:/Users/Administrator/PycharmProjects/vmware_esxi_api/src/esxi.py\", line 48, in <module>\r\n    updateIpmi = vim.host.IpmiInfo(bmcIpAddress, bmcMacAddress, login, password)\r\nTypeError: __init__() takes exactly 1 argument (5 given)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/717", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/717/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/717/events", "html_url": "https://github.com/vmware/pyvmomi/issues/717", "id": 359949854, "node_id": "MDU6SXNzdWUzNTk5NDk4NTQ=", "number": 717, "title": "Instant cloning support", "user": {"login": "raymondhoagland", "id": 3880432, "node_id": "MDQ6VXNlcjM4ODA0MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3880432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raymondhoagland", "html_url": "https://github.com/raymondhoagland", "followers_url": "https://api.github.com/users/raymondhoagland/followers", "following_url": "https://api.github.com/users/raymondhoagland/following{/other_user}", "gists_url": "https://api.github.com/users/raymondhoagland/gists{/gist_id}", "starred_url": "https://api.github.com/users/raymondhoagland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raymondhoagland/subscriptions", "organizations_url": "https://api.github.com/users/raymondhoagland/orgs", "repos_url": "https://api.github.com/users/raymondhoagland/repos", "events_url": "https://api.github.com/users/raymondhoagland/events{/privacy}", "received_events_url": "https://api.github.com/users/raymondhoagland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-13T15:32:46Z", "updated_at": "2018-09-14T00:08:28Z", "closed_at": "2018-09-14T00:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that instant cloning has made it into the VSphere 6.7 APIs, is there current support or a plan to support invoking it from pyvmomi? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/714", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/714/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/714/events", "html_url": "https://github.com/vmware/pyvmomi/issues/714", "id": 357007308, "node_id": "MDU6SXNzdWUzNTcwMDczMDg=", "number": 714, "title": "Missing object backings in ServerObjects.py", "user": {"login": "nehagjain15", "id": 850083, "node_id": "MDQ6VXNlcjg1MDA4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/850083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehagjain15", "html_url": "https://github.com/nehagjain15", "followers_url": "https://api.github.com/users/nehagjain15/followers", "following_url": "https://api.github.com/users/nehagjain15/following{/other_user}", "gists_url": "https://api.github.com/users/nehagjain15/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehagjain15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehagjain15/subscriptions", "organizations_url": "https://api.github.com/users/nehagjain15/orgs", "repos_url": "https://api.github.com/users/nehagjain15/repos", "events_url": "https://api.github.com/users/nehagjain15/events{/privacy}", "received_events_url": "https://api.github.com/users/nehagjain15/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-04T23:05:55Z", "updated_at": "2018-09-05T05:53:12Z", "closed_at": "2018-09-05T05:53:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/703", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/703/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/703/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/703/events", "html_url": "https://github.com/vmware/pyvmomi/issues/703", "id": 342760800, "node_id": "MDU6SXNzdWUzNDI3NjA4MDA=", "number": 703, "title": "netStackInstanceKey on vnic is returned as None although it is set.", "user": {"login": "jonathanmier", "id": 24796900, "node_id": "MDQ6VXNlcjI0Nzk2OTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/24796900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanmier", "html_url": "https://github.com/jonathanmier", "followers_url": "https://api.github.com/users/jonathanmier/followers", "following_url": "https://api.github.com/users/jonathanmier/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanmier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanmier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanmier/subscriptions", "organizations_url": "https://api.github.com/users/jonathanmier/orgs", "repos_url": "https://api.github.com/users/jonathanmier/repos", "events_url": "https://api.github.com/users/jonathanmier/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanmier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-19T14:46:45Z", "updated_at": "2018-08-13T19:14:30Z", "closed_at": "2018-08-13T19:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to get the netstack instance key from a vnic on a host it is returned as None. I can see through the MOB that is it indeed set? Any ideas? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/699", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/699/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/699/events", "html_url": "https://github.com/vmware/pyvmomi/issues/699", "id": 340087207, "node_id": "MDU6SXNzdWUzNDAwODcyMDc=", "number": 699, "title": "error for mount snapshot vmfs. \"vim.host.UnresolvedVmfsResolutionSpec is not iterable\"", "user": {"login": "lihlcnkr", "id": 5908778, "node_id": "MDQ6VXNlcjU5MDg3Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5908778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lihlcnkr", "html_url": "https://github.com/lihlcnkr", "followers_url": "https://api.github.com/users/lihlcnkr/followers", "following_url": "https://api.github.com/users/lihlcnkr/following{/other_user}", "gists_url": "https://api.github.com/users/lihlcnkr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lihlcnkr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lihlcnkr/subscriptions", "organizations_url": "https://api.github.com/users/lihlcnkr/orgs", "repos_url": "https://api.github.com/users/lihlcnkr/repos", "events_url": "https://api.github.com/users/lihlcnkr/events{/privacy}", "received_events_url": "https://api.github.com/users/lihlcnkr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-11T04:24:35Z", "updated_at": "2019-10-25T07:00:23Z", "closed_at": "2019-10-25T06:57:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When we are trying to mount snapshot vmfs(Resignature or 'Force Mount' unbound VMFS volumes) we are failing with error \"vim.host.UnresolvedVmfsResolutionSpec is not iterable\"\r\n\r\nthe code is like this:\r\n`    \r\n    storageSystem = host.configManager.storageSystem\r\n    unresolvedVolumes = storageSystem.QueryUnresolvedVmfsVolume()\r\n    volume = None\r\n    for unresolvedVolume in unresolvedVolumes:\r\n        print(\"unresolvedVolume:\", unresolvedVolume)\r\n        if unresolvedVolume.vmfsLabel == volumename:\r\n            volume = unresolvedVolume\r\n            break\r\n\r\n    resolutionSpec = vim.host.UnresolvedVmfsResolutionSpec()\r\n    paths = []\r\n    for extent in volume.extent:\r\n        paths.append(extent.devicePath)\r\n    resolutionSpec.extentDevicePath = paths\r\n    #task = storageSystem.ResolveMultipleUnresolvedVmfsVolumes(resolutionSpec)\r\n    task = storageSystem.ResolveMultipleUnresolvedVmfsVolumesEx(resolutionSpec)\r\n\r\n    tasks.wait_for_tasks(si, [task])\r\n`\r\n\r\nUsing this code failed with below error:\r\n\r\n> File \"/usr/local/****/VmomiSuppport.py\", Line 953, in CheckField\r\n> for it in val:\r\n> TypeError: 'vim.host.UnresolvedVmfsResolutionSpec' object is not iterable\r\n\r\nhow to fix this error? is it bug? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/696", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/696/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/696/events", "html_url": "https://github.com/vmware/pyvmomi/issues/696", "id": 337669713, "node_id": "MDU6SXNzdWUzMzc2Njk3MTM=", "number": 696, "title": "Task SetTaskDescription question", "user": {"login": "ebruno", "id": 217444, "node_id": "MDQ6VXNlcjIxNzQ0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/217444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebruno", "html_url": "https://github.com/ebruno", "followers_url": "https://api.github.com/users/ebruno/followers", "following_url": "https://api.github.com/users/ebruno/following{/other_user}", "gists_url": "https://api.github.com/users/ebruno/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebruno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebruno/subscriptions", "organizations_url": "https://api.github.com/users/ebruno/orgs", "repos_url": "https://api.github.com/users/ebruno/repos", "events_url": "https://api.github.com/users/ebruno/events{/privacy}", "received_events_url": "https://api.github.com/users/ebruno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-02T21:29:16Z", "updated_at": "2018-07-11T17:00:57Z", "closed_at": "2018-07-11T17:00:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The call requires a vmodl.LocalizableMessage object,   I can create the object  but what should be use for the key for the catalog for just a simple string to be displayed.\r\n\r\n(vmodl.LocalizableMessage) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   key = '',\r\n   arg = (vmodl.KeyAnyValue) [],\r\n   message = 'My test message'\r\n}\r\nWhen  I look at at the task here is what is shown.\r\ntestevent\r\nKey\r\nvmodlTask-ha-datacenter-11111111111\r\n\r\nDescription\r\nunknown\r\n\r\n[missing \"en-us.entity.type.Datacenter\" translation]:\r\nState\r\nCompleted successfully\r\nErrors\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/694", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/694/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/694/events", "html_url": "https://github.com/vmware/pyvmomi/issues/694", "id": 335176903, "node_id": "MDU6SXNzdWUzMzUxNzY5MDM=", "number": 694, "title": "Error when connecting to vCenter 6.7", "user": {"login": "waldirio", "id": 3759942, "node_id": "MDQ6VXNlcjM3NTk5NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3759942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waldirio", "html_url": "https://github.com/waldirio", "followers_url": "https://api.github.com/users/waldirio/followers", "following_url": "https://api.github.com/users/waldirio/following{/other_user}", "gists_url": "https://api.github.com/users/waldirio/gists{/gist_id}", "starred_url": "https://api.github.com/users/waldirio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waldirio/subscriptions", "organizations_url": "https://api.github.com/users/waldirio/orgs", "repos_url": "https://api.github.com/users/waldirio/repos", "events_url": "https://api.github.com/users/waldirio/events{/privacy}", "received_events_url": "https://api.github.com/users/waldirio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-24T12:50:41Z", "updated_at": "2018-06-26T15:34:26Z", "closed_at": "2018-06-26T15:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all, good morning\r\n\r\nI'm trying to connect on vCenter 6.7 using pyvmomi, so below one simple example\r\n```\r\n#!/usr/bin/env python \r\n\r\nfrom corerv import *\r\nimport requests\r\n\r\nfrom pyVim import connect\r\nfrom pyVmomi import vmodl\r\nfrom pyVmomi import vim\r\nimport ssl\r\n\r\ndef main():\r\n    print(\"Reading the conf file\")\r\n\r\n    obj = coreCode()\r\n    conn = obj.read_conf_file()\r\n    \r\n    si = connect.SmartConnect(host=conn._vcenter,user=conn._username,pwd=conn._password)\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nThen on scenario above I got the message below\r\n```\r\nReading the conf file\r\nTraceback (most recent call last):\r\n  File \"/home/wpinheir/code/rvtools/rvtools/rvtools.py\", line 27, in <module>\r\n    main()\r\n  File \"/home/wpinheir/code/rvtools/rvtools/rvtools.py\", line 22, in main\r\n    si = connect.SmartConnect(host=conn._vcenter,user=conn._username,pwd=conn._password)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 836, in SmartConnect\r\n    sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 718, in __FindSupportedVersion\r\n    sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 638, in __GetServiceVersionDescription\r\n    path + \"/vimServiceVersions.xml\", sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 604, in __GetElementTree\r\n    conn.request(\"GET\", path)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1400, in connect\r\n    server_hostname=server_hostname)\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 365, in wrap_socket\r\n    _context=self, _session=session)\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 770, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 1024, in do_handshake\r\n    self._sslobj.do_handshake()\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 645, in do_handshake\r\n    self._sslobj.do_handshake()\r\nssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:858)\r\n```\r\n\r\nThen I saw some infos / posts related to define the sslContext and some fixes related to that, then\r\n\r\n```\r\n#!/usr/bin/env python \r\n\r\nfrom corerv import *\r\nimport requests\r\n\r\nfrom pyVim import connect\r\nfrom pyVmomi import vmodl\r\nfrom pyVmomi import vim\r\nimport ssl\r\n\r\n\r\ndef main():\r\n    print(\"Reading the conf file\")\r\n\r\n    obj = coreCode()\r\n    conn = obj.read_conf_file()\r\n\r\n    \r\n    sslContext = ssl.SSLContext(ssl.PROTOCOL_TLSv1)\r\n    sslContext.verify_mode = ssl.CERT_NONE\r\n    \r\n    si = connect.SmartConnect(host=conn._vcenter,user=conn._username,pwd=conn._password, sslContext=sslContext)\r\n    \r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nNow I'm facing another issue\r\n```\r\nReading the conf file\r\nTraceback (most recent call last):\r\n  File \"/home/wpinheir/code/rvtools/rvtools/rvtools.py\", line 26, in <module>\r\n    main()\r\n  File \"/home/wpinheir/code/rvtools/rvtools/rvtools.py\", line 22, in main\r\n    si = connect.SmartConnect(host=conn._vcenter,user=conn._username,pwd=conn._password, sslContext=sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 836, in SmartConnect\r\n    sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 718, in __FindSupportedVersion\r\n    sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 638, in __GetServiceVersionDescription\r\n    path + \"/vimServiceVersions.xml\", sslContext)\r\n  File \"/home/wpinheir/.virtualenvs/rvtools/lib/python3.6/site-packages/pyVim/connect.py\", line 604, in __GetElementTree\r\n    conn.request(\"GET\", path)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/usr/lib64/python3.6/http/client.py\", line 1400, in connect\r\n    server_hostname=server_hostname)\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 365, in wrap_socket\r\n    _context=self, _session=session)\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 770, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 1024, in do_handshake\r\n    self._sslobj.do_handshake()\r\n  File \"/usr/lib64/python3.6/ssl.py\", line 645, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n```\r\n\r\nAppreciate your help.\r\n\r\n\r\nNote. Just one complement, tested on Python 2.7 and 3.6, same result.\r\n\r\nWaldirio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/690", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/690/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/690/events", "html_url": "https://github.com/vmware/pyvmomi/issues/690", "id": 331539802, "node_id": "MDU6SXNzdWUzMzE1Mzk4MDI=", "number": 690, "title": "How do I get the variable of type vim.Folder for a folder created using content.fileManager.MakeDirectory(name, datacenter) ", "user": {"login": "s1dsaharan", "id": 40201769, "node_id": "MDQ6VXNlcjQwMjAxNzY5", "avatar_url": "https://avatars2.githubusercontent.com/u/40201769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s1dsaharan", "html_url": "https://github.com/s1dsaharan", "followers_url": "https://api.github.com/users/s1dsaharan/followers", "following_url": "https://api.github.com/users/s1dsaharan/following{/other_user}", "gists_url": "https://api.github.com/users/s1dsaharan/gists{/gist_id}", "starred_url": "https://api.github.com/users/s1dsaharan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s1dsaharan/subscriptions", "organizations_url": "https://api.github.com/users/s1dsaharan/orgs", "repos_url": "https://api.github.com/users/s1dsaharan/repos", "events_url": "https://api.github.com/users/s1dsaharan/events{/privacy}", "received_events_url": "https://api.github.com/users/s1dsaharan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-12T11:02:31Z", "updated_at": "2018-06-13T05:29:04Z", "closed_at": "2018-06-13T05:29:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since content.fileManager.MakeDirectory(name, datacenter) returns no value and the folder does not contain any virtual machine (so it can't be located in vm-folders) . How can I obtain a [vim.Folder] type variable for such a folder.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/688", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/688/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/688/events", "html_url": "https://github.com/vmware/pyvmomi/issues/688", "id": 331156565, "node_id": "MDU6SXNzdWUzMzExNTY1NjU=", "number": 688, "title": "strange uuid permutations", "user": {"login": "briner", "id": 338372, "node_id": "MDQ6VXNlcjMzODM3Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/338372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briner", "html_url": "https://github.com/briner", "followers_url": "https://api.github.com/users/briner/followers", "following_url": "https://api.github.com/users/briner/following{/other_user}", "gists_url": "https://api.github.com/users/briner/gists{/gist_id}", "starred_url": "https://api.github.com/users/briner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briner/subscriptions", "organizations_url": "https://api.github.com/users/briner/orgs", "repos_url": "https://api.github.com/users/briner/repos", "events_url": "https://api.github.com/users/briner/events{/privacy}", "received_events_url": "https://api.github.com/users/briner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-11T11:51:04Z", "updated_at": "2018-10-25T11:57:01Z", "closed_at": "2018-10-25T02:42:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nSince the version 6.5 of vcenter and 6.5 of ESX, I got some differences on how the uuid is represented.\r\n\r\nFrom the guest I get the UUID (cat /sys/class/dmi/id/product_uuid)\r\n 5C241F42-A87F-FA60-6AF6-A46351CED0EB\r\n\r\nFrom the vcenter through pyvmomi i get:\r\n421F245C-7FA8-60FA-6AF6-A46351CED0EB\r\n\r\nWe see that the lasts pieces: 6AF6 and A46351CED0EB are the same. When\r\nthe other had have some permutations:\r\n- FA 60 becomes 60 FA\r\n- A8 7F becomes 7F A8\r\n- 5C 24 1F 42 becomes 42 1F 24 5C\r\n\r\nAny idea on what is the problem ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/686", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/686/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/686/events", "html_url": "https://github.com/vmware/pyvmomi/issues/686", "id": 330283064, "node_id": "MDU6SXNzdWUzMzAyODMwNjQ=", "number": 686, "title": "Why? is not a VIM server", "user": {"login": "iandriyanov", "id": 1125505, "node_id": "MDQ6VXNlcjExMjU1MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1125505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iandriyanov", "html_url": "https://github.com/iandriyanov", "followers_url": "https://api.github.com/users/iandriyanov/followers", "following_url": "https://api.github.com/users/iandriyanov/following{/other_user}", "gists_url": "https://api.github.com/users/iandriyanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/iandriyanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iandriyanov/subscriptions", "organizations_url": "https://api.github.com/users/iandriyanov/orgs", "repos_url": "https://api.github.com/users/iandriyanov/repos", "events_url": "https://api.github.com/users/iandriyanov/events{/privacy}", "received_events_url": "https://api.github.com/users/iandriyanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-07T13:53:57Z", "updated_at": "2018-06-18T10:59:03Z", "closed_at": "2018-06-18T10:59:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to connect on vCenter (5.5) from ansible 2.5 module vmware_guest_facts and from sample getallvm.\r\nAnd every time receive exception:\r\n\r\n```The full traceback is:\r\n  File \"/tmp/ansible_KTZRHn/ansible_modlib.zip/ansible/module_utils/vmware.py\", line 500, in connect_to_api\r\n    service_instance = connect.SmartConnect(host=hostname, user=username, pwd=password, sslContext=ssl_context, port=port)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyVim/connect.py\", line 840, in SmartConnect\r\n    raise Exception(\"%s:%s is not a VIM server\" % (host, port))\r\n\r\nfatal: [localhost -> localhost]: FAILED! => {\r\n    \"changed\": false,\r\n    \"invocation\": {\r\n        \"module_args\": {\r\n            \"datacenter\": \"name\",\r\n            \"folder\": \"/vm\",\r\n            \"hostname\": \"hostname.tld\",\r\n            \"name\": null,\r\n            \"name_match\": \"first\",\r\n            \"password\": \"VALUE_SPECIFIED_IN_NO_LOG_PARAMETER\",\r\n            \"port\": 443,\r\n            \"username\": \"name@domain\",\r\n            \"uuid\": \"dasd-21312-dasd-32423-dsad\",\r\n            \"validate_certs\": true\r\n        }\r\n    },\r\n    \"msg\": \"Unknown error while connecting to vCenter or ESXi API at hostname.tld:443 : hostname.tld:443 is not a VIM server\"\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/682", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/682/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/682/events", "html_url": "https://github.com/vmware/pyvmomi/issues/682", "id": 326018190, "node_id": "MDU6SXNzdWUzMjYwMTgxOTA=", "number": 682, "title": "Failed to change hostsystem's advance option in Python3", "user": {"login": "Akasurde", "id": 633765, "node_id": "MDQ6VXNlcjYzMzc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/633765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Akasurde", "html_url": "https://github.com/Akasurde", "followers_url": "https://api.github.com/users/Akasurde/followers", "following_url": "https://api.github.com/users/Akasurde/following{/other_user}", "gists_url": "https://api.github.com/users/Akasurde/gists{/gist_id}", "starred_url": "https://api.github.com/users/Akasurde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Akasurde/subscriptions", "organizations_url": "https://api.github.com/users/Akasurde/orgs", "repos_url": "https://api.github.com/users/Akasurde/repos", "events_url": "https://api.github.com/users/Akasurde/events{/privacy}", "received_events_url": "https://api.github.com/users/Akasurde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-24T08:36:05Z", "updated_at": "2019-05-28T08:15:27Z", "closed_at": "2018-05-25T05:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I using following code to change advance option of Host Systems - \r\n\r\n```python\r\nfrom pyVim.connect import SmartConnect, Disconnect\r\nimport ssl\r\nimport atexit\r\nfrom pyVmomi import vim, vmodl\r\nimport time\r\n\r\n\r\ndef connect():\r\n    context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)\r\n    context.verify_mode = ssl.CERT_NONE\r\n\r\n    si = SmartConnect(host='xx.xx.xx.xx', user='administrator@vsphere.local', pwd='password', port=443, sslContext=context)\r\n    atexit.register(Disconnect, si)\r\n    content = si.RetrieveContent()\r\n    return content\r\n\r\ndef get_obj(content, vimtype, name):\r\n    \"\"\"\r\n    Return an object by name, if name is None the\r\n    first found object is returned\r\n    \"\"\"\r\n    obj = None\r\n    if name in ['', None]:\r\n        obj = []\r\n    container = content.viewManager.CreateContainerView(content.rootFolder, vimtype, True)\r\n    for c in container.view:\r\n        if name:\r\n            if c.name == name:\r\n                obj = c\r\n                break\r\n        else:\r\n            obj.append(c)\r\n\r\n    container.Destroy()\r\n    return obj\r\n\r\ncontent = connect()\r\n\r\nhost = get_obj(content, [vim.HostSystem], None)[0]\r\noption_manager = host.configManager.advancedOption\r\noption_manager.UpdateOptions(changedValue=[vim.option.OptionValue(key='UserVars.ESXiShellInteractiveTimeOut', value=long(11))])\r\nfor option in option_manager.QueryOptions():\r\n    if option.key == 'UserVars.ESXiShellInteractiveTimeOut':\r\n        print(option.value)\r\n```\r\n\r\nThis code works perfectly fine in Python 2, but in Python 3, `long` is merged into `int` so raises error.\r\nIf I try to typecast value using `int` then it fails with following error - \r\n\r\n```\r\npython host_config.py\r\nTraceback (most recent call last):\r\n  File \"host_config.py\", line 45, in <module>\r\n    option_manager.UpdateOptions(changedValue=[vim.option.OptionValue(key='UserVars.ESXiShellInteractiveTimeOut', value=int(11))])\r\n  File \"/Volumes/data/src/ansible/venvpy3/lib/python3.6/site-packages/pyVmomi/VmomiSupport.py\", line 580, in <lambda>\r\n    self.f(*(self.args + (obj,) + args), **kwargs)\r\n  File \"/Volumes/data/src/ansible/venvpy3/lib/python3.6/site-packages/pyVmomi/VmomiSupport.py\", line 386, in _InvokeMethod\r\n    return self._stub.InvokeMethod(self, info, args)\r\n  File \"/Volumes/data/src/ansible/venvpy3/lib/python3.6/site-packages/pyVmomi/SoapAdapter.py\", line 1366, in InvokeMethod\r\n    raise obj # pylint: disable-msg=E0702\r\npyVmomi.VmomiSupport.InvalidArgument: (vmodl.fault.InvalidArgument) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   msg = 'A specified parameter was not correct: ',\r\n   faultCause = <unset>,\r\n   faultMessage = (vmodl.LocalizableMessage) [],\r\n   invalidProperty = <unset>\r\n}\r\n```\r\n\r\nI am using Python3.6 and Pyvmomi 6.7.0.\r\n\r\nCan someone point me in right direction to use this API ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/678", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/678/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/678/events", "html_url": "https://github.com/vmware/pyvmomi/issues/678", "id": 324029746, "node_id": "MDU6SXNzdWUzMjQwMjk3NDY=", "number": 678, "title": "Setting eam.Agency.ComputeResourceScope to ESXi host does not work", "user": {"login": "amudhar", "id": 6057365, "node_id": "MDQ6VXNlcjYwNTczNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6057365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amudhar", "html_url": "https://github.com/amudhar", "followers_url": "https://api.github.com/users/amudhar/followers", "following_url": "https://api.github.com/users/amudhar/following{/other_user}", "gists_url": "https://api.github.com/users/amudhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amudhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amudhar/subscriptions", "organizations_url": "https://api.github.com/users/amudhar/orgs", "repos_url": "https://api.github.com/users/amudhar/repos", "events_url": "https://api.github.com/users/amudhar/events{/privacy}", "received_events_url": "https://api.github.com/users/amudhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-17T13:45:16Z", "updated_at": "2018-05-24T14:43:39Z", "closed_at": "2018-05-24T14:43:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nFrom the document reference below, it states the AgencyScope can be set to Cluster or ESXi Host.\r\n\r\nESX Agency Scope\r\nWhen you create an ESX agency, you must de ne the scope of the agency. You de ne the scope of an ESX agent in terms of compute resources, namely standalone hosts or clusters.\r\nFor example, ESX agents can run on standalone ESXi hosts or on clusters of ESXi hosts.\r\nA solution must obtain from vCenter Server the set of compute resource instances on which to deploy ESX agents. For example, you can implement a query in your solution that obtains a list of all the hosts that are running in a vCenter Server instance. Users can then select the hosts on which to deploy ESX agents.\r\n\r\n\r\ndef get_obj(content, vimtype, name):\r\n    obj = None\r\n    container = content.viewManager.CreateContainerView(content.rootFolder, vimtype, True)\r\n    for c in container.view:\r\n        if c.name == name:\r\n            obj = c\r\n            break\r\n    return obj\r\n\r\n    compute_host = get_obj(content, [vim.ComputeResource], 'b4s4')\r\n    compute_scope = eam.Agency.ComputeResourceScope()\r\n    compute_scope.computeResource.append(compute_host)\r\n    agency_config.scope = compute_scope\r\n\r\nThis leaves the scope unset where 'b4s4' is an ESXi host added to a cluster, while it works\r\nif a cluster is specified instead.\r\n\r\n   scope = (eam.Agency.ComputeResourceScope) {\r\n      computeResource = <unset>,\r\n   },\r\n}\r\n\r\nCan AgencyScope can be set at ESXi host level? \r\nWhat in the above code is incorrect to find the compute resource MOB of ESXi host?\r\n\r\nThanks,\r\nAmudha\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/671", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/671/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/671/events", "html_url": "https://github.com/vmware/pyvmomi/issues/671", "id": 316659920, "node_id": "MDU6SXNzdWUzMTY2NTk5MjA=", "number": 671, "title": "Not able to update pyvmomi environment to vSphere 6.7 updates", "user": {"login": "vThinkBeyondVM", "id": 13938550, "node_id": "MDQ6VXNlcjEzOTM4NTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/13938550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vThinkBeyondVM", "html_url": "https://github.com/vThinkBeyondVM", "followers_url": "https://api.github.com/users/vThinkBeyondVM/followers", "following_url": "https://api.github.com/users/vThinkBeyondVM/following{/other_user}", "gists_url": "https://api.github.com/users/vThinkBeyondVM/gists{/gist_id}", "starred_url": "https://api.github.com/users/vThinkBeyondVM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vThinkBeyondVM/subscriptions", "organizations_url": "https://api.github.com/users/vThinkBeyondVM/orgs", "repos_url": "https://api.github.com/users/vThinkBeyondVM/repos", "events_url": "https://api.github.com/users/vThinkBeyondVM/events{/privacy}", "received_events_url": "https://api.github.com/users/vThinkBeyondVM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-23T04:43:23Z", "updated_at": "2018-04-30T04:55:00Z", "closed_at": "2018-04-30T04:55:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Experts,\r\n\r\n Whether pyVmomi supports vSphere 6.7? I think, it is supported based on recent updates.\r\n\r\nI tried running this command \"pip3 install --upgrade pyvmomi\" but it says \"Requirement already up-to-date: idna<2.7,>=2.5 in ./.local/lib/python3.5/site-pa              ckages (from requests>=2.3.0->pyvmomi)\r\n\" \r\nCan you please help on how to go about ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/666", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/666/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/666/events", "html_url": "https://github.com/vmware/pyvmomi/issues/666", "id": 309986845, "node_id": "MDU6SXNzdWUzMDk5ODY4NDU=", "number": 666, "title": "pyvmomi: How to list the content of folder inside the datacenter.", "user": {"login": "srinivasguttur", "id": 9931469, "node_id": "MDQ6VXNlcjk5MzE0Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9931469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srinivasguttur", "html_url": "https://github.com/srinivasguttur", "followers_url": "https://api.github.com/users/srinivasguttur/followers", "following_url": "https://api.github.com/users/srinivasguttur/following{/other_user}", "gists_url": "https://api.github.com/users/srinivasguttur/gists{/gist_id}", "starred_url": "https://api.github.com/users/srinivasguttur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srinivasguttur/subscriptions", "organizations_url": "https://api.github.com/users/srinivasguttur/orgs", "repos_url": "https://api.github.com/users/srinivasguttur/repos", "events_url": "https://api.github.com/users/srinivasguttur/events{/privacy}", "received_events_url": "https://api.github.com/users/srinivasguttur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-30T06:26:09Z", "updated_at": "2018-03-30T17:02:10Z", "closed_at": "2018-03-30T17:02:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nanybody knows how to list the content of a folder inside the datacenter? \r\nMy actual requirement is: Using pyVmomi module I need to clone from VM which are reside in specific folder under the Datacenter.\r\nEx: /DC/Templates/vms\r\n\r\nAny suggestions much appreciated.\r\n\r\nThanks\r\nSrini", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/664", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/664/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/664/events", "html_url": "https://github.com/vmware/pyvmomi/issues/664", "id": 307426757, "node_id": "MDU6SXNzdWUzMDc0MjY3NTc=", "number": 664, "title": "pyvmomi EstimateStorageForConsolidateSnapshots_Task and ConsolidateVMDisks_Task seem to be removed", "user": {"login": "hobbitten123", "id": 35045473, "node_id": "MDQ6VXNlcjM1MDQ1NDcz", "avatar_url": "https://avatars1.githubusercontent.com/u/35045473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hobbitten123", "html_url": "https://github.com/hobbitten123", "followers_url": "https://api.github.com/users/hobbitten123/followers", "following_url": "https://api.github.com/users/hobbitten123/following{/other_user}", "gists_url": "https://api.github.com/users/hobbitten123/gists{/gist_id}", "starred_url": "https://api.github.com/users/hobbitten123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hobbitten123/subscriptions", "organizations_url": "https://api.github.com/users/hobbitten123/orgs", "repos_url": "https://api.github.com/users/hobbitten123/repos", "events_url": "https://api.github.com/users/hobbitten123/events{/privacy}", "received_events_url": "https://api.github.com/users/hobbitten123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-21T21:35:36Z", "updated_at": "2018-03-21T23:16:39Z", "closed_at": "2018-03-21T23:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi -\r\n\r\nIn the latest version of pyvmomi  are EstimateStorageForConsolidateSnapshots and ConsolidateVMDisks removed ... and what is the replacement?\r\n\r\nBecause this refers to it:\r\n    https://github.com/vmware/pyvmomi/blob/master/docs/vim/VirtualMachine.rst\r\n\r\nBut if I try to use it I get:\r\n\r\n   (vmodl.fault.MethodNotFound) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   msg = <unset>,\r\n   faultCause = <unset>,\r\n   faultMessage = (vmodl.LocalizableMessage) [],\r\n   receiver = 'vim.VirtualMachine:vm-37445',\r\n   method = 'EstimateStorageRequirementForConsolidate'\r\n\r\nPlease help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/661", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/661/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/661/events", "html_url": "https://github.com/vmware/pyvmomi/issues/661", "id": 304259539, "node_id": "MDU6SXNzdWUzMDQyNTk1Mzk=", "number": 661, "title": "Can not find tags info after calling RetriveContent API", "user": {"login": "easonlau02", "id": 3955431, "node_id": "MDQ6VXNlcjM5NTU0MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3955431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/easonlau02", "html_url": "https://github.com/easonlau02", "followers_url": "https://api.github.com/users/easonlau02/followers", "following_url": "https://api.github.com/users/easonlau02/following{/other_user}", "gists_url": "https://api.github.com/users/easonlau02/gists{/gist_id}", "starred_url": "https://api.github.com/users/easonlau02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/easonlau02/subscriptions", "organizations_url": "https://api.github.com/users/easonlau02/orgs", "repos_url": "https://api.github.com/users/easonlau02/repos", "events_url": "https://api.github.com/users/easonlau02/events{/privacy}", "received_events_url": "https://api.github.com/users/easonlau02/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-12T06:59:57Z", "updated_at": "2018-04-02T05:35:11Z", "closed_at": "2018-04-02T05:35:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear All,\r\n\r\nI am using pyvmomi to fetch VM object info from VMWare. But I can not find tags info return from pyvmomi.\r\n\r\nPer check, pyvmomi wrapped vmware API to fetch VM object info. \r\nAnyone know if tags not provide by vmware API or not? And any solution we can use now? Which got me frustrated.\r\n\r\nvCenter: 6.0\r\n\r\nThanks/Eason", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/660", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/660/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/660/events", "html_url": "https://github.com/vmware/pyvmomi/issues/660", "id": 301668512, "node_id": "MDU6SXNzdWUzMDE2Njg1MTI=", "number": 660, "title": "vCenter 6.7 connectivity broken with pyvmomi", "user": {"login": "harish-kumar-nvs-kakumanu", "id": 36980953, "node_id": "MDQ6VXNlcjM2OTgwOTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/36980953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harish-kumar-nvs-kakumanu", "html_url": "https://github.com/harish-kumar-nvs-kakumanu", "followers_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/followers", "following_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/following{/other_user}", "gists_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/gists{/gist_id}", "starred_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/subscriptions", "organizations_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/orgs", "repos_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/repos", "events_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/events{/privacy}", "received_events_url": "https://api.github.com/users/harish-kumar-nvs-kakumanu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-02T06:41:10Z", "updated_at": "2019-03-09T06:31:18Z", "closed_at": "2018-03-06T08:28:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run pyvmomi samples with vcenter 6.7 and it fails in the connection phase to establish a connection.  \r\n\r\nWhen will the pyvmomi support vCenter 6.7 ?\r\n\r\nI get the following error when i run the samples/getallvms.py.\r\n\r\npydev debugger: starting (pid: 26625)\r\nTraceback (most recent call last):\r\n  File \"/opt/eclipse/plugins/org.python.pydev_5.5.0.201701191708/pysrc/pydevd.py\", line 1537, in <module>\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"/opt/eclipse/plugins/org.python.pydev_5.5.0.201701191708/pysrc/pydevd.py\", line 976, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/opt/eclipse/plugins/org.python.pydev_5.5.0.201701191708/pysrc/_pydev_imps/_pydev_execfile.py\", line 25, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/workspace/voyage/hpov4vc_server_git/ovm/src/vmware/getallvms.py\", line 129, in <module>\r\n    main()\r\n  File \"/workspace/voyage/hpov4vc_server_git/ovm/src/vmware/getallvms.py\", line 109, in main\r\n    sslContext=context)\r\n  File \"/root/ovm_env/lib/python3.6/site-packages/pyVim/connect.py\", line 817, in SmartConnect\r\n    sslContext)\r\n  File \"/root/ovm_env/lib/python3.6/site-packages/pyVim/connect.py\", line 702, in __FindSupportedVersion\r\n    sslContext)\r\n  File \"/root/ovm_env/lib/python3.6/site-packages/pyVim/connect.py\", line 622, in __GetServiceVersionDescription\r\n    path + \"/vimServiceVersions.xml\", sslContext)\r\n  File \"/root/ovm_env/lib/python3.6/site-packages/pyVim/connect.py\", line 588, in __GetElementTree\r\n    conn.request(\"GET\", path)\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 1239, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 1026, in _send_output\r\n    self.send(msg)\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 964, in send\r\n    self.connect()\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 1392, in connect\r\n    super().connect()\r\n  File \"/home/python3.6/lib/python3.6/http/client.py\", line 936, in connect\r\n    (self.host,self.port), self.timeout, self.source_address)\r\n  File \"/home/python3.6/lib/python3.6/socket.py\", line 704, in create_connection\r\n    for res in getaddrinfo(host, port, 0, SOCK_STREAM):\r\n  File \"/home/python3.6/lib/python3.6/socket.py\", line 743, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno -2] Name or service not known", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/657", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/657/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/657/events", "html_url": "https://github.com/vmware/pyvmomi/issues/657", "id": 294481152, "node_id": "MDU6SXNzdWUyOTQ0ODExNTI=", "number": 657, "title": "Error when trying to access the EAM ", "user": {"login": "arnaudcoquelet", "id": 39832, "node_id": "MDQ6VXNlcjM5ODMy", "avatar_url": "https://avatars1.githubusercontent.com/u/39832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaudcoquelet", "html_url": "https://github.com/arnaudcoquelet", "followers_url": "https://api.github.com/users/arnaudcoquelet/followers", "following_url": "https://api.github.com/users/arnaudcoquelet/following{/other_user}", "gists_url": "https://api.github.com/users/arnaudcoquelet/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaudcoquelet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaudcoquelet/subscriptions", "organizations_url": "https://api.github.com/users/arnaudcoquelet/orgs", "repos_url": "https://api.github.com/users/arnaudcoquelet/repos", "events_url": "https://api.github.com/users/arnaudcoquelet/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaudcoquelet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-05T17:42:01Z", "updated_at": "2018-02-14T18:58:53Z", "closed_at": "2018-02-05T20:26:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "All,\r\n\r\nI'm try to get all the EAM Agencies available on a vcenter instance using the eam module, but I got the following login error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"getEamAgency.py\", line 65, in <module>\r\n    main()\r\n  File \"getEamAgency.py\", line 61, in main\r\n    (eamCx, eamAgencies) = GetEamAgencies(si._stub, context)\r\n  File \"getEamAgency.py\", line 35, in GetEamAgencies\r\n    eamAgencies = eamCx.QueryAgency()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyVmomi/VmomiSupport.py\", line 580, in <lambda>\r\n    self.f(*(self.args + (obj,) + args), **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyVmomi/VmomiSupport.py\", line 386, in _InvokeMethod\r\n    return self._stub.InvokeMethod(self, info, args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyVmomi/SoapAdapter.py\", line 1366, in InvokeMethod\r\n    raise obj # pylint: disable-msg=E0702\r\npyVmomi.VmomiSupport.InvalidLogin: (eam.fault.InvalidLogin) {\r\n   dynamicType = <unset>,\r\n   dynamicProperty = (vmodl.DynamicProperty) [],\r\n   msg = '',\r\n   faultCause = <unset>,\r\n   faultMessage = (vmodl.LocalizableMessage) []\r\n}\r\n```\r\n\r\nI reuse the same logic as to connect to the spbm sdk, but that does not seems to work.\r\nHow should we login to the EAM SDK ?\r\n(note, same code connecting to the spbm api works).\r\n\r\nHere is my code example:\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom pyVmomi import vim, eam, VmomiSupport\r\nfrom pyVim.connect import SmartConnect, Disconnect\r\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\r\n\r\nimport atexit\r\nimport argparse\r\nimport getpass\r\nimport requests\r\nimport sys\r\nimport ssl\r\n\r\ndef GetEamAgencies(vpxdStub, sslContext):\r\n   import Cookie\r\n   import pyVmomi\r\n  \r\n   sessionCookie = vpxdStub.cookie.split('\"')[1]\r\n   httpContext = VmomiSupport.GetHttpContext()\r\n   cookie = Cookie.SimpleCookie()\r\n   cookie[\"vmware_soap_session\"] = sessionCookie\r\n   httpContext[\"cookies\"] = cookie\r\n   VmomiSupport.GetRequestContext()[\"vcSessionCookie\"] = sessionCookie\r\n   hostname = vpxdStub.host.split(\":\")[0]\r\n   \r\n   eamStub = pyVmomi.SoapStubAdapter(host=hostname,\r\n                                     version = \"eam.version.version1\",\r\n                                     path = \"/eam/sdk\",\r\n                                     poolSize=0,\r\n                                     sslContext=sslContext)\r\n   eamCx = eam.EsxAgentManager(\"EsxAgentManager\", eamStub)\r\n   eamAgencies = eamCx.QueryAgency()\r\n\r\n   return (eamCx, eamAgencies)\r\n\r\n\r\n#Start program\r\ndef main():\r\n    host=\"vcenter\"\r\n    user=\"user\"\r\n    password=\"password\"\r\n\r\n    context = ssl.create_default_context()\r\n    context.check_hostname = False\r\n    context.verify_mode = ssl.CERT_NONE\r\n    \r\n    # Disabling the annoying InsecureRequestWarning message\r\n    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\r\n    \r\n    si = SmartConnect(host=host,\r\n                      user=user,\r\n                      pwd=password,\r\n                      sslContext=context)\r\n    \r\n    atexit.register(Disconnect, si)\r\n    \r\n    # Connect to EAM Endpoint\r\n    (eamCx, eamAgencies) = GetEamAgencies(si._stub, context)\r\n\r\n# Start program\r\nif __name__ == \"__main__\":\r\n    main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/653", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/653/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/653/events", "html_url": "https://github.com/vmware/pyvmomi/issues/653", "id": 292574756, "node_id": "MDU6SXNzdWUyOTI1NzQ3NTY=", "number": 653, "title": "ImportError: No module named connect", "user": {"login": "prakashranjan2004", "id": 19175502, "node_id": "MDQ6VXNlcjE5MTc1NTAy", "avatar_url": "https://avatars2.githubusercontent.com/u/19175502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prakashranjan2004", "html_url": "https://github.com/prakashranjan2004", "followers_url": "https://api.github.com/users/prakashranjan2004/followers", "following_url": "https://api.github.com/users/prakashranjan2004/following{/other_user}", "gists_url": "https://api.github.com/users/prakashranjan2004/gists{/gist_id}", "starred_url": "https://api.github.com/users/prakashranjan2004/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prakashranjan2004/subscriptions", "organizations_url": "https://api.github.com/users/prakashranjan2004/orgs", "repos_url": "https://api.github.com/users/prakashranjan2004/repos", "events_url": "https://api.github.com/users/prakashranjan2004/events{/privacy}", "received_events_url": "https://api.github.com/users/prakashranjan2004/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-29T21:54:32Z", "updated_at": "2019-02-07T06:00:41Z", "closed_at": "2018-03-31T09:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to use this code. I installed pyvim, but not getting module \"connect\".\r\n\r\nerror:-\r\n\r\nImportError: No module named connect\r\n\r\npython version = Python 2.7.13\r\n\r\nPlease suggest.\r\n\r\n-Prakash", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/645", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/645/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/645/events", "html_url": "https://github.com/vmware/pyvmomi/issues/645", "id": 283682211, "node_id": "MDU6SXNzdWUyODM2ODIyMTE=", "number": 645, "title": "HttpNfcLeaseDeviceUrl has asterisk (*) as hostname", "user": {"login": "kouellette", "id": 14305063, "node_id": "MDQ6VXNlcjE0MzA1MDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/14305063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kouellette", "html_url": "https://github.com/kouellette", "followers_url": "https://api.github.com/users/kouellette/followers", "following_url": "https://api.github.com/users/kouellette/following{/other_user}", "gists_url": "https://api.github.com/users/kouellette/gists{/gist_id}", "starred_url": "https://api.github.com/users/kouellette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kouellette/subscriptions", "organizations_url": "https://api.github.com/users/kouellette/orgs", "repos_url": "https://api.github.com/users/kouellette/repos", "events_url": "https://api.github.com/users/kouellette/events{/privacy}", "received_events_url": "https://api.github.com/users/kouellette/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-20T20:13:58Z", "updated_at": "2017-12-20T21:33:07Z", "closed_at": "2017-12-20T21:33:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use export_vm.py my Device URL has an asterisk as the hostname which causes the export to fail because \"URL has an invalid label\". I have no knowledge in NFC leases and google has not proven to be any help to me. If anyone knows what causes this and how I can fix it, that would be great. Below is a snippet of the output I am getting.\r\n\r\n> Downloading https://*/ha-nfc/52f3fd4b-5c42-ab8c-6a4c-71a9ca7127ef/disk-0.vmdk to /home/tester/529c5644-a946-a725-7977-75865a1788f7/disk-0.vmdk\r\n> URL has an invalid label.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/642", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/642/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/642/events", "html_url": "https://github.com/vmware/pyvmomi/issues/642", "id": 283074639, "node_id": "MDU6SXNzdWUyODMwNzQ2Mzk=", "number": 642, "title": "Get task from task key", "user": {"login": "rmb938", "id": 544545, "node_id": "MDQ6VXNlcjU0NDU0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/544545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmb938", "html_url": "https://github.com/rmb938", "followers_url": "https://api.github.com/users/rmb938/followers", "following_url": "https://api.github.com/users/rmb938/following{/other_user}", "gists_url": "https://api.github.com/users/rmb938/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmb938/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmb938/subscriptions", "organizations_url": "https://api.github.com/users/rmb938/orgs", "repos_url": "https://api.github.com/users/rmb938/repos", "events_url": "https://api.github.com/users/rmb938/events{/privacy}", "received_events_url": "https://api.github.com/users/rmb938/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-19T01:19:32Z", "updated_at": "2018-09-25T05:23:09Z", "closed_at": "2017-12-19T01:53:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a task key (which belongs to a clone vm task) and I need to check the status of the task.\r\n\r\nI have done some research and it looks like there is a TaskCollector that I can use but I can't really find a way to filter it by task key.\r\n\r\nI see that it can be filtered by parentTaskKey and rootTask key however my task doesn't have any of those since it was called manually.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/635", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/635/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/635/events", "html_url": "https://github.com/vmware/pyvmomi/issues/635", "id": 276214788, "node_id": "MDU6SXNzdWUyNzYyMTQ3ODg=", "number": 635, "title": "Unable to use VmDiskQuery.Details with VmDiskQuery", "user": {"login": "brunoer", "id": 11969848, "node_id": "MDQ6VXNlcjExOTY5ODQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/11969848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoer", "html_url": "https://github.com/brunoer", "followers_url": "https://api.github.com/users/brunoer/followers", "following_url": "https://api.github.com/users/brunoer/following{/other_user}", "gists_url": "https://api.github.com/users/brunoer/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoer/subscriptions", "organizations_url": "https://api.github.com/users/brunoer/orgs", "repos_url": "https://api.github.com/users/brunoer/repos", "events_url": "https://api.github.com/users/brunoer/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-22T21:54:58Z", "updated_at": "2017-11-22T22:51:51Z", "closed_at": "2017-11-22T22:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "This works\r\nsearch_spec = vim.host.DatastoreBrowser.SearchSpec(query=[vim.host.DatastoreBrowser.VmDiskQuery()])\r\nqueryDetails = vim.host.DatastoreBrowser.FileInfo.Details()\r\nqueryDetails.fileSize = True\r\nqueryDetails.modification = True\r\nqueryDetails.fileType = True\r\nqueryDetails.fileOwner = True\r\nsearch_spec.details = queryDetails\r\n\r\nThis fails with the following exception:\r\nsearch_spec = vim.host.DatastoreBrowser.SearchSpec(query=[vim.host.DatastoreBrowser.VmDiskQuery()])\r\nqueryDetailsDisk = vim.host.DatastoreBrowser.VmDiskQuery.Details()\r\nqueryDetailsDisk.capacityKb = True\r\nqueryDetailsDisk.diskType = True\r\nqueryDetailsDisk.hardwareVersion = True\r\nqueryDetailsDisk.thin = True\r\nsearch_spec.details = queryDetailsDisk  ****** exception happens on this line.\r\n  File \"./test.py\", line 500, in myTestFunction\r\n    search_spec.details = queryDetailsDisk\r\n  File \"/usr/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\", line 537, in __setattr__\r\n    CheckField(self._GetPropertyInfo(name), val)\r\n  File \"/usr/lib/python2.7/site-packages/pyVmomi/VmomiSupport.py\", line 972, in CheckField\r\n    % (info.name, info.type.__name__, valType.__name__))\r\nTypeError: For \"details\" expected type vim.host.DatastoreBrowser.FileInfo.Details, but got vim.host.DatastoreBrowser.VmDiskQuery.Details\r\n\r\nTarget is a standalone ESXI V6.5 server.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/631", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/631/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/631/events", "html_url": "https://github.com/vmware/pyvmomi/issues/631", "id": 275059129, "node_id": "MDU6SXNzdWUyNzUwNTkxMjk=", "number": 631, "title": "how to get all virtual devies info in a host?", "user": {"login": "zhangjianpinghik", "id": 18606381, "node_id": "MDQ6VXNlcjE4NjA2Mzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/18606381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjianpinghik", "html_url": "https://github.com/zhangjianpinghik", "followers_url": "https://api.github.com/users/zhangjianpinghik/followers", "following_url": "https://api.github.com/users/zhangjianpinghik/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjianpinghik/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjianpinghik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjianpinghik/subscriptions", "organizations_url": "https://api.github.com/users/zhangjianpinghik/orgs", "repos_url": "https://api.github.com/users/zhangjianpinghik/repos", "events_url": "https://api.github.com/users/zhangjianpinghik/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjianpinghik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-18T06:54:34Z", "updated_at": "2017-11-23T13:09:25Z", "closed_at": "2017-11-23T13:09:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/630", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/630/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/630/events", "html_url": "https://github.com/vmware/pyvmomi/issues/630", "id": 275056592, "node_id": "MDU6SXNzdWUyNzUwNTY1OTI=", "number": 630, "title": "how to add a usb device to the vm by pyvmimi?", "user": {"login": "zhangjianpinghik", "id": 18606381, "node_id": "MDQ6VXNlcjE4NjA2Mzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/18606381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjianpinghik", "html_url": "https://github.com/zhangjianpinghik", "followers_url": "https://api.github.com/users/zhangjianpinghik/followers", "following_url": "https://api.github.com/users/zhangjianpinghik/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjianpinghik/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjianpinghik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjianpinghik/subscriptions", "organizations_url": "https://api.github.com/users/zhangjianpinghik/orgs", "repos_url": "https://api.github.com/users/zhangjianpinghik/repos", "events_url": "https://api.github.com/users/zhangjianpinghik/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjianpinghik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-18T06:00:37Z", "updated_at": "2017-11-23T13:09:08Z", "closed_at": "2017-11-23T13:09:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to add a usb device to the vm by pyvmimi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/629", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/629/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/629/events", "html_url": "https://github.com/vmware/pyvmomi/issues/629", "id": 273518107, "node_id": "MDU6SXNzdWUyNzM1MTgxMDc=", "number": 629, "title": "Adding nestedHVEnabled = True in to configspec does nothing.", "user": {"login": "peturgq", "id": 15036579, "node_id": "MDQ6VXNlcjE1MDM2NTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/15036579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peturgq", "html_url": "https://github.com/peturgq", "followers_url": "https://api.github.com/users/peturgq/followers", "following_url": "https://api.github.com/users/peturgq/following{/other_user}", "gists_url": "https://api.github.com/users/peturgq/gists{/gist_id}", "starred_url": "https://api.github.com/users/peturgq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peturgq/subscriptions", "organizations_url": "https://api.github.com/users/peturgq/orgs", "repos_url": "https://api.github.com/users/peturgq/repos", "events_url": "https://api.github.com/users/peturgq/events{/privacy}", "received_events_url": "https://api.github.com/users/peturgq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-11-13T17:44:55Z", "updated_at": "2017-11-13T19:38:22Z", "closed_at": "2017-11-13T19:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\r\nBoot VM with nestedHVEnabled setting set to True in config spec.\r\n\r\nGet vm capability,\r\nnestedHVSupported will be set to false.\r\n\r\nI am unable to utilize hypervisor nesting with pyvmomi and I'm at a point where I believe I have tried everything.\r\n\r\n\r\nAny suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/628", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/628/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/628/events", "html_url": "https://github.com/vmware/pyvmomi/issues/628", "id": 272800550, "node_id": "MDU6SXNzdWUyNzI4MDA1NTA=", "number": 628, "title": " Failed to establish a new connection: [Errno 110] ETIMEDOUT',))", "user": {"login": "zhangjianpinghik", "id": 18606381, "node_id": "MDQ6VXNlcjE4NjA2Mzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/18606381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangjianpinghik", "html_url": "https://github.com/zhangjianpinghik", "followers_url": "https://api.github.com/users/zhangjianpinghik/followers", "following_url": "https://api.github.com/users/zhangjianpinghik/following{/other_user}", "gists_url": "https://api.github.com/users/zhangjianpinghik/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangjianpinghik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangjianpinghik/subscriptions", "organizations_url": "https://api.github.com/users/zhangjianpinghik/orgs", "repos_url": "https://api.github.com/users/zhangjianpinghik/repos", "events_url": "https://api.github.com/users/zhangjianpinghik/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangjianpinghik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-10T02:32:30Z", "updated_at": "2017-11-10T03:03:17Z", "closed_at": "2017-11-10T03:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "ConnectionError: HTTPSConnectionPool, Max retries exceeded with url: //sdk/vimServiceVersions.xml (Caused by NewConnectionError('<requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x7ff58450aed0>:\r\n\r\nwhen i create vm by pyvmomi ,the bove error  occured, but i can create vm by vcenter client, what is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/vmware/pyvmomi/issues/625", "repository_url": "https://api.github.com/repos/vmware/pyvmomi", "labels_url": "https://api.github.com/repos/vmware/pyvmomi/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/vmware/pyvmomi/issues/625/comments", "events_url": "https://api.github.com/repos/vmware/pyvmomi/issues/625/events", "html_url": "https://github.com/vmware/pyvmomi/issues/625", "id": 270610267, "node_id": "MDU6SXNzdWUyNzA2MTAyNjc=", "number": 625, "title": "Caught vmodl fault : Current license or ESXi version prohibits execution of the requested operation.", "user": {"login": "amoghmahesh", "id": 11708072, "node_id": "MDQ6VXNlcjExNzA4MDcy", "avatar_url": "https://avatars3.githubusercontent.com/u/11708072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoghmahesh", "html_url": "https://github.com/amoghmahesh", "followers_url": "https://api.github.com/users/amoghmahesh/followers", "following_url": "https://api.github.com/users/amoghmahesh/following{/other_user}", "gists_url": "https://api.github.com/users/amoghmahesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoghmahesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoghmahesh/subscriptions", "organizations_url": "https://api.github.com/users/amoghmahesh/orgs", "repos_url": "https://api.github.com/users/amoghmahesh/repos", "events_url": "https://api.github.com/users/amoghmahesh/events{/privacy}", "received_events_url": "https://api.github.com/users/amoghmahesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-02T10:54:19Z", "updated_at": "2017-11-13T10:33:39Z", "closed_at": "2017-11-13T10:33:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have latest version of ESXi i.e. 6.5, even then I am getting this error..\r\nCaught vmodl fault : Current license or ESXi version prohibits execution of the requested operation.\r\nMay I know why??", "performed_via_github_app": null, "score": 1.0}]}