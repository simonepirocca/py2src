{"total_count": 301, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/724", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/724/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/724/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/724", "id": 675550361, "node_id": "MDU6SXNzdWU2NzU1NTAzNjE=", "number": 724, "title": "K", "user": {"login": "mayurn12", "id": 63412610, "node_id": "MDQ6VXNlcjYzNDEyNjEw", "avatar_url": "https://avatars2.githubusercontent.com/u/63412610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayurn12", "html_url": "https://github.com/mayurn12", "followers_url": "https://api.github.com/users/mayurn12/followers", "following_url": "https://api.github.com/users/mayurn12/following{/other_user}", "gists_url": "https://api.github.com/users/mayurn12/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayurn12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayurn12/subscriptions", "organizations_url": "https://api.github.com/users/mayurn12/orgs", "repos_url": "https://api.github.com/users/mayurn12/repos", "events_url": "https://api.github.com/users/mayurn12/events{/privacy}", "received_events_url": "https://api.github.com/users/mayurn12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-08T16:22:18Z", "updated_at": "2020-08-09T13:21:37Z", "closed_at": "2020-08-09T13:21:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "from django.contrib.auth import login, logout,authenticate\r\nfrom django.shortcuts import redirect, render\r\nfrom django.contrib import messages\r\nfrom django.views.generic import CreateView\r\nfrom .forms import PatientSignUp, OPD_MemberSignUp, DoctorSignUp\r\nfrom django.contrib.auth.forms import AuthenticationForm\r\nfrom .models import User\r\n\r\ndef Home(request):\r\n    return render(request,'home.html')\r\n\r\ndef register(request):\r\n    return render(request,'register.html')\r\n\r\nclass patient_register(CreateView):\r\n    model = User\r\n    form_class = PatientSignUp\r\n    template_name = 'patient_register.html'\r\n\r\n    def form_valid(self, form):\r\n        user = form.save()\r\n        login(self.request, user)\r\n        return redirect('/')\r\n\r\nclass doctor_register(CreateView):\r\n    model = User\r\n    form_class = DoctorSignUp\r\n    template_name = 'doctor_register.html'\r\n\r\n    def form_valid(self, form):\r\n        user = form.save()\r\n        login(self.request, user)\r\n        return redirect('/')\r\n\r\n\r\nclass opd_register(CreateView):\r\n    model = User\r\n    form_class = OPD_MemberSignUp\r\n    template_name = 'opd_register.html'\r\n\r\n    def form_valid(self, form):\r\n        user = form.save()\r\n        login(self.request, user)\r\n        return redirect('/')\r\n\r\n\r\ndef login_request(request):\r\n    if request.method=='POST':\r\n        form = AuthenticationForm(data=request.POST)\r\n        if form.is_valid():\r\n            username = form.cleaned_data.get('username')\r\n            password = form.cleaned_data.get('password')\r\n            user = authenticate(username=username, password=password)\r\n            if user is not None :\r\n                login(request,user)\r\n                return redirect('/')\r\n            else:\r\n                messages.error(request,\"Invalid username or password\")\r\n        else:\r\n                messages.error(request,\"Invalid username or password\")\r\n    return render(request, 'login.html',\r\n    context={'form':AuthenticationForm()})\r\n\r\ndef logout_view(request):\r\n    logout(request)\r\n    return redirect('/')\r\n\r\n\r\n\r\n# and in template showing \r\n![template](https://user-images.githubusercontent.com/63412610/89715126-4c492900-d9c1-11ea-858e-888c32c8bbe7.png)\r\n\r\n\r\n# my urls\r\n\r\nfrom django.urls import path\r\nfrom .import views\r\n\r\n\r\nurlpatterns = [\r\n    path('',views.Home,name=\"home\"),\r\n    path('register/',views.register,name=\"register\"),\r\n    path('patientregister/',views.patient_register,name=\"patientregister\"),\r\n    path('doctorregister/',views.doctor_register,name=\"doctorregister\"),\r\n    path('opdregister/',views.opd_register,name=\"opdregister\"),\r\n    path('login/',views.login_request, name='login'),\r\n    path('logout/',views.logout_view, name='logout'),\r\n\r\n]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/722", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/722/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/722/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/722", "id": 628335250, "node_id": "MDU6SXNzdWU2MjgzMzUyNTA=", "number": 722, "title": "Non-matching release notes for 2.0.3", "user": {"login": "amrishparmar", "id": 9840798, "node_id": "MDQ6VXNlcjk4NDA3OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9840798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amrishparmar", "html_url": "https://github.com/amrishparmar", "followers_url": "https://api.github.com/users/amrishparmar/followers", "following_url": "https://api.github.com/users/amrishparmar/following{/other_user}", "gists_url": "https://api.github.com/users/amrishparmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amrishparmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amrishparmar/subscriptions", "organizations_url": "https://api.github.com/users/amrishparmar/orgs", "repos_url": "https://api.github.com/users/amrishparmar/repos", "events_url": "https://api.github.com/users/amrishparmar/events{/privacy}", "received_events_url": "https://api.github.com/users/amrishparmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-01T10:40:02Z", "updated_at": "2020-08-14T19:46:50Z", "closed_at": "2020-08-14T19:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release note description for 2.0.3 seems to differ on https://github.com/jazzband/django-pipeline/releases/tag/2.0.3 when compared with https://github.com/jazzband/django-pipeline/blob/master/HISTORY.rst\r\n\r\nThere are 7 items in the former, whereas there is only 1 in the latter currently.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/716", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/716/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/716/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/716", "id": 572586295, "node_id": "MDU6SXNzdWU1NzI1ODYyOTU=", "number": 716, "title": "Fix simple typo: properpty -> property", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T07:48:52Z", "updated_at": "2020-02-28T17:49:42Z", "closed_at": "2020-02-28T17:49:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in pipeline/forms.py.\nShould read `property` rather than `properpty`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/714", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/714/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/714/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/714", "id": 556030240, "node_id": "MDU6SXNzdWU1NTYwMzAyNDA=", "number": 714, "title": "Django 3.1 dropping CachedStaticFilesStorage", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T07:26:58Z", "updated_at": "2020-08-17T17:01:27Z", "closed_at": "2020-08-17T17:01:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "RemovedInDjango31Warning: CachedStaticFilesStorage is deprecated in favor of ManifestStaticFilesStorage.\r\n\r\nSetting `STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'` appears to be the cause here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/707", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/707/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/707/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/707", "id": 531603033, "node_id": "MDU6SXNzdWU1MzE2MDMwMzM=", "number": 707, "title": "Django 3 dropped support to django.utils.six", "user": {"login": "TheBuky", "id": 18658299, "node_id": "MDQ6VXNlcjE4NjU4Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/18658299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBuky", "html_url": "https://github.com/TheBuky", "followers_url": "https://api.github.com/users/TheBuky/followers", "following_url": "https://api.github.com/users/TheBuky/following{/other_user}", "gists_url": "https://api.github.com/users/TheBuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBuky/subscriptions", "organizations_url": "https://api.github.com/users/TheBuky/orgs", "repos_url": "https://api.github.com/users/TheBuky/repos", "events_url": "https://api.github.com/users/TheBuky/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBuky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "TheBuky", "id": 18658299, "node_id": "MDQ6VXNlcjE4NjU4Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/18658299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBuky", "html_url": "https://github.com/TheBuky", "followers_url": "https://api.github.com/users/TheBuky/followers", "following_url": "https://api.github.com/users/TheBuky/following{/other_user}", "gists_url": "https://api.github.com/users/TheBuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBuky/subscriptions", "organizations_url": "https://api.github.com/users/TheBuky/orgs", "repos_url": "https://api.github.com/users/TheBuky/repos", "events_url": "https://api.github.com/users/TheBuky/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBuky/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TheBuky", "id": 18658299, "node_id": "MDQ6VXNlcjE4NjU4Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/18658299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBuky", "html_url": "https://github.com/TheBuky", "followers_url": "https://api.github.com/users/TheBuky/followers", "following_url": "https://api.github.com/users/TheBuky/following{/other_user}", "gists_url": "https://api.github.com/users/TheBuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBuky/subscriptions", "organizations_url": "https://api.github.com/users/TheBuky/orgs", "repos_url": "https://api.github.com/users/TheBuky/repos", "events_url": "https://api.github.com/users/TheBuky/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBuky/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-12-02T23:19:43Z", "updated_at": "2020-05-27T17:09:39Z", "closed_at": "2019-12-26T17:57:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just try to upgrade my server to [Django 3.0](https://docs.djangoproject.com/en/3.0/releases/3.0/) release today for tests and as we can read the module django.utils.six will be dropped with the version 3 of Django.\r\n\r\nHere you can find my Traceback:\r\n```python\r\n  File \"/home/user/.virtualenvs/dns/lib/python3.7/site-packages/pipeline/finders.py\", line 9, in <module>\r\n    from pipeline.conf import settings\r\n  File \"/home/user/.virtualenvs/dns/lib/python3.7/site-packages/pipeline/conf.py\", line 15, in <module>\r\n    from django.utils.six import string_types\r\nModuleNotFoundError: No module named 'django.utils.six'\r\n```\r\nPlease evaluate the migration to six as suggested in the #removed-private-python-2-compatibility-apis section of the release note.\r\n\r\nThanks for this amazing library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/702", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/702/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/702/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/702", "id": 505895149, "node_id": "MDU6SXNzdWU1MDU4OTUxNDk=", "number": 702, "title": "new release", "user": {"login": "jesusch", "id": 2362798, "node_id": "MDQ6VXNlcjIzNjI3OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2362798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jesusch", "html_url": "https://github.com/jesusch", "followers_url": "https://api.github.com/users/jesusch/followers", "following_url": "https://api.github.com/users/jesusch/following{/other_user}", "gists_url": "https://api.github.com/users/jesusch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jesusch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jesusch/subscriptions", "organizations_url": "https://api.github.com/users/jesusch/orgs", "repos_url": "https://api.github.com/users/jesusch/repos", "events_url": "https://api.github.com/users/jesusch/events{/privacy}", "received_events_url": "https://api.github.com/users/jesusch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-11T14:44:26Z", "updated_at": "2020-01-05T03:23:24Z", "closed_at": "2020-01-05T03:23:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "last tag is from Jan 2018\r\nthere had been several commits/fixes since then", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/695", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/695/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/695/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/695", "id": 471782183, "node_id": "MDU6SXNzdWU0NzE3ODIxODM=", "number": 695, "title": "Disable MIMETYPES", "user": {"login": "vonmaster", "id": 43321841, "node_id": "MDQ6VXNlcjQzMzIxODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/43321841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vonmaster", "html_url": "https://github.com/vonmaster", "followers_url": "https://api.github.com/users/vonmaster/followers", "following_url": "https://api.github.com/users/vonmaster/following{/other_user}", "gists_url": "https://api.github.com/users/vonmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/vonmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vonmaster/subscriptions", "organizations_url": "https://api.github.com/users/vonmaster/orgs", "repos_url": "https://api.github.com/users/vonmaster/repos", "events_url": "https://api.github.com/users/vonmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/vonmaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-23T15:59:00Z", "updated_at": "2020-03-11T22:45:13Z", "closed_at": "2019-09-14T20:44:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThank you for this useful library.\r\n\r\nI was wondering if it was possible to **disable mimetypes**. According to the W3C Markup Validator :\r\n> the `type` attribute is unnecessary for JavaScript resources;\r\n> the type attribute for the `style` element is not needed and should be omitted.\r\n\r\nBasically, I just want to replace `<script type=\"text/javascript\" src=\"/static/js/script.js\" charset=\"utf-8\"></script>` by  `<script src=\"/static/js/script.js\"></script>`.\r\n\r\nI tried to override `PIPELINE_MIMETYPES` but it does not work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/692", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/692/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/692/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/692", "id": 442186638, "node_id": "MDU6SXNzdWU0NDIxODY2Mzg=", "number": 692, "title": "Django 2.2 Support", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-09T11:23:49Z", "updated_at": "2019-12-27T06:35:44Z", "closed_at": "2019-12-27T03:46:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/691", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/691/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/691/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/691", "id": 441141309, "node_id": "MDU6SXNzdWU0NDExNDEzMDk=", "number": 691, "title": "HTML not getting decoded properly by Middleware in Django 2.2", "user": {"login": "ErrorInPersona", "id": 28090494, "node_id": "MDQ6VXNlcjI4MDkwNDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/28090494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ErrorInPersona", "html_url": "https://github.com/ErrorInPersona", "followers_url": "https://api.github.com/users/ErrorInPersona/followers", "following_url": "https://api.github.com/users/ErrorInPersona/following{/other_user}", "gists_url": "https://api.github.com/users/ErrorInPersona/gists{/gist_id}", "starred_url": "https://api.github.com/users/ErrorInPersona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ErrorInPersona/subscriptions", "organizations_url": "https://api.github.com/users/ErrorInPersona/orgs", "repos_url": "https://api.github.com/users/ErrorInPersona/repos", "events_url": "https://api.github.com/users/ErrorInPersona/events{/privacy}", "received_events_url": "https://api.github.com/users/ErrorInPersona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-07T09:47:34Z", "updated_at": "2020-05-23T09:08:32Z", "closed_at": "2020-05-23T09:08:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey!\r\nThanks for the great repo. I\u00b4m experiencing an issue with the MinifyHTMLMiddleware. When active, my HTML-Output looks like b'...\\n\\n'. So it is a bytes-literal.\r\nI can fix it by changing \r\n`response.content = minify_html(response.content.strip())`\r\n(https://github.com/jazzband/django-pipeline/blob/master/pipeline/middleware.py#L25)\r\nto:\r\n`response.content = minify_html(response.content.decode().strip())`\r\n\r\nJust so you know about the issue.\r\nKind regards! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/690", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/690/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/690/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/690", "id": 436292359, "node_id": "MDU6SXNzdWU0MzYyOTIzNTk=", "number": 690, "title": "Drop support for out-of-scope releases", "user": {"login": "mbeacom", "id": 7315957, "node_id": "MDQ6VXNlcjczMTU5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbeacom", "html_url": "https://github.com/mbeacom", "followers_url": "https://api.github.com/users/mbeacom/followers", "following_url": "https://api.github.com/users/mbeacom/following{/other_user}", "gists_url": "https://api.github.com/users/mbeacom/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbeacom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbeacom/subscriptions", "organizations_url": "https://api.github.com/users/mbeacom/orgs", "repos_url": "https://api.github.com/users/mbeacom/repos", "events_url": "https://api.github.com/users/mbeacom/events{/privacy}", "received_events_url": "https://api.github.com/users/mbeacom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124834, "node_id": "MDU6TGFiZWwxMjQ4MzQ=", "url": "https://api.github.com/repos/jazzband/django-pipeline/labels/feature%20request", "name": "feature request", "color": "5319e7", "default": false, "description": ""}, {"id": 124833, "node_id": "MDU6TGFiZWwxMjQ4MzM=", "url": "https://api.github.com/repos/jazzband/django-pipeline/labels/question", "name": "question", "color": "cc317c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mbeacom", "id": 7315957, "node_id": "MDQ6VXNlcjczMTU5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbeacom", "html_url": "https://github.com/mbeacom", "followers_url": "https://api.github.com/users/mbeacom/followers", "following_url": "https://api.github.com/users/mbeacom/following{/other_user}", "gists_url": "https://api.github.com/users/mbeacom/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbeacom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbeacom/subscriptions", "organizations_url": "https://api.github.com/users/mbeacom/orgs", "repos_url": "https://api.github.com/users/mbeacom/repos", "events_url": "https://api.github.com/users/mbeacom/events{/privacy}", "received_events_url": "https://api.github.com/users/mbeacom/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mbeacom", "id": 7315957, "node_id": "MDQ6VXNlcjczMTU5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbeacom", "html_url": "https://github.com/mbeacom", "followers_url": "https://api.github.com/users/mbeacom/followers", "following_url": "https://api.github.com/users/mbeacom/following{/other_user}", "gists_url": "https://api.github.com/users/mbeacom/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbeacom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbeacom/subscriptions", "organizations_url": "https://api.github.com/users/mbeacom/orgs", "repos_url": "https://api.github.com/users/mbeacom/repos", "events_url": "https://api.github.com/users/mbeacom/events{/privacy}", "received_events_url": "https://api.github.com/users/mbeacom/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-04-23T16:56:57Z", "updated_at": "2019-08-27T17:32:40Z", "closed_at": "2019-08-27T17:32:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The official Django support windows are defined [here](https://www.djangoproject.com/download/#supported-versions)\r\n![Screenshot 2019-04-23 12 37 30](https://user-images.githubusercontent.com/7315957/56599471-9dfb5380-65c4-11e9-9d3d-2da86743c23d.png)\r\n\r\nI propose we end support for Django > 1.11 in an effort to increase maintainability and observe the Django release and support cadence.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/689", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/689/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/689/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/689", "id": 428423078, "node_id": "MDU6SXNzdWU0Mjg0MjMwNzg=", "number": 689, "title": "Unable to open file from default_storage after switching buckets.", "user": {"login": "Rugiewitz", "id": 15347271, "node_id": "MDQ6VXNlcjE1MzQ3Mjcx", "avatar_url": "https://avatars2.githubusercontent.com/u/15347271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rugiewitz", "html_url": "https://github.com/Rugiewitz", "followers_url": "https://api.github.com/users/Rugiewitz/followers", "following_url": "https://api.github.com/users/Rugiewitz/following{/other_user}", "gists_url": "https://api.github.com/users/Rugiewitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rugiewitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rugiewitz/subscriptions", "organizations_url": "https://api.github.com/users/Rugiewitz/orgs", "repos_url": "https://api.github.com/users/Rugiewitz/repos", "events_url": "https://api.github.com/users/Rugiewitz/events{/privacy}", "received_events_url": "https://api.github.com/users/Rugiewitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-02T20:17:30Z", "updated_at": "2019-04-03T13:06:26Z", "closed_at": "2019-04-03T13:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom django.core.files.storage import default_storage\r\ndefault_storage.bucket_name = 'other_bucket'\r\ndefault_storage.exists('test_1.jpg')\r\n #Prints True\r\n default_storage.open('test_1.jpg','r')\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.4/dist-packages/storages/backends/s3boto3.py\", line 467, in _open\r\n    raise IOError('File does not exist: %s' % name)\r\nOSError: File does not exist: test_1.jpg\r\n```\r\n\r\nI'm not really too forsure why it think it doesn't exist after i was already able to confirm that it the file already exists there? Any idea why.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/688", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/688/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/688/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/688", "id": 426104110, "node_id": "MDU6SXNzdWU0MjYxMDQxMTA=", "number": 688, "title": "Initial Update", "user": {"login": "pyup-bot", "id": 16239342, "node_id": "MDQ6VXNlcjE2MjM5MzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/16239342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyup-bot", "html_url": "https://github.com/pyup-bot", "followers_url": "https://api.github.com/users/pyup-bot/followers", "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}", "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions", "organizations_url": "https://api.github.com/users/pyup-bot/orgs", "repos_url": "https://api.github.com/users/pyup-bot/repos", "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}", "received_events_url": "https://api.github.com/users/pyup-bot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "likeon", "id": 3296591, "node_id": "MDQ6VXNlcjMyOTY1OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3296591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/likeon", "html_url": "https://github.com/likeon", "followers_url": "https://api.github.com/users/likeon/followers", "following_url": "https://api.github.com/users/likeon/following{/other_user}", "gists_url": "https://api.github.com/users/likeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/likeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/likeon/subscriptions", "organizations_url": "https://api.github.com/users/likeon/orgs", "repos_url": "https://api.github.com/users/likeon/repos", "events_url": "https://api.github.com/users/likeon/events{/privacy}", "received_events_url": "https://api.github.com/users/likeon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "likeon", "id": 3296591, "node_id": "MDQ6VXNlcjMyOTY1OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3296591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/likeon", "html_url": "https://github.com/likeon", "followers_url": "https://api.github.com/users/likeon/followers", "following_url": "https://api.github.com/users/likeon/following{/other_user}", "gists_url": "https://api.github.com/users/likeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/likeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/likeon/subscriptions", "organizations_url": "https://api.github.com/users/likeon/orgs", "repos_url": "https://api.github.com/users/likeon/repos", "events_url": "https://api.github.com/users/likeon/events{/privacy}", "received_events_url": "https://api.github.com/users/likeon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-03-27T17:54:23Z", "updated_at": "2019-03-27T18:35:26Z", "closed_at": "2019-03-27T18:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "The bot created this issue to inform you that pyup.io has been set up on this repo.\nOnce you have closed it, the bot will open pull requests for updates as soon as they are available.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/687", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/687/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/687/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/687", "id": 417831123, "node_id": "MDU6SXNzdWU0MTc4MzExMjM=", "number": 687, "title": "Version propagates to shared cache before all assets are ready", "user": {"login": "ciarancourtney", "id": 6096029, "node_id": "MDQ6VXNlcjYwOTYwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6096029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciarancourtney", "html_url": "https://github.com/ciarancourtney", "followers_url": "https://api.github.com/users/ciarancourtney/followers", "following_url": "https://api.github.com/users/ciarancourtney/following{/other_user}", "gists_url": "https://api.github.com/users/ciarancourtney/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciarancourtney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciarancourtney/subscriptions", "organizations_url": "https://api.github.com/users/ciarancourtney/orgs", "repos_url": "https://api.github.com/users/ciarancourtney/repos", "events_url": "https://api.github.com/users/ciarancourtney/events{/privacy}", "received_events_url": "https://api.github.com/users/ciarancourtney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-06T14:28:25Z", "updated_at": "2020-03-24T18:18:54Z", "closed_at": "2020-03-24T18:18:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "During serial muti-server deployment, when an assert is to be cache busted, this will be the version requested in templates on servers before deployment has even occurred on that server.\r\n\r\nI think this happens because all servers share the same memcached pool, what is the general approach to avoid this? Shouldn't the non-versioned file be requested as a fallback?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/670", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/670/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/670/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/670", "id": 359117675, "node_id": "MDU6SXNzdWUzNTkxMTc2NzU=", "number": 670, "title": "Feature-request: Support for css_html_js_minify", "user": {"login": "TheBuky", "id": 18658299, "node_id": "MDQ6VXNlcjE4NjU4Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/18658299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBuky", "html_url": "https://github.com/TheBuky", "followers_url": "https://api.github.com/users/TheBuky/followers", "following_url": "https://api.github.com/users/TheBuky/following{/other_user}", "gists_url": "https://api.github.com/users/TheBuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBuky/subscriptions", "organizations_url": "https://api.github.com/users/TheBuky/orgs", "repos_url": "https://api.github.com/users/TheBuky/repos", "events_url": "https://api.github.com/users/TheBuky/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBuky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-11T16:10:00Z", "updated_at": "2020-05-29T17:13:36Z", "closed_at": "2020-05-29T17:13:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nMakes it's possbile to add the support for [css_html_js_minify](https://github.com/juancarlospaco/css-html-js-minify)? \r\n\r\nThe motivations are: \r\n- your projet doesn't have any python package for compressing css files natively,\r\n- the python package give the possibility to compress CSS, JS and html,\r\n- the package have great performances and he already was improved (because CSS compressor come from an older package called: [css-html-prettify](https://github.com/juancarlospaco/css-html-prettify)).\r\n\r\nBuky", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/669", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/669/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/669/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/669", "id": 352649636, "node_id": "MDU6SXNzdWUzNTI2NDk2MzY=", "number": 669, "title": "Strange request to get static file", "user": {"login": "TheBuky", "id": 18658299, "node_id": "MDQ6VXNlcjE4NjU4Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/18658299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBuky", "html_url": "https://github.com/TheBuky", "followers_url": "https://api.github.com/users/TheBuky/followers", "following_url": "https://api.github.com/users/TheBuky/following{/other_user}", "gists_url": "https://api.github.com/users/TheBuky/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBuky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBuky/subscriptions", "organizations_url": "https://api.github.com/users/TheBuky/orgs", "repos_url": "https://api.github.com/users/TheBuky/repos", "events_url": "https://api.github.com/users/TheBuky/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBuky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-21T18:03:34Z", "updated_at": "2018-09-16T11:30:13Z", "closed_at": "2018-09-16T11:30:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Environment setup:**\r\nOS: Windows 10 (don't blame me, server is a Debian)\r\nPython: 3.7\r\nDjango: 2.1\r\n\r\n**Django-pipeline configuration:**\r\n```PY\r\nSTATICFILES_DIRS = (\r\n    os.path.join(BASE_DIR, 'static'),\r\n    os.path.join(BASE_DIR, 'media'),\r\n)\r\n\r\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'\r\n\r\nSTATICFILES_FINDERS = (\r\n    'django.contrib.staticfiles.finders.FileSystemFinder',\r\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\r\n    'pipeline.finders.PipelineFinder',\r\n)\r\n\r\nPIPELINE = {\r\n    'PIPELINE_ENABLED': True,\r\n    # Set compilers\r\n    'COMPILERS': (\r\n      'pipeline.compilers.sass.SASSCompiler',\r\n    ),\r\n    'SASS_BINARY': 'C:/Windows/System32/sass.bat',\r\n    # CSS configurations\r\n    'CSS_COMPRESSOR': 'pipeline.compressors.NoopCompressor',\r\n    'STYLESHEETS': {\r\n        'theme': {\r\n            'source_filenames': (\r\n              'scss/build.scss',\r\n            ),\r\n            'output_filename': 'css/navy/bootstrap.css',\r\n            'extra_context': {\r\n                'media': 'screen,projection',\r\n            },\r\n        }\r\n    },\r\n}\r\n```\r\n**Template:**\r\n```html\r\n{% load pipeline %}\r\n...\r\n<link rel=\"stylesheet\" href=\"{% stylesheet 'theme' %}\" media=\"screen\">\r\n```\r\n\r\nNow when i look the URI's request in the console: \r\n`[21/Aug/2018 02:46:47] \"GET /bootstrap/%3Clink%20href= HTTP/1.1\" 404 3019`\r\n\r\nDoes it a problem with function to create the path ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/662", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/662/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/662/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/662", "id": 322376184, "node_id": "MDU6SXNzdWUzMjIzNzYxODQ=", "number": 662, "title": "Docker debug static serving", "user": {"login": "LittleLampLight", "id": 17222717, "node_id": "MDQ6VXNlcjE3MjIyNzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/17222717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LittleLampLight", "html_url": "https://github.com/LittleLampLight", "followers_url": "https://api.github.com/users/LittleLampLight/followers", "following_url": "https://api.github.com/users/LittleLampLight/following{/other_user}", "gists_url": "https://api.github.com/users/LittleLampLight/gists{/gist_id}", "starred_url": "https://api.github.com/users/LittleLampLight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LittleLampLight/subscriptions", "organizations_url": "https://api.github.com/users/LittleLampLight/orgs", "repos_url": "https://api.github.com/users/LittleLampLight/repos", "events_url": "https://api.github.com/users/LittleLampLight/events{/privacy}", "received_events_url": "https://api.github.com/users/LittleLampLight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-11T17:33:42Z", "updated_at": "2018-12-18T06:58:01Z", "closed_at": "2018-12-18T06:58:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django pipeline is serving static from docker container very slow. Page may load about a minute. But when static served without django pipeline - everything seems fine. That's just me or someone else?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/650", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/650/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/650/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/650", "id": 287496965, "node_id": "MDU6SXNzdWUyODc0OTY5NjU=", "number": 650, "title": "With Django 1.11 files get post-processed multiple times", "user": {"login": "belugame", "id": 16137830, "node_id": "MDQ6VXNlcjE2MTM3ODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/16137830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belugame", "html_url": "https://github.com/belugame", "followers_url": "https://api.github.com/users/belugame/followers", "following_url": "https://api.github.com/users/belugame/following{/other_user}", "gists_url": "https://api.github.com/users/belugame/gists{/gist_id}", "starred_url": "https://api.github.com/users/belugame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belugame/subscriptions", "organizations_url": "https://api.github.com/users/belugame/orgs", "repos_url": "https://api.github.com/users/belugame/repos", "events_url": "https://api.github.com/users/belugame/events{/privacy}", "received_events_url": "https://api.github.com/users/belugame/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-10T16:31:26Z", "updated_at": "2019-07-16T23:35:10Z", "closed_at": "2018-07-22T19:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Django 1.11 I see pipeline post-process the same file to the same hashed version multiple times and in the end I have 2 different files e.g.\r\n\r\n```\r\nmedia/admin.min.70004aec9612.css\r\nmedia/admin.min.3719a5a090af.css\r\n\r\n```\r\nThat does not happen on Django <1.10 \r\n\r\nexample snippet of a my config:\r\n```\r\n         'admin_min_css': {                                             \r\n                'source_filenames': (                                      \r\n                'js/libs/chosen/chosen.css',                           \r\n            ),                                                         \r\n            'output_filename': 'admin.min.css',                        \r\n         },\r\n```\r\n\r\nAnyone else experiencing that? Possibly related to the introduction of storage.ManifestStaticFilesStorage.max_post_process_passes in 1.11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/649", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/649/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/649/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/649", "id": 280076622, "node_id": "MDU6SXNzdWUyODAwNzY2MjI=", "number": 649, "title": "Django 2.0 support", "user": {"login": "Mogost", "id": 721963, "node_id": "MDQ6VXNlcjcyMTk2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/721963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mogost", "html_url": "https://github.com/Mogost", "followers_url": "https://api.github.com/users/Mogost/followers", "following_url": "https://api.github.com/users/Mogost/following{/other_user}", "gists_url": "https://api.github.com/users/Mogost/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mogost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mogost/subscriptions", "organizations_url": "https://api.github.com/users/Mogost/orgs", "repos_url": "https://api.github.com/users/Mogost/repos", "events_url": "https://api.github.com/users/Mogost/events{/privacy}", "received_events_url": "https://api.github.com/users/Mogost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-07T10:27:24Z", "updated_at": "2018-09-25T07:35:44Z", "closed_at": "2018-09-25T07:35:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "> Support for the django.core.files.storage.Storage.accessed_time(), created_time(), and modified_time() methods is removed.\r\n\r\n> https://docs.djangoproject.com/en/2.0/releases/2.0/\r\n\r\nAttributeError: 'PipelineCachedStorage' object has no attribute 'modified_time'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/647", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/647/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/647/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/647", "id": 276594454, "node_id": "MDU6SXNzdWUyNzY1OTQ0NTQ=", "number": 647, "title": "Broken Wheel for py3 - 1.6.13", "user": {"login": "canni", "id": 385754, "node_id": "MDQ6VXNlcjM4NTc1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/385754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canni", "html_url": "https://github.com/canni", "followers_url": "https://api.github.com/users/canni/followers", "following_url": "https://api.github.com/users/canni/following{/other_user}", "gists_url": "https://api.github.com/users/canni/gists{/gist_id}", "starred_url": "https://api.github.com/users/canni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canni/subscriptions", "organizations_url": "https://api.github.com/users/canni/orgs", "repos_url": "https://api.github.com/users/canni/repos", "events_url": "https://api.github.com/users/canni/events{/privacy}", "received_events_url": "https://api.github.com/users/canni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-24T11:47:44Z", "updated_at": "2018-01-22T01:26:56Z", "closed_at": "2018-01-22T01:26:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "A regression of: #616 pulling backport py2 futures\r\n\r\n```shell\r\n$ python3 -m venv .venv\r\n$ source .venv/bin/activate\r\n$ python --version\r\nPython 3.6.3\r\n$ pip install django-pipeline\r\nCollecting django-pipeline\r\n  Using cached django_pipeline-1.6.13-py2.py3-none-any.whl\r\nCollecting futures>=2.1.3 (from django-pipeline)\r\n  Using cached futures-3.1.1.tar.gz\r\nInstalling collected packages: futures, django-pipeline\r\n  Running setup.py install for futures ... done\r\nSuccessfully installed django-pipeline-1.6.13 futures-3.1.1\r\n```\r\n\r\nProbably there should be a test build checking for that regression", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/637", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/637/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/637/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/637", "id": 246720157, "node_id": "MDU6SXNzdWUyNDY3MjAxNTc=", "number": 637, "title": "Gzip, S3Boto3ManifestStorage and closed files", "user": {"login": "mr-bo-jangles", "id": 291570, "node_id": "MDQ6VXNlcjI5MTU3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/291570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mr-bo-jangles", "html_url": "https://github.com/mr-bo-jangles", "followers_url": "https://api.github.com/users/mr-bo-jangles/followers", "following_url": "https://api.github.com/users/mr-bo-jangles/following{/other_user}", "gists_url": "https://api.github.com/users/mr-bo-jangles/gists{/gist_id}", "starred_url": "https://api.github.com/users/mr-bo-jangles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mr-bo-jangles/subscriptions", "organizations_url": "https://api.github.com/users/mr-bo-jangles/orgs", "repos_url": "https://api.github.com/users/mr-bo-jangles/repos", "events_url": "https://api.github.com/users/mr-bo-jangles/events{/privacy}", "received_events_url": "https://api.github.com/users/mr-bo-jangles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-31T11:02:43Z", "updated_at": "2017-07-31T11:21:22Z", "closed_at": "2017-07-31T11:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "With Gzip enabled on AWS and S3Boto3manifest the gzip process closes the file and then attempts to seek back to 0 causing an IO Error.\r\n\r\nIssue is in `_compress_content` specifically lines 415-416 where the file is closed but then passed back to be used by `_save_content` on line 466", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/627", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/627/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/627/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/627", "id": 230648595, "node_id": "MDU6SXNzdWUyMzA2NDg1OTU=", "number": 627, "title": "Documentation Error PIPELINE_ENABLED", "user": {"login": "hsmett", "id": 1230876, "node_id": "MDQ6VXNlcjEyMzA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1230876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsmett", "html_url": "https://github.com/hsmett", "followers_url": "https://api.github.com/users/hsmett/followers", "following_url": "https://api.github.com/users/hsmett/following{/other_user}", "gists_url": "https://api.github.com/users/hsmett/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsmett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsmett/subscriptions", "organizations_url": "https://api.github.com/users/hsmett/orgs", "repos_url": "https://api.github.com/users/hsmett/repos", "events_url": "https://api.github.com/users/hsmett/events{/privacy}", "received_events_url": "https://api.github.com/users/hsmett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-23T09:45:15Z", "updated_at": "2017-05-24T11:02:11Z", "closed_at": "2017-05-24T11:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nPIPELINE = {\r\n    'PIPELINE_ENABLED': True,\r\n    'JAVASCRIPT': {\r\n        'stats': {\r\n            'source_filenames': (\r\n              'js/jquery.js',\r\n              'js/d3.js',\r\n              'js/collections/*.js',\r\n              'js/application.js',\r\n            ),\r\n            'output_filename': 'js/stats.js',\r\n        }\r\n    }\r\n}\r\n```\r\ninstead of\r\n```\r\n\r\nPIPELINE_ENABLED = True\r\nPIPELINE = {\r\n    'JAVASCRIPT': {\r\n        'stats': {\r\n            'source_filenames': (\r\n              'js/jquery.js',\r\n              'js/d3.js',\r\n              'js/collections/*.js',\r\n              'js/application.js',\r\n            ),\r\n            'output_filename': 'js/stats.js',\r\n        }\r\n    }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/622", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/622/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/622/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/622", "id": 213167457, "node_id": "MDU6SXNzdWUyMTMxNjc0NTc=", "number": 622, "title": "random test failures", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124827, "node_id": "MDU6TGFiZWwxMjQ4Mjc=", "url": "https://api.github.com/repos/jazzband/django-pipeline/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": "Bug confirmed or can be reproduced"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-09T21:15:41Z", "updated_at": "2018-07-22T19:23:14Z", "closed_at": "2018-07-22T19:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have got a report that this package fails tests randomly.\r\n\r\nSee http://bugs.debian.org/851722 for full details.\r\n\r\nFor example:\r\n\r\n```\r\n======================================================================\r\nERROR: test_pipeline_enabled_and_not_found (tests.tests.test_views.ServeStaticViewsTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/django-pipeline-1.6.8/tests/tests/test_views.py\", line 24, in setUp\r\n    default_collector.clear()\r\n  File \"/build/django-pipeline-1.6.8/pipeline/collector.py\", line 23, in clear\r\n    dirs, files = self.storage.listdir(path)\r\n  File \"/usr/lib/python2.7/dist-packages/django/core/files/storage.py\", line 399, in listdir\r\n    for entry in os.listdir(path):\r\nOSError: [Errno 2] No such file or directory: '/build/django-pipeline-1.6.8/tests/static'\r\n\r\n----------------------------------------------------------------------\r\n```\r\n\r\nI have not been able to reproduce this myself. Wondering if maybe it is related to the tests being run in a different order or something.\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/619", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/619/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/619/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/619", "id": 208608579, "node_id": "MDU6SXNzdWUyMDg2MDg1Nzk=", "number": 619, "title": "404 error on static styles when 'PIPELINE_ENABLED': True ", "user": {"login": "h4k1m0u", "id": 4227512, "node_id": "MDQ6VXNlcjQyMjc1MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4227512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h4k1m0u", "html_url": "https://github.com/h4k1m0u", "followers_url": "https://api.github.com/users/h4k1m0u/followers", "following_url": "https://api.github.com/users/h4k1m0u/following{/other_user}", "gists_url": "https://api.github.com/users/h4k1m0u/gists{/gist_id}", "starred_url": "https://api.github.com/users/h4k1m0u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h4k1m0u/subscriptions", "organizations_url": "https://api.github.com/users/h4k1m0u/orgs", "repos_url": "https://api.github.com/users/h4k1m0u/repos", "events_url": "https://api.github.com/users/h4k1m0u/events{/privacy}", "received_events_url": "https://api.github.com/users/h4k1m0u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-18T03:25:14Z", "updated_at": "2017-02-18T22:12:14Z", "closed_at": "2017-02-18T22:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm getting a `404` for my `CSS` style that was compiled from a `SCSS` files whenever I set `'PIPELINE_ENABLED': True`. If I set it to false the compilation takes a lot of time during the page load but the produced `CSS` files are found normally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/617", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/617/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/617/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/617", "id": 207112399, "node_id": "MDU6SXNzdWUyMDcxMTIzOTk=", "number": 617, "title": "RuntimeError when building CSS from SCSS for Foundation-sites", "user": {"login": "h4k1m0u", "id": 4227512, "node_id": "MDQ6VXNlcjQyMjc1MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4227512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h4k1m0u", "html_url": "https://github.com/h4k1m0u", "followers_url": "https://api.github.com/users/h4k1m0u/followers", "following_url": "https://api.github.com/users/h4k1m0u/following{/other_user}", "gists_url": "https://api.github.com/users/h4k1m0u/gists{/gist_id}", "starred_url": "https://api.github.com/users/h4k1m0u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h4k1m0u/subscriptions", "organizations_url": "https://api.github.com/users/h4k1m0u/orgs", "repos_url": "https://api.github.com/users/h4k1m0u/repos", "events_url": "https://api.github.com/users/h4k1m0u/events{/privacy}", "received_events_url": "https://api.github.com/users/h4k1m0u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-13T03:11:37Z", "updated_at": "2017-02-15T20:25:51Z", "closed_at": "2017-02-15T20:25:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nBased on [Issue 294](https://github.com/jazzband/django-pipeline/issues/294) I'm trying to compile `foundation` from `scss` to `css`. The problem is that I'm encountering the following `RuntimeError`:\r\n\r\n```sh\r\n/home/hakim/.gem/ruby/2.4.0/gems/sass-3.4.23/lib/sass/exec/sass_scss.rb:287:in `watch_or_update': File /home/hakim/github/myquotes/static/quotes/app.css doesn't exist. (RuntimeError)\r\n    Did you mean: sass --update /home/hakim/github/myquotes/static/quotes/app.scss:/home/hakim/github/myquotes/static/quotes/app.css\r\n\tfrom /home/hakim/.gem/ruby/2.4.0/gems/sass-3.4.23/lib/sass/exec/sass_scss.rb:51:in `process_result'\r\n\tfrom /home/hakim/.gem/ruby/2.4.0/gems/sass-3.4.23/lib/sass/exec/base.rb:52:in `parse'\r\n\tfrom /home/hakim/.gem/ruby/2.4.0/gems/sass-3.4.23/lib/sass/exec/base.rb:19:in `parse!'\r\n\tfrom /home/hakim/.gem/ruby/2.4.0/gems/sass-3.4.23/bin/sass:13:in `<top (required)>'\r\n\tfrom /home/hakim/.gem/ruby/2.4.0/bin/sass:22:in `load'\r\n\tfrom /home/hakim/.gem/ruby/2.4.0/bin/sass:22:in `<main>'\r\n```\r\n\r\nThe static files are stored in the `os.path.join(BASE_DIR, 'static')`.\r\n\r\nHere is the relevant part of my `setting.py`:\r\n\r\n```python\r\n# Manage static files with pipeline \r\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage' \r\n\r\n# Where to generate CSS from SCSS\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\r\n\r\n# Specify SCSS files to be compiled to CSS\r\nPIPELINE = {\r\n    'STYLESHEETS': {\r\n        'librairies': {\r\n            'source_filenames': (\r\n                 'quotes/app.scss',\r\n             ),\r\n             'output_filename': 'quotes/app.css',\r\n         },\r\n     },\r\n     'COMPILERS': (\r\n         'pipeline.compilers.sass.SASSCompiler',\r\n     ),\r\n     'SASS_ARGUMENTS': \"--trace --update -I '%s'\" % os.path.join(\r\n         BOWER_COMPONENTS_ROOT,\r\n         'bower_components',\r\n         'foundation',\r\n         'scss'\r\n    ),\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/616", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/616/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/616/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/616", "id": 205658983, "node_id": "MDU6SXNzdWUyMDU2NTg5ODM=", "number": 616, "title": "Broken wheel for 1.6.11?", "user": {"login": "pacahon", "id": 460489, "node_id": "MDQ6VXNlcjQ2MDQ4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/460489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacahon", "html_url": "https://github.com/pacahon", "followers_url": "https://api.github.com/users/pacahon/followers", "following_url": "https://api.github.com/users/pacahon/following{/other_user}", "gists_url": "https://api.github.com/users/pacahon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacahon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacahon/subscriptions", "organizations_url": "https://api.github.com/users/pacahon/orgs", "repos_url": "https://api.github.com/users/pacahon/repos", "events_url": "https://api.github.com/users/pacahon/events{/privacy}", "received_events_url": "https://api.github.com/users/pacahon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124827, "node_id": "MDU6TGFiZWwxMjQ4Mjc=", "url": "https://api.github.com/repos/jazzband/django-pipeline/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": "Bug confirmed or can be reproduced"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-06T17:46:46Z", "updated_at": "2017-05-25T08:53:15Z", "closed_at": "2017-05-25T08:53:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I guess something wrong with `1.6.11` wheel. \r\nI've just installed `1.6.11` with pip (on mac system if it matters) and got dependency issue like below\r\n```\r\nFile \"/Users/pacahon/.pyenv/versions/csc/lib/python3.4/site-packages/concurrent/futures/_base.py\", line 357\r\n    raise type(self._exception), self._exception, self._traceback\r\n```\r\n\r\nAfter some investigation, I mentioned this:\r\n```\r\n$ pip -V\r\npip 9.0.1 from /Users/pacahon/.pyenv/versions/test_env/lib/python3.4/site-packages (python 3.4)\r\n$ pip install -vvv django-pipeline\r\n...\r\nDownloading from URL https://pypi.python.org/packages/4d/63/1c7e2d78a20986a09d37df176f5902b1b6bd7d6ce13177e3180ea8f11724/django_pipeline-1.6.11-py2.py3-none-any.whl#md5=21231243e71400d7cb315df257bafcad (from https://pypi.python.org/simple/django-pipeline/)\r\nCollecting futures>=2.1.3 (from django-pipeline)\r\n...\r\nSuccessfully installed django-pipeline-1.6.11 futures-3.0.5\r\n```\r\n\r\npip trying to install `futures` package which is backport for py2.\r\nP.S `1.6.10` works just fine. No `futures` among successfully installed packages.\r\nP.P.S Screenshot from pypi (look at wheel name and then \"Py version\"\r\n<img width=\"892\" alt=\"screen shot 2017-02-06 at 20 48 19\" src=\"https://cloud.githubusercontent.com/assets/460489/22659180/b99186f6-ecad-11e6-8d01-da66bcb65d20.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/611", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/611/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/611/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/611", "id": 199144543, "node_id": "MDU6SXNzdWUxOTkxNDQ1NDM=", "number": 611, "title": "Does not show errors on later refreshes", "user": {"login": "natevw", "id": 265902, "node_id": "MDQ6VXNlcjI2NTkwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/265902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natevw", "html_url": "https://github.com/natevw", "followers_url": "https://api.github.com/users/natevw/followers", "following_url": "https://api.github.com/users/natevw/following{/other_user}", "gists_url": "https://api.github.com/users/natevw/gists{/gist_id}", "starred_url": "https://api.github.com/users/natevw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natevw/subscriptions", "organizations_url": "https://api.github.com/users/natevw/orgs", "repos_url": "https://api.github.com/users/natevw/repos", "events_url": "https://api.github.com/users/natevw/events{/privacy}", "received_events_url": "https://api.github.com/users/natevw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-06T08:03:04Z", "updated_at": "2017-01-06T08:13:29Z", "closed_at": "2017-01-06T08:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "After a source is changed, django-pipeline will report compilation errors the first time the product is used. However on subsequent refreshes of the page, the error simply goes away and an empty file is served up instead.\r\n\r\n(This may be the underlying cause of the report at #605 as well.)\r\n\r\nThis is somewhat annoying when working solo, but really causes trouble working on a team. The situation usually goes like this:\r\n\r\n* another developer/designer/tester on the team pulls down the latest code but doesn't install the latest dependencies\r\n* compilation fails, but apparently they don't pay much attention to the initial one-time error report. Instead they start refreshing things to try get the site to work.\r\n* things don't work since the underlying problem persists, but now all they can do is complain that the site is \"all broken\". They don't see any reminder of what might be wrong, or have a way to copy/paste the error for someone else to help troubleshoot.\r\n\r\nWhy does this library create an empty file when something goes wrong, instead of leaving it missing and thus recompiling again later? (Or is this a problem with one of the plugins I'm using, e.g. django-pipeline-browserify?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/604", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/604/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/604/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/604", "id": 197105115, "node_id": "MDU6SXNzdWUxOTcxMDUxMTU=", "number": 604, "title": "ValueError: Empty key names are not allowed when using collectstatic django", "user": {"login": "davneet4u", "id": 8089029, "node_id": "MDQ6VXNlcjgwODkwMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8089029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davneet4u", "html_url": "https://github.com/davneet4u", "followers_url": "https://api.github.com/users/davneet4u/followers", "following_url": "https://api.github.com/users/davneet4u/following{/other_user}", "gists_url": "https://api.github.com/users/davneet4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/davneet4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davneet4u/subscriptions", "organizations_url": "https://api.github.com/users/davneet4u/orgs", "repos_url": "https://api.github.com/users/davneet4u/repos", "events_url": "https://api.github.com/users/davneet4u/events{/privacy}", "received_events_url": "https://api.github.com/users/davneet4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-22T06:37:07Z", "updated_at": "2016-12-22T07:10:13Z", "closed_at": "2016-12-22T07:10:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using `django-pipeline` [`S3PipelineManifestStorage`][1] with `django-storages`\r\n\r\nWhen I use collectstatic to upload and post-process(minify) my assets, \r\nI get an error when post-processing.\r\n\r\nEarlier, collectstatic worked fine and gave no error.\r\n\r\nHere's the full traceback\r\n\r\n    Traceback (most recent call last):\r\n      File \"manage.py\", line 10, in <module>\r\n        execute_from_command_line(sys.argv)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\r\n        utility.execute()\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute\r\n        self.fetch_command(subcommand).run_from_argv(self.argv)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/base.py\", line 390, in run_from_argv\r\n        self.execute(*args, **cmd_options)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\r\n        output = self.handle(*args, **options)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 168, in handle\r\n        collected = self.collect()\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 114, in collect\r\n        for original_path, processed_path, processed in processor:\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/storage.py\", line 26, in post_process\r\n        packager.pack_stylesheets(package)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/packager.py\", line 96, in pack_stylesheets\r\n        variant=package.variant, **kwargs)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/packager.py\", line 105, in pack\r\n        paths = self.compile(package.paths, force=True)\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/packager.py\", line 34, in paths\r\n        return [path for path in self.sources\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/packager.py\", line 26, in sources\r\n        for path in glob(pattern):\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/glob.py\", line 18, in glob\r\n        return sorted(list(iglob(pathname)))\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/pipeline/glob.py\", line 29, in iglob\r\n        if staticfiles_storage.exists(pathname):\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/storages/backends/s3boto.py\", line 445, in exists\r\n        k = self.bucket.new_key(self._encode_name(name))\r\n      File \"/app/.heroku/python/lib/python2.7/site-packages/boto/s3/bucket.py\", line 623, in new_key\r\n        raise ValueError('Empty key names are not allowed')\r\n    ValueError: Empty key names are not allowed\r\n\r\n\r\nI am using Django-Pipeline 1.5.4 (though I have upgraded to 1.6 and tried correcting the error, didn't work).\r\ndjango-storages 1.5.1 and boto2\r\nCould you please figure out why this error is occuring?\r\n\r\n  [1]: https://django-pipeline.readthedocs.io/en/latest/storages.html#using-with-other-storages\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/602", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/602/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/602/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/602", "id": 195669405, "node_id": "MDU6SXNzdWUxOTU2Njk0MDU=", "number": 602, "title": "TypeError: __init__() takes 1 positional argument but 2 were given", "user": {"login": "actongorton", "id": 3145001, "node_id": "MDQ6VXNlcjMxNDUwMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3145001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/actongorton", "html_url": "https://github.com/actongorton", "followers_url": "https://api.github.com/users/actongorton/followers", "following_url": "https://api.github.com/users/actongorton/following{/other_user}", "gists_url": "https://api.github.com/users/actongorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/actongorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/actongorton/subscriptions", "organizations_url": "https://api.github.com/users/actongorton/orgs", "repos_url": "https://api.github.com/users/actongorton/repos", "events_url": "https://api.github.com/users/actongorton/events{/privacy}", "received_events_url": "https://api.github.com/users/actongorton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-14T22:55:10Z", "updated_at": "2019-11-20T12:36:40Z", "closed_at": "2016-12-17T22:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "New to django-pipeline and trying to get it up by following the guide at readthedocs.io and using a vanilla Django 1.10.4 installation, but I'm getting an error \"TypeError: __init__() takes 1 positional argument but 2 were given\" and can't figure out what's causing it.\r\n\r\nPython 3.5.2\r\nMacOS 10.12.1 \r\n\r\n**Full stacktrace:**\r\n```\r\nSystem check identified no issues (0 silenced).\r\nDecember 14, 2016 - 22:43:03\r\nDjango version 1.10.4, using settings 'rm_app.settings'\r\nStarting development server at http://127.0.0.1:8000/\r\nQuit the server with CONTROL-C.\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x107c53048>\r\nTraceback (most recent call last):\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/utils/autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 142, in inner_run\r\n    handler = self.get_handler(*args, **options)\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/contrib/staticfiles/management/commands/runserver.py\", line 27, in get_handler\r\n    handler = super(Command, self).get_handler(*args, **options)\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 64, in get_handler\r\n    return get_internal_wsgi_application()\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/core/servers/basehttp.py\", line 49, in get_internal_wsgi_application\r\n    return import_string(app_path)\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/utils/module_loading.py\", line 20, in import_string\r\n    module = import_module(module_path)\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/Users/acer9997/Projects/rm_app/rm_app/wsgi.py\", line 7, in <module>\r\n    application = get_wsgi_application()\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/core/wsgi.py\", line 14, in get_wsgi_application\r\n    return WSGIHandler()\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/core/handlers/wsgi.py\", line 153, in __init__\r\n    self.load_middleware()\r\n  File \"/Users/acer9997/venv-riskminer/lib/python3.5/site-packages/django/core/handlers/base.py\", line 82, in load_middleware\r\n    mw_instance = middleware(handler)\r\nTypeError: __init__() takes 1 positional argument but 2 were given\r\n```\r\n\r\n**requirements.txt:**\r\n```\r\nDjango==1.10.4\r\ndjango-filter==1.0.1\r\ndjango-pipeline==1.6.9\r\ndjango-pipeline-browserify==0.5.0\r\ndjangorestframework==3.5.3\r\nMarkdown==2.6.7\r\n```\r\n\r\n**settings.py:**\r\n```\r\nimport os\r\nfrom os.path import abspath, basename, dirname, join, normpath\r\n\r\n# Replace BASE_DIR with this\r\nDJANGO_ROOT = dirname(dirname(abspath(__file__)))\r\nSITE_ROOT = dirname(DJANGO_ROOT)\r\nSITE_NAME = basename(DJANGO_ROOT)\r\n\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = os.environ['RISKMINER_SECRET_KEY']\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = []\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'rest_framework',\r\n    'pipeline',\r\n    'riskminer',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n    'django.middleware.gzip.GZipMiddleware',\r\n    'pipeline.middleware.MinifyHTMLMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'rm_app.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\n# Static files (CSS, JavaScript, Images)\r\nSTATIC_URL = '/static/'\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'public')\r\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'\r\nSTATICFILES_FINDERS = (\r\n    'django.contrib.staticfiles.finders.FileSystemFinder',\r\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\r\n    'pipeline.finders.PipelineFinder',\r\n)\r\nSTATICFILES_DIRS = ['static']\r\n\r\nPIPELINE = {\r\n    'PIPELINE_ENABLED': True,\r\n    'JAVASCRIPT': {\r\n        'stats': {\r\n            'source_filenames': (\r\n              'js/jquery.js',\r\n              'js/d3.js',\r\n              'js/collections/*.js',\r\n              'js/application.js',\r\n            ),\r\n            'output_filename': 'js/stats.js',\r\n        }\r\n    }\r\n}\r\n\r\n\r\n# WSGI\r\nWSGI_APPLICATION = 'rm_app.wsgi.application'\r\n\r\n# Database\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\r\n    }\r\n}\r\n\r\n# Password validation\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_PERMISSION_CLASSES': [\r\n        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\r\n    ]\r\n}\r\n\r\n# Internationalization\r\nLANGUAGE_CODE = 'en-us'\r\nTIME_ZONE = 'UTC'\r\nUSE_I18N = True\r\nUSE_L10N = True\r\nUSE_TZ = True\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/598", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/598/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/598/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/598", "id": 189141679, "node_id": "MDU6SXNzdWUxODkxNDE2Nzk=", "number": 598, "title": "Cache-busting doesn't seem to name the file properly", "user": {"login": "gkpo", "id": 951412, "node_id": "MDQ6VXNlcjk1MTQxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/951412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkpo", "html_url": "https://github.com/gkpo", "followers_url": "https://api.github.com/users/gkpo/followers", "following_url": "https://api.github.com/users/gkpo/following{/other_user}", "gists_url": "https://api.github.com/users/gkpo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkpo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkpo/subscriptions", "organizations_url": "https://api.github.com/users/gkpo/orgs", "repos_url": "https://api.github.com/users/gkpo/repos", "events_url": "https://api.github.com/users/gkpo/events{/privacy}", "received_events_url": "https://api.github.com/users/gkpo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T15:29:45Z", "updated_at": "2016-11-15T10:28:11Z", "closed_at": "2016-11-15T10:28:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use cache-busting with:\r\n`STATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'`\r\n\r\nIn my index.html template, I call this tag `{% stylesheet 'styles' %}`\r\nIt translates to what looks like a cache-busted url: `/static/css/styles.a26c39c46e80.css`\r\nHowever this url returns a 404. So I checked the name of the file that is actually written in filesystem and it is still `styles.css`\r\n\r\nIs this related to the output_filename setting?\r\n`'output_filename': 'css/styles.css',`\r\n\r\nAm I missing anything?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/586", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/586/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/586/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/586", "id": 170228231, "node_id": "MDU6SXNzdWUxNzAyMjgyMzE=", "number": 586, "title": "Deprecation warnings on Django 1.10", "user": {"login": "anderspetersson", "id": 162034, "node_id": "MDQ6VXNlcjE2MjAzNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/162034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspetersson", "html_url": "https://github.com/anderspetersson", "followers_url": "https://api.github.com/users/anderspetersson/followers", "following_url": "https://api.github.com/users/anderspetersson/following{/other_user}", "gists_url": "https://api.github.com/users/anderspetersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspetersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspetersson/subscriptions", "organizations_url": "https://api.github.com/users/anderspetersson/orgs", "repos_url": "https://api.github.com/users/anderspetersson/repos", "events_url": "https://api.github.com/users/anderspetersson/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspetersson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-09T17:46:49Z", "updated_at": "2016-10-23T11:23:08Z", "closed_at": "2016-10-23T11:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "> pipeline/collector.py:68: RemovedInDjango20Warning: FileSystemStorage.modified_time() is deprecated in favor of get_modified_time().\n> \n> pipeline/collector.py:75: RemovedInDjango20Warning: FileSystemStorage.modified_time() is deprecated in favor of get_modified_time().\n\nHow do we preserve backwards compatibility?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/582", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/582/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/582/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/582", "id": 168248023, "node_id": "MDU6SXNzdWUxNjgyNDgwMjM=", "number": 582, "title": "Sass compiler is not checking outdated, force", "user": {"login": "sassanh", "id": 1270688, "node_id": "MDQ6VXNlcjEyNzA2ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1270688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sassanh", "html_url": "https://github.com/sassanh", "followers_url": "https://api.github.com/users/sassanh/followers", "following_url": "https://api.github.com/users/sassanh/following{/other_user}", "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions", "organizations_url": "https://api.github.com/users/sassanh/orgs", "repos_url": "https://api.github.com/users/sassanh/repos", "events_url": "https://api.github.com/users/sassanh/events{/privacy}", "received_events_url": "https://api.github.com/users/sassanh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-29T04:21:35Z", "updated_at": "2018-02-13T18:08:23Z", "closed_at": "2018-02-13T18:08:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently sass compiler doesn't check if it needs to recompile (outdated, force combination), this is its current code:\n\n```\nfrom __future__ import unicode_literals\n\nfrom os.path import dirname\n\nfrom pipeline.conf import settings\nfrom pipeline.compilers import SubProcessCompiler\n\n\nclass SASSCompiler(SubProcessCompiler):\n    output_extension = 'css'\n\n    def match_file(self, filename):\n        return filename.endswith(('.scss', '.sass'))\n\n    def compile_file(self, infile, outfile, outdated=False, force=False):\n        command = (\n            settings.SASS_BINARY,\n            settings.SASS_ARGUMENTS,\n            infile,\n            outfile\n        )\n        return self.execute_command(command, cwd=dirname(infile))\n```\n\nwhile I think it needs:\n\n```\nif not outdated and not force:\n    return\n```\n\nIn the beginning, currently it tries to compile a scss file in my production environment and as it doesn't have required access it fails and site is down.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/579", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/579/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/579/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/579", "id": 165829865, "node_id": "MDU6SXNzdWUxNjU4Mjk4NjU=", "number": 579, "title": "libsass compiler for scss/sass", "user": {"login": "sonic182", "id": 4070466, "node_id": "MDQ6VXNlcjQwNzA0NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4070466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonic182", "html_url": "https://github.com/sonic182", "followers_url": "https://api.github.com/users/sonic182/followers", "following_url": "https://api.github.com/users/sonic182/following{/other_user}", "gists_url": "https://api.github.com/users/sonic182/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonic182/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonic182/subscriptions", "organizations_url": "https://api.github.com/users/sonic182/orgs", "repos_url": "https://api.github.com/users/sonic182/repos", "events_url": "https://api.github.com/users/sonic182/events{/privacy}", "received_events_url": "https://api.github.com/users/sonic182/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-15T16:41:31Z", "updated_at": "2019-05-14T07:40:54Z", "closed_at": "2019-05-14T07:40:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "hey! I've develop this compiler to quickly sass compilation for development and production\n\nhttps://github.com/sonic182/libsasscompiler\n\nit uses [python libasss](https://github.com/dahlia/libsass-python), with this there is no needed of ruby-sass or node-sass anymore, maybe you should add to documentation or maybe the core of django-pipeline?\n\nBest Regards\nJohanderson\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/577", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/577/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/577/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/577", "id": 163106558, "node_id": "MDU6SXNzdWUxNjMxMDY1NTg=", "number": 577, "title": "How to use pipeline with: DEBUG=TRUE and PIPELINE_ENABLED: True", "user": {"login": "sowinski", "id": 1528746, "node_id": "MDQ6VXNlcjE1Mjg3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1528746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sowinski", "html_url": "https://github.com/sowinski", "followers_url": "https://api.github.com/users/sowinski/followers", "following_url": "https://api.github.com/users/sowinski/following{/other_user}", "gists_url": "https://api.github.com/users/sowinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/sowinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sowinski/subscriptions", "organizations_url": "https://api.github.com/users/sowinski/orgs", "repos_url": "https://api.github.com/users/sowinski/repos", "events_url": "https://api.github.com/users/sowinski/events{/privacy}", "received_events_url": "https://api.github.com/users/sowinski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124830, "node_id": "MDU6TGFiZWwxMjQ4MzA=", "url": "https://api.github.com/repos/jazzband/django-pipeline/labels/duplicate", "name": "duplicate", "color": "eeeeee", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-30T08:12:17Z", "updated_at": "2017-05-24T16:13:55Z", "closed_at": "2017-05-24T16:13:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\npipeline is doing a good job, but I would like to enable pipeline while I am developing.\nIf I turn DEBUG=True und PIPELINE_ENABLED = True I can not access my static_files.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/574", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/574/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/574/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/574", "id": 162519107, "node_id": "MDU6SXNzdWUxNjI1MTkxMDc=", "number": 574, "title": "collect static error with custom django-storages", "user": {"login": "dhararon", "id": 1596624, "node_id": "MDQ6VXNlcjE1OTY2MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1596624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhararon", "html_url": "https://github.com/dhararon", "followers_url": "https://api.github.com/users/dhararon/followers", "following_url": "https://api.github.com/users/dhararon/following{/other_user}", "gists_url": "https://api.github.com/users/dhararon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhararon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhararon/subscriptions", "organizations_url": "https://api.github.com/users/dhararon/orgs", "repos_url": "https://api.github.com/users/dhararon/repos", "events_url": "https://api.github.com/users/dhararon/events{/privacy}", "received_events_url": "https://api.github.com/users/dhararon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-27T18:38:46Z", "updated_at": "2016-06-27T19:17:51Z", "closed_at": "2016-06-27T19:17:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\ni read similar issues but i can't do work django-pipeline + django-storages\n\nthis is my custom class:\n\n``` python\nfrom django.contrib.staticfiles.storage import CachedFilesMixin\n\nfrom pipeline.storage import PipelineMixin\n\nfrom storages.backends.s3boto import S3BotoStorage\n\nclass S3PipelineCachedStorage(PipelineMixin, CachedFilesMixin, S3BotoStorage):\n    pass\n```\n\nand this is my settings:\n\n``` python\nSTATICFILES_STORAGE = 'app.storages.S3PipelineCachedStorage'\n```\n\nand my version libraries are:\n- django-pipeline==1.6.8\n- django-storages==1.4.1\n- boto==2.40.0\n\nand when i run \n\n``` python\n./manage.py collectstatic\n```\n\nreturn this error\n\n``` python\nfrom storages.backends.s3boto import S3BotoStorage\nImportError: No module named backends.s3boto\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/565", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/565/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/565/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/565", "id": 150112191, "node_id": "MDU6SXNzdWUxNTAxMTIxOTE=", "number": 565, "title": "django-pipeline wipes out my entries in Django Database Cache", "user": {"login": "MrCsabaToth", "id": 744949, "node_id": "MDQ6VXNlcjc0NDk0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/744949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrCsabaToth", "html_url": "https://github.com/MrCsabaToth", "followers_url": "https://api.github.com/users/MrCsabaToth/followers", "following_url": "https://api.github.com/users/MrCsabaToth/following{/other_user}", "gists_url": "https://api.github.com/users/MrCsabaToth/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrCsabaToth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrCsabaToth/subscriptions", "organizations_url": "https://api.github.com/users/MrCsabaToth/orgs", "repos_url": "https://api.github.com/users/MrCsabaToth/repos", "events_url": "https://api.github.com/users/MrCsabaToth/events{/privacy}", "received_events_url": "https://api.github.com/users/MrCsabaToth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-21T15:41:51Z", "updated_at": "2016-04-21T17:43:12Z", "closed_at": "2016-04-21T17:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Details: https://stackoverflow.com/questions/36757985/django-pipeline-wipes-out-my-entries-in-django-database-cache\n\nMaybe (?) the relevant parts:\n\n```\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'pipeline.finders.PipelineFinder',\n    'pipeline.finders.CachedFileFinder',\n)\n```\n\ntogether with\n\n```\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',\n        'LOCATION': 'django_dbcache',\n    }\n}\n```\n\nI haven't find anything about if `pipeline.storage.PipelineCachedStorage` or `pipeline.finders.CachedFileFinder` would wipe the cache. In fact, I haven't found anything about them at all in the docs, besides they were spelled out as part of examples.\n\nSo what do they actually do? Do they place entries in the cache? What entries and how?\n\nHow can I stop `pipeline` wiping the cache?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/563", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/563/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/563/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/563", "id": 149182318, "node_id": "MDU6SXNzdWUxNDkxODIzMTg=", "number": 563, "title": "manifesto doesn't work with django 1.9", "user": {"login": "sebastien247", "id": 2801027, "node_id": "MDQ6VXNlcjI4MDEwMjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2801027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastien247", "html_url": "https://github.com/sebastien247", "followers_url": "https://api.github.com/users/sebastien247/followers", "following_url": "https://api.github.com/users/sebastien247/following{/other_user}", "gists_url": "https://api.github.com/users/sebastien247/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastien247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastien247/subscriptions", "organizations_url": "https://api.github.com/users/sebastien247/orgs", "repos_url": "https://api.github.com/users/sebastien247/repos", "events_url": "https://api.github.com/users/sebastien247/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastien247/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-18T15:19:36Z", "updated_at": "2017-05-24T16:56:43Z", "closed_at": "2017-05-24T16:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "See : https://github.com/cyberdelia/manifesto/issues/13\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/555", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/555/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/555/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/555", "id": 144043608, "node_id": "MDU6SXNzdWUxNDQwNDM2MDg=", "number": 555, "title": "AttributeError: 'Settings' object has no attribute 'PIPELINE'", "user": {"login": "manikos", "id": 4214167, "node_id": "MDQ6VXNlcjQyMTQxNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4214167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manikos", "html_url": "https://github.com/manikos", "followers_url": "https://api.github.com/users/manikos/followers", "following_url": "https://api.github.com/users/manikos/following{/other_user}", "gists_url": "https://api.github.com/users/manikos/gists{/gist_id}", "starred_url": "https://api.github.com/users/manikos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manikos/subscriptions", "organizations_url": "https://api.github.com/users/manikos/orgs", "repos_url": "https://api.github.com/users/manikos/repos", "events_url": "https://api.github.com/users/manikos/events{/privacy}", "received_events_url": "https://api.github.com/users/manikos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-28T18:18:11Z", "updated_at": "2016-03-29T05:19:35Z", "closed_at": "2016-03-29T05:19:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today I upgraded my project to django 1.9.4 and all of a sudden the following error occurred (during `manage.py check`):\n\n```\nTraceback (most recent call last):\n  File \"/usr/bin/pycharm-4.0.6/helpers/pycharm/django_manage.py\", line 41, in <module>\n    run_module(manage_file, None, '__main__', True)\n  File \"/usr/lib/python2.7/runpy.py\", line 176, in run_module\n    fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 82, in _run_module_code\n    mod_name, mod_fname, mod_loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/home/nick/django_projects/giteftra_shop/manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 353, in execute_from_command_line\n    utility.execute()\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 345, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/management/commands/check.py\", line 51, in handle\n    include_deployment_checks=include_deployment_checks,\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/management/base.py\", line 426, in check\n    include_deployment_checks=include_deployment_checks,\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/core/checks/registry.py\", line 75, in run_checks\n    new_errors = check(app_configs=app_configs)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/admin_tools/checks.py\", line 18, in check_admin_tools_configuration\n    get_template('admin:admin/base.html')\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/loader.py\", line 26, in get_template\n    engines = _engine_list(using)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/loader.py\", line 143, in _engine_list\n    return engines.all() if using is None else [engines[using]]\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/utils.py\", line 110, in all\n    return [self[alias] for alias in self]\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/utils.py\", line 101, in __getitem__\n    engine = engine_cls(params)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/backends/django.py\", line 31, in __init__\n    options['libraries'] = self.get_templatetag_libraries(libraries)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/backends/django.py\", line 49, in get_templatetag_libraries\n    libraries = get_installed_libraries()\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/backends/django.py\", line 131, in get_installed_libraries\n    for name in get_package_libraries(pkg):\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/template/backends/django.py\", line 144, in get_package_libraries\n    module = import_module(entry[1])\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/pipeline/templatetags/pipeline.py\", line 13, in <module>\n    from ..collector import default_collector\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/pipeline/collector.py\", line 11, in <module>\n    from pipeline.finders import PipelineFinder\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/pipeline/finders.py\", line 8, in <module>\n    from pipeline.conf import settings\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/pipeline/conf.py\", line 127, in <module>\n    settings = PipelineSettings(_settings.PIPELINE)\n  File \"/home/nick/.virtualenvs/mosxou_env_19/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 56, in __getattr__\n    return getattr(self._wrapped, name)\nAttributeError: 'Settings' object has no attribute 'PIPELINE'\n```\n\nI tried to debug it, without success. I (obviously) have `pipeline` in my `INSTALLED_APPS`. I tried it to move it along my `INSTALLED_APPS` (to the top, middle or last) without success again.\n\nAny ideas? (Maybe is my fault?)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/550", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/550/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/550/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/550", "id": 139971115, "node_id": "MDU6SXNzdWUxMzk5NzExMTU=", "number": 550, "title": "Babel not transpiling to ES5", "user": {"login": "natecox", "id": 2782695, "node_id": "MDQ6VXNlcjI3ODI2OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2782695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natecox", "html_url": "https://github.com/natecox", "followers_url": "https://api.github.com/users/natecox/followers", "following_url": "https://api.github.com/users/natecox/following{/other_user}", "gists_url": "https://api.github.com/users/natecox/gists{/gist_id}", "starred_url": "https://api.github.com/users/natecox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natecox/subscriptions", "organizations_url": "https://api.github.com/users/natecox/orgs", "repos_url": "https://api.github.com/users/natecox/repos", "events_url": "https://api.github.com/users/natecox/events{/privacy}", "received_events_url": "https://api.github.com/users/natecox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-10T18:21:02Z", "updated_at": "2016-03-10T21:48:39Z", "closed_at": "2016-03-10T21:48:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I'm trying to get django-pipeline to properly transpile my ES2015 code to ES5, but it doesn't seem to be working at all. Once collectstatic is done and the file is post-processed, I end up with regular ES2015 in the source (arrow functions and all).\n\nThis is happening for me both locally (OSX) and on a remote development server (Ubuntu).\n\nMy compiler set up looks like this:\n\n``` python\nPIPELINE['JS_COMPRESSOR'] = 'pipeline.compressors.NoopCompressor'\nPIPELINE['CSS_COMPRESSOR'] = 'pipeline.compressors.yuglify.YuglifyCompressor'\n\nPIPELINE['COMPILERS'] = (\n    'pipeline.compilers.sass.SASSCompiler',\n    'pipeline.compilers.es6.ES6Compiler',\n)\n\nPIPELINE['BABEL_ARGUMENTS'] = '--presets es2015'\n```\n\nThe relevant entry in the `JAVASCRIPT` dict is:\n\n``` python\nPIPELINE['JAVASCRIPT'] = {\n    'user_groups': {\n        'source_filenames': (\n            'main/js/user/group.js',\n        ),\n        'output_filename': 'main/js/user/user-groups.js'\n    }\n}\n```\n\n_This is truncated from the full entry, but only this one file is currently written with ES2015_\n\nAs far as I can tell, the code should be transpiling just fine. I can confirm that manually invoking the `babel` command line argument absolutely transpiles it properly, but django-pipeline doesn't seem to recognize that it is ES2015. \n\nThe documentation on this is sparse. Do I need to use some particular naming convention for the file? Am I missing a step somewhere? My Sass files are compiling without an issue, so at least I know that the compilers setting works in general.\n\nHelp is greatly appreciated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/547", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/547/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/547/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/547", "id": 138724838, "node_id": "MDU6SXNzdWUxMzg3MjQ4Mzg=", "number": 547, "title": "SASS compiler not working on windows machine", "user": {"login": "ChristopherBrix", "id": 5114411, "node_id": "MDQ6VXNlcjUxMTQ0MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5114411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChristopherBrix", "html_url": "https://github.com/ChristopherBrix", "followers_url": "https://api.github.com/users/ChristopherBrix/followers", "following_url": "https://api.github.com/users/ChristopherBrix/following{/other_user}", "gists_url": "https://api.github.com/users/ChristopherBrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChristopherBrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChristopherBrix/subscriptions", "organizations_url": "https://api.github.com/users/ChristopherBrix/orgs", "repos_url": "https://api.github.com/users/ChristopherBrix/repos", "events_url": "https://api.github.com/users/ChristopherBrix/events{/privacy}", "received_events_url": "https://api.github.com/users/ChristopherBrix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-05T21:29:57Z", "updated_at": "2016-03-12T15:26:59Z", "closed_at": "2016-03-12T15:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to get the SASS compiler working on my windows (10) machine. Unfortunately, I get the error `[WinError 2] The system cannot find the file specified` when I load a page or run `py manage.py collectstatic`.\n\nThis is an extract from my configuration:\n\n```\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineStorage'\n\nSTATICFILES_DIRS = (\n   os.path.join(BASE_DIR, 'common-static'),\n)\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n\n    'pipeline.finders.PipelineFinder',\n)\n\nPIPELINE = {\n    'COMPILERS': { \n      'pipeline.compilers.sass.SASSCompiler',\n    },\n    'CSS_COMPRESSOR': 'pipeline.compressors.cssmin.CssminCompressor',\n    'JS_COMPRESSOR': 'pipeline.compressors.jsmin.JSMinCompressor',\n\n\n    'STYLESHEETS': {\n        'cssstyles': {\n            'source_filenames': (\n                'myapp/css/*.css',\n                'myapp/css/*.scss',\n            ),\n            'output_filename': 'css/myapp.min.css',\n        }\n    }\n}\n```\n\nA friend of mine uses the exact same configuration on his linux maching without any problems.\n\nI installed Ruby and SASS, and tried adding the path to the settings: `\nSASS_BINARY = 'C:/Ruby22-x64/bin/sass'` but to no avail\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/534", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/534/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/534/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/534", "id": 130641799, "node_id": "MDU6SXNzdWUxMzA2NDE3OTk=", "number": 534, "title": "Pipeline ignores missing files", "user": {"login": "brigantino2", "id": 2971657, "node_id": "MDQ6VXNlcjI5NzE2NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2971657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brigantino2", "html_url": "https://github.com/brigantino2", "followers_url": "https://api.github.com/users/brigantino2/followers", "following_url": "https://api.github.com/users/brigantino2/following{/other_user}", "gists_url": "https://api.github.com/users/brigantino2/gists{/gist_id}", "starred_url": "https://api.github.com/users/brigantino2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brigantino2/subscriptions", "organizations_url": "https://api.github.com/users/brigantino2/orgs", "repos_url": "https://api.github.com/users/brigantino2/repos", "events_url": "https://api.github.com/users/brigantino2/events{/privacy}", "received_events_url": "https://api.github.com/users/brigantino2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-02T10:33:47Z", "updated_at": "2016-02-16T19:02:15Z", "closed_at": "2016-02-16T19:02:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let's say I've misspelled a js file path in our \n\n```\nPIPELINE_JS = {\n    'my_js': {\n        'source_filenames': (\n            'existing_file.js',\n            'wrong/path/to/some_important_file.js',\n        ),\n        'output_filename': 'my_js.min.js',\n    },\n}\n```\n\nthis line\n`if staticfiles_storage.exists(pathname):`\nin `glob.iglob`\nreturns nothing in case the path does not exist. This makes the path being silently ignored in `packager.Package.sources`.\nI don't know if this is a desired behavior, but going silent on configuration errors can create a lot of problems in production. My suggestion is to at least be able to control this behavior, e.g. with a setting that lets you decide if you want these errors to be notified.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/529", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/529/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/529/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/529", "id": 126615433, "node_id": "MDU6SXNzdWUxMjY2MTU0MzM=", "number": 529, "title": "Django 1.7: cannot import name setting_changed", "user": {"login": "davneet4u", "id": 8089029, "node_id": "MDQ6VXNlcjgwODkwMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8089029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davneet4u", "html_url": "https://github.com/davneet4u", "followers_url": "https://api.github.com/users/davneet4u/followers", "following_url": "https://api.github.com/users/davneet4u/following{/other_user}", "gists_url": "https://api.github.com/users/davneet4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/davneet4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davneet4u/subscriptions", "organizations_url": "https://api.github.com/users/davneet4u/orgs", "repos_url": "https://api.github.com/users/davneet4u/repos", "events_url": "https://api.github.com/users/davneet4u/events{/privacy}", "received_events_url": "https://api.github.com/users/davneet4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-14T09:41:13Z", "updated_at": "2016-02-10T22:44:42Z", "closed_at": "2016-02-10T22:44:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While running django-pipeline 1.6.4 with django 1.7, I get this error \"TemplateSyntaxError: 'pipeline' is not a valid tag library: ImportError raised loading pipeline.templatetags.pipeline: cannot import name setting_changed\" .\n\nI noticed the problem is here \n/env/local/lib/python2.7/site-packages/pipeline/conf.py in <module>()\n      6 \n      7 from django.conf import settings as _settings\n----> 8 from django.core.signals import setting_changed\n      9 from django.dispatch import receiver\n     10 from django.utils.six import string_types\n\nI saw this documentation https://docs.djangoproject.com/en/1.9/ref/signals/#setting-changed and notice that it is django.test.signals.setting_changed in Django 1.7, until it was changed in Django 1.8\n\nHow do I go about it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/525", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/525/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/525/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/525", "id": 125018422, "node_id": "MDU6SXNzdWUxMjUwMTg0MjI=", "number": 525, "title": "File permissions issue when upgrading from 1.5.4 to 1.6.4", "user": {"login": "troygrosfield", "id": 1551551, "node_id": "MDQ6VXNlcjE1NTE1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1551551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troygrosfield", "html_url": "https://github.com/troygrosfield", "followers_url": "https://api.github.com/users/troygrosfield/followers", "following_url": "https://api.github.com/users/troygrosfield/following{/other_user}", "gists_url": "https://api.github.com/users/troygrosfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/troygrosfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troygrosfield/subscriptions", "organizations_url": "https://api.github.com/users/troygrosfield/orgs", "repos_url": "https://api.github.com/users/troygrosfield/repos", "events_url": "https://api.github.com/users/troygrosfield/events{/privacy}", "received_events_url": "https://api.github.com/users/troygrosfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-05T17:57:13Z", "updated_at": "2019-01-11T02:10:27Z", "closed_at": "2019-01-11T02:10:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading to 1.6.4 and following the upgrade changes listed [here](https://django-pipeline.readthedocs.org/en/latest/installation.html#upgrading-from-1-5), I see that files that are compiled, such as less files, don't take on permissions like they once did.  \n\nI'm serving statics from a separate user (ubuntu user in the ubuntu group) and the lastest django-pipeline changes causes the front end to throw a 403 since the static's user can no longer see the files that have been complied (lacking correct group permissions).  \n\nLook at the file permissions for the compiled file before and after the upgrade:\n\n**django-pipeline 1.5.4**\n\nEverything works as expected.\n\n```\n-rw-r--r--  1 troy    ubuntu  2658 Jan  5 10:48 activities.css\n-rw-rw-r--  1 ubuntu  ubuntu  3234 Jan  5 10:16 activities.less\n```\n\n**django-pipeline 1.6.4**\n\nGet 403's on the front end because the group no longer has read permissions to **activities.css**.\n\n```\n-rw-------  1 troy    ubuntu  2658 Jan  5 10:31 activities.css\n-rw-rw-r--  1 ubuntu  ubuntu  3234 Jan  5 10:16 activities.less\n```\n\nThis is using python 3.4.3, django 1.8.7.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/524", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/524/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/524/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/524", "id": 124610726, "node_id": "MDU6SXNzdWUxMjQ2MTA3MjY=", "number": 524, "title": "Permission denied if shell=False", "user": {"login": "eugene-eshengulov", "id": 13984301, "node_id": "MDQ6VXNlcjEzOTg0MzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/13984301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugene-eshengulov", "html_url": "https://github.com/eugene-eshengulov", "followers_url": "https://api.github.com/users/eugene-eshengulov/followers", "following_url": "https://api.github.com/users/eugene-eshengulov/following{/other_user}", "gists_url": "https://api.github.com/users/eugene-eshengulov/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugene-eshengulov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugene-eshengulov/subscriptions", "organizations_url": "https://api.github.com/users/eugene-eshengulov/orgs", "repos_url": "https://api.github.com/users/eugene-eshengulov/repos", "events_url": "https://api.github.com/users/eugene-eshengulov/events{/privacy}", "received_events_url": "https://api.github.com/users/eugene-eshengulov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-02T20:47:12Z", "updated_at": "2016-01-03T00:10:56Z", "closed_at": "2016-01-03T00:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Permission denied error occurs on 'manage.py collectstatic' execution\n[-shell=True](https://github.com/jazzband/django-pipeline/commit/9be0f2934667d0fc199fac30e6f9a0e7115888ec#diff-fde7a3bb47631ce4a4007fb9d5b36927L246)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/523", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/523/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/523/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/523", "id": 124562095, "node_id": "MDU6SXNzdWUxMjQ1NjIwOTU=", "number": 523, "title": "compressError in 1.6.1, works in 1.6.0", "user": {"login": "lucacorti", "id": 1076999, "node_id": "MDQ6VXNlcjEwNzY5OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1076999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucacorti", "html_url": "https://github.com/lucacorti", "followers_url": "https://api.github.com/users/lucacorti/followers", "following_url": "https://api.github.com/users/lucacorti/following{/other_user}", "gists_url": "https://api.github.com/users/lucacorti/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucacorti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucacorti/subscriptions", "organizations_url": "https://api.github.com/users/lucacorti/orgs", "repos_url": "https://api.github.com/users/lucacorti/repos", "events_url": "https://api.github.com/users/lucacorti/events{/privacy}", "received_events_url": "https://api.github.com/users/lucacorti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-01T21:26:59Z", "updated_at": "2016-01-02T22:59:10Z", "closed_at": "2016-01-02T03:44:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on Django 1.9. With 1.6.0 everything works fine. With 1.6.1 collecstatic fails with:\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 13, in <module>\n    execute_from_command_line(sys.argv)\n  File \"venv/lib/python2.7/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \"venv/lib/python2.7/site-packages/django/core/management/__init__.py\", line 342, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"venv/lib/python2.7/site-packages/django/core/management/base.py\", line 348, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"venv/lib/python2.7/site-packages/django/core/management/base.py\", line 399, in execute\n    output = self.handle(*args, **options)\n  File \"venv/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 176, in handle\n    collected = self.collect()\n  File \"venv/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 122, in collect\n    for original_path, processed_path, processed in processor:\n  File \"venv/lib/python2.7/site-packages/pipeline/storage.py\", line 26, in post_process\n    packager.pack_stylesheets(package)\n  File \"venv/lib/python2.7/site-packages/pipeline/packager.py\", line 96, in pack_stylesheets\n    variant=package.variant, **kwargs)\n  File \"venv/lib/python2.7/site-packages/pipeline/packager.py\", line 106, in pack\n    content = compress(paths, **kwargs)\n  File \"venv/lib/python2.7/site-packages/pipeline/compressors/__init__.py\", line 76, in compress_css\n    css = getattr(compressor(verbose=self.verbose), 'compress_css')(css)\n  File \"venv/lib/python2.7/site-packages/pipeline/compressors/yuglify.py\", line 16, in compress_css\n    return self.compress_common(css, 'css', settings.YUGLIFY_CSS_ARGUMENTS)\n  File \"venv/lib/python2.7/site-packages/pipeline/compressors/yuglify.py\", line 10, in compress_common\n    return self.execute_command(command, content)\n  File \"venv/lib/python2.7/site-packages/pipeline/compressors/__init__.py\", line 244, in execute_command\n    raise CompressorError(stderr)\npipeline.exceptions.CompressorError: /bin/sh: -c: line 0: syntax error near unexpected token `--type=css'\n/bin/sh: -c: line 0: `('node_modules/yuglify/bin/yuglify',) --type=css ('--terminal',)'\n```\n\nMy pipeline settings are:\n\n```\nPIPELINE = {\n    'DISABLE_WRAPPER': True,\n    'JS_COMPRESSOR': 'pipeline.compressors.uglifyjs.UglifyJSCompressor',\n    'UGLIFYJS_BINARY': os.path.join(BASE_DIR, 'node_modules/uglify-js/bin/uglifyjs'),\n    'YUGLIFY_BINARY': os.path.join(BASE_DIR, 'node_modules/yuglify/bin/yuglify'),\n    'TEMPLATE_EXT': '.hbs',\n    'TEMPLATE_FUNC': 'Handlebars.compile',\n    'TEMPLATE_NAMESPACE': 'Handlebars.templates',\n    'STYLESHEETS': {...},\n    'JAVASCRIPT': {...}\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/522", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/522/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/522/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/522", "id": 124558231, "node_id": "MDU6SXNzdWUxMjQ1NTgyMzE=", "number": 522, "title": "Pip install not working on version 1.6.1 and Python 3", "user": {"login": "bulv1ne", "id": 1936122, "node_id": "MDQ6VXNlcjE5MzYxMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1936122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bulv1ne", "html_url": "https://github.com/bulv1ne", "followers_url": "https://api.github.com/users/bulv1ne/followers", "following_url": "https://api.github.com/users/bulv1ne/following{/other_user}", "gists_url": "https://api.github.com/users/bulv1ne/gists{/gist_id}", "starred_url": "https://api.github.com/users/bulv1ne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bulv1ne/subscriptions", "organizations_url": "https://api.github.com/users/bulv1ne/orgs", "repos_url": "https://api.github.com/users/bulv1ne/repos", "events_url": "https://api.github.com/users/bulv1ne/events{/privacy}", "received_events_url": "https://api.github.com/users/bulv1ne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-01T19:30:01Z", "updated_at": "2016-01-02T03:16:06Z", "closed_at": "2016-01-02T03:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installing `django-pipeline` on Python 3.5 on OSX, it tries to install `subprocess32` as well, which is only available for Python 2.x\n\nOutput of pip:\n\n```\n$ pip install django-pipeline\nCollecting django-pipeline\n  Using cached django_pipeline-1.6.1-py2.py3-none-any.whl\nCollecting futures>=2.1.3 (from django-pipeline)\nCollecting subprocess32>=3.2.7 (from django-pipeline)\n  Using cached subprocess32-3.2.7.tar.gz\n    Complete output from command python setup.py egg_info:\n    This backport is for Python 2.x only.\n\n    ----------------------------------------\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/515", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/515/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/515/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/515", "id": 124193958, "node_id": "MDU6SXNzdWUxMjQxOTM5NTg=", "number": 515, "title": "Version 1.6.0 should probably be 2.0.0", "user": {"login": "slafs", "id": 210173, "node_id": "MDQ6VXNlcjIxMDE3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/210173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slafs", "html_url": "https://github.com/slafs", "followers_url": "https://api.github.com/users/slafs/followers", "following_url": "https://api.github.com/users/slafs/following{/other_user}", "gists_url": "https://api.github.com/users/slafs/gists{/gist_id}", "starred_url": "https://api.github.com/users/slafs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slafs/subscriptions", "organizations_url": "https://api.github.com/users/slafs/orgs", "repos_url": "https://api.github.com/users/slafs/repos", "events_url": "https://api.github.com/users/slafs/events{/privacy}", "received_events_url": "https://api.github.com/users/slafs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-29T10:49:32Z", "updated_at": "2015-12-29T17:59:45Z", "closed_at": "2015-12-29T17:55:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just wanted to point that out, since Jazzband states about BREAKING.FEATURE.FIX release numbering (https://jazzband.co/docs/releases), django-pipeline 1.6 should probably be released as 2.0, because of the breaking change in how to configure it (i.e. `PIPELINE` dict setting). In other words, user can't just bump version number of django-pipeline (from 1.5.x to 1.6) without changing the code (configuration). Although I'm glad that this is documented (http://django-pipeline.readthedocs.org/en/latest/installation.html#upgrading-from-1-5), thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/505", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/505/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/505/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/505", "id": 110828892, "node_id": "MDU6SXNzdWUxMTA4Mjg4OTI=", "number": 505, "title": "No module named pipeline Error", "user": {"login": "kodeine", "id": 8620059, "node_id": "MDQ6VXNlcjg2MjAwNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kodeine", "html_url": "https://github.com/kodeine", "followers_url": "https://api.github.com/users/kodeine/followers", "following_url": "https://api.github.com/users/kodeine/following{/other_user}", "gists_url": "https://api.github.com/users/kodeine/gists{/gist_id}", "starred_url": "https://api.github.com/users/kodeine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kodeine/subscriptions", "organizations_url": "https://api.github.com/users/kodeine/orgs", "repos_url": "https://api.github.com/users/kodeine/repos", "events_url": "https://api.github.com/users/kodeine/events{/privacy}", "received_events_url": "https://api.github.com/users/kodeine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-11T02:19:15Z", "updated_at": "2015-12-30T20:53:08Z", "closed_at": "2015-12-30T20:53:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nI am trying to run pipeline on [cloud9 IDE](http://c9.io)\n\ninstalled pip already.\n\n```\n@app:~/workspace $ sudo -H pip install djangorestframework django-pipeline django-pipeline-browserify                                                        \nRequirement already satisfied (use --upgrade to upgrade): djangorestframework in /usr/local/lib/python3.4/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): django-pipeline in /usr/local/lib/python3.4/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): django-pipeline-browserify in /usr/local/lib/python3.4/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): futures>=2.1.3 in /usr/local/lib/python3.4/dist-packages (from django-pipeline)\n```\n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 354, in execute\n    django.setup()\n  File \"/usr/local/lib/python2.7/dist-packages/django/__init__.py\", line 21, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/config.py\", line 87, in create\n    module = import_module(entry)\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\nImportError: No module named pipeline\n```\n\n**Settings.py**\n\n``` python\n\"\"\"\nDjango settings for app project.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/1.7/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/1.7/ref/settings/\n\"\"\"\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nimport os\nBASE_DIR = os.path.dirname(os.path.dirname(__file__))\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '@jm#$4f#9%9p&vm#^z6)r73-40a8mmlel7acbd(3v#s6lqaflb'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nTEMPLATE_DEBUG = True\n\nALLOWED_HOSTS = []\nSECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')\n\n\n# Application definition\n\nINSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'pipeline',\n    'rest_framework',\n    'rest_framework_swagger',\n    #'south',\n    'app',\n)\n\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n)\n\nROOT_URLCONF = 'app.urls'\n\nWSGI_APPLICATION = 'app.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/1.7/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n# Internationalization\n# https://docs.djangoproject.com/en/1.7/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/1.7/howto/static-files/\n\nSTATIC_URL = '/static/'\n\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ]\n}\n\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineStorage'\n\nPIPELINE_CSS_COMPRESSOR = 'pipeline.compressors.cssmin.CSSMinCompressor'\nPIPELINE_CSSMIN_BINARY = 'cssmin'\nPIPELINE_JS_COMPRESSOR = 'pipeline.compressors.slimit.SlimItCompressor'\n\nPIPELINE_CSS = {\n    'my_app': {\n        'source_filenames': (\n            'lib/bootstrap/css/bootstrap.css',\n            'css/*',\n        ),\n        'output_filename': 'min.css',\n        'variant': 'datauri',\n    },\n}\nPIPELINE_JS = {\n    'my_app': {\n        'source_filenames': (\n            'lib/jquery-1.9.0.js',\n            'lib/bootstrap/js/bootstrap.js',\n            'js/app.js',\n        ),\n        'output_filename': 'min.js',\n    }\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/499", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/499/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/499/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/499", "id": 106710784, "node_id": "MDU6SXNzdWUxMDY3MTA3ODQ=", "number": 499, "title": "SASSCompiler fails due to incomplete quotes in cwd", "user": {"login": "SverkerSbrg", "id": 7115508, "node_id": "MDQ6VXNlcjcxMTU1MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7115508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SverkerSbrg", "html_url": "https://github.com/SverkerSbrg", "followers_url": "https://api.github.com/users/SverkerSbrg/followers", "following_url": "https://api.github.com/users/SverkerSbrg/following{/other_user}", "gists_url": "https://api.github.com/users/SverkerSbrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/SverkerSbrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SverkerSbrg/subscriptions", "organizations_url": "https://api.github.com/users/SverkerSbrg/orgs", "repos_url": "https://api.github.com/users/SverkerSbrg/repos", "events_url": "https://api.github.com/users/SverkerSbrg/events{/privacy}", "received_events_url": "https://api.github.com/users/SverkerSbrg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T06:48:01Z", "updated_at": "2015-12-30T20:35:18Z", "closed_at": "2015-12-30T20:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I've been having some trouble with pipeline and after some debugging I found the cause in the SASSCompiler. See code below.\n\n```\nclass SASSCompiler(SubProcessCompiler):\n    output_extension = 'css'\n\n    def match_file(self, filename):\n        return filename.endswith(('.scss', '.sass'))\n\n    def compile_file(self, infile, outfile, outdated=False, force=False):\n        command = \"%s %s %s %s\" % (\n            settings.PIPELINE_SASS_BINARY,\n            settings.PIPELINE_SASS_ARGUMENTS,\n            infile,\n            outfile\n        )\n        print(infile)\n        print(dirname(infile))\n        return self.execute_command(command, cwd=dirname(infile))\n\n#--------------output-------------------\n'C:\\...\\staticfiles\\angular\\test.scss'\n'C:\\...\\staticfiles\\angular\n```\n\nMy print statement revealse that the dirname function accidentally (?) leaves the first of the quotes in the string which causes the command to fail. \n\nadding `dirname(infiel).replace(\"'\", \"\")` solves the problem.\n\nAny ideas what is happening and what the root cause is?\n\nI'm developing on windows 8.1 using python 2.7.9\n\nThe following sample reproduces the bug on my system\n\n```\nfrom os.path import dirname\n\ntest = \"'C:/Users/test.scss'\"\n\nprint(test)\nprint(dirname(test))\n\n#C:\\Users\\Sverker\\Desktop>python bug.py\n#    'C:/Users/test.scss'\n#    'C:/Users    \n```\n\nThis should effect all other compilers using the cwd command as well (sass, less & stylus)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/497", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/497/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/497/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/497", "id": 106219224, "node_id": "MDU6SXNzdWUxMDYyMTkyMjQ=", "number": 497, "title": "unknown pipeline package names in template tags fail silently", "user": {"login": "chadmiller", "id": 287758, "node_id": "MDQ6VXNlcjI4Nzc1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadmiller", "html_url": "https://github.com/chadmiller", "followers_url": "https://api.github.com/users/chadmiller/followers", "following_url": "https://api.github.com/users/chadmiller/following{/other_user}", "gists_url": "https://api.github.com/users/chadmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadmiller/subscriptions", "organizations_url": "https://api.github.com/users/chadmiller/orgs", "repos_url": "https://api.github.com/users/chadmiller/repos", "events_url": "https://api.github.com/users/chadmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/chadmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-13T14:11:29Z", "updated_at": "2015-10-12T23:35:14Z", "closed_at": "2015-10-12T23:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "In pipeline/templatetags/pipeline.py , there's a decision to avoid emitting anything to the browser when an undefined package is requested, but it also doesn't warn the host or developer, which is bad.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/496", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/496/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/496/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/496", "id": 106218777, "node_id": "MDU6SXNzdWUxMDYyMTg3Nzc=", "number": 496, "title": "wsgiref insists headers be strings, fails", "user": {"login": "chadmiller", "id": 287758, "node_id": "MDQ6VXNlcjI4Nzc1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadmiller", "html_url": "https://github.com/chadmiller", "followers_url": "https://api.github.com/users/chadmiller/followers", "following_url": "https://api.github.com/users/chadmiller/following{/other_user}", "gists_url": "https://api.github.com/users/chadmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadmiller/subscriptions", "organizations_url": "https://api.github.com/users/chadmiller/orgs", "repos_url": "https://api.github.com/users/chadmiller/repos", "events_url": "https://api.github.com/users/chadmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/chadmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-13T14:01:05Z", "updated_at": "2015-12-30T20:49:12Z", "closed_at": "2015-12-30T20:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using dj_static as a wrapper to serve static files, Python3.4\n\n```\n[13/Sep/2015 13:49:46] \"GET /s/css/site.a4b3a37942c0.css HTTP/1.1\" 200 8629\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/wsgiref/handlers.py\", line 137, in run\n    self.result = application(self.environ, self.start_response)\n  File \"env/lib/python3.4/site-packages/dj_static.py\", line 88, in __call__\n    return self.cling(environ, start_response)\n  File \"env/lib/python3.4/site-packages/static/apps.py\", line 125, in __call__\n    start_response(\"200 OK\", headers)\n  File \"/usr/lib/python3.4/wsgiref/handlers.py\", line 226, in start_response\n    self.headers = self.headers_class(headers)\n  File \"/usr/lib/python3.4/wsgiref/headers.py\", line 39, in __init__\n    self._convert_string_type(v)\n  File \"/usr/lib/python3.4/wsgiref/headers.py\", line 46, in _convert_string_type\n    \" of type str (got {0})\".format(repr(value)))\nAssertionError: Header names/values must be of type str (got b'text/javascript')\n```\n\nIn the config, 'PIPELINE_MIMETYPES' contains tuples with byte arrays. If those are instead unicode strings, wsgiref is happy. Removing \"b\" before ' below seems to work. I don't know if it's _correct_.\n\n``` python\n{\n'PIPELINE_MIMETYPES': (\n    (b'text/coffeescript', '.coffee'),\n    (b'text/less', '.less'),\n    (b'text/javascript', '.js'),\n    (b'text/x-sass', '.sass'),\n    (b'text/x-scss', '.scss')\n),\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/494", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/494/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/494/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/494", "id": 106197082, "node_id": "MDU6SXNzdWUxMDYxOTcwODI=", "number": 494, "title": "Missing compiler commands create empty files and never complain after the first time", "user": {"login": "chadmiller", "id": 287758, "node_id": "MDQ6VXNlcjI4Nzc1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadmiller", "html_url": "https://github.com/chadmiller", "followers_url": "https://api.github.com/users/chadmiller/followers", "following_url": "https://api.github.com/users/chadmiller/following{/other_user}", "gists_url": "https://api.github.com/users/chadmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadmiller/subscriptions", "organizations_url": "https://api.github.com/users/chadmiller/orgs", "repos_url": "https://api.github.com/users/chadmiller/repos", "events_url": "https://api.github.com/users/chadmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/chadmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-13T03:23:34Z", "updated_at": "2015-12-30T03:44:05Z", "closed_at": "2015-12-30T03:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I configured my settings wrong. The pipeline found my foo.coffee file, and tried to run the compiler, as some shell command that redirected the stdout to the name of the file I expected and gave that request an error message, and happily served the empty file forever after that, as if it were right.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/493", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/493/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/493/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/493", "id": 106113886, "node_id": "MDU6SXNzdWUxMDYxMTM4ODY=", "number": 493, "title": "google pagespeed insights bad score", "user": {"login": "mirzadelic", "id": 1878794, "node_id": "MDQ6VXNlcjE4Nzg3OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1878794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mirzadelic", "html_url": "https://github.com/mirzadelic", "followers_url": "https://api.github.com/users/mirzadelic/followers", "following_url": "https://api.github.com/users/mirzadelic/following{/other_user}", "gists_url": "https://api.github.com/users/mirzadelic/gists{/gist_id}", "starred_url": "https://api.github.com/users/mirzadelic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mirzadelic/subscriptions", "organizations_url": "https://api.github.com/users/mirzadelic/orgs", "repos_url": "https://api.github.com/users/mirzadelic/repos", "events_url": "https://api.github.com/users/mirzadelic/events{/privacy}", "received_events_url": "https://api.github.com/users/mirzadelic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-11T23:51:05Z", "updated_at": "2015-12-30T20:52:31Z", "closed_at": "2015-12-30T20:52:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to fix following:\n- Enable compression (can save 74% reduction)\n- Eliminate render-blocking JavaScript and CSS in above-the-fold content\n- Minify JavaScript (can save 3% reduction)\n- Minify CSS (1% reduction)\n\ni use pipeline, so why google is showing me that.\nHow can make optimisation better?\n\nmy config:\n\n```\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'\nPIPELINE_CSS_COMPRESSOR = 'pipeline.compressors.yuglify.YuglifyCompressor'\nPIPELINE_JS_COMPRESSOR = 'pipeline.compressors.yuglify.YuglifyCompressor'\n```\n\n[Check PageSpeed of my website](https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fwww.oglasise.com%2F)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/492", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/492/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/492/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/492", "id": 105107970, "node_id": "MDU6SXNzdWUxMDUxMDc5NzA=", "number": 492, "title": "Jinja2 templates?", "user": {"login": "ikresoft", "id": 83265, "node_id": "MDQ6VXNlcjgzMjY1", "avatar_url": "https://avatars1.githubusercontent.com/u/83265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikresoft", "html_url": "https://github.com/ikresoft", "followers_url": "https://api.github.com/users/ikresoft/followers", "following_url": "https://api.github.com/users/ikresoft/following{/other_user}", "gists_url": "https://api.github.com/users/ikresoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikresoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikresoft/subscriptions", "organizations_url": "https://api.github.com/users/ikresoft/orgs", "repos_url": "https://api.github.com/users/ikresoft/repos", "events_url": "https://api.github.com/users/ikresoft/events{/privacy}", "received_events_url": "https://api.github.com/users/ikresoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-06T18:18:51Z", "updated_at": "2015-09-06T19:24:10Z", "closed_at": "2015-09-06T19:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Jinja2 templates is not in pip install, I think manifest should include jinja2 dir.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/489", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/489/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/489/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/489", "id": 101204852, "node_id": "MDU6SXNzdWUxMDEyMDQ4NTI=", "number": 489, "title": "error with yuglify collectstatic ?", "user": {"login": "TurBoss", "id": 184088, "node_id": "MDQ6VXNlcjE4NDA4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/184088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurBoss", "html_url": "https://github.com/TurBoss", "followers_url": "https://api.github.com/users/TurBoss/followers", "following_url": "https://api.github.com/users/TurBoss/following{/other_user}", "gists_url": "https://api.github.com/users/TurBoss/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurBoss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurBoss/subscriptions", "organizations_url": "https://api.github.com/users/TurBoss/orgs", "repos_url": "https://api.github.com/users/TurBoss/repos", "events_url": "https://api.github.com/users/TurBoss/events{/privacy}", "received_events_url": "https://api.github.com/users/TurBoss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-15T19:51:53Z", "updated_at": "2015-08-16T02:38:52Z", "closed_at": "2015-08-16T02:38:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having this error when running collectstatic\nany ideas?\nif this issue is not related to django-pipeline plz close thx\n\njauria@jauria-studio:~/Proyectos/homeAutomation$ ./manage.py collectstatic \n\nYou have requested to collect static files at the destination\nlocation as specified in your settings:\n\n```\n/home/jauria/Proyectos/homeAutomation/static_files\n```\n\nThis will overwrite existing files!\nAre you sure you want to do this?\n\nType 'yes' to continue, or 'no' to cancel: yes\nPost-processed 'controlPanel/css/main.css' as 'controlPanel/css/main.css'\nPost-processed 'controlPanel/js/main.js' as 'controlPanel/js/main.js'\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/**init**.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/**init**.py\", line 330, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/base.py\", line 393, in run_from_argv\n    self.execute(_args, *_cmd_options)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/base.py\", line 444, in execute\n    output = self.handle(_args, *_options)\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 168, in handle\n    collected = self.collect()\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 114, in collect\n    for original_path, processed_path, processed in processor:\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/storage.py\", line 33, in post_process\n    packager.pack_javascripts(package)\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/packager.py\", line 112, in pack_javascripts\n    return self.pack(package, self.compressor.compress_js, js_compressed, templates=package.templates, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/packager.py\", line 106, in pack\n    content = compress(paths, *_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/compressors/**init**.py\", line 67, in compress_js\n    js = getattr(compressor(verbose=self.verbose), 'compress_js')(js)\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/compressors/yuglify.py\", line 13, in compress_js\n    return self.compress_common(js, 'js', settings.PIPELINE_YUGLIFY_JS_ARGUMENTS)\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/compressors/yuglify.py\", line 10, in compress_common\n    return self.execute_command(command, content)\n  File \"/usr/local/lib/python2.7/dist-packages/pipeline/compressors/**init**.py\", line 244, in execute_command\n    raise CompressorError(stderr)\npipeline.exceptions.CompressorError: \n/usr/local/lib/node_modules/yuglify/bin/yuglify:77\n                throw(err);\n                      ^\nError\n    at new JS_Parse_Error (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:263:18)\n    at js_error (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:271:11)\n    at croak (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:733:9)\n    at token_error (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:740:9)\n    at unexpected (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:746:9)\n    at /usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1112:13\n    at maybe_unary (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1209:19)\n    at expr_ops (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1236:24)\n    at maybe_conditional (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1240:20)\n    at maybe_assign (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1264:20)\n    at /usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1278:20\n    at vardefs (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1065:32)\n    at var_ (/usr/local/lib/node_modules/yuglify/node_modules/uglify-js/lib/parse-js.js:1077:26)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/488", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/488/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/488/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/488", "id": 99397944, "node_id": "MDU6SXNzdWU5OTM5Nzk0NA==", "number": 488, "title": "Serving gzipped static files broken in 1.5.3", "user": {"login": "fxthomas", "id": 613594, "node_id": "MDQ6VXNlcjYxMzU5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/613594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxthomas", "html_url": "https://github.com/fxthomas", "followers_url": "https://api.github.com/users/fxthomas/followers", "following_url": "https://api.github.com/users/fxthomas/following{/other_user}", "gists_url": "https://api.github.com/users/fxthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxthomas/subscriptions", "organizations_url": "https://api.github.com/users/fxthomas/orgs", "repos_url": "https://api.github.com/users/fxthomas/repos", "events_url": "https://api.github.com/users/fxthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/fxthomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-06T09:40:12Z", "updated_at": "2015-08-22T22:43:13Z", "closed_at": "2015-08-22T22:42:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nWhen upgrading from 1.5.1 to 1.5.3, precompiled CSS and JS files suddenly gained a `.gz` extension in the output of `{% static %}` template tags and CSS `@import` rules. The relevant commit is most likely c360a2add.\n\nAs a result, at least Firefox is unable to load CSS and JS files, and shows messages such as :\n\n```\nThe stylesheet http://xxxx/static/admin/css/yyyyy.4898e2e9983d.css.gz was not loaded because its MIME type, \"application/gzip\", is not \"text/css\".\n```\n\nuWSGI can automatically (with `--static-gzip-all`) select either the gzipped or the non-gzipped version of a static file, depending on the request's `Accept-Encoding` header, so there is no need for the `.gz` extension, at least in my case. I believe Nginx is able to do this as well. Is that the correct way of serving gzipped files or is there something I'm not aware of?\n\nThanks for your help!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/486", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/486/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/486/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/486", "id": 98380268, "node_id": "MDU6SXNzdWU5ODM4MDI2OA==", "number": 486, "title": "Collectstatic doesn't find compiled css with s3boto storage", "user": {"login": "jplehmann", "id": 460964, "node_id": "MDQ6VXNlcjQ2MDk2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/460964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplehmann", "html_url": "https://github.com/jplehmann", "followers_url": "https://api.github.com/users/jplehmann/followers", "following_url": "https://api.github.com/users/jplehmann/following{/other_user}", "gists_url": "https://api.github.com/users/jplehmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplehmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplehmann/subscriptions", "organizations_url": "https://api.github.com/users/jplehmann/orgs", "repos_url": "https://api.github.com/users/jplehmann/repos", "events_url": "https://api.github.com/users/jplehmann/events{/privacy}", "received_events_url": "https://api.github.com/users/jplehmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-31T12:20:51Z", "updated_at": "2015-08-01T16:00:14Z", "closed_at": "2015-08-01T16:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Testing locally, with `PIPELINE_ENABLED = True`, with s3 boto storage, when I run `collectstatic` it fails to find the compiled css. However, after the failed command, I can see that the css _has_ been generated and is in my source tree alongside the `.less` files (`mysite/static/css/xxx.css`).   But it appears that `concatenate_and_rewrite` is looking for the compiled s3 remotely on s3.\n\n(When I run the command again it finds that one, then fails on the next one in the same fashion. But this is only because the locally compiled css is copied to s3, so this beside the point).\n\nWould also love to see those files being generated in another dir, as discussed in issue [202](https://github.com/cyberdelia/django-pipeline/issues/202#issuecomment-126347710).\n\nUsing django pipeline 1.5.2 with s3boto storage and LESS compiler.\n\n```\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'pipeline.finders.PipelineFinder',\n\nSTATICFILES_LOCATION = 'static'\n\nclass S3PipelineManifestStorage(PipelineMixin, ManifestFilesMixin, S3BotoStorage):\n    location = settings.STATICFILES_LOCATION\n```\n\nThe error:\n\n```\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/core/management/base.py\", line 390, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n    output = self.handle(*args, **options)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 168, in handle\n    collected = self.collect()\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 114, in collect\n    for original_path, processed_path, processed in processor:\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/storage.py\", line 26, in post_process\n    packager.pack_stylesheets(package)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/packager.py\", line 96, in pack_stylesheets\n    variant=package.variant, **kwargs)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/packager.py\", line 106, in pack\n    content = compress(paths, **kwargs)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/compressors/__init__.py\", line 73, in compress_css\n    css = self.concatenate_and_rewrite(paths, output_filename, variant)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/compressors/__init__.py\", line 137, in concatenate_and_rewrite\n    content = self.read_text(path)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/compressors/__init__.py\", line 216, in read_text\n    content = self.read_bytes(path)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/pipeline/compressors/__init__.py\", line 210, in read_bytes\n    file = staticfiles_storage.open(path)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/django/core/files/storage.py\", line 37, in open\n    return self._open(name, mode)\n  File \"/Users/john/.venv/mm/lib/python2.7/site-packages/storages/backends/s3boto.py\", line 366, in _open\n    raise IOError('File does not exist: %s' % name)\nIOError: File does not exist: static/css/mystyles.css\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/483", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/483/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/483/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/483", "id": 97729763, "node_id": "MDU6SXNzdWU5NzcyOTc2Mw==", "number": 483, "title": "No compression happening", "user": {"login": "jplehmann", "id": 460964, "node_id": "MDQ6VXNlcjQ2MDk2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/460964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplehmann", "html_url": "https://github.com/jplehmann", "followers_url": "https://api.github.com/users/jplehmann/followers", "following_url": "https://api.github.com/users/jplehmann/following{/other_user}", "gists_url": "https://api.github.com/users/jplehmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplehmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplehmann/subscriptions", "organizations_url": "https://api.github.com/users/jplehmann/orgs", "repos_url": "https://api.github.com/users/jplehmann/repos", "events_url": "https://api.github.com/users/jplehmann/events{/privacy}", "received_events_url": "https://api.github.com/users/jplehmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-07-28T15:08:33Z", "updated_at": "2015-07-29T13:17:32Z", "closed_at": "2015-07-29T02:07:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using django-pipeline with s3. I'm successfully using collectstatic to combined my Javascript files and store them in my s3 bucket, but they are not getting compressed for some reason (verified by looking at the file, its size, and its content-encoding). Otherwise things are working correctly with the combined scripts.js that is produced.\n\nHere are the changes I made to use django-pipeline:\n1. Added pipeline to installed apps.\n2. Added 'pipeline.finders.PipelineFinder' to STATICFILES_FINDERS.\n3. Set STATICFILES_STORAGE = 'mysite.custom_storages.S3PipelineManifestStorage' where this class is as defined in the documentation, as seen below.\n4. Set PIPELINE_JS as seen below, which works but just isn't compressed.\n5. PIPELINE_ENABLED = True since DEBUG = True and I'm running locally.\n6. PIPELINE_JS_COMPRESSOR = 'pipeline.compressors.yuglify.YuglifyCompressor' even though this should be default.\n7. Installed the Yuglify Compressor with npm -g install yuglify.\n8. PIPELINE_YUGLIFY_BINARY = '/usr/local/bin/yuglify' even though the default with env should work.\n9. Using the {% load pipeline %} and {% javascript 'scripts' %} which work.\n\nMore detail:\n\n```\nPIPELINE_JS = {\n    'scripts': {\n        'source_filenames': (\n            'lib/jquery-1.11.1.min.js',\n            ...            \n        ),\n        'output_filename': 'lib/scripts.js',\n    }\n}\n\nclass S3PipelineManifestStorage(PipelineMixin, ManifestFilesMixin, S3BotoStorage):\n    location = settings.STATICFILES_LOCATION\n```\n\nAs mentioned, collectstatic does produce scripts.js just not compressed. The output of that command includes:\n\n```\nPost-processed 'lib/scripts.js' as 'lib/scripts.js'\n```\n\nI'm using Django 1.8, django-pipeline 1.5.2, and django-storages 1.1.8.\n\nProbably this is something dumb I'm doing, but possibly a bug or missing documentation.   IF I have compression enabled, I'd expect an error at least.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/478", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/478/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/478/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/478", "id": 96592010, "node_id": "MDU6SXNzdWU5NjU5MjAxMA==", "number": 478, "title": "Django 1.9 Exception: InvalidTemplateLibrary", "user": {"login": "jaddison", "id": 101148, "node_id": "MDQ6VXNlcjEwMTE0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/101148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaddison", "html_url": "https://github.com/jaddison", "followers_url": "https://api.github.com/users/jaddison/followers", "following_url": "https://api.github.com/users/jaddison/following{/other_user}", "gists_url": "https://api.github.com/users/jaddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaddison/subscriptions", "organizations_url": "https://api.github.com/users/jaddison/orgs", "repos_url": "https://api.github.com/users/jaddison/repos", "events_url": "https://api.github.com/users/jaddison/events{/privacy}", "received_events_url": "https://api.github.com/users/jaddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-07-22T15:15:16Z", "updated_at": "2015-12-20T01:05:54Z", "closed_at": "2015-12-20T01:05:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Obviously, this is prep-work to make django-pipeline compatible with Django 1.9.\n\nDue to the change mentioned here, django-pipeline will 'break' Django: https://docs.djangoproject.com/en/dev/releases/1.9/#template-tag-modules-are-imported-when-templates-are-configured.\n\nTraceback:\n\n```\nEnvironment:\n\n\nRequest Method: GET\nRequest URL: http://localhost:8000/\n\nDjango Version: 1.9.dev20150721153804\nPython Version: 3.4.3\nInstalled Applications:\n['django.contrib.admin',\n 'django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'pipeline']\nInstalled Middleware:\n['django.middleware.security.SecurityMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.common.CommonMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\n\n\nTraceback:\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/utils.py\" in __getitem__\n  86.             return self._engines[alias]\n\nDuring handling of the above exception ('django'), another exception occurred:\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/backends/django.py\" in get_package_libraries\n  144.             module = import_module(entry[1])\n\nFile \"/Users/jaddison/.virtualenvs/django19test/lib/python3.4/importlib/__init__.py\" in import_module\n  109.     return _bootstrap._gcd_import(name[level:], package, level)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/lib/python3.4/site-packages/pipeline/templatetags/ext.py\" in <module>\n  3. from jinja2 import nodes, TemplateSyntaxError\n\nDuring handling of the above exception (No module named 'jinja2'), another exception occurred:\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/core/handlers/base.py\" in get_response\n  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\n\nFile \"/Users/jaddison/projects/django19test/testviews/views.py\" in testview\n  5.     return render(request, template)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/shortcuts.py\" in render\n  67.             template_name, context, request=request, using=using)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/loader.py\" in render_to_string\n  91.             template = get_template(template_name, using=using)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/loader.py\" in get_template\n  21.     engines = _engine_list(using)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/loader.py\" in _engine_list\n  139.     return engines.all() if using is None else [engines[using]]\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/utils.py\" in all\n  110.         return [self[alias] for alias in self]\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/utils.py\" in <listcomp>\n  110.         return [self[alias] for alias in self]\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/utils.py\" in __getitem__\n  101.             engine = engine_cls(params)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/backends/django.py\" in __init__\n  31.         options['libraries'] = self.get_templatetag_libraries(libraries)\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/backends/django.py\" in get_templatetag_libraries\n  49.         libraries = get_installed_libraries()\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/backends/django.py\" in get_installed_libraries\n  131.             for name in get_package_libraries(pkg):\n\nFile \"/Users/jaddison/.virtualenvs/django19test/src/django/django/template/backends/django.py\" in get_package_libraries\n  148.                 \"trying to load '%s': %s\" % (entry[1], e)\n\nException Type: InvalidTemplateLibrary at /\nException Value: Invalid template library specified. ImportError raised when trying to load 'pipeline.templatetags.ext': No module named 'jinja2'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/476", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/476/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/476/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/476", "id": 92866170, "node_id": "MDU6SXNzdWU5Mjg2NjE3MA==", "number": 476, "title": "Syntax error in dependency", "user": {"login": "bh", "id": 1332044, "node_id": "MDQ6VXNlcjEzMzIwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1332044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bh", "html_url": "https://github.com/bh", "followers_url": "https://api.github.com/users/bh/followers", "following_url": "https://api.github.com/users/bh/following{/other_user}", "gists_url": "https://api.github.com/users/bh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bh/subscriptions", "organizations_url": "https://api.github.com/users/bh/orgs", "repos_url": "https://api.github.com/users/bh/repos", "events_url": "https://api.github.com/users/bh/events{/privacy}", "received_events_url": "https://api.github.com/users/bh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-03T12:34:22Z", "updated_at": "2015-07-26T19:23:00Z", "closed_at": "2015-07-26T19:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When requirement \"future\" in installed (install_requires) in version 3.0.x with an Python 3.4.1 installation, I get a SyntaxError:\n\n```\n.tox/py34/lib/python3.4/site-packages/_pytest/python.py:1858: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.tox/py34/lib/python3.4/site-packages/_pytest/python.py:1784: in call_fixture_func\n    res = fixturefunc(**kwargs)\nconftest.py:42: in live_server\n    call_command('collectstatic', verbosity=0, interactive=False)\n.tox/py34/lib/python3.4/site-packages/django/core/management/__init__.py:115: in call_command\n    return klass.execute(*args, **defaults)\n.tox/py34/lib/python3.4/site-packages/django/core/management/base.py:338: in execute\n    output = self.handle(*args, **options)\n.tox/py34/lib/python3.4/site-packages/django/core/management/base.py:533: in handle\n    return self.handle_noargs(**options)\n.tox/py34/lib/python3.4/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py:168: in handle_noargs\n    collected = self.collect()\n.tox/py34/lib/python3.4/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py:114: in collect\n    for original_path, processed_path, processed in processor:\n.tox/py34/lib/python3.4/site-packages/pipeline/storage.py:26: in post_process\n    packager.pack_stylesheets(package)\n.tox/py34/lib/python3.4/site-packages/pipeline/packager.py:96: in pack_stylesheets\n    variant=package.variant, **kwargs)\n.tox/py34/lib/python3.4/site-packages/pipeline/packager.py:105: in pack\n    paths = self.compile(package.paths, force=True)\n.tox/py34/lib/python3.4/site-packages/pipeline/packager.py:99: in compile\n    return self.compiler.compile(paths, force=force)\n.tox/py34/lib/python3.4/site-packages/pipeline/compilers/__init__.py:51: in compile\n    from concurrent import futures\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    \"\"\"Execute computations asynchronously using threads or processes.\"\"\"\n\n    __author__ = 'Brian Quinlan (brian@sweetapp.com)'\n\n>   from concurrent.futures._base import (FIRST_COMPLETED,\n                                          FIRST_EXCEPTION,\n                                          ALL_COMPLETED,\n                                          CancelledError,\n                                          TimeoutError,\n                                          Future,\n                                          Executor,\n                                          wait,\n                                          as_completed)\nE     File \"/srv/jenkins/jobs/mx-master/workspace/src/.tox/py34/lib/python3.4/site-packages/concurrent/futures/_base.py\", line 355\nE       raise type(self._exception), self._exception, self._traceback\nE                                  ^\nE   SyntaxError: invalid syntax\n```\n\nPython 3.4.3 works fine.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/471", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/471/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/471/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/471", "id": 91836032, "node_id": "MDU6SXNzdWU5MTgzNjAzMg==", "number": 471, "title": "Getting django-require and django-pipeline work together", "user": {"login": "karolyi", "id": 987055, "node_id": "MDQ6VXNlcjk4NzA1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/987055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karolyi", "html_url": "https://github.com/karolyi", "followers_url": "https://api.github.com/users/karolyi/followers", "following_url": "https://api.github.com/users/karolyi/following{/other_user}", "gists_url": "https://api.github.com/users/karolyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/karolyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karolyi/subscriptions", "organizations_url": "https://api.github.com/users/karolyi/orgs", "repos_url": "https://api.github.com/users/karolyi/repos", "events_url": "https://api.github.com/users/karolyi/events{/privacy}", "received_events_url": "https://api.github.com/users/karolyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-29T15:23:10Z", "updated_at": "2015-06-30T09:29:38Z", "closed_at": "2015-06-30T09:29:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey everyone,\n\nI had a problem with django-require and django-pipeline, and created the solution [here](https://github.com/etianen/django-require/issues/52).\n\nMight be you want to add this to your documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/468", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/468/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/468/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/468", "id": 89773732, "node_id": "MDU6SXNzdWU4OTc3MzczMg==", "number": 468, "title": "SyntaxError at / on production server - Apache2", "user": {"login": "n2o", "id": 1507474, "node_id": "MDQ6VXNlcjE1MDc0NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1507474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n2o", "html_url": "https://github.com/n2o", "followers_url": "https://api.github.com/users/n2o/followers", "following_url": "https://api.github.com/users/n2o/following{/other_user}", "gists_url": "https://api.github.com/users/n2o/gists{/gist_id}", "starred_url": "https://api.github.com/users/n2o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n2o/subscriptions", "organizations_url": "https://api.github.com/users/n2o/orgs", "repos_url": "https://api.github.com/users/n2o/repos", "events_url": "https://api.github.com/users/n2o/events{/privacy}", "received_events_url": "https://api.github.com/users/n2o/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-20T14:06:04Z", "updated_at": "2015-06-20T14:16:35Z", "closed_at": "2015-06-20T14:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI have a Django application running on my local machine and wanted to deploy it on my production Apache2 server. I am using _mod_wsgi.py_ for deployment and it did work properly.\n\nBut since I upgraded to Python3.4 on my production server, I have a problem with django-pipeline:\n\n```\nSyntaxError at /\ninvalid syntax (_base.py, line 355)\n\nRequest Method:     GET\nDjango Version:     1.8.2\nException Type:     SyntaxError\nException Location:     /home/<myuser>/.virtualenvs/<myproject>/lib/python3.4/site-packages/concurrent/futures/__init__.py in <module>, line 8\nPython Executable:  /usr/bin/python3\nPython Version:     3.4.0\n```\n\n```\nError during template rendering\n\nIn template /var/www/dpb/templates/base.html, error at line 13\ninvalid syntax\n12      {% load pipeline %}\n13  \n\n-->      {% stylesheet 'vendor' %}             # here's the error\n```\n\nThe error occurs, because it does not understand what to do with the `stylesheet` tag. I properly loaded pipeline using `{% load pipeline %}` _before_ the `stylesheet` tag appears. And, to be clear, it is running fine with the django built-in dev-server and it was properly running before I upgraded to Python3.4 on the production server.\n\nThe requirements from pip are all installed, the virtualenv is correctly set and it appears to be fine. But I don't get it, why this message appears on my Apache2 server.\n\nThe error appears since I am using wsgi-py3 as Apache-module and no longer the normal wsgi module, which is used for python2.\n\nDo you have any suggestions what may be wrong? Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/467", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/467/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/467/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/467", "id": 89396139, "node_id": "MDU6SXNzdWU4OTM5NjEzOQ==", "number": 467, "title": "ImportError: No module named template while writing a DjangoTemplateJSCompiler ", "user": {"login": "groovecoder", "id": 71928, "node_id": "MDQ6VXNlcjcxOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/71928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groovecoder", "html_url": "https://github.com/groovecoder", "followers_url": "https://api.github.com/users/groovecoder/followers", "following_url": "https://api.github.com/users/groovecoder/following{/other_user}", "gists_url": "https://api.github.com/users/groovecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/groovecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groovecoder/subscriptions", "organizations_url": "https://api.github.com/users/groovecoder/orgs", "repos_url": "https://api.github.com/users/groovecoder/repos", "events_url": "https://api.github.com/users/groovecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/groovecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-18T20:57:20Z", "updated_at": "2015-12-30T20:51:21Z", "closed_at": "2015-12-30T20:51:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm stuck trying to write a custom `DjangoTemplateJSCompiler` for `.djs` files so I can generate static `.js` files from Django templates.\nWhen I try this:\n\n```\n  from django.template import render_to_string\n\n  from pipeline.compilers import CompilerBase\n\n\n  class DJSCompiler(CompilerBase):\n      \"\"\" Simple compiler to render Django templates into JS files\"\"\"\n      output_extension = 'js'\n\n      def match_file(self, filename):\n          return filename.endswith('.djs')\n\n     def compile_file(self, infile, outfile, outdated=False, force=False):\n          if not outdated and not force:\n              return\n         return render_to_string(infile, {}) \n```\n\nI get:\n\n```\n(webalyzer)lcrouch-14912:webalyzer lcrouch$ ./manage.py collectstatic\n/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/sorl/thumbnail/helpers.py:6: RemovedInDjango19Warning: django.utils.importlib will be removed in Django 1.9.\n  from django.utils.importlib import import_module\n\n\nYou have requested to collect static files at the destination\nlocation as specified in your settings:\n\n    /Users/lcrouch/code/webalyzer/static\n\nThis will overwrite existing files!\nAre you sure you want to do this?\n\nType 'yes' to continue, or 'no' to cancel: yes\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/core/management/__init__.py\", line 330, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/core/management/base.py\", line 390, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/core/management/base.py\", line 441, in execute\n    output = self.handle(*args, **options)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 168, in handle\n    collected = self.collect()\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.py\", line 114, in collect\n    for original_path, processed_path, processed in processor:\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/storage.py\", line 26, in post_process\n    packager.pack_stylesheets(package)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/packager.py\", line 96, in pack_stylesheets\n    variant=package.variant, **kwargs)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/packager.py\", line 105, in pack\n    paths = self.compile(package.paths, force=True)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/packager.py\", line 99, in compile\n    return self.compiler.compile(paths, force=force)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/compilers/__init__.py\", line 56, in compile\n    return list(executor.map(_compile, paths))\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/concurrent/futures/_base.py\", line 579, in result_iterator\n    yield future.result()\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/concurrent/futures/_base.py\", line 396, in result\n    return self.__get_result()\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/concurrent/futures/thread.py\", line 55, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/compilers/__init__.py\", line 32, in _compile\n    for compiler in self.compilers:\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/compilers/__init__.py\", line 28, in compilers\n    return [to_class(compiler) for compiler in settings.PIPELINE_COMPILERS]\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/pipeline/utils.py\", line 23, in to_class\n    module = importlib.import_module(module_path)\n  File \"/Users/lcrouch/python/webalyzer/lib/python2.7/site-packages/django/utils/importlib.py\", line 45, in import_module\n    __import__(name)\n  File \"/Users/lcrouch/code/webalyzer/webalyzer/base/compilers/django.py\", line 3, in <module>\n    from django.template import render_to_string\nImportError: No module named template\n```\n\nIs it because [the thread executing the compiler](https://github.com/cyberdelia/django-pipeline/blob/a12407e529e2b14f94deb139b9e1d7629f314a02/pipeline/compilers/__init__.py#L55-L56) doesn't have the same python execution environment?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/466", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/466/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/466/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/466", "id": 88998292, "node_id": "MDU6SXNzdWU4ODk5ODI5Mg==", "number": 466, "title": "Don't check to see if a source file exists", "user": {"login": "ryanmcgrath", "id": 22712, "node_id": "MDQ6VXNlcjIyNzEy", "avatar_url": "https://avatars2.githubusercontent.com/u/22712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanmcgrath", "html_url": "https://github.com/ryanmcgrath", "followers_url": "https://api.github.com/users/ryanmcgrath/followers", "following_url": "https://api.github.com/users/ryanmcgrath/following{/other_user}", "gists_url": "https://api.github.com/users/ryanmcgrath/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanmcgrath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanmcgrath/subscriptions", "organizations_url": "https://api.github.com/users/ryanmcgrath/orgs", "repos_url": "https://api.github.com/users/ryanmcgrath/repos", "events_url": "https://api.github.com/users/ryanmcgrath/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanmcgrath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-17T12:03:55Z", "updated_at": "2016-02-16T19:02:13Z", "closed_at": "2016-02-16T19:02:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI've got a lot of love for this project, but one incredibly confusing thing is the following: why does Pipeline need to confirm a file exists? Just let any compilation/etc error out naturally; by checking for the existence of files before (packager.py:lines ~26-30) you make it so certain things won't get pulled in some scenarios.\n\ne.g, I don't want to have to run `collectstatic` every time I wanna reflect a change. With what Packager currently does, it checks to see if the file exists inside the static root, but in development it _should_ be checking all the relevant static paths. This incredibly basic not ideal patch to Packager shows what I'm talking about:\n\n``` python\nclass Package(object):\n    def __init__(self, config):\n        self.config = config\n        self._sources = []\n\n    @property\n    def sources(self):\n        if not self._sources:\n            paths = []\n            for pattern in self.config.get('source_filenames', []):\n                paths.append(pattern)  # Don't bother checking for existence\n                #for path in glob(pattern):\n                #    if path not in paths and find(path):\n                #        paths.append(str(path))\n            self._sources = paths\n        return self._sources\n```\n\nThis makes Pipeline just load things in development with no issues at all. There's likely a better patch for it but I've not got the time to dig into it, just wanted to leave a note for anyone else confused by it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/463", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/463/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/463/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/463", "id": 81530219, "node_id": "MDU6SXNzdWU4MTUzMDIxOQ==", "number": 463, "title": "Don't delete history from HISTORY", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-27T16:54:59Z", "updated_at": "2015-06-21T20:33:41Z", "closed_at": "2015-06-21T20:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running a really old version of django-pipeline (1.2.x), and wanted to assess what has changed.  I looked in HISTORY, and it only mentions 1.5.0.  Shouldn't HISTORY retain history?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/462", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/462/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/462/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/462", "id": 81069963, "node_id": "MDU6SXNzdWU4MTA2OTk2Mw==", "number": 462, "title": "PipelineCachedStorage requires both versioned & non-versioned static files", "user": {"login": "bitcity", "id": 4221404, "node_id": "MDQ6VXNlcjQyMjE0MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4221404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitcity", "html_url": "https://github.com/bitcity", "followers_url": "https://api.github.com/users/bitcity/followers", "following_url": "https://api.github.com/users/bitcity/following{/other_user}", "gists_url": "https://api.github.com/users/bitcity/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitcity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitcity/subscriptions", "organizations_url": "https://api.github.com/users/bitcity/orgs", "repos_url": "https://api.github.com/users/bitcity/repos", "events_url": "https://api.github.com/users/bitcity/events{/privacy}", "received_events_url": "https://api.github.com/users/bitcity/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-26T17:57:40Z", "updated_at": "2016-03-05T05:48:02Z", "closed_at": "2016-03-05T05:48:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `PipelineCachedStorage` to use css/jss assets with version numbers in their names (the md5 sum). After running collectstatic, if I remove the 'non-versioned' assets, I get an error about missing css/js files. \n\n```\nValueError: The file could not be found with <pipeline.storage.PipelineCachedStorage.\n```\n\nThis goes away when I copy back the non-versioned assets to static root. The source of the served HTML page also shows that it uses versioned static files. What's the need for the non-versioned ones?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/458", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/458/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/458/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/458", "id": 79459005, "node_id": "MDU6SXNzdWU3OTQ1OTAwNQ==", "number": 458, "title": "How to use pipline with Jinja2", "user": {"login": "intotecho", "id": 659672, "node_id": "MDQ6VXNlcjY1OTY3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/659672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/intotecho", "html_url": "https://github.com/intotecho", "followers_url": "https://api.github.com/users/intotecho/followers", "following_url": "https://api.github.com/users/intotecho/following{/other_user}", "gists_url": "https://api.github.com/users/intotecho/gists{/gist_id}", "starred_url": "https://api.github.com/users/intotecho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/intotecho/subscriptions", "organizations_url": "https://api.github.com/users/intotecho/orgs", "repos_url": "https://api.github.com/users/intotecho/repos", "events_url": "https://api.github.com/users/intotecho/events{/privacy}", "received_events_url": "https://api.github.com/users/intotecho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-22T13:38:48Z", "updated_at": "2015-12-30T20:54:56Z", "closed_at": "2015-12-30T20:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to understand how to use pipeline in a jinja2 gae project.\n\n\"Unlike the Django template tag implementation the Jinja2 implementation uses different templates, so if you wish to override them please override pipeline/css.jinja and pipeline/js.jinja.\"\n\nBut I don't understand the syntax well enough. The following line from the docs suggests a different syntax. Are there any examples, or test cases of using jinj2 template with django-pipeline?\n\nThis is a documentation request. I have posted a related question on Stack Exchange.\nhttp://stackoverflow.com/questions/30325130/how-to-call-django-pipeline-compressor-with-jinja2-templates\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/457", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/457/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/457/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/457", "id": 79331189, "node_id": "MDU6SXNzdWU3OTMzMTE4OQ==", "number": 457, "title": "collectstatic does not append cache prefix to filenames", "user": {"login": "mbrochh", "id": 166590, "node_id": "MDQ6VXNlcjE2NjU5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/166590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrochh", "html_url": "https://github.com/mbrochh", "followers_url": "https://api.github.com/users/mbrochh/followers", "following_url": "https://api.github.com/users/mbrochh/following{/other_user}", "gists_url": "https://api.github.com/users/mbrochh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrochh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrochh/subscriptions", "organizations_url": "https://api.github.com/users/mbrochh/orgs", "repos_url": "https://api.github.com/users/mbrochh/repos", "events_url": "https://api.github.com/users/mbrochh/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrochh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-22T07:27:19Z", "updated_at": "2015-05-22T07:35:46Z", "closed_at": "2015-05-22T07:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I'm running collectstatic I can see in the output that my js- and css-groups are created, but _after_ that I can see that all other staticfiles from all other apps get post-processed.\n\nHowever, the two created main JS/CSS files do _not_ get post processed and therefore don't have any cache-prefix in the filename.\n\nHow can I make sure that a cache prefix is added to the filename for my main output files?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/453", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/453/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/453/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/453", "id": 74338459, "node_id": "MDU6SXNzdWU3NDMzODQ1OQ==", "number": 453, "title": "SyntaxError from concurrent.futures", "user": {"login": "yarbelk", "id": 1477218, "node_id": "MDQ6VXNlcjE0NzcyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1477218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarbelk", "html_url": "https://github.com/yarbelk", "followers_url": "https://api.github.com/users/yarbelk/followers", "following_url": "https://api.github.com/users/yarbelk/following{/other_user}", "gists_url": "https://api.github.com/users/yarbelk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarbelk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarbelk/subscriptions", "organizations_url": "https://api.github.com/users/yarbelk/orgs", "repos_url": "https://api.github.com/users/yarbelk/repos", "events_url": "https://api.github.com/users/yarbelk/events{/privacy}", "received_events_url": "https://api.github.com/users/yarbelk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-08T11:53:53Z", "updated_at": "2015-07-26T19:30:55Z", "closed_at": "2015-07-26T19:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I am using multiple workers or am running my tests in parallel (xdist + pytest)\n\n```\nStacktrace (most recent call last):\n\n  File \"django/core/handlers/base.py\", line 137, in get_response\n    response = response.render()\n  File \"django/template/response.py\", line 103, in render\n    self.content = self.rendered_content\n  File \"django/template/response.py\", line 80, in rendered_content\n    content = template.render(context)\n  File \"django/template/base.py\", line 148, in render\n    return self._render(context)\n  File \"django/template/base.py\", line 142, in _render\n    return self.nodelist.render(context)\n  File \"django/template/base.py\", line 844, in render\n    bit = self.render_node(node, context)\n  File \"django/template/base.py\", line 858, in render_node\n    return node.render(context)\n  File \"django/template/loader_tags.py\", line 126, in render\n    return compiled_parent._render(context)\n  File \"django/template/base.py\", line 142, in _render\n    return self.nodelist.render(context)\n  File \"django/template/base.py\", line 844, in render\n    bit = self.render_node(node, context)\n  File \"django/template/base.py\", line 858, in render_node\n    return node.render(context)\n  File \"pipeline/templatetags/pipeline.py\", line 59, in render\n    return self.render_compressed(package, 'css')\n  File \"pipeline/templatetags/pipeline.py\", line 44, in render_compressed\n    paths = packager.compile(package.paths)\n  File \"pipeline/packager.py\", line 99, in compile\n    return self.compiler.compile(paths, force=force)\n  File \"pipeline/compilers/__init__.py\", line 51, in compile\n    from concurrent import futures\n\n\n    \"\"\"Execute computations asynchronously using threads or processes.\"\"\"\n\n    __author__ = 'Brian Quinlan (brian@sweetapp.com)'\n\n>   from concurrent.futures._base import (FIRST_COMPLETED,\n                                          FIRST_EXCEPTION,\n                                          ALL_COMPLETED,\n                                          CancelledError,\n                                          TimeoutError,\n                                          Future,\n                                          Executor,\n                                          wait,\n                                          as_completed)\nE     File \"/Users/neo/.virtualenvs/***/lib/python3.4/site-packages/concurrent/futures/_base.py\", line 355\nE       raise type(self._exception), self._exception, self._traceback\n```\n- runs fine with a single thread\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/450", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/450/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/450/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/450", "id": 69836683, "node_id": "MDU6SXNzdWU2OTgzNjY4Mw==", "number": 450, "title": "Javascript templates with Angular", "user": {"login": "gkpo", "id": 951412, "node_id": "MDQ6VXNlcjk1MTQxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/951412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkpo", "html_url": "https://github.com/gkpo", "followers_url": "https://api.github.com/users/gkpo/followers", "following_url": "https://api.github.com/users/gkpo/following{/other_user}", "gists_url": "https://api.github.com/users/gkpo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkpo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkpo/subscriptions", "organizations_url": "https://api.github.com/users/gkpo/orgs", "repos_url": "https://api.github.com/users/gkpo/repos", "events_url": "https://api.github.com/users/gkpo/events{/privacy}", "received_events_url": "https://api.github.com/users/gkpo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-21T12:45:21Z", "updated_at": "2015-12-14T19:25:09Z", "closed_at": "2015-12-14T19:25:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can see that some libs have been written to help with javascript template integration:\n\nhttp://django-pipeline.readthedocs.org/en/latest/templates.html#using-it-with-your-favorite-template-library\n\nBut are there any ways to use the javascript templates with angular's templateCache system?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/447", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/447/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/447/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/447", "id": 66876996, "node_id": "MDU6SXNzdWU2Njg3Njk5Ng==", "number": 447, "title": "Warning with Django1.8", "user": {"login": "peterseymour", "id": 4068579, "node_id": "MDQ6VXNlcjQwNjg1Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4068579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterseymour", "html_url": "https://github.com/peterseymour", "followers_url": "https://api.github.com/users/peterseymour/followers", "following_url": "https://api.github.com/users/peterseymour/following{/other_user}", "gists_url": "https://api.github.com/users/peterseymour/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterseymour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterseymour/subscriptions", "organizations_url": "https://api.github.com/users/peterseymour/orgs", "repos_url": "https://api.github.com/users/peterseymour/repos", "events_url": "https://api.github.com/users/peterseymour/events{/privacy}", "received_events_url": "https://api.github.com/users/peterseymour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-07T13:04:10Z", "updated_at": "2015-04-30T12:49:48Z", "closed_at": "2015-04-25T22:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django1.8 gives a deprecation warning for the use of \n\nfrom django.utils import importlib\n\nin pipeline/utils.py\n\nCan this be replaced with \n\nimport importlib\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/445", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/445/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/445/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/445", "id": 63508724, "node_id": "MDU6SXNzdWU2MzUwODcyNA==", "number": 445, "title": "pipeline + slimit breaks moment-timezone-with-data.js", "user": {"login": "brianmay", "id": 112729, "node_id": "MDQ6VXNlcjExMjcyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/112729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianmay", "html_url": "https://github.com/brianmay", "followers_url": "https://api.github.com/users/brianmay/followers", "following_url": "https://api.github.com/users/brianmay/following{/other_user}", "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions", "organizations_url": "https://api.github.com/users/brianmay/orgs", "repos_url": "https://api.github.com/users/brianmay/repos", "events_url": "https://api.github.com/users/brianmay/events{/privacy}", "received_events_url": "https://api.github.com/users/brianmay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-22T08:39:13Z", "updated_at": "2016-01-07T03:06:28Z", "closed_at": "2015-12-30T21:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "As downloaded from http://momentjs.com/downloads/moment-timezone-with-data.js\n\nIt contains the following code:\n\n``` js\nfor (i; i < whole.length; i++) {\n        num = charCodeToInt(whole.charCodeAt(i));\n        out = 60 * out + num;\n}\n```\n\nThis gets turned into:\n\n``` js\nfor(ii<whole.length;i++){num=charCodeToInt(whole.charCodeAt(i));out=60*out+num;}\n```\n\ni.e. the semicolon got dropped from \"i;\" in the loop expression.\n\nJust running slimit on the file by itself seems to be ok. If I turn off slimit in pipeline, it is ok too. If I change the value to \"dummy=0\", it works fine.\n\nApologies if this is actually a slimit bug, finding it hard to try and diagnose. I suspect pipeline is doing some sort of post-processing on the file and messing things up.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/444", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/444/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/444/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/444", "id": 63282928, "node_id": "MDU6SXNzdWU2MzI4MjkyOA==", "number": 444, "title": "compilers using pipes.quote() == not Windows compatible. breaks LESSc", "user": {"login": "wahuneke", "id": 4950582, "node_id": "MDQ6VXNlcjQ5NTA1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4950582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahuneke", "html_url": "https://github.com/wahuneke", "followers_url": "https://api.github.com/users/wahuneke/followers", "following_url": "https://api.github.com/users/wahuneke/following{/other_user}", "gists_url": "https://api.github.com/users/wahuneke/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahuneke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahuneke/subscriptions", "organizations_url": "https://api.github.com/users/wahuneke/orgs", "repos_url": "https://api.github.com/users/wahuneke/repos", "events_url": "https://api.github.com/users/wahuneke/events{/privacy}", "received_events_url": "https://api.github.com/users/wahuneke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-20T18:56:10Z", "updated_at": "2015-12-30T03:44:05Z", "closed_at": "2015-12-30T03:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In bug #335, a call to quote() was added to better handle variety of filenames. It turns out that quote() is not windows compatible and is not intended to be (neither the shlex version nor the pipes version).\n\nquote() adds single quote characters, windows requires double quotes as single quotes have no special meaning (to windows it's just an apostrophe, and apostrophes are ok in windows filenames).\n\nFor me, pipeline is adding single quotes everywhere it calls lessc. This is breaking lessc, which does not handle the single quotes properly. It tries to add the current working directory to the quoted filename and comes up with a brand new filename that is not valid.\n\nTo me, things would be much simpler if you called lessc using Popen in 'not shell' mode. Pass in the name of the executable, pass in the arguments as an array. Dont try to quote anything. dont turn the whole thing into one long command string. Is there a reason it was not implemented this way?\n\nI have already been working with lessc. They merged a patch for me which \"fixes\" the single quote issue. But now we are removing it because it breaks to deviate from the windows specs in this way.\n\nI can submit a PR, just wanted to get feedback first if possible.\n\nwonder if this is related to issue #368 ...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/440", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/440/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/440/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/440", "id": 62097129, "node_id": "MDU6SXNzdWU2MjA5NzEyOQ==", "number": 440, "title": "Wrong doc for PIPELINE_SASS_ARGUMENTS", "user": {"login": "rasca", "id": 79235, "node_id": "MDQ6VXNlcjc5MjM1", "avatar_url": "https://avatars3.githubusercontent.com/u/79235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasca", "html_url": "https://github.com/rasca", "followers_url": "https://api.github.com/users/rasca/followers", "following_url": "https://api.github.com/users/rasca/following{/other_user}", "gists_url": "https://api.github.com/users/rasca/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasca/subscriptions", "organizations_url": "https://api.github.com/users/rasca/orgs", "repos_url": "https://api.github.com/users/rasca/repos", "events_url": "https://api.github.com/users/rasca/events{/privacy}", "received_events_url": "https://api.github.com/users/rasca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-16T14:25:55Z", "updated_at": "2015-03-16T17:50:39Z", "closed_at": "2015-03-16T17:50:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "It says the default is `\"--update\"` while the default is `\"\"` https://github.com/cyberdelia/django-pipeline/blob/master/pipeline/conf.py#L58\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/439", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/439/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/439/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/439", "id": 60955727, "node_id": "MDU6SXNzdWU2MDk1NTcyNw==", "number": 439, "title": "500s instead of 404s", "user": {"login": "tkazec", "id": 348946, "node_id": "MDQ6VXNlcjM0ODk0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/348946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkazec", "html_url": "https://github.com/tkazec", "followers_url": "https://api.github.com/users/tkazec/followers", "following_url": "https://api.github.com/users/tkazec/following{/other_user}", "gists_url": "https://api.github.com/users/tkazec/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkazec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkazec/subscriptions", "organizations_url": "https://api.github.com/users/tkazec/orgs", "repos_url": "https://api.github.com/users/tkazec/repos", "events_url": "https://api.github.com/users/tkazec/events{/privacy}", "received_events_url": "https://api.github.com/users/tkazec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-13T01:34:16Z", "updated_at": "2015-07-26T19:14:04Z", "closed_at": "2015-07-26T19:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In our development environment, `pipeline` seems to return 500s when a file can't be found. This is an issue when using the Chrome dev tools, because it automatically tries to load (non-existent) .map files, which fills our logs up with tracebacks.\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.8_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/wsgiref/handlers.py\", line 85, in run\n    self.result = application(self.environ, self.start_response)\n  File \"/Users/teddy/.virtualenvs/buzzscreen/lib/python2.7/site-packages/django/contrib/staticfiles/handlers.py\", line 65, in __call__\n    return super(StaticFilesHandler, self).__call__(environ, start_response)\n  File \"/Users/teddy/.virtualenvs/buzzscreen/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 187, in __call__\n    response = self.get_response(request)\n  File \"/Users/teddy/.virtualenvs/buzzscreen/lib/python2.7/site-packages/django/contrib/staticfiles/handlers.py\", line 55, in get_response\n    return self.serve(request)\n  File \"/Users/teddy/.virtualenvs/buzzscreen/lib/python2.7/site-packages/django/contrib/staticfiles/handlers.py\", line 48, in serve\n    return serve(request, self.file_path(request.path), insecure=True)\n  File \"/Users/teddy/.virtualenvs/buzzscreen/lib/python2.7/site-packages/django/contrib/staticfiles/views.py\", line 38, in serve\n    document_root, path = os.path.split(absolute_path)\n  File \"/Users/teddy/.virtualenvs/buzzscreen/bin/../lib/python2.7/posixpath.py\", line 92, in split\n    i = p.rfind('/') + 1\nAttributeError: 'list' object has no attribute 'rfind'\n[13/Mar/2015 01:31:12] \"GET /static/ui/vendor/angular.min.js.map HTTP/1.1\" 500 59\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/437", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/437/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/437/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/437", "id": 60666382, "node_id": "MDU6SXNzdWU2MDY2NjM4Mg==", "number": 437, "title": "1.4.7 release on PyPI", "user": {"login": "rehandalal", "id": 987136, "node_id": "MDQ6VXNlcjk4NzEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/987136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rehandalal", "html_url": "https://github.com/rehandalal", "followers_url": "https://api.github.com/users/rehandalal/followers", "following_url": "https://api.github.com/users/rehandalal/following{/other_user}", "gists_url": "https://api.github.com/users/rehandalal/gists{/gist_id}", "starred_url": "https://api.github.com/users/rehandalal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rehandalal/subscriptions", "organizations_url": "https://api.github.com/users/rehandalal/orgs", "repos_url": "https://api.github.com/users/rehandalal/repos", "events_url": "https://api.github.com/users/rehandalal/events{/privacy}", "received_events_url": "https://api.github.com/users/rehandalal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-11T14:26:46Z", "updated_at": "2015-03-12T04:50:05Z", "closed_at": "2015-03-12T01:26:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.4.7 was never released on PyPI. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/432", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/432/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/432/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/432", "id": 59469666, "node_id": "MDU6SXNzdWU1OTQ2OTY2Ng==", "number": 432, "title": "Generate index.html once with collectstatic", "user": {"login": "remcokranenburg", "id": 2773006, "node_id": "MDQ6VXNlcjI3NzMwMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2773006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remcokranenburg", "html_url": "https://github.com/remcokranenburg", "followers_url": "https://api.github.com/users/remcokranenburg/followers", "following_url": "https://api.github.com/users/remcokranenburg/following{/other_user}", "gists_url": "https://api.github.com/users/remcokranenburg/gists{/gist_id}", "starred_url": "https://api.github.com/users/remcokranenburg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remcokranenburg/subscriptions", "organizations_url": "https://api.github.com/users/remcokranenburg/orgs", "repos_url": "https://api.github.com/users/remcokranenburg/repos", "events_url": "https://api.github.com/users/remcokranenburg/events{/privacy}", "received_events_url": "https://api.github.com/users/remcokranenburg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-02T11:32:30Z", "updated_at": "2015-06-21T20:37:26Z", "closed_at": "2015-06-21T20:37:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use a single-page app design so all of our HTML is static. We currently need a Django template for index.html just to let Pipeline insert the script tags. We'd rather have Pipeline generate index.html as well, so it is created once during collectstatic.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/431", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/431/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/431/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/431", "id": 59083796, "node_id": "MDU6SXNzdWU1OTA4Mzc5Ng==", "number": 431, "title": "Pipeline and S3Boto: no module named storage", "user": {"login": "facconi", "id": 292414, "node_id": "MDQ6VXNlcjI5MjQxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/292414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facconi", "html_url": "https://github.com/facconi", "followers_url": "https://api.github.com/users/facconi/followers", "following_url": "https://api.github.com/users/facconi/following{/other_user}", "gists_url": "https://api.github.com/users/facconi/gists{/gist_id}", "starred_url": "https://api.github.com/users/facconi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facconi/subscriptions", "organizations_url": "https://api.github.com/users/facconi/orgs", "repos_url": "https://api.github.com/users/facconi/repos", "events_url": "https://api.github.com/users/facconi/events{/privacy}", "received_events_url": "https://api.github.com/users/facconi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-26T14:55:27Z", "updated_at": "2015-02-26T15:29:30Z", "closed_at": "2015-02-26T15:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I am using django-pipeline with django-storages and s3boto, following the instructions on the pipeline's website.\n\nMy code is:\n\n<pre>from django.contrib.staticfiles.storage import CachedFilesMixin\nfrom pipeline.storage import PipelineMixin\nfrom storages.backends.s3boto import S3BotoStorage\nclass S3PipelineStorage(PipelineMixin, CachedFilesMixin, S3BotoStorage):\n   pass</pre>\n\n\n(as documented on https://django-pipeline.readthedocs.org/en/latest/storages.html?highlight=s3botostorage#using-with-other-storages)\n\nWhen I run collectstatic I have the following errors:\n\n<pre>from pipeline.storage import PipelineMixin\nImportError: No module named storage</pre>\n\n\nAll libraries upgraded to current PyPi version, env is active. Using ./manage.py shell I can import \"from pipeline.storage import PipelineMixin\" correctly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/430", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/430/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/430/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/430", "id": 58423677, "node_id": "MDU6SXNzdWU1ODQyMzY3Nw==", "number": 430, "title": "collectstatic ignores sass errors", "user": {"login": "cameel", "id": 137030, "node_id": "MDQ6VXNlcjEzNzAzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/137030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cameel", "html_url": "https://github.com/cameel", "followers_url": "https://api.github.com/users/cameel/followers", "following_url": "https://api.github.com/users/cameel/following{/other_user}", "gists_url": "https://api.github.com/users/cameel/gists{/gist_id}", "starred_url": "https://api.github.com/users/cameel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cameel/subscriptions", "organizations_url": "https://api.github.com/users/cameel/orgs", "repos_url": "https://api.github.com/users/cameel/repos", "events_url": "https://api.github.com/users/cameel/events{/privacy}", "received_events_url": "https://api.github.com/users/cameel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-20T23:11:59Z", "updated_at": "2015-03-01T18:38:16Z", "closed_at": "2015-03-01T18:04:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to update my sass to the lastest version (3.4.12) and I have discovered that django-pipeline completely ignores its errors because they get printed to `stdout`, not `stderr`. The command is simply:\n\n``` bash\n/usr/bin/env sass --compass somefile.sass somefile.css\n```\n\nsass prints:\n\n`ERROR: Cannot load compass.`\n\nto `stdout` and nothing to `stderr`. The sass process returns a non-zero error code though and I think that this is a more reliable way to check if it succeeded.\n\nMy problem is obviously that compass is missing (I may have uninstalled it by mistake) but I had to trace through the code to discover that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/428", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/428/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/428/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/428", "id": 58192545, "node_id": "MDU6SXNzdWU1ODE5MjU0NQ==", "number": 428, "title": "Load times have increased dramatically since upgrade to 1.4.x", "user": {"login": "bobvoorneveld", "id": 6303073, "node_id": "MDQ6VXNlcjYzMDMwNzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6303073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobvoorneveld", "html_url": "https://github.com/bobvoorneveld", "followers_url": "https://api.github.com/users/bobvoorneveld/followers", "following_url": "https://api.github.com/users/bobvoorneveld/following{/other_user}", "gists_url": "https://api.github.com/users/bobvoorneveld/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobvoorneveld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobvoorneveld/subscriptions", "organizations_url": "https://api.github.com/users/bobvoorneveld/orgs", "repos_url": "https://api.github.com/users/bobvoorneveld/repos", "events_url": "https://api.github.com/users/bobvoorneveld/events{/privacy}", "received_events_url": "https://api.github.com/users/bobvoorneveld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 44, "created_at": "2015-02-19T10:48:21Z", "updated_at": "2015-06-21T20:39:36Z", "closed_at": "2015-06-21T20:39:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nWe just tried upgrading django-pipeline from version 1.3.25 to 1.4.x (multiple minor versions tested, including latest: 1.4.6). Every request rendering static files went from 0.5 sec to about 20 secs to render. \n\nWe tried to debug what led to this increase but could not find it. After downgrading to 1.3 the load times were again at 0.5 secs per page.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/425", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/425/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/425/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/425", "id": 57411699, "node_id": "MDU6SXNzdWU1NzQxMTY5OQ==", "number": 425, "title": "mozilla.org using pipeline", "user": {"login": "pmclanahan", "id": 19934, "node_id": "MDQ6VXNlcjE5OTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/19934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmclanahan", "html_url": "https://github.com/pmclanahan", "followers_url": "https://api.github.com/users/pmclanahan/followers", "following_url": "https://api.github.com/users/pmclanahan/following{/other_user}", "gists_url": "https://api.github.com/users/pmclanahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmclanahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmclanahan/subscriptions", "organizations_url": "https://api.github.com/users/pmclanahan/orgs", "repos_url": "https://api.github.com/users/pmclanahan/repos", "events_url": "https://api.github.com/users/pmclanahan/events{/privacy}", "received_events_url": "https://api.github.com/users/pmclanahan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-12T03:11:29Z", "updated_at": "2015-03-07T23:54:38Z", "closed_at": "2015-03-01T17:26:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wanted to let you know and wasn't sure how else to contact you. We just pushed the changes live today. Thanks for the great work!\n- https://www.mozilla.org/\n- https://github.com/mozilla/bedrock\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/421", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/421/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/421/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/421", "id": 57096128, "node_id": "MDU6SXNzdWU1NzA5NjEyOA==", "number": 421, "title": "Compilation errors hidden if previous file already exists", "user": {"login": "amoffat", "id": 259113, "node_id": "MDQ6VXNlcjI1OTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/259113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoffat", "html_url": "https://github.com/amoffat", "followers_url": "https://api.github.com/users/amoffat/followers", "following_url": "https://api.github.com/users/amoffat/following{/other_user}", "gists_url": "https://api.github.com/users/amoffat/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoffat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoffat/subscriptions", "organizations_url": "https://api.github.com/users/amoffat/orgs", "repos_url": "https://api.github.com/users/amoffat/repos", "events_url": "https://api.github.com/users/amoffat/events{/privacy}", "received_events_url": "https://api.github.com/users/amoffat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-09T21:56:41Z", "updated_at": "2015-03-01T18:03:56Z", "closed_at": "2015-03-01T18:03:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The situation I'm running into is a bad sass file fails to compile, but because an old compile succeeded, the new compile thinks everything is fine and hides the error.  The relevant line is https://github.com/cyberdelia/django-pipeline/blob/master/pipeline/compilers/__init__.py#L43\n\nI'm not sure why the compiled file existing would silence the exception from being raised.  What's the reasoning behind this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/414", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/414/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/414/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/414", "id": 56042246, "node_id": "MDU6SXNzdWU1NjA0MjI0Ng==", "number": 414, "title": "1.4.3 shipping with old compressed templatetags", "user": {"login": "HenrikOssipoff", "id": 4737224, "node_id": "MDQ6VXNlcjQ3MzcyMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4737224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenrikOssipoff", "html_url": "https://github.com/HenrikOssipoff", "followers_url": "https://api.github.com/users/HenrikOssipoff/followers", "following_url": "https://api.github.com/users/HenrikOssipoff/following{/other_user}", "gists_url": "https://api.github.com/users/HenrikOssipoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenrikOssipoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenrikOssipoff/subscriptions", "organizations_url": "https://api.github.com/users/HenrikOssipoff/orgs", "repos_url": "https://api.github.com/users/HenrikOssipoff/repos", "events_url": "https://api.github.com/users/HenrikOssipoff/events{/privacy}", "received_events_url": "https://api.github.com/users/HenrikOssipoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-30T14:52:53Z", "updated_at": "2015-01-30T17:57:49Z", "closed_at": "2015-01-30T17:57:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.4.0 marked the old templatetags as backwards incompatible, but it appears that at least 1.4.3 ships with the old templatetags, as well as the new ones - making the change rather backwards compatible.\n\nSince the file is not present in the Git repository anymore, I suspect a small error in the packaging.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/413", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/413/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/413/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/413", "id": 55565568, "node_id": "MDU6SXNzdWU1NTU2NTU2OA==", "number": 413, "title": "{% stylesheet 'foo' %} silently fails even with DEBUG=True", "user": {"login": "leo-the-manic", "id": 3373776, "node_id": "MDQ6VXNlcjMzNzM3NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3373776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leo-the-manic", "html_url": "https://github.com/leo-the-manic", "followers_url": "https://api.github.com/users/leo-the-manic/followers", "following_url": "https://api.github.com/users/leo-the-manic/following{/other_user}", "gists_url": "https://api.github.com/users/leo-the-manic/gists{/gist_id}", "starred_url": "https://api.github.com/users/leo-the-manic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leo-the-manic/subscriptions", "organizations_url": "https://api.github.com/users/leo-the-manic/orgs", "repos_url": "https://api.github.com/users/leo-the-manic/repos", "events_url": "https://api.github.com/users/leo-the-manic/events{/privacy}", "received_events_url": "https://api.github.com/users/leo-the-manic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-27T01:57:59Z", "updated_at": "2016-02-16T19:02:11Z", "closed_at": "2016-02-16T19:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wish I had more specific info, but essentially, I'm using `{% stylesheet 'foo' %}` and nothing comes out in my markup, and no loggers show anything.\n\nMy logging config:\n\n``` python\nLOGGING = {\n    'version': 1,\n\n    'formatters': {\n        'console': {\n            'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n        },\n    },\n\n    'handlers': {\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'console',\n        },\n\n    },\n\n    'loggers': {\n        '': {\n            'level': 'DEBUG',\n            'handlers': ['console'],\n        },\n    },\n}\n```\n\nMy static files settings...\n\n``` python\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static_build\")\n\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'\n\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'pipeline.finders.PipelineFinder',\n)\n\nPIPELINE_COMPILERS = (\n    'pipeline.compilers.sass.SASSCompiler',\n)\n```\n\nMy pipeline files config...\n\n```\nPIPELINE_CSS = {\n\n    'foo': {\n        'source_filenames': (\n            'main/css/foo.sass',\n        ),\n        'output-filename': 'main/css/foo-sass.css',\n    },\n\n}\n```\n\nRunning Python 3.4.0 on Windows 7 with Django 1.7 and django-pipeline version 1.4.3. Sorry this is kind of sparse; I am trying to get the ball rolling on a project and gotta get back to doing more project specific things. So I thought I'd cobble together a 'bug report' as quick as possible to see if this is actually a known issue; otherwise I'll spend some time later coming up with an easier to use Github mini-project to showcase the bug/issue.\n\nTo be fair I'm not sure if this is a 'bug' or intentional (and if so, pointlessly hard to use) design; for some reason '{% stylesheet 'foo' %}' is leaving nothing in my markup and emitting no log messages in spite of me having `settings.DEBUG == True`. This is effectively stopping me from using Sass in a clean way with my current project.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/412", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/412/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/412/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/412", "id": 54452548, "node_id": "MDU6SXNzdWU1NDQ1MjU0OA==", "number": 412, "title": "SASS issue in latest upgrade", "user": {"login": "arnaudlimbourg", "id": 53919, "node_id": "MDQ6VXNlcjUzOTE5", "avatar_url": "https://avatars1.githubusercontent.com/u/53919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaudlimbourg", "html_url": "https://github.com/arnaudlimbourg", "followers_url": "https://api.github.com/users/arnaudlimbourg/followers", "following_url": "https://api.github.com/users/arnaudlimbourg/following{/other_user}", "gists_url": "https://api.github.com/users/arnaudlimbourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaudlimbourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaudlimbourg/subscriptions", "organizations_url": "https://api.github.com/users/arnaudlimbourg/orgs", "repos_url": "https://api.github.com/users/arnaudlimbourg/repos", "events_url": "https://api.github.com/users/arnaudlimbourg/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaudlimbourg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-15T14:06:54Z", "updated_at": "2015-01-15T19:13:05Z", "closed_at": "2015-01-15T19:13:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In commit https://github.com/cyberdelia/django-pipeline/commit/495c2f840f87f16f5a68304e2a4dc6bae4b449ed removing the semi-colon breaks usage with regular ruby gem.\n\nI get an error like\n\n```\npipeline.exceptions.CompilerError: File project.css is a CSS file.\nDid you mean: sass --update project.scss:project.css\n```\n\ndowngrading to 1.4.2 solves the issue. The sass executable expects a colon between the two filenames, the compiler fails since it was removed.\n\nThe issue being that one or the other works at a time.\n\nI suppose a way to solve this would be to add an extra `PIPELINE_SASS_LIBSASS = False` by default to alternate between the two syntax. Toughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/408", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/408/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/408/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/408", "id": 53351999, "node_id": "MDU6SXNzdWU1MzM1MTk5OQ==", "number": 408, "title": "Please document PIPELINE_ENABLED in directions for upgrading to 1.4", "user": {"login": "tammyalexandra", "id": 1870250, "node_id": "MDQ6VXNlcjE4NzAyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1870250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tammyalexandra", "html_url": "https://github.com/tammyalexandra", "followers_url": "https://api.github.com/users/tammyalexandra/followers", "following_url": "https://api.github.com/users/tammyalexandra/following{/other_user}", "gists_url": "https://api.github.com/users/tammyalexandra/gists{/gist_id}", "starred_url": "https://api.github.com/users/tammyalexandra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tammyalexandra/subscriptions", "organizations_url": "https://api.github.com/users/tammyalexandra/orgs", "repos_url": "https://api.github.com/users/tammyalexandra/repos", "events_url": "https://api.github.com/users/tammyalexandra/events{/privacy}", "received_events_url": "https://api.github.com/users/tammyalexandra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-04T22:58:15Z", "updated_at": "2015-03-01T18:06:25Z", "closed_at": "2015-03-01T18:06:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The flag is being used in a different way from 1.3, which creates a backwards incompatibility in some set-ups:\n\nhttp://stackoverflow.com/questions/27771184/x-amz-acl-being-set-incorrectly-when-using-collectstatic-with-latest-version-of\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/407", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/407/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/407/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/407", "id": 52851470, "node_id": "MDU6SXNzdWU1Mjg1MTQ3MA==", "number": 407, "title": "Making source files overrideable?", "user": {"login": "rafalp", "id": 750553, "node_id": "MDQ6VXNlcjc1MDU1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/750553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafalp", "html_url": "https://github.com/rafalp", "followers_url": "https://api.github.com/users/rafalp/followers", "following_url": "https://api.github.com/users/rafalp/following{/other_user}", "gists_url": "https://api.github.com/users/rafalp/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafalp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafalp/subscriptions", "organizations_url": "https://api.github.com/users/rafalp/orgs", "repos_url": "https://api.github.com/users/rafalp/repos", "events_url": "https://api.github.com/users/rafalp/events{/privacy}", "received_events_url": "https://api.github.com/users/rafalp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-25T07:08:25Z", "updated_at": "2015-01-10T18:54:48Z", "closed_at": "2015-01-10T18:54:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's my usecase:\n\nI'm writing CMS that uses less for its styles, and currently I have two layers of those:\n- bootstrap\n- cms\n\nThere's also empty third layer named \"flavor\" that contains two empty less files: variables.less and flavor.less.\n\nMy idea is that to customise way site looks, users can override variables and styles defined in previous two layers by defining custom ones in third layer.\n\nCurrently this isn't working because compilation occurs before files are copied into STATIC_ROOT. I understand that there were good reasons for doing this that way, but I am wondering if current implementation leaves place for changing current behaviour for desired one?\n\nI can think of different approaches to this issue, but sadly I am yet to come with one that is elegant and spares users that wish to customize their sites additional maintenance burden of having to copypaste files around.\n\nAnyway thanks for your time and foremost thanks for amazing project! :+1: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/406", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/406/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/406/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/406", "id": 52602187, "node_id": "MDU6SXNzdWU1MjYwMjE4Nw==", "number": 406, "title": "Compiler 1.4.2 doesn't support relative path import", "user": {"login": "TontonMax", "id": 4569890, "node_id": "MDQ6VXNlcjQ1Njk4OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4569890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TontonMax", "html_url": "https://github.com/TontonMax", "followers_url": "https://api.github.com/users/TontonMax/followers", "following_url": "https://api.github.com/users/TontonMax/following{/other_user}", "gists_url": "https://api.github.com/users/TontonMax/gists{/gist_id}", "starred_url": "https://api.github.com/users/TontonMax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TontonMax/subscriptions", "organizations_url": "https://api.github.com/users/TontonMax/orgs", "repos_url": "https://api.github.com/users/TontonMax/repos", "events_url": "https://api.github.com/users/TontonMax/events{/privacy}", "received_events_url": "https://api.github.com/users/TontonMax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-21T18:23:31Z", "updated_at": "2015-03-01T18:12:17Z", "closed_at": "2015-03-01T18:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \nThis line:\n\n```\n@import \"../../../../../bower_components/bootstrap/less/bootstrap\";\n```\n\nbreaks on 1.4.2 with a compiler error like:\n\n```\npipeline.exceptions.CompilerError: FileError: <...> wasn't found in /tmp/tmpprPjWp/<...>\n```\n\nFallbacking on version 1.3.23, is works. \nI see it as a regression, but maybe that is what you want?\nBest regards, \nMax\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/405", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/405/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/405/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/405", "id": 52528346, "node_id": "MDU6SXNzdWU1MjUyODM0Ng==", "number": 405, "title": "compressed_css and compressed_js not using cache-busting versions", "user": {"login": "Larrik", "id": 1168007, "node_id": "MDQ6VXNlcjExNjgwMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1168007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Larrik", "html_url": "https://github.com/Larrik", "followers_url": "https://api.github.com/users/Larrik/followers", "following_url": "https://api.github.com/users/Larrik/following{/other_user}", "gists_url": "https://api.github.com/users/Larrik/gists{/gist_id}", "starred_url": "https://api.github.com/users/Larrik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Larrik/subscriptions", "organizations_url": "https://api.github.com/users/Larrik/orgs", "repos_url": "https://api.github.com/users/Larrik/repos", "events_url": "https://api.github.com/users/Larrik/events{/privacy}", "received_events_url": "https://api.github.com/users/Larrik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-19T21:03:51Z", "updated_at": "2014-12-22T14:35:12Z", "closed_at": "2014-12-22T14:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm upgrading from 1.1.17 to 1.3.27. I'm trying to maintain the cache-busting ability that pipeline used to have.\n\nI've set\nSTATICFILES_STORAGE = 'pipeline.storage.PipelineCachedStorage'\nand \nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    'pipeline.finders.PipelineFinder',\n    'pipeline.finders.CachedFileFinder'\n    #'django.contrib.staticfiles.finders.DefaultStorageFinder',\n    )\n\nand it's to the point now that I get compressed CSS/JS, but without the cache-busting filenames (so for an 'index' group, I get simply 'index.css' vs. the 'index.3f40bb96492d.css' I want it to ask for). Is there something I'm doing wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/404", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/404/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/404/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/404", "id": 52481095, "node_id": "MDU6SXNzdWU1MjQ4MTA5NQ==", "number": 404, "title": "SASSCompiler is only compatible with Ruby implementation of SASS", "user": {"login": "bardo", "id": 241021, "node_id": "MDQ6VXNlcjI0MTAyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/241021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bardo", "html_url": "https://github.com/bardo", "followers_url": "https://api.github.com/users/bardo/followers", "following_url": "https://api.github.com/users/bardo/following{/other_user}", "gists_url": "https://api.github.com/users/bardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bardo/subscriptions", "organizations_url": "https://api.github.com/users/bardo/orgs", "repos_url": "https://api.github.com/users/bardo/repos", "events_url": "https://api.github.com/users/bardo/events{/privacy}", "received_events_url": "https://api.github.com/users/bardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-19T13:09:19Z", "updated_at": "2015-01-13T02:47:17Z", "closed_at": "2015-01-13T02:47:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `compile_file()` function in the `SASSCompiler` class uses a syntax that is not compatible with many alternative (read: Ruby-less) SASS implementations:\n\n``` python\n        command = \"%s %s %s:%s\" % (\n            settings.PIPELINE_SASS_BINARY,\n            settings.PIPELINE_SASS_ARGUMENTS,\n            infile,\n            outfile\n        )\n```\n\nHere `infile` and `outfile` are separated by a colon and not by a space. This is not only incompatible with at least some alternative implementations (for example [python-scss](https://github.com/klen/python-scss) and [libsass-python](https://github.com/dahlia/libsass-python)), but it's also undocumented in the ruby-sass implementation. The colon is in fact only documented only for the `--watch` option, which is not necessary in `SASSCompiler`:\n\n```\n$ sass --help\nUsage: sass [options] [INPUT] [OUTPUT]\n[...]\nWatching and Updating:\n        --watch                      Watch files or directories for changes.\n                                     The location of the generated CSS can be set using a colon:\n                                       sass --watch input.sass:output.css\n                                       sass --watch input-dir:output-dir\n```\n\nIt would be a good idea to remove the colon for greater compatibility.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/403", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/403/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/403/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/403", "id": 52398667, "node_id": "MDU6SXNzdWU1MjM5ODY2Nw==", "number": 403, "title": "1.4.2 requires absolute paths support from static storage", "user": {"login": "rjagielski", "id": 1412325, "node_id": "MDQ6VXNlcjE0MTIzMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1412325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjagielski", "html_url": "https://github.com/rjagielski", "followers_url": "https://api.github.com/users/rjagielski/followers", "following_url": "https://api.github.com/users/rjagielski/following{/other_user}", "gists_url": "https://api.github.com/users/rjagielski/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjagielski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjagielski/subscriptions", "organizations_url": "https://api.github.com/users/rjagielski/orgs", "repos_url": "https://api.github.com/users/rjagielski/repos", "events_url": "https://api.github.com/users/rjagielski/events{/privacy}", "received_events_url": "https://api.github.com/users/rjagielski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2014-12-18T18:22:32Z", "updated_at": "2015-10-09T08:04:39Z", "closed_at": "2015-05-22T20:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the following static storage:\n\n``` python\nclass S3PipelineStorage(PipelineMixin, S3BotoStorage):\n    \"\"\"S3 storage with pipeline magic\"\"\"\n    pass\n```\n\nWhich is almost the same as the one from [pipeline docs ](https://django-pipeline.readthedocs.org/en/latest/storages.html#using-with-other-storages) (even simpler because it doesnt use CachedFilesMixin) .\nIt's fine with 1.3.x but breaks with 1.4.2 because it tries to run sass compiler using absolute path from s3. S3BotoStorage doesn't support absolute paths and throws this long exception:\n\n```\n/home/bender/myapps/foo/manage.py in <module>()\n      8     from django.core.management import execute_from_command_line\n      9 \n---> 10     execute_from_command_line(sys.argv)\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/core/management/__init__.pyc in execute_from_command_line(argv)\n    383     \"\"\"\n    384     utility = ManagementUtility(argv)\n--> 385     utility.execute()\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/core/management/__init__.pyc in execute(self)\n    375             sys.stdout.write(self.main_help_text() + '\\n')\n    376         else:\n--> 377             self.fetch_command(subcommand).run_from_argv(self.argv)\n    378 \n    379 \n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/core/management/base.pyc in run_from_argv(self, argv)\n    286         handle_default_options(options)\n    287         try:\n--> 288             self.execute(*args, **options.__dict__)\n    289         except Exception as e:\n    290             if options.traceback or not isinstance(e, CommandError):\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/core/management/base.pyc in execute(self, *args, **options)\n    336                     not options.get('skip_checks')):\n    337                 self.check()\n--> 338             output = self.handle(*args, **options)\n    339             if output:\n    340                 if self.output_transaction:\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/core/management/base.pyc in handle(self, *args, **options)\n    531         if args:\n    532             raise CommandError(\"Command doesn't accept any arguments\")\n--> 533         return self.handle_noargs(**options)\n    534 \n    535     def handle_noargs(self, **options):\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.pyc in handle_noargs(self, **options)\n    166             raise CommandError(\"Collecting static files cancelled.\")\n    167 \n--> 168         collected = self.collect()\n    169         modified_count = len(collected['modified'])\n    170         unmodified_count = len(collected['unmodified'])\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/contrib/staticfiles/management/commands/collectstatic.pyc in collect(self)\n    112             processor = self.storage.post_process(found_files,\n    113                                                   dry_run=self.dry_run)\n--> 114             for original_path, processed_path, processed in processor:\n    115                 if isinstance(processed, Exception):\n    116                     self.stderr.write(\"Post-processing '%s' failed!\" % original_path)\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/pipeline/storage.pyc in post_process(self, paths, dry_run, **options)\n     28         from pipeline.packager import Packager\n     29         packager = Packager(storage=self)\n---> 30         for package_name in packager.packages['css']:\n     31             package = packager.package_for('css', package_name)\n     32             output_file = package.output_filename\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/pipeline/packager.pyc in pack_stylesheets(self, package, **kwargs)\n     94         return self.pack(package, self.compressor.compress_css, css_compressed,\n     95                          output_filename=package.output_filename,\n---> 96                          variant=package.variant, **kwargs)\n     97 \n     98     def compile(self, paths, force=False):\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/pipeline/packager.pyc in pack(self, package, compress, signal, **kwargs)\n    103         if self.verbose:\n    104             print(\"Saving: %s\" % output_filename)\n--> 105         paths = self.compile(package.paths, force=True)\n    106         content = compress(paths, **kwargs)\n    107         self.save_file(output_filename, content)\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/pipeline/packager.pyc in compile(self, paths, force)\n     97 \n     98     def compile(self, paths, force=False):\n---> 99         return self.compiler.compile(paths, force=force)\n    100 \n    101     def pack(self, package, compress, signal, **kwargs):\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/pipeline/compilers/__init__.pyc in compile(self, paths, force)\n     54         else:\n     55             with futures.ThreadPoolExecutor(max_workers=multiprocessing.cpu_count()) as executor:\n---> 56                 return list(executor.map(_compile, paths))\n     57 \n     58     def output_path(self, path, extension):\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/concurrent/futures/_base.pyc in map(self, fn, *iterables, **kwargs)\n    578             for future in fs:\n    579                 if timeout is None:\n--> 580                     yield future.result()\n    581                 else:\n    582                     yield future.result(end_time - time.time())\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/concurrent/futures/_base.pyc in result(self, timeout)\n    398                 raise CancelledError()\n    399             elif self._state == FINISHED:\n--> 400                 return self.__get_result()\n    401 \n    402             self._condition.wait(timeout)\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/concurrent/futures/_base.pyc in __get_result(self)\n    357     def __get_result(self):\n    358         if self._exception:\n--> 359             reraise(self._exception, self._traceback)\n    360         else:\n    361             return self._result\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/concurrent/futures/_compat.pyc in reraise(exc, traceback)\n    105     def reraise(exc, traceback):\n    106         locals_ = {'exc_type': type(exc), 'exc_value': exc, 'traceback': traceback}\n--> 107         exec('raise exc_type, exc_value, traceback', {}, locals_)\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/concurrent/futures/thread.pyc in run(self)\n     59 \n     60         try:\n---> 61             result = self.fn(*self.args, **self.kwargs)\n     62         except BaseException:\n     63             e, tb = sys.exc_info()[1:]\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/pipeline/compilers/__init__.pyc in _compile(input_path)\n     34                 if compiler.match_file(input_path):\n     35                     output_path = self.output_path(input_path, compiler.output_extension)\n---> 36                     infile = self.storage.path(input_path)\n     37                     outfile = self.output_path(infile, compiler.output_extension)\n     38                     outdated = compiler.is_outdated(input_path, output_path)\n\n/home/bender/.virtualenvs/foo/lib/python2.7/site-packages/django/core/files/storage.pyc in path(self, name)\n     85         accessed using open() should *not* implement this method.\n     86         \"\"\"\n---> 87         raise NotImplementedError(\"This backend doesn't support absolute paths.\")\n     88 \n     89     # The following methods form the public API for storage systems, but with\n\nNotImplementedError: This backend doesn't support absolute paths\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/402", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/402/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/402/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/402", "id": 52068919, "node_id": "MDU6SXNzdWU1MjA2ODkxOQ==", "number": 402, "title": "Bad Request (400) for subfolders", "user": {"login": "thekensman", "id": 3254637, "node_id": "MDQ6VXNlcjMyNTQ2Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thekensman", "html_url": "https://github.com/thekensman", "followers_url": "https://api.github.com/users/thekensman/followers", "following_url": "https://api.github.com/users/thekensman/following{/other_user}", "gists_url": "https://api.github.com/users/thekensman/gists{/gist_id}", "starred_url": "https://api.github.com/users/thekensman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thekensman/subscriptions", "organizations_url": "https://api.github.com/users/thekensman/orgs", "repos_url": "https://api.github.com/users/thekensman/repos", "events_url": "https://api.github.com/users/thekensman/events{/privacy}", "received_events_url": "https://api.github.com/users/thekensman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-16T03:16:18Z", "updated_at": "2015-03-06T10:28:26Z", "closed_at": "2014-12-29T05:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nAfter specifying a subfolder under static for a group of scripts in PIPELINE_CSS I get a 400 error when trying to access a page where the group is loaded. However, moving the files to the top level of the static directory and taking out the subfolder in the setting gets rid of the error.\n\nSetting that gives an error:\n\n``` python\nPIPELINE_CSS = {\n    'master': {\n        'source_filenames': (\n            'sass/master.sass'\n        ),\n        'output_filename': 'css/master.css',\n    },\n}\n```\n\nSetting that works:\n\n``` python\nPIPELINE_CSS = {\n    'master': {\n        'source_filenames': (\n            'master.sass'\n        ),\n        'output_filename': 'css/master.css',\n    },\n}\n```\n\nAny idea what might cause this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/401", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/401/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/401/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/401", "id": 51696572, "node_id": "MDU6SXNzdWU1MTY5NjU3Mg==", "number": 401, "title": "Duplicate scripts", "user": {"login": "ivanff", "id": 925243, "node_id": "MDQ6VXNlcjkyNTI0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/925243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanff", "html_url": "https://github.com/ivanff", "followers_url": "https://api.github.com/users/ivanff/followers", "following_url": "https://api.github.com/users/ivanff/following{/other_user}", "gists_url": "https://api.github.com/users/ivanff/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanff/subscriptions", "organizations_url": "https://api.github.com/users/ivanff/orgs", "repos_url": "https://api.github.com/users/ivanff/repos", "events_url": "https://api.github.com/users/ivanff/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-11T15:03:49Z", "updated_at": "2015-03-01T18:12:51Z", "closed_at": "2015-03-01T18:12:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n<script type=\"text/javascript\" src=\"/static/app/directives/uiTriggerPopover.js\" charset=\"utf-8\">\n</script>\n<script type=\"text/javascript\" src=\"/static/app/directives/uiTriggerPopover.f946e497892b.js\" charset=\"utf-8\">\n</script>\n<script type=\"text/javascript\" src=\"/static/app/directives/uiTriggerPopover.f946e497892b.f946e497892b.js\" charset=\"utf-8\"></script>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/400", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/400/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/400/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/400", "id": 51563267, "node_id": "MDU6SXNzdWU1MTU2MzI2Nw==", "number": 400, "title": "WTTTF!?? /tmp/tmpIsGTwU as location for static files", "user": {"login": "ivanff", "id": 925243, "node_id": "MDQ6VXNlcjkyNTI0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/925243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanff", "html_url": "https://github.com/ivanff", "followers_url": "https://api.github.com/users/ivanff/followers", "following_url": "https://api.github.com/users/ivanff/following{/other_user}", "gists_url": "https://api.github.com/users/ivanff/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanff/subscriptions", "organizations_url": "https://api.github.com/users/ivanff/orgs", "repos_url": "https://api.github.com/users/ivanff/repos", "events_url": "https://api.github.com/users/ivanff/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-10T14:22:25Z", "updated_at": "2014-12-10T17:45:24Z", "closed_at": "2014-12-10T17:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "You are creazy!!!??\n\nif not settings.PIPELINE_ENABLED and location is None:\n            location = tempfile.mkdtemp()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/397", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/397/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/397/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/397", "id": 51205175, "node_id": "MDU6SXNzdWU1MTIwNTE3NQ==", "number": 397, "title": "'compressed' is not a valid tag library: ImportError raised loading pipeline.templatetags.compressed: No module named conf", "user": {"login": "mysteryjeans", "id": 1826883, "node_id": "MDQ6VXNlcjE4MjY4ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1826883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mysteryjeans", "html_url": "https://github.com/mysteryjeans", "followers_url": "https://api.github.com/users/mysteryjeans/followers", "following_url": "https://api.github.com/users/mysteryjeans/following{/other_user}", "gists_url": "https://api.github.com/users/mysteryjeans/gists{/gist_id}", "starred_url": "https://api.github.com/users/mysteryjeans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mysteryjeans/subscriptions", "organizations_url": "https://api.github.com/users/mysteryjeans/orgs", "repos_url": "https://api.github.com/users/mysteryjeans/repos", "events_url": "https://api.github.com/users/mysteryjeans/events{/privacy}", "received_events_url": "https://api.github.com/users/mysteryjeans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-07T02:53:27Z", "updated_at": "2014-12-29T02:38:36Z", "closed_at": "2014-12-29T02:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Import of pipeline.conf in pipeline.templatetags.compressed failing due another module pipeline.templatetags.pipeline.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/395", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/395/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/395/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/395", "id": 50238413, "node_id": "MDU6SXNzdWU1MDIzODQxMw==", "number": 395, "title": "Support CSSO CSS compressor", "user": {"login": "alexhayes", "id": 142916, "node_id": "MDQ6VXNlcjE0MjkxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/142916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhayes", "html_url": "https://github.com/alexhayes", "followers_url": "https://api.github.com/users/alexhayes/followers", "following_url": "https://api.github.com/users/alexhayes/following{/other_user}", "gists_url": "https://api.github.com/users/alexhayes/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhayes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhayes/subscriptions", "organizations_url": "https://api.github.com/users/alexhayes/orgs", "repos_url": "https://api.github.com/users/alexhayes/repos", "events_url": "https://api.github.com/users/alexhayes/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhayes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-26T23:30:55Z", "updated_at": "2015-03-01T18:17:44Z", "closed_at": "2015-03-01T18:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature request to support CSSO - https://github.com/css/csso\n\n(I'll be submitted a pull request shortly).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/394", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/394/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/394/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/394", "id": 50072607, "node_id": "MDU6SXNzdWU1MDA3MjYwNw==", "number": 394, "title": "STATIC_ROOT set to /tmp/ when PIPELINE_ENABLED = False", "user": {"login": "Remiz", "id": 468290, "node_id": "MDQ6VXNlcjQ2ODI5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/468290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Remiz", "html_url": "https://github.com/Remiz", "followers_url": "https://api.github.com/users/Remiz/followers", "following_url": "https://api.github.com/users/Remiz/following{/other_user}", "gists_url": "https://api.github.com/users/Remiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Remiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Remiz/subscriptions", "organizations_url": "https://api.github.com/users/Remiz/orgs", "repos_url": "https://api.github.com/users/Remiz/repos", "events_url": "https://api.github.com/users/Remiz/events{/privacy}", "received_events_url": "https://api.github.com/users/Remiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-11-25T19:29:28Z", "updated_at": "2015-01-23T16:24:22Z", "closed_at": "2015-01-23T16:24:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed since the new 1.4 that STATIC_ROOT is set to /tmp/tmp[random characters] when my settings is indicating PIPELINE_ENABLED = False (which I use for my local development and test runner). That's a behaviour that's not existing in 1.3.\n\nAlso not sure why but it seems my tests are running slower since the new version of pipeline... Maybe it's just me.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/393", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/393/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/393/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/393", "id": 50008969, "node_id": "MDU6SXNzdWU1MDAwODk2OQ==", "number": 393, "title": "SemVer", "user": {"login": "doismellburning", "id": 817118, "node_id": "MDQ6VXNlcjgxNzExOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/817118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doismellburning", "html_url": "https://github.com/doismellburning", "followers_url": "https://api.github.com/users/doismellburning/followers", "following_url": "https://api.github.com/users/doismellburning/following{/other_user}", "gists_url": "https://api.github.com/users/doismellburning/gists{/gist_id}", "starred_url": "https://api.github.com/users/doismellburning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doismellburning/subscriptions", "organizations_url": "https://api.github.com/users/doismellburning/orgs", "repos_url": "https://api.github.com/users/doismellburning/repos", "events_url": "https://api.github.com/users/doismellburning/events{/privacy}", "received_events_url": "https://api.github.com/users/doismellburning/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-25T10:37:15Z", "updated_at": "2015-01-06T13:38:21Z", "closed_at": "2014-11-25T22:30:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd love it if you used [Semantic Versioning](http://semver.org/) please.\n\nSpecifically, if you could bump the _major_ version number when you make incompatible API changes, [like the ones made in the 1.4 release](https://github.com/cyberdelia/django-pipeline/blob/1.4.0/docs/installation.rst#upgrading-to-14)\n\nCheers\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/392", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/392/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/392/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/392", "id": 50007549, "node_id": "MDU6SXNzdWU1MDAwNzU0OQ==", "number": 392, "title": "1.4.x is a bit eager at post-processing files", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-25T10:24:29Z", "updated_at": "2014-11-27T02:29:08Z", "closed_at": "2014-11-27T02:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The same file is post-processed over and over:\n\nfavicon.bc72524b28bb.bc72524b28bb.bc72524b28bb.bc72524b28bb.bc72524b28bb.ico\nfavicon.bc72524b28bb.bc72524b28bb.bc72524b28bb.bc72524b28bb.ico\nfavicon.bc72524b28bb.bc72524b28bb.bc72524b28bb.ico\nfavicon.bc72524b28bb.bc72524b28bb.ico\nfavicon.bc72524b28bb.ico\nfavicon.ico\n\n(This is true for all files, even those that are in STATIC_ROOT but not in STATICFILES_DIRS.)\n\nIs this an issue on my end? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/391", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/391/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/391/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/391", "id": 49958331, "node_id": "MDU6SXNzdWU0OTk1ODMzMQ==", "number": 391, "title": "Can't use django-pipeline > 1.3 due to django-storages (Path issue)", "user": {"login": "schmitch", "id": 1641401, "node_id": "MDQ6VXNlcjE2NDE0MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1641401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schmitch", "html_url": "https://github.com/schmitch", "followers_url": "https://api.github.com/users/schmitch/followers", "following_url": "https://api.github.com/users/schmitch/following{/other_user}", "gists_url": "https://api.github.com/users/schmitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/schmitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schmitch/subscriptions", "organizations_url": "https://api.github.com/users/schmitch/orgs", "repos_url": "https://api.github.com/users/schmitch/repos", "events_url": "https://api.github.com/users/schmitch/events{/privacy}", "received_events_url": "https://api.github.com/users/schmitch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-11-24T23:42:37Z", "updated_at": "2015-03-01T18:18:39Z", "closed_at": "2015-03-01T18:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, currently I can't use django-pipeline 1.4 since I will always ran into the issue that the function `def path(self, name):` is getting triggered. Since I've run a Django-storages backend which doesn't implement the function I can't use django-pipeline anymore.\nVersion 1.3 worked great Version 1.4 broke everything up.\n\nI'm running django-pipeline 1.3, with a sass compressor and a HashedFileMixin and a S3BotoStorage as my S3 Backend. Currently I'm on Python3 and fixed some things of S3BotoStorage and I will fix more and more. But the `def path(self,name):` can't be implemented in remote storages so there should be some other solutions.\n\nIf you need more details just ask.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-pipeline/issues/390", "repository_url": "https://api.github.com/repos/jazzband/django-pipeline", "labels_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/390/comments", "events_url": "https://api.github.com/repos/jazzband/django-pipeline/issues/390/events", "html_url": "https://github.com/jazzband/django-pipeline/issues/390", "id": 49711210, "node_id": "MDU6SXNzdWU0OTcxMTIxMA==", "number": 390, "title": "Document that 1.4.0 requires to run collectstatic with PIPELINE_ENABLED = False", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-21T15:45:08Z", "updated_at": "2014-11-22T08:53:36Z", "closed_at": "2014-11-21T18:41:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "bd6b9d8 (shipped in 1.4.0) collects files into a temporary directory (in /tmp on Unix) when PIPELINE_ENABLED is True. My guess is that the goal is to avoid cluttering the development directories to fix even though #202 is not fixed.\n\nIn any case, the behavior is surprising and likely to cause errors whenever people run collectstatic in production. Sure, the temporary directory is displayed, but I did not notice that until some CSS changes did not appear in production.\n\nDid I miss anything here? (Thanks for django-pipeline!)\n", "performed_via_github_app": null, "score": 1.0}]}