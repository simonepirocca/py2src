{"total_count": 6, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/invl/retry/issues/31", "repository_url": "https://api.github.com/repos/invl/retry", "labels_url": "https://api.github.com/repos/invl/retry/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/invl/retry/issues/31/comments", "events_url": "https://api.github.com/repos/invl/retry/issues/31/events", "html_url": "https://github.com/invl/retry/issues/31", "id": 511101629, "node_id": "MDU6SXNzdWU1MTExMDE2Mjk=", "number": 31, "title": "A Question about this module.", "user": {"login": "JunpeiTakubo", "id": 56808822, "node_id": "MDQ6VXNlcjU2ODA4ODIy", "avatar_url": "https://avatars2.githubusercontent.com/u/56808822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JunpeiTakubo", "html_url": "https://github.com/JunpeiTakubo", "followers_url": "https://api.github.com/users/JunpeiTakubo/followers", "following_url": "https://api.github.com/users/JunpeiTakubo/following{/other_user}", "gists_url": "https://api.github.com/users/JunpeiTakubo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JunpeiTakubo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JunpeiTakubo/subscriptions", "organizations_url": "https://api.github.com/users/JunpeiTakubo/orgs", "repos_url": "https://api.github.com/users/JunpeiTakubo/repos", "events_url": "https://api.github.com/users/JunpeiTakubo/events{/privacy}", "received_events_url": "https://api.github.com/users/JunpeiTakubo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-23T06:21:07Z", "updated_at": "2019-10-23T07:04:12Z", "closed_at": "2019-10-23T07:04:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it is so stupid question because I should read all of the codes and I don't understand this module yet.\r\nBut let me ask about the way retry module works.\r\n\r\nWhat I want to ask about is \"Can I set global variables when retrying happens ?\".\r\nThe variables I want to set is such as \"the number of retrying happened ever\". \r\n\r\nBest Regards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/invl/retry/issues/15", "repository_url": "https://api.github.com/repos/invl/retry", "labels_url": "https://api.github.com/repos/invl/retry/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/invl/retry/issues/15/comments", "events_url": "https://api.github.com/repos/invl/retry/issues/15/events", "html_url": "https://github.com/invl/retry/issues/15", "id": 250425401, "node_id": "MDU6SXNzdWUyNTA0MjU0MDE=", "number": 15, "title": "README isn't true when it says there are no dependencies other than stdlib", "user": {"login": "butla", "id": 1710591, "node_id": "MDQ6VXNlcjE3MTA1OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1710591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/butla", "html_url": "https://github.com/butla", "followers_url": "https://api.github.com/users/butla/followers", "following_url": "https://api.github.com/users/butla/following{/other_user}", "gists_url": "https://api.github.com/users/butla/gists{/gist_id}", "starred_url": "https://api.github.com/users/butla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/butla/subscriptions", "organizations_url": "https://api.github.com/users/butla/orgs", "repos_url": "https://api.github.com/users/butla/repos", "events_url": "https://api.github.com/users/butla/events{/privacy}", "received_events_url": "https://api.github.com/users/butla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T20:17:29Z", "updated_at": "2017-09-21T08:33:24Z", "closed_at": "2017-09-21T08:33:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are `py` and `decorator` in requirements.txt, and I see them being installed when I install this library with pip.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/invl/retry/issues/8", "repository_url": "https://api.github.com/repos/invl/retry", "labels_url": "https://api.github.com/repos/invl/retry/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/invl/retry/issues/8/comments", "events_url": "https://api.github.com/repos/invl/retry/issues/8/events", "html_url": "https://github.com/invl/retry/issues/8", "id": 154236789, "node_id": "MDU6SXNzdWUxNTQyMzY3ODk=", "number": 8, "title": "setup.cfg contains a version, causing pip install directly from github to fail", "user": {"login": "onitake", "id": 371687, "node_id": "MDQ6VXNlcjM3MTY4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/371687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onitake", "html_url": "https://github.com/onitake", "followers_url": "https://api.github.com/users/onitake/followers", "following_url": "https://api.github.com/users/onitake/following{/other_user}", "gists_url": "https://api.github.com/users/onitake/gists{/gist_id}", "starred_url": "https://api.github.com/users/onitake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onitake/subscriptions", "organizations_url": "https://api.github.com/users/onitake/orgs", "repos_url": "https://api.github.com/users/onitake/repos", "events_url": "https://api.github.com/users/onitake/events{/privacy}", "received_events_url": "https://api.github.com/users/onitake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-11T12:56:33Z", "updated_at": "2016-05-12T01:52:32Z", "closed_at": "2016-05-12T01:52:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use pip to install the `retry` version from Github, I get the following error:\n\n```\n  Updating ./src/decorator clone\n    Complete output from command python setup.py egg_info:\n    ERROR:root:Error parsing\n    Traceback (most recent call last):\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/core.py\", line 111, in pbr\n        attrs = util.cfg_to_args(path, dist.script_args)\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/util.py\", line 246, in cfg_to_args\n        pbr.hooks.setup_hook(config)\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/hooks/__init__.py\", line 25, in setup_hook\n        metadata_config.run()\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/hooks/base.py\", line 27, in run\n        self.hook()\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/hooks/metadata.py\", line 26, in hook\n        self.config['name'], self.config.get('version', None))\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/packaging.py\", line 701, in get_version\n        version = _get_version_from_git(pre_version)\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/packaging.py\", line 641, in _get_version_from_git\n        result = _get_version_from_git_target(git_dir, target_version)\n      File \"/tmp/src/decorator/.eggs/pbr-1.9.1-py2.6.egg/pbr/packaging.py\", line 603, in _get_version_from_git_target\n        dict(new=new_version, target=target_version))\n    ValueError: git history requires a target version of pbr.version.SemanticVersion(0.9.2), but target version is pbr.version.SemanticVersion(0.9.1)\n    error in setup command: Error parsing /tmp/src/decorator/setup.cfg: ValueError: git history requires a target version of pbr.version.SemanticVersion(0.9.2), but target version is pbr.version.SemanticVersion(0.9.1)\n```\n\nThis happens because setup.cfg mentions an explicit version number, but the current commit is ahead of the last version tag.\n\nCould you remove this version specifier (like it was done [here](https://bugs.launchpad.net/python-manilaclient/+bug/1395067)) or release a new version soon? I'm currently stuck in dependency limbo because of the `decorator`<4.0.0 limitation in 0.9.1.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/invl/retry/issues/6", "repository_url": "https://api.github.com/repos/invl/retry", "labels_url": "https://api.github.com/repos/invl/retry/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/invl/retry/issues/6/comments", "events_url": "https://api.github.com/repos/invl/retry/issues/6/events", "html_url": "https://github.com/invl/retry/issues/6", "id": 112873229, "node_id": "MDU6SXNzdWUxMTI4NzMyMjk=", "number": 6, "title": "requirement of decorator>=3.4.2,<4.0.0", "user": {"login": "citterio", "id": 2517369, "node_id": "MDQ6VXNlcjI1MTczNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2517369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/citterio", "html_url": "https://github.com/citterio", "followers_url": "https://api.github.com/users/citterio/followers", "following_url": "https://api.github.com/users/citterio/following{/other_user}", "gists_url": "https://api.github.com/users/citterio/gists{/gist_id}", "starred_url": "https://api.github.com/users/citterio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/citterio/subscriptions", "organizations_url": "https://api.github.com/users/citterio/orgs", "repos_url": "https://api.github.com/users/citterio/repos", "events_url": "https://api.github.com/users/citterio/events{/privacy}", "received_events_url": "https://api.github.com/users/citterio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-22T19:26:50Z", "updated_at": "2016-05-11T14:01:08Z", "closed_at": "2016-05-11T14:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the issue with decorator v. 4.0.0 and above? I have some systems with decorator 4.0.2 installed as dependency by some application (I don't know which one) so I'd prefer to keep that newer version if possible.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/invl/retry/issues/3", "repository_url": "https://api.github.com/repos/invl/retry", "labels_url": "https://api.github.com/repos/invl/retry/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/invl/retry/issues/3/comments", "events_url": "https://api.github.com/repos/invl/retry/issues/3/events", "html_url": "https://github.com/invl/retry/issues/3", "id": 75688542, "node_id": "MDU6SXNzdWU3NTY4ODU0Mg==", "number": 3, "title": "What is the proper way to decorate the methods of a class?", "user": {"login": "jmkacz", "id": 126422, "node_id": "MDQ6VXNlcjEyNjQyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/126422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmkacz", "html_url": "https://github.com/jmkacz", "followers_url": "https://api.github.com/users/jmkacz/followers", "following_url": "https://api.github.com/users/jmkacz/following{/other_user}", "gists_url": "https://api.github.com/users/jmkacz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmkacz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmkacz/subscriptions", "organizations_url": "https://api.github.com/users/jmkacz/orgs", "repos_url": "https://api.github.com/users/jmkacz/repos", "events_url": "https://api.github.com/users/jmkacz/events{/privacy}", "received_events_url": "https://api.github.com/users/jmkacz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-05-12T18:10:22Z", "updated_at": "2015-10-06T19:39:56Z", "closed_at": "2015-05-20T14:49:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "This question is involves v0.8.1 versus v0.9.0, and class decoration.\n\nWith v0.8.1 and no decorator library, the following worked. Upgrading to v0.9.0 and installing the decorator library fails, because the behavior of the fallback decorator logic from v0.8.1 is different from the behavior of the decorator library.\n\nWhat is the proper way to decorate the methods of a class, using the retry library?\n\n```\nimport itertools\nfrom retry import retry\nfrom sailthru.sailthru_client import SailthruClient\nfrom sailthru.sailthru_error import SailthruClientError\n\nRETRIES_TRIES = 20\nRETRIES_DELAY = 0.5\nRETRIES_MAX_DELAY = 1.0\nRETRIES_BACKOFF = 2\nRETRIES_JITTER = (0, 1)\n\n# taken from http://stackoverflow.com/a/6307868\ndef for_all_methods(decorator):\n        def decorate(cls):\n                # Collect all methods from the given class, and the classes\n                # it inherits from. Then, discard \"magic\" methods.\n                attrs = [attr for attr in itertools.chain(*[other.__dict__.keys() for other in cls.__mro__]) if not (attr.startswith('__') and attr.endswith('__'))]\n                for attr in attrs:\n                        if callable(getattr(cls, attr)):\n                                setattr(cls, attr, decorator(getattr(cls, attr)))\n                return cls\n        return decorate\n\n@for_all_methods(retry(SailthruClientError, RETRIES_TRIES, RETRIES_DELAY, RETRIES_MAX_DELAY, RETRIES_BACKOFF, RETRIES_JITTER))\nclass RobustSailthruClient(SailthruClient):\n        pass\n```\n\n```\nTraceback (most recent call last):\n  File \"foo.py\", line 30, in <module>\n    class RobustSailthruClient(SailthruClient):\n  File \"foo.py\", line 25, in decorate\n    setattr(cls, attr, decorator(getattr(cls, attr)))\n  File \"<string>\", line 2, in retry_decorator\n  File \"/home/jon/.virtualenvs/ei.new/lib/python2.6/site-packages/decorator.py\", line 213, in decorator\n    evaldict, __wrapped__=func)\n  File \"/home/jon/.virtualenvs/ei.new/lib/python2.6/site-packages/decorator.py\", line 196, in create\n    self = cls(func, name, signature, defaults, doc, module)\n  File \"/home/jon/.virtualenvs/ei.new/lib/python2.6/site-packages/decorator.py\", line 131, in __init__\n    raise TypeError('You are decorating a non function: %s' % func)\nTypeError: You are decorating a non function: <unbound method RobustSailthruClient.cancel_blast>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/invl/retry/issues/2", "repository_url": "https://api.github.com/repos/invl/retry", "labels_url": "https://api.github.com/repos/invl/retry/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/invl/retry/issues/2/comments", "events_url": "https://api.github.com/repos/invl/retry/issues/2/events", "html_url": "https://github.com/invl/retry/issues/2", "id": 71161528, "node_id": "MDU6SXNzdWU3MTE2MTUyOA==", "number": 2, "title": "Retry is package as a development version", "user": {"login": "rgreinho", "id": 6969134, "node_id": "MDQ6VXNlcjY5NjkxMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6969134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgreinho", "html_url": "https://github.com/rgreinho", "followers_url": "https://api.github.com/users/rgreinho/followers", "following_url": "https://api.github.com/users/rgreinho/following{/other_user}", "gists_url": "https://api.github.com/users/rgreinho/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgreinho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgreinho/subscriptions", "organizations_url": "https://api.github.com/users/rgreinho/orgs", "repos_url": "https://api.github.com/users/rgreinho/repos", "events_url": "https://api.github.com/users/rgreinho/events{/privacy}", "received_events_url": "https://api.github.com/users/rgreinho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T02:59:51Z", "updated_at": "2015-04-27T03:20:02Z", "closed_at": "2015-04-27T03:20:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The retry package on the PyPI is marked as a development version (denoted by `.dev83` at the end of the name). The actual name of the package should be `retry-0.9.0-py2.py3-none-any.whl`\n\nOne way to repackage it properly is the following:\n\n``` bash\ngit tag -a 0.9.0 -m \"v0.9.0\" d56f5f9\ngit checkout -b v0.9.0 0.9.0\npython3 setup.py sdist bdist_wheel\n```\n", "performed_via_github_app": null, "score": 1.0}]}