{"total_count": 120, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/222", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/222/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/222/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/222", "id": 675752811, "node_id": "MDU6SXNzdWU2NzU3NTI4MTE=", "number": 222, "title": "Ignoring intentional unreachable if statements? (if False: ...)", "user": {"login": "jingw", "id": 2019426, "node_id": "MDQ6VXNlcjIwMTk0MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2019426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jingw", "html_url": "https://github.com/jingw", "followers_url": "https://api.github.com/users/jingw/followers", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "organizations_url": "https://api.github.com/users/jingw/orgs", "repos_url": "https://api.github.com/users/jingw/repos", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "received_events_url": "https://api.github.com/users/jingw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-09T18:57:36Z", "updated_at": "2020-08-09T21:57:40Z", "closed_at": "2020-08-09T21:57:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would you feel about loosening `_handle_conditional_node` to ignore cases where the unreachable branch is obviously intentional? When running vulture on my giant codebase, I found that most of the unreachable code flagged by vulture was of the form `if False` or `if False and other_conditions`, though it did also flag buggy code of the form `if x == 1 or 2`.\r\n\r\nConcretely, I propose ignoring the following patterns at the top level in _handle_conditional_node\r\n```\r\nFalse\r\nFalse and ...\r\nTrue\r\nTrue or ...\r\n```\r\nLess obvious cases where the True/False is somewhere in the middle would continue to be reported, as done currently.\r\n\r\nI can throw up a PR if you like the idea.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/221", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/221/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/221/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/221", "id": 675574012, "node_id": "MDU6SXNzdWU2NzU1NzQwMTI=", "number": 221, "title": "False positive due to distinction between used_attrs and used_names", "user": {"login": "jingw", "id": 2019426, "node_id": "MDQ6VXNlcjIwMTk0MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2019426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jingw", "html_url": "https://github.com/jingw", "followers_url": "https://api.github.com/users/jingw/followers", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "organizations_url": "https://api.github.com/users/jingw/orgs", "repos_url": "https://api.github.com/users/jingw/repos", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "received_events_url": "https://api.github.com/users/jingw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-08T19:11:40Z", "updated_at": "2020-08-15T08:20:52Z", "closed_at": "2020-08-15T08:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following code in two files:\r\n```\r\n# module.py\r\nsome_module_var = 1\r\nprint(some_module_var)\r\n\r\n# module_user.py\r\nimport module\r\nmodule.some_module_var = 2\r\n```\r\n\r\nRunning vulture complains that `module.some_module_var` is an unused attribute\r\n```\r\n$ vulture module.py module_user.py \r\nmodule_user.py:3: unused attribute 'some_module_var' (60% confidence)\r\n```\r\n\r\nHow do you feel about this? On one hand, in practice, the cases where I've seen this false positive were test cases that should have been refactored to use `mock.patch` instead of directly setting module attributes. On the other hand, it's still a legitimate false positive, and someone could conceivably write non-test code like this.\r\n\r\nI imagine other classes of false positives may be caused by separating attrs and names. One example that comes to mind is\r\n```\r\nclass Foobar:\r\n    def my_method(self):\r\n        pass\r\n\r\n    deprecated_name_for_my_method = my_method\r\n\r\nFoobar().deprecated_name_for_my_method()\r\n```\r\n\r\n```\r\nfunc.py:2: unused method 'my_method' (60% confidence)\r\n```\r\n\r\nFixing this can be done by combining used_attrs with used_names in unused_attrs, though that largely defeats the point of separating these. I suppose it's not crazy to collapse them into a single used_names though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/217", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/217/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/217/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/217", "id": 663988456, "node_id": "MDU6SXNzdWU2NjM5ODg0NTY=", "number": 217, "title": "Treat non-python files as a string constant", "user": {"login": "colinc719", "id": 16266523, "node_id": "MDQ6VXNlcjE2MjY2NTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/16266523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinc719", "html_url": "https://github.com/colinc719", "followers_url": "https://api.github.com/users/colinc719/followers", "following_url": "https://api.github.com/users/colinc719/following{/other_user}", "gists_url": "https://api.github.com/users/colinc719/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinc719/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinc719/subscriptions", "organizations_url": "https://api.github.com/users/colinc719/orgs", "repos_url": "https://api.github.com/users/colinc719/repos", "events_url": "https://api.github.com/users/colinc719/events{/privacy}", "received_events_url": "https://api.github.com/users/colinc719/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T19:11:58Z", "updated_at": "2020-07-22T20:18:27Z", "closed_at": "2020-07-22T20:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it make sense to have the text of non-python files still go through `Vulture._handle_string`?  For instance,\r\n```python\r\nclass Temp:\r\n    def __init__(self):\r\n        self.arg = None\r\n\r\n\r\npattern = '{self.arg!s}'\r\nassert pattern.format(self=Temp())\r\n```\r\ncorrectly produces no problems, but if you move the pattern to a separate txt file\r\n\r\ntemp.txt:\r\n```\r\n{self.arg!s}\r\n```\r\n\r\ntemp.py\r\n```python\r\nclass Temp:\r\n    def __init__(self):\r\n        self.arg = None\r\n\r\n\r\npattern = open('temp.txt').read()\r\nassert pattern.format(self=Temp())\r\n```\r\nIt will produce \"unused attribute 'arg'\".\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/216", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/216/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/216/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/216", "id": 663954096, "node_id": "MDU6SXNzdWU2NjM5NTQwOTY=", "number": 216, "title": "Support Forward References for Annotations", "user": {"login": "colinc719", "id": 16266523, "node_id": "MDQ6VXNlcjE2MjY2NTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/16266523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinc719", "html_url": "https://github.com/colinc719", "followers_url": "https://api.github.com/users/colinc719/followers", "following_url": "https://api.github.com/users/colinc719/following{/other_user}", "gists_url": "https://api.github.com/users/colinc719/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinc719/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinc719/subscriptions", "organizations_url": "https://api.github.com/users/colinc719/orgs", "repos_url": "https://api.github.com/users/colinc719/repos", "events_url": "https://api.github.com/users/colinc719/events{/privacy}", "received_events_url": "https://api.github.com/users/colinc719/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-22T18:12:15Z", "updated_at": "2020-08-11T21:23:52Z", "closed_at": "2020-08-11T21:23:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When vulture is run on the code\r\n\r\n```python\r\nfrom collections import Sequence\r\n\r\n\r\ndef temp(arg: \"Sequence\"):\r\n    assert not arg\r\n\r\n\r\nif __name__ == '__main__':\r\n    temp([])\r\n```\r\n\r\nproduces \"unused import 'Sequence'\"\r\n\r\nI would expect it to see that Sequence is used as a forward reference (https://www.python.org/dev/peps/pep-0484/#forward-references) in temp.\r\n\r\nI'm running vulture 1.5.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/210", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/210/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/210/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/210", "id": 636365368, "node_id": "MDU6SXNzdWU2MzYzNjUzNjg=", "number": 210, "title": "Support reading options from setup.cfg", "user": {"login": "psidex", "id": 14183909, "node_id": "MDQ6VXNlcjE0MTgzOTA5", "avatar_url": "https://avatars2.githubusercontent.com/u/14183909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psidex", "html_url": "https://github.com/psidex", "followers_url": "https://api.github.com/users/psidex/followers", "following_url": "https://api.github.com/users/psidex/following{/other_user}", "gists_url": "https://api.github.com/users/psidex/gists{/gist_id}", "starred_url": "https://api.github.com/users/psidex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psidex/subscriptions", "organizations_url": "https://api.github.com/users/psidex/orgs", "repos_url": "https://api.github.com/users/psidex/repos", "events_url": "https://api.github.com/users/psidex/events{/privacy}", "received_events_url": "https://api.github.com/users/psidex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T15:55:40Z", "updated_at": "2020-06-10T23:21:22Z", "closed_at": "2020-06-10T23:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "From looking at multiple python tools (flake8, mypy, pytest, to name a few), the `setup.cfg` file seems to be one of the most widely supported for saving configurations.\r\n\r\nThe Python standard library contains [configparser](https://docs.python.org/3/library/configparser.html), so there is no need for any dependencies.\r\n\r\nI imagine something like this:\r\n\r\n```cfg\r\n[vulture]\r\nexclude=*settings.py,docs/\r\nignore-names=foo*,ba[rz]\r\nmin-confidence=100\r\n```\r\n\r\nOr maybe `[tool:vulture]` instead?\r\n\r\nAnd running it like this:\r\n\r\n`vulture --config-file ./setup.cfg ./myscript.py`\r\n\r\nI'm happy to attempt to implement it myself and create a pull request if you want me to \ud83d\ude04 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/206", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/206/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/206/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/206", "id": 621044749, "node_id": "MDU6SXNzdWU2MjEwNDQ3NDk=", "number": 206, "title": "`#noqa` does not ignore `unsatisfiable 'if' condition`", "user": {"login": "CristhianMotoche", "id": 8370088, "node_id": "MDQ6VXNlcjgzNzAwODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8370088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CristhianMotoche", "html_url": "https://github.com/CristhianMotoche", "followers_url": "https://api.github.com/users/CristhianMotoche/followers", "following_url": "https://api.github.com/users/CristhianMotoche/following{/other_user}", "gists_url": "https://api.github.com/users/CristhianMotoche/gists{/gist_id}", "starred_url": "https://api.github.com/users/CristhianMotoche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CristhianMotoche/subscriptions", "organizations_url": "https://api.github.com/users/CristhianMotoche/orgs", "repos_url": "https://api.github.com/users/CristhianMotoche/repos", "events_url": "https://api.github.com/users/CristhianMotoche/events{/privacy}", "received_events_url": "https://api.github.com/users/CristhianMotoche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T14:54:24Z", "updated_at": "2020-05-19T15:10:16Z", "closed_at": "2020-05-19T15:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI added a conditional that won't be executed because I only wrote it to get a reference to a type for a function. This is a trick that the [`mypy`](https://github.com/python/mypy/issues/1597#issuecomment-222795658) community suggest to avoid circular dependencies.\r\n\r\nHowever, I got an `unsatisfiable 'if' condition (100% confidence)` error, which makes sense. So, I added `noqa` expecting to ignore it, but it didn't.\r\n\r\nMinimum code to reproduce:\r\n\r\n```py\r\n# ex.py\r\nif False:  # noqa\r\n    from foo import Foo\r\n\r\n\r\ndef createFoo(foo: Foo) -> Foo:\r\n    return Foo()\r\n\r\n# foo.py\r\nclass Foo:\r\n    pass\r\n```\r\n\r\nVulture results:\r\n```\r\n$ vulture ex.py\r\nex.py:1: unsatisfiable 'if' condition (100% confidence)\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/205", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/205/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/205/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/205", "id": 616385088, "node_id": "MDU6SXNzdWU2MTYzODUwODg=", "number": 205, "title": "Can't ignore with # noqa", "user": {"login": "nameer", "id": 3931725, "node_id": "MDQ6VXNlcjM5MzE3MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3931725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nameer", "html_url": "https://github.com/nameer", "followers_url": "https://api.github.com/users/nameer/followers", "following_url": "https://api.github.com/users/nameer/following{/other_user}", "gists_url": "https://api.github.com/users/nameer/gists{/gist_id}", "starred_url": "https://api.github.com/users/nameer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nameer/subscriptions", "organizations_url": "https://api.github.com/users/nameer/orgs", "repos_url": "https://api.github.com/users/nameer/repos", "events_url": "https://api.github.com/users/nameer/events{/privacy}", "received_events_url": "https://api.github.com/users/nameer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-12T06:04:48Z", "updated_at": "2020-06-09T12:56:32Z", "closed_at": "2020-05-12T07:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "To understand the problem, here's a file `file.py`\r\n```python\r\n import os  # noqa                 \r\n \r\n class Greeter:  # noqa: V102\r\n     def greet(self):  # noqa: V103\r\n         print(\"Hi\")\r\n```\r\n\r\nAs you can see, I have commented out the lines for vulture to ignore. Running `vulture file.py` is expected to pass. But this is still producing this error:\r\n\r\n```\r\nfile.py:1: unused import 'os' (90% confidence)\r\nfile.py:4: unused class 'Greeter' (60% confidence)\r\nfile.py:5: unused function 'greet' (60% confidence)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/204", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/204/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/204/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/204", "id": 609685961, "node_id": "MDU6SXNzdWU2MDk2ODU5NjE=", "number": 204, "title": "Stop reporting unused `cls` variable in class methods", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T07:57:17Z", "updated_at": "2020-04-30T09:04:20Z", "closed_at": "2020-04-30T09:04:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "vulture correctly ignores an unused `self` variable in a method, but fails to ignore `cls` in class methods.\r\n\r\n## Steps to reproduce\r\n\r\n```\r\nclass MyClass:\r\n    @classmethod\r\n    def my_class_method(cls):\r\n        print(\"not using cls\")\r\n\r\n\r\nMyClass.my_class_method()\r\n```\r\n\r\n## Actual output\r\n\r\n```\r\nt.py:3: unused variable 'cls' (100% confidence)\r\n```\r\n\r\n## Expected output\r\n\r\nNothing, like for `self`.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/203", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/203/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/203/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/203", "id": 607993847, "node_id": "MDU6SXNzdWU2MDc5OTM4NDc=", "number": 203, "title": "Calling parent class __init__ in PY2 style was hidden", "user": {"login": "milton0825", "id": 6065051, "node_id": "MDQ6VXNlcjYwNjUwNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6065051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milton0825", "html_url": "https://github.com/milton0825", "followers_url": "https://api.github.com/users/milton0825/followers", "following_url": "https://api.github.com/users/milton0825/following{/other_user}", "gists_url": "https://api.github.com/users/milton0825/gists{/gist_id}", "starred_url": "https://api.github.com/users/milton0825/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milton0825/subscriptions", "organizations_url": "https://api.github.com/users/milton0825/orgs", "repos_url": "https://api.github.com/users/milton0825/repos", "events_url": "https://api.github.com/users/milton0825/events{/privacy}", "received_events_url": "https://api.github.com/users/milton0825/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T03:20:13Z", "updated_at": "2020-04-28T07:51:08Z", "closed_at": "2020-04-28T07:51:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "We found that if a class that calls its parent class `__init__` method using the old PY2 syntax. That class is classified as used even though it is not used elsewhere.\r\n\r\n```\r\nclass AthenaOperator(BaseOperator):\r\n\r\n    def __init__(self,\r\n                 sql,  # type: str\r\n                 *args,  # type: List[Any]\r\n                 **kwargs  # type: Dict[Any, Any]\r\n                 ):\r\n        super(AthenaOperator, self).__init__(*args, **kwargs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/199", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/199/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/199/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/199", "id": 580119238, "node_id": "MDU6SXNzdWU1ODAxMTkyMzg=", "number": 199, "title": "methods called from decorator incorrectly reported", "user": {"login": "dmcnulla", "id": 338813, "node_id": "MDQ6VXNlcjMzODgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/338813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmcnulla", "html_url": "https://github.com/dmcnulla", "followers_url": "https://api.github.com/users/dmcnulla/followers", "following_url": "https://api.github.com/users/dmcnulla/following{/other_user}", "gists_url": "https://api.github.com/users/dmcnulla/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmcnulla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmcnulla/subscriptions", "organizations_url": "https://api.github.com/users/dmcnulla/orgs", "repos_url": "https://api.github.com/users/dmcnulla/repos", "events_url": "https://api.github.com/users/dmcnulla/events{/privacy}", "received_events_url": "https://api.github.com/users/dmcnulla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-12T17:59:05Z", "updated_at": "2020-04-09T14:19:26Z", "closed_at": "2020-03-29T16:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom decorator.py import mydectorator\r\n\r\nclass myclass:\r\n    @my_decorator\r\n    def caller():\r\n        pass\r\n\r\n    def starter():\r\n        do_something()\r\n```\r\n```\r\nfrom functools import wraps:\r\ndef mydecorator():\r\n    @wraps(func)\r\n    def inner():\r\n        self.starter()\r\n\r\n    return inner\r\n```\r\nThe decorator code is in a different path than I am checking. In this case, starter() is reported as potentially unused. I can cognitively solve that, but maybe you could extend to catch that? This is similar to #7, sorry if it's a duplicate.\r\n\r\nBTW, awesome library, I love it.\r\n\r\nBTW2, I removed the line numbers in the whitelist, still works. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/197", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/197/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/197/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/197", "id": 578975790, "node_id": "MDU6SXNzdWU1Nzg5NzU3OTA=", "number": 197, "title": "[Feature Request] Warn about empty files", "user": {"login": "dosisod", "id": 39638017, "node_id": "MDQ6VXNlcjM5NjM4MDE3", "avatar_url": "https://avatars3.githubusercontent.com/u/39638017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dosisod", "html_url": "https://github.com/dosisod", "followers_url": "https://api.github.com/users/dosisod/followers", "following_url": "https://api.github.com/users/dosisod/following{/other_user}", "gists_url": "https://api.github.com/users/dosisod/gists{/gist_id}", "starred_url": "https://api.github.com/users/dosisod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dosisod/subscriptions", "organizations_url": "https://api.github.com/users/dosisod/orgs", "repos_url": "https://api.github.com/users/dosisod/repos", "events_url": "https://api.github.com/users/dosisod/events{/privacy}", "received_events_url": "https://api.github.com/users/dosisod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-11T02:56:01Z", "updated_at": "2020-03-11T15:32:27Z", "closed_at": "2020-03-11T15:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the `.py` file below:\r\n```py\r\n\"\"\"\r\ndef old_code():\r\n    print(\"delete me!\")\r\n\"\"\"\r\n```\r\nIt clearly was commented out, and then forgotten about. It probably isn't mean to be there anymore.\r\n\r\nObviously, there are cases where you would want empty python files, for example, `__init__.py`. In general though, it would be better to tell the user about it.\r\n\r\nOpen to ideas!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/192", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/192/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/192/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/192", "id": 573996449, "node_id": "MDU6SXNzdWU1NzM5OTY0NDk=", "number": 192, "title": "\"unused import\" false positives", "user": {"login": "chris-rands", "id": 20436557, "node_id": "MDQ6VXNlcjIwNDM2NTU3", "avatar_url": "https://avatars3.githubusercontent.com/u/20436557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-rands", "html_url": "https://github.com/chris-rands", "followers_url": "https://api.github.com/users/chris-rands/followers", "following_url": "https://api.github.com/users/chris-rands/following{/other_user}", "gists_url": "https://api.github.com/users/chris-rands/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-rands/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-rands/subscriptions", "organizations_url": "https://api.github.com/users/chris-rands/orgs", "repos_url": "https://api.github.com/users/chris-rands/repos", "events_url": "https://api.github.com/users/chris-rands/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-rands/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-02T14:04:07Z", "updated_at": "2020-03-31T13:56:30Z", "closed_at": "2020-03-31T13:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the nice tool. I've encountered a few \"unused import\" false positives recently of 2 types. 1st case is where the import is merely tested, e.g.:\r\n\r\n```\r\ntry:\r\n    import a\r\nexcept ImportError:\r\n    print(\"a not available\")\r\n```\r\n\r\n2nd case is in `__init__.py` files, where it is common to import modules that are not directly used in the file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/190", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/190/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/190/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/190", "id": 572082756, "node_id": "MDU6SXNzdWU1NzIwODI3NTY=", "number": 190, "title": "\"Unreachable code after _name_\" entries cannot be used in whitelist", "user": {"login": "HitLuca", "id": 7645621, "node_id": "MDQ6VXNlcjc2NDU2MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7645621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HitLuca", "html_url": "https://github.com/HitLuca", "followers_url": "https://api.github.com/users/HitLuca/followers", "following_url": "https://api.github.com/users/HitLuca/following{/other_user}", "gists_url": "https://api.github.com/users/HitLuca/gists{/gist_id}", "starred_url": "https://api.github.com/users/HitLuca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HitLuca/subscriptions", "organizations_url": "https://api.github.com/users/HitLuca/orgs", "repos_url": "https://api.github.com/users/HitLuca/repos", "events_url": "https://api.github.com/users/HitLuca/events{/privacy}", "received_events_url": "https://api.github.com/users/HitLuca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-27T13:26:05Z", "updated_at": "2020-03-31T15:48:12Z", "closed_at": "2020-03-31T15:48:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "After running vulture in order to generate a whitelist with\r\n\r\n`vulture my_module --make-whitelist > whitelist.py`\r\n\r\nI noticed that a class of entries cannot silence the script's output (`vulture my_module whitelist.py`), specifically the unreachable code ones.\r\n\r\n`# unreachable code after '_name_' (my_module/.../name.py:###)`\r\n\r\nI didn't find a way to reliably suppress such outputs when running vulture, I tried to remove the comment `#`, but that breaks the whitelist parsing.\r\n\r\nNot that it matters too much for me, I only have 3 entries of that sort, but for large projects it could be a bigger issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/188", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/188/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/188/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/188", "id": 559976679, "node_id": "MDU6SXNzdWU1NTk5NzY2Nzk=", "number": 188, "title": "Fix simple typo: commited -> committed", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-04T21:02:12Z", "updated_at": "2020-02-05T16:52:08Z", "closed_at": "2020-02-05T16:52:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a small typo in CONTRIBUTING.rst.\nShould read `committed` rather than `commited`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/186", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/186/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/186/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/186", "id": 559975775, "node_id": "MDU6SXNzdWU1NTk5NzU3NzU=", "number": 186, "title": "Fix simple typo: occuring -> occurring", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-04T21:00:28Z", "updated_at": "2020-02-05T16:52:13Z", "closed_at": "2020-02-05T16:52:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a small typo in TODO.rst.\nShould read `occurring` rather than `occuring`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/183", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/183/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/183/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/183", "id": 551507041, "node_id": "MDU6SXNzdWU1NTE1MDcwNDE=", "number": 183, "title": "False Positive In String Formatter", "user": {"login": "jbylund", "id": 3237156, "node_id": "MDQ6VXNlcjMyMzcxNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3237156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbylund", "html_url": "https://github.com/jbylund", "followers_url": "https://api.github.com/users/jbylund/followers", "following_url": "https://api.github.com/users/jbylund/following{/other_user}", "gists_url": "https://api.github.com/users/jbylund/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbylund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbylund/subscriptions", "organizations_url": "https://api.github.com/users/jbylund/orgs", "repos_url": "https://api.github.com/users/jbylund/repos", "events_url": "https://api.github.com/users/jbylund/events{/privacy}", "received_events_url": "https://api.github.com/users/jbylund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T16:19:16Z", "updated_at": "2020-01-22T19:05:29Z", "closed_at": "2020-01-22T19:05:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Running vulture over \r\n\r\n```python\r\nfrom string import Formatter\r\n\r\nclass StrictFormatter(Formatter):\r\n    def check_unused_args(self, used_args, _args, kwargs):\r\n        \"\"\"Raise exception if any keyword arguments are unused.\"\"\"\r\n        unused_kwargs = set(kwargs) - set(used_args)\r\n        if unused_kwargs:\r\n            raise AssertionError(\r\n                \"{} {} not used in formatting string.\".format(\r\n                    sorted(unused_kwargs),\r\n                    [\"was\", \"were\"][min(1, len(unused_kwargs)-1)]\r\n                )\r\n            )\r\n\r\ndef main():\r\n    StrictFormatter().format(\"xxx\", foo=\"foo\")\r\n\r\nif \"__main__\" == __name__:\r\n    main()\r\n```\r\ngives \r\n\r\n```\r\nvulture_check.py:4: unused function 'check_unused_args' (60% confidence)\r\n```\r\n\r\nbut when you run it you see that the code is in fact being exercised.  Thoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/182", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/182/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/182/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/182", "id": 536569990, "node_id": "MDU6SXNzdWU1MzY1Njk5OTA=", "number": 182, "title": "Change the whitelist file extension in readme", "user": {"login": "impredicative", "id": 566650, "node_id": "MDQ6VXNlcjU2NjY1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/566650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/impredicative", "html_url": "https://github.com/impredicative", "followers_url": "https://api.github.com/users/impredicative/followers", "following_url": "https://api.github.com/users/impredicative/following{/other_user}", "gists_url": "https://api.github.com/users/impredicative/gists{/gist_id}", "starred_url": "https://api.github.com/users/impredicative/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/impredicative/subscriptions", "organizations_url": "https://api.github.com/users/impredicative/orgs", "repos_url": "https://api.github.com/users/impredicative/repos", "events_url": "https://api.github.com/users/impredicative/events{/privacy}", "received_events_url": "https://api.github.com/users/impredicative/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-12-11T19:29:48Z", "updated_at": "2020-04-02T18:57:08Z", "closed_at": "2020-04-02T15:05:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example `vulture mydir --make-whitelist > whitelist.py` in the readme typically creates an invalid Python file since it lacks imports. Such a file would create a problem for multiple other static analyzers that would find it to be grossly invalid Python code. It would be better if this example were updated to to use the extension `.txt` instead as below:\r\n\r\n```bash\r\n$ vulture mydir --make-whitelist > vulture.txt\r\n$ vulture mydir vulture.txt\r\n```\r\n\r\nThe `# Vulture whitelist:` header can be added to the created file. In this way, the Python imports can continue to be missing in this whitelist file, and the other static analyzers won't have any issue with it.\r\n\r\n---\r\n\r\nI'm actually quite displeased with the current end-user whitelist setup. It doesn't seem well thought through at all. If I use a .py whitelist file with the appropriate imports, then vulture complains that the imports are unused. If I use a .txt whitelist file, then it's not possible to define which file each exclusion is supposed to have been imported from, making it a non-specific exclusion. If for example, I specify \"my_foo_pkg.my_sub_pkg.xyzz\" in a .txt file, then \"my_foo_pkg.my_sub_pkg\" are not checked.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/180", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/180/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/180/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/180", "id": 513529715, "node_id": "MDU6SXNzdWU1MTM1Mjk3MTU=", "number": 180, "title": "Add reference to python-dead", "user": {"login": "thisch", "id": 206581, "node_id": "MDQ6VXNlcjIwNjU4MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/206581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisch", "html_url": "https://github.com/thisch", "followers_url": "https://api.github.com/users/thisch/followers", "following_url": "https://api.github.com/users/thisch/following{/other_user}", "gists_url": "https://api.github.com/users/thisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisch/subscriptions", "organizations_url": "https://api.github.com/users/thisch/orgs", "repos_url": "https://api.github.com/users/thisch/repos", "events_url": "https://api.github.com/users/thisch/events{/privacy}", "received_events_url": "https://api.github.com/users/thisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T20:09:27Z", "updated_at": "2019-10-29T18:50:51Z", "closed_at": "2019-10-29T11:58:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please add a reference to python-dead in the Readme\r\n\r\nhttps://github.com/asottile/dead", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/178", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/178/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/178/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/178", "id": 512468337, "node_id": "MDU6SXNzdWU1MTI0NjgzMzc=", "number": 178, "title": "Detect unreachable code in conditional expressions", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1896388714, "node_id": "MDU6TGFiZWwxODk2Mzg4NzE0", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/good%20first%20issue", "name": "good first issue", "color": "3902ff", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-25T11:41:06Z", "updated_at": "2020-06-02T08:10:22Z", "closed_at": "2020-06-02T08:10:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Extending the  discussion from https://github.com/jendrikseipp/vulture/issues/177#issuecomment-546272060, we would need a method to visit the `IfExp` node.\r\n\r\nIMHO, we can define it the same way we define `visit_If`:\r\n\r\n```python\r\ndef visit_IfExp(self, node):\r\n    self._handle_conditional_node(node, 'ternary')\r\n```\r\n\r\nThen, we would also need to change `_handle_conditional_node` method:\r\n\r\n```python\r\nif utils.condition_is_always_false(node.test):\r\n    # node.body in the case of ast.IfExp points out to the next instruction\r\n    # In other cases, it's generally a list of instructions.\r\n    last_node = node.body if isinstance(node, ast.IfExp) else node.body[-1]\r\n    self._define(self.unreachable_code, name, node, last_node, # ...)\r\nelse:\r\n    else_body = [node.orelse] if isinstance(node, ast.IfExp) else node.orelse\r\n    # ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/177", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/177/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/177/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/177", "id": 512396990, "node_id": "MDU6SXNzdWU1MTIzOTY5OTA=", "number": 177, "title": "Add test cases for f-strings", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T09:09:20Z", "updated_at": "2019-11-02T10:10:26Z", "closed_at": "2019-11-02T10:10:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @jendrikseipp,\r\n\r\nDuring PyCon India 2019 devsprints, I was working on the TODO:\r\n\r\n> Scan f-strings under Python 3.8+.\r\n\r\nBut, it turns out that the f-strings are automatically scanned because\r\n\r\nTurns out that they are parsed as a `JoinedStr` ast node, which then has a child `FormattedValue` - which will contain references to `Name`, `Str`, operation nodes, etc. Since we already have methods to visit these nodes in place, we're already handling f-strings perfectly.\r\n\r\nAm I missing something crucial?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/175", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/175/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/175/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/175", "id": 510150908, "node_id": "MDU6SXNzdWU1MTAxNTA5MDg=", "number": 175, "title": "visit_Str is deprecated in Python3.8", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T17:39:00Z", "updated_at": "2019-11-01T19:56:18Z", "closed_at": "2019-11-01T19:56:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to https://docs.python.org/3/library/ast.html:\r\n\r\n> Deprecated since version 3.8: Methods visit_Num(), visit_Str(), visit_Bytes(), visit_NameConstant() and visit_Ellipsis() are deprecated now and will not be called in future Python versions. Add the visit_Constant() method to handle all constant nodes.\r\n\r\nOf all of these, we are only using the `visit_Str` function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/173", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/173/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/173/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/173", "id": 493598996, "node_id": "MDU6SXNzdWU0OTM1OTg5OTY=", "number": 173, "title": "How to ignore `if False:` import blocks?", "user": {"login": "Zac-HD", "id": 12229877, "node_id": "MDQ6VXNlcjEyMjI5ODc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12229877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zac-HD", "html_url": "https://github.com/Zac-HD", "followers_url": "https://api.github.com/users/Zac-HD/followers", "following_url": "https://api.github.com/users/Zac-HD/following{/other_user}", "gists_url": "https://api.github.com/users/Zac-HD/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zac-HD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zac-HD/subscriptions", "organizations_url": "https://api.github.com/users/Zac-HD/orgs", "repos_url": "https://api.github.com/users/Zac-HD/repos", "events_url": "https://api.github.com/users/Zac-HD/events{/privacy}", "received_events_url": "https://api.github.com/users/Zac-HD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-14T08:27:16Z", "updated_at": "2019-09-15T19:39:20Z", "closed_at": "2019-09-15T19:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "For Hypothesis, we have `typing` module imports hidden behind a literal `if False:` at the module level.  It would be more idiomatic to use `if typing.TYPE_CHECKING:`, but of course we can't import that on Python 2 either or the problem would go away :wink: \r\n\r\nSo is there a way to whitelist this condition without having to list out every different combination of imports we might need?  Or take this as a proposal to skip literal module-level `if False:` clauses because they're not at all subtle!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/170", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/170/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/170/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/170", "id": 487939004, "node_id": "MDU6SXNzdWU0ODc5MzkwMDQ=", "number": 170, "title": "\"encoding declaration in Unicode string\" with BOM", "user": {"login": "dandersoninc", "id": 54779181, "node_id": "MDQ6VXNlcjU0Nzc5MTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/54779181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dandersoninc", "html_url": "https://github.com/dandersoninc", "followers_url": "https://api.github.com/users/dandersoninc/followers", "following_url": "https://api.github.com/users/dandersoninc/following{/other_user}", "gists_url": "https://api.github.com/users/dandersoninc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dandersoninc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dandersoninc/subscriptions", "organizations_url": "https://api.github.com/users/dandersoninc/orgs", "repos_url": "https://api.github.com/users/dandersoninc/repos", "events_url": "https://api.github.com/users/dandersoninc/events{/privacy}", "received_events_url": "https://api.github.com/users/dandersoninc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-01T22:40:23Z", "updated_at": "2019-09-02T10:21:14Z", "closed_at": "2019-09-02T10:14:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Vulture reports \"\"encoding declaration in Unicode string\"\" for UTF files saved with a Byte Order Mark with or without the presence of a coding: string in the file.  The workaround is to not save files with BOM, but that plays havok on my git history! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/166", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/166/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/166/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/166", "id": 471620753, "node_id": "MDU6SXNzdWU0NzE2MjA3NTM=", "number": 166, "title": "Tests fails with py3.8", "user": {"login": "karelyatin", "id": 17830093, "node_id": "MDQ6VXNlcjE3ODMwMDkz", "avatar_url": "https://avatars1.githubusercontent.com/u/17830093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karelyatin", "html_url": "https://github.com/karelyatin", "followers_url": "https://api.github.com/users/karelyatin/followers", "following_url": "https://api.github.com/users/karelyatin/following{/other_user}", "gists_url": "https://api.github.com/users/karelyatin/gists{/gist_id}", "starred_url": "https://api.github.com/users/karelyatin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karelyatin/subscriptions", "organizations_url": "https://api.github.com/users/karelyatin/orgs", "repos_url": "https://api.github.com/users/karelyatin/repos", "events_url": "https://api.github.com/users/karelyatin/events{/privacy}", "received_events_url": "https://api.github.com/users/karelyatin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-07-23T10:43:03Z", "updated_at": "2019-09-23T20:21:12Z", "closed_at": "2019-09-23T20:18:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unit tests failing with py3.8, On Fedora system tested with tox -py38, Need adoption of vulture code to py3.8.\r\n\r\n[vulture]$ tox -epy38\r\nGLOB sdist-make: /tmp/vulture/setup.py\r\npy38 inst-nodeps: /tmp/vulture/.tox/dist/vulture-0.27.zip\r\npy38 installed: atomicwrites==1.3.0,attrs==19.1.0,coverage==4.5.3,importlib-metadata==0.18,more-itertools==7.2.0,packaging==19.0,pluggy==0.12.0,py==1.8.0,pyparsing==2.4.1,pytest==5.0.1,pytest-cov==2.7.1,six==1.12.0,vulture==0.27,wcwidth==0.1.7,zipp==0.5.2\r\npy38 run-test-pre: PYTHONHASHSEED='424332550'\r\npy38 runtests: commands[0] | py.test\r\n============================================================== test session starts ===============================================================\r\nplatform linux -- Python 3.8.0b2, pytest-5.0.1, py-1.8.0, pluggy-0.12.0\r\ncachedir: .tox/py38/.pytest_cache\r\nrootdir: /tmp/vulture, inifile: setup.cfg\r\nplugins: cov-2.7.1\r\ncollected 144 items                                                                                                                              \r\n\r\ntests/test_conditions.py ..............                                                                                                    [  9%]\r\ntests/test_confidence.py ......                                                                                                            [ 13%]\r\ntests/test_errors.py ...                                                                                                                   [ 15%]\r\ntests/test_format_strings.py FFFFF.                                                                                                        [ 20%]\r\ntests/test_imports.py .............                                                                                                        [ 29%]\r\ntests/test_item.py .                                                                                                                       [ 29%]\r\ntests/test_scavenging.py .......................................                                                                           [ 56%]\r\ntests/test_script.py .........                                                                                                             [ 63%]\r\ntests/test_size.py ..F........................                                                                                             [ 81%]\r\ntests/test_sorting.py .                                                                                                                    [ 82%]\r\ntests/test_unreachable.py .........................                                                                                        [100%]\r\n\r\n==================================================================== FAILURES ====================================================================\r\n_____________________________________________________________ test_old_format_string _____________________________________________________________\r\n\r\nv = <vulture.core.Vulture object at 0x7f5c3e3643a0>\r\n\r\n    def test_old_format_string(v):\r\n        v.scan(\"'%(a)s, %(b)d' % locals()\")\r\n>       check(v.used_names, ['a', 'b', 'locals'])\r\n\r\ntests/test_format_strings.py:7: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitems_or_names = LoggingSet({'locals'}), expected_names = ['a', 'b', 'locals']\r\n\r\n    def check(items_or_names, expected_names):\r\n        if isinstance(items_or_names, set):\r\n            # items_or_names is a set of strings.\r\n>           assert items_or_names == set(expected_names)\r\nE           AssertionError\r\n\r\ntests/__init__.py:10: AssertionError\r\n-------------------------------------------------------------- Captured stdout call \r\n_____________________________________________________________ test_new_format_string _____________________________________________________________\r\n\r\nv = <vulture.core.Vulture object at 0x7f5c3e3d2a30>\r\n\r\n    def test_new_format_string(v):\r\n        v.scan(\"'{a}, {b:0d} {c:<30} {d:.2%}'.format(**locals())\")\r\n>       check(v.used_names, ['a', 'b', 'c', 'd', 'locals'])\r\n\r\ntests/test_format_strings.py:12: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitems_or_names = LoggingSet({'locals'}), expected_names = ['a', 'b', 'c', 'd', 'locals']\r\n\r\n    def check(items_or_names, expected_names):\r\n        if isinstance(items_or_names, set):\r\n            # items_or_names is a set of strings.\r\n>           assert items_or_names == set(expected_names)\r\nE           AssertionError\r\n\r\ntests/__init__.py:10: AssertionError\r\n-------------------------------------------------------------- Captured stdout call \r\n_________________________________________________________ test_new_format_string_access __________________________________________________________\r\n\r\nv = <vulture.core.Vulture object at 0x7f5c3e3645b0>\r\n\r\n    def test_new_format_string_access(v):\r\n        v.scan(\"'{a.b}, {c.d.e} {f[g]} {h[i][j]}'.format(**locals())\")\r\n>       check(v.used_names, ['a', 'c', 'f', 'h', 'locals'])\r\n\r\ntests/test_format_strings.py:17: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitems_or_names = LoggingSet({'locals'}), expected_names = ['a', 'c', 'f', 'h', 'locals']\r\n\r\n    def check(items_or_names, expected_names):\r\n        if isinstance(items_or_names, set):\r\n            # items_or_names is a set of strings.\r\n>           assert items_or_names == set(expected_names)\r\nE           AssertionError\r\n\r\ntests/__init__.py:10: AssertionError\r\n-------------------------------------------------------------- Captured stdout call \r\n_______________________________________________________ test_new_format_string_attributes ________________________________________________________\r\n\r\nv = <vulture.core.Vulture object at 0x7f5c3e3d20a0>\r\n\r\n    def test_new_format_string_attributes(v):\r\n        v.scan(\"'{a.b}, {c.d.e} {f[g]} {h[i][j].k}'.format(**locals())\")\r\n>       check(v.used_names, ['a', 'c', 'f', 'h', 'locals'])\r\n\r\ntests/test_format_strings.py:22: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitems_or_names = LoggingSet({'locals'}), expected_names = ['a', 'c', 'f', 'h', 'locals']\r\n\r\n    def check(items_or_names, expected_names):\r\n        if isinstance(items_or_names, set):\r\n            # items_or_names is a set of strings.\r\n>           assert items_or_names == set(expected_names)\r\nE           AssertionError\r\n\r\ntests/__init__.py:10: AssertionError\r\n-------------------------------------------------------------- Captured stdout call \r\n_________________________________________________________ test_new_format_string_numbers _________________________________________________________\r\n\r\nv = <vulture.core.Vulture object at 0x7f5c3e412490>\r\n\r\n    def test_new_format_string_numbers(v):\r\n        v.scan(\"'{0.b}, {0.d.e} {0[1]} {0[1][1].k}'.format('foo')\")\r\n        check(v.used_names, [])\r\n>       check(v.used_attrs, ['b', 'd', 'e', 'k', 'format'])\r\n\r\ntests/test_format_strings.py:29: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nitems_or_names = LoggingSet({'format'}), expected_names = ['b', 'd', 'e', 'k', 'format']\r\n\r\n    def check(items_or_names, expected_names):\r\n        if isinstance(items_or_names, set):\r\n            # items_or_names is a set of strings.\r\n>           assert items_or_names == set(expected_names)\r\nE           AssertionError\r\n\r\ntests/__init__.py:10: AssertionError\r\n-------------------------------------------------------------- Captured stdout call \r\n1 Constant(value='foo', kind=None) '{0.b}, {0.d.e} {0[1]} {0[1][1].k}'.format('foo')\r\n_______________________________________________________________ test_size_if_else ________________________________________________________________\r\n\r\n    def test_size_if_else():\r\n        example = \"\"\"\r\n    @identity\r\n    class Foo(object):\r\n        @identity\r\n        @identity\r\n        def bar(self):\r\n            if \"a\" == \"b\":\r\n                pass\r\n            elif \"b\" == \"c\":\r\n                pass\r\n            else:\r\n                pass\r\n    \"\"\"\r\n>       check_size(example, 11)\r\n\r\ntests/test_size.py:81: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nexample = '\\n@identity\\nclass Foo(object):\\n    @identity\\n    @identity\\n    def bar(self):\\n        if \"a\" == \"b\":\\n            pass\\n        elif \"b\" == \"c\":\\n            pass\\n        else:\\n            pass\\n'\r\nsize = 11\r\n\r\n    def check_size(example, size):\r\n        tree = ast.parse(example)\r\n        for node in tree.body:\r\n            if isinstance(node, ast.ClassDef) and node.name == 'Foo':\r\n>               assert count_lines(node) == size\r\nE               assert 10 == 11\r\nE                +  where 10 = count_lines(<_ast.ClassDef object at 0x7f5c3e2ece20>)\r\n\r\ntests/test_size.py:36: AssertionError\r\n\r\n----------- coverage: platform linux, python 3.8.0-beta-2 ------------\r\nName                                    Stmts   Miss  Cover\r\n-----------------------------------------------------------\r\nvulture/__init__.py                         3      0   100%\r\nvulture/__main__.py                         2      0   100%\r\nvulture/core.py                           287      1    99%\r\nvulture/lines.py                           28      0   100%\r\nvulture/utils.py                           74      2    97%\r\nvulture/whitelists/argparse.py              6      0   100%\r\nvulture/whitelists/ast.py                  67      0   100%\r\nvulture/whitelists/collections.py           3      0   100%\r\nvulture/whitelists/sys.py                   5      0   100%\r\nvulture/whitelists/unittest.py             13      0   100%\r\nvulture/whitelists/whitelist_utils.py       4      0   100%\r\n-----------------------------------------------------------\r\nTOTAL                                     492      3    99%\r\nCoverage HTML written to dir htmlcov\r\n\r\n====================================================== 6 failed, 138 passed in 2.47 seconds ======================================================\r\nERROR: InvocationError for command '/tmp/vulture/.tox/py38/bin/py.test' (exited with code 1)\r\n____________________________________________________________________ summary _____________________________________________________________________\r\nERROR:   py38: commands failed\r\n\r\nBackground: detected while packaging in Fedora, there are some changes to ast module in python3.8:- https://bugzilla.redhat.com/show_bug.cgi?id=1716536 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/163", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/163/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/163/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/163", "id": 458798779, "node_id": "MDU6SXNzdWU0NTg3OTg3Nzk=", "number": 163, "title": "false flag on overridden methods", "user": {"login": "Bergiu", "id": 13796963, "node_id": "MDQ6VXNlcjEzNzk2OTYz", "avatar_url": "https://avatars1.githubusercontent.com/u/13796963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bergiu", "html_url": "https://github.com/Bergiu", "followers_url": "https://api.github.com/users/Bergiu/followers", "following_url": "https://api.github.com/users/Bergiu/following{/other_user}", "gists_url": "https://api.github.com/users/Bergiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bergiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bergiu/subscriptions", "organizations_url": "https://api.github.com/users/Bergiu/orgs", "repos_url": "https://api.github.com/users/Bergiu/repos", "events_url": "https://api.github.com/users/Bergiu/events{/privacy}", "received_events_url": "https://api.github.com/users/Bergiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-20T18:13:10Z", "updated_at": "2020-05-21T21:42:18Z", "closed_at": "2019-06-20T18:16:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I override a function from a base class and don't use all parameters, the parameters not used in the overridden method are shown as \"unused variable\"\r\n\r\nExample (from a file called gmb/database/schema.py lines 10 to 12):\r\n```py\r\nclass AutoInt(Enum):\r\n    def _generate_next_value_(name, start, count, last_values):\r\n        return count\r\n```\r\n\r\nThe function is defined in the Enum class and overridden here, but this errors occur:\r\n\r\n```\r\ngmb/database/schema.py:11: unused variable 'last_values' (100% confidence)\r\ngmb/database/schema.py:11: unused variable 'name' (100% confidence)\r\ngmb/database/schema.py:11: unused variable 'start' (100% confidence)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/162", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/162/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/162/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/162", "id": 452837541, "node_id": "MDU6SXNzdWU0NTI4Mzc1NDE=", "number": 162, "title": "A canonical example of using vulture for a django project in the docs", "user": {"login": "finance-oppoin", "id": 51427679, "node_id": "MDQ6VXNlcjUxNDI3Njc5", "avatar_url": "https://avatars2.githubusercontent.com/u/51427679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finance-oppoin", "html_url": "https://github.com/finance-oppoin", "followers_url": "https://api.github.com/users/finance-oppoin/followers", "following_url": "https://api.github.com/users/finance-oppoin/following{/other_user}", "gists_url": "https://api.github.com/users/finance-oppoin/gists{/gist_id}", "starred_url": "https://api.github.com/users/finance-oppoin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finance-oppoin/subscriptions", "organizations_url": "https://api.github.com/users/finance-oppoin/orgs", "repos_url": "https://api.github.com/users/finance-oppoin/repos", "events_url": "https://api.github.com/users/finance-oppoin/events{/privacy}", "received_events_url": "https://api.github.com/users/finance-oppoin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-06T05:25:06Z", "updated_at": "2020-07-11T09:23:33Z", "closed_at": "2020-07-11T09:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found this issue https://github.com/jendrikseipp/vulture/issues/109#issuecomment-405044730\r\n\r\nand I am not very familiar with vulture and was looking at using it for a django project.\r\n\r\nIf the documentation can include a simple end-to-end tutorial on using vulture in a hello world version of a Django project, it would be most helpful for newbies like me.\r\n\r\nIs that something I can help with?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/161", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/161/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/161/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/161", "id": 450253697, "node_id": "MDU6SXNzdWU0NTAyNTM2OTc=", "number": 161, "title": "Enhancement: Making vulture a flake8 plugin", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-05-30T11:08:27Z", "updated_at": "2019-12-27T09:51:26Z", "closed_at": "2019-12-27T08:57:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe `vulture` would make a useful addition to the flake8 plugin ecosystem, as finding dead code as part of the usual lining process would be great.\r\n\r\ninformation on flake8 plugin development:\r\nhttps://flake8.pycqa.org/en/latest/plugin-development/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/160", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/160/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/160/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/160", "id": 448971459, "node_id": "MDU6SXNzdWU0NDg5NzE0NTk=", "number": 160, "title": "Honour \"# noqa: F401\" comments", "user": {"login": "OddBloke", "id": 62736, "node_id": "MDQ6VXNlcjYyNzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/62736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OddBloke", "html_url": "https://github.com/OddBloke", "followers_url": "https://api.github.com/users/OddBloke/followers", "following_url": "https://api.github.com/users/OddBloke/following{/other_user}", "gists_url": "https://api.github.com/users/OddBloke/gists{/gist_id}", "starred_url": "https://api.github.com/users/OddBloke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OddBloke/subscriptions", "organizations_url": "https://api.github.com/users/OddBloke/orgs", "repos_url": "https://api.github.com/users/OddBloke/repos", "events_url": "https://api.github.com/users/OddBloke/events{/privacy}", "received_events_url": "https://api.github.com/users/OddBloke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-05-27T19:25:48Z", "updated_at": "2020-04-13T13:17:30Z", "closed_at": "2020-04-13T09:06:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our codebase has to work as far back as Python 3.4, which doesn't have the typing module available. As such, all of our type annotations are in strings (so they are lazily evaluated during type checking and ignored when running normally) and our typing imports are conditional, with \"# noqa: F401\" appended to silence the flake8 warnings.\r\n\r\nvulture doesn't honour these comments, and it seems like an obvious win for it to do so.\r\n\r\n(Per http://flake8.pycqa.org/en/2.5.5/warnings.html, F401 is specifically the warning for \"`module` imported but unused\"; this matches very closely with Vulture's unused import warnings.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/158", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/158/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/158/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/158", "id": 423584008, "node_id": "MDU6SXNzdWU0MjM1ODQwMDg=", "number": 158, "title": "Does this program can only process one python file once time?", "user": {"login": "zhonhel", "id": 9198247, "node_id": "MDQ6VXNlcjkxOTgyNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9198247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhonhel", "html_url": "https://github.com/zhonhel", "followers_url": "https://api.github.com/users/zhonhel/followers", "following_url": "https://api.github.com/users/zhonhel/following{/other_user}", "gists_url": "https://api.github.com/users/zhonhel/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhonhel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhonhel/subscriptions", "organizations_url": "https://api.github.com/users/zhonhel/orgs", "repos_url": "https://api.github.com/users/zhonhel/repos", "events_url": "https://api.github.com/users/zhonhel/events{/privacy}", "received_events_url": "https://api.github.com/users/zhonhel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-21T06:10:31Z", "updated_at": "2019-03-21T06:41:54Z", "closed_at": "2019-03-21T06:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is a very nice work \uff1a)\r\n\r\nBut does this program can only process one python file once time?\r\nWhat should I do if my python program contains many python files, and running it like \uff1a\r\npython main.py\r\n\r\nThank you very much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/157", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/157/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/157/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/157", "id": 408640752, "node_id": "MDU6SXNzdWU0MDg2NDA3NTI=", "number": 157, "title": "vulture/core.py is mode 644 and has a hashbang", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-11T05:36:47Z", "updated_at": "2019-03-24T16:41:28Z", "closed_at": "2019-03-24T16:41:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "vulture/core.py doesnt have any code to handle `__name__ == '__main__'`, so it is not executable, and shouldnt have a hashbang.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/156", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/156/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/156/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/156", "id": 408639684, "node_id": "MDU6SXNzdWU0MDg2Mzk2ODQ=", "number": 156, "title": "Tests use CaptureResult added in pytest > 3.2.3", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-11T05:28:50Z", "updated_at": "2019-03-24T17:04:37Z", "closed_at": "2019-03-24T17:04:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use of `capsys.readouterr().out` in tests expects the namedtuple CaptureResult, which was added after 3.2.3 (late 2017).\r\n\r\nsetup.py should list \"pytest > 3.2.3\" as its requirement, or use normal tuple syntax `capsys.readouterr()[0]`, but even then a minimum version of pytest will be helpful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/155", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/155/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/155/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/155", "id": 407062851, "node_id": "MDU6SXNzdWU0MDcwNjI4NTE=", "number": 155, "title": "ignore dead code lines captured by vulture", "user": {"login": "achillesrasquinha", "id": 9742568, "node_id": "MDQ6VXNlcjk3NDI1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9742568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achillesrasquinha", "html_url": "https://github.com/achillesrasquinha", "followers_url": "https://api.github.com/users/achillesrasquinha/followers", "following_url": "https://api.github.com/users/achillesrasquinha/following{/other_user}", "gists_url": "https://api.github.com/users/achillesrasquinha/gists{/gist_id}", "starred_url": "https://api.github.com/users/achillesrasquinha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achillesrasquinha/subscriptions", "organizations_url": "https://api.github.com/users/achillesrasquinha/orgs", "repos_url": "https://api.github.com/users/achillesrasquinha/repos", "events_url": "https://api.github.com/users/achillesrasquinha/events{/privacy}", "received_events_url": "https://api.github.com/users/achillesrasquinha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-06T02:59:38Z", "updated_at": "2019-02-06T08:18:54Z", "closed_at": "2019-02-06T08:18:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example,\r\n\r\n```python\r\nfoo = None # vulture: disable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/154", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/154/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/154/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/154", "id": 393925683, "node_id": "MDU6SXNzdWUzOTM5MjU2ODM=", "number": 154, "title": "What is the confidence metric reporting?", "user": {"login": "nbelakovski", "id": 864630, "node_id": "MDQ6VXNlcjg2NDYzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/864630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbelakovski", "html_url": "https://github.com/nbelakovski", "followers_url": "https://api.github.com/users/nbelakovski/followers", "following_url": "https://api.github.com/users/nbelakovski/following{/other_user}", "gists_url": "https://api.github.com/users/nbelakovski/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbelakovski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbelakovski/subscriptions", "organizations_url": "https://api.github.com/users/nbelakovski/orgs", "repos_url": "https://api.github.com/users/nbelakovski/repos", "events_url": "https://api.github.com/users/nbelakovski/events{/privacy}", "received_events_url": "https://api.github.com/users/nbelakovski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-24T19:58:48Z", "updated_at": "2019-01-03T17:26:25Z", "closed_at": "2019-01-03T17:25:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the program says confidence is 100%, can I take that as a formal guarantee that the code will not be executed? When it's less than 100%, what does that mean?\r\n\r\nHaving an answer to this in the README would be a big help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/152", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/152/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/152/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/152", "id": 374215042, "node_id": "MDU6SXNzdWUzNzQyMTUwNDI=", "number": 152, "title": "Ignore type checking imports", "user": {"login": "Dobatymo", "id": 7647594, "node_id": "MDQ6VXNlcjc2NDc1OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7647594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dobatymo", "html_url": "https://github.com/Dobatymo", "followers_url": "https://api.github.com/users/Dobatymo/followers", "following_url": "https://api.github.com/users/Dobatymo/following{/other_user}", "gists_url": "https://api.github.com/users/Dobatymo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dobatymo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dobatymo/subscriptions", "organizations_url": "https://api.github.com/users/Dobatymo/orgs", "repos_url": "https://api.github.com/users/Dobatymo/repos", "events_url": "https://api.github.com/users/Dobatymo/events{/privacy}", "received_events_url": "https://api.github.com/users/Dobatymo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1116500722, "node_id": "MDU6TGFiZWwxMTE2NTAwNzIy", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/GCI", "name": "GCI", "color": "aa1dd1", "default": false, "description": "Google Code-In"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-10-26T03:42:01Z", "updated_at": "2020-08-10T10:58:44Z", "closed_at": "2020-08-10T10:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code like this is common when type annotations in comments are used in Python:\r\n\r\n```\r\nfrom typing import TYPE_CHECKING\r\nif TYPE_CHECKING:\r\n\tfrom typing import Optional, Iterator\r\n\tfrom abc import xyz\r\n```\r\nThese will usually show up as `unused import` as they are only referenced from comments.\r\n\r\nThe code should probably be parsed with a `TYPE_CHECKING=False` in mind.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/151", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/151/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/151/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/151", "id": 372989328, "node_id": "MDU6SXNzdWUzNzI5ODkzMjg=", "number": 151, "title": "Next release?", "user": {"login": "jonapich", "id": 5009356, "node_id": "MDQ6VXNlcjUwMDkzNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5009356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonapich", "html_url": "https://github.com/jonapich", "followers_url": "https://api.github.com/users/jonapich/followers", "following_url": "https://api.github.com/users/jonapich/following{/other_user}", "gists_url": "https://api.github.com/users/jonapich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonapich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonapich/subscriptions", "organizations_url": "https://api.github.com/users/jonapich/orgs", "repos_url": "https://api.github.com/users/jonapich/repos", "events_url": "https://api.github.com/users/jonapich/events{/privacy}", "received_events_url": "https://api.github.com/users/jonapich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-23T13:04:47Z", "updated_at": "2018-10-23T17:58:56Z", "closed_at": "2018-10-23T16:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good morning! :)\r\n\r\nI was about to try out the `--ignore-decorators` switch to skip some checks and after a few puzzling attempts I realized it was an unreleased feature! :man_facepalming: \r\n\r\nWas it an oversight? Is there a new release planned soon?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/149", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/149/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/149/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/149", "id": 355515108, "node_id": "MDU6SXNzdWUzNTU1MTUxMDg=", "number": 149, "title": "getattr()", "user": {"login": "walles", "id": 158201, "node_id": "MDQ6VXNlcjE1ODIwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/158201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walles", "html_url": "https://github.com/walles", "followers_url": "https://api.github.com/users/walles/followers", "following_url": "https://api.github.com/users/walles/following{/other_user}", "gists_url": "https://api.github.com/users/walles/gists{/gist_id}", "starred_url": "https://api.github.com/users/walles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walles/subscriptions", "organizations_url": "https://api.github.com/users/walles/orgs", "repos_url": "https://api.github.com/users/walles/repos", "events_url": "https://api.github.com/users/walles/events{/privacy}", "received_events_url": "https://api.github.com/users/walles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-30T10:05:36Z", "updated_at": "2018-09-04T07:56:59Z", "closed_at": "2018-09-04T07:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass Apa(object):\r\n    pass\r\n\r\n\r\napa = Apa()\r\napa.hej = 7\r\nprint(getattr(apa, 'hej', 9))\r\n```\r\n\r\nVulture 0.29:\r\n```\r\ngetattr.py:6: unused attribute 'hej' (60% confidence)\r\n```\r\n\r\nThe `hej` value is used through reflection.\r\n\r\nIn the generic case this could be difficult to support, but in this example where it's a fixed string it should be possible for Vulture to see that `hej` is actually used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/148", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/148/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/148/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/148", "id": 355510608, "node_id": "MDU6SXNzdWUzNTU1MTA2MDg=", "number": 148, "title": "False positive II", "user": {"login": "walles", "id": 158201, "node_id": "MDQ6VXNlcjE1ODIwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/158201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walles", "html_url": "https://github.com/walles", "followers_url": "https://api.github.com/users/walles/followers", "following_url": "https://api.github.com/users/walles/following{/other_user}", "gists_url": "https://api.github.com/users/walles/gists{/gist_id}", "starred_url": "https://api.github.com/users/walles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walles/subscriptions", "organizations_url": "https://api.github.com/users/walles/orgs", "repos_url": "https://api.github.com/users/walles/repos", "events_url": "https://api.github.com/users/walles/events{/privacy}", "received_events_url": "https://api.github.com/users/walles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-30T09:53:42Z", "updated_at": "2018-09-02T08:48:29Z", "closed_at": "2018-09-02T08:48:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nclass HttpException(Exception):\r\n\r\n    def __init__(self, url, status_code, text=\"\"):\r\n        self.url = url\r\n        self.status_code = status_code\r\n        self.text = text\r\n        super(HttpException, self).__init__(\"Got status code %d on %s body %s\"\r\n                                            % (status_code, url, text))\r\n```\r\n\r\nOutput with Vulture 0.29:\r\n```\r\nrepro.py:4: unused attribute 'url' (60% confidence)\r\nrepro.py:5: unused attribute 'status_code' (60% confidence)\r\nrepro.py:6: unused attribute 'text' (60% confidence)\r\n```\r\n\r\nExpected output:\r\nNone\r\n\r\nAll the reported variables are used on the last line.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/147", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/147/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/147/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/147", "id": 355457619, "node_id": "MDU6SXNzdWUzNTU0NTc2MTk=", "number": 147, "title": "False positives", "user": {"login": "walles", "id": 158201, "node_id": "MDQ6VXNlcjE1ODIwMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/158201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walles", "html_url": "https://github.com/walles", "followers_url": "https://api.github.com/users/walles/followers", "following_url": "https://api.github.com/users/walles/following{/other_user}", "gists_url": "https://api.github.com/users/walles/gists{/gist_id}", "starred_url": "https://api.github.com/users/walles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walles/subscriptions", "organizations_url": "https://api.github.com/users/walles/orgs", "repos_url": "https://api.github.com/users/walles/repos", "events_url": "https://api.github.com/users/walles/events{/privacy}", "received_events_url": "https://api.github.com/users/walles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-30T07:26:13Z", "updated_at": "2018-10-16T14:07:28Z", "closed_at": "2018-10-16T14:07:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nTry analyzing this program:\r\n```python\r\nimport threading\r\nimport logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG,\r\n                    format='(%(threadName)-10s) %(message)s',\r\n                    )\r\n\r\nclass MyThread(threading.Thread):\r\n    def run(self):\r\n        logging.debug('running')\r\n        return\r\n\r\nfor _i in range(5):\r\n    t = MyThread()\r\n    t.daemon = True\r\n    t.start()\r\n```\r\n\r\nCurrent output from `vulture` 0.29:\r\n```\r\nthread.py:11: unused function 'run' (60% confidence)\r\nthread.py:15: unused attribute 'daemon' (60% confidence)\r\n```\r\n\r\nExpected output:\r\nNothing.\r\n\r\nThe `run()` method is what the thread executes when started: https://docs.python.org/3.7/library/threading.html#threading.Thread.run\r\n\r\nThe `daemon` attribute is used for telling the thread what flavor it should be: https://docs.python.org/3.7/library/threading.html#threading.Thread.daemon\r\n\r\nIs there any way for Vulture to figure these things out by itself so that it doesn't present these false positive warnings?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/146", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/146/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/146/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/146", "id": 351385408, "node_id": "MDU6SXNzdWUzNTEzODU0MDg=", "number": 146, "title": "unittest.TestCase subclasses being marked as `unused`", "user": {"login": "larkost-fetch", "id": 33637454, "node_id": "MDQ6VXNlcjMzNjM3NDU0", "avatar_url": "https://avatars2.githubusercontent.com/u/33637454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larkost-fetch", "html_url": "https://github.com/larkost-fetch", "followers_url": "https://api.github.com/users/larkost-fetch/followers", "following_url": "https://api.github.com/users/larkost-fetch/following{/other_user}", "gists_url": "https://api.github.com/users/larkost-fetch/gists{/gist_id}", "starred_url": "https://api.github.com/users/larkost-fetch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larkost-fetch/subscriptions", "organizations_url": "https://api.github.com/users/larkost-fetch/orgs", "repos_url": "https://api.github.com/users/larkost-fetch/repos", "events_url": "https://api.github.com/users/larkost-fetch/events{/privacy}", "received_events_url": "https://api.github.com/users/larkost-fetch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-16T22:05:13Z", "updated_at": "2018-08-16T22:23:24Z", "closed_at": "2018-08-16T22:21:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a good number of test classes in my repository that are sub-classes of my own subclass of `unittest.TestCase` and `vulture` is marking them as `unused class 'Blah' (60% confidence)`. It is not marking the methods in these classes similarly.\r\n\r\nA few notes on them:\r\n1. The classes are in files that begin with `test_`, but the Class names do not have `Test` in them (I think that just produces noise in the running lists). They do evaluate as subclasses.\r\n2. Everything needed to determine that these are `TestCase` subclasses in the folder I am calling `vulture .` from.\r\n3. I am using relative imports on everything local (`from . import blah`), so there should not be odd import cases there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/143", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/143/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/143/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/143", "id": 345077000, "node_id": "MDU6SXNzdWUzNDUwNzcwMDA=", "number": 143, "title": "make_whitelist is not available as an API", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-27T03:21:44Z", "updated_at": "2018-08-12T20:56:19Z", "closed_at": "2018-08-12T20:56:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the `make_whitelist` function creates a whitelist and then prints it to stdout, whereas this function might be useful for other linters using Vulture (e.g., https://github.com/coala/coala-bears/issues/2640) and thus should be a part of the public API.\r\n\r\nIMHO, we should return a list from the `make_whitelist` method (much like `get_unused_code`) and utilize it in the `report` method when the ``--make_whitelist`` flag is passed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/141", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/141/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/141/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/141", "id": 343347501, "node_id": "MDU6SXNzdWUzNDMzNDc1MDE=", "number": 141, "title": "Try different tools for code coverage", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-21T18:50:17Z", "updated_at": "2018-07-24T21:04:47Z", "closed_at": "2018-07-24T21:04:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, we are using coveralls for keeping the track of code coverage, but it behaves [strangely sometimes][0]. This can be addressed by inspecting whether other tools (like [codecov][1], etc) give similar results?\r\n\r\n[0]: https://github.com/jendrikseipp/vulture/pull/139#discussion_r204216657\r\n[1]: https://codecov.io/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/140", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/140/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/140/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/140", "id": 342550619, "node_id": "MDU6SXNzdWUzNDI1NTA2MTk=", "number": 140, "title": "List supported interpreters only once.", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-19T01:52:55Z", "updated_at": "2018-08-16T22:23:54Z", "closed_at": "2018-08-16T22:23:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should only list the supported python interpreters once (currently they're listed in both\r\n`.travis.yml` and `tox.ini`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/136", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/136/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/136/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/136", "id": 337208693, "node_id": "MDU6SXNzdWUzMzcyMDg2OTM=", "number": 136, "title": "Remove (most) mock objects from whitelist files", "user": {"login": "jendrikseipp", "id": 213955, "node_id": "MDQ6VXNlcjIxMzk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikseipp", "html_url": "https://github.com/jendrikseipp", "followers_url": "https://api.github.com/users/jendrikseipp/followers", "following_url": "https://api.github.com/users/jendrikseipp/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikseipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikseipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikseipp/subscriptions", "organizations_url": "https://api.github.com/users/jendrikseipp/orgs", "repos_url": "https://api.github.com/users/jendrikseipp/repos", "events_url": "https://api.github.com/users/jendrikseipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikseipp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-30T11:40:28Z", "updated_at": "2018-07-01T18:18:58Z", "closed_at": "2018-07-01T18:18:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We currently mock all objects in our whitelist files, e.g. `whitelist_defaultdict = Whitelist(); whitelist_defaultdict.default_factory`. This has the drawback that we can't test whether `default_factory` really exists (and is not misspelled or missing from the stdlib in this Python version). For non-dynamic objects, we should therefore access the objects directly instead of their mocks. The only place where we have to keep mock objects is the whitelist for the `ast` module, since these methods are created dynamically. To allow importing `collections` in the `collections.py` whitelist file, we have to rename it to `collections_whitelist.py` to avoid name clashes. Here is a diff that shows the necessary changes for `collections.py`:\r\n\r\n```\r\ndiff --git a/vulture/core.py b/vulture/core.py\r\nindex 5400ae6..4f43e80 100644\r\n--- a/vulture/core.py\r\n+++ b/vulture/core.py\r\n@@ -218,7 +218,7 @@ class Vulture(ast.NodeVisitor):\r\n \r\n         unique_imports = set(item.name for item in self.defined_imports)\r\n         for import_name in unique_imports:\r\n-            path = os.path.join('whitelists', import_name) + '.py'\r\n+            path = os.path.join('whitelists', import_name) + '_whitelist.py'\r\n             if exclude_file(path):\r\n                 self._log('Excluded whitelist:', path)\r\n             else:\r\ndiff --git a/vulture/whitelists/collections_whitelist.py b/vulture/whitelists/collections_whitelist.py\r\nindex 4af0cdd..c43bc58 100644\r\n--- a/vulture/whitelists/collections_whitelist.py\r\n+++ b/vulture/whitelists/collections_whitelist.py\r\n@@ -1,5 +1,4 @@\r\n-from whitelist_utils import Whitelist\r\n+import collections\r\n \r\n # To free memory, the \"default_factory\" attribute can be set to None.\r\n-whitelist_defaultdict = Whitelist()\r\n-whitelist_defaultdict.default_factory\r\n+collections.defaultdict.default_factory\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/130", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/130/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/130/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/130", "id": 330873286, "node_id": "MDU6SXNzdWUzMzA4NzMyODY=", "number": 130, "title": "Single source package version", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-09T10:09:42Z", "updated_at": "2018-06-26T12:49:11Z", "closed_at": "2018-06-26T12:49:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `setup.py` loads `__version__` from `vulture/__init__.py` which in turn loads it form `vulture/main.py` - this is pretty dangerous  because there is no guarantee that all the dependencies of the package would have been installed and loaded when version is being loaded for. https://packaging.python.org/guides/single-sourcing-package-version/ mentions quite a few ways of dealing with this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/125", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/125/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/125/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/125", "id": 328864011, "node_id": "MDU6SXNzdWUzMjg4NjQwMTE=", "number": 125, "title": "Test --sort-by-size", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-03T21:31:43Z", "updated_at": "2018-06-05T09:08:33Z", "closed_at": "2018-06-05T09:08:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed in #124, the test for `--sort-by-size` is faulty because it never actually calls the underlying function as no dead code is detected on the first hand.\r\n\r\n```py\r\ndef test_sort_by_size():\r\n    assert call_vulture(['vulture/', '--sort-by-size']) == 0\r\n```\r\n\r\nWe'd be needing a completely new kind of test - where we can match the output of vulture to the expected output. This way, we can also test for `verbose` mode.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/117", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/117/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/117/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/117", "id": 328663700, "node_id": "MDU6SXNzdWUzMjg2NjM3MDA=", "number": 117, "title": "Fix tests failing on py3.7", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-01T21:17:18Z", "updated_at": "2018-06-03T06:58:22Z", "closed_at": "2018-06-03T06:58:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's currently one test failing on python3.7:\r\n```py\r\nif sys.version_info > (3, 0):\r\n    check_conditions(\"1-1\", False)\r\n```\r\n\r\nInterestingly the same error is raised by `ast.literal_eval` in python2.7 which we bypass in the test.\r\n\r\nError in 3.7:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py\", line 91, in literal_eval\r\n    return _convert(node_or_string)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py\", line 90, in _convert\r\n    return _convert_signed_num(node)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py\", line 63, in _convert_signed_num\r\n    return _convert_num(node)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py\", line 55, in _convert_num\r\n    raise ValueError('malformed node or string: ' + repr(node))\r\nValueError: malformed node or string: <_ast.BinOp object at 0x10d2bfa58>\r\n```\r\nError in 2.7:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/ast.py\", line 68, in literal_eval\r\n    return _convert(node_or_string)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/ast.py\", line 67, in _convert\r\n    raise ValueError('malformed string')\r\nValueError: malformed string\r\n```\r\n\r\nI think we should remove this test, I guess `1-1` isn't of utmost important after all :-p", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/115", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/115/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/115/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/115", "id": 328617500, "node_id": "MDU6SXNzdWUzMjg2MTc1MDA=", "number": 115, "title": "Document exit codes", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-01T18:27:33Z", "updated_at": "2018-06-04T10:04:01Z", "closed_at": "2018-06-04T10:04:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I guess Vulture exits with following exit codes:\r\n\r\nExit Code | Description\r\n--------- | ------------\r\n`0` | Vulture executes successfully and no dead code is found.\r\n`1` | Vulture executes successfully and dead code is found.\r\n`1` | Vulture could not execute successfully either because the specified file wasn't found or the source was corrupt (Syntax errors, non UTF-8 encoding, contains null bytes)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/112", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/112/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/112/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/112", "id": 323764072, "node_id": "MDU6SXNzdWUzMjM3NjQwNzI=", "number": 112, "title": "Feature Request: Differentiate functions and methods", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-16T19:56:40Z", "updated_at": "2020-06-02T11:29:16Z", "closed_at": "2020-06-02T11:20:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it would be useful differentiate functions from methods. \r\n\r\nConsider this use case:\r\n\r\nWe have a class defined in an external package. It expects a third party to inherit from that class and define a special abstract method. Then when the \"run\" method of that class is called it does something with that special abstract method\r\n\r\n```python\r\n\r\n## External package (foo)\r\nclass Foo:\r\n    def run(self):\r\n        self.callback()\r\n    \r\n    def callback(self);\r\n         raise NotImplemented('must define')\r\n\r\n## Our package\r\nimport foo\r\n\r\nclass Bar(foo.Foo):\r\n    def callback(self):\r\n        print('hello world')\r\n\r\nBar().run()\r\n```\r\n\r\nIn this case running vulture will report that `callback` is unused. If this were differentiated from functions it would be easier to ignore cases like this using grep.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/110", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/110/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/110/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/110", "id": 316719416, "node_id": "MDU6SXNzdWUzMTY3MTk0MTY=", "number": 110, "title": "False unused variable - database models", "user": {"login": "AbdealiJK", "id": 2200743, "node_id": "MDQ6VXNlcjIyMDA3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2200743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdealiJK", "html_url": "https://github.com/AbdealiJK", "followers_url": "https://api.github.com/users/AbdealiJK/followers", "following_url": "https://api.github.com/users/AbdealiJK/following{/other_user}", "gists_url": "https://api.github.com/users/AbdealiJK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdealiJK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdealiJK/subscriptions", "organizations_url": "https://api.github.com/users/AbdealiJK/orgs", "repos_url": "https://api.github.com/users/AbdealiJK/repos", "events_url": "https://api.github.com/users/AbdealiJK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdealiJK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-23T08:53:35Z", "updated_at": "2018-05-02T08:03:48Z", "closed_at": "2018-05-02T08:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a schema (Marshmallow schema), or model (SQLAlchemy model?), all the fields of the model are detected as unused.\r\n\r\nExample:\r\n```\r\nclass DatedSchema(Schema):\r\n    createdBy = StringField(attribute=\"created_by\", dump_only=True)\r\n    lastModifiedBy = StringField(attribute=\"last_modified_by\", dump_only=True)\r\n    createdDate = fields.DateTime(attribute=\"created_date\", dump_only=True)\r\n    lastModifiedDate = fields.DateTime(attribute=\"last_modified_date\", dump_only=True)\r\n```\r\n\r\nThese 4 variables are \"unused\" according to vulture ... but I do need them in my database-table/schema.\r\n\r\nNot sure how to ignore these sort of results from vulture.\r\n\r\nNote: I do have functions in my schema like `add_role()` or `touch_time()` etc. So, I do not want to exclude the whole file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/109", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/109/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/109/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/109", "id": 316718637, "node_id": "MDU6SXNzdWUzMTY3MTg2Mzc=", "number": 109, "title": "Write script for generating whitelist (was: False Unused function - ignoring APIs)", "user": {"login": "AbdealiJK", "id": 2200743, "node_id": "MDQ6VXNlcjIyMDA3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2200743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdealiJK", "html_url": "https://github.com/AbdealiJK", "followers_url": "https://api.github.com/users/AbdealiJK/followers", "following_url": "https://api.github.com/users/AbdealiJK/following{/other_user}", "gists_url": "https://api.github.com/users/AbdealiJK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdealiJK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdealiJK/subscriptions", "organizations_url": "https://api.github.com/users/AbdealiJK/orgs", "repos_url": "https://api.github.com/users/AbdealiJK/repos", "events_url": "https://api.github.com/users/AbdealiJK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdealiJK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2018-04-23T08:51:20Z", "updated_at": "2018-07-14T19:29:54Z", "closed_at": "2018-07-14T19:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was using vulture for my flask based API and found that it marked every API function I had as a \"unused function\".\r\n\r\nExample:\r\n```\r\n@app.before_request\r\ndef before_req():\r\n    pass\r\n\r\n@user_api.route('/api/users', methods=['GET'])\r\ndef get_all():\r\n    pass\r\n\r\n```\r\n\r\nIs it possible to make it such that if a specific decorator is used (possibly a regex for this) we can ignore the result ?\r\n\r\nIn general flask applications will have Blueprints with the name `.*api\\..*` (example: profile_api, user_api, book_api, etc.) and flask applications will be `.*app\\..*` (example: flask_app, test_app, app, etc.)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/108", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/108/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/108/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/108", "id": 309842795, "node_id": "MDU6SXNzdWUzMDk4NDI3OTU=", "number": 108, "title": "Use the logging module", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-29T17:39:34Z", "updated_at": "2018-05-23T21:58:06Z", "closed_at": "2018-03-29T20:37:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, vulture uses the naive way of managing the logs by directly saving them as strings and printing them to `stdout` whenever in verbose mode. An alternative way of managing logs is through the python's [logging module](https://docs.python.org/3.5/library/logging.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/107", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/107/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/107/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/107", "id": 295671545, "node_id": "MDU6SXNzdWUyOTU2NzE1NDU=", "number": 107, "title": "Support for nolint-like comments", "user": {"login": "szborows", "id": 1025646, "node_id": "MDQ6VXNlcjEwMjU2NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1025646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szborows", "html_url": "https://github.com/szborows", "followers_url": "https://api.github.com/users/szborows/followers", "following_url": "https://api.github.com/users/szborows/following{/other_user}", "gists_url": "https://api.github.com/users/szborows/gists{/gist_id}", "starred_url": "https://api.github.com/users/szborows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szborows/subscriptions", "organizations_url": "https://api.github.com/users/szborows/orgs", "repos_url": "https://api.github.com/users/szborows/repos", "events_url": "https://api.github.com/users/szborows/events{/privacy}", "received_events_url": "https://api.github.com/users/szborows/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-08T21:28:18Z", "updated_at": "2018-02-11T11:44:06Z", "closed_at": "2018-02-11T11:44:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes function is not used, but it is on purpose. Example: could be Celery workers' tasks.\r\n\r\nThere should be a way to mark functions as intentionally non-referenced.\r\n\r\nProposal:\r\n`# vulture-ignore: unused-function`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/106", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/106/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/106/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/106", "id": 288318052, "node_id": "MDU6SXNzdWUyODgzMTgwNTI=", "number": 106, "title": "Configuration options", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-13T10:13:48Z", "updated_at": "2019-03-21T10:36:15Z", "closed_at": "2018-02-11T11:44:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, thanks for the awesome package!\r\n\r\nI have a few questions/suggestions:\r\n\r\n1. What is the way to configure `vulture`? As I get it now the only possible way is command line arguments. Which can be rather long or complex. A common way to configure something in `python` is supporting both `.vulture.ini` and `setup.cfg`. I personally prefer `setup.cfg`.\r\n2. Is it possible to ignore some lines from audit? For example, I use [`better-exceptions`](https://github.com/Qix-/better-exceptions) sometimes. It only requires to write `import better_exceptions`. I can ignore this line from `pylint`/`flake8` by using `import better_exceptions  # noqa` instead. As I can understand right now it is not supported.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/105", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/105/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/105/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/105", "id": 287504907, "node_id": "MDU6SXNzdWUyODc1MDQ5MDc=", "number": 105, "title": "Missing check of script files because not ends with .py", "user": {"login": "estevopaz", "id": 2580646, "node_id": "MDQ6VXNlcjI1ODA2NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2580646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estevopaz", "html_url": "https://github.com/estevopaz", "followers_url": "https://api.github.com/users/estevopaz/followers", "following_url": "https://api.github.com/users/estevopaz/following{/other_user}", "gists_url": "https://api.github.com/users/estevopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/estevopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estevopaz/subscriptions", "organizations_url": "https://api.github.com/users/estevopaz/orgs", "repos_url": "https://api.github.com/users/estevopaz/repos", "events_url": "https://api.github.com/users/estevopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/estevopaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-10T16:54:01Z", "updated_at": "2018-01-10T23:52:06Z", "closed_at": "2018-01-10T19:03:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, please feel free to include my code if you wish:\r\n\r\n    def is_python(file_path):\r\n        '''Check if file is a python file.'''\r\n        if os.path.isfile(file_path) is False:\r\n            return False\r\n        if file_path.endswith('.py'):\r\n            return True\r\n        # Check also html files because Jinja templates\r\n        if file_path.endswith('.html'):\r\n            return True\r\n        _, extension = os.path.splitext(file_path)\r\n        if extension != '':\r\n            return False\r\n        file_open = open(file_path)\r\n        first_line = file_open.readline(50)\r\n        file_open.close()\r\n        if '#!'in first_line and 'python' in first_line:\r\n            return True\r\n        return False", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/103", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/103/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/103/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/103", "id": 277589873, "node_id": "MDU6SXNzdWUyNzc1ODk4NzM=", "number": 103, "title": "Items mistakenly shown as used", "user": {"login": "latteier", "id": 312702, "node_id": "MDQ6VXNlcjMxMjcwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/312702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/latteier", "html_url": "https://github.com/latteier", "followers_url": "https://api.github.com/users/latteier/followers", "following_url": "https://api.github.com/users/latteier/following{/other_user}", "gists_url": "https://api.github.com/users/latteier/gists{/gist_id}", "starred_url": "https://api.github.com/users/latteier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/latteier/subscriptions", "organizations_url": "https://api.github.com/users/latteier/orgs", "repos_url": "https://api.github.com/users/latteier/repos", "events_url": "https://api.github.com/users/latteier/events{/privacy}", "received_events_url": "https://api.github.com/users/latteier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-29T00:41:57Z", "updated_at": "2018-02-11T11:44:43Z", "closed_at": "2018-02-11T11:44:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Vulture looks great! I'm evaluating it to use on a large code base.\r\n\r\nOne issue I'm running into is that because `_get_unused_items` looks items up by name, if I have one module with a used function `foo` and another module with an unused function `foo`, the unused `foo` won't be reported as unused, since when looking in the list of used names it will be found.\r\n\r\nI would guess that the fix would be to be prefixed by package/module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/101", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/101/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/101/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/101", "id": 269323376, "node_id": "MDU6SXNzdWUyNjkzMjMzNzY=", "number": 101, "title": "Add CONTRIBUTING.rst", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-28T14:51:12Z", "updated_at": "2017-12-28T00:44:38Z", "closed_at": "2017-12-28T00:44:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " Add a CONTRIBUTING.rst file to [vulture](https://github.com/jendrikseipp/vulture). It should include the following information:\r\n* How to setup a virtual environment?\r\n* How to install the development version of vulture?\r\n* Coding standards\r\n    - Ensure that people send a PR from a branch other than the `master` branch.\r\n    - How to name the branches?\r\n* How to send a Pull Request?\r\n* Be polite and wait for reviews\r\n* Take feedback positively!\r\n\r\nAn example may be found here: https://coala.io/newcomer", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/100", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/100/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/100/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/100", "id": 268771354, "node_id": "MDU6SXNzdWUyNjg3NzEzNTQ=", "number": 100, "title": "Detect while True: else statements", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-26T14:00:22Z", "updated_at": "2017-10-29T08:48:14Z", "closed_at": "2017-10-29T08:48:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "vulture currently detects the case when a `else` block is associated with an `if True` statement, but does not do so in the case of a `while` loop.\r\n\r\nFor example, the following example wouldn't be detected as unused code:\r\n```py\r\nwhile True:\r\n    print(\"Hi\")\r\nelse:\r\n    # Dead code\r\n    print(\"Dead code\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/95", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/95/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/95/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/95", "id": 254214870, "node_id": "MDU6SXNzdWUyNTQyMTQ4NzA=", "number": 95, "title": "Ignore unittest.mock return_value?", "user": {"login": "kmarekspartz", "id": 969868, "node_id": "MDQ6VXNlcjk2OTg2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/969868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmarekspartz", "html_url": "https://github.com/kmarekspartz", "followers_url": "https://api.github.com/users/kmarekspartz/followers", "following_url": "https://api.github.com/users/kmarekspartz/following{/other_user}", "gists_url": "https://api.github.com/users/kmarekspartz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmarekspartz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmarekspartz/subscriptions", "organizations_url": "https://api.github.com/users/kmarekspartz/orgs", "repos_url": "https://api.github.com/users/kmarekspartz/repos", "events_url": "https://api.github.com/users/kmarekspartz/events{/privacy}", "received_events_url": "https://api.github.com/users/kmarekspartz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-31T05:30:23Z", "updated_at": "2017-09-29T08:08:34Z", "closed_at": "2017-09-29T08:08:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a file with a bunch of mocks, I'm seeing a bunch of these false positives:\r\n\r\n`tests/test_filename.py:555: unused attribute 'return_value' (60% confidence)`\r\n\r\nMocking and dead code don't feel like they go well together...\r\n\r\nIgnore this test file for now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/92", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/92/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/92/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/92", "id": 252186707, "node_id": "MDU6SXNzdWUyNTIxODY3MDc=", "number": 92, "title": "Filtering items with a regex", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-23T07:31:38Z", "updated_at": "2017-08-28T07:17:47Z", "closed_at": "2017-08-28T07:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I currently have [a custom script](https://github.com/qutebrowser/qutebrowser/blob/master/scripts/dev/run_vulture.py) to run vulture for two reasons:\r\n\r\n- Dynamically generating a whitelist.\r\n- Filtering any functions matching `[a-z]+[A-Z][a-zA-Z]+` because those are typically virtual methods provided by Qt/PyQt, i.e. from C++ - any Python methods are named `snake_case` in my project.\r\n\r\nUnfortunately, the script broke quite often recently because things changed in vulture in subtle ways. I don't think the whitelist is the problem (after all, I just pass that to vulture), but the filtering means I need to have my own `report` there so I can filter the items before they are reported.\r\n\r\nI say two ways around this:\r\n\r\n- Adding something like a `--func-filter-regex` (and maybe `--props-filter-regex`, etc.) commandline argument.\r\n- Adding something like a `filter_callback` to `vulture.report`, which is only intended for when using vulture programmatically, and gets called with each `Item` once. If it returns `True`, the given item does not get reported.\r\n\r\nBoth of those would probably make my script a bit less relying on vulture internals. For the first one, I could even switch to running `vulture.main`.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/90", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/90/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/90/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/90", "id": 249812223, "node_id": "MDU6SXNzdWUyNDk4MTIyMjM=", "number": 90, "title": "unreachable else", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-12T13:28:50Z", "updated_at": "2017-08-13T23:00:11Z", "closed_at": "2017-08-13T23:00:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Detect unreachable else clauses by detecting if True.\r\n\r\nFor example:\r\n```python\r\nif True:\r\n    foo()\r\nelse:\r\n    bar()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/88", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/88/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/88/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/88", "id": 249296936, "node_id": "MDU6SXNzdWUyNDkyOTY5MzY=", "number": 88, "title": "detect unreachable code if the condition is unsatisfiable", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-10T10:08:08Z", "updated_at": "2017-08-13T23:01:47Z", "closed_at": "2017-08-13T23:01:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As, the TODO file says, it would consists of:\r\n\r\n- [X] Detect unreachable code \u00e0 la while False: (by implementing Vulture.visit_While(self, node).\r\n- [ ] Detect unreachable code \u00e0 la if False: (by implementing Vulture.visit_If(self, node).\r\n- [X] ~~Detect unreachable else clauses by detecting if True:.~~ (#90)\r\n- [ ] Detect unreachable code for ast.IfExp.\r\n- [X] ~~Detect unreachable code for ast.Assert.~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/87", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/87/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/87/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/87", "id": 249083265, "node_id": "MDU6SXNzdWUyNDkwODMyNjU=", "number": 87, "title": "underscore prefix on functions does not prevent an 'unused function' warning.", "user": {"login": "timjstewart", "id": 55925, "node_id": "MDQ6VXNlcjU1OTI1", "avatar_url": "https://avatars1.githubusercontent.com/u/55925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timjstewart", "html_url": "https://github.com/timjstewart", "followers_url": "https://api.github.com/users/timjstewart/followers", "following_url": "https://api.github.com/users/timjstewart/following{/other_user}", "gists_url": "https://api.github.com/users/timjstewart/gists{/gist_id}", "starred_url": "https://api.github.com/users/timjstewart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timjstewart/subscriptions", "organizations_url": "https://api.github.com/users/timjstewart/orgs", "repos_url": "https://api.github.com/users/timjstewart/repos", "events_url": "https://api.github.com/users/timjstewart/events{/privacy}", "received_events_url": "https://api.github.com/users/timjstewart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-09T16:10:40Z", "updated_at": "2017-08-09T21:04:29Z", "closed_at": "2017-08-09T21:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the Python library Flask for developing routes.\r\n\r\nHere is my route:\r\n\r\n```\r\n@app.route(\"/status\", methods=['GET'])\r\ndef status():\r\n    return \"OK\", 200\r\n```\r\n\r\nThis yields this warning:\r\n\r\n```\r\nserver.py:66: unused function 'status'\r\n```\r\n\r\nIf I add an underscore prefix to the status function name, I get this warning:\r\n\r\n```\r\nserver.py:66: unused function '_status'\r\n```\r\n\r\nSince the function name is not important to Flask, I can just call the function '_' which yields\r\n\r\n```\r\nserver.py:66: unused function '_'\r\n```\r\n\r\nIs there some way of avoiding this warning?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/84", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/84/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/84/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/84", "id": 247770151, "node_id": "MDU6SXNzdWUyNDc3NzAxNTE=", "number": 84, "title": "diagnose more unreachable code", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-03T16:51:39Z", "updated_at": "2017-08-04T14:42:53Z", "closed_at": "2017-08-04T14:42:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "vulture should be able to detect unreachable code after the following statements:\r\n* `raise`\r\n* `continue`\r\n* `break`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/82", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/82/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/82/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/82", "id": 246058047, "node_id": "MDU6SXNzdWUyNDYwNTgwNDc=", "number": 82, "title": "Report any code after return statements", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-27T14:27:00Z", "updated_at": "2017-08-03T14:12:39Z", "closed_at": "2017-08-03T14:12:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Report any code which is written after 'return' statement in the same logic level in a function.\r\nFor example:\r\n```python\r\ndef foo():\r\n    return bar()\r\n    print(\"Hello\")\r\n```\r\n\r\nThis should report Line 3 as dead code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/80", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/80/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/80/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/80", "id": 245345190, "node_id": "MDU6SXNzdWUyNDUzNDUxOTA=", "number": 80, "title": "Travis CI failing", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-25T09:46:53Z", "updated_at": "2017-07-25T22:00:55Z", "closed_at": "2017-07-25T22:00:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "IMHO, it's because Travis recently changed the default environment from `precise` to `trusty` and this had side effects which in turn cause some errors to be raised when testing for`pypi`, therefore failing CI build every time. \r\n\r\nI think, an explicit mention of `dist: precise` in `.travis.yml` will fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/78", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/78/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/78/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/78", "id": 245294141, "node_id": "MDU6SXNzdWUyNDUyOTQxNDE=", "number": 78, "title": "Distribute vulture as a wheel file", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-25T06:02:55Z", "updated_at": "2017-07-26T13:56:40Z", "closed_at": "2017-07-26T13:56:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since an installation through python wheels is comparatively faster than a source install, we can distribute vulture as a universal Python wheel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/73", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/73/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/73/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/73", "id": 243810688, "node_id": "MDU6SXNzdWUyNDM4MTA2ODg=", "number": 73, "title": "analysis time grow significantly after shipping vulture as a package", "user": {"login": "roivanov", "id": 12698352, "node_id": "MDQ6VXNlcjEyNjk4MzUy", "avatar_url": "https://avatars1.githubusercontent.com/u/12698352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roivanov", "html_url": "https://github.com/roivanov", "followers_url": "https://api.github.com/users/roivanov/followers", "following_url": "https://api.github.com/users/roivanov/following{/other_user}", "gists_url": "https://api.github.com/users/roivanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/roivanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roivanov/subscriptions", "organizations_url": "https://api.github.com/users/roivanov/orgs", "repos_url": "https://api.github.com/users/roivanov/repos", "events_url": "https://api.github.com/users/roivanov/events{/privacy}", "received_events_url": "https://api.github.com/users/roivanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-07-18T18:33:57Z", "updated_at": "2017-07-25T15:04:19Z", "closed_at": "2017-07-19T22:08:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "vulture analysis for our project (80k lines) took about 6 seconds _before_ revision 7e41b08cbc7ef3a4076ee84c749a9a8058ed6e0c (Ship vulture as a package. (#54))\r\nPlease see attached 1.log\r\n\r\nEdited: attached file removed\r\n\r\nSince after that revision (and for all releases 0.15-0.18) analysis takes 1 hour.\r\nPlease see attached 2.log\r\n\r\nTruss shows significantly increased amount of failed lstat64() and open64() system calls. See truss.out\r\nPossible cause is **file vulture.py (for module vulture) not found** in \"pip install\" command.\r\n\r\nEdited: attached file removed\r\n\r\n591.550383    lstat64(\"/usr\", 0xF8296830)                       = 0\r\n591.550479    lstat64(\"/usr/lib\", 0xF8296830)                   = 0\r\n591.550545    lstat64(\"/usr/lib/python2.7\", 0xF8296830) = 0\r\n591.550630    lstat64(\"/usr/lib/python2.7/lib-tk\", 0xF8296830) = 0\r\n591.550730    stat64(\"/usr/lib/python2.7/lib-tk/vulture\", 0xF8296C30) Err#2 ENOENT\r\n591.550802    open64(\"/usr/lib/python2.7/lib-tk/vulture.so\", O_RDONLY) Err#2 ENOENT\r\n591.550850    open64(\"/usr/lib/python2.7/lib-tk/vulturemodule.so\", O_RDONLY) Err#2 ENOENT\r\n591.550926    open64(\"/usr/lib/python2.7/lib-tk/vulture.py\", O_RDONLY) Err#2 ENOENT\r\n591.550982    open64(\"/usr/lib/python2.7/lib-tk/vulture.pyc\", O_RDONLY) Err#2 ENOENT\r\n591.551094    lstat64(\"/tmp\", 0xF8296830)                       = 0\r\n591.551167    lstat64(\"/tmp/vulture-test\", 0xF8296830)  = 0\r\n591.551263    lstat64(\"/tmp/vulture-test/latest\", 0xF8296830)   = 0\r\n591.551362    lstat64(\"/tmp/vulture-test/latest/current\", 0xF8296830) = 0\r\n591.551433    lstat64(\"/tmp/vulture-test/latest/current/virt\", 0xF8296830) = 0\r\n591.551536    lstat64(\"/tmp/vulture-test/latest/current/virt/lib\", 0xF8296830) = 0\r\n591.551665    lstat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7\", 0xF8296830) = 0\r\n591.551796    lstat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/site-packages\", 0xF8296830) = 0\r\n591.551939    stat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/site-packages/vulture\", 0xF8296C30) = 0\r\n591.551997    stat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/site-packages/vulture/__init__.py\", 0xF82966E0) = 0\r\n591.552122    open64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/site-packages/vulture/whitelists/django.py\", O_RDONLY) Err#2 ENOENT\r\n591.552252    lstat64(\"/tmp\", 0xF8296830)                       = 0\r\n591.552326    lstat64(\"/tmp/vulture-test\", 0xF8296830)  = 0\r\n591.552396    lstat64(\"/tmp/vulture-test/latest\", 0xF8296830)   = 0\r\n591.552467    lstat64(\"/tmp/vulture-test/latest/current\", 0xF8296830) = 0\r\n591.552538    lstat64(\"/tmp/vulture-test/latest/current/virt\", 0xF8296830) = 0\r\n591.552635    lstat64(\"/tmp/vulture-test/latest/current/virt/bin\", 0xF8296830) = 0\r\n591.552754    stat64(\"/tmp/vulture-test/latest/current/virt/bin/vulture\", 0xF8296C30) = 0\r\n591.552836    open64(\"/tmp/vulture-test/latest/current/virt/bin/vulture.so\", O_RDONLY) Err#2 ENOENT\r\n591.552903    open64(\"/tmp/vulture-test/latest/current/virt/bin/vulturemodule.so\", O_RDONLY) Err#2 ENOENT\r\n591.552958    open64(\"/tmp/vulture-test/latest/current/virt/bin/vulture.py\", O_RDONLY) Err#2 ENOENT\r\n591.553049    open64(\"/tmp/vulture-test/latest/current/virt/bin/vulture.pyc\", O_RDONLY) Err#2 ENOENT\r\n591.553162    lstat64(\"/tmp\", 0xF8296830)                       = 0\r\n591.553240    lstat64(\"/tmp/vulture-test\", 0xF8296830)  = 0\r\n591.553331    lstat64(\"/tmp/vulture-test/latest\", 0xF8296830)   = 0\r\n591.553400    lstat64(\"/tmp/vulture-test/latest/current\", 0xF8296830) = 0\r\n591.553506    lstat64(\"/tmp/vulture-test/latest/current/virt\", 0xF8296830) = 0\r\n591.553579    lstat64(\"/tmp/vulture-test/latest/current/virt/lib\", 0xF8296830) = 0\r\n591.553682    lstat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7\", 0xF8296830) = 0\r\n591.553799    stat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/vulture\", 0xF8296C30) Err#2 ENOENT\r\n591.553860    open64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/vulture.so\", O_RDONLY) Err#2 ENOENT\r\n591.553954    open64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/vulturemodule.so\", O_RDONLY) Err#2 ENOENT\r\n591.554020    open64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/vulture.py\", O_RDONLY) Err#2 ENOENT\r\n591.554099    open64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/vulture.pyc\", O_RDONLY) Err#2 ENOENT\r\n591.554194    lstat64(\"/tmp\", 0xF8296830)                       = 0\r\n591.554286    lstat64(\"/tmp/vulture-test\", 0xF8296830)  = 0\r\n591.554386    lstat64(\"/tmp/vulture-test/latest\", 0xF8296830)   = 0\r\n591.554467    lstat64(\"/tmp/vulture-test/latest/current\", 0xF8296830) = 0\r\n591.554563    lstat64(\"/tmp/vulture-test/latest/current/virt\", 0xF8296830) = 0\r\n591.554668    lstat64(\"/tmp/vulture-test/latest/current/virt/lib\", 0xF8296830) = 0\r\n591.554752    lstat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7\", 0xF8296830) = 0\r\n591.554847    lstat64(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/lib-dynload\", 0xF8296830) = 0\r\n591.554928    readlink(\"/tmp/vulture-test/latest/current/virt/lib/python2.7/lib-dynload\", \"/usr/lib/python2.7/lib-dynload\", 1024) = 30\r\n591.555026    lstat64(\"/usr\", 0xF82966B0)                       = 0\r\n591.555128    lstat64(\"/usr/lib\", 0xF82966B0)                   = 0\r\n591.555235    lstat64(\"/usr/lib/python2.7\", 0xF82966B0) = 0\r\n591.555300    lstat64(\"/usr/lib/python2.7/lib-dynload\", 0xF82966B0) = 0\r\n591.555408    stat64(\"/usr/lib/python2.7/lib-dynload/vulture\", 0xF8296C30) Err#2 ENOENT\r\n591.555468    open64(\"/usr/lib/python2.7/lib-dynload/vulture.so\", O_RDONLY) Err#2 ENOENT\r\n591.555543    open64(\"/usr/lib/python2.7/lib-dynload/vulturemodule.so\", O_RDONLY) Err#2 ENOENT\r\n591.555615    open64(\"/usr/lib/python2.7/lib-dynload/vulture.py\", O_RDONLY) Err#2 ENOENT\r\n591.555689    open64(\"/usr/lib/python2.7/lib-dynload/vulture.pyc\", O_RDONLY) Err#2 ENOENT\r\n591.555776    lstat64(\"/usr\", 0xF8296830)                       = 0\r\n591.555861    lstat64(\"/usr/lib\", 0xF8296830)                   = 0\r\n591.555957    lstat64(\"/usr/lib/python2.7\", 0xF8296830) = 0\r\n591.556046    stat64(\"/usr/lib/python2.7/vulture\", 0xF8296C30) Err#2 ENOENT\r\n591.556098    open64(\"/usr/lib/python2.7/vulture.so\", O_RDONLY) Err#2 ENOENT\r\n591.556145    open64(\"/usr/lib/python2.7/vulturemodule.so\", O_RDONLY) Err#2 ENOENT\r\n591.556192    open64(\"/usr/lib/python2.7/vulture.py\", O_RDONLY) Err#2 ENOENT\r\n591.556238    open64(\"/usr/lib/python2.7/vulture.pyc\", O_RDONLY) Err#2 ENOENT\r\n591.556320    lstat64(\"/usr\", 0xF8296830)                       = 0\r\n591.556387    lstat64(\"/usr/lib\", 0xF8296830)                   = 0\r\n591.556453    lstat64(\"/usr/lib/python2.7\", 0xF8296830) = 0\r\n591.556520    lstat64(\"/usr/lib/python2.7/plat-sunos5\", 0xF8296830) = 0\r\n591.556598    stat64(\"/usr/lib/python2.7/plat-sunos5/vulture\", 0xF8296C30) Err#2 ENOENT\r\n591.556650    open64(\"/usr/lib/python2.7/plat-sunos5/vulture.so\", O_RDONLY) Err#2 ENOENT\r\n591.556700    open64(\"/usr/lib/python2.7/plat-sunos5/vulturemodule.so\", O_RDONLY) Err#2 ENOENT\r\n591.556751    open64(\"/usr/lib/python2.7/plat-sunos5/vulture.py\", O_RDONLY) Err#2 ENOENT\r\n591.556826    open64(\"/usr/lib/python2.7/plat-sunos5/vulture.pyc\", O_RDONLY) Err#2 ENOENT", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/72", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/72/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/72/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/72", "id": 243806833, "node_id": "MDU6SXNzdWUyNDM4MDY4MzM=", "number": 72, "title": "--sort-by-size causes issues with exec", "user": {"login": "mjalkio", "id": 3981503, "node_id": "MDQ6VXNlcjM5ODE1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3981503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjalkio", "html_url": "https://github.com/mjalkio", "followers_url": "https://api.github.com/users/mjalkio/followers", "following_url": "https://api.github.com/users/mjalkio/following{/other_user}", "gists_url": "https://api.github.com/users/mjalkio/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjalkio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjalkio/subscriptions", "organizations_url": "https://api.github.com/users/mjalkio/orgs", "repos_url": "https://api.github.com/users/mjalkio/repos", "events_url": "https://api.github.com/users/mjalkio/events{/privacy}", "received_events_url": "https://api.github.com/users/mjalkio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-18T18:21:06Z", "updated_at": "2017-07-19T23:10:55Z", "closed_at": "2017-07-19T23:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm experiencing issues with the `--sort-by-size` flag and the `exec` statement. If we have a very simple file `test.py`:\r\n\r\n```\r\ndef foo():\r\n    exec('print(\"bar\")')\r\n\r\nfoo()\r\n```\r\n\r\nI can run `vulture test.py` without issues. However, if I run `vulture test.py --sort-by-size` I get the following output:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/mjalkio/Code/classypy/venv/bin/vulture\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 414, in main\r\n    vulture.scavenge(args)\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 153, in scavenge\r\n    self.scan(module_string, filename=module)\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 114, in scan\r\n    self.visit(node)\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 384, in visit\r\n    return self.generic_visit(node)\r\n  File \"/usr/local/Cellar/python/2.7.13/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 249, in generic_visit\r\n    self.visit(item)\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 381, in visit\r\n    visitor(node)\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 292, in visit_FunctionDef\r\n    self.defined_funcs.append(self._get_item(node, 'function'))\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/core.py\", line 256, in _get_item\r\n    size = lines.count_lines(node) if self.sort_by_size else 1\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/lines.py\", line 29, in count_lines\r\n    return get_last_line_number(node) - node.lineno + 1\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/lines.py\", line 18, in get_last_line_number\r\n    last_child = _get_last_child(node)\r\n  File \"/Users/mjalkio/Code/classypy/venv/lib/python2.7/site-packages/vulture/lines.py\", line 12, in _get_last_child\r\n    return last_children[-1]\r\nTypeError: 'Str' object does not support indexing\r\n```\r\n\r\nDo you have any idea why this is?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/68", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/68/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/68/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/68", "id": 242240178, "node_id": "MDU6SXNzdWUyNDIyNDAxNzg=", "number": 68, "title": "Use utils.py", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-12T02:41:42Z", "updated_at": "2017-07-12T08:14:37Z", "closed_at": "2017-07-12T08:14:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "IMHO, many things from `core` can be moved to `utils`, otherwise we may face circular imports.\r\n\r\nOur utils may contain:\r\n```py\r\nENCODING = 'utf-8'\r\nENCODING_REGEX = re.compile(\r\n    r\"^[ \\t\\v]*#.*?coding[:=][ \\t]*([-_.a-zA-Z0-9]+).*?$\", flags=re.M)\r\n\r\nclass VultureInputException(Exception):\r\n    pass\r\n```\r\nWe may also export ` _format_path` method as `format_path`:\r\n```py\r\ndef format_path(path):\r\n    if not path:\r\n        return path\r\n    relpath = os.path.relpath(path)\r\n    return relpath if not relpath.startswith('..') else path\r\n```\r\nAlso,\r\n```py\r\ndef read_file(filename):\r\n    # Python >= 3.2\r\n    try:\r\n        # Use encoding detected by tokenize.detect_encoding().\r\n        with tokenize.open(filename) as f:\r\n            return f.read()\r\n    except (SyntaxError, UnicodeDecodeError) as err:\r\n        raise VultureInputException(err)\r\n    except AttributeError:\r\n        # tokenize.open was added in Python 3.2.\r\n        pass\r\n\r\n    # Python < 3.2\r\n    try:\r\n        with codecs.open(filename, encoding=ENCODING) as f:\r\n            return f.read()\r\n    except UnicodeDecodeError as err:\r\n        raise VultureInputException(err)\r\n\r\n\r\nclass LoggingList(list):\r\n    def __init__(self, name, verbose):\r\n        self._name = name\r\n        self._verbose = verbose\r\n        return list.__init__(self)\r\n\r\n    def append(self, item):\r\n        if self._verbose:\r\n            print('{0} <- {1}'.format(self._name, item))\r\n        list.append(self, item)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/67", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/67/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/67/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/67", "id": 241560718, "node_id": "MDU6SXNzdWUyNDE1NjA3MTg=", "number": 67, "title": "Let Item inherit from 'object'", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-09T21:36:51Z", "updated_at": "2017-07-21T10:36:28Z", "closed_at": "2017-07-21T10:36:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Let Item inherit from \"object\", not from \"str\". The new class needs the members \"name\", ```__eq__``` (returns name) and ```__hash__``` (returns hash(name)).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/61", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/61/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/61/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/61", "id": 239566932, "node_id": "MDU6SXNzdWUyMzk1NjY5MzI=", "number": 61, "title": "Differentiate between functions and classes", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-29T18:12:37Z", "updated_at": "2017-07-05T07:59:16Z", "closed_at": "2017-07-05T07:59:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add a \u201cdefined_classes\u201d list and store the defined classes there. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/60", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/60/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/60/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/60", "id": 239166699, "node_id": "MDU6SXNzdWUyMzkxNjY2OTk=", "number": 60, "title": "Augment output with size of unused functions/variables", "user": {"login": "jackric", "id": 259713, "node_id": "MDQ6VXNlcjI1OTcxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/259713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackric", "html_url": "https://github.com/jackric", "followers_url": "https://api.github.com/users/jackric/followers", "following_url": "https://api.github.com/users/jackric/following{/other_user}", "gists_url": "https://api.github.com/users/jackric/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackric/subscriptions", "organizations_url": "https://api.github.com/users/jackric/orgs", "repos_url": "https://api.github.com/users/jackric/repos", "events_url": "https://api.github.com/users/jackric/events{/privacy}", "received_events_url": "https://api.github.com/users/jackric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-28T13:37:21Z", "updated_at": "2017-07-03T13:44:08Z", "closed_at": "2017-06-28T16:44:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When Vulture finds lots of unused variables and functions in a codebase, it would be useful to show the size (as lines/AST contents/etc) of each entity. This allows a developer to prioritize his purging work, i.e. pick the juiciest low hanging fruit first.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/59", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/59/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/59/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/59", "id": 238365988, "node_id": "MDU6SXNzdWUyMzgzNjU5ODg=", "number": 59, "title": "Choose whitelists depending on used imports", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-25T07:41:15Z", "updated_at": "2017-07-03T20:31:55Z", "closed_at": "2017-07-03T20:31:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Turn stdlib.py into \"`stdlib`\" dir with files \"`ast.py`\", \"`sys.py`\", etc. Then if \"`ast`\" is imported, use \"`ast`\" whitelist.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/58", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/58/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/58/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/58", "id": 238365865, "node_id": "MDU6SXNzdWUyMzgzNjU4NjU=", "number": 58, "title": "Allow running \"python -m vulture\"", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-25T07:37:25Z", "updated_at": "2017-06-29T19:14:59Z", "closed_at": "2017-06-29T19:14:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/55", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/55/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/55/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/55", "id": 237962882, "node_id": "MDU6SXNzdWUyMzc5NjI4ODI=", "number": 55, "title": "Implement a flag for toggling the whitelists off", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-22T20:22:43Z", "updated_at": "2017-06-23T02:46:49Z", "closed_at": "2017-06-23T02:46:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After #50 vulture would include whitelists by default. We would need a flag in order to suppress this behaviour. IMHO, this can be:\r\n```\r\nvulture src/ --no-whitelist\r\n```\r\nor\r\n```\r\nvuture src/ -n\r\n```\r\n\r\nCC @jendrikseipp ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/53", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/53/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/53/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/53", "id": 235955604, "node_id": "MDU6SXNzdWUyMzU5NTU2MDQ=", "number": 53, "title": "There is no requirements file", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T17:36:38Z", "updated_at": "2017-06-14T18:25:20Z", "closed_at": "2017-06-14T18:25:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "IMHO we should have two files:\r\n\r\n`requirements.txt`:\r\n```\r\npbr==3.0.1\r\nsix==1.10.0\r\nstevedore==1.23.0\r\nvirtualenv==15.1.0\r\nvulture==0.14\r\n```\r\n\r\n`test-requirements.txt`:\r\n```\r\npluggy==0.4.0\r\npy==1.4.34\r\ntox==2.7.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/52", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/52/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/52/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/52", "id": 235831809, "node_id": "MDU6SXNzdWUyMzU4MzE4MDk=", "number": 52, "title": "Package vulture", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T10:20:32Z", "updated_at": "2017-06-23T19:13:11Z", "closed_at": "2017-06-23T19:13:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We need to provide vulture as a package in order to ship additional package data like whitelists, etc.\r\n\r\nDirectory structure:\r\n```\r\nvulture/\r\n    __init__.py (contains __version__)\r\n    core.py (with the contents from old vulture.py)\r\n```\r\n\r\nRefer: https://github.com/jendrikseipp/vulture/pull/50#discussion_r121908392", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/51", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/51/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/51/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/51", "id": 235722571, "node_id": "MDU6SXNzdWUyMzU3MjI1NzE=", "number": 51, "title": "unused for loop variable", "user": {"login": "BebeSparkelSparkel", "id": 10747532, "node_id": "MDQ6VXNlcjEwNzQ3NTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/10747532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BebeSparkelSparkel", "html_url": "https://github.com/BebeSparkelSparkel", "followers_url": "https://api.github.com/users/BebeSparkelSparkel/followers", "following_url": "https://api.github.com/users/BebeSparkelSparkel/following{/other_user}", "gists_url": "https://api.github.com/users/BebeSparkelSparkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BebeSparkelSparkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BebeSparkelSparkel/subscriptions", "organizations_url": "https://api.github.com/users/BebeSparkelSparkel/orgs", "repos_url": "https://api.github.com/users/BebeSparkelSparkel/repos", "events_url": "https://api.github.com/users/BebeSparkelSparkel/events{/privacy}", "received_events_url": "https://api.github.com/users/BebeSparkelSparkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-13T23:36:45Z", "updated_at": "2017-06-15T01:01:21Z", "closed_at": "2017-06-14T07:58:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I really like this library.\r\n\r\nI'm have been getting unused messages about the variable defined by a for loop which is just a place holder.\r\n\r\nEx\r\n```python\r\nfor repeat in range(10):\r\n    do something that doesn't use repeat\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/49", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/49/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/49/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/49", "id": 234268965, "node_id": "MDU6SXNzdWUyMzQyNjg5NjU=", "number": 49, "title": "Implement --min-confidence flag", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-07T16:30:12Z", "updated_at": "2017-06-24T04:15:01Z", "closed_at": "2017-06-24T04:15:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Input of the flag should be the minimum confidence value (CV)) - results having a CV lower than this should not be reported.\r\n\r\nUsage:\r\n```\r\nvulture file.py --min-confidence 70\r\n```\r\nshould only show the results which have a CV >= 70%.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/48", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/48/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/48/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/48", "id": 234262791, "node_id": "MDU6SXNzdWUyMzQyNjI3OTE=", "number": 48, "title": "Implement confidence values", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-07T16:08:25Z", "updated_at": "2017-08-09T13:41:21Z", "closed_at": "2017-08-09T13:41:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice if vulture reports a confidence value associated with every result.\r\n\r\nStrategy for calculating confidence values:\r\n* `imports` are reported with 100% confidence\r\n* Anything we are not sure about should be reported with 50% confidence\r\n* `*` imports should with 0 % confidence\r\n\r\n| Construct | Confidence |\r\n|     :---:      |          :---:    |\r\n|import\t| 100%|\r\n|from foo import *\t|0%|\r\n|variable\t|50%|\r\n|function\t|50%|\r\n|class\t|50%|\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/47", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/47/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/47/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/47", "id": 233723513, "node_id": "MDU6SXNzdWUyMzM3MjM1MTM=", "number": 47, "title": "unused functions' parameters and unused variables having same names are not reported.", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-05T22:01:07Z", "updated_at": "2017-06-06T09:57:57Z", "closed_at": "2017-06-06T09:57:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example. running vulture on the following file:\r\n```python\r\nfirst_name = \"Rahul\"\r\nsur_name = \"Jha\"\r\n\r\ndef say_hello(first_name, sur_name):\r\n\t# first_name and sur_name are not reported\r\n\tpass\r\n\r\n```\r\nwe would have following results:\r\n```\r\ndead.py:1: Unused variable 'first_name'\r\ndead.py:2: Unused variable 'sur_name'\r\ndead.py:4: Unused function 'say_hello'\r\n```\r\nIt should also report that `first_name`, `sur_name` in `line 4` are not being used as in this case:\r\n```python\r\nfirst_name = \"Rahul\"\r\nsur_name = \"Jha\"\r\n\r\ndef say_hello(a, b):\r\n\t# first_name and sur_name are not reported by vulture\r\n\tpass\r\n```\r\nwhich would produce:\r\n```\r\ndead2.py:1: Unused variable 'first_name'\r\ndead2.py:2: Unused variable 'sur_name'\r\ndead2.py:4: Unused function 'say_hello'\r\ndead2.py:4: Unused variable 'a'\r\ndead2.py:4: Unused variable 'b'\r\n```\r\n\r\nIs this a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/46", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/46/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/46/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/46", "id": 233659679, "node_id": "MDU6SXNzdWUyMzM2NTk2Nzk=", "number": 46, "title": "Add appveyor CI", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-05T17:42:46Z", "updated_at": "2017-06-23T02:18:08Z", "closed_at": "2017-06-23T02:18:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add Appveyor CI testing to avoid any regressions from switching from Win32 command execution to python package loading.\r\n\r\nReference: https://github.com/coala/coala-bears/issues/1805#issuecomment-305966858 \r\n\r\nCC @jendrikseipp @jayvdb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/43", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/43/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/43/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/43", "id": 225757963, "node_id": "MDU6SXNzdWUyMjU3NTc5NjM=", "number": 43, "title": "PermissionError on scavenging a file in python3.5.1", "user": {"login": "jfrfonseca", "id": 5423229, "node_id": "MDQ6VXNlcjU0MjMyMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5423229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrfonseca", "html_url": "https://github.com/jfrfonseca", "followers_url": "https://api.github.com/users/jfrfonseca/followers", "following_url": "https://api.github.com/users/jfrfonseca/following{/other_user}", "gists_url": "https://api.github.com/users/jfrfonseca/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrfonseca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrfonseca/subscriptions", "organizations_url": "https://api.github.com/users/jfrfonseca/orgs", "repos_url": "https://api.github.com/users/jfrfonseca/repos", "events_url": "https://api.github.com/users/jfrfonseca/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrfonseca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-02T17:00:58Z", "updated_at": "2017-05-02T17:34:26Z", "closed_at": "2017-05-02T17:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting to scavenge a file, raises a PermissionError when attempting to open /etc/cups/ssl", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/42", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/42/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/42/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/42", "id": 223044814, "node_id": "MDU6SXNzdWUyMjMwNDQ4MTQ=", "number": 42, "title": "Vulture doesn't handle mixins?", "user": {"login": "audiolion", "id": 2430381, "node_id": "MDQ6VXNlcjI0MzAzODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2430381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/audiolion", "html_url": "https://github.com/audiolion", "followers_url": "https://api.github.com/users/audiolion/followers", "following_url": "https://api.github.com/users/audiolion/following{/other_user}", "gists_url": "https://api.github.com/users/audiolion/gists{/gist_id}", "starred_url": "https://api.github.com/users/audiolion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/audiolion/subscriptions", "organizations_url": "https://api.github.com/users/audiolion/orgs", "repos_url": "https://api.github.com/users/audiolion/repos", "events_url": "https://api.github.com/users/audiolion/events{/privacy}", "received_events_url": "https://api.github.com/users/audiolion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-20T12:05:05Z", "updated_at": "2017-04-20T12:44:23Z", "closed_at": "2017-04-20T12:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a mixin with some base code that is going to be used by a number of classes\r\n\r\n```\r\n\r\nMyMixin(object):\r\n\r\n  def check_status(self):\r\n      return ...\r\n\r\nMyClass(MyMixin):\r\n  ....\r\n\r\n```\r\n\r\nVulture seems to complain that `check_status` is an unused function\r\n\r\nedit: maybe this is because `check_status` is called by another mixin\r\n\r\n```\r\n\r\n# some.third.party\r\nMyOtherMixin(object):\r\n\r\n  def check_object(self):\r\n    status = self.check_status()\r\n    ...\r\n\r\n# local.py\r\nfrom some.third.party import MyOtherMixin\r\n\r\nMyClass(MyMixin, MyOtherMixin):\r\n  ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/41", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/41/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/41/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/41", "id": 220401105, "node_id": "MDU6SXNzdWUyMjA0MDExMDU=", "number": 41, "title": "syntax based errors when running vulture installed through pypi ", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-08T13:53:56Z", "updated_at": "2017-04-09T03:52:08Z", "closed_at": "2017-04-09T03:52:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I installed installed through pypi for python2.7.12 (in an isolated virtualenv).\r\nThen ran:\r\n```\r\nvulture localstack --exclude=localstack/.venv/\r\n```\r\nIt gave the following output:\r\n```\r\nlocalstack/localstack/dashboard/infra.py:126: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/mock/apis/firehose_api.py:65: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/mock/apis/lambda_api.py:97: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/mock/generic_proxy.py:71: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/mock/infra.py:239: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/utils/aws/aws_models.py:43: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/utils/aws/aws_stack.py:87: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/utils/common.py:43: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/utils/kinesis/kinesis_connector.py:97: invalid syntax at \"except Exception, e:\"\r\nlocalstack/localstack/utils/kinesis/kinesis_util.py:31: invalid syntax at \"except Exception, e:\"\r\nlocalstack/setup.py:40: Missing parentheses in call to 'print' at \"print e.output\"\r\nlocalstack/tests/test_integration.py:180: invalid syntax at \"except KeyboardInterrupt, e:\"\r\nlocalstack/tests/test_kinesis_errors.py:43: invalid syntax at \"except KeyboardInterrupt, e:\"\r\nlocalstack/localstack/constants.py:10: Unused variable 'REGION_LOCAL'\r\nlocalstack/localstack/constants.py:13: Unused variable 'ENV_DEV'\r\nlocalstack/localstack/constants.py:26: Unused variable 'DEFAULT_PORT_REDSHIFT'\r\nlocalstack/localstack/constants.py:28: Unused variable 'DEFAULT_PORT_APIGATEWAY_BACKEND'\r\nlocalstack/localstack/constants.py:29: Unused variable 'DEFAULT_PORT_KINESIS_BACKEND'\r\nlocalstack/localstack/constants.py:30: Unused variable 'DEFAULT_PORT_DYNAMODB_BACKEND'\r\nlocalstack/localstack/constants.py:31: Unused variable 'DEFAULT_PORT_SNS_BACKEND'\r\nlocalstack/localstack/constants.py:47: Unused variable 'BIND_HOST'\r\nlocalstack/localstack/constants.py:85: Unused variable 'APPLICATION_AMZ_JSON_1_0'\r\nlocalstack/localstack/constants.py:86: Unused variable 'APPLICATION_AMZ_JSON_1_1'\r\nlocalstack/localstack/constants.py:90: Unused variable 'LAMBDA_TEST_ROLE'\r\nlocalstack/localstack/constants.py:91: Unused variable 'LAMBDA_MAIN_SCRIPT_NAME'\r\nlocalstack/localstack/constants.py:94: Unused variable 'ELASTICSEARCH_JAR_URL'\r\nlocalstack/localstack/dashboard/api.py:14: Unused function 'spec'\r\nlocalstack/localstack/dashboard/api.py:64: Unused function 'hello'\r\nlocalstack/localstack/dashboard/api.py:69: Unused function 'send_static'\r\nlocalstack/localstack/mock/apis/dynamodbstreams_api.py:5: Unused import 'uuid'\r\nlocalstack/localstack/mock/apis/dynamodbstreams_api.py:8: Unused import '__init__'\r\nlocalstack/localstack/mock/apis/dynamodbstreams_api.py:28: Unused function 'post_request'\r\nlocalstack/localstack/mock/proxy/apigateway_listener.py:7: Unused function 'update_apigateway'\r\nlocalstack/localstack/mock/proxy/dynamodb_listener.py:11: Unused function 'update_dynamodb'\r\nlocalstack/localstack/mock/proxy/dynamodb_listener.py:23: Unused variable 'response_data'\r\nlocalstack/localstack/mock/proxy/kinesis_listener.py:8: Unused function 'update_kinesis'\r\nlocalstack/localstack/mock/proxy/kinesis_listener.py:39: Unused attribute 'status_code'\r\nlocalstack/localstack/mock/proxy/kinesis_listener.py:46: Unused attribute '_content'\r\nlocalstack/localstack/mock/proxy/sns_listener.py:13: Unused function 'update_sns'\r\nlocalstack/localstack/utils/kinesis/kclipy_helper.py:6: Unused import 'run'\r\nlocalstack/localstack/utils/kinesis/kclipy_helper.py:8: Unused import 'argparse'\r\nlocalstack/localstack/utils/kinesis/kclipy_helper.py:10: Unused import 'samples'\r\nlocalstack/localstack/utils/kinesis/kclipy_helper.py:11: Unused import 'traceback'\r\nlocalstack/localstack/utils/kinesis/kclipy_helper.py:61: Unused function 'get_kcl_app_command'\r\nlocalstack/localstack/utils/kinesis/kclipy_helper.py:90: Unused function 'create_config_file'\r\nlocalstack/tests/lambdas/lambda_integration.py:12: Unused function '_deserialize_n'\r\nlocalstack/tests/lambdas/lambda_integration.py:15: Unused function '_deserialize_b'\r\nlocalstack/tests/lambdas/lambda_integration.py:19: Unused function 'handler'\r\nlocalstack/tests/test_iam_credentials.py:4: Unused import 'time'\r\n```\r\nBut, since it had based error messages , I tried the same with vulture for python3, still the same results. \ud83d\ude15\r\nTrying a command:\r\n```\r\npython /path/to/vulture.py localstack --exclude=localstack/.venv/\r\n```\r\nmade it work!\r\nWhat can be possible reasons?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/39", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/39/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/39/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/39", "id": 219846392, "node_id": "MDU6SXNzdWUyMTk4NDYzOTI=", "number": 39, "title": "How to whitelist vars in context manager's __exit__() method?", "user": {"login": "mark-summerfield", "id": 1773348, "node_id": "MDQ6VXNlcjE3NzMzNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1773348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-summerfield", "html_url": "https://github.com/mark-summerfield", "followers_url": "https://api.github.com/users/mark-summerfield/followers", "following_url": "https://api.github.com/users/mark-summerfield/following{/other_user}", "gists_url": "https://api.github.com/users/mark-summerfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-summerfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-summerfield/subscriptions", "organizations_url": "https://api.github.com/users/mark-summerfield/orgs", "repos_url": "https://api.github.com/users/mark-summerfield/repos", "events_url": "https://api.github.com/users/mark-summerfield/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-summerfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-06T09:59:58Z", "updated_at": "2017-04-08T08:19:42Z", "closed_at": "2017-04-08T08:19:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just started to use vulture and already found it helpful.\r\n\r\nHowever, I often have context managers where all I want to do is call a cleanup function and let any exception continue to be raised, e.g.:\r\n\r\n```python\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        self.close()\r\n```\r\nBut I can't work out how to whitelist exc_type, exc_val, exc_tb. Is it possible?\r\n\r\nBTW I think the docs for whitelist.py could be a bit more explicit. Here's one I'm using which I think shows how to do it:\r\n```python\r\n# whitelist.py\r\nfrom Parser import humanTime, Reader, Chunk, lzw, Normalize\r\nunused = (humanTime, Reader, lzw.readbytes, lzw.writebytes,\r\n          Chunk.height, Normalize.isspace)\r\nunused = len(unused)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/38", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/38/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/38/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/38", "id": 218760062, "node_id": "MDU6SXNzdWUyMTg3NjAwNjI=", "number": 38, "title": "Use stdlib whitelist by default", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-04-02T12:00:50Z", "updated_at": "2017-06-25T08:18:56Z", "closed_at": "2017-06-25T08:18:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Whitelists are a great way to tackle false positives, but we have to explicitly mention the whitelist fie every time we execute vulture, so **should vulture use whitelist by default?**\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/37", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/37/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/37/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/37", "id": 218401543, "node_id": "MDU6SXNzdWUyMTg0MDE1NDM=", "number": 37, "title": "--version of vulture", "user": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T05:27:11Z", "updated_at": "2017-06-06T09:51:29Z", "closed_at": "2017-06-06T09:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no way to check the version of vulture.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/35", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/35/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/35/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/35", "id": 218193399, "node_id": "MDU6SXNzdWUyMTgxOTMzOTk=", "number": 35, "title": "Optimization of test_scavenging.py", "user": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-30T13:16:04Z", "updated_at": "2017-03-30T13:24:09Z", "closed_at": "2017-03-30T13:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": " All tests in test_scavenging.py could use the v() fixture (as some tests already do).\r\nPatch already made by @jendrikseipp  on my issue and changed immediatly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/33", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/33/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/33/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/33", "id": 218099899, "node_id": "MDU6SXNzdWUyMTgwOTk4OTk=", "number": 33, "title": "Mistake in calling function", "user": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-30T07:04:02Z", "updated_at": "2017-03-30T08:48:16Z", "closed_at": "2017-03-30T07:55:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you assign a function to a variable you don't use the () but simply the name of the function.\r\nIn your case given def x(): ..., and variable silly_var you would do something like this:\r\nsilly_var = x\r\nand then you can call the function either with\r\nx()\r\nor\r\nsilly_var()\r\n\r\nIn test_scavenging.py\r\nfunc is written instead of func().", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/32", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/32/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/32/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/32", "id": 217833052, "node_id": "MDU6SXNzdWUyMTc4MzMwNTI=", "number": 32, "title": "Add test for whitelist.py", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-29T10:33:08Z", "updated_at": "2017-03-29T12:45:52Z", "closed_at": "2017-03-29T12:40:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While writing a test case for whitelist_python.py, I realised that we can potentially write a test case that can check whether or not *whitelisting* works or not and would it give an error if whitelist.py is not supplied!\r\n\r\nIs it feasible to do so @jendrikseipp?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/31", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/31/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/31/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/31", "id": 217787700, "node_id": "MDU6SXNzdWUyMTc3ODc3MDA=", "number": 31, "title": "Make vulture available as a library", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-29T07:29:10Z", "updated_at": "2017-03-29T12:43:52Z", "closed_at": "2017-03-29T12:43:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reference: [coala vulture project](https://projects.coala.io/#/projects?project=vulture_dead_code_removal)\r\n\r\nIMO, what we implicate when we say that make vulture available as a library is to perhaps extend the functionality of vulture to be directly incorporated in code, rather than just as a command line feature.\r\nBut we already have `vulture.scan()` for that, so I am a little confused on what else do we need here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/29", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/29/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/29/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/29", "id": 216957617, "node_id": "MDU6SXNzdWUyMTY5NTc2MTc=", "number": 29, "title": "Installing vuture in development environment.", "user": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-03-25T07:41:30Z", "updated_at": "2017-03-28T08:55:24Z", "closed_at": "2017-03-28T08:55:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Readme does not show how to use vulture in development environment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/28", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/28/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/28/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/28", "id": 216954685, "node_id": "MDU6SXNzdWUyMTY5NTQ2ODU=", "number": 28, "title": "PEP 8 convention not followed in vulture.py.", "user": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-25T06:43:14Z", "updated_at": "2017-03-25T09:58:50Z", "closed_at": "2017-03-25T09:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "self.code = None should be changed to is None.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/27", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/27/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/27/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/27", "id": 215201573, "node_id": "MDU6SXNzdWUyMTUyMDE1NzM=", "number": 27, "title": "Repository's readme file does not contain info about vulture.", "user": {"login": "jack17529", "id": 15366183, "node_id": "MDQ6VXNlcjE1MzY2MTgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15366183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack17529", "html_url": "https://github.com/jack17529", "followers_url": "https://api.github.com/users/jack17529/followers", "following_url": "https://api.github.com/users/jack17529/following{/other_user}", "gists_url": "https://api.github.com/users/jack17529/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack17529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack17529/subscriptions", "organizations_url": "https://api.github.com/users/jack17529/orgs", "repos_url": "https://api.github.com/users/jack17529/repos", "events_url": "https://api.github.com/users/jack17529/events{/privacy}", "received_events_url": "https://api.github.com/users/jack17529/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-18T15:34:44Z", "updated_at": "2017-03-18T16:57:29Z", "closed_at": "2017-03-18T16:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should specify the link to the docs and developers docs. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/25", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/25/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/25/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/25", "id": 212050471, "node_id": "MDU6SXNzdWUyMTIwNTA0NzE=", "number": 25, "title": "use vulture to automatically remove dead code?", "user": {"login": "jendrikseipp", "id": 213955, "node_id": "MDQ6VXNlcjIxMzk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikseipp", "html_url": "https://github.com/jendrikseipp", "followers_url": "https://api.github.com/users/jendrikseipp/followers", "following_url": "https://api.github.com/users/jendrikseipp/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikseipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikseipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikseipp/subscriptions", "organizations_url": "https://api.github.com/users/jendrikseipp/orgs", "repos_url": "https://api.github.com/users/jendrikseipp/repos", "events_url": "https://api.github.com/users/jendrikseipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikseipp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 554108260, "node_id": "MDU6TGFiZWw1NTQxMDgyNjA=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/minor", "name": "minor", "color": "ededed", "default": false, "description": null}, {"id": 554107271, "node_id": "MDU6TGFiZWw1NTQxMDcyNzE=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/proposal", "name": "proposal", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-01-21T12:38:18Z", "updated_at": "2017-09-30T19:02:01Z", "closed_at": "2017-09-29T08:00:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Originally reported by: **Jendrik Seipp (Bitbucket: [jendrikseipp](https://bitbucket.org/jendrikseipp), GitHub: [jendrikseipp](https://github.com/jendrikseipp))**\n\n----------------------------------------\n\nI'm adding this issue since the topic came up in a discussion around GSoC proposals for www.coala.io with @sils1297. The idea was to write a program that uses vullture to find and *remove* dead code.\n\nAfter thinking some more about this, I think that the benefits of such a program are very small. For a program that changes code to be useful, most of the changes it proposes have to make sense. This is the case, e.g., for tools like autopep8. However, vulture (due to Python's dynamic nature) produces too many false positives. Even if it detects dead code, the underlying issue is not that code should be removed, but that e.g. a variable name is misspelled and therefore seems to be unused. Vulture is useful for hinting at possible programming errors, but I think almost all of them will have to be double-checked by the programmer.\n\n----------------------------------------\n- Bitbucket: https://bitbucket.org/jendrikseipp/vulture/issue/25\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/24", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/24/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/24/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/24", "id": 212050411, "node_id": "MDU6SXNzdWUyMTIwNTA0MTE=", "number": 24, "title": "Better usage information", "user": {"login": "jendrikseipp", "id": 213955, "node_id": "MDQ6VXNlcjIxMzk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikseipp", "html_url": "https://github.com/jendrikseipp", "followers_url": "https://api.github.com/users/jendrikseipp/followers", "following_url": "https://api.github.com/users/jendrikseipp/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikseipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikseipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikseipp/subscriptions", "organizations_url": "https://api.github.com/users/jendrikseipp/orgs", "repos_url": "https://api.github.com/users/jendrikseipp/repos", "events_url": "https://api.github.com/users/jendrikseipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikseipp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 554102950, "node_id": "MDU6TGFiZWw1NTQxMDI5NTA=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 554108260, "node_id": "MDU6TGFiZWw1NTQxMDgyNjA=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/minor", "name": "minor", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-06T19:09:12Z", "updated_at": "2017-03-06T08:11:13Z", "closed_at": "2017-03-06T08:11:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Originally reported by: **Drew Ayling (Bitbucket: [drewayling](https://bitbucket.org/drewayling), GitHub: Unknown)**\n\n----------------------------------------\n\nThe usage is really confusing and doesn't really provide any insight as to \"how\" it executes or what PATH is. Is path a file? Path to a module? Path to a package \n\nWhat is the difference in these?\n\n      $ vulture\n\n      $ vulture .\n\n      $ vulture script.py\n\n      $ vulture package/\n\nWhat if I want to analyze across multiple modules or packages?\n\nI can inspect your code and see that `scavenge` is called with paths, which only works down from the path provided. Some better explanation and usages would be really helpful for new users.\n\n----------------------------------------\n- Bitbucket: https://bitbucket.org/jendrikseipp/vulture/issue/24\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/23", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/23/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/23/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/23", "id": 212050397, "node_id": "MDU6SXNzdWUyMTIwNTAzOTc=", "number": 23, "title": "API", "user": {"login": "jendrikseipp", "id": 213955, "node_id": "MDQ6VXNlcjIxMzk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikseipp", "html_url": "https://github.com/jendrikseipp", "followers_url": "https://api.github.com/users/jendrikseipp/followers", "following_url": "https://api.github.com/users/jendrikseipp/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikseipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikseipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikseipp/subscriptions", "organizations_url": "https://api.github.com/users/jendrikseipp/orgs", "repos_url": "https://api.github.com/users/jendrikseipp/repos", "events_url": "https://api.github.com/users/jendrikseipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikseipp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 554107193, "node_id": "MDU6TGFiZWw1NTQxMDcxOTM=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/major", "name": "major", "color": "ededed", "default": false, "description": null}, {"id": 554107271, "node_id": "MDU6TGFiZWw1NTQxMDcyNzE=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/proposal", "name": "proposal", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-22T23:11:38Z", "updated_at": "2017-06-12T15:22:42Z", "closed_at": "2017-06-12T15:22:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Originally reported by: **Lasse Schuirmann (Bitbucket: [sils1297](https://bitbucket.org/sils1297), GitHub: [sils1297](https://github.com/sils1297))**\n\n----------------------------------------\n\nWould be nice to have a way to use vulture programmatically, like:\n\n```\nfrom vulture import find_unused_code\n\nfind_unused_code(\n    files={'test_1': 'def test(): pass', 'test_2': 'def test2: pass\\nfrom test_1 import test\\ntest()'}\n    )\n```\n\nWe use vulture in coala (coala.io) and that'd make things way more efficient etc. (in memory file passing, we have them already read e.g.)\n\n----------------------------------------\n- Bitbucket: https://bitbucket.org/jendrikseipp/vulture/issue/23\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/22", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/22/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/22/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/22", "id": 212050386, "node_id": "MDU6SXNzdWUyMTIwNTAzODY=", "number": 22, "title": "Vulture doesn't detect unused function", "user": {"login": "jendrikseipp", "id": 213955, "node_id": "MDQ6VXNlcjIxMzk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikseipp", "html_url": "https://github.com/jendrikseipp", "followers_url": "https://api.github.com/users/jendrikseipp/followers", "following_url": "https://api.github.com/users/jendrikseipp/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikseipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikseipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikseipp/subscriptions", "organizations_url": "https://api.github.com/users/jendrikseipp/orgs", "repos_url": "https://api.github.com/users/jendrikseipp/repos", "events_url": "https://api.github.com/users/jendrikseipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikseipp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 554102948, "node_id": "MDU6TGFiZWw1NTQxMDI5NDg=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 554107193, "node_id": "MDU6TGFiZWw1NTQxMDcxOTM=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/major", "name": "major", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-22T22:35:26Z", "updated_at": "2017-03-06T08:11:05Z", "closed_at": "2017-03-06T08:11:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Originally reported by: **Anonymous**\n\n----------------------------------------\n\nAm I doing something wrong?\n\n```\n#!python\n\nlasse@lssteady ~/prog/coala-bears (git)-[sils/reqa] % cat test.py \ndef teest(a):\n    return a+2\n\n\ndef test_unused(a):\n    return a+2\nlasse@lssteady ~/prog/coala-bears (git)-[sils/reqa] % cat test2.py \nfrom test import teest, test_unused\n\nteest()\nlasse@lssteady ~/prog/coala-bears (git)-[sils/reqa] % vulture test.py test2.py \nlasse@lssteady ~/prog/coala-bears (git)-[sils/reqa] % vulture test.py \ntest.py:1: Unused function 'teest'\n1 lasse@lssteady ~/prog/coala-bears (git)-[sils/reqa] % vulture test2.py\nlasse@lssteady ~/prog/coala-bears (git)-[sils/reqa] % \n```\n\n----------------------------------------\n- Bitbucket: https://bitbucket.org/jendrikseipp/vulture/issue/22\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jendrikseipp/vulture/issues/21", "repository_url": "https://api.github.com/repos/jendrikseipp/vulture", "labels_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/21/comments", "events_url": "https://api.github.com/repos/jendrikseipp/vulture/issues/21/events", "html_url": "https://github.com/jendrikseipp/vulture/issues/21", "id": 212050378, "node_id": "MDU6SXNzdWUyMTIwNTAzNzg=", "number": 21, "title": "Whitelist defaultdict.default_factory", "user": {"login": "jendrikseipp", "id": 213955, "node_id": "MDQ6VXNlcjIxMzk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/213955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendrikseipp", "html_url": "https://github.com/jendrikseipp", "followers_url": "https://api.github.com/users/jendrikseipp/followers", "following_url": "https://api.github.com/users/jendrikseipp/following{/other_user}", "gists_url": "https://api.github.com/users/jendrikseipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendrikseipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendrikseipp/subscriptions", "organizations_url": "https://api.github.com/users/jendrikseipp/orgs", "repos_url": "https://api.github.com/users/jendrikseipp/repos", "events_url": "https://api.github.com/users/jendrikseipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jendrikseipp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 554108260, "node_id": "MDU6TGFiZWw1NTQxMDgyNjA=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/minor", "name": "minor", "color": "ededed", "default": false, "description": null}, {"id": 554107271, "node_id": "MDU6TGFiZWw1NTQxMDcyNzE=", "url": "https://api.github.com/repos/jendrikseipp/vulture/labels/proposal", "name": "proposal", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-31T23:37:55Z", "updated_at": "2017-04-02T07:55:47Z", "closed_at": "2017-04-02T07:55:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Originally reported by: **bitserver (Bitbucket: [bitserver](https://bitbucket.org/bitserver), GitHub: [bitserver](https://github.com/bitserver))**\n\n----------------------------------------\n\nI have a collections.defaultdict(). After I have finished populating it, I have to set its default_factory attribute to None. vulture then tells me that default_factory is an unused attribute, but I can't help it, as that's how defaultdict works.\n\n----------------------------------------\n- Bitbucket: https://bitbucket.org/jendrikseipp/vulture/issue/21\n", "performed_via_github_app": null, "score": 1.0}]}