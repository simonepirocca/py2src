{"total_count": 93, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/214", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/214/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/214/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/214", "id": 676440830, "node_id": "MDU6SXNzdWU2NzY0NDA4MzA=", "number": 214, "title": "Unable to apply StandardScaler to multiple columns", "user": {"login": "dpatschke", "id": 1788999, "node_id": "MDQ6VXNlcjE3ODg5OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1788999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpatschke", "html_url": "https://github.com/dpatschke", "followers_url": "https://api.github.com/users/dpatschke/followers", "following_url": "https://api.github.com/users/dpatschke/following{/other_user}", "gists_url": "https://api.github.com/users/dpatschke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpatschke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpatschke/subscriptions", "organizations_url": "https://api.github.com/users/dpatschke/orgs", "repos_url": "https://api.github.com/users/dpatschke/repos", "events_url": "https://api.github.com/users/dpatschke/events{/privacy}", "received_events_url": "https://api.github.com/users/dpatschke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-10T21:57:24Z", "updated_at": "2020-08-16T23:29:14Z", "closed_at": "2020-08-16T20:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code snippet is returning an error for me. I'm not sure whether there are some scikit-learn transformers that are now requiring a 2d array rather than 1d but the error I am receiving from scikit-learn is that a 2d array is being required for StandardScaler. I forked the code and tried to correct myself in `_get_col_subset` but to no avail.\r\n\r\nI'm using sklearn-pandas 2.0.0\r\n\r\n```\r\nfrom sklearn.preprocessing import StandardScaler\r\nimport pandas as pd\r\n\r\nfrom sklearn_pandas import DataFrameMapper\r\nfrom sklearn_pandas import gen_features\r\n\r\nfoo = pd.DataFrame({'col1': [1,2,3,4],\r\n                    'col2': [5,6,7,8],\r\n                    'col3': [9,10,11,12]})\r\n\r\nfeature_def = gen_features(\r\n    columns=foo.columns,\r\n    classes=[StandardScaler],\r\n    suffix=\"_zscore\")\r\n\r\nmapper = DataFrameMapper(feature_def, df_out=True)\r\n\r\ndata_transformed = mapper.fit_transform(foo)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/211", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/211/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/211/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/211", "id": 629344578, "node_id": "MDU6SXNzdWU2MjkzNDQ1Nzg=", "number": 211, "title": "Is it being maintained ?", "user": {"login": "ragrawal", "id": 759018, "node_id": "MDQ6VXNlcjc1OTAxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/759018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ragrawal", "html_url": "https://github.com/ragrawal", "followers_url": "https://api.github.com/users/ragrawal/followers", "following_url": "https://api.github.com/users/ragrawal/following{/other_user}", "gists_url": "https://api.github.com/users/ragrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/ragrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ragrawal/subscriptions", "organizations_url": "https://api.github.com/users/ragrawal/orgs", "repos_url": "https://api.github.com/users/ragrawal/repos", "events_url": "https://api.github.com/users/ragrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/ragrawal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T16:31:04Z", "updated_at": "2020-08-01T08:15:26Z", "closed_at": "2020-08-01T08:15:26Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi \r\n\r\nI am not sure whether this library is being maintained anymore or not. The last commit was made on Jan 2019. Organizers please let us know if you don't plan to maintain it. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/205", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/205/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/205/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/205", "id": 598250642, "node_id": "MDU6SXNzdWU1OTgyNTA2NDI=", "number": 205, "title": "DataFrameMapper x SimpleImputer outputs an error with a DataFrame with 1 row", "user": {"login": "FelixChop", "id": 8631089, "node_id": "MDQ6VXNlcjg2MzEwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8631089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelixChop", "html_url": "https://github.com/FelixChop", "followers_url": "https://api.github.com/users/FelixChop/followers", "following_url": "https://api.github.com/users/FelixChop/following{/other_user}", "gists_url": "https://api.github.com/users/FelixChop/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelixChop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelixChop/subscriptions", "organizations_url": "https://api.github.com/users/FelixChop/orgs", "repos_url": "https://api.github.com/users/FelixChop/repos", "events_url": "https://api.github.com/users/FelixChop/events{/privacy}", "received_events_url": "https://api.github.com/users/FelixChop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-11T11:52:26Z", "updated_at": "2020-08-16T20:35:12Z", "closed_at": "2020-08-16T20:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run the DataFrameMapper for a DataFrame with 1 row in order to do some what-if analysis with my data prep pipeline. 1 row doesn't seem to work. More than 1 row can work if you add non missing values. Examples below:\r\n\r\n`import pandas as pd`\r\n`from sklearn_pandas import DataFrameMapper`\r\n`from sklearn.impute import SimpleImputer`\r\n\r\n`df = pd.DataFrame({`\r\n`    'column_1': ['A', 'B', np.nan]`\r\n`})`\r\n\r\n`imputer = SimpleImputer(strategy='constant', fill_value='A')`\r\n\r\n`mapper = DataFrameMapper([`\r\n`    (['column_1'], imputer)`\r\n`])`\r\n\r\n`mapper.fit(df)`\r\n\r\nHere you'll get an error:\r\n\r\n`mapper.transform(pd.DataFrame({`\r\n`    'column_1': [np.nan]`\r\n`}))`\r\n\r\nHere you'll get the expected outcome:\r\n`mapper.transform(pd.DataFrame({`\r\n`    'column_1': [np.nan, 'A']`\r\n`}))`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/204", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/204/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/204/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/204", "id": 598241039, "node_id": "MDU6SXNzdWU1OTgyNDEwMzk=", "number": 204, "title": "OneHotEncoder returning 'x0' in column names", "user": {"login": "FelixChop", "id": 8631089, "node_id": "MDQ6VXNlcjg2MzEwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8631089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelixChop", "html_url": "https://github.com/FelixChop", "followers_url": "https://api.github.com/users/FelixChop/followers", "following_url": "https://api.github.com/users/FelixChop/following{/other_user}", "gists_url": "https://api.github.com/users/FelixChop/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelixChop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelixChop/subscriptions", "organizations_url": "https://api.github.com/users/FelixChop/orgs", "repos_url": "https://api.github.com/users/FelixChop/repos", "events_url": "https://api.github.com/users/FelixChop/events{/privacy}", "received_events_url": "https://api.github.com/users/FelixChop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-11T10:47:27Z", "updated_at": "2020-08-16T20:36:56Z", "closed_at": "2020-08-16T20:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Probably something that was seen before, but it makes it tricky to use the DataFrameMapper in a production-ready pipeline, since one needs to add a `.rename()` with multiple column names. \r\n\r\nExample seen below:\r\n`from sklearn.preprocessing import OneHotEncoder`\r\n`onehotencoder = OneHotEncoder()`\r\n\r\n`df = pd.DataFrame({`\r\n`    'categorical': ['A', 'B', 'C']`\r\n`})`\r\n\r\n`mapper = DataFrameMapper([`\r\n`    (['categorical'], onehotencoder)`\r\n`], df_out=True)`\r\n\r\n`mapper.fit_transform(df)`\r\n\r\nreturns\r\n`categorical_x0_A\tcategorical_x0_B\tcategorical_x0_C`\r\n`0\t1.0\t0.0\t0.0`\r\n`1\t0.0\t1.0\t0.0`\r\n`2\t0.0\t0.0\t1.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/203", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/203/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/203/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/203", "id": 585443896, "node_id": "MDU6SXNzdWU1ODU0NDM4OTY=", "number": 203, "title": "[Question] Want to contribute. looking for good first issue", "user": {"login": "paro1234", "id": 11131544, "node_id": "MDQ6VXNlcjExMTMxNTQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/11131544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paro1234", "html_url": "https://github.com/paro1234", "followers_url": "https://api.github.com/users/paro1234/followers", "following_url": "https://api.github.com/users/paro1234/following{/other_user}", "gists_url": "https://api.github.com/users/paro1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/paro1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paro1234/subscriptions", "organizations_url": "https://api.github.com/users/paro1234/orgs", "repos_url": "https://api.github.com/users/paro1234/repos", "events_url": "https://api.github.com/users/paro1234/events{/privacy}", "received_events_url": "https://api.github.com/users/paro1234/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T06:52:07Z", "updated_at": "2020-08-16T20:38:52Z", "closed_at": "2020-08-16T20:38:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI want to contribute to this awesome library. Can you point me to any good first issue? All I checed were either done or PR pending. \r\nThanks a ton.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/201", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/201/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/201/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/201", "id": 555242038, "node_id": "MDU6SXNzdWU1NTUyNDIwMzg=", "number": 201, "title": "CategoricalImputer most_frequent strategy", "user": {"login": "omar-arab-oghli", "id": 29576434, "node_id": "MDQ6VXNlcjI5NTc2NDM0", "avatar_url": "https://avatars1.githubusercontent.com/u/29576434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omar-arab-oghli", "html_url": "https://github.com/omar-arab-oghli", "followers_url": "https://api.github.com/users/omar-arab-oghli/followers", "following_url": "https://api.github.com/users/omar-arab-oghli/following{/other_user}", "gists_url": "https://api.github.com/users/omar-arab-oghli/gists{/gist_id}", "starred_url": "https://api.github.com/users/omar-arab-oghli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omar-arab-oghli/subscriptions", "organizations_url": "https://api.github.com/users/omar-arab-oghli/orgs", "repos_url": "https://api.github.com/users/omar-arab-oghli/repos", "events_url": "https://api.github.com/users/omar-arab-oghli/events{/privacy}", "received_events_url": "https://api.github.com/users/omar-arab-oghli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-26T15:11:51Z", "updated_at": "2020-08-03T07:14:01Z", "closed_at": "2020-08-03T07:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The CategoricalImputer replaces all missing values with the most frequent value of the whole passed data frame.\r\n\r\nThe desired behaviour is to replace each missing value with the most frequent value of the missing value's column.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/200", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/200/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/200/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/200", "id": 532775007, "node_id": "MDU6SXNzdWU1MzI3NzUwMDc=", "number": 200, "title": "I can't find a way to transform multiple features but with different transforms", "user": {"login": "DemirTonchev", "id": 17353097, "node_id": "MDQ6VXNlcjE3MzUzMDk3", "avatar_url": "https://avatars3.githubusercontent.com/u/17353097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DemirTonchev", "html_url": "https://github.com/DemirTonchev", "followers_url": "https://api.github.com/users/DemirTonchev/followers", "following_url": "https://api.github.com/users/DemirTonchev/following{/other_user}", "gists_url": "https://api.github.com/users/DemirTonchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/DemirTonchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DemirTonchev/subscriptions", "organizations_url": "https://api.github.com/users/DemirTonchev/orgs", "repos_url": "https://api.github.com/users/DemirTonchev/repos", "events_url": "https://api.github.com/users/DemirTonchev/events{/privacy}", "received_events_url": "https://api.github.com/users/DemirTonchev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T15:54:30Z", "updated_at": "2020-08-16T20:43:36Z", "closed_at": "2020-08-16T20:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to apply transformation just to one variable and then proceed to transform all of the selected like so?\r\n`\r\nmapper = DataFrameMapper([\r\n('pet', sklearn.preprocessing.LabelBinarizer()),\r\n(['children','salary'], [{'salaly':FunctionTransformer(np.log)}, PCA(),])\r\n])\r\n`\r\nI want to apply some function to 'salary' but then proceed to PCA for both of the variables.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/198", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/198/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/198/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/198", "id": 452800640, "node_id": "MDU6SXNzdWU0NTI4MDA2NDA=", "number": 198, "title": "You need to update to the latest development version of sklearn:", "user": {"login": "sunrisehang", "id": 38175185, "node_id": "MDQ6VXNlcjM4MTc1MTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/38175185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunrisehang", "html_url": "https://github.com/sunrisehang", "followers_url": "https://api.github.com/users/sunrisehang/followers", "following_url": "https://api.github.com/users/sunrisehang/following{/other_user}", "gists_url": "https://api.github.com/users/sunrisehang/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunrisehang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunrisehang/subscriptions", "organizations_url": "https://api.github.com/users/sunrisehang/orgs", "repos_url": "https://api.github.com/users/sunrisehang/repos", "events_url": "https://api.github.com/users/sunrisehang/events{/privacy}", "received_events_url": "https://api.github.com/users/sunrisehang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-06T02:24:56Z", "updated_at": "2019-06-06T02:25:15Z", "closed_at": "2019-06-06T02:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "You need to update to the latest development version of sklearn:\r\n`conda install scikit-learn=0.21.2`\r\n\r\ngood job ...thanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/197", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/197/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/197/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/197", "id": 443769081, "node_id": "MDU6SXNzdWU0NDM3NjkwODE=", "number": 197, "title": " ValueError: Logistic Regression supports only penalties in ['l1', 'l2'], got none.", "user": {"login": "sunrisehang", "id": 38175185, "node_id": "MDQ6VXNlcjM4MTc1MTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/38175185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunrisehang", "html_url": "https://github.com/sunrisehang", "followers_url": "https://api.github.com/users/sunrisehang/followers", "following_url": "https://api.github.com/users/sunrisehang/following{/other_user}", "gists_url": "https://api.github.com/users/sunrisehang/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunrisehang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunrisehang/subscriptions", "organizations_url": "https://api.github.com/users/sunrisehang/orgs", "repos_url": "https://api.github.com/users/sunrisehang/repos", "events_url": "https://api.github.com/users/sunrisehang/events{/privacy}", "received_events_url": "https://api.github.com/users/sunrisehang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-14T08:08:15Z", "updated_at": "2020-03-27T16:28:19Z", "closed_at": "2019-06-06T02:25:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom sklearn.linear_model import LogisticRegression\r\nlr = LogisticRegression(penalty='none',solver='saga')\r\nlr.fit(X_train1, y_train1)\r\n```\r\nIt will report the error: ValueError: Logistic Regression supports only penalties in ['l1', 'l2'], got none.\r\n\r\nI dont know why i cant input parameter:penalty='none'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/192", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/192/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/192/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/192", "id": 403777315, "node_id": "MDU6SXNzdWU0MDM3NzczMTU=", "number": 192, "title": "Calling transform on a non-fitted DataFrameMapper raises TypeError", "user": {"login": "FlorisHoogenboom", "id": 14967659, "node_id": "MDQ6VXNlcjE0OTY3NjU5", "avatar_url": "https://avatars0.githubusercontent.com/u/14967659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FlorisHoogenboom", "html_url": "https://github.com/FlorisHoogenboom", "followers_url": "https://api.github.com/users/FlorisHoogenboom/followers", "following_url": "https://api.github.com/users/FlorisHoogenboom/following{/other_user}", "gists_url": "https://api.github.com/users/FlorisHoogenboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/FlorisHoogenboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FlorisHoogenboom/subscriptions", "organizations_url": "https://api.github.com/users/FlorisHoogenboom/orgs", "repos_url": "https://api.github.com/users/FlorisHoogenboom/repos", "events_url": "https://api.github.com/users/FlorisHoogenboom/events{/privacy}", "received_events_url": "https://api.github.com/users/FlorisHoogenboom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-28T11:52:44Z", "updated_at": "2020-08-16T20:45:38Z", "closed_at": "2020-08-16T20:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When calling transform on a `DataFrameMapper` that hasn't been fitted yet, the `TypeError` below is raised:\r\n\r\n```\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nIt would be nice to have a more meaningful error since this is hard to debug. Ideally, we would check whether we are able to call transform on all underlying transformers and only raise of one of these is not successful. This may be difficult to implement since there is generic way that I know of to determine whether a Scikit-learn transformer is fitted. \r\n\r\nAnyways, I would be happy to submit a PR for a more meaningful error message!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/189", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/189/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/189/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/189", "id": 401175962, "node_id": "MDU6SXNzdWU0MDExNzU5NjI=", "number": 189, "title": "DOC: README.rst: CircleCI links 404ing", "user": {"login": "westurner", "id": 50891, "node_id": "MDQ6VXNlcjUwODkx", "avatar_url": "https://avatars2.githubusercontent.com/u/50891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/westurner", "html_url": "https://github.com/westurner", "followers_url": "https://api.github.com/users/westurner/followers", "following_url": "https://api.github.com/users/westurner/following{/other_user}", "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}", "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/westurner/subscriptions", "organizations_url": "https://api.github.com/users/westurner/orgs", "repos_url": "https://api.github.com/users/westurner/repos", "events_url": "https://api.github.com/users/westurner/events{/privacy}", "received_events_url": "https://api.github.com/users/westurner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-21T03:02:58Z", "updated_at": "2019-01-29T07:56:25Z", "closed_at": "2019-01-29T07:56:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The CircleCI links in README.rst are 404'ing:\r\n\r\n- https://circleci.com/gh/pandas-dev/sklearn-pandas\r\n- https://circleci.com/gh/pandas-dev/sklearn-pandas.svg?style=svg", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/175", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/175/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/175/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/175", "id": 366050910, "node_id": "MDU6SXNzdWUzNjYwNTA5MTA=", "number": 175, "title": "import error with sklearn version 0.20", "user": {"login": "jhoh10", "id": 17030269, "node_id": "MDQ6VXNlcjE3MDMwMjY5", "avatar_url": "https://avatars0.githubusercontent.com/u/17030269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhoh10", "html_url": "https://github.com/jhoh10", "followers_url": "https://api.github.com/users/jhoh10/followers", "following_url": "https://api.github.com/users/jhoh10/following{/other_user}", "gists_url": "https://api.github.com/users/jhoh10/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhoh10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhoh10/subscriptions", "organizations_url": "https://api.github.com/users/jhoh10/orgs", "repos_url": "https://api.github.com/users/jhoh10/repos", "events_url": "https://api.github.com/users/jhoh10/events{/privacy}", "received_events_url": "https://api.github.com/users/jhoh10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-02T19:43:27Z", "updated_at": "2018-10-02T20:01:09Z", "closed_at": "2018-10-02T20:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "On windows, unable to import pandas_sklearn v1.7.0 with the new version of sklearn v 0.20.\r\n\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-6-7ba6ae61982c> in <module>()\r\n---> import sklearn_pandas\r\n\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\envs\\python36\\lib\\site-packages\\sklearn_pandas\\__init__.py in <module>()\r\n      1 __version__ = '1.7.0'\r\n      2 \r\n----> 3 from .dataframe_mapper import DataFrameMapper  # NOQA\r\n      4 from .cross_validation import cross_val_score, GridSearchCV, RandomizedSearchCV  # NOQA\r\n      5 from .categorical_imputer import CategoricalImputer  # NOQA\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\envs\\python36\\lib\\site-packages\\sklearn_pandas\\dataframe_mapper.py in <module>()\r\n      5 import numpy as np\r\n      6 from scipy import sparse\r\n----> 7 from sklearn.base import BaseEstimator, TransformerMixin\r\n      8 \r\n      9 from .cross_validation import DataWrapper\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\envs\\python36\\lib\\site-packages\\sklearn\\__init__.py in <module>()\r\n     61     # process, as it may not be compiled yet\r\n     62 else:\r\n---> 63     from . import __check_build\r\n     64     from .base import clone\r\n     65     from .utils._show_versions import show_versions\r\n\r\nImportError: cannot import name '__check_build'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/172", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/172/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/172/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/172", "id": 359031980, "node_id": "MDU6SXNzdWUzNTkwMzE5ODA=", "number": 172, "title": "When using keras to output confusion matrix, encounter dug", "user": {"login": "songpeng326", "id": 35213766, "node_id": "MDQ6VXNlcjM1MjEzNzY2", "avatar_url": "https://avatars0.githubusercontent.com/u/35213766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/songpeng326", "html_url": "https://github.com/songpeng326", "followers_url": "https://api.github.com/users/songpeng326/followers", "following_url": "https://api.github.com/users/songpeng326/following{/other_user}", "gists_url": "https://api.github.com/users/songpeng326/gists{/gist_id}", "starred_url": "https://api.github.com/users/songpeng326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/songpeng326/subscriptions", "organizations_url": "https://api.github.com/users/songpeng326/orgs", "repos_url": "https://api.github.com/users/songpeng326/repos", "events_url": "https://api.github.com/users/songpeng326/events{/privacy}", "received_events_url": "https://api.github.com/users/songpeng326/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-11T12:49:13Z", "updated_at": "2018-10-07T12:28:16Z", "closed_at": "2018-10-07T12:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "test_result\r\n```\r\n[[8.84666229e-11 3.62935411e-11 5.11189562e-08 ... 2.72540546e-10\r\n  1.98057959e-11 6.67026601e-10]\r\n [3.77362763e-09 6.01643464e-08 1.37185743e-05 ... 5.51059287e-09\r\n  9.09005024e-11 1.81841835e-12]\r\n [9.99340355e-01 5.75816783e-04 2.26229768e-05 ... 3.98747460e-07\r\n  3.07938365e-07 3.03811065e-09]\r\n ...\r\n [1.42803840e-08 1.05926084e-07 2.86455482e-09 ... 2.08288120e-09\r\n  9.99999762e-01 7.87122900e-09]\r\n [1.10692534e-04 9.28546797e-06 1.62752244e-07 ... 1.43502189e-06\r\n  3.03957017e-06 9.36529361e-08]\r\n [6.34763950e-16 3.37004079e-13 8.50384318e-15 ... 2.25422809e-14\r\n  4.23973363e-14 1.07287455e-18]]\r\nY_test\r\n[[0 0 0 ... 0 0 0]\r\n [0 0 0 ... 0 0 0]\r\n [1 0 0 ... 0 0 0]\r\n ...\r\n [0 0 0 ... 0 1 0]\r\n [0 0 0 ... 0 0 0]\r\n [0 0 0 ... 0 0 0]]\r\n```\r\n\r\ncode:\r\n```python\r\nfrom sklearn.metrics import confusion_matrix\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\nlabels = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12','13','14','15']\r\n#y_true\u4ee3\u8868\u771f\u5b9e\u7684label\u503c y_pred\u4ee3\u8868\u9884\u6d4b\u5f97\u5230\u7684lavel\u503c\r\ny_true = Y_test\r\ny_pred = test_result\r\n\r\ntick_marks = np.array(range(len(labels))) + 0.5\r\n\r\ndef plot_confusion_matrix(cm, title='Confusion Matrix', cmap=plt.cm.binary):\r\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\r\n    plt.title(title)\r\n    plt.colorbar()\r\n    xlocations = np.array(range(len(labels)))\r\n    plt.xticks(xlocations, labels, rotation=90)\r\n    plt.yticks(xlocations, labels)\r\n    plt.ylabel('True label')\r\n    plt.xlabel('Predicted label')\r\n\r\ncm = confusion_matrix(y_true, y_pred)\r\nnp.set_printoptions(precision=2)\r\ncm_normalized = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\r\nprint(cm_normalized)\r\nplt.figure(figsize=(12, 8), dpi=120)\r\n\r\nind_array = np.arange(len(labels))\r\nx, y = np.meshgrid(ind_array, ind_array)\r\n\r\nfor x_val, y_val in zip(x.flatten(), y.flatten()):\r\n    c = cm_normalized[y_val][x_val]\r\n    if c > 0.01:\r\n        plt.text(x_val, y_val, \"%0.2f\" % (c,), color='red', fontsize=7, va='center', ha='center')\r\n# offset the tick\r\nplt.gca().set_xticks(tick_marks, minor=True)\r\nplt.gca().set_yticks(tick_marks, minor=True)\r\nplt.gca().xaxis.set_ticks_position('none')\r\nplt.gca().yaxis.set_ticks_position('none')\r\nplt.grid(True, which='minor', linestyle='-')\r\nplt.gcf().subplots_adjust(bottom=0.15)\r\n\r\nplot_confusion_matrix(cm_normalized, title='Normalized confusion matrix')\r\n# show confusion matrix\r\nplt.savefig('../Data/confusion_matrix.png', format='png')\r\nplt.show()\r\n```\r\n\r\nTraceback:\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-20-8f3b35c88fb2> in <module>()\r\n     22 \r\n     23 \r\n---> 24 cm = confusion_matrix(y_true, y_pred)\r\n     25 np.set_printoptions(precision=2)\r\n     26 cm_normalized = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\r\n\r\n/usr/local/lib/python3.5/dist-packages/sklearn/metrics/classification.py in confusion_matrix(y_true, y_pred, labels, sample_weight)\r\n    248 \r\n    249     \"\"\"\r\n--> 250     y_type, y_true, y_pred = _check_targets(y_true, y_pred)\r\n    251     if y_type not in (\"binary\", \"multiclass\"):\r\n    252         raise ValueError(\"%s is not supported\" % y_type)\r\n\r\n/usr/local/lib/python3.5/dist-packages/sklearn/metrics/classification.py in _check_targets(y_true, y_pred)\r\n     79     if len(y_type) > 1:\r\n     80         raise ValueError(\"Classification metrics can't handle a mix of {0} \"\r\n---> 81                          \"and {1} targets\".format(type_true, type_pred))\r\n     82 \r\n     83     # We can't have more than one value on y_type => The set is no more needed\r\n\r\nValueError: Classification metrics can't handle a mix of multilabel-indicator and continuous-multioutput targets\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/167", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/167/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/167/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/167", "id": 349329330, "node_id": "MDU6SXNzdWUzNDkzMjkzMzA=", "number": 167, "title": ".pytest_cache should be added to .gitigore", "user": {"login": "bjherger", "id": 7729837, "node_id": "MDQ6VXNlcjc3Mjk4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7729837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjherger", "html_url": "https://github.com/bjherger", "followers_url": "https://api.github.com/users/bjherger/followers", "following_url": "https://api.github.com/users/bjherger/following{/other_user}", "gists_url": "https://api.github.com/users/bjherger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjherger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjherger/subscriptions", "organizations_url": "https://api.github.com/users/bjherger/orgs", "repos_url": "https://api.github.com/users/bjherger/repos", "events_url": "https://api.github.com/users/bjherger/events{/privacy}", "received_events_url": "https://api.github.com/users/bjherger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-09T23:48:47Z", "updated_at": "2018-08-15T12:49:12Z", "closed_at": "2018-08-15T12:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The files that are automatically generated within `.pytest_cache` should be ignored by git, by adding that folder to `.gitignore`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/161", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/161/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/161/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/161", "id": 346442753, "node_id": "MDU6SXNzdWUzNDY0NDI3NTM=", "number": 161, "title": "CategoricalImputer constant strategy", "user": {"login": "bjherger", "id": 7729837, "node_id": "MDQ6VXNlcjc3Mjk4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7729837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjherger", "html_url": "https://github.com/bjherger", "followers_url": "https://api.github.com/users/bjherger/followers", "following_url": "https://api.github.com/users/bjherger/following{/other_user}", "gists_url": "https://api.github.com/users/bjherger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjherger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjherger/subscriptions", "organizations_url": "https://api.github.com/users/bjherger/orgs", "repos_url": "https://api.github.com/users/bjherger/repos", "events_url": "https://api.github.com/users/bjherger/events{/privacy}", "received_events_url": "https://api.github.com/users/bjherger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bjherger", "id": 7729837, "node_id": "MDQ6VXNlcjc3Mjk4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7729837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjherger", "html_url": "https://github.com/bjherger", "followers_url": "https://api.github.com/users/bjherger/followers", "following_url": "https://api.github.com/users/bjherger/following{/other_user}", "gists_url": "https://api.github.com/users/bjherger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjherger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjherger/subscriptions", "organizations_url": "https://api.github.com/users/bjherger/orgs", "repos_url": "https://api.github.com/users/bjherger/repos", "events_url": "https://api.github.com/users/bjherger/events{/privacy}", "received_events_url": "https://api.github.com/users/bjherger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bjherger", "id": 7729837, "node_id": "MDQ6VXNlcjc3Mjk4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7729837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjherger", "html_url": "https://github.com/bjherger", "followers_url": "https://api.github.com/users/bjherger/followers", "following_url": "https://api.github.com/users/bjherger/following{/other_user}", "gists_url": "https://api.github.com/users/bjherger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjherger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjherger/subscriptions", "organizations_url": "https://api.github.com/users/bjherger/orgs", "repos_url": "https://api.github.com/users/bjherger/repos", "events_url": "https://api.github.com/users/bjherger/events{/privacy}", "received_events_url": "https://api.github.com/users/bjherger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-08-01T04:21:28Z", "updated_at": "2018-08-23T14:50:58Z", "closed_at": "2018-08-23T14:50:58Z", "author_association": "NONE", "active_lock_reason": null, "body": " - Update `CategoricalImputer` terminology to be consistent with [SimpleInputer](http://scikit-learn.org/dev/modules/generated/sklearn.impute.SimpleImputer.html#sklearn.impute.SimpleImputer)\r\n   - fixed_value to constant\r\n   - mode to most_frequent\r\n   - replacement to fill_value\r\n - Update documentation to reference `strategy='constant'` strategy\r\n - Update default `fill_value` to `'?'`, consistent with `SimpleInputer`\r\n - Update unittests to match above\r\n - Unit test for default fill value\r\n\r\nThis could be a quick fix to refactoring the existing `strategy='fixed_value'` option, and updating documentation. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/160", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/160/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/160/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/160", "id": 344830089, "node_id": "MDU6SXNzdWUzNDQ4MzAwODk=", "number": 160, "title": "Bug in DataFrameMapper.get_names: unicode feature names", "user": {"login": "AssafBenDavid", "id": 30311104, "node_id": "MDQ6VXNlcjMwMzExMTA0", "avatar_url": "https://avatars2.githubusercontent.com/u/30311104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AssafBenDavid", "html_url": "https://github.com/AssafBenDavid", "followers_url": "https://api.github.com/users/AssafBenDavid/followers", "following_url": "https://api.github.com/users/AssafBenDavid/following{/other_user}", "gists_url": "https://api.github.com/users/AssafBenDavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/AssafBenDavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AssafBenDavid/subscriptions", "organizations_url": "https://api.github.com/users/AssafBenDavid/orgs", "repos_url": "https://api.github.com/users/AssafBenDavid/repos", "events_url": "https://api.github.com/users/AssafBenDavid/events{/privacy}", "received_events_url": "https://api.github.com/users/AssafBenDavid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T12:49:50Z", "updated_at": "2018-08-05T17:06:10Z", "closed_at": "2018-08-05T17:06:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen the features returned by a transformer (by `_get_feature_names`) are unicode strings containing non-ascii characters, `get_names` throws a `UnicodeEncodeError`. This is due to line 256 in `data frame_mapper.py`:\r\n`return [name + '_' + str(o) for o in names]`\r\nThis assumes any object in `names` can be converted to string using `str`.\r\nIt would be much better to use something like `'%s_%s' % (name, o)`, which returns a unicode when needed. At the end, these strings become DataFrame column names, and DataFrames don't care about unicode indices.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/158", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/158/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/158/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/158", "id": 341483668, "node_id": "MDU6SXNzdWUzNDE0ODM2Njg=", "number": 158, "title": "Feature request: retain DataFrame index when `df_out=True`", "user": {"login": "lsorber", "id": 4543654, "node_id": "MDQ6VXNlcjQ1NDM2NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4543654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lsorber", "html_url": "https://github.com/lsorber", "followers_url": "https://api.github.com/users/lsorber/followers", "following_url": "https://api.github.com/users/lsorber/following{/other_user}", "gists_url": "https://api.github.com/users/lsorber/gists{/gist_id}", "starred_url": "https://api.github.com/users/lsorber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lsorber/subscriptions", "organizations_url": "https://api.github.com/users/lsorber/orgs", "repos_url": "https://api.github.com/users/lsorber/repos", "events_url": "https://api.github.com/users/lsorber/events{/privacy}", "received_events_url": "https://api.github.com/users/lsorber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-16T11:35:06Z", "updated_at": "2018-07-16T12:08:08Z", "closed_at": "2018-07-16T12:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now if you ask for a DataFrame output with `df_out=True`, you lose the information in the DataFrame's index. Since Sklearn transformers may not add or remove rows, it makes sense to retain the input DataFrame's index when `df_out=True`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/155", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/155/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/155/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/155", "id": 322638010, "node_id": "MDU6SXNzdWUzMjI2MzgwMTA=", "number": 155, "title": "Out of date tox requirements", "user": {"login": "arielrossanigo", "id": 2752109, "node_id": "MDQ6VXNlcjI3NTIxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2752109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielrossanigo", "html_url": "https://github.com/arielrossanigo", "followers_url": "https://api.github.com/users/arielrossanigo/followers", "following_url": "https://api.github.com/users/arielrossanigo/following{/other_user}", "gists_url": "https://api.github.com/users/arielrossanigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielrossanigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielrossanigo/subscriptions", "organizations_url": "https://api.github.com/users/arielrossanigo/orgs", "repos_url": "https://api.github.com/users/arielrossanigo/repos", "events_url": "https://api.github.com/users/arielrossanigo/events{/privacy}", "received_events_url": "https://api.github.com/users/arielrossanigo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-13T23:50:53Z", "updated_at": "2018-05-15T18:53:38Z", "closed_at": "2018-05-15T18:53:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've just found some tox requirements out of date from the setup.py. \r\nI.e: tox runs with pandas 0.19 but when sklearn-pandas is pip installed, the version of pandas is 0.22. \r\n\r\nWith 0.22 there are some test that fail. I'll try to fix this and make a pull request, but I want to know how is the policy regarding testing different versions of dependencies, I mean, I saw that tox check against sklearn 0.17 and 0.18. The current version is 0.19; I need to add 0.19 and remove 0.17? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/150", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/150/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/150/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/150", "id": 317837523, "node_id": "MDU6SXNzdWUzMTc4Mzc1MjM=", "number": 150, "title": "DataFrameMapper cannot leverage special fit_transform methods", "user": {"login": "SandroCasagrande", "id": 22665904, "node_id": "MDQ6VXNlcjIyNjY1OTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/22665904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandroCasagrande", "html_url": "https://github.com/SandroCasagrande", "followers_url": "https://api.github.com/users/SandroCasagrande/followers", "following_url": "https://api.github.com/users/SandroCasagrande/following{/other_user}", "gists_url": "https://api.github.com/users/SandroCasagrande/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandroCasagrande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandroCasagrande/subscriptions", "organizations_url": "https://api.github.com/users/SandroCasagrande/orgs", "repos_url": "https://api.github.com/users/SandroCasagrande/repos", "events_url": "https://api.github.com/users/SandroCasagrande/events{/privacy}", "received_events_url": "https://api.github.com/users/SandroCasagrande/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-26T00:30:03Z", "updated_at": "2018-08-15T12:48:35Z", "closed_at": "2018-08-15T12:48:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For transformers in a DataFrameMapper, it would be useful to be able to access native combined fit_transform methods. This would allow e.g. for the different semantics of PCA(..., copy=False).fit_transform(X) versus .fit(X).transform(X), or the optimized version of DictVectorizer.fit_transform for sparse matrices, etc.\r\n\r\nThe current implementation of DataFrameMapper can only access each transformers fit and transform method successively. It's implementaion of fit_transform is the default inherited from TransformerMixin which always calls fit(...).transform(...).  \r\n\r\nIt should be quite simple to extend DataFrameMapper to account for this issue. I have the code prepared and will create a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/148", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/148/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/148/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/148", "id": 313940748, "node_id": "MDU6SXNzdWUzMTM5NDA3NDg=", "number": 148, "title": "Setting n_values of OneHotEncoder for multiple columns?", "user": {"login": "bifeng", "id": 8215563, "node_id": "MDQ6VXNlcjgyMTU1NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8215563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bifeng", "html_url": "https://github.com/bifeng", "followers_url": "https://api.github.com/users/bifeng/followers", "following_url": "https://api.github.com/users/bifeng/following{/other_user}", "gists_url": "https://api.github.com/users/bifeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/bifeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bifeng/subscriptions", "organizations_url": "https://api.github.com/users/bifeng/orgs", "repos_url": "https://api.github.com/users/bifeng/repos", "events_url": "https://api.github.com/users/bifeng/events{/privacy}", "received_events_url": "https://api.github.com/users/bifeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-13T01:36:29Z", "updated_at": "2018-09-05T15:26:58Z", "closed_at": "2018-09-05T15:26:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "## For each columns has different unqiue values, then how to setting the n_values for each columns?\r\n`from sklearn_pandas import gen_features\r\n\r\nfeature_def = gen_features(\r\n     columns=[['col1'], ['col2'], ['col3']],\r\n     classes=[{'class': sklearn.preprocessing.OneHotEncoder, 'n_values': ?}]\r\n )\r\n\r\n\r\nmapper5 = DataFrameMapper(feature_def)\r\n\r\ndata5 = pd.DataFrame({\r\n     'col1': [3, 2, 2],\r\n     'col2': [2, 1, 2],\r\n     'col3': [0, 0, 1]\r\n })\r\n\r\nmapper5.fit_transform(data5)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/146", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/146/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/146/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/146", "id": 310126625, "node_id": "MDU6SXNzdWUzMTAxMjY2MjU=", "number": 146, "title": "pip package update", "user": {"login": "sebastiangonsal", "id": 25679053, "node_id": "MDQ6VXNlcjI1Njc5MDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/25679053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastiangonsal", "html_url": "https://github.com/sebastiangonsal", "followers_url": "https://api.github.com/users/sebastiangonsal/followers", "following_url": "https://api.github.com/users/sebastiangonsal/following{/other_user}", "gists_url": "https://api.github.com/users/sebastiangonsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastiangonsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastiangonsal/subscriptions", "organizations_url": "https://api.github.com/users/sebastiangonsal/orgs", "repos_url": "https://api.github.com/users/sebastiangonsal/repos", "events_url": "https://api.github.com/users/sebastiangonsal/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastiangonsal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-30T17:47:20Z", "updated_at": "2018-08-15T12:14:56Z", "closed_at": "2018-08-15T12:14:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When does current master arrive in pip repo? The package seems to be behind.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/144", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/144/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/144/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/144", "id": 308092569, "node_id": "MDU6SXNzdWUzMDgwOTI1Njk=", "number": 144, "title": "Feature request: option to manually specify replacement value used by CategoricalImputer", "user": {"login": "rwjmiller", "id": 32071491, "node_id": "MDQ6VXNlcjMyMDcxNDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/32071491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwjmiller", "html_url": "https://github.com/rwjmiller", "followers_url": "https://api.github.com/users/rwjmiller/followers", "following_url": "https://api.github.com/users/rwjmiller/following{/other_user}", "gists_url": "https://api.github.com/users/rwjmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwjmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwjmiller/subscriptions", "organizations_url": "https://api.github.com/users/rwjmiller/orgs", "repos_url": "https://api.github.com/users/rwjmiller/repos", "events_url": "https://api.github.com/users/rwjmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/rwjmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-23T16:15:32Z", "updated_at": "2018-03-25T15:16:44Z", "closed_at": "2018-03-25T15:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The mode is a good replacement value to use most of the time, but it would occasionally be useful to be able to specify a different value, e.g. on the basis of domain knowledge.\r\n\r\nWould it be a lot of work to add this functionality? My python code is not generally of such a standard that I would feel confident contributing to the project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/143", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/143/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/143/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/143", "id": 302934455, "node_id": "MDU6SXNzdWUzMDI5MzQ0NTU=", "number": 143, "title": "sklearn pandas crashes on integer column names", "user": {"login": "sebastiangonsal", "id": 25679053, "node_id": "MDQ6VXNlcjI1Njc5MDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/25679053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastiangonsal", "html_url": "https://github.com/sebastiangonsal", "followers_url": "https://api.github.com/users/sebastiangonsal/followers", "following_url": "https://api.github.com/users/sebastiangonsal/following{/other_user}", "gists_url": "https://api.github.com/users/sebastiangonsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastiangonsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastiangonsal/subscriptions", "organizations_url": "https://api.github.com/users/sebastiangonsal/orgs", "repos_url": "https://api.github.com/users/sebastiangonsal/repos", "events_url": "https://api.github.com/users/sebastiangonsal/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastiangonsal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-07T01:47:32Z", "updated_at": "2018-03-07T20:28:01Z", "closed_at": "2018-03-07T20:28:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "`DataFrameMapper` throws error when column names of `DataFrame`  are integers (eg. a dataframe instantiated from a numpy array). Problem is Line 236 that assumes column names to be strings.\r\n\r\nhttps://github.com/scikit-learn-contrib/sklearn-pandas/blob/master/sklearn_pandas/dataframe_mapper.py#L236\r\n```\r\n        if alias is not None:\r\n            name = alias\r\n        elif isinstance(columns, list):\r\n            name = '_'.join(columns)\r\n        else:\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/141", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/141/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/141/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/141", "id": 298756680, "node_id": "MDU6SXNzdWUyOTg3NTY2ODA=", "number": 141, "title": "implementing my own transformer", "user": {"login": "sebastiangonsal", "id": 25679053, "node_id": "MDQ6VXNlcjI1Njc5MDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/25679053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastiangonsal", "html_url": "https://github.com/sebastiangonsal", "followers_url": "https://api.github.com/users/sebastiangonsal/followers", "following_url": "https://api.github.com/users/sebastiangonsal/following{/other_user}", "gists_url": "https://api.github.com/users/sebastiangonsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastiangonsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastiangonsal/subscriptions", "organizations_url": "https://api.github.com/users/sebastiangonsal/orgs", "repos_url": "https://api.github.com/users/sebastiangonsal/repos", "events_url": "https://api.github.com/users/sebastiangonsal/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastiangonsal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-20T21:33:13Z", "updated_at": "2018-02-28T17:44:23Z", "closed_at": "2018-02-28T17:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "What methods need to be implemented if I need to ship my own transfromer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/140", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/140/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/140/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/140", "id": 298747457, "node_id": "MDU6SXNzdWUyOTg3NDc0NTc=", "number": 140, "title": "multiple transformers for single column. Different expected input shapes", "user": {"login": "sebastiangonsal", "id": 25679053, "node_id": "MDQ6VXNlcjI1Njc5MDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/25679053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastiangonsal", "html_url": "https://github.com/sebastiangonsal", "followers_url": "https://api.github.com/users/sebastiangonsal/followers", "following_url": "https://api.github.com/users/sebastiangonsal/following{/other_user}", "gists_url": "https://api.github.com/users/sebastiangonsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastiangonsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastiangonsal/subscriptions", "organizations_url": "https://api.github.com/users/sebastiangonsal/orgs", "repos_url": "https://api.github.com/users/sebastiangonsal/repos", "events_url": "https://api.github.com/users/sebastiangonsal/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastiangonsal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-20T21:03:22Z", "updated_at": "2018-05-01T04:19:17Z", "closed_at": "2018-02-28T17:44:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following setup:\r\nColumn needs 2 transformers in a sequence (i.e. if column is x then i want to output g(f(x)) ). First is an imputer that needs to happen before second one is applied.\r\nFirst one expects single dimensional array, second expects 2 dimensional input. How can I do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/139", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/139/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/139/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/139", "id": 297743253, "node_id": "MDU6SXNzdWUyOTc3NDMyNTM=", "number": 139, "title": "Installing sklearn-pandas with Anaconda on Windows", "user": {"login": "pepaczz", "id": 12900940, "node_id": "MDQ6VXNlcjEyOTAwOTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/12900940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pepaczz", "html_url": "https://github.com/pepaczz", "followers_url": "https://api.github.com/users/pepaczz/followers", "following_url": "https://api.github.com/users/pepaczz/following{/other_user}", "gists_url": "https://api.github.com/users/pepaczz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pepaczz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pepaczz/subscriptions", "organizations_url": "https://api.github.com/users/pepaczz/orgs", "repos_url": "https://api.github.com/users/pepaczz/repos", "events_url": "https://api.github.com/users/pepaczz/events{/privacy}", "received_events_url": "https://api.github.com/users/pepaczz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-16T10:42:24Z", "updated_at": "2018-02-16T13:23:34Z", "closed_at": "2018-02-16T13:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to get the `sklearn-pandas` package installed using `conda`  on Windows 10?\r\n\r\nP.S. this is my first \"issue\" message in Git, hope I am at a right place.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/135", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/135/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/135/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/135", "id": 281188008, "node_id": "MDU6SXNzdWUyODExODgwMDg=", "number": 135, "title": "unicode handling error", "user": {"login": "DavideAllavena", "id": 1216774, "node_id": "MDQ6VXNlcjEyMTY3NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1216774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavideAllavena", "html_url": "https://github.com/DavideAllavena", "followers_url": "https://api.github.com/users/DavideAllavena/followers", "following_url": "https://api.github.com/users/DavideAllavena/following{/other_user}", "gists_url": "https://api.github.com/users/DavideAllavena/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavideAllavena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavideAllavena/subscriptions", "organizations_url": "https://api.github.com/users/DavideAllavena/orgs", "repos_url": "https://api.github.com/users/DavideAllavena/repos", "events_url": "https://api.github.com/users/DavideAllavena/events{/privacy}", "received_events_url": "https://api.github.com/users/DavideAllavena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-11T22:21:31Z", "updated_at": "2018-03-25T15:31:12Z", "closed_at": "2018-03-25T15:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Working with unicode text tokens i got this error using `DataFrameMapper` and `CountVectorizer`:\r\n```UnicodeEncodeError: 'ascii' codec can't encode character u'\\xe0' in position 7: ordinal not in range(128)```\r\n\r\nTo fix this I made this changes:\r\n```\r\n190c190\r\n<             return t.values\r\n---\r\n>             return t.values.astype('U')\r\n256c256\r\n<                 return [name + '_' + str(o) for o in names]\r\n---\r\n>                 return [name + '_' + o.encode('utf-8').strip() for o in names]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/134", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/134/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/134/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/134", "id": 275570200, "node_id": "MDU6SXNzdWUyNzU1NzAyMDA=", "number": 134, "title": "Why TransformerPipeline?", "user": {"login": "amueller", "id": 449558, "node_id": "MDQ6VXNlcjQ0OTU1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amueller", "html_url": "https://github.com/amueller", "followers_url": "https://api.github.com/users/amueller/followers", "following_url": "https://api.github.com/users/amueller/following{/other_user}", "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amueller/subscriptions", "organizations_url": "https://api.github.com/users/amueller/orgs", "repos_url": "https://api.github.com/users/amueller/repos", "events_url": "https://api.github.com/users/amueller/events{/privacy}", "received_events_url": "https://api.github.com/users/amueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-21T03:03:56Z", "updated_at": "2017-12-25T22:34:09Z", "closed_at": "2017-12-25T22:34:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hey. Silly questions: it's not immediately obvious to me, but why do you need TransformerPipeline? Can't you just use sklearn.pipeline.Pipeline?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/131", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/131/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/131/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/131", "id": 271834951, "node_id": "MDU6SXNzdWUyNzE4MzQ5NTE=", "number": 131, "title": "fit_transform fails for multiple column transformation", "user": {"login": "thebeancounter", "id": 13833578, "node_id": "MDQ6VXNlcjEzODMzNTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/13833578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thebeancounter", "html_url": "https://github.com/thebeancounter", "followers_url": "https://api.github.com/users/thebeancounter/followers", "following_url": "https://api.github.com/users/thebeancounter/following{/other_user}", "gists_url": "https://api.github.com/users/thebeancounter/gists{/gist_id}", "starred_url": "https://api.github.com/users/thebeancounter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thebeancounter/subscriptions", "organizations_url": "https://api.github.com/users/thebeancounter/orgs", "repos_url": "https://api.github.com/users/thebeancounter/repos", "events_url": "https://api.github.com/users/thebeancounter/events{/privacy}", "received_events_url": "https://api.github.com/users/thebeancounter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-07T13:41:05Z", "updated_at": "2017-12-23T16:05:32Z", "closed_at": "2017-12-23T16:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nI have multiple column names in the variable `other`\r\nWhen i try to use the following code taken from [here](https://github.com/scikit-learn-contrib/sklearn-pandas):\r\n`from sklearn.preprocessing import MinMaxScaler, LabelEncoder`\r\n`mapper = DataFrameMapper([[other[0],other[1]],LabelEncoder()])`\r\n`mapper.fit_transform(df.copy())`\r\nI get the following error:\r\n\r\n> raise ValueError(\"bad input shape {0}\".format(shape))\r\n> ValueError: ['EFW', 'BPD']: bad input shape (154, 2)\r\n\r\nWhen I use the following code, it works great:\r\n```\r\ncols = [(other[i], LabelEncoder()) for i,col in enumerate(other)]\r\nmapper = DataFrameMapper(cols)\r\nmapper.fit_transform(df.copy())\r\n```\r\nTo my understanding, both should work well and yield same results.\r\nWhat am I doing wrong here?\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/130", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/130/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/130/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/130", "id": 267872684, "node_id": "MDU6SXNzdWUyNjc4NzI2ODQ=", "number": 130, "title": "ImportError when import gen_features", "user": {"login": "pheman", "id": 14324098, "node_id": "MDQ6VXNlcjE0MzI0MDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/14324098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pheman", "html_url": "https://github.com/pheman", "followers_url": "https://api.github.com/users/pheman/followers", "following_url": "https://api.github.com/users/pheman/following{/other_user}", "gists_url": "https://api.github.com/users/pheman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pheman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pheman/subscriptions", "organizations_url": "https://api.github.com/users/pheman/orgs", "repos_url": "https://api.github.com/users/pheman/repos", "events_url": "https://api.github.com/users/pheman/events{/privacy}", "received_events_url": "https://api.github.com/users/pheman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-24T02:01:13Z", "updated_at": "2017-10-28T13:55:04Z", "closed_at": "2017-10-28T13:55:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a significant API change for gen_features? I encounter the following ImportError when I import the gen_feature function.\r\n\r\n>import sklearn_pandas as skpd\r\n>print(skpd.__version__)\r\n>from sklearn_pandas import gen_features\r\n\r\noutput:\r\n1.5.0\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-7-58333222ffaf> in <module>()\r\n      1 import sklearn_pandas as skpd\r\n      2 print(skpd.__version__)\r\n----> 3 from sklearn_pandas import gen_features\r\n\r\nImportError: cannot import name 'gen_features'\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/127", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/127/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/127/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/127", "id": 266094091, "node_id": "MDU6SXNzdWUyNjYwOTQwOTE=", "number": 127, "title": "transformed_names_ are not being unpickled.", "user": {"login": "trahflow", "id": 974088, "node_id": "MDQ6VXNlcjk3NDA4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/974088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trahflow", "html_url": "https://github.com/trahflow", "followers_url": "https://api.github.com/users/trahflow/followers", "following_url": "https://api.github.com/users/trahflow/following{/other_user}", "gists_url": "https://api.github.com/users/trahflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/trahflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trahflow/subscriptions", "organizations_url": "https://api.github.com/users/trahflow/orgs", "repos_url": "https://api.github.com/users/trahflow/repos", "events_url": "https://api.github.com/users/trahflow/events{/privacy}", "received_events_url": "https://api.github.com/users/trahflow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-17T11:47:55Z", "updated_at": "2017-10-22T17:48:29Z", "closed_at": "2017-10-22T17:48:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nthe `DataFrameMapper.transformed_names_` are a convenient feature if one wants to inspect e.g. feature importances.\r\nUnfortunately, right now this attribute is not being unpickled, as it is missing in `DataFrameMapper.__setstate__()`.\r\nAdding it there should fix the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/121", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/121/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/121/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/121", "id": 251837810, "node_id": "MDU6SXNzdWUyNTE4Mzc4MTA=", "number": 121, "title": "There seems to be some redundant code in DataFrameMapper._get_col_subset", "user": {"login": "HereticSK", "id": 17619612, "node_id": "MDQ6VXNlcjE3NjE5NjEy", "avatar_url": "https://avatars0.githubusercontent.com/u/17619612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HereticSK", "html_url": "https://github.com/HereticSK", "followers_url": "https://api.github.com/users/HereticSK/followers", "following_url": "https://api.github.com/users/HereticSK/following{/other_user}", "gists_url": "https://api.github.com/users/HereticSK/gists{/gist_id}", "starred_url": "https://api.github.com/users/HereticSK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HereticSK/subscriptions", "organizations_url": "https://api.github.com/users/HereticSK/orgs", "repos_url": "https://api.github.com/users/HereticSK/repos", "events_url": "https://api.github.com/users/HereticSK/events{/privacy}", "received_events_url": "https://api.github.com/users/HereticSK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-22T04:54:20Z", "updated_at": "2017-09-03T14:36:16Z", "closed_at": "2017-09-03T14:36:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. in the definition of `DataFrameMapper._get_col_subset`, there are a few lines of code which ckecks whether X is a list\r\n```Python\r\n        if isinstance(X, list):\r\n            X = [x[cols] for x in X]\r\n            X = pd.DataFrame(X)\r\n```\r\nWhen would X be a list? If I understand the code correctly, `DataFrameMapper._get_col_subset` is called internally within  `DataFrameMapper.fit` and `DataFrameMapper.transform`. It receives its argument  `X` directly from the outer method, where `X` should passed as a pandas DataFrame or a numpy array. So is there any cases when `isinstance(X, list)` is `True`? Is there anything I am missing?\r\n\r\n2. It seems that the  `return t` at the last line is redundant, as either `return t` or `return t.valuse` will be executed in the preceding block.\r\n ```Python\r\n        if input_df:\r\n            return t\r\n        else:\r\n            return t.values\r\n        return t\r\n ```\r\n\r\nI believe the redundancy mentioned above won't cause any trouble, but it can be kind of confusing for people to read to code.\r\n\r\nI am new to sklean_pandas. Correct me if I am wrong. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/118", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/118/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/118/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/118", "id": 246522028, "node_id": "MDU6SXNzdWUyNDY1MjIwMjg=", "number": 118, "title": "inverse_transform() function?", "user": {"login": "franciscogmm", "id": 28395003, "node_id": "MDQ6VXNlcjI4Mzk1MDAz", "avatar_url": "https://avatars2.githubusercontent.com/u/28395003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franciscogmm", "html_url": "https://github.com/franciscogmm", "followers_url": "https://api.github.com/users/franciscogmm/followers", "following_url": "https://api.github.com/users/franciscogmm/following{/other_user}", "gists_url": "https://api.github.com/users/franciscogmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/franciscogmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franciscogmm/subscriptions", "organizations_url": "https://api.github.com/users/franciscogmm/orgs", "repos_url": "https://api.github.com/users/franciscogmm/repos", "events_url": "https://api.github.com/users/franciscogmm/events{/privacy}", "received_events_url": "https://api.github.com/users/franciscogmm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-29T13:38:09Z", "updated_at": "2017-08-20T11:28:28Z", "closed_at": "2017-08-20T11:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all! just wanted to ask if it's possible to do an inverse transform function using DataFrameMapper? \r\n\r\nI realize that the class itself does not have a function like that, but has anyone else tried doing stuff manually? Any help would be great! or even save individual classes from labelencoders?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/116", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/116/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/116/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/116", "id": 245295282, "node_id": "MDU6SXNzdWUyNDUyOTUyODI=", "number": 116, "title": "sklearn-pandas don't support transfomer which will drop rows", "user": {"login": "scotthuang1989", "id": 5325686, "node_id": "MDQ6VXNlcjUzMjU2ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5325686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scotthuang1989", "html_url": "https://github.com/scotthuang1989", "followers_url": "https://api.github.com/users/scotthuang1989/followers", "following_url": "https://api.github.com/users/scotthuang1989/following{/other_user}", "gists_url": "https://api.github.com/users/scotthuang1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/scotthuang1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scotthuang1989/subscriptions", "organizations_url": "https://api.github.com/users/scotthuang1989/orgs", "repos_url": "https://api.github.com/users/scotthuang1989/repos", "events_url": "https://api.github.com/users/scotthuang1989/events{/privacy}", "received_events_url": "https://api.github.com/users/scotthuang1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-25T06:10:42Z", "updated_at": "2017-09-09T16:46:05Z", "closed_at": "2017-09-09T16:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my pre-processing steps, I have to drop some rows with outliers. I try to do that with a custom transformer, and get this error:\r\n\r\nValueError: all the input array dimensions except for the concatenation axis must match exactly\r\n\r\nI check the code, here is what I find:\r\n1. this a behavior by implementation.\r\n2. sklearn-pandas will process transformer one by one in the order defined by pass in list of transformers.\r\n3. the data source for every transformer is the ***original data***, not the data from last transformer.\r\n4. the processed data is added into a list. at the end of processing, all the processed columns will be concatenated.\r\n\r\nmy question is there other way of supporting drop-row operation with sklearn-pandas? I want to make sure there is no native support for this feature before I start coding my own.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/115", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/115/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/115/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/115", "id": 245275479, "node_id": "MDU6SXNzdWUyNDUyNzU0Nzk=", "number": 115, "title": "behavior of default=None", "user": {"login": "scotthuang1989", "id": 5325686, "node_id": "MDQ6VXNlcjUzMjU2ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5325686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scotthuang1989", "html_url": "https://github.com/scotthuang1989", "followers_url": "https://api.github.com/users/scotthuang1989/followers", "following_url": "https://api.github.com/users/scotthuang1989/following{/other_user}", "gists_url": "https://api.github.com/users/scotthuang1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/scotthuang1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scotthuang1989/subscriptions", "organizations_url": "https://api.github.com/users/scotthuang1989/orgs", "repos_url": "https://api.github.com/users/scotthuang1989/repos", "events_url": "https://api.github.com/users/scotthuang1989/events{/privacy}", "received_events_url": "https://api.github.com/users/scotthuang1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-25T03:28:47Z", "updated_at": "2017-07-29T09:25:02Z", "closed_at": "2017-07-29T09:24:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the document, if I want do transformation to some of columns in a DataFrame and keep other columns unchanged. I just need set default to None.\r\neg:\r\nmapper_age_median_standalization_drop_age = DataFrameMapper([\r\n    ('Pclass', sklearn.preprocessing.LabelBinarizer())\r\n ], input_df=True, df_out=True, default=None)\r\n\r\nBut the output is very strange, here is the columns name of output dataframe.\r\nIndex(['Pclass_1', 'Pclass_2', 'Pclass_3',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_0',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_1',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_2',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_3',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_4',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_5',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_6',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_7',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_8',\r\n       'PassengerId_Name_Sex_Age_SibSp_Parch_Ticket_Fare_Cabin_Embarked_9'],\r\n      dtype='object')\r\n\r\ncolumns name before transform:\r\n\r\nIndex(['PassengerId', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch',\r\n       'Ticket', 'Fare', 'Cabin', 'Embarked'],\r\n      dtype='object')\r\n\r\nI know I can workaround this by set column name manually, but this seems like a unexpected behavior to me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/114", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/114/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/114/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/114", "id": 244856731, "node_id": "MDU6SXNzdWUyNDQ4NTY3MzE=", "number": 114, "title": "Moving sklearn-pandas to scikit-learn-contrib", "user": {"login": "wesm", "id": 329591, "node_id": "MDQ6VXNlcjMyOTU5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesm", "html_url": "https://github.com/wesm", "followers_url": "https://api.github.com/users/wesm/followers", "following_url": "https://api.github.com/users/wesm/following{/other_user}", "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesm/subscriptions", "organizations_url": "https://api.github.com/users/wesm/orgs", "repos_url": "https://api.github.com/users/wesm/repos", "events_url": "https://api.github.com/users/wesm/events{/privacy}", "received_events_url": "https://api.github.com/users/wesm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-22T16:20:50Z", "updated_at": "2017-10-27T15:10:05Z", "closed_at": "2017-10-22T18:24:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The pandas team has been discussing how to handle pandas add on projects, and one thing that came up is that this repo might be better located in scikit-learn-contrib\r\n\r\nhttps://github.com/scikit-learn-contrib/\r\n\r\nSeparately, due to the way that resourcing works with Travis CI, we likely will create more GitHub organizations as a mechanism to expand our pool of CI workers.\r\n\r\nAny opinions from the developers here? cc @jorisvandenbossche @jreback ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/113", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/113/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/113/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/113", "id": 244656557, "node_id": "MDU6SXNzdWUyNDQ2NTY1NTc=", "number": 113, "title": "[Question] Apply the same transformation to several features", "user": {"login": "devforfu", "id": 6022009, "node_id": "MDQ6VXNlcjYwMjIwMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6022009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devforfu", "html_url": "https://github.com/devforfu", "followers_url": "https://api.github.com/users/devforfu/followers", "following_url": "https://api.github.com/users/devforfu/following{/other_user}", "gists_url": "https://api.github.com/users/devforfu/gists{/gist_id}", "starred_url": "https://api.github.com/users/devforfu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devforfu/subscriptions", "organizations_url": "https://api.github.com/users/devforfu/orgs", "repos_url": "https://api.github.com/users/devforfu/repos", "events_url": "https://api.github.com/users/devforfu/events{/privacy}", "received_events_url": "https://api.github.com/users/devforfu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-21T12:38:58Z", "updated_at": "2017-10-22T17:58:09Z", "closed_at": "2017-10-22T17:58:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It is possible to apply several transformations to a single column. But is it possible to do it vice versa, i.e. like:\r\n\r\n```python\r\ndf = pd.DataFrame({\r\n    'cat_first':  list('abaabababb'),\r\n    'cat_second': list('yyyynyynny'),\r\n    'num_first':  list(range(10)),\r\n    'num_second': list(np.random.normal(size=10))\r\n})\r\n\r\nmapper = DataFrameMapper([\r\n    (['cat_first', 'cat_second'], LabelBinarizer()),\r\n    (['num_first', 'num_second'], StandardScaler())\r\n], df_out=True)\r\n\r\noutput_df = mapper.fit_transform(df)\r\n# dataframe contains 4 columns with transformed features\r\n```\r\n\r\nI know that list syntax like `['cat_first', 'cat_second']` is reserved to pass several columns into single transformer, but is it possible to somehow configure mapper to treat this syntax in a way that I've described above? Or do I need just repeat columns as separate items, like:\r\n\r\n```python\r\nmapper = DataFrameMapper([\r\n    ('cat_first', LabelBinarizer()),\r\n    ('cat_second', LabelBinarizer()),\r\n    # etc ...\r\n])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/110", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/110/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/110/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/110", "id": 240567233, "node_id": "MDU6SXNzdWUyNDA1NjcyMzM=", "number": 110, "title": "Indicating which column is failing in DataFrameMapper", "user": {"login": "esquire900", "id": 2980417, "node_id": "MDQ6VXNlcjI5ODA0MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2980417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esquire900", "html_url": "https://github.com/esquire900", "followers_url": "https://api.github.com/users/esquire900/followers", "following_url": "https://api.github.com/users/esquire900/following{/other_user}", "gists_url": "https://api.github.com/users/esquire900/gists{/gist_id}", "starred_url": "https://api.github.com/users/esquire900/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esquire900/subscriptions", "organizations_url": "https://api.github.com/users/esquire900/orgs", "repos_url": "https://api.github.com/users/esquire900/repos", "events_url": "https://api.github.com/users/esquire900/events{/privacy}", "received_events_url": "https://api.github.com/users/esquire900/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-05T07:53:32Z", "updated_at": "2017-09-03T14:10:50Z", "closed_at": "2017-09-03T14:09:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, when the DataFrameMapper fails, a generic error is shown that contains very little info about the place / column of the DataFrame where the error occurs, i.e.\r\n\r\n`UnicodeEncodeError: 'ascii' codec can't encode character u'\\xa0' in position 6: ordinal not in range(128)`\r\n\r\nWith further debugging information that shows the DataFrameMapper code that fails, but provides no actual useful info for the end-user. I think that simply adding the name of the column that is failing in the error message (i.e. failed to apply method X to column Y) can be massive help in debugging :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/106", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/106/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/106/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/106", "id": 238150554, "node_id": "MDU6SXNzdWUyMzgxNTA1NTQ=", "number": 106, "title": "import sklearn LinearRegression failed due to sklearn-pandas installation", "user": {"login": "alex1sc", "id": 19567601, "node_id": "MDQ6VXNlcjE5NTY3NjAx", "avatar_url": "https://avatars3.githubusercontent.com/u/19567601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex1sc", "html_url": "https://github.com/alex1sc", "followers_url": "https://api.github.com/users/alex1sc/followers", "following_url": "https://api.github.com/users/alex1sc/following{/other_user}", "gists_url": "https://api.github.com/users/alex1sc/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex1sc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex1sc/subscriptions", "organizations_url": "https://api.github.com/users/alex1sc/orgs", "repos_url": "https://api.github.com/users/alex1sc/repos", "events_url": "https://api.github.com/users/alex1sc/events{/privacy}", "received_events_url": "https://api.github.com/users/alex1sc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-23T13:58:51Z", "updated_at": "2017-06-24T11:01:24Z", "closed_at": "2017-06-24T11:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm on ubuntu 17.04 with last anaconda release (Anaconda3-4.4.0-Linux-x86_64) and no other installed packages.\r\nRunning `from sklearn.linear_model import LinearRegression` without sklearn-pandas installation works fine. After installing sklearn-pandas `pip install --upgrade sklearn-pandas` I get the following error:\r\n> \r\n> ImportError                               Traceback (most recent call last)\r\n> <ipython-input-3-4436018ce40e> in <module>()\r\n>       1 from sklearn.preprocessing import StandardScaler, LabelEncoder, OneHotEncoder, LabelBinarizer\r\n>       2 from sklearn.model_selection import train_test_split\r\n> ----> 3 from sklearn.linear_model import LinearRegression\r\n> \r\n> /usr/local/bin/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/__init__.py in <module>()\r\n>      24 from .ridge import (Ridge, RidgeCV, RidgeClassifier, RidgeClassifierCV,\r\n>      25                     ridge_regression)\r\n> ---> 26 from .logistic import (LogisticRegression, LogisticRegressionCV,\r\n>      27                        logistic_regression_path)\r\n>      28 from .omp import (orthogonal_mp, orthogonal_mp_gram, OrthogonalMatchingPursuit,\r\n> \r\n> /usr/local/bin/anaconda3/lib/python3.6/site-packages/sklearn/linear_model/logistic.py in <module>()\r\n>      20 from ..feature_selection.from_model import _LearntSelectorMixin\r\n>      21 from ..preprocessing import LabelEncoder, LabelBinarizer\r\n> ---> 22 from ..svm.base import _fit_liblinear\r\n>      23 from ..utils import check_array, check_consistent_length, compute_class_weight\r\n>      24 from ..utils import check_random_state\r\n> \r\n> /usr/local/bin/anaconda3/lib/python3.6/site-packages/sklearn/svm/__init__.py in <module>()\r\n>      11 # License: BSD 3 clause (C) INRIA 2010\r\n>      12 \r\n> ---> 13 from .classes import SVC, NuSVC, SVR, NuSVR, OneClassSVM, LinearSVC, \\\r\n>      14         LinearSVR\r\n>      15 from .bounds import l1_min_c\r\n> \r\n> /usr/local/bin/anaconda3/lib/python3.6/site-packages/sklearn/svm/classes.py in <module>()\r\n>       2 import numpy as np\r\n>       3 \r\n> ----> 4 from .base import _fit_liblinear, BaseSVC, BaseLibSVM\r\n>       5 from ..base import BaseEstimator, RegressorMixin\r\n>       6 from ..linear_model.base import LinearClassifierMixin, SparseCoefMixin, \\\r\n> \r\n> /usr/local/bin/anaconda3/lib/python3.6/site-packages/sklearn/svm/base.py in <module>()\r\n>       6 from abc import ABCMeta, abstractmethod\r\n>       7 \r\n> ----> 8 from . import libsvm, liblinear\r\n>       9 from . import libsvm_sparse\r\n>      10 from ..base import BaseEstimator, ClassifierMixin\r\n> \r\n> ImportError: /usr/local/bin/anaconda3/lib/python3.6/site-packages/sklearn/svm/libsvm.cpython-36m-x86_64-linux-gnu.so: undefined symbol: __cxa_throw_bad_array_new_length\r\n\r\nThere are a few issue about libgcc on sk-learn github (https://github.com/scikit-learn/scikit-learn/issues/7869 and https://github.com/conda/conda/issues/3897) talking about downgrading gcc. But it's too much for me. I just removed the python package `sudo apt-get uninstall python` letting the only anaconda version in place. \r\n\r\nSklearn-pandas installation output is bellow:\r\n> Collecting sklearn-pandas\r\n>   Using cached sklearn_pandas-1.4.0-py2.py3-none-any.whl\r\n> Collecting scikit-learn>=0.15.0 (from sklearn-pandas)\r\n> Collecting scipy>=0.14 (from sklearn-pandas)\r\n>   Using cached scipy-0.19.1-cp36-cp36m-manylinux1_x86_64.whl\r\n> Collecting pandas>=0.11.0 (from sklearn-pandas)\r\n>   Using cached pandas-0.20.2-cp36-cp36m-manylinux1_x86_64.whl\r\n> Collecting numpy>=1.6.1 (from sklearn-pandas)\r\n>   Using cached numpy-1.13.0-cp36-cp36m-manylinux1_x86_64.whl\r\n> Requirement already up-to-date: pytz>=2011k in /usr/local/bin/anaconda3/lib/python3.6/site-packages (from pandas>=0.11.0->sklearn-pandas)\r\n> Requirement already up-to-date: python-dateutil>=2 in /usr/local/bin/anaconda3/lib/python3.6/site-packages (from pandas>=0.11.0->sklearn-pandas)\r\n> Requirement already up-to-date: six>=1.5 in /usr/local/bin/anaconda3/lib/python3.6/site-packages (from python-dateutil>=2->pandas>=0.11.0->sklearn-pandas)\r\n> Installing collected packages: scikit-learn, numpy, scipy, pandas, sklearn-pandas\r\n>   Found existing installation: scikit-learn 0.18.1\r\n>     DEPRECATION: Uninstalling a distutils installed project (scikit-learn) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.\r\n>     Uninstalling scikit-learn-0.18.1:\r\n>       Successfully uninstalled scikit-learn-0.18.1\r\n>   Found existing installation: numpy 1.12.1\r\n>     Uninstalling numpy-1.12.1:\r\n>       Successfully uninstalled numpy-1.12.1\r\n>   Found existing installation: scipy 0.19.0\r\n>     Uninstalling scipy-0.19.0:\r\n>       Successfully uninstalled scipy-0.19.0\r\n>   Found existing installation: pandas 0.20.1\r\n>     Uninstalling pandas-0.20.1:\r\n>       Successfully uninstalled pandas-0.20.1\r\n> Successfully installed numpy-1.13.0 pandas-0.20.2 scikit-learn-0.18.2 scipy-0.19.1 sklearn-pandas-1.4.0\r\n\r\nAny idea what package configuration could cause this ? \r\nAny possibility to correct this behavior ? Or which release of package should I use to be able to do normal stuff with scikit-learn.\r\n\r\nThx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/104", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/104/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/104/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/104", "id": 236398706, "node_id": "MDU6SXNzdWUyMzYzOTg3MDY=", "number": 104, "title": "Output column names when using multiple columns", "user": {"login": "drorata", "id": 2905978, "node_id": "MDQ6VXNlcjI5MDU5Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2905978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drorata", "html_url": "https://github.com/drorata", "followers_url": "https://api.github.com/users/drorata/followers", "following_url": "https://api.github.com/users/drorata/following{/other_user}", "gists_url": "https://api.github.com/users/drorata/gists{/gist_id}", "starred_url": "https://api.github.com/users/drorata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drorata/subscriptions", "organizations_url": "https://api.github.com/users/drorata/orgs", "repos_url": "https://api.github.com/users/drorata/repos", "events_url": "https://api.github.com/users/drorata/events{/privacy}", "received_events_url": "https://api.github.com/users/drorata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-16T07:09:03Z", "updated_at": "2017-10-22T11:47:32Z", "closed_at": "2017-06-24T17:35:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "For reference, I use the following imports:\r\n\r\n```python\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nfrom sklearn_pandas import DataFrameMapper\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom sklearn.preprocessing import OneHotEncoder\r\n```\r\n\r\nNext, I consider the following example:\r\n\r\n```python\r\nnp.random.seed(42)\r\ndf = pd.DataFrame(\r\n    {\r\n        \"weekday1\": pd.Series([1,4,2,6,0], dtype='category'),\r\n        \"weekday2\": pd.Series([3,1,2,1,5], dtype='category'),\r\n        \"val1\":  4 * np.random.random(size=5),\r\n        \"val2\":  np.log(np.random.random(size=5))\r\n    })\r\n```\r\n\r\nI want to apply `OneHotEncoder()` to the columns `weekday1` and `weekday2`. In addition, I want to scale the columns `val1` and `val2`. To that end, I use the following `DataFrameMapper`:\r\n\r\n```python\r\nmapper = DataFrameMapper(\r\n    [\r\n        (['val1', 'val2'], StandardScaler()),\r\n        (['weekday1', 'weekday2'], OneHotEncoder(n_values=7))\r\n    ],\r\n    df_out=True\r\n)\r\n```\r\n\r\nHowever, the columns of the resulting table are very confusing:\r\n\r\n```python\r\n['val1_val2_0',\r\n 'val1_val2_1',\r\n 'weekday1_weekday2_0',\r\n 'weekday1_weekday2_1',\r\n 'weekday1_weekday2_2',\r\n 'weekday1_weekday2_3',\r\n 'weekday1_weekday2_4',\r\n 'weekday1_weekday2_5',\r\n 'weekday1_weekday2_6',\r\n 'weekday1_weekday2_7',\r\n 'weekday1_weekday2_8',\r\n 'weekday1_weekday2_9',\r\n 'weekday1_weekday2_10',\r\n 'weekday1_weekday2_11',\r\n 'weekday1_weekday2_12',\r\n 'weekday1_weekday2_13']\r\n```\r\n\r\nI was expecting something like:\r\n\r\n```python\r\n['val1',\r\n 'val2',\r\n 'weekday1_0',\r\n 'weekday1_1',\r\n 'weekday1_2',\r\n 'weekday1_3',\r\n 'weekday1_4',\r\n 'weekday1_5',\r\n 'weekday1_6',\r\n 'weekday2_0',\r\n 'weekday2_1',\r\n 'weekday2_2',\r\n 'weekday2_3',\r\n 'weekday2_4',\r\n 'weekday2_5',\r\n 'weekday2_6']\r\n```\r\n\r\nWhat am I missing here? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/97", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/97/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/97/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/97", "id": 234662649, "node_id": "MDU6SXNzdWUyMzQ2NjI2NDk=", "number": 97, "title": "how can I use a generated feature in another feature", "user": {"login": "ragrawal", "id": 759018, "node_id": "MDQ6VXNlcjc1OTAxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/759018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ragrawal", "html_url": "https://github.com/ragrawal", "followers_url": "https://api.github.com/users/ragrawal/followers", "following_url": "https://api.github.com/users/ragrawal/following{/other_user}", "gists_url": "https://api.github.com/users/ragrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/ragrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ragrawal/subscriptions", "organizations_url": "https://api.github.com/users/ragrawal/orgs", "repos_url": "https://api.github.com/users/ragrawal/repos", "events_url": "https://api.github.com/users/ragrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/ragrawal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-08T21:33:31Z", "updated_at": "2017-06-13T19:41:09Z", "closed_at": "2017-06-13T19:41:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs there a way to use a derived feature in another transformer. For instance I need something like this\r\n\r\nDataFrameMapper([\r\n    ('start_timestamp', toDateStringTransformer(), {'alias': 'datestr'}),\r\n    (['field1', 'datestr'], FeatureGenerator(), {'input_df': True}),\r\n])\r\n\r\nAbove I am first converting a start_timestamp to detester and then generating some additional features based on field1 and detester. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/95", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/95/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/95/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/95", "id": 227437393, "node_id": "MDU6SXNzdWUyMjc0MzczOTM=", "number": 95, "title": "Add to documentation: Preserve Index of Input DataFrame", "user": {"login": "dreyco676", "id": 7094791, "node_id": "MDQ6VXNlcjcwOTQ3OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7094791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreyco676", "html_url": "https://github.com/dreyco676", "followers_url": "https://api.github.com/users/dreyco676/followers", "following_url": "https://api.github.com/users/dreyco676/following{/other_user}", "gists_url": "https://api.github.com/users/dreyco676/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreyco676/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreyco676/subscriptions", "organizations_url": "https://api.github.com/users/dreyco676/orgs", "repos_url": "https://api.github.com/users/dreyco676/repos", "events_url": "https://api.github.com/users/dreyco676/events{/privacy}", "received_events_url": "https://api.github.com/users/dreyco676/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-09T17:17:17Z", "updated_at": "2017-09-10T14:24:14Z", "closed_at": "2017-09-10T14:24:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my workflow I need to retain the index for joining data back. It looks like this can be done as long as your index is the same numeric type as the rest of the columns you are transforming.\r\n\r\n\r\n\r\nCreate the index as a column and set the type\r\n`df['index'] = df.index.astype('int64')`\r\n\r\nCreate the mapper with no transformations to the 'index' column\r\n`mapper = DataFrameMapper([('text_col', CountVectorizer()), ('index', None)], df_out=True)`\r\n`transformed_df = mapper.fit_transform(df.copy())`\r\n\r\nSet the index using the 'index' column again\r\n`transformed_df = transformed_df.set_index('index')`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/94", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/94/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/94/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/94", "id": 227434409, "node_id": "MDU6SXNzdWUyMjc0MzQ0MDk=", "number": 94, "title": "DataFrameMapper has no arg 'input_df'", "user": {"login": "dreyco676", "id": 7094791, "node_id": "MDQ6VXNlcjcwOTQ3OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7094791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreyco676", "html_url": "https://github.com/dreyco676", "followers_url": "https://api.github.com/users/dreyco676/followers", "following_url": "https://api.github.com/users/dreyco676/following{/other_user}", "gists_url": "https://api.github.com/users/dreyco676/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreyco676/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreyco676/subscriptions", "organizations_url": "https://api.github.com/users/dreyco676/orgs", "repos_url": "https://api.github.com/users/dreyco676/repos", "events_url": "https://api.github.com/users/dreyco676/events{/privacy}", "received_events_url": "https://api.github.com/users/dreyco676/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-09T17:06:09Z", "updated_at": "2017-05-13T13:52:16Z", "closed_at": "2017-05-13T13:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if the documentation is old but I can't seem to use the `input_df` argument.\r\n\r\n`mapper_df = DataFrameMapper([('TextColumn', CountVectorizer(min_df=4))], input_df=True, df_out=True)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/93", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/93/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/93/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/93", "id": 226429793, "node_id": "MDU6SXNzdWUyMjY0Mjk3OTM=", "number": 93, "title": "PyPI version out-of-date and mislabelled as v1.3.0 ", "user": {"login": "mdlynch37", "id": 17936056, "node_id": "MDQ6VXNlcjE3OTM2MDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/17936056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdlynch37", "html_url": "https://github.com/mdlynch37", "followers_url": "https://api.github.com/users/mdlynch37/followers", "following_url": "https://api.github.com/users/mdlynch37/following{/other_user}", "gists_url": "https://api.github.com/users/mdlynch37/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdlynch37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdlynch37/subscriptions", "organizations_url": "https://api.github.com/users/mdlynch37/orgs", "repos_url": "https://api.github.com/users/mdlynch37/repos", "events_url": "https://api.github.com/users/mdlynch37/events{/privacy}", "received_events_url": "https://api.github.com/users/mdlynch37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-04T22:47:56Z", "updated_at": "2017-06-10T16:43:22Z", "closed_at": "2017-06-10T16:43:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure if this issue belongs here, but....\r\n\r\nVersion that installs through pip command is listed as 1.3.0, different from current of GitHub 1.1.0\r\nhttps://pypi.python.org/pypi/sklearn-pandas\r\n\r\nAlso, that PyPI version is missing the ```input_df``` argument, so I'm guessing it needs to be updated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/90", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/90/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/90/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/90", "id": 222106007, "node_id": "MDU6SXNzdWUyMjIxMDYwMDc=", "number": 90, "title": "Add contribution guidelines", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-17T10:21:37Z", "updated_at": "2017-06-14T18:51:03Z", "closed_at": "2017-06-14T18:51:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://github.com/blog/1184-contributing-guidelines\r\n\r\n* How to download and install a development copy\r\n* How to run tests and flake8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/88", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/88/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/88/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/88", "id": 221188525, "node_id": "MDU6SXNzdWUyMjExODg1MjU=", "number": 88, "title": "df_out does not work when default = None", "user": {"login": "akrishnamo", "id": 4354395, "node_id": "MDQ6VXNlcjQzNTQzOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4354395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akrishnamo", "html_url": "https://github.com/akrishnamo", "followers_url": "https://api.github.com/users/akrishnamo/followers", "following_url": "https://api.github.com/users/akrishnamo/following{/other_user}", "gists_url": "https://api.github.com/users/akrishnamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/akrishnamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akrishnamo/subscriptions", "organizations_url": "https://api.github.com/users/akrishnamo/orgs", "repos_url": "https://api.github.com/users/akrishnamo/repos", "events_url": "https://api.github.com/users/akrishnamo/events{/privacy}", "received_events_url": "https://api.github.com/users/akrishnamo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943696, "node_id": "MDU6TGFiZWwzNjk0MzY5Ng==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-12T08:31:08Z", "updated_at": "2017-05-13T13:55:43Z", "closed_at": "2017-05-13T13:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the 'data' example to get a dataframe out after transformation. In the snippet below, I want to retain the 'pet' column as is.\r\n\r\nmapper = DataFrameMapper([\r\n('salary', sklearn.preprocessing.LabelBinarizer()),\r\n(['children'], sklearn.preprocessing.StandardScaler())\r\n], default=None, df_out=True)\r\n\r\nx=mapper.fit_transform(data)\r\nx\r\n\r\nThe above code errors out and fails to return a dataframe. However, when I change default transformation as default=False, the above code works correctly and correct returns a numpy array\r\n\r\nIf I use ('pet', None) explicitly without using default=None, it works correctly and returns a dataframe.\r\n\r\nThis behavior is seen with numerical columns as well. I suspected it may be limited to strings as 'pet' column contains string/categorical data, but that doesn't seem to be the case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/86", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/86/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/86/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/86", "id": 220568199, "node_id": "MDU6SXNzdWUyMjA1NjgxOTk=", "number": 86, "title": "Bug in a CategorialImputer test.", "user": {"login": "arnau126", "id": 7932044, "node_id": "MDQ6VXNlcjc5MzIwNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7932044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnau126", "html_url": "https://github.com/arnau126", "followers_url": "https://api.github.com/users/arnau126/followers", "following_url": "https://api.github.com/users/arnau126/following{/other_user}", "gists_url": "https://api.github.com/users/arnau126/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnau126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnau126/subscriptions", "organizations_url": "https://api.github.com/users/arnau126/orgs", "repos_url": "https://api.github.com/users/arnau126/repos", "events_url": "https://api.github.com/users/arnau126/events{/privacy}", "received_events_url": "https://api.github.com/users/arnau126/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-10T08:13:12Z", "updated_at": "2017-05-13T13:56:22Z", "closed_at": "2017-05-13T13:56:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "CategorialImputer tests are not actually testing the feature when `input_type is 'np'` and `none_value is np.nan`.\r\n\r\nThis is because of the use of `np.asarray`. This function infers the data type and in this case it is casting the np.nan to string.\r\n\r\nIn explanation:\r\n```\r\nIn [1]:  data = ['a', 'b', 'b', np.nan]\r\n\r\nIn [2]: X = np.asarray(data)\r\n\r\nIn [3]: X\r\nOut [3]: array(['a', 'b', 'b', 'nan'], \r\n            dtype='|S3')\r\n\r\n```\r\n\r\nSo, in this case, there is no null-like value and the imputer is doing nothing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/83", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/83/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/83/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/83", "id": 219470685, "node_id": "MDU6SXNzdWUyMTk0NzA2ODU=", "number": 83, "title": "Allow to provide custom column name for transformed feature", "user": {"login": "ragrawal", "id": 759018, "node_id": "MDQ6VXNlcjc1OTAxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/759018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ragrawal", "html_url": "https://github.com/ragrawal", "followers_url": "https://api.github.com/users/ragrawal/followers", "following_url": "https://api.github.com/users/ragrawal/following{/other_user}", "gists_url": "https://api.github.com/users/ragrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/ragrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ragrawal/subscriptions", "organizations_url": "https://api.github.com/users/ragrawal/orgs", "repos_url": "https://api.github.com/users/ragrawal/repos", "events_url": "https://api.github.com/users/ragrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/ragrawal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-05T05:12:59Z", "updated_at": "2017-10-16T03:51:20Z", "closed_at": "2017-06-10T17:00:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I have a datetime values in a column, \"submitted_at\", and I am trying to construct two features out of it, namely: day of week and hour of day. However the output dataframe contains \"submitted_at\" twice. Once for day of week feature and another for hour of day feature. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/80", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/80/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/80/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/80", "id": 205892087, "node_id": "MDU6SXNzdWUyMDU4OTIwODc=", "number": 80, "title": "DeprecationWarning for cross_validation", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-02-07T13:49:47Z", "updated_at": "2017-12-23T16:24:32Z", "closed_at": "2017-12-23T16:24:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "In addition to #76, also the `sklearn.cross_validation` package got deprecated:\r\n\r\n```\r\nIn [1]: import sklearn_pandas\r\n/home/maxnoe/.local/anaconda3/lib/python3.5/site-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\r\n  \"This module will be removed in 0.20.\", DeprecationWarning)\r\n/home/maxnoe/.local/anaconda3/lib/python3.5/site-packages/sklearn/grid_search.py:43: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.\r\n  DeprecationWarning)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/78", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/78/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/78/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/78", "id": 204521378, "node_id": "MDU6SXNzdWUyMDQ1MjEzNzg=", "number": 78, "title": "Name columns without outputting a dataframe", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-01T08:18:56Z", "updated_at": "2017-04-08T15:31:40Z", "closed_at": "2017-04-08T15:31:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In https://github.com/paulgb/sklearn-pandas/issues/73 we added the possibility of outputting a dataframe with named columns to implement https://github.com/paulgb/sklearn-pandas/issues/70\r\n\r\nHowever in some cases one would want to get the \"columns\" names and still get an ndarray as output, for performance reasons. \r\n\r\nThis shouldn't be hard to do. Names can be stored in a `names` attribute in the dataframemapper after transform. @dcbb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/77", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/77/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/77/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/77", "id": 202340026, "node_id": "MDU6SXNzdWUyMDIzNDAwMjY=", "number": 77, "title": "tar-ball on pypi", "user": {"login": "arunpersaud", "id": 425653, "node_id": "MDQ6VXNlcjQyNTY1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/425653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunpersaud", "html_url": "https://github.com/arunpersaud", "followers_url": "https://api.github.com/users/arunpersaud/followers", "following_url": "https://api.github.com/users/arunpersaud/following{/other_user}", "gists_url": "https://api.github.com/users/arunpersaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunpersaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunpersaud/subscriptions", "organizations_url": "https://api.github.com/users/arunpersaud/orgs", "repos_url": "https://api.github.com/users/arunpersaud/repos", "events_url": "https://api.github.com/users/arunpersaud/events{/privacy}", "received_events_url": "https://api.github.com/users/arunpersaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-21T21:09:49Z", "updated_at": "2017-01-22T17:04:36Z", "closed_at": "2017-01-22T17:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nis it possible to upload a tar-ball to pypi? This would help people to package the module for linux distributions. Opensuse, for example, currently tries to use the pypi tar-ball, but for 1.3 none is available.\r\n\r\nthanks\r\n\r\nArun", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/76", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/76/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/76/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/76", "id": 202313286, "node_id": "MDU6SXNzdWUyMDIzMTMyODY=", "number": 76, "title": "DeprecationWarning with sklearn.GridSearchCV", "user": {"login": "MSardelich", "id": 5111540, "node_id": "MDQ6VXNlcjUxMTE1NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5111540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSardelich", "html_url": "https://github.com/MSardelich", "followers_url": "https://api.github.com/users/MSardelich/followers", "following_url": "https://api.github.com/users/MSardelich/following{/other_user}", "gists_url": "https://api.github.com/users/MSardelich/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSardelich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSardelich/subscriptions", "organizations_url": "https://api.github.com/users/MSardelich/orgs", "repos_url": "https://api.github.com/users/MSardelich/repos", "events_url": "https://api.github.com/users/MSardelich/events{/privacy}", "received_events_url": "https://api.github.com/users/MSardelich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-01-21T12:34:23Z", "updated_at": "2017-06-24T17:34:31Z", "closed_at": "2017-06-24T17:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the library together with ```sklearn.GridSearchCV``` I am getting the deprecation warning below:\r\n \r\n```/home/marcelo/.local/lib/python2.7/site-packages/sklearn/base.py:122: DeprecationWarning: Estimator DataFrameMapper modifies parameters in __init__. This behavior is deprecated as of 0.18 and support for this behavior will be removed in 0.20. % type(estimator).__name__, DeprecationWarning)```\r\n\r\nSince the behavior will change soon, I would check if it is something relevant to this library.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/75", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/75/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/75/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/75", "id": 202300470, "node_id": "MDU6SXNzdWUyMDIzMDA0NzA=", "number": 75, "title": "Analogy function to pandas.get_dummies?", "user": {"login": "Yevgnen", "id": 16749790, "node_id": "MDQ6VXNlcjE2NzQ5Nzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/16749790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yevgnen", "html_url": "https://github.com/Yevgnen", "followers_url": "https://api.github.com/users/Yevgnen/followers", "following_url": "https://api.github.com/users/Yevgnen/following{/other_user}", "gists_url": "https://api.github.com/users/Yevgnen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yevgnen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yevgnen/subscriptions", "organizations_url": "https://api.github.com/users/Yevgnen/orgs", "repos_url": "https://api.github.com/users/Yevgnen/repos", "events_url": "https://api.github.com/users/Yevgnen/events{/privacy}", "received_events_url": "https://api.github.com/users/Yevgnen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-21T07:46:34Z", "updated_at": "2017-01-21T08:42:52Z", "closed_at": "2017-01-21T08:10:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for the great library.\r\n\r\nI deal with the string categorical values quite often and usually want to transform them into one-hot-encoding. To do so, one may use\r\n\r\n1.  `pandas.get_dummies`\r\n2. `sklearn.feature_extraction.DictVectorizer`\r\n3. `sklearn.preprocessing.LabelBinarizer` followed by sklearn.preprocessing.OneHotEncoder\r\n\r\nWe can see that 1. is useful when one wants to generate the columns name automatically, while it can't handle unseen value of the category quite well automatically. 2. and 3. are opposite, easily to put unseen value a vector of (0, ..., 0) but `*.transform` but lose the column name, and one will usually use the `pandas.to_dict` function to generate a dict input for `sklearn.feature_extraction.DictVectorizer`, the order of the column is usually changed.\r\n\r\nSo I wonder is there a easy `sklearn-pandas` way to handle this? Thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/70", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/70/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/70/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/70", "id": 199899726, "node_id": "MDU6SXNzdWUxOTk4OTk3MjY=", "number": 70, "title": "Name columns", "user": {"login": "jph00", "id": 346999, "node_id": "MDQ6VXNlcjM0Njk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/346999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jph00", "html_url": "https://github.com/jph00", "followers_url": "https://api.github.com/users/jph00/followers", "following_url": "https://api.github.com/users/jph00/following{/other_user}", "gists_url": "https://api.github.com/users/jph00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jph00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jph00/subscriptions", "organizations_url": "https://api.github.com/users/jph00/orgs", "repos_url": "https://api.github.com/users/jph00/repos", "events_url": "https://api.github.com/users/jph00/events{/privacy}", "received_events_url": "https://api.github.com/users/jph00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-01-10T18:36:16Z", "updated_at": "2017-02-01T08:19:11Z", "closed_at": "2017-02-01T08:19:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have a way to specify the names of columns that are created by a transform, such that later on you could pass mapper.names (or similar) to any functions that expect a list of column names (eg variable importance) or for use in any charts where you would want to label the columns with their names. \r\n\r\nThis could default to the name of the pandas column that created it (if there's only one input and output) or the input columns joined with '_' if there's multiple inputs, and the name concatenated with '_1', '_2' etc if there's multiple outputs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/69", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/69/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/69/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/69", "id": 199277638, "node_id": "MDU6SXNzdWUxOTkyNzc2Mzg=", "number": 69, "title": "Feature Request: PandasFeatureUnion", "user": {"login": "mattayes", "id": 8622473, "node_id": "MDQ6VXNlcjg2MjI0NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8622473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattayes", "html_url": "https://github.com/mattayes", "followers_url": "https://api.github.com/users/mattayes/followers", "following_url": "https://api.github.com/users/mattayes/following{/other_user}", "gists_url": "https://api.github.com/users/mattayes/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattayes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattayes/subscriptions", "organizations_url": "https://api.github.com/users/mattayes/orgs", "repos_url": "https://api.github.com/users/mattayes/repos", "events_url": "https://api.github.com/users/mattayes/events{/privacy}", "received_events_url": "https://api.github.com/users/mattayes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-06T20:11:38Z", "updated_at": "2017-03-04T14:51:10Z", "closed_at": "2017-03-04T14:51:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks:\r\n\r\nAn issue I have with scikit-learn's [`FeatureUnion`](http://scikit-learn.org/stable/modules/generated/sklearn.pipeline.FeatureUnion.html) is that you can't make it return a `DataFrame` (unlike with regular transformers). It would be nice to see a variant of `FeatureUnion` that worked nicely with Pandas workflows.\r\n\r\nHere's a prototype of what I'm thinking:\r\n```python\r\nclass PandasFeatureUnion(FeatureUnion):\r\n    \"\"\"FeatureUnion which returns a DataFrame.\"\"\"\r\n    \r\n    def _to_dataframe(self, X):\r\n        columns = [name for (name, _) in self.transformer_list]\r\n        return pd.DataFrame(X, columns=columns)\r\n    \r\n    def transform(self, X):\r\n        result = super().transform(X)\r\n        return self._to_dataframe(result)\r\n    \r\n    def fit_transform(self, X):\r\n        result = super().fit_transform(X)\r\n        return self._to_dataframe(result)\r\n```\r\n\r\nYou could imagine using it in a manner similar to [this example](http://scikit-learn.org/stable/auto_examples/hetero_feature_union.html). I see this as a complement to the existing `DataFrameMapper`.\r\n\r\nMy example above doesn't handle indexes yet and I'd love some advice on how to implement it (ideally without having to rewrite most of `FeatureUnion`. Here are some concerns I have now:\r\n* Should all the indexes have to match up?\r\n* If not, how should joins be handled?\r\n* Should `PandasFeatureUnion` accept an `ignore_index=True` argument?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/68", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/68/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/68/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/68", "id": 194827856, "node_id": "MDU6SXNzdWUxOTQ4Mjc4NTY=", "number": 68, "title": "functionality from sklearn cross_validation module moved to model_selection in 0.18", "user": {"login": "lefant", "id": 64208, "node_id": "MDQ6VXNlcjY0MjA4", "avatar_url": "https://avatars2.githubusercontent.com/u/64208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lefant", "html_url": "https://github.com/lefant", "followers_url": "https://api.github.com/users/lefant/followers", "following_url": "https://api.github.com/users/lefant/following{/other_user}", "gists_url": "https://api.github.com/users/lefant/gists{/gist_id}", "starred_url": "https://api.github.com/users/lefant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lefant/subscriptions", "organizations_url": "https://api.github.com/users/lefant/orgs", "repos_url": "https://api.github.com/users/lefant/repos", "events_url": "https://api.github.com/users/lefant/events{/privacy}", "received_events_url": "https://api.github.com/users/lefant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-11T11:54:01Z", "updated_at": "2017-01-16T18:26:13Z", "closed_at": "2017-01-16T18:26:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\nimporting sklearn_pandas i get the following warning:\r\n\r\n```\r\n/usr/local/lib/python3.5/dist-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module \r\ninto which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will \r\nbe removed in 0.20.\r\n  \"This module will be removed in 0.20.\", DeprecationWarning)\r\n```\r\n\r\nthis is because they moved some functions from cross_validation to the new model_selection module. read more here:\r\nhttp://scikit-learn.org/stable/whats_new.html#version-0-18\r\n\r\nbest regards,\r\nFabian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/67", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/67/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/67/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/67", "id": 185262143, "node_id": "MDU6SXNzdWUxODUyNjIxNDM=", "number": 67, "title": "StandardScaler in DataFrameMapper throws DeprecationWarning (scikit-learn >= 0.17.0)", "user": {"login": "joshmorel", "id": 10546720, "node_id": "MDQ6VXNlcjEwNTQ2NzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10546720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshmorel", "html_url": "https://github.com/joshmorel", "followers_url": "https://api.github.com/users/joshmorel/followers", "following_url": "https://api.github.com/users/joshmorel/following{/other_user}", "gists_url": "https://api.github.com/users/joshmorel/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshmorel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshmorel/subscriptions", "organizations_url": "https://api.github.com/users/joshmorel/orgs", "repos_url": "https://api.github.com/users/joshmorel/repos", "events_url": "https://api.github.com/users/joshmorel/events{/privacy}", "received_events_url": "https://api.github.com/users/joshmorel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-25T23:43:44Z", "updated_at": "2017-01-14T19:10:09Z", "closed_at": "2017-01-14T19:10:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using StandardScaler() in DataFrameMapper I get a DeprecationWarning when passing the column name as a string . I am warned of a ValueError in scikit-learn 0.19 although, I'm not yet getting this. Passing the name as a list avoids the issue, but I think this need should be hidden from the user. \n\nI can fix this myself in a fork but am kind of new to making pull requests so I want to post this as an issue first and confirm the desired workflow for doing this. \n\nHere is an example with output:\n\n``` python\n\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn_pandas import DataFrameMapper\n\ndf = pd.DataFrame({'iq': [100,90,20,200], 'height': [140.1,130.7,170.1,100.34]})\nmapper = DataFrameMapper([\n        ('height', StandardScaler())\n])\nX = mapper.fit_transform(df)\n```\n\n``` python\n/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/data.py:586: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and will raise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.\n  warnings.warn(DEPRECATION_MSG_1D, DeprecationWarning)\n/usr/local/lib/python3.5/dist-packages/sklearn/preprocessing/data.py:649: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and will raise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.\n  warnings.warn(DEPRECATION_MSG_1D, DeprecationWarning)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/66", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/66/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/66/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/66", "id": 176030955, "node_id": "MDU6SXNzdWUxNzYwMzA5NTU=", "number": 66, "title": "DataFrameMapper does not have default parameter in master branch", "user": {"login": "pfennema", "id": 1378714, "node_id": "MDQ6VXNlcjEzNzg3MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1378714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfennema", "html_url": "https://github.com/pfennema", "followers_url": "https://api.github.com/users/pfennema/followers", "following_url": "https://api.github.com/users/pfennema/following{/other_user}", "gists_url": "https://api.github.com/users/pfennema/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfennema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfennema/subscriptions", "organizations_url": "https://api.github.com/users/pfennema/orgs", "repos_url": "https://api.github.com/users/pfennema/repos", "events_url": "https://api.github.com/users/pfennema/events{/privacy}", "received_events_url": "https://api.github.com/users/pfennema/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-09T15:00:25Z", "updated_at": "2016-09-09T15:24:05Z", "closed_at": "2016-09-09T15:24:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use sklearn-pandas (first via pip install) and then via git clone, I get an error when there is a default=None in the DataFrameMapper constructor:\n    TypeError: **init**() got an unexpected keyword argument 'default'\n\nWhen using the branch 'default_transformer' this works, but this branch is  8 commits behind. Can the branch be merged?\n\nThanks, Paul\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/65", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/65/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/65/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/65", "id": 175899472, "node_id": "MDU6SXNzdWUxNzU4OTk0NzI=", "number": 65, "title": "pip using deprecated-cv branch instead of master", "user": {"login": "joshmorel", "id": 10546720, "node_id": "MDQ6VXNlcjEwNTQ2NzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10546720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshmorel", "html_url": "https://github.com/joshmorel", "followers_url": "https://api.github.com/users/joshmorel/followers", "following_url": "https://api.github.com/users/joshmorel/following{/other_user}", "gists_url": "https://api.github.com/users/joshmorel/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshmorel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshmorel/subscriptions", "organizations_url": "https://api.github.com/users/joshmorel/orgs", "repos_url": "https://api.github.com/users/joshmorel/repos", "events_url": "https://api.github.com/users/joshmorel/events{/privacy}", "received_events_url": "https://api.github.com/users/joshmorel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-09T00:39:50Z", "updated_at": "2016-10-02T11:31:30Z", "closed_at": "2016-10-02T11:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIt seems that pip is using deprecated-cv branch instead of master branch.\n\nI noticed this after getting an error when running this code as per README.\n\n``` python\n>>> mapper4 = DataFrameMapper([\n...     ('pet', sklearn.preprocessing.LabelBinarizer()),\n...     ('children', None)\n... ], default=sklearn.preprocessing.StandardScaler())\n>>> np.round(mapper4.fit_transform(data.copy()), 1)\n```\n\nNot sure if this is intended, or...?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/63", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/63/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/63/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/63", "id": 172860686, "node_id": "MDU6SXNzdWUxNzI4NjA2ODY=", "number": 63, "title": "How to deal with OneHotEncoder() in pipeline?", "user": {"login": "DataTerminatorX", "id": 12929606, "node_id": "MDQ6VXNlcjEyOTI5NjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/12929606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DataTerminatorX", "html_url": "https://github.com/DataTerminatorX", "followers_url": "https://api.github.com/users/DataTerminatorX/followers", "following_url": "https://api.github.com/users/DataTerminatorX/following{/other_user}", "gists_url": "https://api.github.com/users/DataTerminatorX/gists{/gist_id}", "starred_url": "https://api.github.com/users/DataTerminatorX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DataTerminatorX/subscriptions", "organizations_url": "https://api.github.com/users/DataTerminatorX/orgs", "repos_url": "https://api.github.com/users/DataTerminatorX/repos", "events_url": "https://api.github.com/users/DataTerminatorX/events{/privacy}", "received_events_url": "https://api.github.com/users/DataTerminatorX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-24T04:12:47Z", "updated_at": "2016-08-25T14:13:51Z", "closed_at": "2016-08-25T14:13:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find a bug when I use `sklearn_pandas.DataFrameMapper`. I've already read the source code of `DataFrameMapper` while fail to fix it. Could someone help with it?\n\nFirstly, I get a categorical variable as below\n\n``` python\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn_pandas import DataFrameMapper\nimport pandas as pd\n\ntestdata = pd.DataFrame({'pet':    ['cat', 'dog', 'dog', 'fish', 'cat', 'dog', 'cat', 'fish']})\n```\n\nWhen I implement transformer `LabelBinarizer()` through `DataFrameMapper`, I got what I expect\n\n``` python\nIn[11]\nmapper1 = DataFrameMapper([('pet',[LabelBinarizer()])],sparse=False)\nmapper1.fit_transform(testdata)\nOut[11]:\narray([[1, 0, 0],\n       [0, 1, 0],\n       [0, 1, 0],\n       [0, 0, 1],\n       [1, 0, 0],\n       [0, 1, 0],\n       [1, 0, 0],\n       [0, 0, 1]])\n```\n\nHowever, when I use cascaded transformer `LabelEncoder()` and `OneHotEncoder()`, it just output wrong result with some warnings\n\n``` python\nIn[14]\nmapper1 = DataFrameMapper([('pet',[LabelEncoder(),OneHotEncoder()])],sparse=False)\nmapper1.fit_transform(testdata)\nOut[14]:\narray([[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.]])\n```\n\nThe problem lies on `OneHotEncoder`. Seems that it is not compatible with `DataFrameMapper`, also not compatible with `sklearn.pipeline.Pipeline`\n\n---\n## updates:\n\nI found this bug the same as https://github.com/paulgb/sklearn-pandas/issues/60 . The reason is that in scikit-learn 0.17, 1-D array input to OneHotEncoder is deprecated. `LabelEncoder()` output 1-D array, thus things go wrong when cascading with `OneHotEncoder()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/60", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/60/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/60/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/60", "id": 168535674, "node_id": "MDU6SXNzdWUxNjg1MzU2NzQ=", "number": 60, "title": "FunctionTransformer gets as input a numpy array rather than a series", "user": {"login": "hshteingart", "id": 17550021, "node_id": "MDQ6VXNlcjE3NTUwMDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/17550021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hshteingart", "html_url": "https://github.com/hshteingart", "followers_url": "https://api.github.com/users/hshteingart/followers", "following_url": "https://api.github.com/users/hshteingart/following{/other_user}", "gists_url": "https://api.github.com/users/hshteingart/gists{/gist_id}", "starred_url": "https://api.github.com/users/hshteingart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hshteingart/subscriptions", "organizations_url": "https://api.github.com/users/hshteingart/orgs", "repos_url": "https://api.github.com/users/hshteingart/repos", "events_url": "https://api.github.com/users/hshteingart/events{/privacy}", "received_events_url": "https://api.github.com/users/hshteingart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943698, "node_id": "MDU6TGFiZWwzNjk0MzY5OA==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-07-31T20:10:13Z", "updated_at": "2017-06-24T16:59:13Z", "closed_at": "2017-06-24T16:59:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "If one want to use Series function on the input, one needs to transform the input back to pandas Series rather than just receiving it as pandas Series.\nFor example, say you would like a OneHotEncoding on the hour of a timestamp column. One would now need to do the following:\n\n```\n('timestamp', [\n            FunctionTransformer(lambda x: pd.to_datetime(pd.Series(x)).apply(lambda t: t.hour).reshape(-1, 1),\n                                validate=False), OneHotEncoder()])\n```\n\nWhich is cumbursome.\nIf the dtype and Series object would have been kept it would be much shorter. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/58", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/58/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/58/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/58", "id": 164449726, "node_id": "MDU6SXNzdWUxNjQ0NDk3MjY=", "number": 58, "title": "DataFrameMapper fit doesn't take y argument", "user": {"login": "vzaretsk", "id": 8801060, "node_id": "MDQ6VXNlcjg4MDEwNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8801060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vzaretsk", "html_url": "https://github.com/vzaretsk", "followers_url": "https://api.github.com/users/vzaretsk/followers", "following_url": "https://api.github.com/users/vzaretsk/following{/other_user}", "gists_url": "https://api.github.com/users/vzaretsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/vzaretsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vzaretsk/subscriptions", "organizations_url": "https://api.github.com/users/vzaretsk/orgs", "repos_url": "https://api.github.com/users/vzaretsk/repos", "events_url": "https://api.github.com/users/vzaretsk/events{/privacy}", "received_events_url": "https://api.github.com/users/vzaretsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-08T02:55:31Z", "updated_at": "2016-08-03T13:54:54Z", "closed_at": "2016-08-03T13:54:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently DataFrameMapper fit method doesn't take a y argument. I have a use case that needs this (I'm doing supervised dimensionality reduction) and made a small modification to enable this functionality. If there is interest, I can submit a pull request with these changes. Additionally, it seems that this would eliminate the need for a custom Pipeline class.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/55", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/55/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/55/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/55", "id": 139762900, "node_id": "MDU6SXNzdWUxMzk3NjI5MDA=", "number": 55, "title": "Is there a way to passtrough columns without explicitely marking them?", "user": {"login": "lizsz", "id": 16842016, "node_id": "MDQ6VXNlcjE2ODQyMDE2", "avatar_url": "https://avatars0.githubusercontent.com/u/16842016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lizsz", "html_url": "https://github.com/lizsz", "followers_url": "https://api.github.com/users/lizsz/followers", "following_url": "https://api.github.com/users/lizsz/following{/other_user}", "gists_url": "https://api.github.com/users/lizsz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lizsz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lizsz/subscriptions", "organizations_url": "https://api.github.com/users/lizsz/orgs", "repos_url": "https://api.github.com/users/lizsz/repos", "events_url": "https://api.github.com/users/lizsz/events{/privacy}", "received_events_url": "https://api.github.com/users/lizsz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-10T02:20:06Z", "updated_at": "2016-04-03T15:00:14Z", "closed_at": "2016-04-03T15:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I.e. let's say the data frame has 200 columns (or 2000 :) ) \nI need to transform a small fraction of these, let's say 20 or 50. I would need to add all columns to a mapper and mark them as none for them to stay in a game. Whereas I think the opposite behavior is more intuitive and more in line with a general philosophy of scikit... (and are more useful in my opinion). In this scenario all columns by default are sent to the output. Those that have transformers are transformed. Those that marked as None (or anything else)-  are dropped. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/53", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/53/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/53/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/53", "id": 127015945, "node_id": "MDU6SXNzdWUxMjcwMTU5NDU=", "number": 53, "title": "CalibrateClassifierCV doesn't work with DataFrameMapper in a pipeline", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-16T10:42:41Z", "updated_at": "2017-08-20T11:22:18Z", "closed_at": "2017-08-20T11:22:18Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "From https://github.com/paulgb/sklearn-pandas/issues/11: Unfortunately the function CalibrateClassifierCV introduced in sklearn 0.16 does not seem work with DataFrameMappers in a pipeline (this is still the case in sklearn 0.17).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/50", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/50/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/50/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/50", "id": 125668701, "node_id": "MDU6SXNzdWUxMjU2Njg3MDE=", "number": 50, "title": "Support for Multiple Transformers 1-d then 2-d", "user": {"login": "bmweiner", "id": 10787790, "node_id": "MDQ6VXNlcjEwNzg3Nzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10787790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmweiner", "html_url": "https://github.com/bmweiner", "followers_url": "https://api.github.com/users/bmweiner/followers", "following_url": "https://api.github.com/users/bmweiner/following{/other_user}", "gists_url": "https://api.github.com/users/bmweiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmweiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmweiner/subscriptions", "organizations_url": "https://api.github.com/users/bmweiner/orgs", "repos_url": "https://api.github.com/users/bmweiner/repos", "events_url": "https://api.github.com/users/bmweiner/events{/privacy}", "received_events_url": "https://api.github.com/users/bmweiner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943700, "node_id": "MDU6TGFiZWwzNjk0MzcwMA==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-08T18:44:16Z", "updated_at": "2016-01-09T19:05:02Z", "closed_at": "2016-01-09T18:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>>df = pd.DataFrame(['red', 'white','blue','red','blue'], columns=['color'])\n>>>mapper = DataFrameMapper([('color', [preprocessing.LabelEncoder(),\n                                        sklearn.preprocessing.OneHotEncoder()])])\n>>>mapper.fit_transform(df)\narray([[ 1.,  1.,  1.,  1.,  1.]])\n```\n\nvs.\n\n```\n>>>le = sklearn.preprocessing.LabelEncoder()\n>>>enc_color = le.fit_transform(df['color'])\n>>>enc = sklearn.preprocessing.OneHotEncoder()\n>>>enc.fit_transform(enc_color.reshape(-1,1)).toarray()\narray([[ 0.,  1.,  0.],\n       [ 0.,  0.,  1.],\n       [ 1.,  0.,  0.],\n       [ 0.,  1.,  0.],\n       [ 1.,  0.,  0.]])\n```\n\nI saw the issue documenting a similar challenge with [sklearn pipelines](https://github.com/scikit-learn/scikit-learn/issues/3956). Is there a way to do this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/49", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/49/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/49/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/49", "id": 124751749, "node_id": "MDU6SXNzdWUxMjQ3NTE3NDk=", "number": 49, "title": "Help :(  Fail to import sklearn-pandas @Windows 7", "user": {"login": "DataTerminatorX", "id": 12929606, "node_id": "MDQ6VXNlcjEyOTI5NjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/12929606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DataTerminatorX", "html_url": "https://github.com/DataTerminatorX", "followers_url": "https://api.github.com/users/DataTerminatorX/followers", "following_url": "https://api.github.com/users/DataTerminatorX/following{/other_user}", "gists_url": "https://api.github.com/users/DataTerminatorX/gists{/gist_id}", "starred_url": "https://api.github.com/users/DataTerminatorX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DataTerminatorX/subscriptions", "organizations_url": "https://api.github.com/users/DataTerminatorX/orgs", "repos_url": "https://api.github.com/users/DataTerminatorX/repos", "events_url": "https://api.github.com/users/DataTerminatorX/events{/privacy}", "received_events_url": "https://api.github.com/users/DataTerminatorX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2016-01-04T12:30:53Z", "updated_at": "2016-03-06T13:14:58Z", "closed_at": "2016-03-06T13:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've already successfully installed sklearn-pandas using \"pip install scikitlearn-pandas\" on windows's command line.\n\nHowever, when I try  \"import sklearn-pandas\", it reports error information as \" Cannot import name _name_estimators\". I've repeated uninstall and install many times but didn't work.\n\nThe whole error information is as below:\n\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\Python27\\lib\\site-packages\\sklearn_pandas__init__.py\", line 3, in <m\nodule>\n    from .dataframe_mapper import DataFrameMapper  # NOQA\n  File \"C:\\Python27\\lib\\site-packages\\sklearn_pandas\\dataframe_mapper.py\", line\n8, in <module>\n    from .pipeline import make_transformer_pipeline\n  File \"C:\\Python27\\lib\\site-packages\\sklearn_pandas\\pipeline.py\", line 2, in <m\nodule>\n    from sklearn.pipeline import _name_estimators, Pipeline\nImportError: cannot import name _name_estimators\n\nBTW, I've already pre-installed scikit-learn and pandas.\n\nMany thx to anyone who could give me a hand\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/47", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/47/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/47/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/47", "id": 120644342, "node_id": "MDU6SXNzdWUxMjA2NDQzNDI=", "number": 47, "title": "GitHub and PyPI releases out of sync.", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-06T16:37:09Z", "updated_at": "2015-12-06T16:52:41Z", "closed_at": "2015-12-06T16:52:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, the releases on GitHub and PyPI are out of sync - this could be misleading - could you please sync them (or remove the GH releases)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/46", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/46/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/46/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/46", "id": 120572449, "node_id": "MDU6SXNzdWUxMjA1NzI0NDk=", "number": 46, "title": "List of transformers doesn't support a last transformer that doesn't accept two arguments", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943696, "node_id": "MDU6TGFiZWwzNjk0MzY5Ng==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-05T17:05:06Z", "updated_at": "2017-12-23T15:44:28Z", "closed_at": "2015-12-06T11:36:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "From `sklearn-pandas==1.0.0` we use sklearn's`Pipeline`, that expects all given transformers to accept two arguments (`x`and`y`)`fit`and`transform`. However some common transfomers used with`sklearn-pandas`like`LabelEncoder`or`LabelBinarizer`expect only a`y` argument failing during fit/transform.\r\n\r\n`sklearn-pandas` transformers should all be expected to have a `fit` and `transform` method accepting a single argument.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/45", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/45/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/45/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/45", "id": 120570403, "node_id": "MDU6SXNzdWUxMjA1NzA0MDM=", "number": 45, "title": "1.0.0 breaks compatibility with former pickled DataFrameMapper transformer list", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943696, "node_id": "MDU6TGFiZWwzNjk0MzY5Ng==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-12-05T16:37:59Z", "updated_at": "2015-12-06T11:36:58Z", "closed_at": "2015-12-06T11:36:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Previous to 1.0.0 the transformers list for each variable was stored as is, and custom code, mostly copied from sklearn's `Pipeline`, was used to apply the transformations in chain, one after another.\n\nWith 1.0.0 we switched to using the sklearn's `Pipeline` itself for the chained transformation. This pipeline is instantiated during the `DataFrameMapper` init (see https://github.com/paulgb/sklearn-pandas/blob/master/sklearn_pandas/__init__.py#L94) so it is saved when pickling the `DataFrameMapper`.\n\nHowever when one loads a <1.0.0 `DataFrameMapper` pickle with a list of transformers using the new code, the fit/transform code fails, because the `features` property holds a list, not a `Pipeline`, but the new code expects a `Pipeline`. This is expected to break for all people using the list of transformes feature and pickles.\n# Possible solutions\n1. Come back to storing the list of transformers in the `features` attribute instead of a `Pipeline`, and build the `Pipeline` _every time_ the user uses `fit` or `transform`. Note that this will be compatible with newly pickled `DataFrameMapper`s as well, since they will have a `Pipeline` as transformer when unplickled. This has the benefit of always pickling basic Python objects and therefore not having to watch out for incompatible changes in the future. However, it adds a small overhead.\n2. Add a compatibility shim for pickles created before `sklearn_pandas==1.0.0` in the `DataFrameMapper.__setstate__` method, that converts any list of transformers to a `Pipeline`. I consider this more elegant, since it tries to solve the problem directly where it is, and doesn't add any overhead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/43", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/43/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/43/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/43", "id": 115741836, "node_id": "MDU6SXNzdWUxMTU3NDE4MzY=", "number": 43, "title": "Test if we can use sklearn Pipeline instead of copying its code.", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943698, "node_id": "MDU6TGFiZWwzNjk0MzY5OA==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-08T16:18:10Z", "updated_at": "2015-12-08T14:35:11Z", "closed_at": "2015-12-06T11:46:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "For the multiple transformers as a list feature. See https://github.com/paulgb/sklearn-pandas/issues/42\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/42", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/42/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/42/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/42", "id": 114496232, "node_id": "MDU6SXNzdWUxMTQ0OTYyMzI=", "number": 42, "title": "AttributeError: 'list' object has no attribute 'fit'", "user": {"login": "zacstewart", "id": 435548, "node_id": "MDQ6VXNlcjQzNTU0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/435548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacstewart", "html_url": "https://github.com/zacstewart", "followers_url": "https://api.github.com/users/zacstewart/followers", "following_url": "https://api.github.com/users/zacstewart/following{/other_user}", "gists_url": "https://api.github.com/users/zacstewart/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacstewart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacstewart/subscriptions", "organizations_url": "https://api.github.com/users/zacstewart/orgs", "repos_url": "https://api.github.com/users/zacstewart/repos", "events_url": "https://api.github.com/users/zacstewart/events{/privacy}", "received_events_url": "https://api.github.com/users/zacstewart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-01T22:08:06Z", "updated_at": "2015-11-28T09:35:06Z", "closed_at": "2015-11-28T09:35:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to transform one column with multiple transformers and I'm getting this error. My pipeline is as follows:\n\n``` python\nmodel = Pipeline([\n    ('mapper', DataFrameMapper([\n        (['NAYear', 'NAHours'], None),\n        (['Year'], [preprocessing.Imputer(), preprocessing.PolynomialFeatures()]),\n        (['HoursMeter'], preprocessing.Imputer()),\n        (['Manufacturer'], preprocessing.LabelBinarizer())\n    ])),\n    ('regression', linear_model.LinearRegression())\n])\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/40", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/40/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/40/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/40", "id": 109932023, "node_id": "MDU6SXNzdWUxMDk5MzIwMjM=", "number": 40, "title": "Support for xray?", "user": {"login": "naught101", "id": 167164, "node_id": "MDQ6VXNlcjE2NzE2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naught101", "html_url": "https://github.com/naught101", "followers_url": "https://api.github.com/users/naught101/followers", "following_url": "https://api.github.com/users/naught101/following{/other_user}", "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}", "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naught101/subscriptions", "organizations_url": "https://api.github.com/users/naught101/orgs", "repos_url": "https://api.github.com/users/naught101/repos", "events_url": "https://api.github.com/users/naught101/events{/privacy}", "received_events_url": "https://api.github.com/users/naught101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-06T04:06:07Z", "updated_at": "2015-11-08T00:18:34Z", "closed_at": "2015-11-08T00:18:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Xray](https://github.com/xray/xray/) does basically a similar job to pandas, but in arbitrary dimensions. It would be great to have something like sklearn-pandas for xray as well.\n\nxray objects already have a `.to_dataframe()` method, which could perhaps be used to do this, but I'm not sure about how it would work translating the results back into n-dimensions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/39", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/39/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/39/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/39", "id": 109725594, "node_id": "MDU6SXNzdWUxMDk3MjU1OTQ=", "number": 39, "title": "AttributeError: 'list' object has no attribute 'fit'", "user": {"login": "DmitriR", "id": 13791275, "node_id": "MDQ6VXNlcjEzNzkxMjc1", "avatar_url": "https://avatars3.githubusercontent.com/u/13791275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmitriR", "html_url": "https://github.com/DmitriR", "followers_url": "https://api.github.com/users/DmitriR/followers", "following_url": "https://api.github.com/users/DmitriR/following{/other_user}", "gists_url": "https://api.github.com/users/DmitriR/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmitriR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmitriR/subscriptions", "organizations_url": "https://api.github.com/users/DmitriR/orgs", "repos_url": "https://api.github.com/users/DmitriR/repos", "events_url": "https://api.github.com/users/DmitriR/events{/privacy}", "received_events_url": "https://api.github.com/users/DmitriR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-05T03:34:55Z", "updated_at": "2015-11-07T18:48:33Z", "closed_at": "2015-10-07T04:01:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code straight from the docs page. Examples until that point work fine.\n\n```\nprint(sys.version)\nprint('sklearn_pandas', sklearn_pandas.__version__)\n\nmapper3 = DataFrameMapper([\n     (['age'], [sklearn.preprocessing.Imputer(),\n                sklearn.preprocessing.StandardScaler()])])\ndata_3 = pd.DataFrame({'age': [1, np.nan, 3]})\nmapper3.fit_transform(data_3)\n```\n\ngives me \n\n```\n3.4.3 |Anaconda 2.3.0 (x86_64)| (default, Mar  6 2015, 12:07:41) \n[GCC 4.2.1 (Apple Inc. build 5577)]\nsklearn_pandas 0.0.10\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-97-068003ccd118> in <module>()\n      6                 sklearn.preprocessing.StandardScaler()])])\n      7 data_3 = pd.DataFrame({'age': [1, 2, 3]})\n----> 8 mapper3.fit_transform(data_3)\n\n/anaconda/anaconda3/anaconda/lib/python3.4/site-packages/sklearn/base.py in fit_transform(self, X, y, **fit_params)\n    431         if y is None:\n    432             # fit method of arity 1 (unsupervised transformation)\n--> 433             return self.fit(X, **fit_params).transform(X)\n    434         else:\n    435             # fit method of arity 2 (supervised transformation)\n\n/anaconda/anaconda3/anaconda/lib/python3.4/site-packages/sklearn_pandas/__init__.py in fit(self, X, y)\n    111         for columns, transformer in self.features:\n    112             if transformer is not None:\n--> 113                 transformer.fit(self._get_col_subset(X, columns))\n    114         return self\n    115 \n\nAttributeError: 'list' object has no attribute 'fit'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/38", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/38/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/38/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/38", "id": 108828969, "node_id": "MDU6SXNzdWUxMDg4Mjg5Njk=", "number": 38, "title": "Multiple transformers broken", "user": {"login": "sebastianmarkow", "id": 4513633, "node_id": "MDQ6VXNlcjQ1MTM2MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4513633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastianmarkow", "html_url": "https://github.com/sebastianmarkow", "followers_url": "https://api.github.com/users/sebastianmarkow/followers", "following_url": "https://api.github.com/users/sebastianmarkow/following{/other_user}", "gists_url": "https://api.github.com/users/sebastianmarkow/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastianmarkow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastianmarkow/subscriptions", "organizations_url": "https://api.github.com/users/sebastianmarkow/orgs", "repos_url": "https://api.github.com/users/sebastianmarkow/repos", "events_url": "https://api.github.com/users/sebastianmarkow/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastianmarkow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-29T09:16:42Z", "updated_at": "2015-11-07T18:49:42Z", "closed_at": "2015-10-01T23:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Multiple transformers seems to be broken (for me at least).\n\nSample from the documentation:\n\n``` python\nimport sklearn as sk\nimport pandas as pd\nimport numpy as np\nfrom sklearn_pandas import DataFrameMapper\n\nmapper3 = DataFrameMapper([\n    (['age'], [sk.preprocessing.Imputer(),\n               sk.preprocessing.StandardScaler()])])\ndata_3 = pd.DataFrame({'age': [1, np.nan, 3]})\nmapper3.fit_transform(data_3)\n```\n\nIssue:\n\n```\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-8-b8b93bde93f1> in <module>()\n      8                sk.preprocessing.StandardScaler()])])\n      9 data_3 = pd.DataFrame({'age': [1, np.nan, 3]})\n---> 10 mapper3.fit_transform(data_3)\n\n/usr/local/lib/python2.7/site-packages/sklearn/base.pyc in fit_transform(self, X, y, **fit_params)\n    431         if y is None:\n    432             # fit method of arity 1 (unsupervised transformation)\n--> 433             return self.fit(X, **fit_params).transform(X)\n    434         else:\n    435             # fit method of arity 2 (supervised transformation)\n\n/usr/local/lib/python2.7/site-packages/sklearn_pandas/__init__.pyc in fit(self, X, y)\n    111         for columns, transformer in self.features:\n    112             if transformer is not None:\n--> 113                 transformer.fit(self._get_col_subset(X, columns))\n    114         return self\n    115 \n\nAttributeError: 'list' object has no attribute 'fit'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/34", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/34/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/34/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/34", "id": 100118388, "node_id": "MDU6SXNzdWUxMDAxMTgzODg=", "number": 34, "title": "Sparse vs. Dense Encoding", "user": {"login": "BigCrunsh", "id": 1507900, "node_id": "MDQ6VXNlcjE1MDc5MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1507900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigCrunsh", "html_url": "https://github.com/BigCrunsh", "followers_url": "https://api.github.com/users/BigCrunsh/followers", "following_url": "https://api.github.com/users/BigCrunsh/following{/other_user}", "gists_url": "https://api.github.com/users/BigCrunsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigCrunsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigCrunsh/subscriptions", "organizations_url": "https://api.github.com/users/BigCrunsh/orgs", "repos_url": "https://api.github.com/users/BigCrunsh/repos", "events_url": "https://api.github.com/users/BigCrunsh/events{/privacy}", "received_events_url": "https://api.github.com/users/BigCrunsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-10T17:10:13Z", "updated_at": "2015-11-07T19:53:03Z", "closed_at": "2015-11-07T19:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run a pipeline to extract text features as follows.\n\n``` python\npipeline = Pipeline([\n    ('text', DataFrameMapper([\n        ('description', CountVectorizer())\n    ]))\n])\n```\n\nThis is working fine and is nicer than the approach described in [1]:\n\n``` python\npipeline = Pipeline([\n    ('text', Pipeline([\n        ('selector', ItemSelector(key='description')),\n        ('bow', CountVectorizer()),\n    ]))\n])\n```\n\nHowever, the former results in a dense encoding (which is intractable for text). Are you planning to change that?\n\n[1] http://scikit-learn.org/stable/auto_examples/hetero_feature_union.html\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/30", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/30/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/30/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/30", "id": 99913546, "node_id": "MDU6SXNzdWU5OTkxMzU0Ng==", "number": 30, "title": "Selecting unexistent columns in the dataframe should raise an exception", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-09T16:56:12Z", "updated_at": "2015-11-07T19:19:05Z", "closed_at": "2015-11-07T19:19:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "import pandas as pd\nfrom sklearn_pandas import DataFrameMapper\n\n```\n>>> df = pd.DataFrame({'a': [1, 2]})\n>>> mapper = DataFrameMapper(None)\n>>> mapper._get_col_subset(df, ['b'])\narray([[ nan],\n       [ nan]])\n```\n\nI would expect a KeyError. Explicit is better than Implicit. :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/27", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/27/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/27/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/27", "id": 91495865, "node_id": "MDU6SXNzdWU5MTQ5NTg2NQ==", "number": 27, "title": "calling best_estimator_ returns 'AttributeError: 'NoneType' object has no attribute 'best_estimator_'", "user": {"login": "alpalalpal", "id": 8773964, "node_id": "MDQ6VXNlcjg3NzM5NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8773964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alpalalpal", "html_url": "https://github.com/alpalalpal", "followers_url": "https://api.github.com/users/alpalalpal/followers", "following_url": "https://api.github.com/users/alpalalpal/following{/other_user}", "gists_url": "https://api.github.com/users/alpalalpal/gists{/gist_id}", "starred_url": "https://api.github.com/users/alpalalpal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alpalalpal/subscriptions", "organizations_url": "https://api.github.com/users/alpalalpal/orgs", "repos_url": "https://api.github.com/users/alpalalpal/repos", "events_url": "https://api.github.com/users/alpalalpal/events{/privacy}", "received_events_url": "https://api.github.com/users/alpalalpal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-27T17:48:52Z", "updated_at": "2015-11-08T16:01:24Z", "closed_at": "2015-11-08T16:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code. I want to return the best_estimator_\n\n```\nimport pandas\nimport numpy\nfrom sklearn_pandas import DataFrameMapper\nfrom sklearn_pandas import cross_val_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.grid_search import GridSearchCV\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.ensemble import RandomForestClassifier\nimport sklearn_pandas\nfrom sklearn.preprocessing import MinMaxScaler\n\ndf = pandas.DataFrame({\"Letter\":[\"a\",\"b\",\"c\",\"d\",\"a\",\"b\",\"c\",\"d\",\"a\",\"b\",\"c\",\"d\",\"a\",\"b\",\"c\",\"d\"],\n                                        \"Label\":[\"G\",\"G\",\"B\",\"B\",\"G\",\"G\",\"B\",\"B\",\"G\",\"G\",\"B\",\"B\",\"G\",\"G\",\"B\",\"B\"]})\n\nx_train = df\ny_train = x_train.pop(\"Label\")    \n\nmapper = DataFrameMapper([\n    (\"Letter\", LabelBinarizer()),\n    ])\n\npipe = Pipeline([\n    (\"mapper\", mapper),\n    (\"classifier\", RandomForestClassifier()),\n    ])\n\nparam_grid = {\"classifier__n_estimators\":[2,3,4]}\nmodel_grid = sklearn_pandas.GridSearchCV(pipe, param_grid, scoring=\"accuracy\").fit(x_train, y_train)\nmodel_grid.best_estimator_\n--------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-44-9f8cc8a24ac6> in <module>()\n     29 model_grid = sklearn_pandas.GridSearchCV(pipe, param_grid, scoring=\"accuracy\").fit(x_train, y_train)\n     30 \n---> 31 model_grid.best_estimator_\n\nAttributeError: 'NoneType' object has no attribute 'best_estimator_'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/26", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/26/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/26/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/26", "id": 88744951, "node_id": "MDU6SXNzdWU4ODc0NDk1MQ==", "number": 26, "title": "cross_val_score passes a list rather than a DataFrame to Estimator", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-16T14:34:44Z", "updated_at": "2015-11-08T16:06:51Z", "closed_at": "2015-11-08T16:06:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs say:\n\n> sklearn-pandas provides a wrapper on sklearn's cross_val_score function which passes a pandas DataFrame to the estimator rather than a numpy array\n\nbut I see:\n\n``` python\ntest = pd.DataFrame({'a':[1,2,3]})\nclass Model(BaseEstimator):\n    def fit(self, x):\n        print type(x)\n    def score(self, x):\n        return 1\n\u200b\n_ = cross_val_score(Model(), test)\n```\n\n``` python\n<type 'list'>\n<type 'list'>\n<type 'list'>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/23", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/23/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/23/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/23", "id": 66324362, "node_id": "MDU6SXNzdWU2NjMyNDM2Mg==", "number": 23, "title": "PyPi package is out-of-date", "user": {"login": "helger", "id": 648332, "node_id": "MDQ6VXNlcjY0ODMzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/648332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helger", "html_url": "https://github.com/helger", "followers_url": "https://api.github.com/users/helger/followers", "following_url": "https://api.github.com/users/helger/following{/other_user}", "gists_url": "https://api.github.com/users/helger/gists{/gist_id}", "starred_url": "https://api.github.com/users/helger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helger/subscriptions", "organizations_url": "https://api.github.com/users/helger/orgs", "repos_url": "https://api.github.com/users/helger/repos", "events_url": "https://api.github.com/users/helger/events{/privacy}", "received_events_url": "https://api.github.com/users/helger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-04T14:13:00Z", "updated_at": "2015-05-30T09:21:57Z", "closed_at": "2015-05-30T06:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is the correct place for this issue. However, the `sklearn-pandas` package on [PyPi](https://pypi.python.org/pypi/sklearn-pandas) is out-of-date and contains some bugs that has since been fixed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/21", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/21/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/21/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/21", "id": 59936032, "node_id": "MDU6SXNzdWU1OTkzNjAzMg==", "number": 21, "title": "Transforming a single column should return a numpy array, not Series", "user": {"login": "dukebody", "id": 41953, "node_id": "MDQ6VXNlcjQxOTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/41953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dukebody", "html_url": "https://github.com/dukebody", "followers_url": "https://api.github.com/users/dukebody/followers", "following_url": "https://api.github.com/users/dukebody/following{/other_user}", "gists_url": "https://api.github.com/users/dukebody/gists{/gist_id}", "starred_url": "https://api.github.com/users/dukebody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dukebody/subscriptions", "organizations_url": "https://api.github.com/users/dukebody/orgs", "repos_url": "https://api.github.com/users/dukebody/repos", "events_url": "https://api.github.com/users/dukebody/events{/privacy}", "received_events_url": "https://api.github.com/users/dukebody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-05T10:58:34Z", "updated_at": "2015-08-10T05:44:33Z", "closed_at": "2015-08-10T05:44:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`DataFrameMapper.get_col_subset(df, 'colname')` returns a Pandas Series. According to the docstring it should return a numpy array.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/20", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/20/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/20/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/20", "id": 57397558, "node_id": "MDU6SXNzdWU1NzM5NzU1OA==", "number": 20, "title": "Does this work with Imputer?", "user": {"login": "caterpillars", "id": 10762281, "node_id": "MDQ6VXNlcjEwNzYyMjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10762281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caterpillars", "html_url": "https://github.com/caterpillars", "followers_url": "https://api.github.com/users/caterpillars/followers", "following_url": "https://api.github.com/users/caterpillars/following{/other_user}", "gists_url": "https://api.github.com/users/caterpillars/gists{/gist_id}", "starred_url": "https://api.github.com/users/caterpillars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caterpillars/subscriptions", "organizations_url": "https://api.github.com/users/caterpillars/orgs", "repos_url": "https://api.github.com/users/caterpillars/repos", "events_url": "https://api.github.com/users/caterpillars/events{/privacy}", "received_events_url": "https://api.github.com/users/caterpillars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-12T00:03:18Z", "updated_at": "2015-11-02T09:47:51Z", "closed_at": "2015-11-02T09:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since Imputer act on all columns, I think. Is the solution to use a pipeline?\n\nThanks,\n\nHongli\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/19", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/19/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/19/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/19", "id": 57395056, "node_id": "MDU6SXNzdWU1NzM5NTA1Ng==", "number": 19, "title": "What should we do for columns that don't need any transformation, but need to be kept?", "user": {"login": "caterpillars", "id": 10762281, "node_id": "MDQ6VXNlcjEwNzYyMjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10762281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caterpillars", "html_url": "https://github.com/caterpillars", "followers_url": "https://api.github.com/users/caterpillars/followers", "following_url": "https://api.github.com/users/caterpillars/following{/other_user}", "gists_url": "https://api.github.com/users/caterpillars/gists{/gist_id}", "starred_url": "https://api.github.com/users/caterpillars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caterpillars/subscriptions", "organizations_url": "https://api.github.com/users/caterpillars/orgs", "repos_url": "https://api.github.com/users/caterpillars/repos", "events_url": "https://api.github.com/users/caterpillars/events{/privacy}", "received_events_url": "https://api.github.com/users/caterpillars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-11T23:37:08Z", "updated_at": "2015-08-10T06:25:40Z", "closed_at": "2015-08-10T06:25:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am new to this package. I think it is very useful. But I have a bunch of columns where I don't need to do any transformation. But it seems like if we don't keep them into the list, it will be dropped after transformation. In this case, we should we do? separate the columns into two groups, one to transform, one not to, and merge them afterwards? If so, do we know for sure the order is preserved?\n\nThanks,\n\nHongli\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/17", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/17/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/17/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/17", "id": 50091513, "node_id": "MDU6SXNzdWU1MDA5MTUxMw==", "number": 17, "title": "There is no way to use multiple pre-processors in the same column", "user": {"login": "perone", "id": 412328, "node_id": "MDQ6VXNlcjQxMjMyOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/412328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perone", "html_url": "https://github.com/perone", "followers_url": "https://api.github.com/users/perone/followers", "following_url": "https://api.github.com/users/perone/following{/other_user}", "gists_url": "https://api.github.com/users/perone/gists{/gist_id}", "starred_url": "https://api.github.com/users/perone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perone/subscriptions", "organizations_url": "https://api.github.com/users/perone/orgs", "repos_url": "https://api.github.com/users/perone/repos", "events_url": "https://api.github.com/users/perone/events{/privacy}", "received_events_url": "https://api.github.com/users/perone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-11-25T22:14:48Z", "updated_at": "2016-05-10T06:22:08Z", "closed_at": "2015-08-10T06:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if I could do this:\n\n```\nmapper = DataFrameMapper([\n    ('COLUMN', [sklearn.preprocessing.LabelEncoder(), sklearn.preprocessing.OneHotEncoder()]),\n])\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/14", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/14/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/14/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/14", "id": 41544674, "node_id": "MDU6SXNzdWU0MTU0NDY3NA==", "number": 14, "title": "change basestring to str", "user": {"login": "nmyk", "id": 2432497, "node_id": "MDQ6VXNlcjI0MzI0OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2432497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmyk", "html_url": "https://github.com/nmyk", "followers_url": "https://api.github.com/users/nmyk/followers", "following_url": "https://api.github.com/users/nmyk/following{/other_user}", "gists_url": "https://api.github.com/users/nmyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmyk/subscriptions", "organizations_url": "https://api.github.com/users/nmyk/orgs", "repos_url": "https://api.github.com/users/nmyk/repos", "events_url": "https://api.github.com/users/nmyk/events{/privacy}", "received_events_url": "https://api.github.com/users/nmyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-29T22:19:41Z", "updated_at": "2015-08-10T05:38:03Z", "closed_at": "2015-08-10T05:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "in `__init__.py`, line 82\n\nplease\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/13", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/13/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/13/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/13", "id": 40138495, "node_id": "MDU6SXNzdWU0MDEzODQ5NQ==", "number": 13, "title": "Track which DataFrame Column corresponds to which Array Column(s) after Transform", "user": {"login": "sveitser", "id": 1040871, "node_id": "MDQ6VXNlcjEwNDA4NzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1040871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sveitser", "html_url": "https://github.com/sveitser", "followers_url": "https://api.github.com/users/sveitser/followers", "following_url": "https://api.github.com/users/sveitser/following{/other_user}", "gists_url": "https://api.github.com/users/sveitser/gists{/gist_id}", "starred_url": "https://api.github.com/users/sveitser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sveitser/subscriptions", "organizations_url": "https://api.github.com/users/sveitser/orgs", "repos_url": "https://api.github.com/users/sveitser/repos", "events_url": "https://api.github.com/users/sveitser/events{/privacy}", "received_events_url": "https://api.github.com/users/sveitser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943698, "node_id": "MDU6TGFiZWwzNjk0MzY5OA==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-13T09:46:39Z", "updated_at": "2017-04-09T15:08:19Z", "closed_at": "2017-04-09T15:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it would be useful for feature selection if it was possible to keep track of which DataFrame columns were mapped to which array columns during the transformation so that one could use for instance the `feature_importances_` of ensemble methods in sklearn.\n\nIs there a straight-forward way to do this right now? I looked into it a bit but didn't find a common way to get the necessary information during fitting of the sklearn transforms. Therefore the best way I can currently think of is to do the inspection separately for each sklearn transform, i. e.  use `self.feature_names_` for `DictVectorizer`, `self.classes_` for `LabelBinarizer`, etc. \n\nI'm thinking there must be a better way to do this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/12", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/12/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/12/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/12", "id": 37779616, "node_id": "MDU6SXNzdWUzNzc3OTYxNg==", "number": 12, "title": "TypeError", "user": {"login": "paulgb", "id": 46173, "node_id": "MDQ6VXNlcjQ2MTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/46173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulgb", "html_url": "https://github.com/paulgb", "followers_url": "https://api.github.com/users/paulgb/followers", "following_url": "https://api.github.com/users/paulgb/following{/other_user}", "gists_url": "https://api.github.com/users/paulgb/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulgb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulgb/subscriptions", "organizations_url": "https://api.github.com/users/paulgb/orgs", "repos_url": "https://api.github.com/users/paulgb/repos", "events_url": "https://api.github.com/users/paulgb/events{/privacy}", "received_events_url": "https://api.github.com/users/paulgb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-14T11:49:04Z", "updated_at": "2015-11-08T14:09:32Z", "closed_at": "2015-11-08T14:09:32Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "http://stackoverflow.com/questions/24583249/typeerror-fit-takes-exactly-3-arguments-2-given-with-sklearn-and-sklearn-pa#\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/11", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/11/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/11/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/11", "id": 33178115, "node_id": "MDU6SXNzdWUzMzE3ODExNQ==", "number": 11, "title": "GridSearchCV extremely slow with DataFrameMapper?", "user": {"login": "andytwigg", "id": 2485685, "node_id": "MDQ6VXNlcjI0ODU2ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2485685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andytwigg", "html_url": "https://github.com/andytwigg", "followers_url": "https://api.github.com/users/andytwigg/followers", "following_url": "https://api.github.com/users/andytwigg/following{/other_user}", "gists_url": "https://api.github.com/users/andytwigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/andytwigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andytwigg/subscriptions", "organizations_url": "https://api.github.com/users/andytwigg/orgs", "repos_url": "https://api.github.com/users/andytwigg/repos", "events_url": "https://api.github.com/users/andytwigg/events{/privacy}", "received_events_url": "https://api.github.com/users/andytwigg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 36943698, "node_id": "MDU6TGFiZWwzNjk0MzY5OA==", "url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-05-09T14:44:05Z", "updated_at": "2016-03-06T12:32:27Z", "closed_at": "2016-03-06T12:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a dataframe, not particularly large (~3000 rows, 250 cols) on which I do the following:\n\n``` !python\ndf = ...\nobj_cols = [(c, LabelBinarizer()) for c in X.columns if X.dtypes[c]=='O']\nnum_cols = [(c, StandardScaler()) for c in X.columns if X.dtypes[c]<>'O']\nparam_grid = {\n  'clf__loss': ['hinge', 'log', 'modified_huber'],\n  'clf__penalty': ('l1', 'l2', 'elasticnet'),\n}\n\npipeline = sklearn.pipeline.Pipeline([ \n  ('mapper', sklearn_pandas.DataFrameMapper(obj_cols+num_cols)),\n  ('clf', SGDClassifier()),\n])\n\ngrid_search = sklearn_pandas.GridSearchCV(pipeline, param_grid)\ngrid_search.fit(df[data], df[target]) # this is REALLY slow\n```\n\nFrom a quick glance, it seems to spend all its time indexing dataframe objects. The following 2 pieces of code are very fast:\n\n``` !python\nfor params in ParameterGrid(param_grid):\n  pipeline.set_params(params)\n  X_train, y_train, X_test, y_test = sklearn.cross_validation.train_test_split(df[data],df[target])\n  pipeline.fit(X_train, y_train)\n  score = pipeline.score(X_test, y_test)\n```\n\n```\nX=mapper.fit_transform(df[data], y)\npipeline = Pipeline([ ('clf',SGDClassifier()) ])\ngrid_search = sklearn.cross_validation.GridSearchCV(pipeline,param_grid)\ngrid_search.fit(X,y)\n```\n\nSo it must be something to do with using GridSearchCV with the DataFrameMapper.  Any ideas?\n\nMore generally, is there a better way to handle categorical variables?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/10", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/10/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/10/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/10", "id": 30410354, "node_id": "MDU6SXNzdWUzMDQxMDM1NA==", "number": 10, "title": "automatically detecting binarizer vs scalar", "user": {"login": "bbalin12", "id": 5613144, "node_id": "MDQ6VXNlcjU2MTMxNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5613144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbalin12", "html_url": "https://github.com/bbalin12", "followers_url": "https://api.github.com/users/bbalin12/followers", "following_url": "https://api.github.com/users/bbalin12/following{/other_user}", "gists_url": "https://api.github.com/users/bbalin12/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbalin12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbalin12/subscriptions", "organizations_url": "https://api.github.com/users/bbalin12/orgs", "repos_url": "https://api.github.com/users/bbalin12/repos", "events_url": "https://api.github.com/users/bbalin12/events{/privacy}", "received_events_url": "https://api.github.com/users/bbalin12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-03-28T18:16:27Z", "updated_at": "2014-06-03T22:56:29Z", "closed_at": "2014-04-04T19:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Question -- I'm dealing with a dataframe of roughly 50 columns of data, where 30 are multi-category categorical string variables.  Is there a way to automatically designate whether a column should have the binarizer applied to it (ie the 30 multi-category variables), and which should be scaled (ie the continuous numeric variables)? \n\nUsing your example above, a way that \n\n`mapper2 = DataFrameMapper([(['pet', 'salary'], sklearn.decomposition.PCA(1))])`\n\nwhich mixes string labels and numeric, to work. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/7", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/7/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/7/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/7", "id": 24437940, "node_id": "MDU6SXNzdWUyNDQzNzk0MA==", "number": 7, "title": "Anyway to keep track of DataFrame variable names after DataFrameMapper transformation?", "user": {"login": "dfd", "id": 2009725, "node_id": "MDQ6VXNlcjIwMDk3MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2009725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfd", "html_url": "https://github.com/dfd", "followers_url": "https://api.github.com/users/dfd/followers", "following_url": "https://api.github.com/users/dfd/following{/other_user}", "gists_url": "https://api.github.com/users/dfd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfd/subscriptions", "organizations_url": "https://api.github.com/users/dfd/orgs", "repos_url": "https://api.github.com/users/dfd/repos", "events_url": "https://api.github.com/users/dfd/events{/privacy}", "received_events_url": "https://api.github.com/users/dfd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-12-17T17:48:24Z", "updated_at": "2014-08-13T15:21:36Z", "closed_at": "2014-01-25T21:44:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm thinking specifically of a categorical variable to multiple binary variables.  One of the biggest pain points in the sklearn pandas ecosystem compared to R is keeping track of which numpy columns correspond with what categorical variables.  I guess what I'm picturing is perhaps a list of variable names that correspond to the output of the DataFrameMapper.  Is there an easy way to get this today?  If not, it could make for a nice enhancement.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/6", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/6/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/6/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/6", "id": 23292239, "node_id": "MDU6SXNzdWUyMzI5MjIzOQ==", "number": 6, "title": "interesting error:", "user": {"login": "mobbSF", "id": 6037050, "node_id": "MDQ6VXNlcjYwMzcwNTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6037050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mobbSF", "html_url": "https://github.com/mobbSF", "followers_url": "https://api.github.com/users/mobbSF/followers", "following_url": "https://api.github.com/users/mobbSF/following{/other_user}", "gists_url": "https://api.github.com/users/mobbSF/gists{/gist_id}", "starred_url": "https://api.github.com/users/mobbSF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mobbSF/subscriptions", "organizations_url": "https://api.github.com/users/mobbSF/orgs", "repos_url": "https://api.github.com/users/mobbSF/repos", "events_url": "https://api.github.com/users/mobbSF/events{/privacy}", "received_events_url": "https://api.github.com/users/mobbSF/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-26T03:44:11Z", "updated_at": "2013-12-04T14:47:14Z", "closed_at": "2013-12-04T14:47:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "On my attempt:\neasy_install sklearn_pandas\n\n\"The package setup script has attempted to modify files on your system\nthat are not within the EasyInstall build area, and has been aborted.\n\nThis package cannot be safely installed by EasyInstall, and may not\nsupport alternate installation locations even if you run its setup\nscript by hand.  Please inform the package's author and the EasyInstall\nmaintainers to find out if a fix or workaround is available.\"\n\nI'm on windows 7 (at least I admit it!), using Python 2.7...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/4", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/4/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/4/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/4", "id": 19862967, "node_id": "MDU6SXNzdWUxOTg2Mjk2Nw==", "number": 4, "title": "Grid search doesn't work", "user": {"login": "paulgb", "id": 46173, "node_id": "MDQ6VXNlcjQ2MTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/46173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulgb", "html_url": "https://github.com/paulgb", "followers_url": "https://api.github.com/users/paulgb/followers", "following_url": "https://api.github.com/users/paulgb/following{/other_user}", "gists_url": "https://api.github.com/users/paulgb/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulgb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulgb/subscriptions", "organizations_url": "https://api.github.com/users/paulgb/orgs", "repos_url": "https://api.github.com/users/paulgb/repos", "events_url": "https://api.github.com/users/paulgb/events{/privacy}", "received_events_url": "https://api.github.com/users/paulgb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-21T21:00:08Z", "updated_at": "2013-09-22T21:10:49Z", "closed_at": "2013-09-22T21:10:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Grid search uses the built-in `cross_val_score` method so grid search can't currently be used with `DataFrameMapper`. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/3", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/3/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/3/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/3", "id": 18087621, "node_id": "MDU6SXNzdWUxODA4NzYyMQ==", "number": 3, "title": "mapper.fit_transform() fails", "user": {"login": "dolaameng", "id": 36718, "node_id": "MDQ6VXNlcjM2NzE4", "avatar_url": "https://avatars2.githubusercontent.com/u/36718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dolaameng", "html_url": "https://github.com/dolaameng", "followers_url": "https://api.github.com/users/dolaameng/followers", "following_url": "https://api.github.com/users/dolaameng/following{/other_user}", "gists_url": "https://api.github.com/users/dolaameng/gists{/gist_id}", "starred_url": "https://api.github.com/users/dolaameng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dolaameng/subscriptions", "organizations_url": "https://api.github.com/users/dolaameng/orgs", "repos_url": "https://api.github.com/users/dolaameng/repos", "events_url": "https://api.github.com/users/dolaameng/events{/privacy}", "received_events_url": "https://api.github.com/users/dolaameng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-15T02:06:03Z", "updated_at": "2015-01-26T09:11:37Z", "closed_at": "2013-08-15T02:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was following the tutorial in the readme page. \n\n``` python\nfrom sklearn import preprocessing, decomposition, linear_model, pipeline, metrics\nimport sklearn_pandas\nimport pandas as pd\nimport numpy as np\n\nmapper = sklearn_pandas.DataFrameMapper([\n        ('pet', preprocessing.LabelBinarizer()), \n        ('children', preprocessing.StandardScaler())\n])\ndata = pd.DataFrame({'pet': ['cat', 'dog', 'dog', 'fish', 'cat', 'dog', 'cat', 'fish'],\n                     'children': [4., 6, 3, 3, 2, 3, 5, 4],\n                     'salary':   [90, 24, 44, 27, 32, 59, 36, 27]})\nmapper.fit_transform(data)\n```\n\nThe result:\n\n```\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-14-bd0a8637dc9d> in <module>()\n      1 ## we can use the mapper's fit_transform shrotcut to both fit the model\n      2 ## and see what transformed data looks like.\n----> 3 mapper.fit_transform(data)\n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/base.pyc in fit_transform(self, X, y, **fit_params)\n    406         if y is None:\n    407             # fit method of arity 1 (unsupervised transformation)\n--> 408             return self.fit(X, **fit_params).transform(X)\n    409         else:\n    410             # fit method of arity 2 (supervised transformation)\n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn_pandas/__init__.pyc in fit(self, X, y)\n     44                 transformer.fit(X[columns], y)\n     45             except TypeError:\n---> 46                 transformer.fit(X[columns])\n     47         return self\n     48 \n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/preprocessing/label.pyc in fit(self, y)\n    239             self.indicator_matrix_ = y_type == 'multilabel-indicator'\n    240 \n--> 241         self.classes_ = unique_labels(y)\n    242 \n    243         return self\n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/utils/multiclass.pyc in unique_labels(*ys)\n     96     _unique_labels = _FN_UNIQUE_LABELS.get(label_type, None)\n     97     if not _unique_labels:\n---> 98         raise ValueError(\"Unknown label type\")\n     99 \n    100     ys_labels = set(chain.from_iterable(_unique_labels(y) for y in ys))\n\nValueError: Unknown label type\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/2", "repository_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas", "labels_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/2/comments", "events_url": "https://api.github.com/repos/scikit-learn-contrib/sklearn-pandas/issues/2/events", "html_url": "https://github.com/scikit-learn-contrib/sklearn-pandas/issues/2", "id": 18003111, "node_id": "MDU6SXNzdWUxODAwMzExMQ==", "number": 2, "title": "Tests failing", "user": {"login": "tdhopper", "id": 611122, "node_id": "MDQ6VXNlcjYxMTEyMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/611122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdhopper", "html_url": "https://github.com/tdhopper", "followers_url": "https://api.github.com/users/tdhopper/followers", "following_url": "https://api.github.com/users/tdhopper/following{/other_user}", "gists_url": "https://api.github.com/users/tdhopper/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdhopper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdhopper/subscriptions", "organizations_url": "https://api.github.com/users/tdhopper/orgs", "repos_url": "https://api.github.com/users/tdhopper/repos", "events_url": "https://api.github.com/users/tdhopper/events{/privacy}", "received_events_url": "https://api.github.com/users/tdhopper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-08-13T15:34:02Z", "updated_at": "2013-09-21T22:41:56Z", "closed_at": "2013-09-21T21:03:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing a bunch of tests fail. I'm on Windows 7 with Python 2.7.5 via Anaconda 1.6.2 (64-bit).\n\n```\nC:\\Anaconda\\Lib\\site-packages>python -m doctest README.rst\n**********************************************************************\nFile \"README.rst\", line 75, in README.rst\nFailed example:\n    mapper.fit_transform(data)\nException raised:\n    Traceback (most recent call last):\n      File \"C:\\Anaconda\\lib\\doctest.py\", line 1289, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest README.rst[5]>\", line 1, in <module>\n        mapper.fit_transform(data)\n      File \"sklearn\\base.py\", line 408, in fit_transform\n        return self.fit(X, **fit_params).transform(X)\n      File \"sklearn_pandas\\__init__.py\", line 46, in fit\n        transformer.fit(X[columns])\n      File \"sklearn\\preprocessing\\label.py\", line 241, in fit\n        self.classes_ = unique_labels(y)\n      File \"sklearn\\utils\\multiclass.py\", line 98, in unique_labels\n        raise ValueError(\"Unknown label type\")\n    ValueError: Unknown label type\n**********************************************************************\nFile \"README.rst\", line 89, in README.rst\nFailed example:\n    mapper.transform({'pet': ['cat'], 'children': [5.]})\nException raised:\n    Traceback (most recent call last):\n      File \"C:\\Anaconda\\lib\\doctest.py\", line 1289, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest README.rst[6]>\", line 1, in <module>\n        mapper.transform({'pet': ['cat'], 'children': [5.]})\n      File \"sklearn_pandas\\__init__.py\", line 52, in transform\n        fea = transformer.transform(X[columns])\n      File \"sklearn\\preprocessing\\label.py\", line 261, in transform\n        self._check_fitted()\n      File \"sklearn\\preprocessing\\label.py\", line 221, in _check_fitted\n        raise ValueError(\"LabelBinarizer was not fitted yet.\")\n    ValueError: LabelBinarizer was not fitted yet.\n**********************************************************************\nFile \"README.rst\", line 103, in README.rst\nFailed example:\n    mapper2.fit_transform(data)\nExpected:\n    array([[ 47.62288153],\n           [-18.38596516],\n           [  1.62873661],\n           [-15.3709553 ],\n           [-10.36602451],\n           [ 16.62846476],\n           [ -6.38116123],\n           [-15.37597671]])\nGot:\n    array([[ 47.62195051],\n           [-18.39077736],\n           [  1.63037658],\n           [-15.36917967],\n           [-10.36208485],\n           [ 16.62998504],\n           [ -6.38386526],\n           [-15.376405  ]])\n**********************************************************************\nFile \"README.rst\", line 123, in README.rst\nFailed example:\n    cross_val_score(pipe, data, data.salary, sklearn.metrics.mean_squared_error)\n\nException raised:\n    Traceback (most recent call last):\n      File \"C:\\Anaconda\\lib\\doctest.py\", line 1289, in __run\n        compileflags, 1) in test.globs\n      File \"<doctest README.rst[10]>\", line 1, in <module>\n        cross_val_score(pipe, data, data.salary, sklearn.metrics.mean_squared_er\nror)\n      File \"sklearn_pandas\\__init__.py\", line 34, in cross_val_score\n        return cross_validation.cross_val_score(df, X_indices, *args, **kwargs)\n      File \"sklearn\\cross_validation.py\", line 1152, in cross_val_score\n        for train, test in cv)\n      File \"sklearn\\externals\\joblib\\parallel.py\", line 517, in __call__\n        self.dispatch(function, args, kwargs)\n      File \"sklearn\\externals\\joblib\\parallel.py\", line 312, in dispatch\n        job = ImmediateApply(func, args, kwargs)\n      File \"sklearn\\externals\\joblib\\parallel.py\", line 136, in __init__\n        self.results = func(*args, **kwargs)\n      File \"sklearn\\cross_validation.py\", line 1060, in _cross_val_score\n        estimator.fit(X_train, y_train, **fit_params)\n      File \"sklearn_pandas\\__init__.py\", line 19, in fit\n        self.estimator.fit(self._get_row_subset(x), y)\n      File \"sklearn\\pipeline.py\", line 130, in fit\n        Xt, fit_params = self._pre_transform(X, y, **fit_params)\n      File \"sklearn\\pipeline.py\", line 120, in _pre_transform\n        Xt = transform.fit_transform(Xt, y, **fit_params_steps[name])\n      File \"sklearn\\base.py\", line 411, in fit_transform\n        return self.fit(X, y, **fit_params).transform(X)\n      File \"sklearn_pandas\\__init__.py\", line 46, in fit\n        transformer.fit(X[columns])\n      File \"sklearn\\preprocessing\\label.py\", line 241, in fit\n        self.classes_ = unique_labels(y)\n      File \"sklearn\\utils\\multiclass.py\", line 98, in unique_labels\n        raise ValueError(\"Unknown label type\")\n    ValueError: Unknown label type\n**********************************************************************\n1 items had failures:\n   4 of  11 in README.rst\n***Test Failed*** 4 failures.\n```\n", "performed_via_github_app": null, "score": 1.0}]}