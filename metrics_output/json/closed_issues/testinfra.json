{"total_count": 182, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/philpep/testinfra/issues/563", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/563/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/563/events", "html_url": "https://github.com/philpep/testinfra/issues/563", "id": 676208017, "node_id": "MDU6SXNzdWU2NzYyMDgwMTc=", "number": 563, "title": "Suppress Warnings from `pytest`", "user": {"login": "salty-vagrant", "id": 22396554, "node_id": "MDQ6VXNlcjIyMzk2NTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/22396554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salty-vagrant", "html_url": "https://github.com/salty-vagrant", "followers_url": "https://api.github.com/users/salty-vagrant/followers", "following_url": "https://api.github.com/users/salty-vagrant/following{/other_user}", "gists_url": "https://api.github.com/users/salty-vagrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/salty-vagrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salty-vagrant/subscriptions", "organizations_url": "https://api.github.com/users/salty-vagrant/orgs", "repos_url": "https://api.github.com/users/salty-vagrant/repos", "events_url": "https://api.github.com/users/salty-vagrant/events{/privacy}", "received_events_url": "https://api.github.com/users/salty-vagrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-10T15:06:58Z", "updated_at": "2020-08-10T15:50:51Z", "closed_at": "2020-08-10T15:50:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`pytest` is reporting multiple warnings due to unregistered `pytest.mark`s. Add configuration to suppress these warnings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/562", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/562/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/562/events", "html_url": "https://github.com/philpep/testinfra/issues/562", "id": 676207005, "node_id": "MDU6SXNzdWU2NzYyMDcwMDU=", "number": 562, "title": "Purge doc/build from sdist", "user": {"login": "salty-vagrant", "id": 22396554, "node_id": "MDQ6VXNlcjIyMzk2NTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/22396554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salty-vagrant", "html_url": "https://github.com/salty-vagrant", "followers_url": "https://api.github.com/users/salty-vagrant/followers", "following_url": "https://api.github.com/users/salty-vagrant/following{/other_user}", "gists_url": "https://api.github.com/users/salty-vagrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/salty-vagrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salty-vagrant/subscriptions", "organizations_url": "https://api.github.com/users/salty-vagrant/orgs", "repos_url": "https://api.github.com/users/salty-vagrant/repos", "events_url": "https://api.github.com/users/salty-vagrant/events{/privacy}", "received_events_url": "https://api.github.com/users/salty-vagrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-10T15:05:27Z", "updated_at": "2020-08-10T15:50:18Z", "closed_at": "2020-08-10T15:50:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`doc/build` should not be in the `sdist` as it is a generated directory. When running `tox` the `check-manifest` reports a discrepancy involving this directory.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/554", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/554/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/554/events", "html_url": "https://github.com/philpep/testinfra/issues/554", "id": 630644753, "node_id": "MDU6SXNzdWU2MzA2NDQ3NTM=", "number": 554, "title": "kubectl backend should support contexts", "user": {"login": "NickLarsenNZ", "id": 10092581, "node_id": "MDQ6VXNlcjEwMDkyNTgx", "avatar_url": "https://avatars3.githubusercontent.com/u/10092581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NickLarsenNZ", "html_url": "https://github.com/NickLarsenNZ", "followers_url": "https://api.github.com/users/NickLarsenNZ/followers", "following_url": "https://api.github.com/users/NickLarsenNZ/following{/other_user}", "gists_url": "https://api.github.com/users/NickLarsenNZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/NickLarsenNZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NickLarsenNZ/subscriptions", "organizations_url": "https://api.github.com/users/NickLarsenNZ/orgs", "repos_url": "https://api.github.com/users/NickLarsenNZ/repos", "events_url": "https://api.github.com/users/NickLarsenNZ/events{/privacy}", "received_events_url": "https://api.github.com/users/NickLarsenNZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-04T09:03:12Z", "updated_at": "2020-06-05T00:10:08Z", "closed_at": "2020-06-05T00:10:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears to only support the following options:\r\n- `container`\r\n- `namespace`\r\n- `kubeconfig`\r\n\r\nEg: \r\n```\r\npy.test --hosts='kubectl://somepod-2536ab?container=nginx&namespace=web&kubeconfig=/path/kubeconfig'\r\n```\r\n\r\nMy use case heavily relies on selecting contexts (but not switching the current context).\r\n\r\nThis would be ideal:\r\n\r\n```\r\npy.test --hosts='kubectl://somepod-2536ab?container=nginx&context=dev-sydney'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/544", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/544/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/544/events", "html_url": "https://github.com/philpep/testinfra/issues/544", "id": 576452074, "node_id": "MDU6SXNzdWU1NzY0NTIwNzQ=", "number": 544, "title": "building docs fail on readthedocs", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-05T18:34:18Z", "updated_at": "2020-03-05T18:36:24Z", "closed_at": "2020-03-05T18:36:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\nERROR: Package 'testinfra' requires a different Python: 2.7.16 not in '>=3.4'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/542", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/542/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/542/events", "html_url": "https://github.com/philpep/testinfra/issues/542", "id": 570011093, "node_id": "MDU6SXNzdWU1NzAwMTEwOTM=", "number": 542, "title": "host.run(\"java -version\") send output to stderr instead of stdout", "user": {"login": "deamicis", "id": 22121474, "node_id": "MDQ6VXNlcjIyMTIxNDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/22121474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deamicis", "html_url": "https://github.com/deamicis", "followers_url": "https://api.github.com/users/deamicis/followers", "following_url": "https://api.github.com/users/deamicis/following{/other_user}", "gists_url": "https://api.github.com/users/deamicis/gists{/gist_id}", "starred_url": "https://api.github.com/users/deamicis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deamicis/subscriptions", "organizations_url": "https://api.github.com/users/deamicis/orgs", "repos_url": "https://api.github.com/users/deamicis/repos", "events_url": "https://api.github.com/users/deamicis/events{/privacy}", "received_events_url": "https://api.github.com/users/deamicis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T17:36:43Z", "updated_at": "2020-02-24T20:28:04Z", "closed_at": "2020-02-24T20:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a simple test for checking and parsing the output of `java -version`. I spent couple of minutes in figuring out why the stdout was always empty and then I've noticed that the output was sent to stderr.\r\nThe test is running against an Ubuntu server 16.04.6 LTS\r\nSimple Test:\r\n```\r\ndef test_installed_java_package_is_in_use(host):\r\n    \"Check that installed Java (OpenJDK) 8 is in use\"\r\n    java_version_out = host.run(\"java -version\").stdout\r\n    java_version_err = host.run(\"java -version\").stderr\r\n    print(\"stdout\\n\"+java_version_out)\r\n    print(\"stderr\\n\"+java_version_err)\r\n```\r\nTest Output:\r\n```\r\nstdout\r\n<<nothing here>>\r\nstderr\r\nopenjdk version \"1.8.0_242\"\r\nOpenJDK Runtime Environment (build 1.8.0_242-8u242-b08-0ubuntu3~16.04-b08)\r\nOpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)\r\n```\r\nAs you can see the stdout is empty but stderr contains the output. Not sure if it's a bug in testinfra or in how java print the output. Any advice?\r\n\r\nThank You", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/535", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/535/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/535/events", "html_url": "https://github.com/philpep/testinfra/issues/535", "id": 565740477, "node_id": "MDU6SXNzdWU1NjU3NDA0Nzc=", "number": 535, "title": "document way to write tests that avoid breaking pytest collection", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-15T12:18:25Z", "updated_at": "2020-07-20T21:59:41Z", "closed_at": "2020-07-20T21:59:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "On molecule we have a cookiecutter template for using testinfra as verifier as seen at https://github.com/ansible-community/molecule/blob/master/molecule/cookiecutter/scenario/verifier/testinfra/%7B%7Bcookiecutter.molecule_directory%7D%7D/%7B%7Bcookiecutter.scenario_name%7D%7D/%7B%7Bcookiecutter.verifier_directory%7D%7D/test_default.py \r\n\r\nIn its current form it can break pytest ability to collect tests for two reasons: either testinfra is not installed or the test is called from outside molecule, where the variable is not defined, giving an exception.\r\n\r\nI would like to change the template in such way that testinfra tests are skipped (or xfailed) when any of these two requirements are not met, avoiding breakind pytest collection. Main reason for this is that we often use pytest with other kind of tests and we do not want to overcomplicate executions with include and exclude scenarios. Mainly adding a new testinfra backed test to a role should not break another testing job.\r\n\r\nI do have a PR that seems to be working at https://github.com/ansible-community/molecule/pull/2555/files but  it would be nice to have a confirmation if what is done there is correct or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/534", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/534/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/534/events", "html_url": "https://github.com/philpep/testinfra/issues/534", "id": 564074262, "node_id": "MDU6SXNzdWU1NjQwNzQyNjI=", "number": 534, "title": "RFE: include hostname in the repr() of a Host object", "user": {"login": "larsks", "id": 82622, "node_id": "MDQ6VXNlcjgyNjIy", "avatar_url": "https://avatars2.githubusercontent.com/u/82622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsks", "html_url": "https://github.com/larsks", "followers_url": "https://api.github.com/users/larsks/followers", "following_url": "https://api.github.com/users/larsks/following{/other_user}", "gists_url": "https://api.github.com/users/larsks/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsks/subscriptions", "organizations_url": "https://api.github.com/users/larsks/orgs", "repos_url": "https://api.github.com/users/larsks/repos", "events_url": "https://api.github.com/users/larsks/events{/privacy}", "received_events_url": "https://api.github.com/users/larsks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-12T15:24:39Z", "updated_at": "2020-04-27T17:58:05Z", "closed_at": "2020-04-27T17:58:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `repr()` for a `Host` object doesn't include the hostname. That means that, for example, a failed test leads with this:\r\n\r\n```\r\nhost = <testinfra.host.Host object at 0x7f7f455bd990>\r\n```\r\n\r\nIt would be great if instead that looked something like:\r\n\r\n```\r\nhost=<testinfra.host.Host ansible://server.example.com>\r\n```\r\n\r\nThis would similarly improve other `pytest` output where it prints the value of a fixture.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/531", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/531/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/531/events", "html_url": "https://github.com/philpep/testinfra/issues/531", "id": 555079646, "node_id": "MDU6SXNzdWU1NTUwNzk2NDY=", "number": 531, "title": "Where does TestinfraDeprecationWarning comes from?", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-25T12:26:07Z", "updated_at": "2020-02-04T07:19:43Z", "closed_at": "2020-02-04T07:19:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I recently encounted some annoying deprecation warnings which I did not see before:\r\n\r\n```\r\nplatform darwin -- Python 2.7.16, pytest-4.6.9, py-1.8.1, pluggy-0.13.1 -- /Users/ssbarnea/c/os/molecule/.tox/py27-ansible28-unit/bin/python\r\ncachedir: .tox/py27-ansible28-unit/.pytest_cache\r\nmetadata: {'CI': '1', 'Packages': {'pluggy': '0.13.1', 'pytest': '4.6.9', 'py': '1.8.1'}, 'JAVA_HOME': '/Library/Java/JavaVirtualMachines/jdk1.8.0_162.jdk/Contents/Home', 'Plugins': {u'helpers-namespace': u'2019.1.8', u'mock': u'1.13.0', u'testinfra': u'3.4.0', u'xdist': u'1.31.0', u'verbose-parametrize': u'1.7.0', u'cov': u'2.8.1', u'html': u'1.22.1', u'metadata': u'1.8.0', u'forked': u'1.1.3'}, 'Python': '2.7.16', 'Platform': 'Darwin-19.2.0-x86_64-i386-64bit'}\r\nrootdir: /Users/ssbarnea/c/os/molecule, inifile: setup.cfg\r\nplugins: testinfra-3.4.0, helpers-namespace-2019.1.8, mock-1.13.0, xdist-1.31.0, verbose-parametrize-1.7.0, html-1.22.1, forked-1.1.3, metadata-1.8.0, cov-2.8.1\r\n\r\n/molecule/.tox/py27-ansible28-unit/lib/python2.7/site-packages/testinfra/__init__.py:32: TestinfraDeprecationWarning: DEPRECATION: testinfra python2 support is unmaintained, please upgrade to python3\r\n```\r\n\r\nThe most interesting part is that I search this repository for occurrence of TestinfraDeprecationWarning and there is none, in the code, issues or PRs.\r\n\r\nThat is a serious reason to be warned because it means that the code released on pypi is not the code from the repository. Or github search got broken, which is unlikely.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/507", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/507/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/507/events", "html_url": "https://github.com/philpep/testinfra/issues/507", "id": 511983505, "node_id": "MDU6SXNzdWU1MTE5ODM1MDU=", "number": 507, "title": "mount_point not working ?", "user": {"login": "cavepopo", "id": 16035946, "node_id": "MDQ6VXNlcjE2MDM1OTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/16035946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cavepopo", "html_url": "https://github.com/cavepopo", "followers_url": "https://api.github.com/users/cavepopo/followers", "following_url": "https://api.github.com/users/cavepopo/following{/other_user}", "gists_url": "https://api.github.com/users/cavepopo/gists{/gist_id}", "starred_url": "https://api.github.com/users/cavepopo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cavepopo/subscriptions", "organizations_url": "https://api.github.com/users/cavepopo/orgs", "repos_url": "https://api.github.com/users/cavepopo/repos", "events_url": "https://api.github.com/users/cavepopo/events{/privacy}", "received_events_url": "https://api.github.com/users/cavepopo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-24T14:29:46Z", "updated_at": "2019-10-24T14:36:17Z", "closed_at": "2019-10-24T14:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am quite sure I am doing something wrong but I can't figure out what...\r\n\r\nhere is may code to test different aspects of mount point on a vmware kvm:\r\n```\r\ndef test_file_SL_mountPoints_software(host, app_name):\r\n    assert host.mount_point(\"/software\").exists\r\n```\r\napp_name is a fixture declared in conftest.py, no issue with this one afaik.\r\n\r\nThe error is :\r\n```\r\nhost = <testinfra.host.Host object at 0x7f348dbc1c90>, app_name = 'testo'\r\n\r\n    def test_file_SL_mountPoints_software(host, app_name):\r\n>       assert host.mount_point(\"/software\").exists\r\nE       assert False\r\nE        +  where False = <[KeyError(\"u'device'\") raised in repr()] SafeRepr object at 0x7f348d470878>.exists\r\nE        +    where <[KeyError(\"u'device'\") raised in repr()] SafeRepr object at 0x7f348d470878> = <class 'testinfra.modules.base.LinuxMountPoint'>('/software')\r\nE        +      where <class 'testinfra.modules.base.LinuxMountPoint'> = <testinfra.host.Host object at 0x7f348dbc1c90>.mount_point\r\n```\r\n\r\nAny ideas about what dumb thing I am doing ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/505", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/505/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/505/events", "html_url": "https://github.com/philpep/testinfra/issues/505", "id": 503497863, "node_id": "MDU6SXNzdWU1MDM0OTc4NjM=", "number": 505, "title": "process.filter is unreliable with long usernames", "user": {"login": "manics", "id": 1644105, "node_id": "MDQ6VXNlcjE2NDQxMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1644105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manics", "html_url": "https://github.com/manics", "followers_url": "https://api.github.com/users/manics/followers", "following_url": "https://api.github.com/users/manics/following{/other_user}", "gists_url": "https://api.github.com/users/manics/gists{/gist_id}", "starred_url": "https://api.github.com/users/manics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manics/subscriptions", "organizations_url": "https://api.github.com/users/manics/orgs", "repos_url": "https://api.github.com/users/manics/repos", "events_url": "https://api.github.com/users/manics/events{/privacy}", "received_events_url": "https://api.github.com/users/manics/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-07T14:42:23Z", "updated_at": "2019-10-31T19:15:22Z", "closed_at": "2019-10-31T19:15:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://testinfra.readthedocs.io/en/latest/modules.html#testinfra.modules.process.Process\r\nsuggests filtering processes by user `host.process.filter(user=\"root\", comm=\"zsh\")`\r\n\r\nThis fails with long usernames, e.g. as root\r\n```\r\nuseradd user-with-long-name\r\nsu user-with-long-name -c 'sleep 1000'&\r\n```\r\nIn Python:\r\n```\r\nIn [1]: import testinfra\r\n\r\nIn [2]: host = testinfra.get_host('local://')\r\n\r\nIn [3]: host.process.filter(user='user-with-long-name')\r\nOut[3]: []\r\n\r\nIn [4]: host.process.filter(user='user-wi+')\r\nOut[4]: [<process sh (pid=4311)>, <process sleep (pid=4312)>]\r\n```\r\n\r\nThe underlying call is `ps -Aww -o %s`:\r\nhttps://github.com/philpep/testinfra/blob/3.2.0/testinfra/modules/process.py#L128\r\nwhich may truncate the `user` field, though this depends on the order the fields are specified:\r\n```\r\n# ps -Aww -o pid,user,comm\r\n  PID USER     COMMAND\r\n    1 root     bash\r\n 7315 root     ipython\r\n 8029 root     su\r\n 8036 user-wi+ sh\r\n 8038 user-wi+ sleep\r\n 8667 root     sh\r\n 8668 root     ps\r\n```\r\n```\r\n# ps -Aww -o pid,comm,user\r\n  PID COMMAND         USER\r\n    1 bash            root\r\n 7315 ipython         root\r\n 8029 su              root\r\n 8036 sh              user-with-long-name\r\n 8038 sleep           user-with-long-name\r\n 8811 sh              root\r\n 8812 ps              root\r\n```\r\nThe list of attributes is a set so order is undefined: https://github.com/philpep/testinfra/blob/3.2.0/testinfra/modules/process.py#L129\r\n\r\nI haven't found an easy fix, there don't seem to be any `ps` flags to ensure the full field is always output.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/503", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/503/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/503/events", "html_url": "https://github.com/philpep/testinfra/issues/503", "id": 503228915, "node_id": "MDU6SXNzdWU1MDMyMjg5MTU=", "number": 503, "title": "Add manjaro linux support", "user": {"login": "Insolita", "id": 1847402, "node_id": "MDQ6VXNlcjE4NDc0MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1847402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Insolita", "html_url": "https://github.com/Insolita", "followers_url": "https://api.github.com/users/Insolita/followers", "following_url": "https://api.github.com/users/Insolita/following{/other_user}", "gists_url": "https://api.github.com/users/Insolita/gists{/gist_id}", "starred_url": "https://api.github.com/users/Insolita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Insolita/subscriptions", "organizations_url": "https://api.github.com/users/Insolita/orgs", "repos_url": "https://api.github.com/users/Insolita/repos", "events_url": "https://api.github.com/users/Insolita/events{/privacy}", "received_events_url": "https://api.github.com/users/Insolita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-07T04:39:24Z", "updated_at": "2020-02-18T01:06:22Z", "closed_at": "2019-10-08T11:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "it same as an archlinux, but host.system_info.distribution  is manjarolinux instead of arch", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/502", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/502/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/502/events", "html_url": "https://github.com/philpep/testinfra/issues/502", "id": 498881623, "node_id": "MDU6SXNzdWU0OTg4ODE2MjM=", "number": 502, "title": "Support for Yum in package module", "user": {"login": "shadowtdt", "id": 5790040, "node_id": "MDQ6VXNlcjU3OTAwNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5790040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadowtdt", "html_url": "https://github.com/shadowtdt", "followers_url": "https://api.github.com/users/shadowtdt/followers", "following_url": "https://api.github.com/users/shadowtdt/following{/other_user}", "gists_url": "https://api.github.com/users/shadowtdt/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadowtdt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadowtdt/subscriptions", "organizations_url": "https://api.github.com/users/shadowtdt/orgs", "repos_url": "https://api.github.com/users/shadowtdt/repos", "events_url": "https://api.github.com/users/shadowtdt/events{/privacy}", "received_events_url": "https://api.github.com/users/shadowtdt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-26T13:22:13Z", "updated_at": "2019-11-13T19:08:02Z", "closed_at": "2019-11-13T19:08:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Support the default package manager for Centos/RedHat systems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/500", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/500/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/500/events", "html_url": "https://github.com/philpep/testinfra/issues/500", "id": 496839612, "node_id": "MDU6SXNzdWU0OTY4Mzk2MTI=", "number": 500, "title": "Exact match pattern on file.contains module", "user": {"login": "k4ch0", "id": 1848897, "node_id": "MDQ6VXNlcjE4NDg4OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1848897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k4ch0", "html_url": "https://github.com/k4ch0", "followers_url": "https://api.github.com/users/k4ch0/followers", "following_url": "https://api.github.com/users/k4ch0/following{/other_user}", "gists_url": "https://api.github.com/users/k4ch0/gists{/gist_id}", "starred_url": "https://api.github.com/users/k4ch0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k4ch0/subscriptions", "organizations_url": "https://api.github.com/users/k4ch0/orgs", "repos_url": "https://api.github.com/users/k4ch0/repos", "events_url": "https://api.github.com/users/k4ch0/events{/privacy}", "received_events_url": "https://api.github.com/users/k4ch0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-22T22:09:54Z", "updated_at": "2020-04-27T02:03:40Z", "closed_at": "2020-04-27T02:03:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi team,\r\n\r\nMolecule version: 2.20.1\r\nTestinfra version: 1.19.0\r\n\r\nI'm trying the next test using molecule:\r\n\r\n```\r\ndef test_modprobe(host, ansible_variables):\r\n    dict_variables = converttostr(ansible_variables)\r\n    dict_fs = dict_variables['disabled_filesystems_ubuntu18_04']\r\n\r\n    for value in dict_fs.values():\r\n        f = host.file('/etc/modprobe.d/'+str(value)+'.conf')\r\n        assert f.exists\r\n        assert f.user == 'root'\r\n        assert f.group == 'root'\r\n        assert f.contains('install '+str(value)+' /bin/true')\r\n ```\r\nI'm looking for a line like: ```install cramfs /bin/true``` but it should failed if the line have anything else on the same line for example:```install cramfs /bin/true extrainfo```.\r\nNot saying that it should exists an extra info on the file, but I just want to match the exact pattern and avoid any other data on the same line.\r\n\r\nAny help is welcome", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/497", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/497/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/497/events", "html_url": "https://github.com/philpep/testinfra/issues/497", "id": 490743546, "node_id": "MDU6SXNzdWU0OTA3NDM1NDY=", "number": 497, "title": "Have a global flag for \"force_ansible\".", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-08T11:36:30Z", "updated_at": "2019-09-08T12:08:57Z", "closed_at": "2019-09-08T12:08:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For now force_ansible could only be passed to the `--hosts` parameter, in the url connection string.\r\n\r\nHaving a ``--force-ansible`` global flag may be useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/489", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/489/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/489/events", "html_url": "https://github.com/philpep/testinfra/issues/489", "id": 487380540, "node_id": "MDU6SXNzdWU0ODczODA1NDA=", "number": 489, "title": "Nonexisting --ansible-inventory should lead to failure.", "user": {"login": "mrtndwrd", "id": 832723, "node_id": "MDQ6VXNlcjgzMjcyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/832723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrtndwrd", "html_url": "https://github.com/mrtndwrd", "followers_url": "https://api.github.com/users/mrtndwrd/followers", "following_url": "https://api.github.com/users/mrtndwrd/following{/other_user}", "gists_url": "https://api.github.com/users/mrtndwrd/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrtndwrd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrtndwrd/subscriptions", "organizations_url": "https://api.github.com/users/mrtndwrd/orgs", "repos_url": "https://api.github.com/users/mrtndwrd/repos", "events_url": "https://api.github.com/users/mrtndwrd/events{/privacy}", "received_events_url": "https://api.github.com/users/mrtndwrd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1490557885, "node_id": "MDU6TGFiZWwxNDkwNTU3ODg1", "url": "https://api.github.com/repos/philpep/testinfra/labels/ansible", "name": "ansible", "color": "a768c1", "default": false, "description": ""}, {"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-30T09:20:52Z", "updated_at": "2019-09-08T11:33:51Z", "closed_at": "2019-09-08T11:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description\r\n\r\nI use testinfra in combination with Ansible. When I provide the `--ansible-inventory` argument with a path to a non-existing file, I would expect testinfra to fail (because it can not load the file). \r\n\r\nInstead, testinfra just skips all the tests and exits with code `0`:\r\n\r\n```\r\npy.test -v -m 'testinfra' --connection=ansible --ansible-inventory=nonexistingfile --hosts='ansible://*'\r\n======================================================================================================== test session starts ========================================================================================================\r\nplatform linux -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0 -- /home/users/maarten/projects/openappstack/openappstack/env/bin/python3.7\r\ncachedir: .pytest_cache\r\nrootdir: /home/users/maarten/projects/openappstack/openappstack/test, inifile: pytest.ini\r\nplugins: testinfra-3.0.5\r\ncollected 4 items / 1 deselected / 3 selected                                                                                                                                                                                       \r\n\r\npytest/test_docker.py::test_docker_is_installed[_testinfra_host0] SKIPPED                                                                                                                                                     [ 33%]\r\npytest/test_docker.py::test_docker_running_and_enabled[_testinfra_host0] SKIPPED                                                                                                                                              [ 66%]\r\npytest/test_system.py::test_release_is_bionic[_testinfra_host0] SKIPPED                                                                                                                                                       [100%]\r\n\r\n============================================================================================== 3 skipped, 1 deselected in 2.30 seconds ==============================================================================================\r\n```\r\n\r\n## Expected behaviour\r\n\r\n testinfra raises an exception and the program exits with a non-zero exit code.\r\n\r\n## Actual behavior\r\n\r\n all my steps get skipped and the program exits with exit code 0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/487", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/487/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/487/events", "html_url": "https://github.com/philpep/testinfra/issues/487", "id": 484681628, "node_id": "MDU6SXNzdWU0ODQ2ODE2Mjg=", "number": 487, "title": "Feature request: ProxyJump support with paramiko backend", "user": {"login": "abohne", "id": 1583491, "node_id": "MDQ6VXNlcjE1ODM0OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1583491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abohne", "html_url": "https://github.com/abohne", "followers_url": "https://api.github.com/users/abohne/followers", "following_url": "https://api.github.com/users/abohne/following{/other_user}", "gists_url": "https://api.github.com/users/abohne/gists{/gist_id}", "starred_url": "https://api.github.com/users/abohne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abohne/subscriptions", "organizations_url": "https://api.github.com/users/abohne/orgs", "repos_url": "https://api.github.com/users/abohne/repos", "events_url": "https://api.github.com/users/abohne/events{/privacy}", "received_events_url": "https://api.github.com/users/abohne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-23T19:37:38Z", "updated_at": "2020-03-05T22:26:22Z", "closed_at": "2020-03-05T22:26:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an existing ssh client configuration that allows me to SSH to instances via our bastion hosts leveraging the `ProxyJump` directive.\r\n\r\nI would like to leverage my existing SSH config when using the paramiko backend to connect to hosts and run tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/486", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/486/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/486/events", "html_url": "https://github.com/philpep/testinfra/issues/486", "id": 482782671, "node_id": "MDU6SXNzdWU0ODI3ODI2NzE=", "number": 486, "title": "Error when executed with Molecule and delegated driver", "user": {"login": "javierjimsa", "id": 38256935, "node_id": "MDQ6VXNlcjM4MjU2OTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/38256935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javierjimsa", "html_url": "https://github.com/javierjimsa", "followers_url": "https://api.github.com/users/javierjimsa/followers", "following_url": "https://api.github.com/users/javierjimsa/following{/other_user}", "gists_url": "https://api.github.com/users/javierjimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/javierjimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javierjimsa/subscriptions", "organizations_url": "https://api.github.com/users/javierjimsa/orgs", "repos_url": "https://api.github.com/users/javierjimsa/repos", "events_url": "https://api.github.com/users/javierjimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/javierjimsa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1490557885, "node_id": "MDU6TGFiZWwxNDkwNTU3ODg1", "url": "https://api.github.com/repos/philpep/testinfra/labels/ansible", "name": "ansible", "color": "a768c1", "default": false, "description": ""}, {"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-08-20T10:40:17Z", "updated_at": "2019-09-08T12:00:30Z", "closed_at": "2019-09-08T12:00:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ansible 2.7.11\r\nMolecule 2.22\r\nTestinfra 3.1.0\r\n\r\nWhen executed pytest with molecule verify command, the following error appears:\r\n\r\n_ValueError: unsupported format character '-' (0x2d) at index 164_\r\n\r\n'''\r\nhost = <testinfra.host.Host object at 0x7f3bfd62eac8>\r\n    \r\n    \u001b[1m    def test_passwd_file(host):\u001b[0m\r\n    \u001b[1m>       passwd = host.file(\"/etc/passwd\")\u001b[0m\r\n    \r\n    \u001b[1m\u001b[31m../../tests/test_httpd.py\u001b[0m:12:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/host.py\u001b[0m:107: in __getattr__\r\n    \u001b[1m    obj = module_class.get_module(self)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/modules/base.py\u001b[0m:22: in get_module\r\n    \u001b[1m    klass = cls.get_module_class(_host)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/modules/file.py\u001b[0m:187: in get_module_class\r\n    \u001b[1m    if host.system_info.type == \"linux\":\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/modules/systeminfo.py\u001b[0m:143: in type\r\n    \u001b[1m    return self.sysinfo[\"type\"]\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/utils/__init__.py\u001b[0m:44: in __get__\r\n    \u001b[1m    value = obj.__dict__[self.func.__name__] = self.func(obj)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/modules/systeminfo.py\u001b[0m:33: in sysinfo\r\n    \u001b[1m    uname = self.run_expect([0, 1], 'uname -s')\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/host.py\u001b[0m:71: in run\r\n    \u001b[1m    return self.backend.run(command, *args, **kwargs)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/backend/ansible.py\u001b[0m:51: in run\r\n    \u001b[1m    return host.run(command)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/host.py\u001b[0m:71: in run\r\n    \u001b[1m    return self.backend.run(command, *args, **kwargs)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/backend/ssh.py\u001b[0m:37: in run\r\n    \u001b[1m    return self.run_ssh(self.get_command(command, *args))\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/backend/ssh.py\u001b[0m:67: in run_ssh\r\n    \u001b[1m    \" \".join(cmd), *cmd_args)\u001b[0m\r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/backend/base.py\u001b[0m:195: in run_local\r\n    \u001b[1m    command = self.quote(command, *args)\u001b[0m\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    command = 'ssh -o UserKnownHostsFile=/dev/null -o ControlMaster=auto -o ControlPersist=60s -o IdentitiesOnly=yes -o StrictHostKe...ansible/cp/%r@%h-%p -o User=%s -o Port=%s -i %s -o ConnectTimeout=10 -o ControlMaster=auto -o ControlPersist=60s %s %s'\r\n    args = (****, '22', '/var/lib/jenkins/.cache/molecule/feature_molecule_testing_273/vmware/ssh_key', '10.120.52.19', \"sudo /bin/sh -c 'uname -s'\")\r\n    \r\n    \u001b[1m    @staticmethod\u001b[0m\r\n    \u001b[1m    def quote(command, *args):\u001b[0m\r\n    \u001b[1m        if args:\u001b[0m\r\n    \u001b[1m>           return command % tuple(pipes.quote(a) for a in args)\u001b[0m\r\n    \u001b[1m\u001b[31mE           ValueError: unsupported format character '-' (0x2d) at index 164\u001b[0m\r\n    \r\n    \u001b[1m\u001b[31m../../.venv/lib/python3.7/site-packages/testinfra/backend/base.py\u001b[0m:176: ValueError\r\n    \u001b[31m\u001b[1m_ test_httpd_is_installed[ansible://protofeaturemoleculetesting.mrd.roche.com] _\u001b[0m\r\n    [gw0] linux -- Python 3.7.3 /var/lib/jenkins/workspace/e-proto_feature_molecule_testing@2/feature_molecule_testing_273/.venv/bin/python3\r\n\r\n'''", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/481", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/481/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/481/events", "html_url": "https://github.com/philpep/testinfra/issues/481", "id": 480689883, "node_id": "MDU6SXNzdWU0ODA2ODk4ODM=", "number": 481, "title": "\"force_ansible=True\" fails when \"lsb_release\" executable isn't available", "user": {"login": "pilou-", "id": 1356830, "node_id": "MDQ6VXNlcjEzNTY4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1356830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pilou-", "html_url": "https://github.com/pilou-", "followers_url": "https://api.github.com/users/pilou-/followers", "following_url": "https://api.github.com/users/pilou-/following{/other_user}", "gists_url": "https://api.github.com/users/pilou-/gists{/gist_id}", "starred_url": "https://api.github.com/users/pilou-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pilou-/subscriptions", "organizations_url": "https://api.github.com/users/pilou-/orgs", "repos_url": "https://api.github.com/users/pilou-/repos", "events_url": "https://api.github.com/users/pilou-/events{/privacy}", "received_events_url": "https://api.github.com/users/pilou-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-14T13:48:13Z", "updated_at": "2019-08-23T17:39:55Z", "closed_at": "2019-08-18T00:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because [`AnsibleRunner.run_module` uses `run_execpt`](https://github.com/philpep/testinfra/blob/b1e369d9d440931553aebf68872ff08cc21ca0ba/testinfra/utils/ansible_runner.py#L206), there is an [uncatched exception](https://github.com/philpep/testinfra/blob/b1e369d9d440931553aebf68872ff08cc21ca0ba/testinfra/modules/systeminfo.py#L54) when `lsb_release` executable isn't available on managed host. Then `/etc/os-release` isn't read and this failure occurs.\r\n\r\nBacktrace:\r\n```\r\n>        inventory = os.environ['MOLECULE_INVENTORY_FILE']\r\n>        uri = 'ansible://%s?ansible_inventory=%s&force_ansible=True'\r\n>        my_host = testinfra.get_host(uri % ('test_host', inventory))\r\n>        my_file = my_host.file(\"/path/to/file\")\r\n\r\nmolecule/resources/tests/test_custom.py:32: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/host.py:107: in __getattr__\r\n    obj = module_class.get_module(self)\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/modules/base.py:22: in get_module\r\n    klass = cls.get_module_class(_host)\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/modules/file.py:187: in get_module_class\r\n    if host.system_info.type == \"linux\":\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/modules/systeminfo.py:143: in type\r\n    return self.sysinfo[\"type\"]\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/utils/__init__.py:44: in __get__\r\n    value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/modules/systeminfo.py:40: in sysinfo\r\n    sysinfo.update(**self._get_linux_sysinfo())\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/modules/systeminfo.py:54: in _get_linux_sysinfo\r\n    lsb = self.run(\"lsb_release -a\")\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/host.py:71: in run\r\n    return self.backend.run(command, *args, **kwargs)\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/backend/ansible.py:52: in run\r\n    out = self.run_ansible('shell', module_args=command, check=False)\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/backend/ansible.py:60: in run_ansible\r\n    **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <testinfra.utils.ansible_runner.AnsibleRunner object at 0x7f2d3843c7d0>, host = 'application', module_name = 'shell', module_args = 'lsb_release -a', become = False\r\ncheck = False, kwargs = {}, cmd = 'ansible --tree %s -i %s -m %s --args %s %s'\r\nargs = ['/tmp/tmpwjcf8pt9', '/tmp/molecule/testproject/default/inventory/ansible_inventory.yml', 'shell', 'lsb_release -a', 'application'], d = '/tmp/tmpwjcf8pt9'\r\n\r\n    def run_module(self, host, module_name, module_args, become=False,\r\n                   check=True, **kwargs):\r\n        cmd, args = 'ansible --tree %s', [None]\r\n        if self.inventory_file:\r\n            cmd += ' -i %s'\r\n            args += [self.inventory_file]\r\n        cmd += ' -m %s'\r\n        args += [module_name]\r\n        if module_args:\r\n            cmd += ' --args %s'\r\n            args += [module_args]\r\n        if become:\r\n            cmd += ' --become'\r\n        if check:\r\n            cmd += ' --check'\r\n        cmd += ' %s'\r\n        args += [host]\r\n        with TemporaryDirectory() as d:\r\n            args[0] = d\r\n>           out = local.run_expect([0, 2], cmd, *args)\r\nE           AssertionError: Unexpected exit code 8 for CommandResult(command=b\"ansible --tree /tmp/tmpwjcf8pt9 -i /tmp/molecule/testproject/default/inventory/ansible_inventory.yml -m shell --args 'lsb_release -a' application\", exit_status=8, stdout=b'application | FAILED | rc=127 >>\\n/bin/sh: 1: lsb_release: not foundnon-zero return code\\n', stderr=None)\r\nE           assert 8 in [0, 2]\r\nE            +  where 8 = CommandResult(command=b\"ansible --tree /tmp/tmpwjcf8pt9 -i /tmp/molecule/testproject/default/inventory/ansible_inven...s=8, stdout=b'application | FAILED | rc=127 >>\\n/bin/sh: 1: lsb_release: not foundnon-zero return code\\n', stderr=None).rc\r\n\r\n/tmp/molecule-test-py3/lib/python3.7/site-packages/testinfra/utils/ansible_runner.py:206: AssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/474", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/474/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/474/events", "html_url": "https://github.com/philpep/testinfra/issues/474", "id": 478378571, "node_id": "MDU6SXNzdWU0NzgzNzg1NzE=", "number": 474, "title": "compatibility issue with Molecule and delegated driver", "user": {"login": "javierjimsa", "id": 38256935, "node_id": "MDQ6VXNlcjM4MjU2OTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/38256935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javierjimsa", "html_url": "https://github.com/javierjimsa", "followers_url": "https://api.github.com/users/javierjimsa/followers", "following_url": "https://api.github.com/users/javierjimsa/following{/other_user}", "gists_url": "https://api.github.com/users/javierjimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/javierjimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javierjimsa/subscriptions", "organizations_url": "https://api.github.com/users/javierjimsa/orgs", "repos_url": "https://api.github.com/users/javierjimsa/repos", "events_url": "https://api.github.com/users/javierjimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/javierjimsa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1490557885, "node_id": "MDU6TGFiZWwxNDkwNTU3ODg1", "url": "https://api.github.com/repos/philpep/testinfra/labels/ansible", "name": "ansible", "color": "a768c1", "default": false, "description": ""}, {"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-08T10:16:59Z", "updated_at": "2019-08-09T15:57:59Z", "closed_at": "2019-08-09T15:57:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "From Testinfra 3.0 and onwards is no possible to execute tests with molecule (tested from molecule 2.19.0) since `testinfra/utils/ansible_runner.py` does not recognize the connection type \"smart\" which is the default for ansible as stated here:\r\n[https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#](url)\r\n\r\nWhen the molecule delegated driver compiles the ansible inventory it takes the ssh connection as smart.\r\n\r\n`    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/host.py:107: in __getattr__\r\n        obj = module_class.get_module(self)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/modules/base.py:22: in get_module\r\n        klass = cls.get_module_class(_host)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/modules/file.py:187: in get_module_class\r\n        if host.system_info.type == \"linux\":\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/modules/systeminfo.py:143: in type\r\n        return self.sysinfo[\"type\"]\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/utils/__init__.py:44: in __get__\r\n        value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/modules/systeminfo.py:33: in sysinfo\r\n        uname = self.run_expect([0, 1], 'uname -s')\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/host.py:71: in run\r\n        return self.backend.run(command, *args, **kwargs)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/backend/ansible.py:46: in run\r\n        ssh_identity_file=self.ssh_identity_file)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/utils/ansible_runner.py:183: in run\r\n        return self.get_host(host, **kwargs).run(command)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/utils/ansible_runner.py:179: in get_host\r\n        self.ansible_config, self.inventory, host, **kwargs)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/utils/ansible_runner.py:107: in get_ansible_host\r\n        return testinfra.get_host(spec, **kwargs)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/host.py:132: in get_host\r\n        backend = testinfra.backend.get_backend(hostspec, **kwargs)\r\n    ../../.venv/lib/python3.7/site-packages/testinfra/backend/__init__.py:73: in get_backend\r\n        klass = get_backend_class(kw[\"connection\"])\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    connection = 'smart'\r\n    \r\n        def get_backend_class(connection):\r\n            try:\r\n                classpath = BACKENDS[connection]\r\n            except KeyError:\r\n    >           raise RuntimeError(\"Unknown connection type '%s'\" % (connection,))\r\n    E           RuntimeError: Unknown connection type 'smart'\r\n    \r\n    ../../.venv/lib/python3.7/site-packages/testinfra/backend/__init__.py:39: RuntimeError\r\n    _ test_httpd_is_installed[ansible://ansible-role-proto_featuremolecule_testing.mrd.roche.com] _\r\n    [gw0] linux -- Python 3.7.3 /var/lib/jenkins/workspace/e-proto_feature_molecule_testing@2/feature_molecule_testing_242/.venv/bin/python3\r\n    \r\n    host = <testinfra.host.Host object at 0x7f15403fcbe0>\r\n'\r\n\r\nIt works with previous versions of testinfra like 2.1.0\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/470", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/470/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/470/events", "html_url": "https://github.com/philpep/testinfra/issues/470", "id": 476103132, "node_id": "MDU6SXNzdWU0NzYxMDMxMzI=", "number": 470, "title": "get_ansible_inventory: ValueError: No JSON object could be decoded", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-02T10:07:14Z", "updated_at": "2019-08-04T11:17:17Z", "closed_at": "2019-08-04T11:17:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Location of issue https://github.com/philpep/testinfra/blob/master/testinfra/utils/ansible_runner.py#L58\r\n\r\nIn order to unblock current users we need to implement a workaround in testinfra: disabling ansible verbosity for this command via `ANSIBLE_VERBOSITY=0`.\r\n\r\nUpstream bug: https://github.com/ansible/ansible/issues/59973\r\nDownstram bug: https://github.com/ansible/molecule/issues/2188", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/461", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/461/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/461/events", "html_url": "https://github.com/philpep/testinfra/issues/461", "id": 465456840, "node_id": "MDU6SXNzdWU0NjU0NTY4NDA=", "number": 461, "title": "not working with pytest 5.0.1", "user": {"login": "Constantin07", "id": 11664677, "node_id": "MDQ6VXNlcjExNjY0Njc3", "avatar_url": "https://avatars2.githubusercontent.com/u/11664677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Constantin07", "html_url": "https://github.com/Constantin07", "followers_url": "https://api.github.com/users/Constantin07/followers", "following_url": "https://api.github.com/users/Constantin07/following{/other_user}", "gists_url": "https://api.github.com/users/Constantin07/gists{/gist_id}", "starred_url": "https://api.github.com/users/Constantin07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Constantin07/subscriptions", "organizations_url": "https://api.github.com/users/Constantin07/orgs", "repos_url": "https://api.github.com/users/Constantin07/repos", "events_url": "https://api.github.com/users/Constantin07/events{/privacy}", "received_events_url": "https://api.github.com/users/Constantin07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-08T20:58:15Z", "updated_at": "2019-07-09T19:58:39Z", "closed_at": "2019-07-09T07:00:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm getting the below issue when trying to run testinfra on CentOS 7.2\r\n\r\n```python\r\n--> Executing Testinfra tests found in /root/test/ansible/roles/ctop/molecule/default/tests/...\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/py.test\", line 11, in <module>\r\n    load_entry_point('pytest==5.0.1', 'console_scripts', 'py.test')()\r\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 487, in load_entry_point\r\n    return get_distribution(dist).load_entry_point(group, name)\r\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2728, in load_entry_point\r\n    return ep.load()\r\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2346, in load\r\n    return self.resolve()\r\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2352, in resolve\r\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n  File \"/usr/lib/python2.7/site-packages/pytest.py\", line 6, in <module>\r\n    from _pytest.assertion import register_assert_rewrite\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/assertion/__init__.py\", line 6, in <module>\r\n    from _pytest.assertion import rewrite\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.py\", line 462\r\n    def _get_assertion_exprs(src: bytes):  # -> Dict[int, str]\r\n                                ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\n```bash\r\n# python -V\r\nPython 2.7.5\r\n```\r\n\r\n```python\r\n# python\r\nPython 2.7.5 (default, Jun 20 2019, 20:27:34)\r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pytest\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/pytest.py\", line 6, in <module>\r\n    from _pytest.assertion import register_assert_rewrite\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/assertion/__init__.py\", line 6, in <module>\r\n    from _pytest.assertion import rewrite\r\n  File \"/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.py\", line 462\r\n    def _get_assertion_exprs(src: bytes):  # -> Dict[int, str]\r\n                                ^\r\nSyntaxError: invalid syntax\r\n\r\n```\r\n\r\nAny idea what the issue could be ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/459", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/459/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/459/events", "html_url": "https://github.com/philpep/testinfra/issues/459", "id": 462600105, "node_id": "MDU6SXNzdWU0NjI2MDAxMDU=", "number": 459, "title": "Using kubeconfig to connect to kubernetes", "user": {"login": "shikaan", "id": 17052868, "node_id": "MDQ6VXNlcjE3MDUyODY4", "avatar_url": "https://avatars1.githubusercontent.com/u/17052868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shikaan", "html_url": "https://github.com/shikaan", "followers_url": "https://api.github.com/users/shikaan/followers", "following_url": "https://api.github.com/users/shikaan/following{/other_user}", "gists_url": "https://api.github.com/users/shikaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/shikaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shikaan/subscriptions", "organizations_url": "https://api.github.com/users/shikaan/orgs", "repos_url": "https://api.github.com/users/shikaan/repos", "events_url": "https://api.github.com/users/shikaan/events{/privacy}", "received_events_url": "https://api.github.com/users/shikaan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-01T09:08:43Z", "updated_at": "2019-07-08T06:57:15Z", "closed_at": "2019-07-08T06:57:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\nI was trying to use `kubectl` as host, but I need to use the appropriate kubeconfig file to access the cluster.\r\n\r\nI have tried something along the lines of:\r\n\r\n```\r\npytest --host=\"kubectl://${WEBSERVER}?kubeconfig=.kubeconfig/development\" ./tests/test_web_server.py\r\n```\r\n\r\nbut that did not work, as I am getting\r\n\r\n```\r\nE               AssertionError: Unexpected exit code 1 for CommandResult(command=b'kubectl exec *** -- /bin/sh -c \\'systeminfo | findstr /B /C:\"OS\"\\'', exit_status=1, stdout=None, stderr=b'The connection to the server localhost:8080 was refused - did you specify the right host or port?\\n')\r\nE               assert 1 == 0\r\nE                +  where 1 = CommandResult(command=b'kubectl exec *** -- /bin/sh -c \\'systeminfo | findstr /B /C:\"OS\"\\'', exit_sta...ut=None, stderr=b'The connection to the server localhost:8080 was refused - did you specify the right host or port?\\n').rc\r\n```\r\n\r\nAs far as I can tell by this log, that was the wrong query-string option as the `--kubeconfig` options does not appear in the executed command. Unfortunately I did not find anything about that in docs.\r\n\r\nIs this feature there?\r\n\r\nIf yes, can I help with documentation?\r\nIf not, can I help with implementation?\r\n\r\nThanks for the great work ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/456", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/456/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/456/events", "html_url": "https://github.com/philpep/testinfra/issues/456", "id": 454376630, "node_id": "MDU6SXNzdWU0NTQzNzY2MzA=", "number": 456, "title": "Use plain ssh for ansible connection", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-10T21:15:00Z", "updated_at": "2019-08-09T15:57:58Z", "closed_at": "2019-08-09T15:57:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Since testinfra 3.X we use paramiko connection for ansible ssh hosts.\r\nWe shoud move to plain ssh instead because:\r\n\r\n* it's the default in ansible (people may expect a full support of their ~/.ssh/config)\r\n* paramiko add a python module dependency\r\n* ssh with ControlMaster and ControlPersist will handle lot of hosts better (see #452 )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/453", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/453/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/453/events", "html_url": "https://github.com/philpep/testinfra/issues/453", "id": 450977712, "node_id": "MDU6SXNzdWU0NTA5Nzc3MTI=", "number": 453, "title": "Handle all ansible connection types (was New Ansible Connection Backend (network_cli))", "user": {"login": "FragmentedPacket", "id": 29315002, "node_id": "MDQ6VXNlcjI5MzE1MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/29315002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FragmentedPacket", "html_url": "https://github.com/FragmentedPacket", "followers_url": "https://api.github.com/users/FragmentedPacket/followers", "following_url": "https://api.github.com/users/FragmentedPacket/following{/other_user}", "gists_url": "https://api.github.com/users/FragmentedPacket/gists{/gist_id}", "starred_url": "https://api.github.com/users/FragmentedPacket/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FragmentedPacket/subscriptions", "organizations_url": "https://api.github.com/users/FragmentedPacket/orgs", "repos_url": "https://api.github.com/users/FragmentedPacket/repos", "events_url": "https://api.github.com/users/FragmentedPacket/events{/privacy}", "received_events_url": "https://api.github.com/users/FragmentedPacket/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-31T20:55:08Z", "updated_at": "2019-08-10T12:46:18Z", "closed_at": "2019-08-10T12:46:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is related to the changes in #431. Could network_cli possibly be added back as a connection? It works fine in 2.1.0, but breaks 3.0.X or does this fall in the basket of licensing issues with Ansible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/452", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/452/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/452/events", "html_url": "https://github.com/philpep/testinfra/issues/452", "id": 450821123, "node_id": "MDU6SXNzdWU0NTA4MjExMjM=", "number": 452, "title": "Paramiko connections don't get closed", "user": {"login": "krepflap", "id": 28976978, "node_id": "MDQ6VXNlcjI4OTc2OTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/28976978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krepflap", "html_url": "https://github.com/krepflap", "followers_url": "https://api.github.com/users/krepflap/followers", "following_url": "https://api.github.com/users/krepflap/following{/other_user}", "gists_url": "https://api.github.com/users/krepflap/gists{/gist_id}", "starred_url": "https://api.github.com/users/krepflap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krepflap/subscriptions", "organizations_url": "https://api.github.com/users/krepflap/orgs", "repos_url": "https://api.github.com/users/krepflap/repos", "events_url": "https://api.github.com/users/krepflap/events{/privacy}", "received_events_url": "https://api.github.com/users/krepflap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-31T14:16:04Z", "updated_at": "2019-08-09T15:57:59Z", "closed_at": "2019-08-09T15:57:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running my tests against a large inventory, I can see I'm hitting the max open file descriptors with 1000+ `ESTABLISHED` connections belonging to py.test process.\r\n\r\nCan you see how this behaves at your end? Probably we need to close the connections during testing? Thanks :)\r\n\r\nhttp://docs.paramiko.org/en/2.4/api/client.html#paramiko.client.SSHClient.close", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/449", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/449/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/449/events", "html_url": "https://github.com/philpep/testinfra/issues/449", "id": 449877074, "node_id": "MDU6SXNzdWU0NDk4NzcwNzQ=", "number": 449, "title": "How to set connection timeout?", "user": {"login": "krepflap", "id": 28976978, "node_id": "MDQ6VXNlcjI4OTc2OTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/28976978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krepflap", "html_url": "https://github.com/krepflap", "followers_url": "https://api.github.com/users/krepflap/followers", "following_url": "https://api.github.com/users/krepflap/following{/other_user}", "gists_url": "https://api.github.com/users/krepflap/gists{/gist_id}", "starred_url": "https://api.github.com/users/krepflap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krepflap/subscriptions", "organizations_url": "https://api.github.com/users/krepflap/orgs", "repos_url": "https://api.github.com/users/krepflap/repos", "events_url": "https://api.github.com/users/krepflap/events{/privacy}", "received_events_url": "https://api.github.com/users/krepflap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-29T15:30:37Z", "updated_at": "2019-05-30T12:33:43Z", "closed_at": "2019-05-29T21:40:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `--hosts=all --ansible-inventory=inventory --connection ansible` where `inventory` is a file containing an Ansible inventory.\r\n\r\nHowever if there is a host unreachable (e.g. down or blocked by firewall), the tests take forever.\r\n\r\nHow can we set the timeout to be shorter?\r\n\r\nTo reproduce, just add something like `google.com` or so to your inventory file. I'm dealing with automated inventories and sometimes the host are just down, I'm looking for a way for them not to make the whole testrun slow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/447", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/447/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/447/events", "html_url": "https://github.com/philpep/testinfra/issues/447", "id": 448501296, "node_id": "MDU6SXNzdWU0NDg1MDEyOTY=", "number": 447, "title": "Testinfra 3.x get_variables does not work", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-25T20:47:44Z", "updated_at": "2019-05-29T07:34:34Z", "closed_at": "2019-05-29T07:34:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using ansible 2.8 and testinfra 3.0.4 we cannot get variables.  The same problem occurs with Ansible 2.7 when using testinfra 3.0.4.\r\n\r\nHowever, this works under ansible 2.7 and testinfra 2.1.0.  Looks like 3.x broke the `get_variables` functionality.\r\n\r\n```\r\nhost.ansible('setup')\r\nansible_vars = host.ansible.get_variables()\r\nansible_vars['ansible_os_family']\r\n```\r\n\r\n```\r\n    E       KeyError: 'ansible_os_family'\r\n```\r\n\r\n```\r\n[jodewey:~/git/ansible-role-chrony] \uf113  \uf126: issue-3(+2/-3)+ \u00b1 pip freeze | egrep 'testinfra|ansible'\r\nansible==2.8.0\r\ntestinfra==3.0.4\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/443", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/443/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/443/events", "html_url": "https://github.com/philpep/testinfra/issues/443", "id": 441896815, "node_id": "MDU6SXNzdWU0NDE4OTY4MTU=", "number": 443, "title": "ansible inventory groups not present in variables", "user": {"login": "dsavineau", "id": 3716865, "node_id": "MDQ6VXNlcjM3MTY4NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3716865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsavineau", "html_url": "https://github.com/dsavineau", "followers_url": "https://api.github.com/users/dsavineau/followers", "following_url": "https://api.github.com/users/dsavineau/following{/other_user}", "gists_url": "https://api.github.com/users/dsavineau/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsavineau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsavineau/subscriptions", "organizations_url": "https://api.github.com/users/dsavineau/orgs", "repos_url": "https://api.github.com/users/dsavineau/repos", "events_url": "https://api.github.com/users/dsavineau/events{/privacy}", "received_events_url": "https://api.github.com/users/dsavineau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T19:36:17Z", "updated_at": "2019-05-09T21:53:17Z", "closed_at": "2019-05-09T21:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if it's a bug or if it's related to the ansible_runner refact done in testinfra 3.0.2\r\n\r\nBefore 3.0.x release, we were collecting the ansible groups information from the inventory via the ansible variables :\r\n\r\n```python\r\n        ansible_vars = host.ansible.get_variables()\r\n        num_mons = len(ansible_vars[\"groups\"][\"mons\"])\r\n```\r\n\r\nIn testinfra 2.1.0 the `ansible_vars[\"groups\"]` is :\r\n```console\r\n{u'mgrs': [u'cephaio-1', u'cephaio-2', u'cephaio-3'], 'all': [u'cephaio-1', u'cephaio-2', u'cephaio-3'], u'clients': [u'cephaio-1', u'cephaio-2', u'cephaio-3'], u'osds': [u'cephaio-1', u'cephaio-2', u'cephaio-3'], 'ungrouped': [], u'mons': [u'cephaio-1', u'cephaio-2', u'cephaio-3'], u'mdss': [u'cephaio-1', u'cephaio-2', u'cephaio-3'], u'rgws': [u'cephaio-1', u'cephaio-2', u'cephaio-3']}\r\n```\r\n\r\nBut with testinfra 3.0.x the groups key isn't defined anymore.\r\n```python\r\n        ansible_vars = host.ansible.get_variables()\r\n>       num_mons = len(ansible_vars[\"groups\"][\"mons\"])\r\nE       KeyError: 'groups'\r\n```\r\n\r\nThe ansible hosts file looks like :\r\n```yaml\r\n[mons]\r\ncephaio-1\r\ncephaio-2\r\ncephaio-3\r\n\r\n[mgrs]\r\ncephaio-1\r\ncephaio-2\r\ncephaio-3\r\n\r\n[osds]\r\ncephaio-1\r\ncephaio-2\r\ncephaio-3\r\n\r\n[rgws]\r\ncephaio-1\r\ncephaio-2\r\ncephaio-3\r\n\r\n[mdss]\r\ncephaio-1\r\ncephaio-2\r\ncephaio-3\r\n\r\n[clients]\r\ncephaio-1\r\ncephaio-2\r\ncephaio-3\r\n```\r\n\r\nIs there another way to retrieve this information or is it a bug that breaks backward compatibility ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/442", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/442/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/442/events", "html_url": "https://github.com/philpep/testinfra/issues/442", "id": 441877948, "node_id": "MDU6SXNzdWU0NDE4Nzc5NDg=", "number": 442, "title": "Conda-forge package", "user": {"login": "knightdave", "id": 13086223, "node_id": "MDQ6VXNlcjEzMDg2MjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/13086223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knightdave", "html_url": "https://github.com/knightdave", "followers_url": "https://api.github.com/users/knightdave/followers", "following_url": "https://api.github.com/users/knightdave/following{/other_user}", "gists_url": "https://api.github.com/users/knightdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/knightdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knightdave/subscriptions", "organizations_url": "https://api.github.com/users/knightdave/orgs", "repos_url": "https://api.github.com/users/knightdave/repos", "events_url": "https://api.github.com/users/knightdave/events{/privacy}", "received_events_url": "https://api.github.com/users/knightdave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T18:48:29Z", "updated_at": "2019-05-10T07:53:03Z", "closed_at": "2019-05-10T07:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI wanted to add you package to [conda-forge](https://conda-forge.org/) repository. \r\n\r\nI've prepared everything in [my repo](https://github.com/knightdave/staged-recipes/tree/testinfra) and its ready to [create pull request](https://conda-forge.org/#add_recipe) to conda-forge repo.\r\n\r\nI wanted to ask, can I add you to [recipe-maintainers](https://github.com/conda-forge/staged-recipes/blob/4b85c979ad18b5d239e5848759a3c813a4f50a16/recipes/example/meta.yaml#L78). Documentation of conda-forge can be found [here](http://conda-forge.org/docs/user/00_intro.html).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/439", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/439/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/439/events", "html_url": "https://github.com/philpep/testinfra/issues/439", "id": 441293296, "node_id": "MDU6SXNzdWU0NDEyOTMyOTY=", "number": 439, "title": "3.0 breaks connections using ansible", "user": {"login": "alfredodeza", "id": 317847, "node_id": "MDQ6VXNlcjMxNzg0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/317847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredodeza", "html_url": "https://github.com/alfredodeza", "followers_url": "https://api.github.com/users/alfredodeza/followers", "following_url": "https://api.github.com/users/alfredodeza/following{/other_user}", "gists_url": "https://api.github.com/users/alfredodeza/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredodeza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredodeza/subscriptions", "organizations_url": "https://api.github.com/users/alfredodeza/orgs", "repos_url": "https://api.github.com/users/alfredodeza/repos", "events_url": "https://api.github.com/users/alfredodeza/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredodeza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-05-07T15:21:40Z", "updated_at": "2019-05-07T21:20:05Z", "closed_at": "2019-05-07T21:20:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying out version 3.0.1 with `--connection=ansible` and it breaks on `ansible_runner`. The same command works fine with 2.1.0:\r\n\r\n```\r\npytest -vvv --connection=ansible --ansible-inventory=hosts test_remote.py \r\ncollected 0 items / 1 errors                                                  \r\n\r\n=================================== ERRORS ====================================\r\n_______________________ ERROR collecting test_remote.py _______________________\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/pluggy/hooks.py:289: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/pluggy/manager.py:68: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/pluggy/manager.py:62: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/_pytest/python.py:238: in pytest_pycollect_makeitem\r\n    res = list(collector._genfunctions(name, obj))\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/_pytest/python.py:414: in _genfunctions\r\n    self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/pluggy/hooks.py:289: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/pluggy/manager.py:68: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/pluggy/manager.py:62: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/testinfra/plugin.py:113: in pytest_generate_tests\r\n    ansible_inventory=metafunc.config.option.ansible_inventory,\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/testinfra/host.py:143: in get_hosts\r\n    for backend in testinfra.backend.get_backends(hosts, **kwargs):\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/testinfra/backend/__init__.py:91: in get_backends\r\n    for name in klass.get_hosts(host, **kw):\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/testinfra/backend/ansible.py:59: in get_hosts\r\n    return AnsibleRunner.get_runner(inventory).get_hosts(host)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/site-packages/testinfra/utils/ansible_runner.py:124: in get_hosts\r\n    groupmatch = fnmatch.fnmatch(group, pattern)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/fnmatch.py:35: in fnmatch\r\n    pat = os.path.normcase(pat)\r\n../../../../.virtualenvs/ceph-volume/lib/python3.6/posixpath.py:54: in normcase\r\n    s = os.fspath(s)\r\nE   TypeError: expected str, bytes or os.PathLike object, not NoneType\r\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!\r\n```\r\n\r\nWith 2.1.0 is fine:\r\n\r\n```\r\npytest -vvv --connection=ansible --ansible-inventory=hosts test_remote.py\r\n============================= test session starts =============================\r\nplatform linux2 -- Python 2.7.16, pytest-4.4.1, py-1.8.0, pluggy-0.10.0 -- /tmp/27/bin/python2\r\ncachedir: .pytest_cache\r\nrootdir: /home/alfredo/python/\r\nplugins: testinfra-2.1.0\r\ncollected 2 items                                                             \r\n\r\ntest_remote.py::test_release_file[ansible://node2] PASSED               [ 50%]\r\ntest_remote.py::test_release_file[ansible://node3] PASSED               [100%]\r\n```\r\n\r\nThe test file:\r\n\r\n```\r\ndef test_release_file(host):\r\n    release_file = host.file(\"/etc/os-release\")\r\n    assert release_file.contains('CentOS')\r\n    assert release_file.contains('VERSION=\"7 (Core)\"')\r\n```\r\n\r\nAnd the hosts file:\r\n\r\n```\r\n[nginx]\r\nnode2\r\nnode3\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/437", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/437/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/437/events", "html_url": "https://github.com/philpep/testinfra/issues/437", "id": 440764596, "node_id": "MDU6SXNzdWU0NDA3NjQ1OTY=", "number": 437, "title": "ansible_runner error with ansible 2.8", "user": {"login": "dsavineau", "id": 3716865, "node_id": "MDQ6VXNlcjM3MTY4NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3716865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsavineau", "html_url": "https://github.com/dsavineau", "followers_url": "https://api.github.com/users/dsavineau/followers", "following_url": "https://api.github.com/users/dsavineau/following{/other_user}", "gists_url": "https://api.github.com/users/dsavineau/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsavineau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsavineau/subscriptions", "organizations_url": "https://api.github.com/users/dsavineau/orgs", "repos_url": "https://api.github.com/users/dsavineau/repos", "events_url": "https://api.github.com/users/dsavineau/events{/privacy}", "received_events_url": "https://api.github.com/users/dsavineau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-06T15:46:41Z", "updated_at": "2019-05-07T21:13:00Z", "closed_at": "2019-05-06T21:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying the latest testinfra release (3.0.0) with ansible 2.8 (rc2) but running into this issue:\r\n\r\n```console\r\ndev-centos-non_container-lvm_osds run-test: commands[7] | py.test -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory=/home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests/functional/lvm-osds/hosts /home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests/functional/tests\r\n[2211] /home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests/functional/lvm-osds$ /tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/bin/py.test -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory=/home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests/functional/lvm-osds/hosts /home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests/functional/tests\r\n============================= test session starts ==============================\r\nplatform linux2 -- Python 2.7.5, pytest-4.4.1, py-1.8.0, pluggy-0.9.0 -- /tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/bin/python\r\ncachedir: /tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/.pytest_cache\r\nrootdir: /home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests, inifile: pytest.ini\r\nplugins: testinfra-3.0.0, xdist-1.28.0, forked-1.0.2\r\n(...)\r\n==================================== ERRORS ====================================\r\n______________ ERROR collecting functional/tests/test_install.py _______________\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/pluggy/hooks.py:289: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/pluggy/manager.py:68: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/pluggy/manager.py:62: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/_pytest/python.py:238: in pytest_pycollect_makeitem\r\n    res = list(collector._genfunctions(name, obj))\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/_pytest/python.py:414: in _genfunctions\r\n    self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/pluggy/hooks.py:289: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/pluggy/manager.py:68: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/pluggy/manager.py:62: in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/testinfra/plugin.py:113: in pytest_generate_tests\r\n    ansible_inventory=metafunc.config.option.ansible_inventory,\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/testinfra/host.py:143: in get_hosts\r\n    for backend in testinfra.backend.get_backends(hosts, **kwargs):\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/testinfra/backend/__init__.py:91: in get_backends\r\n    for name in klass.get_hosts(host, **kw):\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/testinfra/backend/ansible.py:59: in get_hosts\r\n    return AnsibleRunner.get_runner(inventory).get_hosts(host)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib/python2.7/site-packages/testinfra/utils/ansible_runner.py:124: in get_hosts\r\n    groupmatch = fnmatch.fnmatch(group, pattern)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib64/python2.7/fnmatch.py:43: in fnmatch\r\n    return fnmatchcase(name, pat)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib64/python2.7/fnmatch.py:75: in fnmatchcase\r\n    res = translate(pat)\r\n/tmp/venv.YMrKxhXs5g/dev-centos-non_container-lvm_osds/lib64/python2.7/fnmatch.py:87: in translate\r\n    i, n = 0, len(pat)\r\nE   TypeError: object of type 'NoneType' has no len()\r\n```\r\nI also test 3.0.0 release with ansible 2.7 but the result is the same.\r\n\r\nThe ansible inventory file is really simple:\r\n```yaml\r\n[mons]\r\nmon0\r\n\r\n[osds]\r\nosd0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/435", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/435/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/435/events", "html_url": "https://github.com/philpep/testinfra/issues/435", "id": 440430694, "node_id": "MDU6SXNzdWU0NDA0MzA2OTQ=", "number": 435, "title": "Inconsistent test result between ansible and ssh backends", "user": {"login": "codequokka", "id": 50156460, "node_id": "MDQ6VXNlcjUwMTU2NDYw", "avatar_url": "https://avatars0.githubusercontent.com/u/50156460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codequokka", "html_url": "https://github.com/codequokka", "followers_url": "https://api.github.com/users/codequokka/followers", "following_url": "https://api.github.com/users/codequokka/following{/other_user}", "gists_url": "https://api.github.com/users/codequokka/gists{/gist_id}", "starred_url": "https://api.github.com/users/codequokka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codequokka/subscriptions", "organizations_url": "https://api.github.com/users/codequokka/orgs", "repos_url": "https://api.github.com/users/codequokka/repos", "events_url": "https://api.github.com/users/codequokka/events{/privacy}", "received_events_url": "https://api.github.com/users/codequokka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-05T10:52:12Z", "updated_at": "2019-05-05T23:42:21Z", "closed_at": "2019-05-05T15:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI just created a simple test to check for python version:\r\n```\r\ndef test_python3_is_installed(host):\r\n    c = host.run('/opt/python3.6.4/bin/python3.6 -V')\r\n\r\n    assert c.stdout == 'Python 3.6.4'\r\n```\r\n\r\nI run pytest against same vagrant instance.\r\nBut test results are inconsistent by changing backend:\r\n\r\n- Test is passed with ansible backend\r\n```\r\n$ pytest --connection=ansible --ansible-inventory=.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory --hosts=default -vvv\r\n=================================================================== test session starts ====================================================================\r\nplatform darwin -- Python 3.7.3, pytest-4.4.1, py-1.8.0, pluggy-0.9.0 -- /Users/nbchk/.ghq/github.com/codequokka/pypro3-dev-env/.venv/bin/python3.7\r\ncachedir: .pytest_cache\r\nrootdir: /Users/nbchk/.ghq/github.com/codequokka/pypro3-dev-env\r\nplugins: testinfra-2.1.0\r\ncollected 1 item\r\n\r\ndeployment/roles/codequokka.ansible_role_pypro3/molecule/resources/tests/test_python3.py::test_python3_is_installed[ansible://default] PASSED        [100%]\r\n\r\n=========================================================== 1 passed in 1.91 seconds ===========================================================\r\n```\r\n\r\n- Test is failed with ssh backend\r\nstdout=b'Python 3.6.4\\n' has newline\r\n```\r\n$ pytest --connection=ssh --ansible-inventory=.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory --hosts=default -vvv\r\n=================================================================== test session starts ====================================================================\r\nplatform darwin -- Python 3.7.3, pytest-4.4.1, py-1.8.0, pluggy-0.9.0 -- /Users/nbchk/.ghq/github.com/codequokka/pypro3-dev-env/.venv/bin/python3.7\r\ncachedir: .pytest_cache\r\nrootdir: /Users/nbchk/.ghq/github.com/codequokka/pypro3-dev-env\r\nplugins: testinfra-2.1.0\r\ncollected 1 item\r\n\r\ndeployment/roles/codequokka.ansible_role_pypro3/molecule/resources/tests/test_python3.py::test_python3_is_installed[ssh://default] FAILED            [100%]\r\n\r\n========================================================================= FAILURES =========================================================================\r\n_________________________________________________________ test_python3_is_installed[ssh://default] _________________________________________________________\r\n\r\nhost = <testinfra.host.Host object at 0x110aa7320>\r\n\r\n    def test_python3_is_installed(host):\r\n        c = host.run('/opt/python3.6.4/bin/python3.6 -V')\r\n\r\n>       assert c.stdout == 'Python 3.6.4'\r\nE       AssertionError: assert 'Python 3.6.4\\n' == 'Python 3.6.4'\r\nE         - Python 3.6.4\r\nE         ?             -\r\nE         + Python 3.6.4\r\n\r\ndeployment/roles/codequokka.ansible_role_pypro3/molecule/resources/tests/test_python3.py:33: AssertionError\r\n-------------------------------------------------------------------- Captured log call ---------------------------------------------------------------------\r\nbase.py                    268 INFO     RUN CommandResult(command=b\"ssh default '/opt/python3.6.4/bin/python3.6 -V'\", exit_status=0, stdout=b'Python 3.6.4\\n', stderr=None)\r\n================================================================= 1 failed in 0.53 seconds =================================================================\r\n```\r\n\r\nIs there any difference between ansible and ssh backend?\r\n\r\n- Package info\r\n```\r\n$ pip list\r\nPackage        Version\r\n-------------- -------\r\nansible        2.7.10\r\nasn1crypto     0.24.0\r\natomicwrites   1.3.0\r\nattrs          19.1.0\r\nbcrypt         3.1.6\r\ncffi           1.12.3\r\ncryptography   2.6.1\r\nJinja2         2.10.1\r\nMarkupSafe     1.1.1\r\nmore-itertools 7.0.0\r\nparamiko       2.4.2\r\npip            19.1\r\npluggy         0.9.0\r\npy             1.8.0\r\npyasn1         0.4.5\r\npycparser      2.19\r\nPyNaCl         1.3.0\r\npytest         4.4.1\r\nPyYAML         5.1\r\nsetuptools     41.0.1\r\nsix            1.12.0\r\ntestinfra      2.1.0\r\nwheel          0.33.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/431", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/431/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/431/events", "html_url": "https://github.com/philpep/testinfra/issues/431", "id": 438507230, "node_id": "MDU6SXNzdWU0Mzg1MDcyMzA=", "number": 431, "title": "Ansible runner issues", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-04-29T21:03:57Z", "updated_at": "2019-05-05T14:18:03Z", "closed_at": "2019-05-05T14:18:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Here I sumarize issues related to the ansible backend runner.\r\n\r\nAnsible has been available as a \"connection backend\", meaning the use of ansible python api to execute commands on remote hosts. This have several issues:\r\n\r\n* The code is very hard to maintain because ansible doesn't have a stable python API. From https://docs.ansible.com/ansible/latest/dev_guide/developing_api.html \"This API is intended for internal Ansible use. Ansible may make changes to this API at any time that could break backward compatibility with older versions of the API. Because of this, external use is not supported by Ansible.\" We are currently no longer compatible with ansible 2.8\r\n\r\n* We are actually violating the license because ansible is GPL and testinfra is not (apache2), so importing ansible in python require the code to be under GPL.\r\n\r\nRequirements:\r\n\r\n* I want to exclude all solutions including writting code with the ansible python API. Every new release of ansible produce a large amount of work and frustration to me.\r\n\r\n* Fully backward compatible, at least for general usage (molecule should not break)\r\n\r\n* Should be fast (at least no slower than now).\r\n\r\nPossible solutions:\r\n\r\nhttps://github.com/ansible/ansible-runner first appeared to be a possible solution, but after reading the documentation and a bit of code, I think it's actually not providing the feature we need (note that I might have missed something...)\r\n\r\nI considered interfacing with ansible cli directly, but this will introduce a terrible performance regression.\r\n\r\nI think people using testinfra and ansible use the ansible backend for \"convenience\", because it can read the inventory, but only some tests actually require ansible (only those using the ansible module). Also I think most people use ansible with either local, ssh or docker connection and testinfra already have such connection backends.\r\n\r\nSo I propose to:\r\n\r\n* Write some code to parse/decode ansible configuration and inventory and convert them to testinfra local, ssh or docker backend. ``ansible-config`` and ``ansible-inventory`` tools can help here.\r\n\r\n* Reimplement the ansible module using ansible cli called in subprocess.\r\n\r\nThis will drop support for other ansible connection plugins (https://docs.ansible.com/ansible/latest/plugins/connection.html), but I think we can implement them later, we already have some code for kubectl, lxc, winrm.\r\n\r\nI already have an POC implementation of this and it works pretty well. I'll submit a PR soon.\r\n\r\nPlease leave a comment if you want to point me on your use case, I'll be happy to test implementation with your code !\r\n\r\nAlso special thanks to people that have tried to fix this issue by submitting PRs, especially @jctanner and @ianw , your work helped me a lot for sumarizing this issue and find this solution !\r\n\r\nRelated to #428 #410 and #401", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/426", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/426/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/426/events", "html_url": "https://github.com/philpep/testinfra/issues/426", "id": 434943401, "node_id": "MDU6SXNzdWU0MzQ5NDM0MDE=", "number": 426, "title": "incompatibility with ansible 2.8", "user": {"login": "dsavineau", "id": 3716865, "node_id": "MDQ6VXNlcjM3MTY4NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3716865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsavineau", "html_url": "https://github.com/dsavineau", "followers_url": "https://api.github.com/users/dsavineau/followers", "following_url": "https://api.github.com/users/dsavineau/following{/other_user}", "gists_url": "https://api.github.com/users/dsavineau/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsavineau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsavineau/subscriptions", "organizations_url": "https://api.github.com/users/dsavineau/orgs", "repos_url": "https://api.github.com/users/dsavineau/repos", "events_url": "https://api.github.com/users/dsavineau/events{/privacy}", "received_events_url": "https://api.github.com/users/dsavineau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T20:20:12Z", "updated_at": "2019-04-22T17:20:37Z", "closed_at": "2019-04-22T17:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to run testinfra with ansible 2.8 (2.8.0b1).\r\n\r\n```console\r\n$ /tmp/venv.vL09Zj4Tzh/ans28/bin/py.test -n 8 --durations=0 --sudo -v --connection=ansible --ansible-inventory=hosts tests/functional/tests\r\n============================= test session starts ==============================\r\nplatform linux2 -- Python 2.7.5, pytest-3.6.1, py-1.8.0, pluggy-0.6.0 -- /tmp/venv.vL09Zj4Tzh/ans28/bin/python\r\ncachedir: ../../.pytest_cache\r\nrootdir: /home/jenkins-build/build/workspace/ceph-ansible-prs-dev-centos-non_container-lvm_osds/tests, inifile: pytest.ini\r\nplugins: testinfra-1.19.0, xdist-1.27.0, forked-1.0.2\r\ngw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I\r\n(...)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/pluggy/__init__.py:617: in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/pluggy/__init__.py:222: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/pluggy/__init__.py:216: in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/_pytest/python.py:240: in pytest_pycollect_makeitem\r\n    res = list(collector._genfunctions(name, obj))\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/_pytest/python.py:432: in _genfunctions\r\n    self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/pluggy/__init__.py:617: in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/pluggy/__init__.py:222: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/pluggy/__init__.py:216: in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/testinfra/plugin.py:153: in pytest_generate_tests\r\n    ansible_inventory=metafunc.config.option.ansible_inventory,\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/testinfra/host.py:141: in get_hosts\r\n    for backend in testinfra.backend.get_backends(hosts, **kwargs):\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/testinfra/backend/__init__.py:91: in get_backends\r\n    for name in klass.get_hosts(host, **kw):\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/testinfra/backend/ansible.py:70: in get_hosts\r\n    return AnsibleRunner.get_runner(inventory).get_hosts(host)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/testinfra/utils/ansible_runner.py:76: in get_runner\r\n    cls._runners[inventory] = cls(inventory)\r\n/tmp/venv.vL09Zj4Tzh/ans28/lib/python2.7/site-packages/testinfra/utils/ansible_runner.py:153: in __init__\r\n    self.cli.options = self.cli.base_parser(\r\nE   AttributeError: 'PlaybookCLI' object has no attribute 'base_parser'\r\n```\r\n\r\nThis was run against testinfra-1.19.0 but I think this is also present in 2.x because the ansible_runner code is almost the same (still using base_parser)\r\n\r\nhttps://github.com/philpep/testinfra/blob/master/testinfra/utils/ansible_runner.py#L106", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/422", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/422/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/422/events", "html_url": "https://github.com/philpep/testinfra/issues/422", "id": 427450631, "node_id": "MDU6SXNzdWU0Mjc0NTA2MzE=", "number": 422, "title": "socket: bad parsing of ipv6 addresses", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-31T21:43:32Z", "updated_at": "2019-03-31T22:17:14Z", "closed_at": "2019-03-31T22:17:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Seems the output of ``ss`` utility has changed:\r\n\r\n```\r\n(debian stretch)\r\n$ ss --version\r\nss utility, iproute2-ss161212\r\n$ ss -lt\r\nState      Recv-Q Send-Q                                                Local Address:Port                                                                 Peer Address:Port                \r\nLISTEN     0      128                                                               *:ssh                                                                             *:*                    \r\nLISTEN     0      128                                                              :::ssh                                                                            :::*                    \r\n\r\n(ubuntu bionic)\r\n$ ss --version\r\nss utility, iproute2-ss180129\r\n$ ss -lt\r\nState                    Recv-Q                    Send-Q                                        Local Address:Port                                       Peer Address:Port                   \r\nLISTEN                   0                         128                                                 0.0.0.0:22                                              0.0.0.0:*                      \r\nLISTEN                   0                         128                                                    [::]:22                                                 [::]:*                      \r\n```\r\n\r\nThis break ``socket.is_listening`` method which expect \"::\" and \"0.0.0.0\" to be listening and we get \"[::]\" instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/420", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/420/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/420/events", "html_url": "https://github.com/philpep/testinfra/issues/420", "id": 426914678, "node_id": "MDU6SXNzdWU0MjY5MTQ2Nzg=", "number": 420, "title": "File/contains crash during failed assertion", "user": {"login": "duck-rh", "id": 19259504, "node_id": "MDQ6VXNlcjE5MjU5NTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/19259504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duck-rh", "html_url": "https://github.com/duck-rh", "followers_url": "https://api.github.com/users/duck-rh/followers", "following_url": "https://api.github.com/users/duck-rh/following{/other_user}", "gists_url": "https://api.github.com/users/duck-rh/gists{/gist_id}", "starred_url": "https://api.github.com/users/duck-rh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duck-rh/subscriptions", "organizations_url": "https://api.github.com/users/duck-rh/orgs", "repos_url": "https://api.github.com/users/duck-rh/repos", "events_url": "https://api.github.com/users/duck-rh/events{/privacy}", "received_events_url": "https://api.github.com/users/duck-rh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-29T10:18:36Z", "updated_at": "2019-04-01T02:44:58Z", "closed_at": "2019-03-30T10:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Quack,\r\n\r\nWhen using the `contains` method I got this trace (only when the assertion fails):\r\n\r\n```\r\n    >       assert control_host.file(result_file).contains(\"Testing 123..\")\r\n    \r\n    tests/test_default.py:30:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    /home/duck/.local/lib/python3.7/site-packages/_pytest/assertion/rewrite.py:431: in _should_repr_global_name\r\n        return not hasattr(obj, \"__name__\") and not callable(obj)\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    self = <testinfra.host.Host object at 0x7fb8628f3860>, name = '__name__'\r\n    \r\n        def __getattr__(self, name):\r\n    >       assert name in testinfra.modules.modules, name + \" is not a module\"\r\n    E       AssertionError: __name__ is not a module\r\n    E       assert '__name__' in {'ansible': 'ansible:Ansible', 'command': 'command:Command', 'facter': 'puppet:Facter', 'file': 'file:File', ...}\r\n    E        +  where {'ansible': 'ansible:Ansible', 'command': 'command:Command', 'facter': 'puppet:Facter', 'file': 'file:File', ...} = <module 'testinfra.modules' from '/home/duck/.local/lib/python3.7/site-packages/testinfra/modules/__init__.py'>.modules\r\n    E        +    where <module 'testinfra.modules' from '/home/duck/.local/lib/python3.7/site-packages/testinfra/modules/__init__.py'> = testinfra.modules\r\n    \r\n    /home/duck/.local/lib/python3.7/site-packages/testinfra/host.py:105: AssertionError\r\n```\r\n\r\nI was used to the behavior the host/service module was providing:\r\n\r\n```\r\n            srv = host.service(\"cron\")\r\n    >       assert srv.is_running\r\n    E       assert False\r\n    E        +  where False = <service cron>.is_running\r\n```\r\n\r\nI tried to use file/content and pass a second argument as message to assert (which works for equality tests for example) but it ends-up with the same crash.\r\n\r\n\\\\_o<\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/419", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/419/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/419/events", "html_url": "https://github.com/philpep/testinfra/issues/419", "id": 425510497, "node_id": "MDU6SXNzdWU0MjU1MTA0OTc=", "number": 419, "title": "Wheel for 1.19 changed, breaking installs with locked dependencies", "user": {"login": "conorsch", "id": 657862, "node_id": "MDQ6VXNlcjY1Nzg2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/657862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/conorsch", "html_url": "https://github.com/conorsch", "followers_url": "https://api.github.com/users/conorsch/followers", "following_url": "https://api.github.com/users/conorsch/following{/other_user}", "gists_url": "https://api.github.com/users/conorsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/conorsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/conorsch/subscriptions", "organizations_url": "https://api.github.com/users/conorsch/orgs", "repos_url": "https://api.github.com/users/conorsch/repos", "events_url": "https://api.github.com/users/conorsch/events{/privacy}", "received_events_url": "https://api.github.com/users/conorsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-26T16:06:28Z", "updated_at": "2019-04-22T17:19:38Z", "closed_at": "2019-04-22T17:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "On 2019-03-25, the wheel for testinfra 1.19 [uploaded to PyPI](https://pypi.org/project/testinfra/1.19.0/#files) changed, but the source tarball did not. \r\n\r\n![testinfra-pypi-wheel](https://user-images.githubusercontent.com/657862/55013382-3ee6f680-4fa6-11e9-863d-c284d3e230b7.png)\r\n\r\nThe sudden wheel change breaks installs of testinfra if the hashes were pinned, such as in a `requirements.txt` or (for our case) a `Pipfile.lock`. \r\n\r\nWhy did this wheel change? The reason Python package managers support version pinning is to alert maintainers that software _other than that_ which was explicitly approved during review is about to be installed. Appropriately, pipenv aborts the installation and complains about the hash mismatch.\r\n\r\nIf you have the ability to restore the old wheel file, please do, otherwise you may be breaking installs for anyone running 1.19 with pinned dependencies. We caught this in our CI system.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/418", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/418/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/418/events", "html_url": "https://github.com/philpep/testinfra/issues/418", "id": 424823109, "node_id": "MDU6SXNzdWU0MjQ4MjMxMDk=", "number": 418, "title": "service is_running error in Ubuntu 16.04 docker container", "user": {"login": "TomaszKlosinski", "id": 1906582, "node_id": "MDQ6VXNlcjE5MDY1ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1906582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomaszKlosinski", "html_url": "https://github.com/TomaszKlosinski", "followers_url": "https://api.github.com/users/TomaszKlosinski/followers", "following_url": "https://api.github.com/users/TomaszKlosinski/following{/other_user}", "gists_url": "https://api.github.com/users/TomaszKlosinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomaszKlosinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomaszKlosinski/subscriptions", "organizations_url": "https://api.github.com/users/TomaszKlosinski/orgs", "repos_url": "https://api.github.com/users/TomaszKlosinski/repos", "events_url": "https://api.github.com/users/TomaszKlosinski/events{/privacy}", "received_events_url": "https://api.github.com/users/TomaszKlosinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-25T10:23:23Z", "updated_at": "2019-04-01T16:10:21Z", "closed_at": "2019-04-01T08:35:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using molecule with testinfra. I have two contaieners: ubuntu 16.04 and ubuntu 18.04. On new version the test work, but on the older I get:\r\n```\r\n$ molecule verify\r\n(...)\r\n\r\n    ============================= test session starts ==============================\r\n    platform darwin -- Python 2.7.15, pytest-4.3.0, py-1.8.0, pluggy-0.9.0\r\n    rootdir: /Users/tomasz/ansible-playbooks/plays/haproxy/molecule/default, inifile:\r\n    plugins: testinfra-1.19.0\r\ncollected 4 items\r\n\r\n    tests/test_default.py ...F                                               [100%]\r\n\r\n    =================================== FAILURES ===================================\r\n    ______________ test_service_is_running[ansible://ladon.amana.vpn] ______________\r\n\r\n    host = <testinfra.host.Host object at 0x107235d50>\r\n\r\n        def test_service_is_running(host):\r\n            service = host.service('haproxy')\r\n\r\n    >       assert service.is_running\r\n\r\n    tests/test_default.py:26:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    self = <service haproxy>\r\n\r\n        @property\r\n        def is_running(self):\r\n            return self.run_expect(\r\n    >           [0, 3], \"systemctl is-active %s\", self.name).rc == 0\r\n    E       AssertionError: Unexpected exit code 1 for CommandResult(command=u'systemctl is-active haproxy', exit_status=1, stdout=u'', stderr=u'Failed to connect to bus: No such file or directory')\r\n    E       assert 1 in [0, 3]\r\n    E        +  where 1 = CommandResult(command=u'systemctl is-active haproxy', exit_status=1, stdout=u'', stderr=u'Failed to connect to bus: No such file or directory').rc\r\n\r\n    /usr/local/lib/python2.7/site-packages/testinfra/modules/service.py:107: AssertionError\r\n    ===================== 1 failed, 3 passed in 50.88 seconds ======================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/417", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/417/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/417/events", "html_url": "https://github.com/philpep/testinfra/issues/417", "id": 423975995, "node_id": "MDU6SXNzdWU0MjM5NzU5OTU=", "number": 417, "title": "setuptools_scm.version.SetuptoolsOutdatedWarning: your setuptools is too old", "user": {"login": "decentral1se", "id": 1991377, "node_id": "MDQ6VXNlcjE5OTEzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1991377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentral1se", "html_url": "https://github.com/decentral1se", "followers_url": "https://api.github.com/users/decentral1se/followers", "following_url": "https://api.github.com/users/decentral1se/following{/other_user}", "gists_url": "https://api.github.com/users/decentral1se/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentral1se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentral1se/subscriptions", "organizations_url": "https://api.github.com/users/decentral1se/orgs", "repos_url": "https://api.github.com/users/decentral1se/repos", "events_url": "https://api.github.com/users/decentral1se/events{/privacy}", "received_events_url": "https://api.github.com/users/decentral1se/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-21T22:52:51Z", "updated_at": "2019-03-27T17:30:37Z", "closed_at": "2019-03-23T19:40:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi there! \r\n\r\nWe've seen the following reported in Molecule (over in https://github.com/ansible/molecule/issues/1859#issue-423669576):\r\n\r\n```\r\n$ pip install --user molecule\r\n[...]\r\nCollecting testinfra==1.19.0 (from molecule==2.20)\r\n  Using cached https://files.pythonhosted.org/packages/2b/96/3c0eb74894acf3e026e437ee1b1161a200adb9c9a189c36bc4a92ed2db79/testinfra-1.19.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-asndpD/testinfra/setup.py\", line 59, in <module>\r\n        'six>=1.4',\r\n      File \"/usr/lib64/python2.7/distutils/core.py\", line 112, in setup\r\n        _setup_distribution = dist = klass(attrs)\r\n      File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 269, in __init__\r\n        _Distribution.__init__(self,attrs)\r\n      File \"/usr/lib64/python2.7/distutils/dist.py\", line 287, in __init__\r\n        self.finalize_options()\r\n      File \"/usr/lib/python2.7/site-packages/setuptools/dist.py\", line 302, in finalize_options\r\n        ep.load()(self, ep.name, value)\r\n      File \"/tmp/pip-build-asndpD/testinfra/setuptools_scm-3.2.0-py2.7.egg/setuptools_scm/integration.py\", line 10, in version_keyword\r\n      File \"/tmp/pip-build-asndpD/testinfra/setuptools_scm-3.2.0-py2.7.egg/setuptools_scm/version.py\", line 66, in _warn_if_setuptools_outdated\r\n    setuptools_scm.version.SetuptoolsOutdatedWarning: your setuptools is too old (<12)\r\n```\r\n\r\nThe comment in https://github.com/ansible/molecule/issues/1859#issuecomment-475332782 (slightly irate but well meaning, hope you understand :)) that argued for a fix over here in `testinfra`. It hinted at a solution where we could avoid `setuptools` being involved in the install process completely (I defer to @webknjaz at what that solution looks like).\r\n\r\nIf we're coming to an agreement, I have some time to commit for the fix.\r\n\r\nThanks for the good work here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/412", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/412/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/412/events", "html_url": "https://github.com/philpep/testinfra/issues/412", "id": 420057710, "node_id": "MDU6SXNzdWU0MjAwNTc3MTA=", "number": 412, "title": "Docks missing for Docker module", "user": {"login": "greenscar", "id": 4122160, "node_id": "MDQ6VXNlcjQxMjIxNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4122160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greenscar", "html_url": "https://github.com/greenscar", "followers_url": "https://api.github.com/users/greenscar/followers", "following_url": "https://api.github.com/users/greenscar/following{/other_user}", "gists_url": "https://api.github.com/users/greenscar/gists{/gist_id}", "starred_url": "https://api.github.com/users/greenscar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greenscar/subscriptions", "organizations_url": "https://api.github.com/users/greenscar/orgs", "repos_url": "https://api.github.com/users/greenscar/repos", "events_url": "https://api.github.com/users/greenscar/events{/privacy}", "received_events_url": "https://api.github.com/users/greenscar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-12T15:41:17Z", "updated_at": "2019-07-18T23:11:25Z", "closed_at": "2019-03-16T18:36:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://testinfra.readthedocs.io/en/latest/modules.html#file\r\n\r\nNo mention of Docker module or methods.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/401", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/401/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/401/events", "html_url": "https://github.com/philpep/testinfra/issues/401", "id": 403366108, "node_id": "MDU6SXNzdWU0MDMzNjYxMDg=", "number": 401, "title": "AnsibleRunnerV2 broken on upstream changes to PlaybookCLI in devel", "user": {"login": "jctanner", "id": 1869705, "node_id": "MDQ6VXNlcjE4Njk3MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1869705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jctanner", "html_url": "https://github.com/jctanner", "followers_url": "https://api.github.com/users/jctanner/followers", "following_url": "https://api.github.com/users/jctanner/following{/other_user}", "gists_url": "https://api.github.com/users/jctanner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jctanner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jctanner/subscriptions", "organizations_url": "https://api.github.com/users/jctanner/orgs", "repos_url": "https://api.github.com/users/jctanner/repos", "events_url": "https://api.github.com/users/jctanner/events{/privacy}", "received_events_url": "https://api.github.com/users/jctanner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-25T23:00:18Z", "updated_at": "2019-05-05T15:04:40Z", "closed_at": "2019-05-05T15:04:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n(venv) [jtanner@jtw530 role.1]$ python -c 'from testinfra.utils.ansible_runner import AnsibleRunnerV2; runner = AnsibleRunnerV2()'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/data/workspace.issues/AP-MOLECULE_COLLECTION_INIT/venv/lib/python3.7/site-packages/testinfra-1.16.0-py3.7.egg/testinfra/utils/ansible_runner.py\", line 153, in __init__\r\n    self.cli.options = self.cli.base_parser(\r\nAttributeError: 'PlaybookCLI' object has no attribute 'base_parser'\r\n(venv) [jtanner@jtw530 role.1]$\r\n```\r\n\r\nCaused by https://github.com/ansible/ansible/commit/7e92ff823e2bf97ee33c1b7ff87bb8acecb5ae77#diff-b54c875fc6bfd4d98dcc488f06a07bea\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/394", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/394/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/394/events", "html_url": "https://github.com/philpep/testinfra/issues/394", "id": 400896201, "node_id": "MDU6SXNzdWU0MDA4OTYyMDE=", "number": 394, "title": "Using removed pytest warning function for error reporting", "user": {"login": "loksonarius", "id": 7764106, "node_id": "MDQ6VXNlcjc3NjQxMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7764106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loksonarius", "html_url": "https://github.com/loksonarius", "followers_url": "https://api.github.com/users/loksonarius/followers", "following_url": "https://api.github.com/users/loksonarius/following{/other_user}", "gists_url": "https://api.github.com/users/loksonarius/gists{/gist_id}", "starred_url": "https://api.github.com/users/loksonarius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loksonarius/subscriptions", "organizations_url": "https://api.github.com/users/loksonarius/orgs", "repos_url": "https://api.github.com/users/loksonarius/repos", "events_url": "https://api.github.com/users/loksonarius/events{/privacy}", "received_events_url": "https://api.github.com/users/loksonarius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-01-18T21:30:55Z", "updated_at": "2019-01-19T16:40:34Z", "closed_at": "2019-01-19T16:36:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "So while playing around with molecule, I tried running my first Testinfra specs. All good, but things would fail before even running my test. Sample output:\r\n\r\n```\r\n    ============================= test session starts ==============================\r\n    platform darwin -- Python 3.6.5, pytest-4.1.1, py-1.7.0, pluggy-0.8.1\r\n    rootdir: /Users/myusernamehere/Projects/personal/consul-appliance/molecule/default, inifile:\r\n    plugins: testinfra-1.16.0\r\ncollected 2 items\r\n    INTERNALERROR> Traceback (most recent call last):\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/_pytest/main.py\", line 203, in wrap_session\r\n    INTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/_pytest/main.py\", line 242, in _main\r\n    INTERNALERROR>     config.hook.pytest_collection(session=session)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\n    INTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 68, in _hookexec\r\n    INTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 62, in <lambda>\r\n    INTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\n    INTERNALERROR>     return outcome.get_result()\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    INTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    INTERNALERROR>     res = hook_impl.function(*args)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/_pytest/main.py\", line 252, in pytest_collection\r\n    INTERNALERROR>     return session.perform_collect()\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/_pytest/main.py\", line 471, in perform_collect\r\n    INTERNALERROR>     hook.pytest_collection_finish(session=self)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/hooks.py\", line 284, in __call__\r\n    INTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 68, in _hookexec\r\n    INTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/manager.py\", line 62, in <lambda>\r\n    INTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 208, in _multicall\r\n    INTERNALERROR>     return outcome.get_result()\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    INTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    INTERNALERROR>     res = hook_impl.function(*args)\r\n    INTERNALERROR>   File \"/Users/myusernamehere/Projects/personal/consul-appliance/venv/lib/python3.6/site-packages/testinfra/plugin.py\", line 183, in pytest_collection_finish\r\n    INTERNALERROR>     session.config.warn('C1', msg)\r\n    INTERNALERROR> AttributeError: 'Config' object has no attribute 'warn'\r\n\r\n    ========================= no tests ran in 0.66 seconds =========================\r\n\r\n```\r\n\r\nI dug into the source code and found that the pytest hook function `pytest_collection_finish` (line 160 of `plugin.py` in the version of Testinfra I'm using), was failing to call `session.config.warn`.\r\n\r\nFrom this point, I've come to realize I can avoid this call entirely by using the non-deprecated syntax of `host.XXX` instead of passing `XXX` as a parameter (in my case, `XXX` was the `User` module). This means my tests are now able to run cause I avoid that conditional branch of the `if` tree entirely.\r\n\r\nFrom my digging before realizing this problem, I started looking through the [pytest_hookspec](https://docs.pytest.org/en/latest/_modules/_pytest/hookspec.html), which lead me to [this section of the pytest source code](https://github.com/pytest-dev/pytest/tree/master/src/_pytest), where I noticed [an oddly relevant commit message](https://github.com/pytest-dev/pytest/commit/fd48cd57f95d2c4e2f6f4e416d20c36b4484d094) that was linked to [this relevant discussion](https://github.com/pytest-dev/pytest/issues/2452). Based off that discussion, it seems like there was a plan to deprecate and fully remove the `.warn` function from the `Config` object. I couldn't understand what changes consumers needed to make as I'm a bit of a scrub when it comes to Python \ud83d\ude04 , but it looks like version 4.0.X of pytest will require calls to the `.warn` function to be replaced with some new usage of a warning system. I'd offer a code change, but I honestly am very new to Python, let alone what looks to be advanced Python programing.\r\n\r\nI don't have any pressing need for a fix on this, but wanted to open this issue in case a hard reason for adding pytest 4.0 support was needed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/387", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/387/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/387/events", "html_url": "https://github.com/philpep/testinfra/issues/387", "id": 380462462, "node_id": "MDU6SXNzdWUzODA0NjI0NjI=", "number": 387, "title": "Correctly parsing passwords containing `@` and `?`", "user": {"login": "jmillxyz", "id": 531476, "node_id": "MDQ6VXNlcjUzMTQ3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/531476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmillxyz", "html_url": "https://github.com/jmillxyz", "followers_url": "https://api.github.com/users/jmillxyz/followers", "following_url": "https://api.github.com/users/jmillxyz/following{/other_user}", "gists_url": "https://api.github.com/users/jmillxyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmillxyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmillxyz/subscriptions", "organizations_url": "https://api.github.com/users/jmillxyz/orgs", "repos_url": "https://api.github.com/users/jmillxyz/repos", "events_url": "https://api.github.com/users/jmillxyz/events{/privacy}", "received_events_url": "https://api.github.com/users/jmillxyz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-13T23:00:42Z", "updated_at": "2018-11-25T18:05:33Z", "closed_at": "2018-11-25T18:05:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using testinfra to verify that automated software installs occur as planned. It's great so far, thank you!\r\n\r\nHowever, AWS will often generate windows passwords that contain `@` and `?`, which confuses testinfra's argument parsing.\r\n\r\nFor reference, our current host string looks like this:\r\n```\r\nwinrm://username:password@ip_address:port?no_verify_ssl=true\r\n```\r\n\r\nWe'd like to help -- is there a suggested way to approach this?\r\n\r\nThe parsing algorithm we had in mind would be: `.split(\"?\")` on the last occurrence of a `?` in the string in order to identify arguments like `no_verify_ssl`.\r\n\r\nWe'd use the same approach for `@` -- splitting the string only on the last occurrence of that character to correctly identify passwords vs ip_address.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/383", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/383/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/383/events", "html_url": "https://github.com/philpep/testinfra/issues/383", "id": 374167716, "node_id": "MDU6SXNzdWUzNzQxNjc3MTY=", "number": 383, "title": "Logo license (usage guidelines)", "user": {"login": "yasny", "id": 6434693, "node_id": "MDQ6VXNlcjY0MzQ2OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6434693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yasny", "html_url": "https://github.com/yasny", "followers_url": "https://api.github.com/users/yasny/followers", "following_url": "https://api.github.com/users/yasny/following{/other_user}", "gists_url": "https://api.github.com/users/yasny/gists{/gist_id}", "starred_url": "https://api.github.com/users/yasny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yasny/subscriptions", "organizations_url": "https://api.github.com/users/yasny/orgs", "repos_url": "https://api.github.com/users/yasny/repos", "events_url": "https://api.github.com/users/yasny/events{/privacy}", "received_events_url": "https://api.github.com/users/yasny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-25T23:10:35Z", "updated_at": "2018-10-29T10:04:58Z", "closed_at": "2018-10-29T10:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to add some information regarding the license for the [Testinfra logo](https://github.com/philpep/testinfra/blob/master/doc/source/_static/logo.svg) like [Molecule has for their logo](https://molecule.readthedocs.io/en/latest/#license)? Or is everything being released under the [Apache License 2.0](https://github.com/philpep/testinfra/blob/master/LICENSE)?\r\n\r\nThe reason I'm asking is because I'm going to be giving a presentation at a large IT conference and I would like to use the Testinfra logo on my slides when I talk about how our company is testing Ansible roles with [Molecule](https://molecule.readthedocs.io/). I'm pretty sure this usage is OK, but my company is giving me a hard time with regards to copyrights/trademarks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/380", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/380/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/380/events", "html_url": "https://github.com/philpep/testinfra/issues/380", "id": 372113600, "node_id": "MDU6SXNzdWUzNzIxMTM2MDA=", "number": 380, "title": "testinfra 1.17.0 wheel installation does not work under python3", "user": {"login": "cboylan", "id": 231403, "node_id": "MDQ6VXNlcjIzMTQwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/231403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cboylan", "html_url": "https://github.com/cboylan", "followers_url": "https://api.github.com/users/cboylan/followers", "following_url": "https://api.github.com/users/cboylan/following{/other_user}", "gists_url": "https://api.github.com/users/cboylan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cboylan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cboylan/subscriptions", "organizations_url": "https://api.github.com/users/cboylan/orgs", "repos_url": "https://api.github.com/users/cboylan/repos", "events_url": "https://api.github.com/users/cboylan/events{/privacy}", "received_events_url": "https://api.github.com/users/cboylan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-19T20:57:38Z", "updated_at": "2018-10-27T15:22:26Z", "closed_at": "2018-10-27T15:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The wheel on pypi for testinfra 1.17.0 declares an unconditional dependency on importlib which should be for python 2.6 only. Unfortunately this causes testinfra installations under python3 (and probably python2.7?) to fail:\r\n\r\n```\r\nCollecting importlib (from testinfra)\r\n  Using cached https://files.pythonhosted.org/packages/31/77/3781f65cafe55480b56914def99022a5d2965a4bb269655c89ef2f1de3cd/importlib-1.0.4.zip\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/home/clark/tmp/git/testinfra/venv/lib/python3.6/site-packages/setuptools/__init__.py\", line 6, in <module>\r\n        import distutils.core\r\n      File \"/home/clark/tmp/git/testinfra/venv/lib64/python3.6/distutils/__init__.py\", line 4, in <module>\r\n        import imp\r\n      File \"/home/clark/tmp/git/testinfra/venv/lib64/python3.6/imp.py\", line 19, in <module>\r\n        from importlib._bootstrap import _ERR_MSG, _exec, _load, _builtin_from_name\r\n    ModuleNotFoundError: No module named 'importlib._bootstrap'\r\n```\r\n\r\nNote installing via `pip install /some/path/to/testinfra/git/repo` works as does `pip install --no-binary :all: testinfra`.\r\n\r\nI think this issue is purely with the generated wheel. Possibly because python2.6 is being used to generate the wheel which results in a not actually universal wheel.\r\n\r\nThe easiest workaround is likely to stop publishing wheels until python2.6 doesn't need to be supported. Or to use an extras_require in the setup() method for python2.6 to install importlib.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/376", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/376/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/376/events", "html_url": "https://github.com/philpep/testinfra/issues/376", "id": 363500858, "node_id": "MDU6SXNzdWUzNjM1MDA4NTg=", "number": 376, "title": "sysctl not in PATH", "user": {"login": "camillehuot", "id": 11615902, "node_id": "MDQ6VXNlcjExNjE1OTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/11615902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camillehuot", "html_url": "https://github.com/camillehuot", "followers_url": "https://api.github.com/users/camillehuot/followers", "following_url": "https://api.github.com/users/camillehuot/following{/other_user}", "gists_url": "https://api.github.com/users/camillehuot/gists{/gist_id}", "starred_url": "https://api.github.com/users/camillehuot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camillehuot/subscriptions", "organizations_url": "https://api.github.com/users/camillehuot/orgs", "repos_url": "https://api.github.com/users/camillehuot/repos", "events_url": "https://api.github.com/users/camillehuot/events{/privacy}", "received_events_url": "https://api.github.com/users/camillehuot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T10:03:32Z", "updated_at": "2018-09-26T08:39:20Z", "closed_at": "2018-09-25T21:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nhttps://github.com/philpep/testinfra/blob/99b9b6436ededf30496f47de53effda3a96a6cea/testinfra/modules/sysctl.py#L29\r\n\r\nWhat if sysctl is not in the PATH? (typically /sbin/sysctl) \r\nWould you recommend to depend on another playbook or role to configure the user to change the PATH before being able to run this test?\r\nOr to run this test with root privilege (which should have the correct PATH), while no root privileges are required?\r\n\r\nCould I suggest that you try to find sysctl in /sbin if it is not in the PATH? (Actually you would just have to append /sbin at the end of the user's path when executing this command)\r\n\r\nToday I'm getting this error:\r\n    =================================== FAILURES ===================================\r\n    _______________________ test_sysctls[ansible://instance] _______________________\r\n\r\n    host = <testinfra.host.Host object at 0x7ff31ab701a8>\r\n\r\n        def test_sysctls(host):\r\n    >       assert host.sysctl('fs.file-max') == '6815744'\r\n\r\n    tests/test_default.py:11:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    self = <sysctl>, name = 'fs.file-max'\r\n\r\n        def __call__(self, name):\r\n    >       value = self.check_output(\"sysctl -n %s\", name)\r\n    E       AssertionError: Unexpected exit code 127 for CommandResult(command='sysctl -n fs.file-max', exit_status=127, stdout='', stderr='/bin/sh: sysctl: command not found')\r\n    E       assert 127 == 0\r\n    E        +  where 127 = CommandResult(command='sysctl -n fs.file-max', exit_status=127, stdout='', stderr='/bin/sh: sysctl: command not found').rc\r\n\r\n    ../../../../ansible-virtualenv/lib/python3.6/site-packages/testinfra/modules/sysctl.py:29: AssertionError\r\n    =========================== 1 failed in 2.39 seconds ===========================", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/369", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/369/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/369/events", "html_url": "https://github.com/philpep/testinfra/issues/369", "id": 358374432, "node_id": "MDU6SXNzdWUzNTgzNzQ0MzI=", "number": 369, "title": "How can I use a wildcard in a content assertion", "user": {"login": "cavepopo", "id": 16035946, "node_id": "MDQ6VXNlcjE2MDM1OTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/16035946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cavepopo", "html_url": "https://github.com/cavepopo", "followers_url": "https://api.github.com/users/cavepopo/followers", "following_url": "https://api.github.com/users/cavepopo/following{/other_user}", "gists_url": "https://api.github.com/users/cavepopo/gists{/gist_id}", "starred_url": "https://api.github.com/users/cavepopo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cavepopo/subscriptions", "organizations_url": "https://api.github.com/users/cavepopo/orgs", "repos_url": "https://api.github.com/users/cavepopo/repos", "events_url": "https://api.github.com/users/cavepopo/events{/privacy}", "received_events_url": "https://api.github.com/users/cavepopo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660505, "node_id": "MDU6TGFiZWwxODc2NjA1MDU=", "url": "https://api.github.com/repos/philpep/testinfra/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-09T12:23:23Z", "updated_at": "2018-09-11T10:40:19Z", "closed_at": "2018-09-11T10:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI guess this is not directly related to testinfra (more python stuff or pytest stuff), but I did not know how to do this, so : \r\nI would like to use a wildcard inside a content assertion, something along : \r\n` assert (host_ip + '\\t\\t' + fqdn + '*' + hostname) in content`\r\n\r\nis it possible at all or is it not in the pytest philosophy and I am handling this the wrong way ?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/361", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/361/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/361/events", "html_url": "https://github.com/philpep/testinfra/issues/361", "id": 352691855, "node_id": "MDU6SXNzdWUzNTI2OTE4NTU=", "number": 361, "title": "The examples in iptables module are wrong", "user": {"login": "coaxial", "id": 2927869, "node_id": "MDQ6VXNlcjI5Mjc4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2927869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coaxial", "html_url": "https://github.com/coaxial", "followers_url": "https://api.github.com/users/coaxial/followers", "following_url": "https://api.github.com/users/coaxial/following{/other_user}", "gists_url": "https://api.github.com/users/coaxial/gists{/gist_id}", "starred_url": "https://api.github.com/users/coaxial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coaxial/subscriptions", "organizations_url": "https://api.github.com/users/coaxial/orgs", "repos_url": "https://api.github.com/users/coaxial/repos", "events_url": "https://api.github.com/users/coaxial/events{/privacy}", "received_events_url": "https://api.github.com/users/coaxial/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-21T20:12:50Z", "updated_at": "2018-08-31T16:53:26Z", "closed_at": "2018-08-31T16:53:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "`host.iptables().get_rules('table', 'CHAIN')` should be `host.iptables.rules('table', 'CHAIN')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/358", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/358/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/358/events", "html_url": "https://github.com/philpep/testinfra/issues/358", "id": 351900327, "node_id": "MDU6SXNzdWUzNTE5MDAzMjc=", "number": 358, "title": "Add a Network / Host / Dns module", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660502, "node_id": "MDU6TGFiZWwxODc2NjA1MDI=", "url": "https://api.github.com/repos/philpep/testinfra/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-08-19T12:46:23Z", "updated_at": "2019-02-11T16:29:47Z", "closed_at": "2019-02-11T16:29:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This module could provide network tests like ping / open tcp udp connections / dns resolution.\r\n\r\nExample:\r\n\r\n```\r\nassert host.network.resolve('google.com', type='NS', server='8.8.8.8') == set(['ns{}.google.com'.format(i) for i in range(1, 5)])\r\nassert host.network.resolve('example.com', type='A').ttl = 1982\r\n# ---> this could be implemented by using a smart object that resolve to a host set with additional attributes\r\nassert host.network.reachable('tcp://google.com:443')\r\nassert host.network.reachable('icmp://google.com')\r\nassert host.network.not_reachable('tcp://google.com:22', timeout=3)\r\n```\r\n\r\nI think the implementation could be a mix of `dig`, `nc`, `ping`.\r\n\r\nPlease feel free to explain what you want to do with such module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/357", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/357/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/357/events", "html_url": "https://github.com/philpep/testinfra/issues/357", "id": 351898955, "node_id": "MDU6SXNzdWUzNTE4OTg5NTU=", "number": 357, "title": "failing test ssh is running on alpine", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-19T12:25:39Z", "updated_at": "2018-08-19T16:32:56Z", "closed_at": "2018-08-19T16:32:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\r\n_____________________ test_ssh_service[docker://alpine_35] _____________________\r\n[gw1] linux -- Python 3.5.5 /home/travis/build/philpep/testinfra/.tox/py35/bin/python3.5\r\nhost = <testinfra.host.Host object at 0x7f155f359518>\r\ndocker_image = 'alpine_35'\r\n    @all_images\r\n    def test_ssh_service(host, docker_image):\r\n        if docker_image in (\"centos_6\", \"centos_7\", \"fedora\",\r\n                            \"alpine_35\", \"archlinux\"):\r\n            name = \"sshd\"\r\n        else:\r\n            name = \"ssh\"\r\n    \r\n        ssh = host.service(name)\r\n        if docker_image == \"ubuntu_xenial\":\r\n            assert not ssh.is_running\r\n        # FIXME: is_running test is broken for archlinux for unknown reason\r\n        elif docker_image != \"archlinux\":\r\n>           assert ssh.is_running\r\ntest/test_modules.py:120: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nself = <service sshd>\r\n    @property\r\n    def is_running(self):\r\n        # based on /lib/lsb/init-functions\r\n        # 0: program running\r\n        # 1: program is dead and pid file exists\r\n        # 3: not running and pid file does not exists\r\n        # 4: Unable to determine status\r\n        return self.run_expect(\r\n            [0, 1, 3], \"%s %s status\",\r\n>           self._service_command, self.name).rc == 0\r\nE       AssertionError: Unexpected exit code 8 for CommandResult(command=b'rc-service sshd status', exit_status=8, stdout=None, stderr=b' * status: starting\\n')\r\nE       assert 8 in [0, 1, 3]\r\nE        +  where 8 = CommandResult(command=b'rc-service sshd status', exit_status=8, stdout=None, stderr=b' * status: starting\\n').rc\r\n```\r\n\r\nI think we should handle exit code 8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/352", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/352/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/352/events", "html_url": "https://github.com/philpep/testinfra/issues/352", "id": 347135524, "node_id": "MDU6SXNzdWUzNDcxMzU1MjQ=", "number": 352, "title": "Socket Module is inconstant when run locally vs remotely", "user": {"login": "spartan782", "id": 11993750, "node_id": "MDQ6VXNlcjExOTkzNzUw", "avatar_url": "https://avatars0.githubusercontent.com/u/11993750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spartan782", "html_url": "https://github.com/spartan782", "followers_url": "https://api.github.com/users/spartan782/followers", "following_url": "https://api.github.com/users/spartan782/following{/other_user}", "gists_url": "https://api.github.com/users/spartan782/gists{/gist_id}", "starred_url": "https://api.github.com/users/spartan782/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spartan782/subscriptions", "organizations_url": "https://api.github.com/users/spartan782/orgs", "repos_url": "https://api.github.com/users/spartan782/repos", "events_url": "https://api.github.com/users/spartan782/events{/privacy}", "received_events_url": "https://api.github.com/users/spartan782/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-02T19:01:55Z", "updated_at": "2018-09-12T22:25:51Z", "closed_at": "2018-09-12T22:25:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a pretty simple test that doesn't behave as expected.  The snippet of code I am running is as follows.  \r\n```\r\ndef test_network_sockets(host):\r\n    scks = host.socket(\"tcp://0.0.0.0:22\").is_listening\r\n    assert( scks is True)\r\n\r\ndef test_loopback_ssh(host):\r\n    assert host.socket(\"tcp://127.0.0.1:22\").is_listening\r\n\r\ndef test_loopback_alt_http(host):\r\n    assert host.socket(\"tcp://127.0.0.1:8080\").is_listening\r\n```\r\nThis code is running against a Centos 7 host. I have tried executing from both a Window environment and Centos environment with similar results. the host is only listening on port 22, so if I understand the documentation correctly I would expect to see 2 failures? because I am listing on all interfaces for 22 not just the localhost. To attempt to keep this as concise and descriptive as possible I am going to truncate the duplicate errors. Running the following command from either remote host results in errors.\r\n\r\n### Remote execution prior to net-tools installation  \r\n     \r\n`$ py.test --host=192.168.1.42 test_socket.py --ssh-config=~/.ssh/config -vvvv`  \r\n```\r\n============================= test session starts =============================\r\nplatform win32 -- Python 2.7.13, pytest-3.7.0, py-1.5.4, pluggy-0.7.1 -- c:\\python27\\python.exe\r\ncachedir: .pytest_cache\r\nrootdir: C:\\Users\\John\\PycharmProjects\\perched-testinfra, inifile:\r\nplugins: testinfra-1.14.1\r\ncollected 3 items\r\n\r\nperched-test.py::test_network_sockets[paramiko://192.168.1.42] FAILED    [ 33%]\r\nperched-test.py::test_loopback_ssh[paramiko://192.168.1.42] FAILED       [ 66%]\r\nperched-test.py::test_loopback_alt_http[paramiko://192.168.1.42] FAILED  [100%]\r\n\r\n================================== FAILURES ===================================\r\n________________ test_network_sockets[paramiko://192.168.1.42] ________________\r\n\r\nhost = <testinfra.host.Host object at 0x03E62430>\r\n\r\n    def test_network_sockets(host):\r\n>       scks = host.socket(\"tcp://0.0.0.0:22\").is_listening\r\n\r\nperched-test.py:81:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nc:\\python27\\lib\\site-packages\\testinfra\\host.py:91: in __getattr__\r\n    obj = module_class.get_module(self)\r\nc:\\python27\\lib\\site-packages\\testinfra\\modules\\base.py:33: in get_module\r\n    klass = cls.get_module_class(_host)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'testinfra.modules.socket.Socket'>\r\nhost = <testinfra.host.Host object at 0x03E62430>\r\n\r\n    @classmethod\r\n    def get_module_class(cls, host):\r\n        if host.system_info.type == \"linux\":\r\n            if host.exists('ss'):\r\n                return LinuxSocketSS\r\n            elif host.exists('netstat'):\r\n                return LinuxSocketNetstat\r\n            else:\r\n                raise RuntimeError(\r\n>                   'could not use the Socket module, either \"ss\" or \"netstat\"'\r\nE                   RuntimeError: could not use the Socket module, either \"ss\" or \"netstat\" utility is required in $PATH\r\n\r\nc:\\python27\\lib\\site-packages\\testinfra\\modules\\socket.py:199: RuntimeError\r\n---------------------------- Captured stderr call -----------------------------\r\nINFO:testinfra:RUN CommandResult(command='uname -s', exit_status=0, stdout='Linux\\n', stderr=None)\r\nINFO:testinfra:RUN CommandResult(command='lsb_release -a', exit_status=127, stdout=None, stderr='bash: lsb_release: command not found\\n')\r\nINFO:testinfra:RUN CommandResult(command='cat /etc/os-release', exit_status=0, stdout='NAME=\"CentOS Linux\"\\nVERSION=\"7 (Core)\"\\nID=\"centos\"\\nID_LIKE=\"rhel fedora\"\\nVERSION_ID=\"7\"\\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\\nANSI_COLOR=\"0;31\"\\nCPE_NAME=\"cpe:/o:centos:centos:7\"\\nHOME_URL=\"https://www.centos.org/\"\\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\\n\\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\\nREDHAT_SUPPORT_PRODUCT=\"centos\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\\n\\n', stderr=None)\r\nINFO:testinfra:RUN CommandResult(command='command -v ss', exit_status=1, stdout=None, stderr=None)\r\nINFO:testinfra:RUN CommandResult(command='command -v netstat', exit_status=1, stdout=None, stderr=None)\r\n------------------------------ Captured log call ------------------------------\r\nbase.py                    241 INFO     RUN CommandResult(command='uname -s', exit_status=0, stdout='Linux\\n', stderr=None)\r\nbase.py                    241 INFO     RUN CommandResult(command='lsb_release -a', exit_status=127, stdout=None, stderr='bash: lsb_release: command not found\\n')\r\nbase.py                    241 INFO     RUN CommandResult(command='cat /etc/os-release', exit_status=0, stdout='NAME=\"CentOS Linux\"\\nVERSION=\"7 (Core)\"\\nID=\"centos\"\\nID_LIKE=\"rhel fedora\"\\nVERSION_ID=\"7\"\\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\\nANSI_COLOR=\"0;31\"\\nCPE_NAME=\"cpe:/o:centos:centos:7\"\\nHOME_URL=\"https://www.centos.org/\"\\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\\n\\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\\nREDHAT_SUPPORT_PRODUCT=\"centos\"\\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\\n\\n', stderr=None)\r\nbase.py                    241 INFO     RUN CommandResult(command='command -v ss', exit_status=1, stdout=None, stderr=None)\r\nbase.py                    241 INFO     RUN CommandResult(command='command -v netstat', exit_status=1, stdout=None, stderr=None)\r\n```\r\n  \r\nFor some reason it fails to detect `ss` when executed remotely, as where when executed locally on the machine as such succeeds.  \r\n\r\n### Local execution results \r\n\r\n`$ py.test test_socket.py -vvvv ` \r\n```\r\nplatform linux2 -- Python 2.7.5, pytest-3.7.0, py-1.5.4, pluggy-0.7.1 -- /usr/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /home/admin, inifile:\r\nplugins: celery-4.0.2, testinfra-1.14.1\r\ncollected 3 items\r\n\r\nsocket_test.py::test_network_sockets[local] PASSED                                                                                              [ 33%]\r\nsocket_test.py::test_loopback_ssh[local] PASSED                                                                                                 [ 66%]\r\nsocket_test.py::test_loopback_alt_http[local] FAILED                                                                                            [100%]\r\n\r\n====================================================================== FAILURES =======================================================================\r\n____________________________________________________________ test_loopback_alt_http[local] ____________________________________________________________\r\n\r\nhost = <testinfra.host.Host object at 0x7f3131b2f090>\r\n\r\n    def test_loopback_alt_http(host):\r\n>       assert host.socket(\"tcp://127.0.0.1:8080\").is_listening\r\nE       AssertionError: assert False\r\nE        +  where False = <socket tcp://127.0.0.1:8080>.is_listening\r\nE        +    where <socket tcp://127.0.0.1:8080> = <class 'testinfra.modules.base.LinuxSocketSS'>('tcp://127.0.0.1:8080')\r\nE        +      where <class 'testinfra.modules.base.LinuxSocketSS'> = <testinfra.host.Host object at 0x7f3131b2f090>.socket\r\n\r\nsocket_test.py:10: AssertionError\r\n---------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------\r\nINFO:testinfra:RUN CommandResult(command='ss --numeric --listening --tcp', exit_status=0, stdout='State      Recv-Q Send-Q Local Address:Port               Peer Address:Port              \\nLISTEN     0      50           *:37119                    *:*                  \\nLISTEN     0      50     127.0.0.1:9600                     *:*                  \\nLISTEN     0      128    127.0.0.1:5601                     *:*                  \\nLISTEN     0      50     127.0.0.1:9092                     *:*                  \\nLISTEN     0      50           *:2181                     *:*                  \\nLISTEN     0      5      127.0.0.1:5800                     *:*                  \\nLISTEN     0      128    192.168.1.42%enp0s31f6:9993                     *:*                  \\nLISTEN     0      128    127.0.0.1:9993                     *:*                  \\nLISTEN     0      128    127.0.0.1:6379                     *:*                  \\nLISTEN     0      128    192.168.1.42%enp0s31f6:48620                    *:*                  \\nLISTEN     0      128    192.168.1.42%enp0s31f6:48621                    *:*                  \\nLISTEN     0      128          *:80                       *:*                  \\nLISTEN     0      128    127.0.0.1:9200                     *:*                  \\nLISTEN     0      128    127.0.0.1:1234                     *:*                  \\nLISTEN     0      128    127.0.0.1:1235                     *:*                  \\nLISTEN     0      128    127.0.0.1:9300                     *:*                  \\nLISTEN     0      128          *:22                       *:*                  \\nLISTEN     0      100    127.0.0.1:25                       *:*                  \\nLISTEN     0      50           *:42489                    *:*                  \\nLISTEN     0      128         :::80                      :::*                  \\n', stderr=None)\r\n```\r\nI could be understanding the documentation incorrectly but shouldn't there be 2 failures? besides that I decided to take this a step further and try running remotely with netstat installed. Which seems to work but gives different results than the local run using `ss`\r\n\r\n### Remote execution after net-tools installation     \r\n\r\n`py.test --host=192.168.1.42 test_socket.py --ssh-config=~/.ssh/config -vvvv`\r\n```\r\nsocket_test.py::test_network_sockets[ssh://localhost] PASSED                                                                                    [ 33%]\r\nsocket_test.py::test_loopback_ssh[ssh://localhost] FAILED                                                                                       [ 66%]\r\nsocket_test.py::test_loopback_alt_http[ssh://localhost] FAILED                                                                                  [100%]\r\n\r\n====================================================================== FAILURES =======================================================================\r\n_________________________________________________________ test_loopback_ssh[paramiko://192.168.1.42] __________________________________________________________\r\n\r\nhost = <testinfra.host.Host object at 0x7f4b31934210>\r\n\r\n    def test_loopback_ssh(host):\r\n>       assert host.socket(\"tcp://127.0.0.1:22\").is_listening\r\nE       AssertionError: assert False\r\nE        +  where False = <socket tcp://127.0.0.1:22>.is_listening\r\nE        +    where <socket tcp://127.0.0.1:22> = <class 'testinfra.modules.base.LinuxSocketNetstat'>('tcp://127.0.0.1:22')\r\nE        +      where <class 'testinfra.modules.base.LinuxSocketNetstat'> = <testinfra.host.Host object at 0x7f4b31934210>.socket\r\n\r\nsocket_test.py:7: AssertionError\r\n---------------------------------------------------------------- Captured stderr call -----------------------------------------------------------------\r\nINFO:testinfra:RUN CommandResult(command='netstat -n -l -t', exit_status=0, stdout='Active Internet connections (only servers)\\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \\ntcp        0      0 0.0.0.0:37119           0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:9600          0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:5601          0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:9092          0.0.0.0:*               LISTEN     \\ntcp        0      0 0.0.0.0:2181            0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:5800          0.0.0.0:*               LISTEN     \\ntcp        0      0 192.168.1.42:9993       0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:9993          0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN     \\ntcp        0      0 192.168.1.42:48620      0.0.0.0:*               LISTEN     \\ntcp        0      0 192.168.1.42:48621      0.0.0.0:*               LISTEN     \\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:9200          0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:1234          0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:1235          0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:9300          0.0.0.0:*               LISTEN     \\ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     \\ntcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN     \\ntcp        0      0 0.0.0.0:42489           0.0.0.0:*               LISTEN     \\ntcp6       0      0 :::80                   :::*                    LISTEN     \\n', stderr=None)\r\n```\r\n\r\nThis could probably be spread over a couple of issues, but my biggest concern that I am trying to fix is getting testinfra to recognize the `ss`  binary when executed remotely so that I do not have to install net-tools.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/351", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/351/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/351/events", "html_url": "https://github.com/philpep/testinfra/issues/351", "id": 346212430, "node_id": "MDU6SXNzdWUzNDYyMTI0MzA=", "number": 351, "title": "Access to playbook vars in testinfra", "user": {"login": "dangoncalves", "id": 2377456, "node_id": "MDQ6VXNlcjIzNzc0NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2377456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangoncalves", "html_url": "https://github.com/dangoncalves", "followers_url": "https://api.github.com/users/dangoncalves/followers", "following_url": "https://api.github.com/users/dangoncalves/following{/other_user}", "gists_url": "https://api.github.com/users/dangoncalves/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangoncalves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangoncalves/subscriptions", "organizations_url": "https://api.github.com/users/dangoncalves/orgs", "repos_url": "https://api.github.com/users/dangoncalves/repos", "events_url": "https://api.github.com/users/dangoncalves/events{/privacy}", "received_events_url": "https://api.github.com/users/dangoncalves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-31T14:26:19Z", "updated_at": "2018-08-01T13:07:45Z", "closed_at": "2018-08-01T13:07:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Description\r\n--------------\r\nWhen setting some variables in default/main.yml or in vars/main.yml, these variables are accessible during the playbook execution. But we cannot access to them during the verify sequence with testinfra as a verifier.\r\n\r\nThis is probably due to the fact that testinfra doesn't run within the playbook (see https://github.com/philpep/testinfra/issues/266#issuecomment-346470406). It could be interesting if we had a method that permit to access to the playbook variables during the tests.book execution. But we cannot access to them during the verify sequence with testinfra as a verifier.\r\n\r\nHow to reproduce\r\n----------------------\r\n`git clone https://github.com/dangoncalves/testinfra_bug_variables.git`\r\n`cd testinfra_bug_variables`\r\n`molecule test`\r\n\r\nVersions\r\n-----------\r\nAnsible: 2.6.1\r\n\r\nMolecule: 2.16.0\r\n\r\nTestinfra: 1.14.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/347", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/347/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/347/events", "html_url": "https://github.com/philpep/testinfra/issues/347", "id": 343297947, "node_id": "MDU6SXNzdWUzNDMyOTc5NDc=", "number": 347, "title": "Ansible inventory loading targets incorrect hosts", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-21T05:01:47Z", "updated_at": "2018-07-23T11:55:45Z", "closed_at": "2018-07-23T11:49:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Molecule writes out an Ansible inventory file using the yaml format.  We then invoke the testinfra verifier and pass the yaml inventory file.\r\n\r\nThe testinfra tests are written and rely [testinfra_hosts](https://github.com/retr0h/molecule-vagrant-bug/blob/master/molecule/default/tests/test_default.py#L5-L6).  However, when doing this testinfra targets the wrong hosts when using 'all'.\r\n\r\nThis can be reproduced by:\r\n\r\n* Checkout https://github.com/retr0h/molecule-vagrant-bug\r\n* cd into the checkout\r\n* `pip install -r bad-requirements.txt`\r\n* run `molecule create` (on a system that has virtualbox, vagrant)\r\n* run `molecule verify`\r\n\r\nYou will see the following:\r\n\r\n```\r\n============================= test session starts ==============================\r\n    platform darwin -- Python 2.7.13, pytest-3.6.3, py-1.5.4, pluggy-0.6.0 -- /Users/jodewey/git/molecule-vagrant-bug/venv/bin/python2.7\r\n    rootdir: /Users/jodewey/git/molecule-vagrant-bug/molecule/default, inifile:\r\n    plugins: testinfra-1.13.1\r\ncollected 2 items\r\n\r\n    tests/test_default.py::test_hosts_file[ansible://ubuntu-bionic64] ubuntu-xenial64\r\n    PASSED\r\n    tests/test_default.py::test_hosts_file[ansible://ubuntu-xenial64] ubuntu-bionic64\r\n    PASSED\r\n\r\n=========================== 2 passed in 1.93 seconds ===========================\r\n```\r\n\r\nAs you see the Testinfra connection URL (which testinfra constructs) does not match the `hostname` print output from the test.\r\n\r\nThis problem started with Testinfra 1.13.1.  It appears to be fine in 1.13.0.\r\n\r\n```\r\npip install -r working-requirements.txt\r\nmolecule verify\r\n\r\n============================= test session starts ==============================\r\n    platform darwin -- Python 2.7.13, pytest-3.6.3, py-1.5.4, pluggy-0.6.0 -- /Users/jodewey/git/molecule-vagrant-bug/venv/bin/python2.7\r\n    rootdir: /Users/jodewey/git/molecule-vagrant-bug/molecule/default, inifile:\r\n    plugins: testinfra-1.13.0\r\ncollected 2 items\r\n\r\n    tests/test_default.py::test_hosts_file[ansible://ubuntu-xenial64] ubuntu-xenial64\r\n    PASSED\r\n    tests/test_default.py::test_hosts_file[ansible://ubuntu-bionic64] ubuntu-bionic64\r\n    PASSED\r\n=========================== 2 passed in 2.15 seconds ===========================\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/341", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/341/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/341/events", "html_url": "https://github.com/philpep/testinfra/issues/341", "id": 337505087, "node_id": "MDU6SXNzdWUzMzc1MDUwODc=", "number": 341, "title": "pip_package.get_packages() not compatible with pip 10", "user": {"login": "hed854", "id": 5430167, "node_id": "MDQ6VXNlcjU0MzAxNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5430167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hed854", "html_url": "https://github.com/hed854", "followers_url": "https://api.github.com/users/hed854/followers", "following_url": "https://api.github.com/users/hed854/following{/other_user}", "gists_url": "https://api.github.com/users/hed854/gists{/gist_id}", "starred_url": "https://api.github.com/users/hed854/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hed854/subscriptions", "organizations_url": "https://api.github.com/users/hed854/orgs", "repos_url": "https://api.github.com/users/hed854/repos", "events_url": "https://api.github.com/users/hed854/events{/privacy}", "received_events_url": "https://api.github.com/users/hed854/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-02T12:50:35Z", "updated_at": "2018-07-02T14:23:06Z", "closed_at": "2018-07-02T14:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following test fails if pip 10 or higher is installed.\r\n\r\n```python\r\nimport pytest\r\nfrom testinfra import *\r\n\r\ndef test_requirements(host):\r\n    print host.pip_package.get_packages()\r\n```\r\n\r\nYou get the following error msg:\r\n\r\n```\r\nself = <testinfra.modules.base.PipPackage object at 0x7fcab5c7bd10>, pip_path = 'pip'\r\n\r\n    def get_packages(self, pip_path=\"pip\"):\r\n        \"\"\"Get all installed packages and versions returned by `pip list`:\r\n    \r\n            >>> host.pip_package.get_packages(pip_path='~/venv/website/bin/pip')\r\n            {'Django': {'version': '1.10.2'},\r\n             'mywebsite': {'version': '1.0a3', 'path': '/srv/website'},\r\n             'psycopg2': {'version': '2.6.2'}}\r\n            \"\"\"\r\n        output_re = re.compile(r'^(.+) \\((.+)\\)$')\r\n        pkgs = {}\r\n        out = self.check_output(\"%s list --no-index\", pip_path)\r\n        for line in out.splitlines():\r\n            if line.startswith('Warning: '):\r\n                # Warning: cannot find svn location for rst2pdf==0.93.dev-r0\r\n                continue\r\n            match = output_re.match(line)\r\n            if match is None:\r\n>               raise RuntimeError(\"could not parse {0}\".format(repr(line)))\r\nE               RuntimeError: could not parse u'Package          Version'\r\n```\r\n\r\nIn fact, `pip list` returns an unexpected output for Testinfra, with fancy column headers:\r\n\r\nTo fix the bug, Testinfra should ask for the legacy format : `pip list --format=legacy`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/338", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/338/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/338/events", "html_url": "https://github.com/philpep/testinfra/issues/338", "id": 336904935, "node_id": "MDU6SXNzdWUzMzY5MDQ5MzU=", "number": 338, "title": "BSD Socket test error", "user": {"login": "kmonticolo", "id": 12016647, "node_id": "MDQ6VXNlcjEyMDE2NjQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/12016647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmonticolo", "html_url": "https://github.com/kmonticolo", "followers_url": "https://api.github.com/users/kmonticolo/followers", "following_url": "https://api.github.com/users/kmonticolo/following{/other_user}", "gists_url": "https://api.github.com/users/kmonticolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmonticolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmonticolo/subscriptions", "organizations_url": "https://api.github.com/users/kmonticolo/orgs", "repos_url": "https://api.github.com/users/kmonticolo/repos", "events_url": "https://api.github.com/users/kmonticolo/events{/privacy}", "received_events_url": "https://api.github.com/users/kmonticolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-29T08:12:44Z", "updated_at": "2018-07-05T17:22:56Z", "closed_at": "2018-07-05T17:22:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "On OpenBSD 6.3\r\nI have simpliest socket test:\r\ndef test_port(Socket):\r\n    assert Socket(\"tcp://0.0.0.0:10050\").is_listening\r\n\r\nwhich throws: \r\n```\r\n                address = splitted[3]\r\n                host, port = address.rsplit(\".\", 1)\r\n>               port = int(port)\r\nE               ValueError: invalid literal for int() with base 10: '*'\r\n\r\n/usr/local/lib/python2.7/site-packages/testinfra/modules/socket.py:314: ValueError\r\n```\r\nbut test is passing when I put \"port = int(10050)\" instead of \"port = int(port)\" in /usr/local/lib/python2.7/site-packages/testinfra/modules/socket.py:314\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/332", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/332/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/332/events", "html_url": "https://github.com/philpep/testinfra/issues/332", "id": 328855273, "node_id": "MDU6SXNzdWUzMjg4NTUyNzM=", "number": 332, "title": "Failing tests in master", "user": {"login": "codylane", "id": 1258262, "node_id": "MDQ6VXNlcjEyNTgyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1258262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codylane", "html_url": "https://github.com/codylane", "followers_url": "https://api.github.com/users/codylane/followers", "following_url": "https://api.github.com/users/codylane/following{/other_user}", "gists_url": "https://api.github.com/users/codylane/gists{/gist_id}", "starred_url": "https://api.github.com/users/codylane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codylane/subscriptions", "organizations_url": "https://api.github.com/users/codylane/orgs", "repos_url": "https://api.github.com/users/codylane/repos", "events_url": "https://api.github.com/users/codylane/events{/privacy}", "received_events_url": "https://api.github.com/users/codylane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-03T19:31:47Z", "updated_at": "2018-06-04T11:51:18Z", "closed_at": "2018-06-04T11:51:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am opening this issue because someone introduced some failing tests and that got merged into master about a week ago.\r\n\r\n```\r\n# pip list\r\nPackage           Version  \r\n----------------- ---------\r\nansible           2.5.3    \r\napipkg            1.4      \r\nasn1crypto        0.24.0   \r\natomicwrites      1.1.5    \r\nattrs             18.1.0   \r\nbackports-abc     0.5      \r\nbcrypt            3.1.4    \r\ncertifi           2018.4.16\r\ncffi              1.11.5   \r\nchardet           3.0.4    \r\ncoverage          4.5.1    \r\ncryptography      2.2.2    \r\nenum34            1.1.6    \r\nexecnet           1.5.0    \r\nflake8            2.6.2    \r\nfuncsigs          1.0.2    \r\nfutures           3.2.0    \r\nhacking           1.1.0    \r\nidna              2.6      \r\ninvoke            1.0.0    \r\nipaddress         1.0.22   \r\nJinja2            2.10     \r\nMarkupSafe        1.0      \r\nmccabe            0.5.3    \r\nmock              2.0.0    \r\nmore-itertools    4.2.0    \r\nmsgpack-python    0.5.6    \r\nntlm-auth         1.1.0    \r\nparamiko          2.4.1    \r\npbr               4.0.3    \r\npip               10.0.1   \r\npluggy            0.6.0    \r\npy                1.5.3    \r\npyasn1            0.4.3    \r\npycodestyle       2.0.0    \r\npycparser         2.18     \r\npycrypto          2.6.1    \r\npyflakes          1.2.3    \r\nPyNaCl            1.2.1    \r\npytest            3.6.0    \r\npytest-cov        2.5.1    \r\npytest-forked     0.2      \r\npytest-xdist      1.22.2   \r\npywinrm           0.3.0    \r\nPyYAML            3.12     \r\npyzmq             17.0.0   \r\nrequests          2.18.4   \r\nrequests-ntlm     1.1.0    \r\nsalt              2018.3.0 \r\nsetuptools        39.0.1   \r\nsingledispatch    3.4.0.3  \r\nsix               1.11.0   \r\nstevedore         1.28.0   \r\ntestinfra         1.13.1   \r\ntornado           4.5.3    \r\ntox               3.0.0    \r\nurllib3           1.22     \r\nvirtualenv        16.0.0   \r\nvirtualenv-clone  0.3.0    \r\nvirtualenvwrapper 4.8.2    \r\nxmltodict         0.11.0\r\n```\r\n\r\n## How to reproduce\r\n- `pip install testinfra==1.13.1`\r\n- `cd testinfra`\r\n- `pytest -vs test`\r\n\r\nor \r\n- See this [Travis-CI Failure](https://travis-ci.org/philpep/testinfra/jobs/385213878) introduced a failing test.\r\n\r\nFor convenience here is the output of the failing test\r\n\r\n```\r\n________________________________________________________________________________________________________________________ test_file[docker://debian_stretch] _________________________________________________________________________________________________________________________\r\n\r\nhost = <testinfra.host.Host object at 0x7fc474146710>\r\n\r\n    def test_file(host):\r\n        host.check_output(\"mkdir -p /d && printf foo > /d/f && chmod 600 /d/f\")\r\n        d = host.file(\"/d\")\r\n        assert d.is_directory\r\n        assert not d.is_file\r\n        f = host.file(\"/d/f\")\r\n        assert f.exists\r\n        assert f.is_file\r\n        assert f.content == b\"foo\"\r\n        assert f.content_string == \"foo\"\r\n        assert f.user == \"root\"\r\n        assert f.uid == 0\r\n        assert f.gid == 0\r\n        assert f.group == \"root\"\r\n        assert f.mode == 0o600\r\n        assert f.contains(\"fo\")\r\n        assert not f.is_directory\r\n        assert not f.is_symlink\r\n        assert not f.is_pipe\r\n        assert f.linked_to == \"/d/f\"\r\n        assert f.size == 3\r\n        assert f.md5sum == \"acbd18db4cc2f85cedef654fccc4a4d8\"\r\n        assert f.sha256sum == (\r\n            \"2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae\"\r\n        )\r\n        host.check_output(\"ln -fsn /d/f /d/l\")\r\n        l = host.file(\"/d/l\")\r\n        assert l.is_symlink\r\n        assert l.is_file\r\n        assert l.linked_to == \"/d/f\"\r\n>       assert l.linked_to == f\r\nE       AssertionError: assert '/d/f' == <file /d/f>\r\nE        +  where '/d/f' = <file /d/l>.linked_to\r\n\r\ntest/test_modules.py:298: AssertionError\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/331", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/331/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/331/events", "html_url": "https://github.com/philpep/testinfra/issues/331", "id": 328077541, "node_id": "MDU6SXNzdWUzMjgwNzc1NDE=", "number": 331, "title": "how to import class and give arguments?", "user": {"login": "michaelhajjar", "id": 37404682, "node_id": "MDQ6VXNlcjM3NDA0Njgy", "avatar_url": "https://avatars0.githubusercontent.com/u/37404682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelhajjar", "html_url": "https://github.com/michaelhajjar", "followers_url": "https://api.github.com/users/michaelhajjar/followers", "following_url": "https://api.github.com/users/michaelhajjar/following{/other_user}", "gists_url": "https://api.github.com/users/michaelhajjar/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelhajjar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelhajjar/subscriptions", "organizations_url": "https://api.github.com/users/michaelhajjar/orgs", "repos_url": "https://api.github.com/users/michaelhajjar/repos", "events_url": "https://api.github.com/users/michaelhajjar/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelhajjar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-31T10:10:03Z", "updated_at": "2018-06-01T12:02:35Z", "closed_at": "2018-06-01T12:02:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a question. I have created a class with some tests.\r\nI would like to add the class to a CLI tool we are creating (in the cement framework) and add arguments to it.\r\nHow can I add arguments in the class since the __init__ costructor is not working?\r\nis is for the backend configuration (paramiko with a username arg, server arg and private_key arg).\r\n\r\nhere is the test:\r\n\r\n```\r\nimport testinfra\r\nimport pytest\r\n\r\n\r\nclass TestTemp(object):\r\n\r\n    # establish connection to server\r\n    connect = testinfra.get_host(\"paramiko://usernamearg@serverarg\", ssh_identity_file=private_keyarg)\r\n\r\n\r\n    # test if packages are installed, before template creation\r\n    def test_pkg_installed(self):\r\n        # define packages that need to be checked\r\n        packages = [\"cloud-init\", \"open-vm-tools\", \"perl\"]\r\n\r\n        for pkg in packages:\r\n            assert self.connect.package(pkg).is_installed\r\n\r\n\r\n    # test if service is enabled\r\n    def test_service_enabled(self):\r\n        # define services that need to be checked\r\n        packages = [\"vmtoolsd\", \"cloud-init\", \"sshd\"]\r\n\r\n        for pkg in packages:\r\n            service = self.connect.service(pkg)\r\n            assert service.is_enabled\r\n\r\n\r\n    # test if service is enabled\r\n    def test_service_running(self):\r\n        # define services that need to be running\r\n        packages = [\"vmtoolsd\"]\r\n\r\n        for pkg in packages:\r\n            service = self.connect.service(pkg)\r\n            assert service.is_running\r\n\r\n\r\n    # test if repo exists\r\n    def test_repo_exists(self):\r\n        # define repos that need to be checked\r\n        repos = [\"repo_os\", \"repo_updates\", \"repo_saltstack\",\r\n                 \"repo_epel\", \"repo_duo\", \"repo_cloud_init\",\r\n                 \"repo_extras\", \"repo_ansible\"]\r\n\r\n        for repo in repos:\r\n            repo_path = \"/etc/yum.repos.d/\" + repo + \".repo\"\r\n            h_file = self.connect.file\r\n            assert h_file(repo_path).exists\r\n\r\n\r\n    def test_yum_update(self):\r\n        assert self.connect.check_output(\"yum check-update\")\r\n\r\n\r\ndef run_tests():\r\n  pytest.main(['-v', '--disable-warnings', '-r', 'P'])\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/327", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/327/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/327/events", "html_url": "https://github.com/philpep/testinfra/issues/327", "id": 327131454, "node_id": "MDU6SXNzdWUzMjcxMzE0NTQ=", "number": 327, "title": "SysvService has a subtle flaw if rc?.d directories are symlinks", "user": {"login": "codylane", "id": 1258262, "node_id": "MDQ6VXNlcjEyNTgyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1258262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codylane", "html_url": "https://github.com/codylane", "followers_url": "https://api.github.com/users/codylane/followers", "following_url": "https://api.github.com/users/codylane/following{/other_user}", "gists_url": "https://api.github.com/users/codylane/gists{/gist_id}", "starred_url": "https://api.github.com/users/codylane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codylane/subscriptions", "organizations_url": "https://api.github.com/users/codylane/orgs", "repos_url": "https://api.github.com/users/codylane/repos", "events_url": "https://api.github.com/users/codylane/events{/privacy}", "received_events_url": "https://api.github.com/users/codylane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-28T23:18:26Z", "updated_at": "2018-06-01T08:18:23Z", "closed_at": "2018-06-01T08:18:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While testing this afternoon, I noticed another small issue if a system under test uses the `SysvService` to check for service state.  This one is very subtle and didn't catch my eye right away.\r\n\r\nhttps://github.com/philpep/testinfra/blob/master/testinfra/modules/service.py#L93-L98\r\n\r\ncould be changed to this which follows symlinks incase the `rc?.d` are symlinks because on some Linux machines they are indeed symlinks.  \r\n\r\n```\r\ndiff --git a/testinfra/modules/service.py b/testinfra/modules/service.py\r\nindex 7b3b197..ad1b7e0 100644\r\n--- a/testinfra/modules/service.py\r\n+++ b/testinfra/modules/service.py\r\n@@ -133,7 +133,7 @@ class SysvService(Service):\r\n     @property\r\n     def is_enabled(self):\r\n         return bool(self.check_output(\r\n-            \"find /etc/rc?.d/ -name %s\",\r\n+            \"find -L /etc/rc?.d/ -name %s\",\r\n             \"S??\" + self.name,\r\n         ))\r\n\r\n```\r\n\r\nHere is an example of a Linux box with `rc?.d` symlinks.  The change above should behave the same with or without symlinks.  Without the patch, `is_enabled` would always return `False`.\r\n\r\n`cat /etc/redhat-release`\r\n```\r\nCentOS release 6.9 (Final)\r\n```\r\n\r\n` ls -ld /etc/rc?.d`\r\n```\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc0.d -> rc.d/rc0.d\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc1.d -> rc.d/rc1.d\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc2.d -> rc.d/rc2.d\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc3.d -> rc.d/rc3.d\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc4.d -> rc.d/rc4.d\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc5.d -> rc.d/rc5.d\r\nlrwxrwxrwx 1 root root 10 Apr  2 18:48 /etc/rc6.d -> rc.d/rc6.d\r\n```\r\n\r\n`ls -ld /etc/rc.d`\r\n```\r\ndrwxr-xr-x 10 root root 4096 Apr  2 18:49 /etc/rc.d\r\n```\r\n\r\n`ls -l /etc/rc.d`\r\n```\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 init.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc0.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc1.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc2.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc3.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc4.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc5.d\r\ndrwxr-xr-x 2 root root 4096 Apr  2 18:49 rc6.d\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/325", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/325/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/325/events", "html_url": "https://github.com/philpep/testinfra/issues/325", "id": 327073632, "node_id": "MDU6SXNzdWUzMjcwNzM2MzI=", "number": 325, "title": "DebianPackage `version` method always fails when package is not installed", "user": {"login": "codylane", "id": 1258262, "node_id": "MDQ6VXNlcjEyNTgyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1258262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codylane", "html_url": "https://github.com/codylane", "followers_url": "https://api.github.com/users/codylane/followers", "following_url": "https://api.github.com/users/codylane/following{/other_user}", "gists_url": "https://api.github.com/users/codylane/gists{/gist_id}", "starred_url": "https://api.github.com/users/codylane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codylane/subscriptions", "organizations_url": "https://api.github.com/users/codylane/orgs", "repos_url": "https://api.github.com/users/codylane/repos", "events_url": "https://api.github.com/users/codylane/events{/privacy}", "received_events_url": "https://api.github.com/users/codylane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-28T16:23:26Z", "updated_at": "2018-05-28T18:10:11Z", "closed_at": "2018-05-28T18:10:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI apologize for not attaching this to #321 but this method inside of `DebianPackage` also looks like it suffers from the same problem as `is_installed` did.  If the package is not installed this will fail every time with an `AssertionError`.\r\n\r\n\r\nhttps://github.com/philpep/testinfra/blob/b47c3b181dc445e4661876e909050cc4394b93b1/testinfra/modules/package.py#L99-L104\r\n\r\nI wonder if we can apply similar fix for `is_installed` to `version`?  \r\n\r\n```\r\n    @property\r\n    def version(self):\r\n        result = self.run_test(\"dpkg-query -f '${Status} ${Version}' -W %s\" % (self.name))\r\n        assert result.rc == 0, 'The package \"%s\" is not installed'.format(self.name)\r\n        out = result.stdout.strip().split()    \r\n        if out[0].lower() in [\"install\", \"hold\"]:\r\n            return out[3]\r\n\r\n        # If we get here then None is returned, should we raise an error?  I feel like we should raise an error that the version cannot be determined.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/322", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/322/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/322/events", "html_url": "https://github.com/philpep/testinfra/issues/322", "id": 327002859, "node_id": "MDU6SXNzdWUzMjcwMDI4NTk=", "number": 322, "title": "Ansible backend error on Python3", "user": {"login": "xtimon", "id": 12657794, "node_id": "MDQ6VXNlcjEyNjU3Nzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/12657794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xtimon", "html_url": "https://github.com/xtimon", "followers_url": "https://api.github.com/users/xtimon/followers", "following_url": "https://api.github.com/users/xtimon/following{/other_user}", "gists_url": "https://api.github.com/users/xtimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/xtimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xtimon/subscriptions", "organizations_url": "https://api.github.com/users/xtimon/orgs", "repos_url": "https://api.github.com/users/xtimon/repos", "events_url": "https://api.github.com/users/xtimon/events{/privacy}", "received_events_url": "https://api.github.com/users/xtimon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-28T12:01:34Z", "updated_at": "2019-12-05T10:04:11Z", "closed_at": "2019-12-05T10:04:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Configuration: https://github.com/xtimon/ansible_postgresql/tree/test/python3/molecule/default\r\nUsed variable: `ansible_python_interpreter: \"/usr/bin/python3\"`\r\npython packages in virtual environment:\r\n```\r\nansible==2.5.3\r\nansible-lint==3.4.21\r\nanyconfig==0.9.4\r\narrow==0.12.1\r\nasn1crypto==0.24.0\r\natomicwrites==1.1.5\r\nattrs==18.1.0\r\nbcrypt==3.1.4\r\nbinaryornot==0.4.4\r\nCerberus==1.1\r\ncertifi==2018.4.16\r\ncffi==1.11.5\r\nchardet==3.0.4\r\nclick==6.7\r\nclick-completion==0.3.1\r\ncolorama==0.3.9\r\ncookiecutter==1.6.0\r\ncryptography==2.2.2\r\nfasteners==0.14.1\r\nflake8==3.5.0\r\nfuture==0.16.0\r\ngit-url-parse==1.1.0\r\nidna==2.6\r\nJinja2==2.10\r\njinja2-time==0.2.0\r\nMarkupSafe==1.0\r\nmccabe==0.6.1\r\nmolecule==2.14.0\r\nmonotonic==1.5\r\nmore-itertools==4.2.0\r\nparamiko==2.4.1\r\npathspec==0.5.6\r\npbr==3.0.1\r\npexpect==4.2.1\r\npluggy==0.6.0\r\npoyo==0.4.1\r\npsutil==5.2.2\r\nptyprocess==0.5.2\r\npy==1.5.3\r\npyasn1==0.4.3\r\npycodestyle==2.3.1\r\npycparser==2.18\r\npyflakes==1.6.0\r\nPyNaCl==1.2.1\r\npytest==3.6.0\r\npython-dateutil==2.7.3\r\npython-gilt==1.2.1\r\npython-vagrant==0.5.15\r\nPyYAML==3.12\r\nrequests==2.18.4\r\nsh==1.12.14\r\nsix==1.11.0\r\ntabulate==0.8.2\r\ntestinfra==1.12.0\r\ntree-format==0.1.2\r\nurllib3==1.22\r\nwhichcraft==0.4.1\r\nyamllint==1.11.1\r\n```\r\nError log:\r\n```\r\n(.venv) [xtim@archlinux ansible_postgresql(test/python3)]$ molecule verify\r\n--> Validating schema /home/xtim/work/ansible/ansible_postgresql/molecule/default/molecule.yml.\r\nValidation completed successfully.\r\n--> Test matrix\r\n    \r\n\u2514\u2500\u2500 default\r\n    \u2514\u2500\u2500 verify\r\n    \r\n--> Scenario: 'default'\r\n--> Action: 'verify'\r\n--> Executing Testinfra tests found in /home/xtim/work/ansible/ansible_postgresql/molecule/default/tests/...\r\n    ============================= test session starts ==============================\r\n    platform linux -- Python 3.6.5, pytest-3.6.0, py-1.5.3, pluggy-0.6.0\r\n    rootdir: /home/xtim/work/ansible/ansible_postgresql/molecule/default, inifile:\r\n    plugins: testinfra-1.12.0\r\ncollected 4 items                                                              \r\n    \r\n    tests/test_default.py FFFF                                               [100%]\r\n    \r\n    =================================== FAILURES ===================================\r\n    __________________ test_postgres_packages[ansible://instance] __________________\r\n    \r\n    host = <testinfra.host.Host object at 0x7f7120db2e80>\r\n    \r\n        def test_postgres_packages(host):\r\n            packages = [\r\n                \"postgresql-9.6\",\r\n                \"postgresql-client-9.6\",\r\n                \"postgresql-contrib-9.6\",\r\n            ]\r\n            for p in packages:\r\n    >           package = host.package(p)\r\n    \r\n    tests/test_default.py:16:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:91: in __getattr__\r\n        obj = module_class.get_module(self)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/base.py:33: in get_module\r\n        klass = cls.get_module_class(_host)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/package.py:68: in get_module_class\r\n        if host.system_info.type == \"freebsd\":\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:124: in type\r\n        return self.sysinfo[\"type\"]\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/utils/__init__.py:42: in __get__\r\n        value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:33: in sysinfo\r\n        sysinfo[\"type\"] = self.check_output(\"uname -s\").lower()\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:55: in run\r\n        return self.backend.run(command, *args, **kwargs)\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    self = <testinfra.backend.ansible.AnsibleBackend object at 0x7f7120db2e48>\r\n    command = 'uname -s', args = (), kwargs = {}\r\n    out = {'_ansible_no_log': False, '_ansible_parsed': False, 'changed': False, 'module_stderr': 'Shared connection to 127.0.0.1 closed.\\r\\n', ...}\r\n    \r\n        def run(self, command, *args, **kwargs):\r\n            command = self.get_command(command, *args)\r\n            out = self.run_ansible(\"shell\", module_args=command)\r\n            return self.result(\r\n                out['rc'],\r\n                command,\r\n                stdout_bytes=None,\r\n                stderr_bytes=None,\r\n    >           stdout=out[\"stdout\"], stderr=out[\"stderr\"],\r\n            )\r\n    E       KeyError: 'stdout'\r\n    \r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/backend/ansible.py:49: KeyError\r\n    __________________ test_psycopg2_package[ansible://instance] ___________________\r\n    \r\n    host = <testinfra.host.Host object at 0x7f7120db2e80>\r\n    \r\n        def test_psycopg2_package(host):\r\n    >       package = host.package(\"python3-psycopg2\")\r\n    \r\n    tests/test_default.py:22:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:91: in __getattr__\r\n        obj = module_class.get_module(self)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/base.py:33: in get_module\r\n        klass = cls.get_module_class(_host)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/package.py:68: in get_module_class\r\n        if host.system_info.type == \"freebsd\":\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:124: in type\r\n        return self.sysinfo[\"type\"]\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/utils/__init__.py:42: in __get__\r\n        value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:33: in sysinfo\r\n        sysinfo[\"type\"] = self.check_output(\"uname -s\").lower()\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:55: in run\r\n        return self.backend.run(command, *args, **kwargs)\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    self = <testinfra.backend.ansible.AnsibleBackend object at 0x7f7120db2e48>\r\n    command = 'uname -s', args = (), kwargs = {}\r\n    out = {'_ansible_no_log': False, '_ansible_parsed': False, 'changed': False, 'module_stderr': 'Shared connection to 127.0.0.1 closed.\\r\\n', ...}\r\n    \r\n        def run(self, command, *args, **kwargs):\r\n            command = self.get_command(command, *args)\r\n            out = self.run_ansible(\"shell\", module_args=command)\r\n            return self.result(\r\n                out['rc'],\r\n                command,\r\n                stdout_bytes=None,\r\n                stderr_bytes=None,\r\n    >           stdout=out[\"stdout\"], stderr=out[\"stderr\"],\r\n            )\r\n    E       KeyError: 'stdout'\r\n    \r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/backend/ansible.py:49: KeyError\r\n    __________________ test_postgres_service[ansible://instance] ___________________\r\n    \r\n    host = <testinfra.host.Host object at 0x7f7120db2e80>\r\n    \r\n        def test_postgres_service(host):\r\n    >       service = host.service(\"postgresql\")\r\n    \r\n    tests/test_default.py:27:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:91: in __getattr__\r\n        obj = module_class.get_module(self)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/base.py:33: in get_module\r\n        klass = cls.get_module_class(_host)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/service.py:51: in get_module_class\r\n        if host.system_info.type == \"linux\":\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:124: in type\r\n        return self.sysinfo[\"type\"]\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/utils/__init__.py:42: in __get__\r\n        value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:33: in sysinfo\r\n        sysinfo[\"type\"] = self.check_output(\"uname -s\").lower()\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:55: in run\r\n        return self.backend.run(command, *args, **kwargs)\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    self = <testinfra.backend.ansible.AnsibleBackend object at 0x7f7120db2e48>\r\n    command = 'uname -s', args = (), kwargs = {}\r\n    out = {'_ansible_no_log': False, '_ansible_parsed': False, 'changed': False, 'module_stderr': 'Shared connection to 127.0.0.1 closed.\\r\\n', ...}\r\n    \r\n        def run(self, command, *args, **kwargs):\r\n            command = self.get_command(command, *args)\r\n            out = self.run_ansible(\"shell\", module_args=command)\r\n            return self.result(\r\n                out['rc'],\r\n                command,\r\n                stdout_bytes=None,\r\n                stderr_bytes=None,\r\n    >           stdout=out[\"stdout\"], stderr=out[\"stderr\"],\r\n            )\r\n    E       KeyError: 'stdout'\r\n    \r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/backend/ansible.py:49: KeyError\r\n    __________________ test_postgres_sockets[ansible://instance] ___________________\r\n    \r\n    host = <testinfra.host.Host object at 0x7f7120db2e80>\r\n    \r\n        def test_postgres_sockets(host):\r\n    >       socket = host.socket(\"tcp://127.0.0.1:5432\")\r\n    \r\n    tests/test_default.py:33:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:91: in __getattr__\r\n        obj = module_class.get_module(self)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/base.py:33: in get_module\r\n        klass = cls.get_module_class(_host)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/socket.py:192: in get_module_class\r\n        if host.system_info.type == \"linux\":\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:124: in type\r\n        return self.sysinfo[\"type\"]\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/utils/__init__.py:42: in __get__\r\n        value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/modules/systeminfo.py:33: in sysinfo\r\n        sysinfo[\"type\"] = self.check_output(\"uname -s\").lower()\r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/host.py:55: in run\r\n        return self.backend.run(command, *args, **kwargs)\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    self = <testinfra.backend.ansible.AnsibleBackend object at 0x7f7120db2e48>\r\n    command = 'uname -s', args = (), kwargs = {}\r\n    out = {'_ansible_no_log': False, '_ansible_parsed': False, 'changed': False, 'module_stderr': 'Shared connection to 127.0.0.1 closed.\\r\\n', ...}\r\n    \r\n        def run(self, command, *args, **kwargs):\r\n            command = self.get_command(command, *args)\r\n            out = self.run_ansible(\"shell\", module_args=command)\r\n            return self.result(\r\n                out['rc'],\r\n                command,\r\n                stdout_bytes=None,\r\n                stderr_bytes=None,\r\n    >           stdout=out[\"stdout\"], stderr=out[\"stderr\"],\r\n            )\r\n    E       KeyError: 'stdout'\r\n    \r\n    /home/xtim/.venv/lib/python3.6/site-packages/testinfra/backend/ansible.py:49: KeyError\r\n    =========================== 4 failed in 2.41 seconds ===========================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/321", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/321/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/321/events", "html_url": "https://github.com/philpep/testinfra/issues/321", "id": 326861396, "node_id": "MDU6SXNzdWUzMjY4NjEzOTY=", "number": 321, "title": "BUG: The property method `is_installed` on DebianPackage always fails when package is not installed", "user": {"login": "codylane", "id": 1258262, "node_id": "MDQ6VXNlcjEyNTgyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1258262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codylane", "html_url": "https://github.com/codylane", "followers_url": "https://api.github.com/users/codylane/followers", "following_url": "https://api.github.com/users/codylane/following{/other_user}", "gists_url": "https://api.github.com/users/codylane/gists{/gist_id}", "starred_url": "https://api.github.com/users/codylane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codylane/subscriptions", "organizations_url": "https://api.github.com/users/codylane/orgs", "repos_url": "https://api.github.com/users/codylane/repos", "events_url": "https://api.github.com/users/codylane/events{/privacy}", "received_events_url": "https://api.github.com/users/codylane/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-27T23:40:17Z", "updated_at": "2018-05-28T20:20:46Z", "closed_at": "2018-05-28T14:17:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm a little caught off guard by this and I cannot seem to find any open issues the issue I've noticed.\r\n\r\nThis snippet will always **FAIL** if the package being queried does not exist.  \r\nhttps://github.com/philpep/testinfra/blob/master/testinfra/modules/package.py#L87-L91\r\n\r\n## How to reproduce\r\n1. Fire up a Ubuntu 16.04 instance\r\n2. As an example, we will first query for a package that we know exists on this 16.04 instance.\r\n\r\n`$ cat /etc/os-release`\r\n\r\n```\r\nNAME=\"Ubuntu\"\r\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 16.04.4 LTS\"\r\nVERSION_ID=\"16.04\"\r\nHOME_URL=\"http://www.ubuntu.com/\"\r\nSUPPORT_URL=\"http://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\r\nVERSION_CODENAME=xenial\r\nUBUNTU_CODENAME=xenial\r\n```\r\n\r\n`$ dpkg-query -f '${Status}\\n' -W bash`\r\n\r\n```\r\ninstall ok installed\r\n```\r\n\r\n`$ echo $?`\r\n```\r\n0\r\n```\r\n\r\n3. Now that we know `bash` exists let's try this same query with a package we know is not installed on the system\r\n\r\n`$ dpkg-query -f '${Status}\\n' -W a-dummy-name-that-does-not-exist`\r\n\r\n```\r\ndpkg-query: no packages found matching a-dummy-name-that-does-not-exist\r\n```\r\n\r\n`$ echo $?`\r\n```\r\n1\r\n```\r\n\r\nI cannot find any issues about this and it appears to have been a bug for some time or I can only assume that others have not tried to use the `is_installed` method on Ubuntu 16.04 when a package is not installed.  \r\n\r\nThis was introduced almost **2 YEARS ago** via this commit: https://github.com/philpep/testinfra/commit/a68908c46bffe447f4fb1ef2b1796b6ff1f7e672\r\n\r\nThe lack of formal testing surrounding this commit is mind boggling for a library dubbed as a `Testing library`.  It's shocking to me to only find  `two` tests for `is_installed`.\r\nhttps://github.com/philpep/testinfra/blob/1932c810b8697bb41d3ea1890f9e95e28228c803/test/test_modules.py#L32-L68\r\n\r\n## Proposed Solution\r\n I'd love to help be a maintainer/contributor of this project because I see the value it provides and its very simple to use.  I'm a big fan!  However, I will admit, I am NOT a fan of the lack of tests surrounding this library and I find it concerning to see what feels like new features being prioritized over the issues.\r\n\r\n1. I'd like to suggest that the solution to the issue be consistent with those in the rest of `package.py` Looking at the others I see the following using `run_test` instead of `check_output` because the later raises an `AssertionError` when `rc != 0`\r\n\r\nHere' s a potential fix and I would be happy to submit a pull request. :)\r\n\r\n```\r\nclass DebianPackage(Package):\r\n\r\n    @property\r\n    def is_installed(self):\r\n        return self.run_test(\"dpkg-query -f '${Status}' -W %s\" % (\r\n            self.name)).rc == 0\r\n```\r\n\r\nBut if I do submit a PR, I feel there should be more tests to make sure this works across all `supported OS` versions whatever that may mean.  I generally only assume a `supported OS` is one that has tests so looking at the current tests I would only be writing tests for...\r\n ```\r\n    \"debian_stretch\"\r\n    \"ubuntu_xenial\"\r\n```\r\nBut given my past experience as a contributor to this project, I was informed that I can only introduce one change per pull request, but testing generally requires changes to more than one file.\r\nhttps://github.com/philpep/testinfra/pull/226#issuecomment-321991140", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/311", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/311/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/311/events", "html_url": "https://github.com/philpep/testinfra/issues/311", "id": 321590637, "node_id": "MDU6SXNzdWUzMjE1OTA2Mzc=", "number": 311, "title": "New socket implementation doesnt recognize listening UDP ports", "user": {"login": "msheiny", "id": 1727935, "node_id": "MDQ6VXNlcjE3Mjc5MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1727935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msheiny", "html_url": "https://github.com/msheiny", "followers_url": "https://api.github.com/users/msheiny/followers", "following_url": "https://api.github.com/users/msheiny/following{/other_user}", "gists_url": "https://api.github.com/users/msheiny/gists{/gist_id}", "starred_url": "https://api.github.com/users/msheiny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msheiny/subscriptions", "organizations_url": "https://api.github.com/users/msheiny/orgs", "repos_url": "https://api.github.com/users/msheiny/repos", "events_url": "https://api.github.com/users/msheiny/events{/privacy}", "received_events_url": "https://api.github.com/users/msheiny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-09T14:20:33Z", "updated_at": "2018-05-10T13:36:40Z", "closed_at": "2018-05-10T13:35:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's an example of my test that was working before upgrading to testinfra `1.12.0`.\r\n\r\n```\r\n@pytest.mark.parametrize('ossec_service', [\r\n    dict(host=\"0.0.0.0\", proto=\"tcp\", port=22, listening=True),\r\n    dict(host=\"0.0.0.0\", proto=\"udp\", port=1514, listening=True),\r\n    dict(host=\"0.0.0.0\", proto=\"tcp\", port=1515, listening=False),\r\n])\r\ndef test_listening_ports(host, ossec_service):\r\n    Ensure the OSSEC-related services are listening on the\r\n    socket = \"{proto}://{host}:{port}\".format(**ossec_service)\r\n    with host.sudo():\r\n        assert host.socket(socket).is_listening == ossec_service['listening']\r\n``` \r\n\r\nSpecifically getting a fail on `dict(host=\"0.0.0.0\", proto=\"udp\", port=1514, listening=True)` now. Here is the relevant ss and lsof output:\r\n\r\n```bash\r\nsdrop@mon-staging:~$ sudo lsof -iUDP -n\r\nCOMMAND    PID   USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\r\ndhclient   674   root    5u  IPv4  10425      0t0  UDP *:bootpc\r\ndhclient   674   root   20u  IPv4  10405      0t0  UDP *:15006\r\ndhclient   674   root   21u  IPv6  10406      0t0  UDP *:45681\r\nossec-rem 1174 ossecr    4u  IPv4  11482      0t0  UDP *:1514\r\nntpd      3133    ntp   16u  IPv4  18769      0t0  UDP *:ntp\r\nntpd      3133    ntp   17u  IPv6  18770      0t0  UDP *:ntp\r\nntpd      3133    ntp   18u  IPv4  18776      0t0  UDP 127.0.0.1:ntp\r\nntpd      3133    ntp   19u  IPv4  18777      0t0  UDP 172.17.1.164:ntp\r\n\r\nsdrop@mon-staging:~$ ss --numeric --listening --udp\r\nState       Recv-Q Send-Q                    Local Address:Port                      Peer Address:Port\r\nUNCONN      0      0                                     *:15006                                *:*\r\nUNCONN      0      0                                     *:1514                                 *:*\r\nUNCONN      0      0                                     *:68                                   *:*\r\nUNCONN      0      0                          172.17.1.164:123                                  *:*\r\nUNCONN      0      0                             127.0.0.1:123                                  *:*\r\nUNCONN      0      0                                     *:123                                  *:*\r\nUNCONN      0      0                                    :::45681                               :::*\r\nUNCONN      0      0                                    :::123                                 :::*\r\n```\r\n\r\nIt appears that the [socket module only looks for the status of `LISTEN` or `ESTAB` ](https://github.com/philpep/testinfra/blob/1.12.0/testinfra/modules/socket.py#L241) but doesn't recognize `UNCONN` as a listening status.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/305", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/305/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/305/events", "html_url": "https://github.com/philpep/testinfra/issues/305", "id": 316312722, "node_id": "MDU6SXNzdWUzMTYzMTI3MjI=", "number": 305, "title": "Support Ansible 2.5.1", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-20T15:28:39Z", "updated_at": "2018-04-25T05:26:06Z", "closed_at": "2018-04-24T19:19:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n[jodewey:~/foo] [venv] 2 % ansible --version\r\nansible 2.5.1\r\n  config file = None\r\n  configured module search path = [u'/Users/jodewey/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\r\n  ansible python module location = /Users/jodewey/venv/lib/python2.7/site-packages/ansible\r\n  executable location = /Users/jodewey/venv/bin/ansible\r\n  python version = 2.7.13 (default, May  4 2017, 15:45:50) [GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)]\r\n\r\n[jodewey:~/foo] [venv] % py.test --version\r\nThis is pytest version 3.5.0, imported from /Users/jodewey/venv/lib/python2.7/site-packages/pytest.pyc\r\nsetuptools registered plugins:\r\n  testinfra-1.7.1 at /Users/jodewey/venv/lib/python2.7/site-packages/testinfra/plugin.py\r\n\r\n[jodewey:~/foo] [venv] % testinfra --version\r\nThis is pytest version 3.5.0, imported from /Users/jodewey/venv/lib/python2.7/site-packages/pytest.pyc\r\nsetuptools registered plugins:\r\n  testinfra-1.7.1 at /Users/jodewey/venv/lib/python2.7/site-packages/testinfra/plugin.py\r\n```\r\n\r\nWe seem to have issues running testinfra 1.7.1 against Ansible 2.5.1\r\n\r\n```\r\n[jodewey:~/foo] [venv] 2 % ANSIBLE_CONFIG=/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/ansible.cfg ANSIBLE_FILTER_PLUGINS=/Users/jodewey/venv/lib/python2.7/site-packages/molecule/provisioner/ansible/plugins/filters:/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/plugins/filters:/Users/jodewey/foo/plugins/filters ANSIBLE_LIBRARY=/Users/jodewey/venv/lib/python2.7/site-packages/molecule/provisioner/ansible/plugins/libraries:/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/library:/Users/jodewey/foo/library ANSIBLE_ROLES_PATH=/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/roles:/Users/jodewey ANSIBLE_VAULT_PASSWORD_FILE=~/.config/ansible-systems/vault-proxmox.pass MOLECULE_DEBUG=True MOLECULE_DEPENDENCY_NAME=galaxy MOLECULE_DRIVER_NAME=docker MOLECULE_EPHEMERAL_DIRECTORY=/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default MOLECULE_FILE=/Users/jodewey/foo/molecule/default/molecule.yml MOLECULE_INSTANCE_CONFIG=/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/instance_config.yml MOLECULE_INVENTORY_FILE=/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/ansible_inventory.yml MOLECULE_LINT_NAME=yamllint MOLECULE_PROVISIONER_NAME=ansible MOLECULE_SCENARIO_DIRECTORY=/Users/jodewey/foo/molecule/default MOLECULE_SCENARIO_NAME=default MOLECULE_VERIFIER_NAME=testinfra py.test --debug -p no:cacheprovider --connection=ansible --ansible-inventory=/var/folders/_j/ncm1yw111bb771f6zsw1d3lc0000gn/T/molecule/foo/default/ansible_inventory.yml /Users/jodewey/foo/molecule/default/tests/test_default.py -vvv\r\nwriting pytestdebug information to /Users/jodewey/foo/pytestdebug.log\r\n================================================================================== test session starts ==================================================================================\r\nplatform darwin -- Python 2.7.13, pytest-3.5.0, py-1.5.3, pluggy-0.6.0 -- /Users/jodewey/venv/bin/python2.7\r\nusing: pytest-3.5.0 pylib-1.5.3\r\nsetuptools registered plugins:\r\n  testinfra-1.7.1 at /Users/jodewey/venv/lib/python2.7/site-packages/testinfra/plugin.py\r\nrootdir: /Users/jodewey/foo, inifile:\r\nplugins: testinfra-1.7.1\r\ncollected 0 items / 1 errors\r\n\r\n======================================================================================== ERRORS =========================================================================================\r\n________________________________________________________________ ERROR collecting molecule/default/tests/test_default.py ________________________________________________________________\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:617: in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:222: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:182: in __call__\r\n    return outcome.get_result()\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:180: in <lambda>\r\n    outcome = _Result.from_call(lambda: self.oldcall(hook, hook_impls, kwargs))\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:216: in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n../venv/lib/python2.7/site-packages/_pytest/python.py:200: in pytest_pycollect_makeitem\r\n    res = list(collector._genfunctions(name, obj))\r\n../venv/lib/python2.7/site-packages/_pytest/python.py:378: in _genfunctions\r\n    self.ihook.pytest_generate_tests(metafunc=metafunc)\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:617: in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:222: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:182: in __call__\r\n    return outcome.get_result()\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:180: in <lambda>\r\n    outcome = _Result.from_call(lambda: self.oldcall(hook, hook_impls, kwargs))\r\n../venv/lib/python2.7/site-packages/pluggy/__init__.py:216: in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n../venv/lib/python2.7/site-packages/testinfra/plugin.py:143: in pytest_generate_tests\r\n    ansible_inventory=metafunc.config.option.ansible_inventory,\r\n../venv/lib/python2.7/site-packages/testinfra/host.py:125: in get_hosts\r\n    for backend in testinfra.backend.get_backends(hosts, **kwargs):\r\n../venv/lib/python2.7/site-packages/testinfra/backend/__init__.py:89: in get_backends\r\n    for name in klass.get_hosts(host, **kw):\r\n../venv/lib/python2.7/site-packages/testinfra/backend/ansible.py:72: in get_hosts\r\n    return AnsibleRunner(kwargs.get(\"ansible_inventory\")).get_hosts(host)\r\n../venv/lib/python2.7/site-packages/testinfra/utils/ansible_runner.py:171: in __init__\r\n    self.cli._play_prereqs(self.cli.options))\r\n../venv/lib/python2.7/site-packages/ansible/cli/__init__.py:804: in _play_prereqs\r\n    inventory = InventoryManager(loader=loader, sources=options.inventory)\r\n../venv/lib/python2.7/site-packages/ansible/inventory/manager.py:145: in __init__\r\n    self.parse_sources(cache=True)\r\n../venv/lib/python2.7/site-packages/ansible/inventory/manager.py:206: in parse_sources\r\n    parse = self.parse_source(source, cache=cache)\r\n../venv/lib/python2.7/site-packages/ansible/inventory/manager.py:261: in parse_source\r\n    if plugin.verify_file(source):\r\n../venv/lib/python2.7/site-packages/ansible/plugins/inventory/yaml.py:84: in verify_file\r\n    if not ext or ext in self.get_option('yaml_extensions'):\r\n../venv/lib/python2.7/site-packages/ansible/plugins/__init__.py:58: in get_option\r\n    option_value = C.config.get_config_value(option, plugin_type=get_plugin_class(self), plugin_name=self._load_name, variables=hostvars)\r\n../venv/lib/python2.7/site-packages/ansible/config/manager.py:284: in get_config_value\r\n    value, _drop = self.get_config_value_and_origin(config, cfile=cfile, plugin_type=plugin_type, plugin_name=plugin_name, keys=keys, variables=variables)\r\n../venv/lib/python2.7/site-packages/ansible/config/manager.py:304: in get_config_value_and_origin\r\n    defs = self._plugins[plugin_type][plugin_name]\r\nE   KeyError: 'inventory'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n================================================================================ 1 error in 2.63 seconds ================================================================================\r\nwrote pytestdebug information to /Users/jodewey/foo/pytestdebug.log\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/303", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/303/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/303/events", "html_url": "https://github.com/philpep/testinfra/issues/303", "id": 312676610, "node_id": "MDU6SXNzdWUzMTI2NzY2MTA=", "number": 303, "title": "Implement __eq__ for File objects", "user": {"login": "mdelapenya", "id": 951580, "node_id": "MDQ6VXNlcjk1MTU4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/951580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdelapenya", "html_url": "https://github.com/mdelapenya", "followers_url": "https://api.github.com/users/mdelapenya/followers", "following_url": "https://api.github.com/users/mdelapenya/following{/other_user}", "gists_url": "https://api.github.com/users/mdelapenya/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdelapenya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdelapenya/subscriptions", "organizations_url": "https://api.github.com/users/mdelapenya/orgs", "repos_url": "https://api.github.com/users/mdelapenya/repos", "events_url": "https://api.github.com/users/mdelapenya/events{/privacy}", "received_events_url": "https://api.github.com/users/mdelapenya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660502, "node_id": "MDU6TGFiZWwxODc2NjA1MDI=", "url": "https://api.github.com/repos/philpep/testinfra/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 947137451, "node_id": "MDU6TGFiZWw5NDcxMzc0NTE=", "url": "https://api.github.com/repos/philpep/testinfra/labels/good%20first%20issue", "name": "good first issue", "color": "ed4b9f", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-09T20:31:52Z", "updated_at": "2018-05-29T15:39:33Z", "closed_at": "2018-05-29T15:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm getting this error while checking the `linked_to` of a valid symlink.\r\n\r\n```python\r\n        def test_paths_are_symliks(host):\r\n            myPath = host.file(\"/mnt/jenkins/workspace\")\r\n            myLink = host.file(\"/home/ubuntu/workspace\")\r\n            assert myPath.exists\r\n            assert myLink.exists\r\n            assert myLink.is_symlink\r\n            assert myLink.linked_to == myPath\r\n\r\n    E           AssertionError: assert '/mnt/jenkins/workspace' == <file /mnt/jenkins/workspace>\r\n    E            +  where '/mnt/jenkins/workspace' = <file /home/ubuntu/workspace>.linked_to\r\n```\r\n\r\nIs the last assertion returning a file object instead of the string representation of its path?\r\n\r\nThanks!\r\n\r\nPS: close this issue if you consider is not a bug", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/299", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/299/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/299/events", "html_url": "https://github.com/philpep/testinfra/issues/299", "id": 310998417, "node_id": "MDU6SXNzdWUzMTA5OTg0MTc=", "number": 299, "title": "pip 10.x incompatibility", "user": {"login": "acrewdson", "id": 10353074, "node_id": "MDQ6VXNlcjEwMzUzMDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/10353074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acrewdson", "html_url": "https://github.com/acrewdson", "followers_url": "https://api.github.com/users/acrewdson/followers", "following_url": "https://api.github.com/users/acrewdson/following{/other_user}", "gists_url": "https://api.github.com/users/acrewdson/gists{/gist_id}", "starred_url": "https://api.github.com/users/acrewdson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acrewdson/subscriptions", "organizations_url": "https://api.github.com/users/acrewdson/orgs", "repos_url": "https://api.github.com/users/acrewdson/repos", "events_url": "https://api.github.com/users/acrewdson/events{/privacy}", "received_events_url": "https://api.github.com/users/acrewdson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-03T21:04:52Z", "updated_at": "2018-04-05T18:07:59Z", "closed_at": "2018-04-05T18:07:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\n`pip` 10 was pushed to pypi for the first time a few days ago. It looks like they changed the `pip list` output, and so this regex no longer works as expected https://github.com/philpep/testinfra/blob/e91b0c730dd8425fb608606132a21092c5003d08/testinfra/modules/pip.py#L32\r\n\r\nWould you be interested in a PR?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/297", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/297/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/297/events", "html_url": "https://github.com/philpep/testinfra/issues/297", "id": 304469975, "node_id": "MDU6SXNzdWUzMDQ0Njk5NzU=", "number": 297, "title": "pip_package.get_outdated_packages - wrong result", "user": {"login": "wissemmahjoub", "id": 16943359, "node_id": "MDQ6VXNlcjE2OTQzMzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/16943359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wissemmahjoub", "html_url": "https://github.com/wissemmahjoub", "followers_url": "https://api.github.com/users/wissemmahjoub/followers", "following_url": "https://api.github.com/users/wissemmahjoub/following{/other_user}", "gists_url": "https://api.github.com/users/wissemmahjoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/wissemmahjoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wissemmahjoub/subscriptions", "organizations_url": "https://api.github.com/users/wissemmahjoub/orgs", "repos_url": "https://api.github.com/users/wissemmahjoub/repos", "events_url": "https://api.github.com/users/wissemmahjoub/events{/privacy}", "received_events_url": "https://api.github.com/users/wissemmahjoub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-12T17:33:59Z", "updated_at": "2018-03-13T16:41:44Z", "closed_at": "2018-03-13T16:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm using testinfra to verify if ansible package is up-to-date or not, for that, im using the pip_package.get_outdated_packages module, to verify if my package is in the list of outdated packages,\r\n\r\non ubuntu 14.04 & ubuntu 16.04 & debian8 everything is ok ,\r\nbut on ubuntu17.10 & debian9 , i found the name of my ansible-package on the list of outdated_package, but it should not,\r\n\r\nPS : {''ansible: {'current': '2.4.3.0', 'latest': '2.4.0.3'}}\r\n\r\nis it a bug from pip_package.get_outdated_packages module ?\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/296", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/296/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/296/events", "html_url": "https://github.com/philpep/testinfra/issues/296", "id": 304469290, "node_id": "MDU6SXNzdWUzMDQ0NjkyOTA=", "number": 296, "title": "pip_package.get_outdated_packages - wrong", "user": {"login": "wissemmahjoub", "id": 16943359, "node_id": "MDQ6VXNlcjE2OTQzMzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/16943359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wissemmahjoub", "html_url": "https://github.com/wissemmahjoub", "followers_url": "https://api.github.com/users/wissemmahjoub/followers", "following_url": "https://api.github.com/users/wissemmahjoub/following{/other_user}", "gists_url": "https://api.github.com/users/wissemmahjoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/wissemmahjoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wissemmahjoub/subscriptions", "organizations_url": "https://api.github.com/users/wissemmahjoub/orgs", "repos_url": "https://api.github.com/users/wissemmahjoub/repos", "events_url": "https://api.github.com/users/wissemmahjoub/events{/privacy}", "received_events_url": "https://api.github.com/users/wissemmahjoub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-12T17:31:58Z", "updated_at": "2018-03-12T17:33:01Z", "closed_at": "2018-03-12T17:33:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm using testinfra to verify if ansible package is up-to-date or not, for that, im using the pip_package.get_outdated_packages module,  to verify if my package is in the list of outdated packages,\r\n\r\non ubuntu 14.04 & ubuntu 16.04 & debian8 everything is ok ,\r\nbut on ubuntu17.10 & debian9 , i found the name of my ansible-package on the list of outdated_package, but it should not,\r\n\r\nPS :  {''ansible: {'current': '2.4.3.0', 'latest': '2.4.0.3'}}\r\n\r\nis that a problem from pip_package.get_outdated_packages  module ?\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/295", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/295/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/295/events", "html_url": "https://github.com/philpep/testinfra/issues/295", "id": 304452644, "node_id": "MDU6SXNzdWUzMDQ0NTI2NDQ=", "number": 295, "title": "get_outdated_packages - wrong result", "user": {"login": "wissemmahjoub", "id": 16943359, "node_id": "MDQ6VXNlcjE2OTQzMzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/16943359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wissemmahjoub", "html_url": "https://github.com/wissemmahjoub", "followers_url": "https://api.github.com/users/wissemmahjoub/followers", "following_url": "https://api.github.com/users/wissemmahjoub/following{/other_user}", "gists_url": "https://api.github.com/users/wissemmahjoub/gists{/gist_id}", "starred_url": "https://api.github.com/users/wissemmahjoub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wissemmahjoub/subscriptions", "organizations_url": "https://api.github.com/users/wissemmahjoub/orgs", "repos_url": "https://api.github.com/users/wissemmahjoub/repos", "events_url": "https://api.github.com/users/wissemmahjoub/events{/privacy}", "received_events_url": "https://api.github.com/users/wissemmahjoub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-12T16:47:49Z", "updated_at": "2018-03-12T17:04:58Z", "closed_at": "2018-03-12T17:04:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "i use testinfra to verify if ansible is up-to-date or not,\r\nto do that im using \"get_outdated_packages\" module,\r\non ubuntu 14.04 , ubuntu 16..04, debian 8 , the result is OK,\r\nbut on debian9 & ubuntu 17.10 , i have a wrong result , ( i found ansible on the list of outdated_packages , but it is not outdated !!  ) \r\nis it a problem from \"get_outdated_packages\" module ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/293", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/293/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/293/events", "html_url": "https://github.com/philpep/testinfra/issues/293", "id": 300059923, "node_id": "MDU6SXNzdWUzMDAwNTk5MjM=", "number": 293, "title": "Problems with `ss` in testinfra 1.11.0", "user": {"login": "paulfantom", "id": 3531758, "node_id": "MDQ6VXNlcjM1MzE3NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3531758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulfantom", "html_url": "https://github.com/paulfantom", "followers_url": "https://api.github.com/users/paulfantom/followers", "following_url": "https://api.github.com/users/paulfantom/following{/other_user}", "gists_url": "https://api.github.com/users/paulfantom/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulfantom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulfantom/subscriptions", "organizations_url": "https://api.github.com/users/paulfantom/orgs", "repos_url": "https://api.github.com/users/paulfantom/repos", "events_url": "https://api.github.com/users/paulfantom/events{/privacy}", "received_events_url": "https://api.github.com/users/paulfantom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-02-25T20:51:10Z", "updated_at": "2018-02-26T18:01:49Z", "closed_at": "2018-02-26T18:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running multiple builds with molecule and testinfra on travis in [cloudalchemy](https://github.com/cloudalchemy) project and all of them have started to fail since today. All builds use latest testinfra and are testing on centos 7, ubuntu xenial, and debian jessie ([example failing build log](https://travis-ci.org/cloudalchemy/ansible-alertmanager/jobs/345972253), and [raw log](https://api.travis-ci.org/v3/job/345972253/log.txt)). On all of those environment there is a problem with a non-existent parameter `--no-header` passed to `ss` command introduced by [this commit](https://github.com/philpep/testinfra/commit/2be791d702bed1641422e1960bb937dcd7335ae5).\r\nEverything was working properly on previous testinfra version (1.10.1).\r\n\r\nDue to the fact that option `--no-header` is included in `ss` man page I think there might be a problem with parsing socket connection string but I'm not sure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/290", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/290/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/290/events", "html_url": "https://github.com/philpep/testinfra/issues/290", "id": 299039581, "node_id": "MDU6SXNzdWUyOTkwMzk1ODE=", "number": 290, "title": "\"Invalid environment marker\" error on CentOS 7", "user": {"login": "glasswalk3r", "id": 3854915, "node_id": "MDQ6VXNlcjM4NTQ5MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3854915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glasswalk3r", "html_url": "https://github.com/glasswalk3r", "followers_url": "https://api.github.com/users/glasswalk3r/followers", "following_url": "https://api.github.com/users/glasswalk3r/following{/other_user}", "gists_url": "https://api.github.com/users/glasswalk3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/glasswalk3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glasswalk3r/subscriptions", "organizations_url": "https://api.github.com/users/glasswalk3r/orgs", "repos_url": "https://api.github.com/users/glasswalk3r/repos", "events_url": "https://api.github.com/users/glasswalk3r/events{/privacy}", "received_events_url": "https://api.github.com/users/glasswalk3r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-21T16:32:34Z", "updated_at": "2018-02-28T14:38:43Z", "closed_at": "2018-02-28T14:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just tried to install testinfra on a CentOS 7 VM and go the following:\r\n\r\n```\r\n(venv)[alceu@localhost bin]$ pip install testinfra\r\nDownloading/unpacking testinfra\r\n  Downloading testinfra-1.10.1.tar.gz (59kB): 59kB downloaded\r\n  Running setup.py egg_info for package testinfra\r\n    \r\n    Installed /home/alceu/venv/build/testinfra/pbr-3.1.1-py2.7.egg\r\n    [pbr] Processing SOURCES.txt\r\n    warning: LocalManifestMaker: standard file '-c' not found\r\n    \r\n    warning: no files found matching 'AUTHORS'\r\n    warning: no files found matching 'ChangeLog'\r\n    warning: no previously-included files found matching '.gitignore'\r\n    warning: no previously-included files found matching '.gitreview'\r\n    warning: no previously-included files matching '*.pyc' found anywhere in distribution\r\nDownloading/unpacking pytest!=3.0.2 (from testinfra)\r\n  Downloading pytest-3.4.1.tar.gz (812kB): 812kB downloaded\r\n  Running setup.py egg_info for package pytest\r\n    /usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n      warnings.warn(msg)\r\n    error in pytest setup command: Invalid environment marker: python_version<\"3.0\"\r\n    Complete output from command python setup.py egg_info:\r\n    /usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n\r\n  warnings.warn(msg)\r\n\r\nerror in pytest setup command: Invalid environment marker: python_version<\"3.0\"\r\n\r\n----------------------------------------\r\nCleaning up...\r\nCommand python setup.py egg_info failed with error code 1 in /home/alceu/venv/build/pytest\r\nStoring complete log in /home/alceu/.pip/pip.log\r\n```\r\n\r\nI'm using Python 2.7.5 and Virtualenv 1.10.1, both installed from CentOS 87 EPEL repository.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/288", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/288/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/288/events", "html_url": "https://github.com/philpep/testinfra/issues/288", "id": 296818710, "node_id": "MDU6SXNzdWUyOTY4MTg3MTA=", "number": 288, "title": "Bad error message when using ansible module without ansible backend", "user": {"login": "philpep", "id": 387511, "node_id": "MDQ6VXNlcjM4NzUxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/387511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philpep", "html_url": "https://github.com/philpep", "followers_url": "https://api.github.com/users/philpep/followers", "following_url": "https://api.github.com/users/philpep/following{/other_user}", "gists_url": "https://api.github.com/users/philpep/gists{/gist_id}", "starred_url": "https://api.github.com/users/philpep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philpep/subscriptions", "organizations_url": "https://api.github.com/users/philpep/orgs", "repos_url": "https://api.github.com/users/philpep/repos", "events_url": "https://api.github.com/users/philpep/events{/privacy}", "received_events_url": "https://api.github.com/users/philpep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-13T17:18:02Z", "updated_at": "2018-02-24T21:25:09Z", "closed_at": "2018-02-24T21:25:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Ansible module only work with ansible backend, but that's not clear:\r\n\r\n```\r\n>>> testinfra.get_host('local://').ansible.get_varialbes()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"testinfra/backend/base.py\", line 247, in __getattr__\r\n    module = getattr(self._host, testinfra.utils.un_camel_case(name))\r\n  File \"testinfra/host.py\", line 89, in __getattr__\r\n    assert name in testinfra.modules.modules, name + \" is not a module\"\r\nAssertionError: get_variables is not a module\r\n```\r\n\r\nAn access to `ansible` attribute should raise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/274", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/274/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/274/events", "html_url": "https://github.com/philpep/testinfra/issues/274", "id": 277041142, "node_id": "MDU6SXNzdWUyNzcwNDExNDI=", "number": 274, "title": "Ansible 2.3.1 on Python 3 gives AttributeError with testinfra >= 1.7.1", "user": {"login": "rdonkin", "id": 2864605, "node_id": "MDQ6VXNlcjI4NjQ2MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2864605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdonkin", "html_url": "https://github.com/rdonkin", "followers_url": "https://api.github.com/users/rdonkin/followers", "following_url": "https://api.github.com/users/rdonkin/following{/other_user}", "gists_url": "https://api.github.com/users/rdonkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdonkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdonkin/subscriptions", "organizations_url": "https://api.github.com/users/rdonkin/orgs", "repos_url": "https://api.github.com/users/rdonkin/repos", "events_url": "https://api.github.com/users/rdonkin/events{/privacy}", "received_events_url": "https://api.github.com/users/rdonkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-27T14:41:02Z", "updated_at": "2018-04-12T15:47:24Z", "closed_at": "2017-12-03T18:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a reproducible exception with Ansible 2.3.1 using testinfra 1.7.1 and 1.9.1, which is not present in 1.7.0 or earlier (1.6.2, 1.6.4 or 1.6.5).  \r\n\r\nSame across all tests: Ansible 2.3.1, Python 3.6.1, and Pytest 3.2.5.\r\n\r\nThis seems to be Python 3 related (see below for a Python 2.7 test) - Ansible 2.3.1 does have a tech preview level of support for Python 3 but it's better if people use 2.4.1 for official Python 3 support.\r\n\r\nNot sure if it's worth fixing this, as this test works with testinfra 1.9.1 and these combinations:\r\n\r\n- Ansible 2.3.1 with Python 2.7.13\r\n- Ansible 2.4.1 with Python 3.6.1 \r\n\r\n\r\nSetup:\r\n\r\n```\r\n$ cat hosts\r\n[all]\r\nlocalhost   ansible_connection=local\r\n\r\n[all:vars]\r\nmyvar=myvalue\r\n\r\n$ cat test_try.py\r\ndef test_myvar_using_get_variables(host):\r\n    all_variables = host.ansible.get_variables()\r\n    assert 'myvar' in all_variables\r\n    assert all_variables['myvar'] == 'myvalue'\r\n\r\ndef test_myvar_using_debug_var(host):\r\n    result = host.ansible(\"debug\", \"var=myvar\")\r\n    assert 'myvar' in result\r\n    assert result['myvar'] == 'myvalue'\r\n\r\ndef test_myvar_using_debug_msg(host):\r\n    result = host.ansible(\"debug\", \"msg={{ myvar }}\")\r\n    assert 'msg' in result\r\n    assert result['msg'] == 'myvalue'\r\n\r\n$ ansible --version\r\nansible 2.3.1.0\r\n  config file = \r\n  configured module search path = Default w/o overrides\r\n  python version = 3.6.1 (default, Apr  4 2017, 09:40:51) [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]\r\n\r\n```\r\n\r\nTo test:\r\n```\r\n$ pytest -v --host=ansible://all --ansible-inventory=hosts test_try.py \r\n============================================================================================== test session starts ===============================================================================================\r\nplatform darwin -- Python 3.6.1, pytest-3.2.5, py-1.5.2, pluggy-0.4.0 -- /Users/richard/.virtualenvs/devops3/bin/python3.6\r\ncachedir: .cache\r\nrootdir: /Users/richard/client/interdigital/devops/provision/misc/test-try, inifile:\r\nplugins: testinfra-1.7.1\r\ncollected 3 items                                                                                                                                                                                                 \r\n\r\ntest_try.py::test_myvar_using_get_variables[ansible://localhost] FAILED\r\ntest_try.py::test_myvar_using_debug_var[ansible://localhost] PASSED\r\ntest_try.py::test_myvar_using_debug_msg[ansible://localhost] PASSED\r\n\r\n==================================================================================================== FAILURES ====================================================================================================\r\n______________________________________________________________________________ test_myvar_using_get_variables[ansible://localhost] _______________________________________________________________________________\r\n\r\nhost = <testinfra.host.Host object at 0x10ef602b0>\r\n\r\n    def test_myvar_using_get_variables(host):\r\n>       all_variables = host.ansible.get_variables()\r\n\r\ntest_try.py:3: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/Users/richard/.virtualenvs/devops3/lib/python3.6/site-packages/testinfra/modules/ansible.py:84: in get_variables\r\n    return self._host.backend.get_variables()\r\n/Users/richard/.virtualenvs/devops3/lib/python3.6/site-packages/testinfra/backend/ansible.py:68: in get_variables\r\n    return self.ansible_runner.get_variables(self.host)\r\n/Users/richard/.virtualenvs/devops3/lib/python3.6/site-packages/testinfra/utils/ansible_runner.py:197: in get_variables\r\n    return self.variable_manager.get_vars(self.loader, host)\r\n/Users/richard/.virtualenvs/devops3/lib/python3.6/site-packages/ansible/vars/__init__.py:236: in get_vars\r\n    include_delegate_to=include_delegate_to,\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <ansible.vars.VariableManager object at 0x10ef60898>, loader = <ansible.parsing.dataloader.DataLoader object at 0x10ef80b38>, play = localhost, host = None, task = None, include_hostvars = True\r\ninclude_delegate_to = True\r\n\r\n    def _get_magic_variables(self, loader, play, host, task, include_hostvars, include_delegate_to):\r\n        '''\r\n            Returns a dictionary of so-called \"magic\" variables in Ansible,\r\n            which are special variables we set internally for use.\r\n            '''\r\n    \r\n        variables = dict()\r\n        variables['playbook_dir'] = loader.get_basedir()\r\n        variables['ansible_playbook_python'] = sys.executable\r\n    \r\n        if host:\r\n            # host already provides some magic vars via host.get_vars()\r\n            if self._inventory:\r\n                variables['groups']  = self._inventory.get_group_dict()\r\n    \r\n        if play:\r\n>           variables['role_names'] = [r._role_name for r in play.roles]\r\nE           AttributeError: 'Host' object has no attribute 'roles'\r\n\r\n/Users/richard/.virtualenvs/devops3/lib/python3.6/site-packages/ansible/vars/__init__.py:411: AttributeError\r\n======================================================================================= 1 failed, 2 passed in 1.18 seconds =======================================================================================\r\n```\r\n\r\nAlso tested on Python 2.7 with same versions otherwise, where it works OK:\r\n\r\n```\r\n$ python --version\r\nPython 2.7.13\r\n14:38 richard@macbookpro [develop] misc/test-try\r\n$ python -m pytest -v --host=ansible://all --ansible-inventory=hosts test_try.py \r\n============================================================================================== test session starts ===============================================================================================\r\nplatform darwin -- Python 2.7.13, pytest-3.2.5, py-1.5.2, pluggy-0.4.0 -- /usr/local/opt/python/bin/python2.7\r\ncachedir: .cache\r\nrootdir: /Users/richard/client/interdigital/devops/provision/misc/test-try, inifile:\r\nplugins: testinfra-1.9.1\r\ncollected 3 items                                                                                                                                                                                                 \r\n\r\ntest_try.py::test_myvar_using_get_variables[ansible://localhost] PASSED\r\ntest_try.py::test_myvar_using_debug_var[ansible://localhost] PASSED\r\ntest_try.py::test_myvar_using_debug_msg[ansible://localhost] PASSED\r\n```\r\n\r\nThanks for a great project BTW!\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/271", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/271/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/271/events", "html_url": "https://github.com/philpep/testinfra/issues/271", "id": 276255272, "node_id": "MDU6SXNzdWUyNzYyNTUyNzI=", "number": 271, "title": "Support linux remote cmd execution from Windows", "user": {"login": "igilbert", "id": 3793634, "node_id": "MDQ6VXNlcjM3OTM2MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igilbert", "html_url": "https://github.com/igilbert", "followers_url": "https://api.github.com/users/igilbert/followers", "following_url": "https://api.github.com/users/igilbert/following{/other_user}", "gists_url": "https://api.github.com/users/igilbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/igilbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igilbert/subscriptions", "organizations_url": "https://api.github.com/users/igilbert/orgs", "repos_url": "https://api.github.com/users/igilbert/repos", "events_url": "https://api.github.com/users/igilbert/events{/privacy}", "received_events_url": "https://api.github.com/users/igilbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T03:00:05Z", "updated_at": "2017-11-24T14:37:15Z", "closed_at": "2017-11-24T14:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the ssh pure backend and paramiko backend, neither of them can be launched from the Windows PC. So does testinfra support this approach?\r\nI think the support would be very nice for someone using a Windows PC to develop scripts for linux servers .  So I wish it happen.\r\n\r\nError details:\r\nThe error message is as follows:\r\n```\r\n\"py.test --ssh-config=ssh-config test_myinfra.py\r\n============================= test session starts =============================\r\nplatform win32 -- Python 2.7.13, pytest-3.2.5, py-1.5.2, pluggy-0.4.0\r\nrootdir: D:\\Users\\gilbert.guo\\IdeaProjects\\moana\\spectest, inifile:\r\nplugins: testinfra-1.9.0\r\ncollected 1 item                                                                \r\n\r\ntest_myinfra.py F\r\n\r\n================================== FAILURES ===================================\r\n___________________________ test_passwd_file[local] ___________________________\r\n\r\nhost = <testinfra.host.Host object at 0x00000000043E6F28>\r\n\r\n    def test_passwd_file(host):\r\n>       passwd = host.file(\"/etc/passwd\")\r\n\r\ntest_myinfra.py:2:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nd:\\python27\\lib\\site-packages\\testinfra\\host.py:91: in __getattr__\r\n    obj = module_class.get_module(self)\r\nd:\\python27\\lib\\site-packages\\testinfra\\modules\\base.py:33: in get_module\r\n    klass = cls.get_module_class(_host)\r\nd:\\python27\\lib\\site-packages\\testinfra\\modules\\file.py:176: in get_module_class\r\n    if host.system_info.type == \"linux\":\r\nd:\\python27\\lib\\site-packages\\testinfra\\modules\\systeminfo.py:114: in type\r\n    return self.sysinfo[\"type\"]\r\nd:\\python27\\lib\\site-packages\\testinfra\\utils\\__init__.py:42: in __get__\r\n    value = obj.__dict__[self.func.__name__] = self.func(obj)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <testinfra.modules.base.SystemInfo object at 0x0000000004411080>\r\n\r\n    @cached_property\r\n    def sysinfo(self):\r\n        sysinfo = {\r\n            \"type\": None,\r\n            \"distribution\": None,\r\n            \"codename\": None,\r\n            \"release\": None,\r\n        }\r\n>       sysinfo[\"type\"] = self.check_output(\"uname -s\").lower()\r\nE       AssertionError: Unexpected exit code 1 for CommandResult(command='uname -s', exit_status=1, stdout=None, stderr=\"'uname' \\xb2\\xbb\\xca\\\r\nxc7\\xc4\\xda\\xb2\\xbf\\xbb\\xf2\\xcd\\xe2\\xb2\\xbf\\xc3\\xfc\\xc1\\xee\\xa3\\xac\\xd2\\xb2\\xb2\\xbb\\xca\\xc7\\xbf\\xc9\\xd4\\xcb\\xd0\\xd0\\xb5\\xc4\\xb3\\xcc\\xd0\\xf2\\r\\\r\nn\\xbb\\xf2\\xc5\\xfa\\xb4\\xa6\\xc0\\xed\\xce\\xc4\\xbc\\xfe\\xa1\\xa3\\r\\n\")\r\nE       assert 1 == 0\r\nE        +  where 1 = CommandResult(command='uname -s', exit_status=1, stdout=None, stderr=\"'uname' ...3\\xcc\\xd0\\xf2\\r\\n\\xbb\\xf2\\xc5\\xfa\\xb4\\x\r\na6\\xc0\\xed\\xce\\xc4\\xbc\\xfe\\xa1\\xa3\\r\\n\").rc\r\n\r\nd:\\python27\\lib\\site-packages\\testinfra\\modules\\systeminfo.py:33: AssertionError\r\n========================== 1 failed in 0.31 seconds =  \"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/267", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/267/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/267/events", "html_url": "https://github.com/philpep/testinfra/issues/267", "id": 275642921, "node_id": "MDU6SXNzdWUyNzU2NDI5MjE=", "number": 267, "title": "issue with doctests, how to disable testinfra pluggin ", "user": {"login": "gohierf", "id": 33861657, "node_id": "MDQ6VXNlcjMzODYxNjU3", "avatar_url": "https://avatars0.githubusercontent.com/u/33861657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gohierf", "html_url": "https://github.com/gohierf", "followers_url": "https://api.github.com/users/gohierf/followers", "following_url": "https://api.github.com/users/gohierf/following{/other_user}", "gists_url": "https://api.github.com/users/gohierf/gists{/gist_id}", "starred_url": "https://api.github.com/users/gohierf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gohierf/subscriptions", "organizations_url": "https://api.github.com/users/gohierf/orgs", "repos_url": "https://api.github.com/users/gohierf/repos", "events_url": "https://api.github.com/users/gohierf/events{/privacy}", "received_events_url": "https://api.github.com/users/gohierf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-21T09:37:15Z", "updated_at": "2017-11-22T21:01:12Z", "closed_at": "2017-11-22T21:01:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI get the following error while trying to run doctests through pytest, apparently due to the testinfra pluging.\r\nYet I can't seem to be able to disable the plugin.\r\nI'm doing anything wrong or is this an issue from testinfra ?\r\n```\r\n$ pytest -p no:testinfra-1.9.0 --doctest-modules\r\n================================================================================================================================== test session starts ===================================================================================================================================\r\nplatform linux2 -- Python 2.7.5, pytest-3.2.3, py-1.4.34, pluggy-0.4.0\r\nrootdir: /home/fgohier/development/duplicate_repos, inifile:\r\nplugins: testinfra-1.9.0\r\ncollected 10 items                                                                                                                                                                                                                                                                        \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 110, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 145, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 155, in pytest_collection\r\nINTERNALERROR>     return session.perform_collect()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/main.py\", line 650, in perform_collect\r\nINTERNALERROR>     hook.pytest_collection_finish(session=self)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/lib/python2.7/site-packages/testinfra/plugin.py\", line 160, in pytest_collection_finish\r\nINTERNALERROR>     deprecated_used |= (set(item.fixturenames) & deprecated_modules)\r\nINTERNALERROR> AttributeError: 'DoctestItem' object has no attribute 'fixturenames'\r\n\r\n============================================================================================================================== no tests ran in 0.12 seconds ==============================================================================================================================\r\n```\r\nI get the same issue with or without `-p no:testinfra-1.9.0`, which doesn't seem to disable the plugin as I expected it to.\r\nI don't get any issue if I don't try to run my test with `--doctest-modules`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/264", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/264/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/264/events", "html_url": "https://github.com/philpep/testinfra/issues/264", "id": 272255362, "node_id": "MDU6SXNzdWUyNzIyNTUzNjI=", "number": 264, "title": "Feature Request: Docker module", "user": {"login": "blackillzone", "id": 2394200, "node_id": "MDQ6VXNlcjIzOTQyMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2394200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackillzone", "html_url": "https://github.com/blackillzone", "followers_url": "https://api.github.com/users/blackillzone/followers", "following_url": "https://api.github.com/users/blackillzone/following{/other_user}", "gists_url": "https://api.github.com/users/blackillzone/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackillzone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackillzone/subscriptions", "organizations_url": "https://api.github.com/users/blackillzone/orgs", "repos_url": "https://api.github.com/users/blackillzone/repos", "events_url": "https://api.github.com/users/blackillzone/events{/privacy}", "received_events_url": "https://api.github.com/users/blackillzone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-08T16:10:20Z", "updated_at": "2019-02-19T07:55:22Z", "closed_at": "2019-02-19T07:55:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this possible to add a module, to check if a docker service is up (like the service module would currently do) ?\r\n\r\nI would see something like this (with more or less functionalities):\r\n\r\n```\r\nclass Docker(name)\r\n     is_running\r\nTest if container is running\r\n\r\n     is_listening\r\nTest if container is listening to ports\r\n\r\n     version\r\nReturn version of the image that the container is running\r\n```\r\n\r\nWhat do you think about this ? Could it be relevant to add it ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/260", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/260/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/260/events", "html_url": "https://github.com/philpep/testinfra/issues/260", "id": 267106061, "node_id": "MDU6SXNzdWUyNjcxMDYwNjE=", "number": 260, "title": "Documentation: SystemInfo has method hostname, but nothing in docs", "user": {"login": "amarao", "id": 652496, "node_id": "MDQ6VXNlcjY1MjQ5Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/652496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amarao", "html_url": "https://github.com/amarao", "followers_url": "https://api.github.com/users/amarao/followers", "following_url": "https://api.github.com/users/amarao/following{/other_user}", "gists_url": "https://api.github.com/users/amarao/gists{/gist_id}", "starred_url": "https://api.github.com/users/amarao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amarao/subscriptions", "organizations_url": "https://api.github.com/users/amarao/orgs", "repos_url": "https://api.github.com/users/amarao/repos", "events_url": "https://api.github.com/users/amarao/events{/privacy}", "received_events_url": "https://api.github.com/users/amarao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-20T08:51:51Z", "updated_at": "2017-10-22T15:45:47Z", "closed_at": "2017-10-22T15:43:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Introspection shows that SystemInfo has mehtod `hostname`:\r\n\r\n```\r\ndir(testinfra.modules.SystemInfo)\r\n...\r\n... 'group', 'hostname', 'release'...\r\n```\r\nand it works: `assert ssh_backend.SystemInfo.hostname == 'myhostname'`\r\n\r\nBut documentation http://testinfra.readthedocs.io/en/latest/modules.html#testinfra.modules.systeminfo.SystemInfo has nothing about it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/258", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/258/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/258/events", "html_url": "https://github.com/philpep/testinfra/issues/258", "id": 264969809, "node_id": "MDU6SXNzdWUyNjQ5Njk4MDk=", "number": 258, "title": "ip: command not found", "user": {"login": "loomsen", "id": 302524, "node_id": "MDQ6VXNlcjMwMjUyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/302524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loomsen", "html_url": "https://github.com/loomsen", "followers_url": "https://api.github.com/users/loomsen/followers", "following_url": "https://api.github.com/users/loomsen/following{/other_user}", "gists_url": "https://api.github.com/users/loomsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/loomsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loomsen/subscriptions", "organizations_url": "https://api.github.com/users/loomsen/orgs", "repos_url": "https://api.github.com/users/loomsen/repos", "events_url": "https://api.github.com/users/loomsen/events{/privacy}", "received_events_url": "https://api.github.com/users/loomsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-12T14:46:51Z", "updated_at": "2017-10-22T16:00:00Z", "closed_at": "2017-10-22T15:25:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys. \r\n\r\nI'm using testinfra through molecule, and experienced a bug. It tells me ip: command not found. \r\n\r\n```\r\n    ============================= test session starts ==============================\r\n    platform linux2 -- Python 2.7.13, pytest-3.2.3, py-1.4.34, pluggy-0.4.0\r\n    rootdir: /home/user/git.example.de/example_project/provisioning/roles/haproxy/molecule/default, inifile:\r\n    plugins: testinfra-1.7.1\r\ncollected 18 items                                                              \r\n    \r\n    tests/test_lbweb1.py FFFFF.F.\r\n    tests/test_default.py ....\r\n    tests/test_lbweb2.py F..F..\r\n    \r\n    =================================== FAILURES ===================================\r\n    _________________ test_keepalived_on_lbweb1[ansible://lbweb2] __________________\r\n    \r\n    host = <testinfra.host.Host object at 0x7f2ecd47d290>\r\n    \r\n        def test_keepalived_on_lbweb1(host):\r\n            interface = host.interface('enp0s8:0')\r\n        \r\n    >       assert \"192.168.11.7\" not in interface.addresses\r\n    \r\n    tests/test_lbweb1.py:13:\r\n    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n    \r\n    self = <interface enp0s8:0>\r\n    \r\n        @property\r\n        def addresses(self):\r\n    >       stdout = self.check_output(\"ip addr show %s\", self.name)\r\n    E       AssertionError: Unexpected exit code 127 for CommandResult(command=u'ip addr show enp0s8:0', exit_status=127, stdout=u'', stderr=u'/bin/bash: ip: command not found')\r\n    E       assert 127 == 0\r\n    E        +  where 127 = CommandResult(command=u'ip addr show enp0s8:0', exit_status=127, stdout=u'', stderr=u'/bin/bash: ip: command not found').rc\r\n    \r\n    /home/user/.local/lib/python2.7/site-packages/testinfra/modules/interface.py:69: AssertionError\r\n```\r\nThere are the same errors reported coming from line 60 of testinfra/modules/interface.py.\r\n\r\nWhen I change the command in those lines to use the full path, the tests succeed:\r\n```\r\nansible-2.3 user:~/$ sed -n -e '60p' -e '69p' /home/user/python-venv/ansible-2.3/lib/python2.7/site-packages/testinfra/modules/interface.py\r\n        return self.run_test(\"/usr/sbin/ip link show %s\", self.name).rc == 0\r\n        stdout = self.check_output(\"/usr/sbin/ip addr show %s\", self.name)\r\n```\r\n```\r\nansible-2.3 user:~/$ molecule verify\r\n--> Test matrix\r\n    \r\n\u2514\u2500\u2500 default\r\n    \u2514\u2500\u2500 verify\r\n--> Scenario: 'default'\r\n--> Action: 'verify'\r\n--> Executing Testinfra tests found in /home/user/git.example.de/example_project/provisioning/roles/haproxy/molecule/default/tests/...\r\n    ============================= test session starts ==============================\r\n    platform linux2 -- Python 2.7.13, pytest-3.2.3, py-1.4.34, pluggy-0.4.0\r\n    rootdir: /home/user/git.example.de/example_project/provisioning/roles/haproxy/molecule/default, inifile:\r\n    plugins: testinfra-1.7.1\r\ncollected 14 items                                                              \r\n    \r\n    tests/test_lbweb1.py ....\r\n    tests/test_default.py ....\r\n    tests/test_lbweb2.py ......\r\n    \r\n    ========================== 14 passed in 24.32 seconds ==========================\r\nVerifier completed successfully.\r\n```\r\n\r\nWhen I login to the box, the command is there of course:\r\n```\r\n[vagrant@lbweb1 ~]$ which ip\r\n/usr/sbin/ip\r\n[vagrant@lbweb1 ~]$ `!!` a\r\n`which ip` a\r\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN \r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n    inet 127.0.0.1/8 scope host lo\r\n       valid_lft forever preferred_lft forever\r\n2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\r\n    link/ether 08:00:27:91:e5:59 brd ff:ff:ff:ff:ff:ff\r\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic enp0s3\r\n       valid_lft 75268sec preferred_lft 75268sec\r\n3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\r\n    link/ether 08:00:27:97:1a:db brd ff:ff:ff:ff:ff:ff\r\n    inet 192.168.11.5/24 brd 192.168.11.255 scope global enp0s8\r\n       valid_lft forever preferred_lft forever\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/254", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/254/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/254/events", "html_url": "https://github.com/philpep/testinfra/issues/254", "id": 262072516, "node_id": "MDU6SXNzdWUyNjIwNzI1MTY=", "number": 254, "title": "target a specific inventory host during a test", "user": {"login": "leseb", "id": 912735, "node_id": "MDQ6VXNlcjkxMjczNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/912735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leseb", "html_url": "https://github.com/leseb", "followers_url": "https://api.github.com/users/leseb/followers", "following_url": "https://api.github.com/users/leseb/following{/other_user}", "gists_url": "https://api.github.com/users/leseb/gists{/gist_id}", "starred_url": "https://api.github.com/users/leseb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leseb/subscriptions", "organizations_url": "https://api.github.com/users/leseb/orgs", "repos_url": "https://api.github.com/users/leseb/repos", "events_url": "https://api.github.com/users/leseb/events{/privacy}", "received_events_url": "https://api.github.com/users/leseb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660505, "node_id": "MDU6TGFiZWwxODc2NjA1MDU=", "url": "https://api.github.com/repos/philpep/testinfra/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-02T12:44:45Z", "updated_at": "2018-01-31T16:04:58Z", "closed_at": "2018-01-31T16:04:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nThanks for this project! It's working great.\r\n\r\nI have one question, we use the Ansible connection for our tests and I'd like to know if it's possible to call a particular host variable from the host the test is running on.\r\n\r\nI'd like to use something like this: `{{ hostvars[groups[mon_group_name][0]]['ansible_hostname'] }}`\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/249", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/249/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/249/events", "html_url": "https://github.com/philpep/testinfra/issues/249", "id": 258808456, "node_id": "MDU6SXNzdWUyNTg4MDg0NTY=", "number": 249, "title": "Error with Ansible 2.4", "user": {"login": "gtirloni", "id": 5902830, "node_id": "MDQ6VXNlcjU5MDI4MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5902830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtirloni", "html_url": "https://github.com/gtirloni", "followers_url": "https://api.github.com/users/gtirloni/followers", "following_url": "https://api.github.com/users/gtirloni/following{/other_user}", "gists_url": "https://api.github.com/users/gtirloni/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtirloni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtirloni/subscriptions", "organizations_url": "https://api.github.com/users/gtirloni/orgs", "repos_url": "https://api.github.com/users/gtirloni/repos", "events_url": "https://api.github.com/users/gtirloni/events{/privacy}", "received_events_url": "https://api.github.com/users/gtirloni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-19T12:49:43Z", "updated_at": "2017-09-22T12:16:33Z", "closed_at": "2017-09-22T12:05:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Versions:**\r\n\r\n- testinfra 1.7.0\r\n- ansible 2.4.0\r\n- molecule 1.25\r\n\r\n**Error:**\r\n\r\n```\r\n____________________ ERROR collecting tests/test_default.py ____________________\r\ntests/test_default.py:5: in <module>\r\n    '.molecule/ansible_inventory').get_hosts('all')\r\nvenv/lib/python2.7/site-packages/testinfra/utils/ansible_runner.py:150: in __init__\r\n    self.variable_manager = ansible.vars.VariableManager()\r\nE   AttributeError: 'module' object has no attribute 'VariableManager'\r\n```\r\n\r\n**test_default.py:**\r\n\r\n```\r\nimport testinfra.utils.ansible_runner\r\n\r\ntestinfra_hosts = testinfra.utils.ansible_runner.AnsibleRunner(\r\n    '.molecule/ansible_inventory').get_hosts('all')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/242", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/242/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/242/events", "html_url": "https://github.com/philpep/testinfra/issues/242", "id": 254902061, "node_id": "MDU6SXNzdWUyNTQ5MDIwNjE=", "number": 242, "title": "The Examples documentation for Test Docker Images has flaws", "user": {"login": "codylane", "id": 1258262, "node_id": "MDQ6VXNlcjEyNTgyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1258262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codylane", "html_url": "https://github.com/codylane", "followers_url": "https://api.github.com/users/codylane/followers", "following_url": "https://api.github.com/users/codylane/following{/other_user}", "gists_url": "https://api.github.com/users/codylane/gists{/gist_id}", "starred_url": "https://api.github.com/users/codylane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codylane/subscriptions", "organizations_url": "https://api.github.com/users/codylane/orgs", "repos_url": "https://api.github.com/users/codylane/repos", "events_url": "https://api.github.com/users/codylane/events{/privacy}", "received_events_url": "https://api.github.com/users/codylane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-03T21:30:47Z", "updated_at": "2017-10-22T15:39:40Z", "closed_at": "2017-10-22T15:39:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI was playing with the 'Test docker Images' here: https://testinfra.readthedocs.io/en/latest/examples.html#test-docker-images\r\n\r\nI had implemented a single parameterized test using the `docker_images` decorator as suggested and noticed that the behavior was unexpected and caused me to troubleshoot why my tests where using the wrong OS for more than a few hours.  \r\n\r\nHere's an example that will reproduce this.\r\n\r\nVERSION INFO\r\n===========\r\n- testinfra version: 1.6.5\r\n- docker version: 17.04\r\n- python version: 2.7.13\r\n- pytest version: 3.2.1\r\n\r\n# Step 1\r\n- Configure your `tests/conftest.py` as recommended in the link above.\r\n\r\n# Step 2\r\n- Implement some test\r\n```\r\n# tests/test_flaw.py\r\n\r\n@pytest.mark.docker_images('centos:6')\r\ndef test_user_exists_on_centos6(host):\r\n    root_user = host.user('root')\r\n\r\n    assert root_user.exists\r\n    assert root_user.shell == '/bin/base'\r\n    assert root_user.gecos == 'root'\r\n    assert root_user.home == '/root'\r\n    assert root_user.group == 'root'\r\n\r\n@pytest.mark.docker_images('centos:7')\r\ndef test_user_exists_on_centos7(host):\r\n\r\n    # This will catch the flawed behavior.  On my system the system under test was CentOS 6.x!\r\n    assert host.system_info.release == '7'\r\n\r\n    root_user = host.user('root')\r\n\r\n    assert root_user.exists\r\n    assert root_user.shell == '/bin/base'\r\n    assert root_user.gecos == 'root'\r\n    assert root_user.home == '/root'\r\n    assert root_user.group == 'root'\r\n```\r\n- Behavior of the above is not what you expect.  Yes, I can combine the test into a single test and just use the decorator `@pytest.mark.docker_images('centos:6', 'centos:7')` but the flawed behavior is the same. \r\n\r\n- We expect the two tests to run under two different docker containers one for `centos:6` and one for `centos:7`.  However, what I noticed was that I was executing two tests under `centos:6` even when the second test should have only executed on `centos:7`.  The assertion in the second test should expose the unexpected behavior that I'm noticing.  \r\n\r\nI'll provide the example failure later.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/234", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/234/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/234/events", "html_url": "https://github.com/philpep/testinfra/issues/234", "id": 253870449, "node_id": "MDU6SXNzdWUyNTM4NzA0NDk=", "number": 234, "title": "Socket module doesn't return ipv4 client connected to tcp6 socket", "user": {"login": "TristanCacqueray", "id": 154392, "node_id": "MDQ6VXNlcjE1NDM5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/154392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TristanCacqueray", "html_url": "https://github.com/TristanCacqueray", "followers_url": "https://api.github.com/users/TristanCacqueray/followers", "following_url": "https://api.github.com/users/TristanCacqueray/following{/other_user}", "gists_url": "https://api.github.com/users/TristanCacqueray/gists{/gist_id}", "starred_url": "https://api.github.com/users/TristanCacqueray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TristanCacqueray/subscriptions", "organizations_url": "https://api.github.com/users/TristanCacqueray/orgs", "repos_url": "https://api.github.com/users/TristanCacqueray/repos", "events_url": "https://api.github.com/users/TristanCacqueray/events{/privacy}", "received_events_url": "https://api.github.com/users/TristanCacqueray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-30T03:49:57Z", "updated_at": "2017-09-01T14:14:26Z", "closed_at": "2017-09-01T14:14:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\ntcp6 socket actually works for both ipv4 and ipv6. See [section 3.7 - Compatibility with IPv4 Nodes of RFC 3493 - Basic Socket Interface Extensions for IPv6](https://tools.ietf.org/html/rfc3493#section-3.7).\r\n\r\nThus, when a daemon only creates a tcp6 socket, it can be used by ipv4 client. For example, the gerrit server only creates a tcp6 socket, and ipv4 clients looks like this in netstat:\r\n\r\n```bash\r\n$ netstat -nea | grep 29418\r\ntcp        0      0 192.168.0.109:53594     192.168.0.109:29418     ESTABLISHED 994        44153592  \r\ntcp6       0      0 :::29418                :::*                    LISTEN      995        44154634\r\n```\r\n\r\nThis behavior makes it impossible to look for gerrit clients with testinfra Socket module:\r\n* host.socket(\"tcp://:::29418\") works but  .clients returns empty list\r\n* host.socket(\"tcp://0.0.0.0:29418\") or \"tcp://29418\" doesn't works\r\n\r\nIt seems like \"tcp://$port\" should works when there is any tcp6 socket.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/229", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/229/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/229/events", "html_url": "https://github.com/philpep/testinfra/issues/229", "id": 251055497, "node_id": "MDU6SXNzdWUyNTEwNTU0OTc=", "number": 229, "title": "xpost from saltstack issue backlog", "user": {"login": "adeck", "id": 6640582, "node_id": "MDQ6VXNlcjY2NDA1ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6640582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adeck", "html_url": "https://github.com/adeck", "followers_url": "https://api.github.com/users/adeck/followers", "following_url": "https://api.github.com/users/adeck/following{/other_user}", "gists_url": "https://api.github.com/users/adeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/adeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adeck/subscriptions", "organizations_url": "https://api.github.com/users/adeck/orgs", "repos_url": "https://api.github.com/users/adeck/repos", "events_url": "https://api.github.com/users/adeck/events{/privacy}", "received_events_url": "https://api.github.com/users/adeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-17T20:01:23Z", "updated_at": "2017-08-26T09:21:05Z", "closed_at": "2017-08-26T09:21:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like no one is working on:\r\nhttps://github.com/saltstack/salt/issues/40916\r\n\r\nIt's still an issue in the current version of salt. Since it's the salt testinfra integration, I though it might be useful to widen the visibility to both teams.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/228", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/228/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/228/events", "html_url": "https://github.com/philpep/testinfra/issues/228", "id": 250062730, "node_id": "MDU6SXNzdWUyNTAwNjI3MzA=", "number": 228, "title": "Support alpine docker images", "user": {"login": "bbaassssiiee", "id": 10671559, "node_id": "MDQ6VXNlcjEwNjcxNTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/10671559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbaassssiiee", "html_url": "https://github.com/bbaassssiiee", "followers_url": "https://api.github.com/users/bbaassssiiee/followers", "following_url": "https://api.github.com/users/bbaassssiiee/following{/other_user}", "gists_url": "https://api.github.com/users/bbaassssiiee/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbaassssiiee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbaassssiiee/subscriptions", "organizations_url": "https://api.github.com/users/bbaassssiiee/orgs", "repos_url": "https://api.github.com/users/bbaassssiiee/repos", "events_url": "https://api.github.com/users/bbaassssiiee/events{/privacy}", "received_events_url": "https://api.github.com/users/bbaassssiiee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660502, "node_id": "MDU6TGFiZWwxODc2NjA1MDI=", "url": "https://api.github.com/repos/philpep/testinfra/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 187660503, "node_id": "MDU6TGFiZWwxODc2NjA1MDM=", "url": "https://api.github.com/repos/philpep/testinfra/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-14T15:16:21Z", "updated_at": "2018-02-02T11:16:02Z", "closed_at": "2018-02-02T11:16:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "My Dockerfile starts with:\r\n\r\n`FROM nginx:1.12-alpine`\r\n\r\nIn my Dockerfile I want to pull images based on Alpine because these are way smaller than Ubuntu, Centos, and the like. Alpine uses BusyBox so command options are limited. \r\n\r\n[BusyBox Commands]https://busybox.net/downloads/BusyBox.html#commands )\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/224", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/224/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/224/events", "html_url": "https://github.com/philpep/testinfra/issues/224", "id": 245177174, "node_id": "MDU6SXNzdWUyNDUxNzcxNzQ=", "number": 224, "title": "Remote TCP check", "user": {"login": "giovtorres", "id": 4281845, "node_id": "MDQ6VXNlcjQyODE4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4281845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giovtorres", "html_url": "https://github.com/giovtorres", "followers_url": "https://api.github.com/users/giovtorres/followers", "following_url": "https://api.github.com/users/giovtorres/following{/other_user}", "gists_url": "https://api.github.com/users/giovtorres/gists{/gist_id}", "starred_url": "https://api.github.com/users/giovtorres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giovtorres/subscriptions", "organizations_url": "https://api.github.com/users/giovtorres/orgs", "repos_url": "https://api.github.com/users/giovtorres/repos", "events_url": "https://api.github.com/users/giovtorres/events{/privacy}", "received_events_url": "https://api.github.com/users/giovtorres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-24T19:00:43Z", "updated_at": "2017-08-17T17:43:15Z", "closed_at": "2017-08-17T17:43:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a way to do a remote TCP check?  The Socket module runs on the system-under-test and checks local sockets.  It would be helpful to have the ability to remotely check if a host is listening and reachable on ports 80/443, for example.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/222", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/222/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/222/events", "html_url": "https://github.com/philpep/testinfra/issues/222", "id": 242683587, "node_id": "MDU6SXNzdWUyNDI2ODM1ODc=", "number": 222, "title": "No support for private keys in the CLI?", "user": {"login": "talonx", "id": 163788, "node_id": "MDQ6VXNlcjE2Mzc4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/163788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talonx", "html_url": "https://github.com/talonx", "followers_url": "https://api.github.com/users/talonx/followers", "following_url": "https://api.github.com/users/talonx/following{/other_user}", "gists_url": "https://api.github.com/users/talonx/gists{/gist_id}", "starred_url": "https://api.github.com/users/talonx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talonx/subscriptions", "organizations_url": "https://api.github.com/users/talonx/orgs", "repos_url": "https://api.github.com/users/talonx/repos", "events_url": "https://api.github.com/users/talonx/events{/privacy}", "received_events_url": "https://api.github.com/users/talonx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660502, "node_id": "MDU6TGFiZWwxODc2NjA1MDI=", "url": "https://api.github.com/repos/philpep/testinfra/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-13T12:26:44Z", "updated_at": "2017-08-12T16:07:32Z", "closed_at": "2017-08-12T16:07:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "testinfra does not seem to support private keys as a command line option. The closest think I could find is the --ssh-config file, which is a static file and cannot be depended upon in automated environments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/221", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/221/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/221/events", "html_url": "https://github.com/philpep/testinfra/issues/221", "id": 242588688, "node_id": "MDU6SXNzdWUyNDI1ODg2ODg=", "number": 221, "title": "Mount options returns list of unicode strings", "user": {"login": "rwaweber", "id": 5834777, "node_id": "MDQ6VXNlcjU4MzQ3Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5834777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwaweber", "html_url": "https://github.com/rwaweber", "followers_url": "https://api.github.com/users/rwaweber/followers", "following_url": "https://api.github.com/users/rwaweber/following{/other_user}", "gists_url": "https://api.github.com/users/rwaweber/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwaweber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwaweber/subscriptions", "organizations_url": "https://api.github.com/users/rwaweber/orgs", "repos_url": "https://api.github.com/users/rwaweber/repos", "events_url": "https://api.github.com/users/rwaweber/events{/privacy}", "received_events_url": "https://api.github.com/users/rwaweber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-13T05:23:58Z", "updated_at": "2017-07-13T13:43:30Z", "closed_at": "2017-07-13T13:43:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's possible I'm being thick here(I'm probably missing a python 3 compatibility thing), but when using the options attribute of the mount_point module, it seems to return unicode strings, which doesn't seem to fit the documentation below:\r\n\r\nhttps://github.com/philpep/testinfra/blob/master/testinfrbya/modules/mountpoint.py#L75-#L83\r\n\r\nEDIT:\r\nThe same also seems to be occurring with the User module, for the groups attribute.\r\n\r\n#### Reproduction ####\r\nBeen working on vagrant bento/debian-8.8, using python 2.7.9, and testinfra 1.6.4\r\n```python\r\n\r\nimport testinfra\r\nconn = testinfra.get_host('local://')\r\nprint(conn.mount_point('/').options)\r\nprint(conn.user('root').groups)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/216", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/216/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/216/events", "html_url": "https://github.com/philpep/testinfra/issues/216", "id": 239603437, "node_id": "MDU6SXNzdWUyMzk2MDM0Mzc=", "number": 216, "title": "Older versions of the documentation viewable?", "user": {"login": "lnunno", "id": 5023012, "node_id": "MDQ6VXNlcjUwMjMwMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5023012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnunno", "html_url": "https://github.com/lnunno", "followers_url": "https://api.github.com/users/lnunno/followers", "following_url": "https://api.github.com/users/lnunno/following{/other_user}", "gists_url": "https://api.github.com/users/lnunno/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnunno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnunno/subscriptions", "organizations_url": "https://api.github.com/users/lnunno/orgs", "repos_url": "https://api.github.com/users/lnunno/repos", "events_url": "https://api.github.com/users/lnunno/events{/privacy}", "received_events_url": "https://api.github.com/users/lnunno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-29T20:35:11Z", "updated_at": "2017-06-30T18:02:33Z", "closed_at": "2017-06-30T18:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the read the docs site it looks like only latest and stable are available to view, any chance on adding older versions to the site? For example, being able to view 1.5.5 would be helpful since that's the currently compatible version with molecule.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/211", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/211/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/211/events", "html_url": "https://github.com/philpep/testinfra/issues/211", "id": 236508240, "node_id": "MDU6SXNzdWUyMzY1MDgyNDA=", "number": 211, "title": "Service module fails to execute service command", "user": {"login": "LeonidsN", "id": 29483919, "node_id": "MDQ6VXNlcjI5NDgzOTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/29483919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeonidsN", "html_url": "https://github.com/LeonidsN", "followers_url": "https://api.github.com/users/LeonidsN/followers", "following_url": "https://api.github.com/users/LeonidsN/following{/other_user}", "gists_url": "https://api.github.com/users/LeonidsN/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeonidsN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeonidsN/subscriptions", "organizations_url": "https://api.github.com/users/LeonidsN/orgs", "repos_url": "https://api.github.com/users/LeonidsN/repos", "events_url": "https://api.github.com/users/LeonidsN/events{/privacy}", "received_events_url": "https://api.github.com/users/LeonidsN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-16T14:58:50Z", "updated_at": "2017-06-26T16:16:16Z", "closed_at": "2017-06-26T15:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nHaving issue with running service command use from testinfra - it fails to be executed properly.\r\n\r\nExample invocation:\r\n`ctx.Service('ntpd').is_running`\r\n\r\nI am getting this command executed actually:\r\n`$ ssh -o User=<user> -- <server>.com 'service ntpd status'`\r\n\r\nand this output from a particular server:\r\n`bash: service: command not found`\r\n\r\nI see from code from where this is being executed:\r\n```\r\nclass SysvService(Service):\r\n\r\n    @property\r\n    def is_running(self):\r\n        # based on /lib/lsb/init-functions\r\n        # 0: program running\r\n        # 1: program is dead and pid file exists\r\n        # 3: not running and pid file does not exists\r\n        # 4: Unable to determine status\r\n        return self.run_expect(\r\n            [0, 1, 3], \"service %s status\", self.name).rc == 0\r\n```\r\n\r\nMy further investigation shows that when I do login, and bash profile is loaded - then I can execute service command successfully from the server in question.\r\nRunning from Testinfra works differently - it triggers a command invocation from single ssh request, so I can see that no path to service is found and command fails. \r\nI also see that running command with this format will be successfull:\r\n`$ ssh -o User=<user> -- <server>.com '/sbin/service ntpd status'`\r\n\r\nHere is actual traceback, (with removed sensitive data):\r\n\r\n`Traceback (most recent call last):\r\n  File \"<...>\\tests\\example\\sh_test.py\", line 17, in test\r\n    assert ctx.Service('ntpd').is_running\r\n  File \"<...>\\testinfra\\modules\\service.py\", line 85, in is_running\r\n    [0, 1, 3], \"service %s status\", self.name).rc == 0\r\n  File \"<...>\\testinfra\\modules\\base.py\", line 34, in run_expect\r\n    pytest.fail(\"Unexpected exit code %s for %s\" % (out.rc, out))\r\n  File \"c:\\python27\\lib\\site-packages\\_pytest\\runner.py\", line 542, in fail\r\n    raise Failed(msg=msg, pytrace=pytrace)\r\nFailed: Unexpected exit code 127 for CommandResult(command=\"ssh -o User=<...> -- <...>.com 'service ntpd status'\", exit_status=127, stdout=u'', stderr='bash: service: command not found\\n')`\r\n\r\nNote that we are using modifed testinfra but I believe root cause is still the same as in original sources.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/210", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/210/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/210/events", "html_url": "https://github.com/philpep/testinfra/issues/210", "id": 236444887, "node_id": "MDU6SXNzdWUyMzY0NDQ4ODc=", "number": 210, "title": "testinfra conflicts with pytest-flake8", "user": {"login": "calind", "id": 266375, "node_id": "MDQ6VXNlcjI2NjM3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/266375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calind", "html_url": "https://github.com/calind", "followers_url": "https://api.github.com/users/calind/followers", "following_url": "https://api.github.com/users/calind/following{/other_user}", "gists_url": "https://api.github.com/users/calind/gists{/gist_id}", "starred_url": "https://api.github.com/users/calind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calind/subscriptions", "organizations_url": "https://api.github.com/users/calind/orgs", "repos_url": "https://api.github.com/users/calind/repos", "events_url": "https://api.github.com/users/calind/events{/privacy}", "received_events_url": "https://api.github.com/users/calind/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-16T10:34:21Z", "updated_at": "2017-12-03T17:34:37Z", "closed_at": "2017-12-03T17:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ make lint\r\npy.test -v --color=yes --flake8 -m 'flake8' -p 'no:testinfra'\r\n============================================================================================================ test session starts =============================================================================================================\r\nplatform darwin -- Python 2.7.10, pytest-3.0.7, py-1.4.34, pluggy-0.4.0 -- /Users/calin/.virtualenvs/ansible-playbooks/bin/python\r\ncachedir: .cache\r\nrootdir: /Users/calin/work/ansible-playbooks, inifile:\r\nplugins: testinfra-1.6.3, flake8-0.8.1\r\ncollected 13 items\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/main.py\", line 98, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/main.py\", line 132, in _main\r\nINTERNALERROR>     config.hook.pytest_collection(session=session)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/main.py\", line 141, in pytest_collection\r\nINTERNALERROR>     return session.perform_collect()\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/main.py\", line 604, in perform_collect\r\nINTERNALERROR>     hook.pytest_collection_finish(session=self)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/Users/calin/.virtualenvs/ansible-playbooks/lib/python2.7/site-packages/testinfra/plugin.py\", line 149, in pytest_collection_finish\r\nINTERNALERROR>     deprecated_used |= (set(item.fixturenames) & deprecated_modules)\r\nINTERNALERROR> AttributeError: 'Flake8Item' object has no attribute 'fixturenames'\r\n\r\n======================================================================================================== no tests ran in 0.17 seconds ========================================================================================================\r\nmake: *** [lint] Error 3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/209", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/209/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/209/events", "html_url": "https://github.com/philpep/testinfra/issues/209", "id": 235906944, "node_id": "MDU6SXNzdWUyMzU5MDY5NDQ=", "number": 209, "title": "Docker testing doesn't work according to documentation", "user": {"login": "jcmcken", "id": 1117819, "node_id": "MDQ6VXNlcjExMTc4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1117819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmcken", "html_url": "https://github.com/jcmcken", "followers_url": "https://api.github.com/users/jcmcken/followers", "following_url": "https://api.github.com/users/jcmcken/following{/other_user}", "gists_url": "https://api.github.com/users/jcmcken/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmcken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmcken/subscriptions", "organizations_url": "https://api.github.com/users/jcmcken/orgs", "repos_url": "https://api.github.com/users/jcmcken/repos", "events_url": "https://api.github.com/users/jcmcken/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmcken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T14:52:19Z", "updated_at": "2017-06-14T15:15:52Z", "closed_at": "2017-06-14T15:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following [this documentation](http://testinfra.readthedocs.io/en/latest/examples.html#test-docker-images), I get the following exception when attempting to run a simple Docker test:\r\n\r\n```\r\n../conftest.py:34: in pytest_generate_tests\r\n    \"host\", images, indirect=True, scope=scope)\r\n/usr/lib/python2.7/site-packages/_pytest/python.py:853: in parametrize\r\n    param.deprecated_arg_dict, scopenum, param_index)\r\n/usr/lib/python2.7/site-packages/_pytest/python.py:691: in setmulti\r\n    self._checkargnotcontained(arg)\r\n/usr/lib/python2.7/site-packages/_pytest/python.py:674: in _checkargnotcontained\r\n    raise ValueError(\"duplicate %r\" %(arg,))\r\nE   ValueError: duplicate 'host'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/207", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/207/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/207/events", "html_url": "https://github.com/philpep/testinfra/issues/207", "id": 233616665, "node_id": "MDU6SXNzdWUyMzM2MTY2NjU=", "number": 207, "title": "Socket: Expect Response", "user": {"login": "Poogles", "id": 4892260, "node_id": "MDQ6VXNlcjQ4OTIyNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4892260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Poogles", "html_url": "https://github.com/Poogles", "followers_url": "https://api.github.com/users/Poogles/followers", "following_url": "https://api.github.com/users/Poogles/following{/other_user}", "gists_url": "https://api.github.com/users/Poogles/gists{/gist_id}", "starred_url": "https://api.github.com/users/Poogles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Poogles/subscriptions", "organizations_url": "https://api.github.com/users/Poogles/orgs", "repos_url": "https://api.github.com/users/Poogles/repos", "events_url": "https://api.github.com/users/Poogles/events{/privacy}", "received_events_url": "https://api.github.com/users/Poogles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-05T14:59:38Z", "updated_at": "2017-06-05T17:25:16Z", "closed_at": "2017-06-05T17:25:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "AFAIK this isn't possible, but I'd like to be able to expect a response from a socket when querying, be it the response contains or excludes a value.\r\n\r\nThe use case for this in my case is the zookeeper 4 letter commands [here](https://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html#sc_zkCommands) where you can check to see the hosts configuration.\r\n\r\nThe example would be similar to `echo stat | nc localhost 2185 | grep $match` and either passing or failing dependent upon the output.\r\n\r\nI'll give something a shot wrapping nc as that seems the easiest if you'd take the PR?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/204", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/204/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/204/events", "html_url": "https://github.com/philpep/testinfra/issues/204", "id": 231678192, "node_id": "MDU6SXNzdWUyMzE2NzgxOTI=", "number": 204, "title": "unclear deprecation warnings", "user": {"login": "angelo-v", "id": 340725, "node_id": "MDQ6VXNlcjM0MDcyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/340725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelo-v", "html_url": "https://github.com/angelo-v", "followers_url": "https://api.github.com/users/angelo-v/followers", "following_url": "https://api.github.com/users/angelo-v/following{/other_user}", "gists_url": "https://api.github.com/users/angelo-v/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelo-v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelo-v/subscriptions", "organizations_url": "https://api.github.com/users/angelo-v/orgs", "repos_url": "https://api.github.com/users/angelo-v/repos", "events_url": "https://api.github.com/users/angelo-v/events{/privacy}", "received_events_url": "https://api.github.com/users/angelo-v/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-26T16:43:11Z", "updated_at": "2017-05-29T17:34:01Z", "closed_at": "2017-05-29T17:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since upgrading to latest testinfra all my test spit out the following warning\r\n> get_module() is deprecated, use new host API\r\n\r\nI cannot find information in the documentation about what exactly I am expected to do.\r\n\r\nI am already using the host fixture. My tests use docker connection backend and configure hosts on a per module basis via testinfra_hosts= [\"docker://container-name\"]. Same problem with some tests using ansible backend.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/203", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/203/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/203/events", "html_url": "https://github.com/philpep/testinfra/issues/203", "id": 231212396, "node_id": "MDU6SXNzdWUyMzEyMTIzOTY=", "number": 203, "title": "Testinfra doesn't appear to respect StrictHostKeyChecking with ansible connection", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-25T01:03:08Z", "updated_at": "2017-07-01T00:03:46Z", "closed_at": "2017-07-01T00:03:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the ansible connection.  I am not relying on any ssh configuration in ansible.cfg.  Everything is configured via `ansible_ssh_extra_args` magic variable.\r\n\r\n```\r\n$ testinfra --version\r\nThis is pytest version 3.0.7, imported from /Users/jodewey/.pyenv/versions/2.7.13/envs/molecule2-env-2.7.13/lib/python2.7/site-packages/pytest.pyc\r\nsetuptools registered plugins:\r\n  testinfra-1.6.2 at /Users/jodewey/.pyenv/versions/2.7.13/envs/molecule2-env-2.7.13/lib/python2.7/site-packages/testinfra/plugin.py\r\n  pytest-verbose-parametrize-1.2.2 at /Users/jodewey/.pyenv/versions/2.7.13/envs/molecule2-env-2.7.13/lib/python2.7/site-packages/pytest_verbose_parametrize.py\r\n  pytest-mock-1.6.0 at /Users/jodewey/.pyenv/versions/2.7.13/envs/molecule2-env-2.7.13/lib/python2.7/site-packages/pytest_mock.py\r\n  pytest-helpers-namespace-2016.7.10 at /Users/jodewey/.pyenv/versions/2.7.13/envs/molecule2-env-2.7.13/lib/python2.7/site-packages/pytest_helpers_namespace/plugin.py\r\n  pytest-cov-2.4.0 at /Users/jodewey/.pyenv/versions/2.7.13/envs/molecule2-env-2.7.13/lib/python2.7/site-packages/pytest_cov/plugin.py\r\n```\r\n\r\n```\r\n$ ansible --version\r\nansible 2.3.0.0\r\n  config file =\r\n  configured module search path = Default w/o overrides\r\n  python version = 2.7.13 (default, May  4 2017, 15:45:50) [GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)]\r\n```\r\n\r\nMy ansible inventory:\r\n\r\n```yaml\r\n$ cat molecule/default/.molecule/ansible_inventory.yml\r\n# Molecule managed\r\n\r\n---\r\nall:\r\n  hosts:\r\n    instance-1-default: &id001\r\n      ansible_host: ec2-52-14-173-9.us-east-2.compute.amazonaws.com\r\n      ansible_port: 22\r\n      ansible_private_key_file: /Users/jodewey/git/molecule_2/test/scenarios/driver/ec2/molecule/default/.molecule/ssh_key\r\n      ansible_scp_extra_args: -o ControlPath=~/.ansible/cp/%C\r\n      ansible_ssh_extra_args: -o UserKnownHostsFile=/dev/null -o ControlMaster=auto\r\n        -o ControlPersist=60s -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o\r\n        ControlPath=~/.ansible/cp/%C\r\n      ansible_user: ubuntu\r\n      connection: ssh\r\nungrouped:\r\n  hosts:\r\n    instance-1-default: *id001\r\n  vars: {}\r\n```\r\n\r\nError:\r\n\r\n```\r\n    ----------------------------- Captured stderr call -----------------------------\r\n     [WARNING]: Failure using method (v2_runner_on_unreachable) in callback plugin\r\n    (<testinfra.utils.ansible_runner.Callback object at 0x1054d4a10>): Host\r\n    instance-1-default is unreachable: {'changed': False,  'msg': u'Failed to\r\n    connect to the host via ssh: Host key verification failed.\\r\\nConnection\r\n    closed\\r\\n',  'unreachable': True}\r\n    ============================ pytest-warning summary ============================\r\n    WP1 None Module already imported so can not be re-written: testinfra\r\n    ============ 2 failed, 1 passed, 1 pytest-warnings in 2.81 seconds =============\r\n```\r\n\r\nHowever, ansible converges perfectly fine on it's own.  Which uses the inventory stated above.\r\n\r\n```\r\n$ molecule converge\r\n--> Scenario: [default]\r\n--> Provisioner: [ansible]\r\n--> Driver: [ec2]\r\n--> Playbook: [create.yml]\r\nSkipping, instances already created.\r\n--> Scenario: [default]\r\n--> Provisioner: [ansible]\r\n--> Playbook: [playbook.yml]\r\n\r\n    PLAY [all] *********************************************************************\r\n\r\n    TASK [Install python for Ansible] **********************************************\r\n    ok: [instance-1-default]\r\n\r\n    PLAY [all] *********************************************************************\r\n\r\n    TASK [Gathering Facts] *********************************************************\r\n    ok: [instance-1-default]\r\n\r\n    TASK [molecule : Create /etc/molecule] *****************************************\r\n    ok: [instance-1-default]\r\n\r\n    TASK [molecule : Create /etc/molecule/ip-172-31-26-82] *************************\r\n    ok: [instance-1-default]\r\n\r\n    PLAY RECAP *********************************************************************\r\n    instance-1-default         : ok=4    changed=0    unreachable=0    failed=0\r\n\r\n```\r\n\r\nThe testinfra command being run:\r\n\r\n```\r\n$ testinfra --debug --connection=ansible --ansible-inventory=/Users/jodewey/git/molecule_2/test/scenarios/driver/ec2/molecule/default/.molecule/ansible_inventory.yml /Users/jodewey/git/molecule_2/test/scenarios/driver/ec2/molecule/default/tests/test_default.py\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/202", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/202/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/202/events", "html_url": "https://github.com/philpep/testinfra/issues/202", "id": 231151056, "node_id": "MDU6SXNzdWUyMzExNTEwNTY=", "number": 202, "title": "Ability to execute testinfra locally", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-24T19:47:07Z", "updated_at": "2018-05-01T00:10:28Z", "closed_at": "2018-05-01T00:10:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm thinking about writing a testinfra ansible module.  This would allow tests to be written inside the playbook or tasks.   This is particularly useful when wanting to test something has happened but don't want to wait for the playbook to finish converging and verify at the end (such as the molecule workflow).\r\n\r\nIt looks as though the local driver could be leveraged.  I haven't done a lot of investigation yet, but is it possible?  Have you thought of this use case?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/201", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/201/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/201/events", "html_url": "https://github.com/philpep/testinfra/issues/201", "id": 229461372, "node_id": "MDU6SXNzdWUyMjk0NjEzNzI=", "number": 201, "title": "testinfra is in an unsupported or invalid wheel", "user": {"login": "andrewschoen", "id": 20618, "node_id": "MDQ6VXNlcjIwNjE4", "avatar_url": "https://avatars2.githubusercontent.com/u/20618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewschoen", "html_url": "https://github.com/andrewschoen", "followers_url": "https://api.github.com/users/andrewschoen/followers", "following_url": "https://api.github.com/users/andrewschoen/following{/other_user}", "gists_url": "https://api.github.com/users/andrewschoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewschoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewschoen/subscriptions", "organizations_url": "https://api.github.com/users/andrewschoen/orgs", "repos_url": "https://api.github.com/users/andrewschoen/repos", "events_url": "https://api.github.com/users/andrewschoen/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewschoen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-17T19:24:49Z", "updated_at": "2017-05-17T23:00:07Z", "closed_at": "2017-05-17T23:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to install testinfra==1.6.1 I get the following error:\r\n\r\n``testinfra is in an unsupported or invalid wheel``", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/197", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/197/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/197/events", "html_url": "https://github.com/philpep/testinfra/issues/197", "id": 224334547, "node_id": "MDU6SXNzdWUyMjQzMzQ1NDc=", "number": 197, "title": "ansible (now) works with python3, but the ansible backend does not", "user": {"login": "Leibniz137", "id": 2193797, "node_id": "MDQ6VXNlcjIxOTM3OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2193797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Leibniz137", "html_url": "https://github.com/Leibniz137", "followers_url": "https://api.github.com/users/Leibniz137/followers", "following_url": "https://api.github.com/users/Leibniz137/following{/other_user}", "gists_url": "https://api.github.com/users/Leibniz137/gists{/gist_id}", "starred_url": "https://api.github.com/users/Leibniz137/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Leibniz137/subscriptions", "organizations_url": "https://api.github.com/users/Leibniz137/orgs", "repos_url": "https://api.github.com/users/Leibniz137/repos", "events_url": "https://api.github.com/users/Leibniz137/events{/privacy}", "received_events_url": "https://api.github.com/users/Leibniz137/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-26T03:38:04Z", "updated_at": "2017-05-01T12:38:56Z", "closed_at": "2017-05-01T12:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "see: https://docs.ansible.com/ansible/python_3_support.html\r\n\r\nbut when I try to run testinfra --connection=ansible, I get output that looks like this:\r\n\r\n```\r\n$ testinfra --connection=ansible -v\r\n=== test session starts ===\r\nplatform darwin -- Python 3.6.0, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- /Users/me/.virtualenvs/infra/bin/python3.6\r\ncachedir: .cache\r\nrootdir: /Users/me/src/group/infra, inifile:\r\nplugins: testinfra-1.6.0\r\ncollected 0 items / 1 errors\r\n\r\n=== ERRORS ===\r\n___ ERROR collecting test_CI.py ___\r\n../../../.virtualenvs/infra/lib/python3.6/site-packages/testinfra/plugin.py:136: in pytest_generate_tests\r\n    ansible_inventory=metafunc.config.option.ansible_inventory,\r\n../../../.virtualenvs/infra/lib/python3.6/site-packages/testinfra/host.py:125: in get_hosts\r\n    for backend in testinfra.backend.get_backends(hosts, **kwargs):\r\n../../../.virtualenvs/infra/lib/python3.6/site-packages/testinfra/backend/__init__.py:84: in get_backends\r\n    for name in klass.get_hosts(host, **kw):\r\n../../../.virtualenvs/infra/lib/python3.6/site-packages/testinfra/backend/ansible.py:82: in get_hosts\r\n    return AnsibleRunner(kwargs.get(\"ansible_inventory\")).get_hosts(host)\r\n../../../.virtualenvs/infra/lib/python3.6/site-packages/testinfra/utils/ansible_runner.py:139: in __init__\r\n    _reload_constants()\r\n../../../.virtualenvs/infra/lib/python3.6/site-packages/testinfra/utils/ansible_runner.py:47: in _reload_constants\r\n    reload(ansible.constants)\r\nE   NameError: name 'reload' is not defined\r\n=== pytest-warning summary ===\r\nWP1 None Module already imported so can not be re-written: testinfra\r\n!!! Interrupted: 1 errors during collection !!!\r\n=== 1 pytest-warnings, 1 error in 0.75 seconds ===\r\n```\r\n\r\nhere's a proposed diff/fix:\r\n\r\n```\r\n--- a/testinfra/backend/ansible.py\r\n+++ b/testinfra/backend/ansible.py\r\n@@ -47,12 +47,12 @@ class AnsibleBackend(base.BaseBackend):\r\n         # A simple test case is:\r\n         # >>> assert File(\"/bin/true\").content == open(\"/bin/true\").read()\r\n         try:\r\n-            stdout_bytes = b\"\".join((chr(ord(c)) for c in out['stdout']))\r\n+            stdout_bytes = out['stdout'].encode('utf-8')\r\n         except ValueError:\r\n             stdout_bytes = None\r\n\r\n         try:\r\n-            stderr_bytes = b\"\".join((chr(ord(c)) for c in out['stderr']))\r\n+            stderr_bytes = out['stderr'].encode('utf-8')\r\n         except ValueError:\r\n             stderr_bytes = None\r\n--- a/testinfra/utils/ansible_runner.py\r\n+++ b/testinfra/utils/ansible_runner.py\r\n@@ -16,7 +16,6 @@\r\n from __future__ import unicode_literals\r\n from __future__ import absolute_import\r\n\r\n+from imp import reload\r\n import pprint\r\n\r\n try:\r\n```\r\n\r\n\r\nI've only been able to get the tests partially working, but it seems like this should happen too:\r\n```\r\n--- a/testinfra/test/test_backends.py\r\n+++ b/testinfra/test/test_backends.py\r\n@@ -12,7 +12,6 @@\r\n # limitations under the License.\r\n from __future__ import unicode_literals\r\n import pytest\r\n-import six\r\n\r\n import testinfra.backend\r\n BACKENDS = (\"ssh\", \"safe-ssh\", \"docker\", \"paramiko\", \"ansible\")\r\n@@ -86,8 +85,6 @@ def test_backend_importables():\r\n     # just check that all declared backend are importable and NAME is set\r\n     # correctly\r\n     for connection_type in testinfra.backend.BACKENDS:\r\n-        if six.PY3 and connection_type == 'ansible':\r\n-            pytest.skip()\r\n         obj = testinfra.backend.get_backend_class(connection_type)\r\n         assert obj.get_connection_type() == connection_type\r\n```\r\n\r\nHaven't tested the `.encode` bit on python2 either", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/194", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/194/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/194/events", "html_url": "https://github.com/philpep/testinfra/issues/194", "id": 221511695, "node_id": "MDU6SXNzdWUyMjE1MTE2OTU=", "number": 194, "title": "Ansible 2.3 can't start tests", "user": {"login": "enkov", "id": 1331745, "node_id": "MDQ6VXNlcjEzMzE3NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1331745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enkov", "html_url": "https://github.com/enkov", "followers_url": "https://api.github.com/users/enkov/followers", "following_url": "https://api.github.com/users/enkov/following{/other_user}", "gists_url": "https://api.github.com/users/enkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/enkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enkov/subscriptions", "organizations_url": "https://api.github.com/users/enkov/orgs", "repos_url": "https://api.github.com/users/enkov/repos", "events_url": "https://api.github.com/users/enkov/events{/privacy}", "received_events_url": "https://api.github.com/users/enkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660500, "node_id": "MDU6TGFiZWwxODc2NjA1MDA=", "url": "https://api.github.com/repos/philpep/testinfra/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-13T09:45:12Z", "updated_at": "2017-04-13T12:27:04Z", "closed_at": "2017-04-13T12:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. After upgrade to ansible 2.3 starting tests fails with error:\r\n```\r\n============================= test session starts ==============================\r\nplatform linux2 -- Python 2.7.12, pytest-3.0.7, py-1.4.33, pluggy-0.4.0\r\nrootdir: /home/enkov/WORK1/playbooks/roles/foo, inifile:\r\nplugins: testinfra-1.5.4\r\ncollected 0 items / 1 errorss\r\n\r\n==================================== ERRORS ====================================\r\n____________________ ERROR collecting tests/test_default.py ____________________\r\ntests/test_default.py:4: in <module>\r\n    '.molecule/ansible_inventory').get_hosts('all')\r\n/usr/local/lib/python2.7/dist-packages/testinfra/utils/ansible_runner.py:141: in __init__\r\n    self.cli = ansible.cli.CLI(None)\r\nE   TypeError: Can't instantiate abstract class CLI with abstract methods parse, run\r\n============================ pytest-warning summary ============================\r\nWP1 None Module already imported so can not be re-written: testinfra\r\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!\r\n================== 1 pytest-warnings, 1 error in 0.20 seconds ==================\r\nERROR: \r\n\r\n  RAN: '/usr/local/bin/testinfra tests/test_default.py --connection=docker'\r\n\r\n  STDOUT:\r\n\r\n\r\n  STDERR:\r\n```\r\nWith ansible version 2.2.1 everything works fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/191", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/191/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/191/events", "html_url": "https://github.com/philpep/testinfra/issues/191", "id": 216557632, "node_id": "MDU6SXNzdWUyMTY1NTc2MzI=", "number": 191, "title": "Getting content of the file with 0640 permissions leads to Permission denied", "user": {"login": "serhiy-yevtushenko", "id": 4510224, "node_id": "MDQ6VXNlcjQ1MTAyMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4510224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serhiy-yevtushenko", "html_url": "https://github.com/serhiy-yevtushenko", "followers_url": "https://api.github.com/users/serhiy-yevtushenko/followers", "following_url": "https://api.github.com/users/serhiy-yevtushenko/following{/other_user}", "gists_url": "https://api.github.com/users/serhiy-yevtushenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/serhiy-yevtushenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serhiy-yevtushenko/subscriptions", "organizations_url": "https://api.github.com/users/serhiy-yevtushenko/orgs", "repos_url": "https://api.github.com/users/serhiy-yevtushenko/repos", "events_url": "https://api.github.com/users/serhiy-yevtushenko/events{/privacy}", "received_events_url": "https://api.github.com/users/serhiy-yevtushenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-23T20:12:16Z", "updated_at": "2017-03-24T17:34:52Z", "closed_at": "2017-03-24T08:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nwhen trying to do test with filebeat, which obtains the content_str of the file with permission 0o640, I obtain the following exception:\r\n\r\nself = <file /etc/filebeat/filebeat.yml>, decode = True\r\n\r\n    def _get_content(self, decode):\r\n        out = self.run_test(\"cat -- %s\", self.path)\r\n        if out.rc != 0:\r\n>           raise RuntimeError(\"Unexpected output %s\" % (out,))\r\nE           RuntimeError: Unexpected output CommandResult(command='cat -- /etc/filebeat/filebeat.yml', exit_status=1, stdout=None, stderr='cat: /etc/filebeat/filebeat.yml: Permission denied\\n')\r\n\r\nSimilar test passes without problems, when using serverspec", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/188", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/188/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/188/events", "html_url": "https://github.com/philpep/testinfra/issues/188", "id": 209081410, "node_id": "MDU6SXNzdWUyMDkwODE0MTA=", "number": 188, "title": "I am missing some docs", "user": {"login": "guettli", "id": 414336, "node_id": "MDQ6VXNlcjQxNDMzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/414336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guettli", "html_url": "https://github.com/guettli", "followers_url": "https://api.github.com/users/guettli/followers", "following_url": "https://api.github.com/users/guettli/following{/other_user}", "gists_url": "https://api.github.com/users/guettli/gists{/gist_id}", "starred_url": "https://api.github.com/users/guettli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guettli/subscriptions", "organizations_url": "https://api.github.com/users/guettli/orgs", "repos_url": "https://api.github.com/users/guettli/repos", "events_url": "https://api.github.com/users/guettli/events{/privacy}", "received_events_url": "https://api.github.com/users/guettli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187660505, "node_id": "MDU6TGFiZWwxODc2NjA1MDU=", "url": "https://api.github.com/repos/philpep/testinfra/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-21T09:07:25Z", "updated_at": "2017-03-10T15:52:47Z", "closed_at": "2017-03-10T15:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for the docs here:\r\n\r\n  https://testinfra.readthedocs.io/en/latest/index.html\r\n\r\nI am new to testinfra, and maybe you are interested what a new comer is missing on the first page of the docs.\r\n\r\nI want to do this:\r\n\r\n 1. take vanilla linux operating system\r\n 2. run salt\r\n 3. Do black-box testing: Service should be alive and working.\r\n\r\nThe examples in the docs show white-box tests. \r\n\r\n... or am I on the wrong track here?\r\n\r\nNext: How do you do virtualization? I have seen \"vagrant\" in the docs. Are other ways of virtualization supported, too?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philpep/testinfra/issues/187", "repository_url": "https://api.github.com/repos/philpep/testinfra", "labels_url": "https://api.github.com/repos/philpep/testinfra/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/philpep/testinfra/issues/187/comments", "events_url": "https://api.github.com/repos/philpep/testinfra/issues/187/events", "html_url": "https://github.com/philpep/testinfra/issues/187", "id": 207926450, "node_id": "MDU6SXNzdWUyMDc5MjY0NTA=", "number": 187, "title": "User.password requires elevated privileges", "user": {"login": "gtirloni", "id": 5902830, "node_id": "MDQ6VXNlcjU5MDI4MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5902830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtirloni", "html_url": "https://github.com/gtirloni", "followers_url": "https://api.github.com/users/gtirloni/followers", "following_url": "https://api.github.com/users/gtirloni/following{/other_user}", "gists_url": "https://api.github.com/users/gtirloni/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtirloni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtirloni/subscriptions", "organizations_url": "https://api.github.com/users/gtirloni/orgs", "repos_url": "https://api.github.com/users/gtirloni/repos", "events_url": "https://api.github.com/users/gtirloni/events{/privacy}", "received_events_url": "https://api.github.com/users/gtirloni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-15T21:01:32Z", "updated_at": "2017-02-16T10:36:02Z", "closed_at": "2017-02-16T10:36:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Error:**\r\n\r\n```\r\nUser = <class 'testinfra.modules.base.User'>\r\n\r\n    def test_user(User):\r\n        u = User('testuser')\r\n    \r\n        assert u.exists\r\n>       assert u.password == '!!'\r\n\r\ntests/test_default.py:35:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <user testuser>\r\n\r\n    @property\r\n    def password(self):\r\n        \"\"\"Return the crypted user password\"\"\"\r\n>       return self.check_output(\"getent shadow %s\", self.name).split(\":\")[1]\r\nE       Failed: Unexpected exit code 2 for CommandResult(command=u'getent shadow testuser', exit_status=2, stdout=u'', stderr=u'')\r\n\r\n/usr/lib/python2.7/site-packages/testinfra/modules/user.py:82: Failed\r\n```\r\n\r\n**Workaround:**\r\n\r\nPrepending \"sudo\" to the command [here](https://github.com/philpep/testinfra/blob/master/testinfra/modules/user.py#L82) works around this issue in a Vagrant box (CentOS 7).\r\n\r\n```python\r\n    @property\r\n    def password(self):\r\n        \"\"\"Return the crypted user password\"\"\"\r\n        return self.check_output(\"sudo getent shadow %s\", self.name).split(\":\")[1]\r\n```\r\n\r\n**More details:**\r\n\r\n```\r\n$ grep testuser /etc/passwd\r\ntestuser:x:1001:1001::/home/testuser:/bin/bash\r\n$ grep testuser /etc/shadow\r\ngrep: /etc/shadow: Permission denied\r\n$ getent shadow testuser\r\n$ echo $?\r\n2\r\n$ sudo getent shadow testuser\r\ntestuser:!!:17212:0:99999:7:::\r\n$ echo $?\r\n0\r\n```\r\n\r\n**Environment:**\r\n\r\nCentOS 7.3\r\nmolecule 1.19\r\ntestinfra 1.4.5", "performed_via_github_app": null, "score": 1.0}]}