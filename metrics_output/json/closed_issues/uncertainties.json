{"total_count": 64, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/lebigot/uncertainties/issues/125", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/125/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/125/events", "html_url": "https://github.com/lebigot/uncertainties/issues/125", "id": 667367021, "node_id": "MDU6SXNzdWU2NjczNjcwMjE=", "number": 125, "title": "Typo in doc", "user": {"login": "mocquin", "id": 36188368, "node_id": "MDQ6VXNlcjM2MTg4MzY4", "avatar_url": "https://avatars1.githubusercontent.com/u/36188368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mocquin", "html_url": "https://github.com/mocquin", "followers_url": "https://api.github.com/users/mocquin/followers", "following_url": "https://api.github.com/users/mocquin/following{/other_user}", "gists_url": "https://api.github.com/users/mocquin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mocquin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mocquin/subscriptions", "organizations_url": "https://api.github.com/users/mocquin/orgs", "repos_url": "https://api.github.com/users/mocquin/repos", "events_url": "https://api.github.com/users/mocquin/events{/privacy}", "received_events_url": "https://api.github.com/users/mocquin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-28T20:51:44Z", "updated_at": "2020-07-29T21:12:08Z", "closed_at": "2020-07-29T19:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the doc at [https://pythonhosted.org/uncertainties/tech_guide.html#comparison-operators](https://pythonhosted.org/uncertainties/tech_guide.html#comparison-operators), I think there is a typo in the second prompt example. \r\nThe current state is : \r\n```\r\n>>> y = ufloat(3.14, 0.01)\r\n>>> x != y\r\nTrue\r\n```\r\nwhile I'd expect it to be : \r\n```\r\n>>> y = ufloat(3.14, 0.01)\r\n>>> x != y\r\nFalse\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/124", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/124/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/124/events", "html_url": "https://github.com/lebigot/uncertainties/issues/124", "id": 632524619, "node_id": "MDU6SXNzdWU2MzI1MjQ2MTk=", "number": 124, "title": "Missing git tags for 3.1.3/3.1.4", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-06T15:15:03Z", "updated_at": "2020-06-08T07:18:08Z", "closed_at": "2020-06-08T07:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/123", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/123/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/123/events", "html_url": "https://github.com/lebigot/uncertainties/issues/123", "id": 573449042, "node_id": "MDU6SXNzdWU1NzM0NDkwNDI=", "number": 123, "title": "The README talke about a non-existent version 3.1.3", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-01T01:10:16Z", "updated_at": "2020-03-02T07:47:11Z", "closed_at": "2020-03-01T07:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "GitHub shows that the last version is 3.1.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/117", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/117/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/117/events", "html_url": "https://github.com/lebigot/uncertainties/issues/117", "id": 541412640, "node_id": "MDU6SXNzdWU1NDE0MTI2NDA=", "number": 117, "title": "Possible Bug in Implementation of 'S' String Format Type", "user": {"login": "PorcelainMouse", "id": 159714, "node_id": "MDQ6VXNlcjE1OTcxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/159714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PorcelainMouse", "html_url": "https://github.com/PorcelainMouse", "followers_url": "https://api.github.com/users/PorcelainMouse/followers", "following_url": "https://api.github.com/users/PorcelainMouse/following{/other_user}", "gists_url": "https://api.github.com/users/PorcelainMouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/PorcelainMouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PorcelainMouse/subscriptions", "organizations_url": "https://api.github.com/users/PorcelainMouse/orgs", "repos_url": "https://api.github.com/users/PorcelainMouse/repos", "events_url": "https://api.github.com/users/PorcelainMouse/events{/privacy}", "received_events_url": "https://api.github.com/users/PorcelainMouse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-22T06:03:20Z", "updated_at": "2020-01-13T06:23:58Z", "closed_at": "2020-01-11T10:47:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been working through a problem using 'pint' to format LaTeX figures *with* the SIunitx package.  Internally, it uses 'uncertainties' to hold uncertain values, and implements the 'Lx' format spec--a SIunitx-specific LaTeX string format spec--by passing 'S' to 'uncertainties' and then putting the result inside \\SI{} macro.\r\n\r\nUnder the current implementation of both packages, this causes LaTeX compile to fail when the uncertainty value is expressed with a decimal point, e.g. 123.45(1.20), which is what uncertainties will produce in that case.\r\n\r\nIf 'uncertainties' intends to be producing a \"concise notation\" figure containing both nominal and uncertainty values, then this is a bug, as best I can tell.  At least, according to NIST (https://physics.nist.gov/cgi-bin/cuu/Info/Constants/definitions.html) and SIunitx.  SIunitx accepts this \"concise\" format as input, so I would be valuable to the community, I think, for 'uncertainties' to support it, if not with 'S', then with some new format type.\r\n\r\nI would be happy to try to implement this for you and send a PR, but it is likely be much easier for you to design the solution you like and implement it.  If you would prefer me to have go, please give me some clear instructions and preferences and I'll try.\r\n\r\nSee https://github.com/hgrecco/pint/issues/814 for some more background.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/115", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/115/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/115/events", "html_url": "https://github.com/lebigot/uncertainties/issues/115", "id": 530722081, "node_id": "MDU6SXNzdWU1MzA3MjIwODE=", "number": 115, "title": "Please be more specific on NumPy compatibility", "user": {"login": "jonasstein", "id": 298682, "node_id": "MDQ6VXNlcjI5ODY4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/298682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasstein", "html_url": "https://github.com/jonasstein", "followers_url": "https://api.github.com/users/jonasstein/followers", "following_url": "https://api.github.com/users/jonasstein/following{/other_user}", "gists_url": "https://api.github.com/users/jonasstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasstein/subscriptions", "organizations_url": "https://api.github.com/users/jonasstein/orgs", "repos_url": "https://api.github.com/users/jonasstein/repos", "events_url": "https://api.github.com/users/jonasstein/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T12:15:29Z", "updated_at": "2019-12-03T20:43:21Z", "closed_at": "2019-12-03T20:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/lebigot/uncertainties/blob/master/setup.py#L160\r\n\r\n> - 3.1.2: Partial fix for NumPy 1.17 and ``unumpy.ulinalg.pinv()``.\r\n\r\nWhat does this mean? Does NumPy 3.1.2 work with NumPy 1.17, or not?\r\nPlease be more specific on the dependencies, this will help distributing the package. Thank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/110", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/110/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/110/events", "html_url": "https://github.com/lebigot/uncertainties/issues/110", "id": 527416373, "node_id": "MDU6SXNzdWU1Mjc0MTYzNzM=", "number": 110, "title": "Use python 3 as primary interpreter", "user": {"login": "benabel", "id": 12530561, "node_id": "MDQ6VXNlcjEyNTMwNTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/12530561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benabel", "html_url": "https://github.com/benabel", "followers_url": "https://api.github.com/users/benabel/followers", "following_url": "https://api.github.com/users/benabel/following{/other_user}", "gists_url": "https://api.github.com/users/benabel/gists{/gist_id}", "starred_url": "https://api.github.com/users/benabel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benabel/subscriptions", "organizations_url": "https://api.github.com/users/benabel/orgs", "repos_url": "https://api.github.com/users/benabel/repos", "events_url": "https://api.github.com/users/benabel/events{/privacy}", "received_events_url": "https://api.github.com/users/benabel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-11-22T21:10:40Z", "updated_at": "2020-06-07T08:41:37Z", "closed_at": "2020-06-06T14:04:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 2.7 will not be maintained past 2020. It's time for the package to turn code into python3 code and maybe propose python2 code via [pasteurize](http://python-future.org/pasteurize.html).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/106", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/106/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/106/events", "html_url": "https://github.com/lebigot/uncertainties/issues/106", "id": 524409480, "node_id": "MDU6SXNzdWU1MjQ0MDk0ODA=", "number": 106, "title": "uncertainties fails on python 3.6", "user": {"login": "BishopWolf", "id": 11816952, "node_id": "MDQ6VXNlcjExODE2OTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/11816952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BishopWolf", "html_url": "https://github.com/BishopWolf", "followers_url": "https://api.github.com/users/BishopWolf/followers", "following_url": "https://api.github.com/users/BishopWolf/following{/other_user}", "gists_url": "https://api.github.com/users/BishopWolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/BishopWolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BishopWolf/subscriptions", "organizations_url": "https://api.github.com/users/BishopWolf/orgs", "repos_url": "https://api.github.com/users/BishopWolf/repos", "events_url": "https://api.github.com/users/BishopWolf/events{/privacy}", "received_events_url": "https://api.github.com/users/BishopWolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-18T14:39:58Z", "updated_at": "2020-06-07T08:38:00Z", "closed_at": "2020-06-07T08:38:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have reported this bug [here](https://github.com/lmfit/lmfit-py/issues/605)\r\n\r\nBasically, the issue is caused by literal python@2 strings not valid for python@3 representation in the uncertainties package, also there are a lot of python@2-isms like `iteritems` for arrays.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/105", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/105/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/105/events", "html_url": "https://github.com/lebigot/uncertainties/issues/105", "id": 499107934, "node_id": "MDU6SXNzdWU0OTkxMDc5MzQ=", "number": 105, "title": "std_dev calculation stuck in newer versions", "user": {"login": "anchal-physics", "id": 29802951, "node_id": "MDQ6VXNlcjI5ODAyOTUx", "avatar_url": "https://avatars3.githubusercontent.com/u/29802951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anchal-physics", "html_url": "https://github.com/anchal-physics", "followers_url": "https://api.github.com/users/anchal-physics/followers", "following_url": "https://api.github.com/users/anchal-physics/following{/other_user}", "gists_url": "https://api.github.com/users/anchal-physics/gists{/gist_id}", "starred_url": "https://api.github.com/users/anchal-physics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anchal-physics/subscriptions", "organizations_url": "https://api.github.com/users/anchal-physics/orgs", "repos_url": "https://api.github.com/users/anchal-physics/repos", "events_url": "https://api.github.com/users/anchal-physics/events{/privacy}", "received_events_url": "https://api.github.com/users/anchal-physics/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-26T20:46:46Z", "updated_at": "2019-11-18T15:03:19Z", "closed_at": "2019-11-18T15:03:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI've been trying to use uncertainties in my module. I've tried to create the smallest code I could create to regenerate the issue I've been seeing. Please find it attached.\r\nThe code tries to create a class ucomplex to hold complex numbers as tuples made out of ufloat numbers.\r\nThen a recursive calculation is done to calculate some parameters and the output is displayed. The thing is that the calculations run really fast in the latest version (3.1.2) of uncertainties but the final display step takes a long time. You can see that with just nol=5, which increases the recursive steps, the time taken becomes really long. Here is the output:\r\n```\r\nCalculations done.\r\nTook me 0.023484230041503906 s to calculate\r\nJust trying to print\r\nCoat CTR (2.63+/-0.10)e-05\r\nTook me 101.55465269088745 s to display\r\nCoat del CTE (1.85+/-0.25)e-05\r\nTook me 0.0003113746643066406 s to display\r\n```\r\nWhile in version 2.4.8.1, this calculation is slower but the display is lightning fast even for nol=57 which is my required value to use. Output:\r\n```\r\nCalculations done.\r\nTook me 99.11081385612488 s to calculate\r\nJust trying to print\r\nCoat CTR (5.2+/-0.5)e-05\r\nTook me 0.04099583625793457 s to display\r\nCoat del CTE (1.83+/-0.25)e-05\r\nTook me 0.010044097900390625 s to display\r\n```\r\nBut this still takes overall much less time than the nol=5 case for 3.1.2.\r\nMy guesses are:\r\n1) The new version(3.1.2) just goes with nominal_value calculations during the run and calculates the std_dev for only those values which are asked for by retracing the whole path that was taken to calculate the value. And this is why the display part takes more time.\r\n2) The older version(2.4.8.1) calculates std_dev along with\r\n[uncErrorRegeneration.zip](https://github.com/lebigot/uncertainties/files/3659828/uncErrorRegeneration.zip)\r\n\r\n the calculations and hence is slower but the display is instant.\r\n3) Somehow, there is some part in calculation with ucomplex which is taken long time for uncertainties to get derivative of for calculation of std_dev.\r\n\r\nI would like to know if there is some feature which can enable std_dev calculation on the run as being done in 2.4.8.1 or suggest some changes in my definition of ucomplex which might be causing this problem. I would like to make my module compatible with the latest version of uncertainties.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/97", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/97/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/97/events", "html_url": "https://github.com/lebigot/uncertainties/issues/97", "id": 447554438, "node_id": "MDU6SXNzdWU0NDc1NTQ0Mzg=", "number": 97, "title": "Handle again 0-variance variables when entering correlated variables ", "user": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1383358635, "node_id": "MDU6TGFiZWwxMzgzMzU4NjM1", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Regression", "name": "Regression", "color": "f7c1aa", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-23T09:47:46Z", "updated_at": "2019-05-30T18:34:07Z", "closed_at": "2019-05-30T18:32:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be more convenient if [entering correlated variables](https://uncertainties-python-package.readthedocs.io/en/latest/user_guide.html#correlated-variables) with `correlated_values()` handled variables with a 0 variance, like in version <3.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/96", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/96/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/96/events", "html_url": "https://github.com/lebigot/uncertainties/issues/96", "id": 445854637, "node_id": "MDU6SXNzdWU0NDU4NTQ2Mzc=", "number": 96, "title": "correlation_matrix() could have values with 0 standard deviation", "user": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-19T19:24:21Z", "updated_at": "2019-05-30T16:50:58Z", "closed_at": "2019-05-30T16:50:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently, `correlation_matrix()` returns NaN values instead of 0 values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/95", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/95/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/95/events", "html_url": "https://github.com/lebigot/uncertainties/issues/95", "id": 445694141, "node_id": "MDU6SXNzdWU0NDU2OTQxNDE=", "number": 95, "title": "Extra correlated variables affect the result", "user": {"login": "Jellby", "id": 7943459, "node_id": "MDQ6VXNlcjc5NDM0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7943459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jellby", "html_url": "https://github.com/Jellby", "followers_url": "https://api.github.com/users/Jellby/followers", "following_url": "https://api.github.com/users/Jellby/following{/other_user}", "gists_url": "https://api.github.com/users/Jellby/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jellby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jellby/subscriptions", "organizations_url": "https://api.github.com/users/Jellby/orgs", "repos_url": "https://api.github.com/users/Jellby/repos", "events_url": "https://api.github.com/users/Jellby/events{/privacy}", "received_events_url": "https://api.github.com/users/Jellby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309011822, "node_id": "MDU6TGFiZWwzMDkwMTE4MjI=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Behavior", "name": "Behavior", "color": "d5e25f", "default": false, "description": ""}, {"id": 413383989, "node_id": "MDU6TGFiZWw0MTMzODM5ODk=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Documentation", "name": "Documentation", "color": "c99c20", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-18T08:38:30Z", "updated_at": "2019-05-19T20:43:25Z", "closed_at": "2019-05-19T20:41:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to create correlated variables (actually physical constants, from https://physics.nist.gov/cuu/Correlations/index.html), but I'm confused by the fact that adding more correlated variables changes the result of operations that *do not include the extra variables* at all.\r\n\r\nFor instance, consider the example below, where I calculate the difference between `m_n` and `m_p` (neutron and proton mass). If I define only these two variables, I get a reasonable result, but if I define a third correlated variable (although I never use it), the uncertainty in the result grows beyond recognition\r\n\r\n```\r\nimport uncertainties\r\nimport numpy as np\r\n\r\ndef_m_p = (1.672621898e-27, 0.000000021e-27)\r\ndef_m_n = (1.674927471e-27, 0.000000021e-27)\r\ndef_w = (5.8789238e10, 0.0000034e10)\r\ndef_corr = np.eye(3)\r\ndef_corr[0,1] =  0.9992 # m_p, m_n\r\ndef_corr[0,2] = -0.0004 # m_p, w\r\ndef_corr[1,2] = -0.0004 # m_n, w\r\n\r\ndef_corr += def_corr.T - np.diag(def_corr.diagonal())\r\n\r\nselect = [0, 1]\r\ncorr = def_corr[np.ix_(select, select)]\r\n(m_p, m_n) = uncertainties.correlated_values_norm([def_m_p, def_m_n], corr)\r\nprint('\\n{} variables'.format(len(select)))\r\nprint(corr)\r\nprint(m_n-m_p)\r\n\r\nselect = [0, 1, 2]\r\ncorr = def_corr[np.ix_(select, select)]\r\n(m_p, m_n, w) = uncertainties.correlated_values_norm([def_m_p, def_m_n, def_w], corr)\r\nprint('\\n{} variables'.format(len(select)))\r\nprint(corr)\r\nprint(m_n-m_p)\r\n```\r\nThis gives me:\r\n```\r\n2 variables\r\n[[1.     0.9992]\r\n [0.9992 1.    ]]\r\n(2.3055730+/-0.0000008)e-30\r\n\r\n3 variables\r\n[[ 1.000e+00  9.992e-01 -4.000e-04]\r\n [ 9.992e-01  1.000e+00 -4.000e-04]\r\n [-4.000e-04 -4.000e-04  1.000e+00]]\r\n(0.0+/-1.5)e-11\r\n```\r\n\r\nIs this expected? What am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/94", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/94/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/94/events", "html_url": "https://github.com/lebigot/uncertainties/issues/94", "id": 424270617, "node_id": "MDU6SXNzdWU0MjQyNzA2MTc=", "number": 94, "title": "Calculate wrong expected (nominal value) for squared variables", "user": {"login": "perlpit", "id": 16681241, "node_id": "MDQ6VXNlcjE2NjgxMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/16681241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perlpit", "html_url": "https://github.com/perlpit", "followers_url": "https://api.github.com/users/perlpit/followers", "following_url": "https://api.github.com/users/perlpit/following{/other_user}", "gists_url": "https://api.github.com/users/perlpit/gists{/gist_id}", "starred_url": "https://api.github.com/users/perlpit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perlpit/subscriptions", "organizations_url": "https://api.github.com/users/perlpit/orgs", "repos_url": "https://api.github.com/users/perlpit/repos", "events_url": "https://api.github.com/users/perlpit/events{/privacy}", "received_events_url": "https://api.github.com/users/perlpit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-22T15:36:21Z", "updated_at": "2019-03-22T19:28:06Z", "closed_at": "2019-03-22T19:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that when a ufloat variable is squared the calculated nominal value is wrong. \r\nThe code:\r\n\r\nx = ufloat(12, 5)\r\nsquared = x ** 2\r\nprint(squared.nominal_value)\r\n\r\nPrints the value 144.0, which is incorrect. \r\nThe correct value should be 169.0 from the formula:\r\nE(X^2) = E(X) + V(X) = 12^2 + 5^2 = 144 + 25 = 169\r\n\r\nIt seems that the term with the variance of x (V(X)) is omitted in the calculations.  \r\n\r\nNote:\r\nIf x = ufloat(12, 5) and y = ufloat(12, 5) then nominal value for x * y should be 144.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/93", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/93/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/93/events", "html_url": "https://github.com/lebigot/uncertainties/issues/93", "id": 421856429, "node_id": "MDU6SXNzdWU0MjE4NTY0Mjk=", "number": 93, "title": "A BUG: ufloat_fromstr can't deal with string '0.20+-0.01'", "user": {"login": "Ian-Jhon", "id": 21330729, "node_id": "MDQ6VXNlcjIxMzMwNzI5", "avatar_url": "https://avatars1.githubusercontent.com/u/21330729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ian-Jhon", "html_url": "https://github.com/Ian-Jhon", "followers_url": "https://api.github.com/users/Ian-Jhon/followers", "following_url": "https://api.github.com/users/Ian-Jhon/following{/other_user}", "gists_url": "https://api.github.com/users/Ian-Jhon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ian-Jhon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ian-Jhon/subscriptions", "organizations_url": "https://api.github.com/users/Ian-Jhon/orgs", "repos_url": "https://api.github.com/users/Ian-Jhon/repos", "events_url": "https://api.github.com/users/Ian-Jhon/events{/privacy}", "received_events_url": "https://api.github.com/users/Ian-Jhon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-16T21:53:37Z", "updated_at": "2019-03-17T09:40:41Z", "closed_at": "2019-03-17T09:39:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "`>>> from uncertainties import ufloat_fromstr`\r\n`>>> aa = '0.20+/-0.01'`\r\n`>>> bb = '0.20+-0.01'`\r\n`>>> ufloat_fromstr(aa)`\r\n`0.2+/-0.01`\r\n`>>> ufloat_fromstr(bb)`\r\n`ValueError: Cannot parse 0.20+-0.01: see the documentation for ufloat_fromstr() for a list of accepted formats`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/89", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/89/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/89/events", "html_url": "https://github.com/lebigot/uncertainties/issues/89", "id": 371906456, "node_id": "MDU6SXNzdWUzNzE5MDY0NTY=", "number": 89, "title": "TypeError in uncertainties.unumpy with Numpy dev version", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 312166104, "node_id": "MDU6TGFiZWwzMTIxNjYxMDQ=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Bug", "name": "Bug", "color": "eb6420", "default": false, "description": null}, {"id": 413388538, "node_id": "MDU6TGFiZWw0MTMzODg1Mzg=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/NumPy+uncertainties", "name": "NumPy+uncertainties", "color": "d4ffb2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-10-19T10:52:25Z", "updated_at": "2019-08-06T13:42:13Z", "closed_at": "2019-08-05T08:13:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since recently, with the Numpy development version, we are seeing this error:\r\n\r\n```\r\n>   pinv_default = numpy.linalg.pinv.__defaults__[0]  # Python 1, 2.6+:\r\nE   TypeError: 'NoneType' object is not subscriptable\r\n/home/travis/miniconda/envs/test/lib/python3.6/site-packages/uncertainties/unumpy/core.py:535: TypeError\r\n```\r\n\r\nhttps://travis-ci.org/gammapy/gammapy/jobs/443608528#L4364\r\n\r\n@lebigot - Does it make sense to you? Can you reproduce?\r\n\r\nIf needed, I could try to extract a minimal test case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/87", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/87/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/87/events", "html_url": "https://github.com/lebigot/uncertainties/issues/87", "id": 368217710, "node_id": "MDU6SXNzdWUzNjgyMTc3MTA=", "number": 87, "title": "Consider submit to JOSS", "user": {"login": "SebastianoF", "id": 8709755, "node_id": "MDQ6VXNlcjg3MDk3NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8709755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SebastianoF", "html_url": "https://github.com/SebastianoF", "followers_url": "https://api.github.com/users/SebastianoF/followers", "following_url": "https://api.github.com/users/SebastianoF/following{/other_user}", "gists_url": "https://api.github.com/users/SebastianoF/gists{/gist_id}", "starred_url": "https://api.github.com/users/SebastianoF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SebastianoF/subscriptions", "organizations_url": "https://api.github.com/users/SebastianoF/orgs", "repos_url": "https://api.github.com/users/SebastianoF/repos", "events_url": "https://api.github.com/users/SebastianoF/events{/privacy}", "received_events_url": "https://api.github.com/users/SebastianoF/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-09T13:43:55Z", "updated_at": "2019-03-22T19:29:14Z", "closed_at": "2019-03-22T19:29:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great job! Uncertain quantities should be a native python data type. \r\nPlease consider submit to [[https://joss.theoj.org/]] to make official citations possible.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/85", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/85/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/85/events", "html_url": "https://github.com/lebigot/uncertainties/issues/85", "id": 364139827, "node_id": "MDU6SXNzdWUzNjQxMzk4Mjc=", "number": 85, "title": "[Wish] port this library for R", "user": {"login": "ericoporto", "id": 2244442, "node_id": "MDQ6VXNlcjIyNDQ0NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2244442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericoporto", "html_url": "https://github.com/ericoporto", "followers_url": "https://api.github.com/users/ericoporto/followers", "following_url": "https://api.github.com/users/ericoporto/following{/other_user}", "gists_url": "https://api.github.com/users/ericoporto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericoporto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericoporto/subscriptions", "organizations_url": "https://api.github.com/users/ericoporto/orgs", "repos_url": "https://api.github.com/users/ericoporto/repos", "events_url": "https://api.github.com/users/ericoporto/events{/privacy}", "received_events_url": "https://api.github.com/users/ericoporto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-26T17:44:31Z", "updated_at": "2018-10-07T12:00:57Z", "closed_at": "2018-10-07T12:00:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/84", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/84/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/84/events", "html_url": "https://github.com/lebigot/uncertainties/issues/84", "id": 335355362, "node_id": "MDU6SXNzdWUzMzUzNTUzNjI=", "number": 84, "title": "Chose right number of significant digits in unumpy arrays printing", "user": {"login": "michaels011235", "id": 24896275, "node_id": "MDQ6VXNlcjI0ODk2Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/24896275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaels011235", "html_url": "https://github.com/michaels011235", "followers_url": "https://api.github.com/users/michaels011235/followers", "following_url": "https://api.github.com/users/michaels011235/following{/other_user}", "gists_url": "https://api.github.com/users/michaels011235/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaels011235/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaels011235/subscriptions", "organizations_url": "https://api.github.com/users/michaels011235/orgs", "repos_url": "https://api.github.com/users/michaels011235/repos", "events_url": "https://api.github.com/users/michaels011235/events{/privacy}", "received_events_url": "https://api.github.com/users/michaels011235/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-25T10:51:36Z", "updated_at": "2018-10-07T12:03:21Z", "closed_at": "2018-10-07T12:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really like the uncertainties package, especially the feature to chose a reasonable number of significant digits:\r\n\r\n> When uncertainties must choose the number of significant digits on the uncertainty, it is defined with the Particle Data Group rounding rules (these rules keep the number of digits small, which is convenient for reading numbers with uncertainties, and at the same time prevent the uncertainty from being displayed with too few digits)\r\n\r\nUnfortunately, this does not work with printing unumpy arrays. It would be nice to have this possibility when printing unumpy arrays.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/83", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/83/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/83/events", "html_url": "https://github.com/lebigot/uncertainties/issues/83", "id": 326813470, "node_id": "MDU6SXNzdWUzMjY4MTM0NzA=", "number": 83, "title": "fork-me-on-github link of uncertainties-python-package.readthedocs.io/en/latest is uncorrect", "user": {"login": "stonebig", "id": 4312421, "node_id": "MDQ6VXNlcjQzMTI0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stonebig", "html_url": "https://github.com/stonebig", "followers_url": "https://api.github.com/users/stonebig/followers", "following_url": "https://api.github.com/users/stonebig/following{/other_user}", "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}", "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions", "organizations_url": "https://api.github.com/users/stonebig/orgs", "repos_url": "https://api.github.com/users/stonebig/repos", "events_url": "https://api.github.com/users/stonebig/events{/privacy}", "received_events_url": "https://api.github.com/users/stonebig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-27T12:43:12Z", "updated_at": "2018-05-27T14:34:48Z", "closed_at": "2018-05-27T14:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "it points to github.com/you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/77", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/77/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/77/events", "html_url": "https://github.com/lebigot/uncertainties/issues/77", "id": 290042381, "node_id": "MDU6SXNzdWUyOTAwNDIzODE=", "number": 77, "title": "Package installed from conda-forge fails on Python2", "user": {"login": "drdavella", "id": 2458487, "node_id": "MDQ6VXNlcjI0NTg0ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2458487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drdavella", "html_url": "https://github.com/drdavella", "followers_url": "https://api.github.com/users/drdavella/followers", "following_url": "https://api.github.com/users/drdavella/following{/other_user}", "gists_url": "https://api.github.com/users/drdavella/gists{/gist_id}", "starred_url": "https://api.github.com/users/drdavella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drdavella/subscriptions", "organizations_url": "https://api.github.com/users/drdavella/orgs", "repos_url": "https://api.github.com/users/drdavella/repos", "events_url": "https://api.github.com/users/drdavella/events{/privacy}", "received_events_url": "https://api.github.com/users/drdavella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-19T16:59:19Z", "updated_at": "2018-01-19T20:51:02Z", "closed_at": "2018-01-19T20:50:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the error I get after installing `uncertainties` using `conda install -c conda-forge uncertainties` on Python 2.7.14:\r\n```\r\nIn [1]: import uncertainties\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-f62f20ffc359> in <module>()\r\n--> 1 import uncertainties\r\n\r\n/Users/ddavella/miniconda3/envs/throwaway/lib/python2.7/site-packages/uncertainties/__init__.py in <module>()\r\n    222 author.'''\r\n    223\r\n--> 224 from .core import *\r\n    225 from .core import __all__  # For a correct help(uncertainties)\r\n    226\r\n\r\n/Users/ddavella/miniconda3/envs/throwaway/lib/python2.7/site-packages/uncertainties/core.py in <module>()\r\n    944 #! Python 2.7+ can use a dictionary comprehension instead:\r\n    945 FROM_SUPERSCRIPT = {\r\n--> 946     ord(sup): normal for (normal, sup) in TO_SUPERSCRIPT.items()}\r\n    947\r\n    948 def to_superscript(value):\r\n\r\n/Users/ddavella/miniconda3/envs/throwaway/lib/python2.7/site-packages/uncertainties/core.py in <dictcomp>((normal, sup))\r\n    944 #! Python 2.7+ can use a dictionary comprehension instead:\r\n    945 FROM_SUPERSCRIPT = {\r\n--> 946     ord(sup): normal for (normal, sup) in TO_SUPERSCRIPT.items()}\r\n    947\r\n    948 def to_superscript(value):\r\n\r\nTypeError: ord() expected a character, but string of length 3 found\r\n```\r\n\r\nInstalling from `pip` works fine, so there must be a discrepancy between the distributed versions.\r\n\r\nThis issue was encountered and reported here: https://github.com/gammapy/gammapy/pull/1264#issuecomment-358902868", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/73", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/73/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/73/events", "html_url": "https://github.com/lebigot/uncertainties/issues/73", "id": 254978254, "node_id": "MDU6SXNzdWUyNTQ5NzgyNTQ=", "number": 73, "title": "Can I do matrix convolutions and get uncertainties after the convolution using uncertainties package?", "user": {"login": "sreeni5493", "id": 15212113, "node_id": "MDQ6VXNlcjE1MjEyMTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/15212113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sreeni5493", "html_url": "https://github.com/sreeni5493", "followers_url": "https://api.github.com/users/sreeni5493/followers", "following_url": "https://api.github.com/users/sreeni5493/following{/other_user}", "gists_url": "https://api.github.com/users/sreeni5493/gists{/gist_id}", "starred_url": "https://api.github.com/users/sreeni5493/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sreeni5493/subscriptions", "organizations_url": "https://api.github.com/users/sreeni5493/orgs", "repos_url": "https://api.github.com/users/sreeni5493/repos", "events_url": "https://api.github.com/users/sreeni5493/events{/privacy}", "received_events_url": "https://api.github.com/users/sreeni5493/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T09:03:30Z", "updated_at": "2017-09-04T09:13:10Z", "closed_at": "2017-09-04T09:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title says. Can I do convolution using scipy or maybe there is an inbuilt uncertainties package to do convolution. Is it possible to do convolution and get uncertainties with a package. or should I write the entire for loop for convolution in python?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/71", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/71/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/71/events", "html_url": "https://github.com/lebigot/uncertainties/issues/71", "id": 252553603, "node_id": "MDU6SXNzdWUyNTI1NTM2MDM=", "number": 71, "title": "How to run tests using Python 3", "user": {"login": "natfarleydev", "id": 1312119, "node_id": "MDQ6VXNlcjEzMTIxMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1312119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natfarleydev", "html_url": "https://github.com/natfarleydev", "followers_url": "https://api.github.com/users/natfarleydev/followers", "following_url": "https://api.github.com/users/natfarleydev/following{/other_user}", "gists_url": "https://api.github.com/users/natfarleydev/gists{/gist_id}", "starred_url": "https://api.github.com/users/natfarleydev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natfarleydev/subscriptions", "organizations_url": "https://api.github.com/users/natfarleydev/orgs", "repos_url": "https://api.github.com/users/natfarleydev/repos", "events_url": "https://api.github.com/users/natfarleydev/events{/privacy}", "received_events_url": "https://api.github.com/users/natfarleydev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-24T10:12:06Z", "updated_at": "2018-05-27T14:41:11Z", "closed_at": "2018-05-27T14:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm developing for #70 but I can't figure out how to reliably test using Python 3.6 (my daily driver). \r\n\r\nIs there somewhere in the docs that describes the testing procedure? If not, could this be added?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/68", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/68/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/68/events", "html_url": "https://github.com/lebigot/uncertainties/issues/68", "id": 233937560, "node_id": "MDU6SXNzdWUyMzM5Mzc1NjA=", "number": 68, "title": "Error calculation in definite integral", "user": {"login": "astro-fermi", "id": 5036959, "node_id": "MDQ6VXNlcjUwMzY5NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5036959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astro-fermi", "html_url": "https://github.com/astro-fermi", "followers_url": "https://api.github.com/users/astro-fermi/followers", "following_url": "https://api.github.com/users/astro-fermi/following{/other_user}", "gists_url": "https://api.github.com/users/astro-fermi/gists{/gist_id}", "starred_url": "https://api.github.com/users/astro-fermi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astro-fermi/subscriptions", "organizations_url": "https://api.github.com/users/astro-fermi/orgs", "repos_url": "https://api.github.com/users/astro-fermi/repos", "events_url": "https://api.github.com/users/astro-fermi/events{/privacy}", "received_events_url": "https://api.github.com/users/astro-fermi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-06T15:47:10Z", "updated_at": "2017-06-11T05:17:25Z", "closed_at": "2017-06-11T05:17:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am calculating luminosity for a log parabola model using the following code. I want to compute the uncertainties in the output values. Since the code performs a numerical integration, is it possible to use the uncertainties package to get the desired results? I have error measurements in alpha, beta and norm values.\r\n\r\ndef Gamma_Lumin(alpha,beta,norm,Eb,red_shift,low_energy,high_energy):\r\n        Dl = lumin_dist(red_shift)\r\n        Eb = Eb/1000.           # convert to GeV\r\n        x2 = lambda x: 1.6*norm*(x/(Eb*(1+red_shift)))**(-alpha-(beta*log((x/(Eb*(1+red_shift))),10)))*(1/(1+red_shift)**2)*x   # Equation taken from R. Nemmen et al. 2012\r\n        E,e = integrate.quad(x2, low_energy, high_energy)       # Energy should be in GeV\r\n        Lumin = 4*pi*Dl**2*E\r\n        E = '%.3e' % E\r\n        Lumin = '%.3e' % Lumin\r\n        print 'Log parabolic Gamma-ray Luminosity is %s and energy flux is %s' % (Lumin,E)\r\n        return float(Lumin), float(E)\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/67", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/67/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/67/events", "html_url": "https://github.com/lebigot/uncertainties/issues/67", "id": 220470785, "node_id": "MDU6SXNzdWUyMjA0NzA3ODU=", "number": 67, "title": "converter not working with python3", "user": {"login": "atsteich", "id": 18330599, "node_id": "MDQ6VXNlcjE4MzMwNTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/18330599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atsteich", "html_url": "https://github.com/atsteich", "followers_url": "https://api.github.com/users/atsteich/followers", "following_url": "https://api.github.com/users/atsteich/following{/other_user}", "gists_url": "https://api.github.com/users/atsteich/gists{/gist_id}", "starred_url": "https://api.github.com/users/atsteich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atsteich/subscriptions", "organizations_url": "https://api.github.com/users/atsteich/orgs", "repos_url": "https://api.github.com/users/atsteich/repos", "events_url": "https://api.github.com/users/atsteich/events{/privacy}", "received_events_url": "https://api.github.com/users/atsteich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-09T13:23:22Z", "updated_at": "2017-04-09T14:41:12Z", "closed_at": "2017-04-09T14:40:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Loading data with uncertainties in the way descriped in https://pythonhosted.org/uncertainties/numpy_guide.html\r\ndoes only work for pyhton 2.7, not for 3.0. Loading data in that way leads to:\r\nTypeError: cannot use a string pattern on a bytes-like object\r\nPossible Reason may be that in Python 3 strings are unicode by default, whereas in Python 2 strings are bytes by default.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/66", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/66/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/66/events", "html_url": "https://github.com/lebigot/uncertainties/issues/66", "id": 219640822, "node_id": "MDU6SXNzdWUyMTk2NDA4MjI=", "number": 66, "title": "Inconsistency between `min` and `<`", "user": {"login": "pjacob2", "id": 21244503, "node_id": "MDQ6VXNlcjIxMjQ0NTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/21244503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjacob2", "html_url": "https://github.com/pjacob2", "followers_url": "https://api.github.com/users/pjacob2/followers", "following_url": "https://api.github.com/users/pjacob2/following{/other_user}", "gists_url": "https://api.github.com/users/pjacob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjacob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjacob2/subscriptions", "organizations_url": "https://api.github.com/users/pjacob2/orgs", "repos_url": "https://api.github.com/users/pjacob2/repos", "events_url": "https://api.github.com/users/pjacob2/events{/privacy}", "received_events_url": "https://api.github.com/users/pjacob2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-05T16:24:59Z", "updated_at": "2017-04-06T11:15:16Z", "closed_at": "2017-04-06T10:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a dictionary, `results`, containing the following values:\r\n```\r\n{'DC_NO': 115439.5272+/-227.5783569,\r\n 'DC_NO_uniform_prior': 128170.5718+/-254.9207861,\r\n 'NDC_NO': 121293.7951+/-67.26122141,\r\n 'Nested_DC_NO': 115361.3262+/-400.9781353,\r\n 'Nested_DC_NO_uniform_prior': 128369.6196+/-804.0209628,\r\n 'Nested_DC_O': 119185.6415+/-0,\r\n 'Nested_NDC_NO': 120300.3604+/-259.6579933,\r\n 'Nested_NDC_O': 133606.5811+/-1661.534633}\r\n```\r\nIf I  run `min(results)` I obtain the answer `'DC_NO'`. The nominal value of `'DC_NO'` of course if greater than that of `'Nested_DC_NO'` so I tested `results['DC_NO']<results['Nested_DC_NO']` which returns the answer `False`, thus contradicting the previous result. One might of course argue that the error on `'DC_NO'` is smaller and thus it might be more likely to be smaller than `'Nested_DC_NO'` and therefore `min()` gives me the correct answer but the fact that `<` disagrees with this assessment surprised me. To me it appears that there is an inconsistency in the implementation of `min()` and `<`. What is this caused by? Or is this me making a mistake?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/65", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/65/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/65/events", "html_url": "https://github.com/lebigot/uncertainties/issues/65", "id": 194677843, "node_id": "MDU6SXNzdWUxOTQ2Nzc4NDM=", "number": 65, "title": "Add more prominent link to github repo on the docs page", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-09T19:31:31Z", "updated_at": "2017-02-14T10:19:45Z", "closed_at": "2017-02-14T10:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the link to the github repo on the main page of the docs is hidden in the middle of the text, hardly visible (https://pythonhosted.org/uncertainties/#source-code).  I'd suggest either adding a \"fork me on github\" banner, or at least making the link much more prominent at the top of the page.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/64", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/64/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/64/events", "html_url": "https://github.com/lebigot/uncertainties/issues/64", "id": 177568857, "node_id": "MDU6SXNzdWUxNzc1Njg4NTc=", "number": 64, "title": "Incorrect printed version for -inf\u00b1100.0 on Windows with Python 2.6", "user": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 312166104, "node_id": "MDU6TGFiZWwzMTIxNjYxMDQ=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Bug", "name": "Bug", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-17T10:39:02Z", "updated_at": "2017-05-01T08:15:26Z", "closed_at": "2017-05-01T08:15:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The unit tests on AppVeyor for Python 2.6 on Windows show an incorrectly printed result for -inf\u00b1100.0 (`-1.#INF+/-100.0`). Reference: https://github.com/lebigot/uncertainties/pull/63#issuecomment-247761962.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/61", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/61/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/61/events", "html_url": "https://github.com/lebigot/uncertainties/issues/61", "id": 177424914, "node_id": "MDU6SXNzdWUxNzc0MjQ5MTQ=", "number": 61, "title": "Continious Integration", "user": {"login": "rth", "id": 630936, "node_id": "MDQ6VXNlcjYzMDkzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/630936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rth", "html_url": "https://github.com/rth", "followers_url": "https://api.github.com/users/rth/followers", "following_url": "https://api.github.com/users/rth/following{/other_user}", "gists_url": "https://api.github.com/users/rth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rth/subscriptions", "organizations_url": "https://api.github.com/users/rth/orgs", "repos_url": "https://api.github.com/users/rth/repos", "events_url": "https://api.github.com/users/rth/events{/privacy}", "received_events_url": "https://api.github.com/users/rth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-16T13:25:35Z", "updated_at": "2016-09-16T16:49:41Z", "closed_at": "2016-09-16T16:49:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Travis-CI was disabled in August for this repo. Should we add it back? The python versions that are tested in `.travis.yml` also might need to be updated.\n\nAlso I'm not sure if it would be useful to add CI tests on windows with [AppvVeyor](https://www.appveyor.com/)? In which case I can add the setup file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/60", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/60/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/60/events", "html_url": "https://github.com/lebigot/uncertainties/issues/60", "id": 176169495, "node_id": "MDU6SXNzdWUxNzYxNjk0OTU=", "number": 60, "title": "uncertainties.core - inspect.getargspec() is deprecated", "user": {"login": "andyfaff", "id": 702934, "node_id": "MDQ6VXNlcjcwMjkzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyfaff", "html_url": "https://github.com/andyfaff", "followers_url": "https://api.github.com/users/andyfaff/followers", "following_url": "https://api.github.com/users/andyfaff/following{/other_user}", "gists_url": "https://api.github.com/users/andyfaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyfaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyfaff/subscriptions", "organizations_url": "https://api.github.com/users/andyfaff/orgs", "repos_url": "https://api.github.com/users/andyfaff/repos", "events_url": "https://api.github.com/users/andyfaff/events{/privacy}", "received_events_url": "https://api.github.com/users/andyfaff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309011737, "node_id": "MDU6TGFiZWwzMDkwMTE3Mzc=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Internals", "name": "Internals", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-10T08:56:58Z", "updated_at": "2018-10-28T21:13:54Z", "closed_at": "2018-10-28T21:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a call to `inspect.getargspec()` on line 537 of uncertainties.core.py. Apparently this is deprecated and inspect.signature() should be used instead. Python version 3.5.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/58", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/58/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/58/events", "html_url": "https://github.com/lebigot/uncertainties/issues/58", "id": 175036996, "node_id": "MDU6SXNzdWUxNzUwMzY5OTY=", "number": 58, "title": "Support for mean in pandas DataFrame of ufloat", "user": {"login": "bgatessucks", "id": 2202856, "node_id": "MDQ6VXNlcjIyMDI4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2202856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgatessucks", "html_url": "https://github.com/bgatessucks", "followers_url": "https://api.github.com/users/bgatessucks/followers", "following_url": "https://api.github.com/users/bgatessucks/following{/other_user}", "gists_url": "https://api.github.com/users/bgatessucks/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgatessucks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgatessucks/subscriptions", "organizations_url": "https://api.github.com/users/bgatessucks/orgs", "repos_url": "https://api.github.com/users/bgatessucks/repos", "events_url": "https://api.github.com/users/bgatessucks/events{/privacy}", "received_events_url": "https://api.github.com/users/bgatessucks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-05T09:59:15Z", "updated_at": "2016-09-07T09:21:31Z", "closed_at": "2016-09-07T09:21:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Background: \nI would like to use the uncertainties package to hold and manipulate the results of Monte Carlo simulations. \nAt a high level I find a pandas DataFrame to be the most convenient structure, therefore I tried to combine the two packages as in the simple example below.\n\nIs there a way I can already apply `mean` to different slices of the DataFrame ?\nIf not, would you please consider adding support for it ?\n\n``` python\nimport pandas as pd\nimport numpy as np\n\nimport uncertainties\nfrom uncertainties import unumpy\n\nvalue = pd.DataFrame(np.arange(12).reshape(3, 4), index=['r1', 'r2', 'r3'], columns=['c1', 'c2', 'c3', 'c4'])\nerr = pd.DataFrame(0.01 * np.arange(12).reshape(3, 4) + 0.005, index=['r1', 'r2', 'r3'], columns=['c1', 'c2', 'c3', 'c4'])\n\ndf = pd.DataFrame(unumpy.uarray(value.values, err.values), \n                                index=['r1', 'r2', 'r3'], \n                                columns=['c1', 'c2', 'c3', 'c4'])\n\ndf.sum(axis=0)  # This works\ndf.sum(axis=1)  # This works\ndf.loc[['r1', 'r3'], :].sum(axis=1)  # This works\ndf.iloc[0:2, 1:].sum(axis=1)  # This works\n\ndf.mean(axis=0)  # This does not work: it can be fudged with: df.apply(lambda x: x.sum() / x.shape[0])\ndf.mean(axis=1)  # This does not work: it can be fudged with: df.T.apply(lambda x: x.sum() / x.shape[0])\ndf.loc[['r1', 'r3'], :].mean(axis=1)  # This does not work\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/56", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/56/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/56/events", "html_url": "https://github.com/lebigot/uncertainties/issues/56", "id": 174948933, "node_id": "MDU6SXNzdWUxNzQ5NDg5MzM=", "number": 56, "title": "Plans for native Python 3 suport and dropping support for older Python versions", "user": {"login": "rth", "id": 630936, "node_id": "MDQ6VXNlcjYzMDkzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/630936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rth", "html_url": "https://github.com/rth", "followers_url": "https://api.github.com/users/rth/followers", "following_url": "https://api.github.com/users/rth/following{/other_user}", "gists_url": "https://api.github.com/users/rth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rth/subscriptions", "organizations_url": "https://api.github.com/users/rth/orgs", "repos_url": "https://api.github.com/users/rth/repos", "events_url": "https://api.github.com/users/rth/events{/privacy}", "received_events_url": "https://api.github.com/users/rth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-04T13:27:12Z", "updated_at": "2016-09-04T19:48:24Z", "closed_at": "2016-09-04T16:43:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `Uncertainties` supports python 2.4-2.7 with support of python 3.2-3.3 through `2to3` converter. There is also the Python 2.3 branch that appears to be still periodically synced.\n![untitled](https://cloud.githubusercontent.com/assets/630936/18231140/a5d823c6-72b0-11e6-9c4c-dd4d564c1a20.png)\n\nThe support of such outdated python versions (e.g. python 2.3 was installed in Ubuntu Hardy LTS released in 2008 which reached end of life in 2013) is fairly unconventional in the scientific python community were currently most packages support 2.6-2.7 and natively 3.2-3.5 (i.e. without using 2to3), cf. for instance the [last numpy release](https://docs.scipy.org/doc/numpy/release.html) which is also an optional dependency. Also see  the [Python 3 statement](https://python3statement.github.io/) for the dropping of support for PY2 in major scientific python packages by 2020. \n\nThe ongoing support for outdated python versions 2.4-2.5, 2.3 and to a lesser extent 2.6, and the lack of a native 3.2+ support, prevents from using the last features and optimizations of the language  (also related to issue #52) and  in my opinion might also dissuade new contributors who might have already switched to PY3. \n\nIs there any plans to add native Python 3.2-3.5 support and drop support for older Python versions in the future releases? I would be happy to work on this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/55", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/55/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/55/events", "html_url": "https://github.com/lebigot/uncertainties/issues/55", "id": 174045284, "node_id": "MDU6SXNzdWUxNzQwNDUyODQ=", "number": 55, "title": "Initialising empy array", "user": {"login": "pjacob2", "id": 21244503, "node_id": "MDQ6VXNlcjIxMjQ0NTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/21244503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjacob2", "html_url": "https://github.com/pjacob2", "followers_url": "https://api.github.com/users/pjacob2/followers", "following_url": "https://api.github.com/users/pjacob2/following{/other_user}", "gists_url": "https://api.github.com/users/pjacob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjacob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjacob2/subscriptions", "organizations_url": "https://api.github.com/users/pjacob2/orgs", "repos_url": "https://api.github.com/users/pjacob2/repos", "events_url": "https://api.github.com/users/pjacob2/events{/privacy}", "received_events_url": "https://api.github.com/users/pjacob2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-30T15:07:52Z", "updated_at": "2016-08-30T20:04:27Z", "closed_at": "2016-08-30T20:01:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have found it that I quite often want to initiliase an empty array. If I simply initiliase an empty array or an array of zeros an exception will be thrown once I try to assign `ufloat` values to it. Would it be worthwhile to include a little routine to automatically do this? This is what I am currently using (probably not the most efficient version but it works):\n\n```\ndef unctarray(a,b):\n    i=0\n    temp = np.array([])\n    while i<a*b:\n        temp=np.append(temp,np.array([unct.ufloat(0,0)]))\n        i+=1\n    array = np.reshape(temp,(a,b))\n    return(array)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/54", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/54/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/54/events", "html_url": "https://github.com/lebigot/uncertainties/issues/54", "id": 173235630, "node_id": "MDU6SXNzdWUxNzMyMzU2MzA=", "number": 54, "title": "Error in only one direction", "user": {"login": "pjacob2", "id": 21244503, "node_id": "MDQ6VXNlcjIxMjQ0NTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/21244503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjacob2", "html_url": "https://github.com/pjacob2", "followers_url": "https://api.github.com/users/pjacob2/followers", "following_url": "https://api.github.com/users/pjacob2/following{/other_user}", "gists_url": "https://api.github.com/users/pjacob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjacob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjacob2/subscriptions", "organizations_url": "https://api.github.com/users/pjacob2/orgs", "repos_url": "https://api.github.com/users/pjacob2/repos", "events_url": "https://api.github.com/users/pjacob2/events{/privacy}", "received_events_url": "https://api.github.com/users/pjacob2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-25T15:31:10Z", "updated_at": "2016-08-26T08:43:15Z", "closed_at": "2016-08-26T07:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I should preface this by saying that this is not really an issue report but rather a feature request.\n\nI have a value for a conversion in a chemical reaction. The conversion is measured to be 100% which is the maximum theoretically possible. If I have 100% conversion I have used up all my starting material in the reaction and I obviously can\u2019t use any more as it is all gone thus I can only feasibly have an error in the negative direction i.e. 1 (-0.05) instead of 1 (+-0.05). How would I represent that in uncertainties? I fear I haven\u2019t found a method yet (or missed it) though I have come across this article saying it might not be possible (https://newton.cx/~peter/2013/04/propagating-uncertainties-the-lazy-and-absurd-way/ ) and this github conversation on the matter (https://github.com/lebigot/uncertainties/issues/25 ).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/50", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/50/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/50/events", "html_url": "https://github.com/lebigot/uncertainties/issues/50", "id": 167244422, "node_id": "MDU6SXNzdWUxNjcyNDQ0MjI=", "number": 50, "title": "unumpy.isnan() should be useable for NumPy's boolean array indexing", "user": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309011822, "node_id": "MDU6TGFiZWwzMDkwMTE4MjI=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Behavior", "name": "Behavior", "color": "d5e25f", "default": false, "description": ""}, {"id": 312166104, "node_id": "MDU6TGFiZWwzMTIxNjYxMDQ=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Bug", "name": "Bug", "color": "eb6420", "default": false, "description": null}, {"id": 413388538, "node_id": "MDU6TGFiZWw0MTMzODg1Mzg=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/NumPy+uncertainties", "name": "NumPy+uncertainties", "color": "d4ffb2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-24T17:40:30Z", "updated_at": "2016-07-24T20:15:20Z", "closed_at": "2016-07-24T20:15:20Z", "author_association": "OWNER", "active_lock_reason": null, "body": "NumPy boolean array indexing does not work when the indexes are obtained from `unumpy.isnan()`:\n\n```\n>>> import numpy as np\n>>> from uncertainties import ufloat, unumpy\n>>> num_elmt = 5000\n>>> x = np.array([ufloat(10,1) for _ in range(num_elmt)])\n>>> nan_locs = [int(np.random.uniform(0, num_elmt)) for _ in range(100)]\n>>> x[nan_locs] = float('nan')\n>>> len(x[~unumpy.isnan(x)])\nTraceback (most recent call last):\n  File \"<ipython-input-8-05bf2007e616>\", line 1, in <module>\n    len(x[~unumpy.isnan(x)])\nIndexError: arrays used as indices must be of integer (or boolean) type\n```\n\nWhile `unumpy.isnan()` returns booleans:\n\n```\n>>> set(type(v) for v in unumpy.isnan(x))\nset([<type 'bool'>])\n```\n\nthe data type of `unumpy.isnan(x)` is object:\n\n```\n>>> unumpy.isnan(x).dtype\ndtype('O')\n```\n\nThis is probably the source of the problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/48", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/48/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/48/events", "html_url": "https://github.com/lebigot/uncertainties/issues/48", "id": 162169364, "node_id": "MDU6SXNzdWUxNjIxNjkzNjQ=", "number": 48, "title": "Provide upper and lower bounds as array", "user": {"login": "icymist", "id": 3083343, "node_id": "MDQ6VXNlcjMwODMzNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3083343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icymist", "html_url": "https://github.com/icymist", "followers_url": "https://api.github.com/users/icymist/followers", "following_url": "https://api.github.com/users/icymist/following{/other_user}", "gists_url": "https://api.github.com/users/icymist/gists{/gist_id}", "starred_url": "https://api.github.com/users/icymist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icymist/subscriptions", "organizations_url": "https://api.github.com/users/icymist/orgs", "repos_url": "https://api.github.com/users/icymist/repos", "events_url": "https://api.github.com/users/icymist/events{/privacy}", "received_events_url": "https://api.github.com/users/icymist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-24T15:16:41Z", "updated_at": "2016-07-24T17:30:05Z", "closed_at": "2016-07-24T17:29:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "We currently have:\n\n```\nIn [1]: from uncertainties import ufloat\nIn [2]: x = ufloat(10, 0.5)\nIn [3]: x.nominal_value\nOut[3]: 10.0\nIn [4]: x.std_dev\nOut[4]: 0.5\n```\n\nWould it be a good idea to have something along the lines of:\n\n```\nIn [5]: x.bounds\nOut[5]: (9.5, 10.5)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/46", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/46/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/46/events", "html_url": "https://github.com/lebigot/uncertainties/issues/46", "id": 144774886, "node_id": "MDU6SXNzdWUxNDQ3NzQ4ODY=", "number": 46, "title": "Minor typo in the docs", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-31T03:00:18Z", "updated_at": "2016-03-31T18:59:21Z", "closed_at": "2016-03-31T14:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pythonhosted.org/uncertainties/tech_guide.html#differentiation-method says\n\n> (the few mathematical functions that are instead differentiated through numerical approximation are listed in umath.num_deriv_funcs).\n\nActually they seem to be in `umath_core.num_deriv_funcs`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/45", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/45/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/45/events", "html_url": "https://github.com/lebigot/uncertainties/issues/45", "id": 143188851, "node_id": "MDU6SXNzdWUxNDMxODg4NTE=", "number": 45, "title": "Printing test fails for Python 2.6.", "user": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 312166104, "node_id": "MDU6TGFiZWwzMTIxNjYxMDQ=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Bug", "name": "Bug", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-24T08:51:32Z", "updated_at": "2016-05-15T13:09:09Z", "closed_at": "2016-05-15T13:09:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "One unit test fails for Python 2.6: in test_uncertainties.py:\n\nIncorrect representation '-000000000.0inf(inf)' for format '020S' of -inf+/-inf: '-00000000000inf(inf)' expected.\n\nThis works for Python 2.7.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/43", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/43/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/43/events", "html_url": "https://github.com/lebigot/uncertainties/issues/43", "id": 140082021, "node_id": "MDU6SXNzdWUxNDAwODIwMjE=", "number": 43, "title": "working with units?", "user": {"login": "gracca", "id": 923714, "node_id": "MDQ6VXNlcjkyMzcxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/923714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gracca", "html_url": "https://github.com/gracca", "followers_url": "https://api.github.com/users/gracca/followers", "following_url": "https://api.github.com/users/gracca/following{/other_user}", "gists_url": "https://api.github.com/users/gracca/gists{/gist_id}", "starred_url": "https://api.github.com/users/gracca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gracca/subscriptions", "organizations_url": "https://api.github.com/users/gracca/orgs", "repos_url": "https://api.github.com/users/gracca/repos", "events_url": "https://api.github.com/users/gracca/events{/privacy}", "received_events_url": "https://api.github.com/users/gracca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-11T04:22:38Z", "updated_at": "2016-03-13T12:32:47Z", "closed_at": "2016-03-13T12:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to work with units, for example:\n\n``` python\n>>> import astropy.units as u\n>>> from uncertainties import ufloat\n>>> d = ufloat(211, 55) * u.pc\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-c62b18eb7db0> in <module>()\n----> 1 d = ufloat(211, 55) * u.pc\n\nTypeError: unsupported operand type(s) for *: 'Variable' and 'Unit'\n```\n\nIs there another way to use units with the uncertainties package?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/42", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/42/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/42/events", "html_url": "https://github.com/lebigot/uncertainties/issues/42", "id": 138080863, "node_id": "MDU6SXNzdWUxMzgwODA4NjM=", "number": 42, "title": "Deprecated support for calling ufloat with one argument is now broken", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-03T05:35:30Z", "updated_at": "2016-03-18T10:18:16Z", "closed_at": "2016-03-18T10:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [2]: ufloat(1)\n/usr/bin/ipython:1: UserWarning: Obsolete: either use ufloat(nominal_value, std_dev), ufloat(nominal_value, std_dev, tag), or the ufloat_fromstr() function, for string representations. Code can be automatically updated with python -m uncertainties.1to2 -w ProgramDirectory.\n  #!/usr/bin/python3\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/usr/lib/python3.5/site-packages/uncertainties/core.py in ufloat(nominal_value, std_dev, tag)\n   3069         # Standard case:\n-> 3070         return Variable(nominal_value, std_dev, tag=tag)\n   3071     # Exception types raised by, respectively: tuple or string that\n\n/usr/lib/python3.5/site-packages/uncertainties/core.py in __init__(self, value, std_dev, tag)\n   2584 \n-> 2585         self.std_dev = std_dev  # Assignment through a Python property\n   2586 \n\n/usr/lib/python3.5/site-packages/uncertainties/core.py in std_dev(self, std_dev)\n   2604         # should work on most platforms.)\n-> 2605         if std_dev < 0 and not isinfinite(std_dev):\n   2606             raise NegativeStdDev(\"The standard deviation cannot be negative\")\n\nTypeError: unorderable types: NoneType() < int()\n\nDuring handling of the above exception, another exception occurred:\n\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-8cf5b3abea25> in <module>()\n----> 1 ufloat(1)\n\n/usr/lib/python3.5/site-packages/uncertainties/core.py in ufloat(nominal_value, std_dev, tag)\n   3084             tag_arg = std_dev  # 2 positional arguments form\n   3085 \n-> 3086         return _ufloat_obsolete(nominal_value, tag_arg)\n\n/usr/lib/python3.5/site-packages/uncertainties/core.py in _ufloat_obsolete(representation, tag)\n   3024         return ufloat(representation[0], representation[1], tag)\n   3025     else:\n-> 3026         return ufloat_fromstr(representation, tag)\n   3027 \n   3028 # The arguments are named for the new version, instead of bearing\n\n/usr/lib/python3.5/site-packages/uncertainties/core.py in ufloat_fromstr(representation, tag)\n   3008 \n   3009     (nominal_value, std_dev) = str_to_number_with_uncert(\n-> 3010         representation.strip())\n   3011 \n   3012     return ufloat(nominal_value, std_dev, tag)\n\nAttributeError: 'int' object has no attribute 'strip'\n```\n\nI don't actually use the one-argument form (... except when making a typo) and given that it seems to have been deprecated a while ago, perhaps ufloat's signature should just be modified to have `std_dev` as a required argument?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/41", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/41/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/41/events", "html_url": "https://github.com/lebigot/uncertainties/issues/41", "id": 135528429, "node_id": "MDU6SXNzdWUxMzU1Mjg0Mjk=", "number": 41, "title": "Many internal functions appear in IPython", "user": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-22T20:03:48Z", "updated_at": "2016-02-24T22:15:20Z", "closed_at": "2016-02-24T22:15:20Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Many internal functions that should not be exposed (e.g. because they have limited functionalities and are optimized for internal use) are exposed in the sense that they are not protected with a leader underline character. This makes completion in, say, an IPython shell list too many functions compared to what a user should normally need. Internal functions are meant to be internal until it appears useful to make them available\u2014in which case they might need to be generalized, and would need to be in the HTML documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/40", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/40/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/40/events", "html_url": "https://github.com/lebigot/uncertainties/issues/40", "id": 134533370, "node_id": "MDU6SXNzdWUxMzQ1MzMzNzA=", "number": 40, "title": "Make wrapped function to accept arrays", "user": {"login": "ntim", "id": 7419576, "node_id": "MDQ6VXNlcjc0MTk1NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7419576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ntim", "html_url": "https://github.com/ntim", "followers_url": "https://api.github.com/users/ntim/followers", "following_url": "https://api.github.com/users/ntim/following{/other_user}", "gists_url": "https://api.github.com/users/ntim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ntim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ntim/subscriptions", "organizations_url": "https://api.github.com/users/ntim/orgs", "repos_url": "https://api.github.com/users/ntim/repos", "events_url": "https://api.github.com/users/ntim/events{/privacy}", "received_events_url": "https://api.github.com/users/ntim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-18T10:01:55Z", "updated_at": "2016-02-28T09:24:24Z", "closed_at": "2016-02-28T09:03:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI successfully wrapped a scalar function with four parameters of which the latter two have uncertainties:\n\n``` python\ndef tau_angstrom(wvl, wvl0, tau0, alpha):\n    return tau0 * (wvl / wvl0)**(-alpha)\n\ndef tau_angstrom_dev1_tau0(wvl, wvl0, tau0, alpha):\n    return tau_angstrom(wvl, wvl0, tau0, alpha) / tau0\n\ndef tau_angstrom_dev1_alpha(wvl, wvl0, tau0, alpha):\n    return -tau_angstrom(wvl, wvl0, tau0, alpha) * np.log((wvl / wvl0))\n\ntau_angstrom_f = uncertainties.wrap(tau_angstrom, [None, None, \n        tau_angstrom_dev1_tau0, tau_angstrom_dev1_alpha])\n```\n\nFor ease of code, I would like to also accept arrays for the parameter `wvl`, how can this be achieved? `unumpy.core.wrap_array_func` results in an error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/39", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/39/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/39/events", "html_url": "https://github.com/lebigot/uncertainties/issues/39", "id": 131183586, "node_id": "MDU6SXNzdWUxMzExODM1ODY=", "number": 39, "title": "weird combination of uncertainties", "user": {"login": "denfromufa", "id": 7870949, "node_id": "MDQ6VXNlcjc4NzA5NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denfromufa", "html_url": "https://github.com/denfromufa", "followers_url": "https://api.github.com/users/denfromufa/followers", "following_url": "https://api.github.com/users/denfromufa/following{/other_user}", "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}", "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions", "organizations_url": "https://api.github.com/users/denfromufa/orgs", "repos_url": "https://api.github.com/users/denfromufa/repos", "events_url": "https://api.github.com/users/denfromufa/events{/privacy}", "received_events_url": "https://api.github.com/users/denfromufa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-03T23:03:09Z", "updated_at": "2016-02-04T14:31:58Z", "closed_at": "2016-02-04T08:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "can you please review this gist https://gist.github.com/denfromufa/d88f54b0d3e80579d3f1:\n\n```\ne1=5.\ne2=20.\nq1=ufloat(80.,e1)\nq2=ufloat(80.,e2)\nqharm=(q1/e1+q2/e2)/(1/e1+1/e2)\nqharm # 80.0+/-5.656854249492381\nqharm.error_components() # {80.0+/-5.0: 4.0, 80.0+/-20.0: 4.0}\n```\n\nwhy are error components same if the original errors are different and the resulting expression is symmetric?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/38", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/38/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/38/events", "html_url": "https://github.com/lebigot/uncertainties/issues/38", "id": 130094060, "node_id": "MDU6SXNzdWUxMzAwOTQwNjA=", "number": 38, "title": "combined uncertainty from multiple independent measurements?", "user": {"login": "denfromufa", "id": 7870949, "node_id": "MDQ6VXNlcjc4NzA5NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denfromufa", "html_url": "https://github.com/denfromufa", "followers_url": "https://api.github.com/users/denfromufa/followers", "following_url": "https://api.github.com/users/denfromufa/following{/other_user}", "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}", "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions", "organizations_url": "https://api.github.com/users/denfromufa/orgs", "repos_url": "https://api.github.com/users/denfromufa/repos", "events_url": "https://api.github.com/users/denfromufa/events{/privacy}", "received_events_url": "https://api.github.com/users/denfromufa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-31T07:11:20Z", "updated_at": "2016-02-02T20:22:28Z", "closed_at": "2016-02-02T20:22:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can this package handle uncertainty calculations like this?\n\nhttp://physics.stackexchange.com/questions/57317/multiple-measurements-of-the-same-quantity-combining-uncertainties\n\nIf not, why?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/37", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/37/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/37/events", "html_url": "https://github.com/lebigot/uncertainties/issues/37", "id": 129141874, "node_id": "MDU6SXNzdWUxMjkxNDE4NzQ=", "number": 37, "title": "Weird behaviour doing repeated calculations", "user": {"login": "bilderbuchi", "id": 327442, "node_id": "MDQ6VXNlcjMyNzQ0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/327442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bilderbuchi", "html_url": "https://github.com/bilderbuchi", "followers_url": "https://api.github.com/users/bilderbuchi/followers", "following_url": "https://api.github.com/users/bilderbuchi/following{/other_user}", "gists_url": "https://api.github.com/users/bilderbuchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bilderbuchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bilderbuchi/subscriptions", "organizations_url": "https://api.github.com/users/bilderbuchi/orgs", "repos_url": "https://api.github.com/users/bilderbuchi/repos", "events_url": "https://api.github.com/users/bilderbuchi/events{/privacy}", "received_events_url": "https://api.github.com/users/bilderbuchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-27T13:20:20Z", "updated_at": "2016-01-27T15:44:59Z", "closed_at": "2016-01-27T13:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\nI found something very weird (a bug? user error?) when doing calculations for a number of ufloats in a list. Running this script\n\n```\nfrom uncertainties import ufloat\nimport uncertainties.umath as um\n\nk = ufloat(0.245548, 0.003834, 'spring constant')\nr = ufloat(0.29, 0.001, 'distance')\nalpha = ufloat(0,um.radians(1.0), 'angle')\n\ndeflection_list = [ufloat(0.0, 1e-6, 'deflection distance'),\n                   ufloat(0.855e-3, 1e-6, 'deflection distance')]\n\nfor x in deflection_list:\n    theta = x/r\n    F = k * theta / (r * um.cos(alpha))\n    print('Deflection x={:.2f} um\\nF={:.2f} uN'.format(1e6*x, 1e6*F))\n    print('Error components:')\n    for k, v in F.error_components().items():\n        print(k.tag, v)\n    print('\\n')\n```\n\nrepeatedly gives different results for `F` for the second item in `deflection_list`. The first item (deflection 0) always stays constant. The problem disappears as soon as there is only one entry in `deflection_list`.\n\nOne run prints\n\n```\nDeflection x=0.00+/-1.00 um\nF=0.00+/-2.92 uN\nError components:\nspring constant 0.0\ndeflection distance 2.919714625445898e-06\ndistance 0.0\nangle 0.0\n\n\nDeflection x=855.00+/-1.00 um\nF=0.00+/-177.44 uN\nError components:\nangle 0.00017743834844888845\ndistance 0.0\ndeflection distance 0.0\n```\n\n(which is incorrect, the second F should not have an expected value of 0).\nRunning the script again gives\n\n```\nDeflection x=0.00+/-1.00 um\nF=0.00+/-2.92 uN\nError components:\nspring constant 0.0\nangle 0.0\ndeflection distance 2.919714625445898e-06\ndistance 0.0\n\n\nDeflection x=855.00+/-1.00 um\nF=2948.28+/-10.74 uN\nError components:\ndistance 1.0166468489892985e-05\nangle 0.0\ndeflection distance 3.4482758620689654e-06\n```\n\n(now we get a value for the second `F`, but why is the script behaviour not deterministic?!?)\n\nAdditionally, on some runs the error contribution for the deflection distance occurs twice for an unknown reason, the computation didn't change!: \n\n```\nDeflection x=0.00+/-1.00 um\nF=0.00+/-2.92 uN\nError components:\nspring constant 0.0\nangle 0.0\ndistance 0.0\ndeflection distance 2.919714625445898e-06\n\n\nDeflection x=855.00+/-1.00 um\nF=0.00+/-0.01 uN\nError components:\ndeflection distance 1.0166468489892985e-08\ndeflection distance 0.0\ndistance 0.0\nangle 0.0\n```\n\nAny idea what's going wrong here?\nThis is on Python 3.5.1, Anaconda 2.4.0 (64-bit), uncertainties 2.4.7.1 installed with pip.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/36", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/36/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/36/events", "html_url": "https://github.com/lebigot/uncertainties/issues/36", "id": 127143565, "node_id": "MDU6SXNzdWUxMjcxNDM1NjU=", "number": 36, "title": "Incorrect application of PDG rounding rules?", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309011822, "node_id": "MDU6TGFiZWwzMDkwMTE4MjI=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Behavior", "name": "Behavior", "color": "d5e25f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-18T02:42:22Z", "updated_at": "2016-02-22T20:14:04Z", "closed_at": "2016-02-22T20:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [7]: format(ufloat(724.2, 26.4), \"\")\nOut[7]: '724.2+/-26.4'\n```\n\nI'd expect 724+/-26 if my reading of the PDG rules is correct (and anyways it makes sense to avoid printing an uncertainty with 3 significant digits :-)).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/35", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/35/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/35/events", "html_url": "https://github.com/lebigot/uncertainties/issues/35", "id": 126940806, "node_id": "MDU6SXNzdWUxMjY5NDA4MDY=", "number": 35, "title": "formatting an infinite value fails", "user": {"login": "anntzer", "id": 1322974, "node_id": "MDQ6VXNlcjEzMjI5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1322974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anntzer", "html_url": "https://github.com/anntzer", "followers_url": "https://api.github.com/users/anntzer/followers", "following_url": "https://api.github.com/users/anntzer/following{/other_user}", "gists_url": "https://api.github.com/users/anntzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/anntzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anntzer/subscriptions", "organizations_url": "https://api.github.com/users/anntzer/orgs", "repos_url": "https://api.github.com/users/anntzer/repos", "events_url": "https://api.github.com/users/anntzer/events{/privacy}", "received_events_url": "https://api.github.com/users/anntzer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 312166104, "node_id": "MDU6TGFiZWwzMTIxNjYxMDQ=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Bug", "name": "Bug", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-15T19:31:08Z", "updated_at": "2016-01-28T19:21:34Z", "closed_at": "2016-01-28T19:21:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [4]: \"{}\".format(ufloat(np.inf, 0))\n---------------------------------------------------------------------------\nOverflowError                             Traceback (most recent call last)\n<ipython-input-4-e46e3ab01e12> in <module>()\n----> 1 \"{}\".format(ufloat(np.inf, 0))\n\n/usr/lib/python3.5/site-packages/uncertainties/__init__.py in __format__(self, format_spec)\n   2207                 digits_limit = (\n   2208                     signif_dgt_to_limit(exp_ref_value, num_signif_digits)\n-> 2209                     if non_nan_values\n   2210                     else None)\n   2211 \n\n/usr/lib/python3.5/site-packages/uncertainties/__init__.py in signif_dgt_to_limit(value, num_signif_d)\n   1637     '''\n   1638 \n-> 1639     fst_digit = first_digit(value)\n   1640 \n   1641     limit_no_rounding = fst_digit-num_signif_d+1\n\n/usr/lib/python3.5/site-packages/uncertainties/__init__.py in first_digit(value)\n   1098     # ValueError, so the value is directly tested:\n   1099     if value:\n-> 1100         return int(math.floor(math.log10(abs(value))))\n   1101     else:\n   1102         return 0\n\nOverflowError: cannot convert float infinity to integer\n```\n\nand similarly with `ufloat(np.inf, np.inf)`.\nObviously this uncertainty itself isn't \"real\", but still useful in intermediate calculations.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/34", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/34/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/34/events", "html_url": "https://github.com/lebigot/uncertainties/issues/34", "id": 126012882, "node_id": "MDU6SXNzdWUxMjYwMTI4ODI=", "number": 34, "title": "ImportError: No module named 'lib2to3.tests' -- while running tests", "user": {"login": "pwaller", "id": 438648, "node_id": "MDQ6VXNlcjQzODY0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/438648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwaller", "html_url": "https://github.com/pwaller", "followers_url": "https://api.github.com/users/pwaller/followers", "following_url": "https://api.github.com/users/pwaller/following{/other_user}", "gists_url": "https://api.github.com/users/pwaller/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwaller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwaller/subscriptions", "organizations_url": "https://api.github.com/users/pwaller/orgs", "repos_url": "https://api.github.com/users/pwaller/repos", "events_url": "https://api.github.com/users/pwaller/events{/privacy}", "received_events_url": "https://api.github.com/users/pwaller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 312331150, "node_id": "MDU6TGFiZWwzMTIzMzExNTA=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Installation%20problem", "name": "Installation problem", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-01-11T19:02:40Z", "updated_at": "2016-01-29T15:26:53Z", "closed_at": "2016-01-29T15:26:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ python3 -V\nPython 3.4.3+\n$ nosetests3 --version\nnosetests3 version 1.3.6\n$ nosetests3 uncertainties\n$ python3 -c 'import lib2to3.tests'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nImportError: No module named 'lib2to3.tests'\n$ nosetests3 uncertainties\nE.........../home/pwaller/.local/src/uncertainties/build/lib/uncertainties/unumpy/test_unumpy.py:318: UserWarning: Obsolete: uarray() should now be called with two arguments. Code can be automatically updated with python -m uncertainties.1to2 -w ProgramDirectory.\n  arr_obs = unumpy.uarray.__call__(([1, 2], [1, 4]))  # Obsolete call\n[ lots of warnings about obsolete stuff ]\n======================================================================\nERROR: Failure: ImportError (No module named 'lib2to3.tests')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pwaller/.local/src/uncertainties/build/lib/uncertainties/lib1to2/test_1to2.py\", line 39, in <module>\n    import test.test_lib2to3.support as support\nImportError: No module named 'test.test_lib2to3'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3/dist-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib/python3/dist-packages/nose/loader.py\", line 420, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/python3/dist-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib/python3.4/imp.py\", line 235, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib/python3.4/imp.py\", line 171, in load_source\n    module = methods.load()\n  File \"<frozen importlib._bootstrap>\", line 1220, in load\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/home/pwaller/.local/src/uncertainties/build/lib/uncertainties/lib1to2/test_1to2.py\", line 42, in <module>\n    import lib2to3.tests.support as support\nImportError: No module named 'lib2to3.tests'\n\n----------------------------------------------------------------------\nRan 52 tests in 2.964s\n\nFAILED (errors=1)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/33", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/33/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/33/events", "html_url": "https://github.com/lebigot/uncertainties/issues/33", "id": 121927476, "node_id": "MDU6SXNzdWUxMjE5Mjc0NzY=", "number": 33, "title": "Unexpected file on PyPI", "user": {"login": "FedericoCeratto", "id": 91576, "node_id": "MDQ6VXNlcjkxNTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/91576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoCeratto", "html_url": "https://github.com/FedericoCeratto", "followers_url": "https://api.github.com/users/FedericoCeratto/followers", "following_url": "https://api.github.com/users/FedericoCeratto/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoCeratto/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoCeratto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoCeratto/subscriptions", "organizations_url": "https://api.github.com/users/FedericoCeratto/orgs", "repos_url": "https://api.github.com/users/FedericoCeratto/repos", "events_url": "https://api.github.com/users/FedericoCeratto/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoCeratto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-13T16:11:17Z", "updated_at": "2015-12-13T21:50:41Z", "closed_at": "2015-12-13T21:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tar.gz file on PyPI contains doc/_templates/layout.html~ ,  maybe it should be removed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/32", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/32/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/32/events", "html_url": "https://github.com/lebigot/uncertainties/issues/32", "id": 60435068, "node_id": "MDU6SXNzdWU2MDQzNTA2OA==", "number": 32, "title": "`nominal_value(x)` on array", "user": {"login": "mtrbean", "id": 222778, "node_id": "MDQ6VXNlcjIyMjc3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/222778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtrbean", "html_url": "https://github.com/mtrbean", "followers_url": "https://api.github.com/users/mtrbean/followers", "following_url": "https://api.github.com/users/mtrbean/following{/other_user}", "gists_url": "https://api.github.com/users/mtrbean/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtrbean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtrbean/subscriptions", "organizations_url": "https://api.github.com/users/mtrbean/orgs", "repos_url": "https://api.github.com/users/mtrbean/repos", "events_url": "https://api.github.com/users/mtrbean/events{/privacy}", "received_events_url": "https://api.github.com/users/mtrbean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-10T00:56:56Z", "updated_at": "2020-03-04T12:30:43Z", "closed_at": "2015-03-10T02:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the best way to construct a correlated array of values while having an easy way to extract nominal_value and std_dev? I wanted to get the nominal values of an array, but `uncertainties.nominal_value` doesn't work on a regular numpy array. I could construct a `uarray` by looping through all values and use the `nominal_value` attribute of `uarray`, but that doesn't sound optimal.\n\n```\nIn [379]: x = uncertainties.correlated_values([0,1], np.eye(2)), x\nOut[379]: (0.0+/-1.0, 1.0+/-1.0)\n\nIn [381]: uncertainties.nominal_value(np.array(x))\nOut[381]: array([0.0+/-1.0, 1.0+/-1.0], dtype=object)\n\nIn [382]: uncertainties.unumpy.uarray(x)\n-c:1: UserWarning: Obsolete: uarray() should now be called with two arguments. Code can be automatically updated with python -m uncertainties.1to2 -w ProgramDirectory.\nTypeError: can't convert an affine function (<class 'uncertainties.AffineScalarFunc'>) to float; use x.nominal_value\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/31", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/31/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/31/events", "html_url": "https://github.com/lebigot/uncertainties/issues/31", "id": 41176275, "node_id": "MDU6SXNzdWU0MTE3NjI3NQ==", "number": 31, "title": "error when using pandas with nan+/-nan", "user": {"login": "mikapfl", "id": 7226087, "node_id": "MDQ6VXNlcjcyMjYwODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7226087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikapfl", "html_url": "https://github.com/mikapfl", "followers_url": "https://api.github.com/users/mikapfl/followers", "following_url": "https://api.github.com/users/mikapfl/following{/other_user}", "gists_url": "https://api.github.com/users/mikapfl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikapfl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikapfl/subscriptions", "organizations_url": "https://api.github.com/users/mikapfl/orgs", "repos_url": "https://api.github.com/users/mikapfl/repos", "events_url": "https://api.github.com/users/mikapfl/events{/privacy}", "received_events_url": "https://api.github.com/users/mikapfl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-26T14:12:03Z", "updated_at": "2014-09-03T03:25:04Z", "closed_at": "2014-09-03T03:25:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm not sure if this is an uncertainties error, might also well be an error in pandas. Displaying a pandas.DataFrame with nan+/-nan as a member fails, try:\n\n```\n >>> import numpy as np\n >>> import pandas as pd\n >>> import uncertainties\n >>> pd.DataFrame([uncertainties.ufloat(np.nan, np.nan)])\n <repr(<pandas.core.frame.DataFrame at 0x7fc00e688240>) failed: ValueError: cannot convert float \nNaN to integer>\n```\n\nWith a bit of searching one can get a better stacktrace using:\n\n```\n >>> pd.DataFrame([uf(np.nan, np.nan)]).to_string()\n ---------------------------------------------------------------------------\n ValueError                                Traceback (most recent call last)\n <ipython-input-13-a2e4d915ea24> in <module>()\n ----> 1 pd.DataFrame([uf(np.nan, np.nan)]).to_string()\n\n /usr/lib/python3/dist-packages/pandas/core/frame.py in to_string(self, buf, columns, col_space, colSpace, header, index, na_rep, formatters, float_format, sparsify, index_names, justify, line_width, max_rows, max_cols, show_dimensions)\n    1291                                            max_cols=max_cols,\n    1292                                            show_dimensions=show_dimensions)\n -> 1293         formatter.to_string()\n    1294 \n    1295         if buf is None:\n\n /usr/lib/python3/dist-packages/pandas/core/format.py in to_string(self)\n     439             text = info_line\n     440         else:\n --> 441             strcols = self._to_str_columns()\n     442             if self.line_width is None:\n     443                 text = adjoin(1, *strcols)\n\n /usr/lib/python3/dist-packages/pandas/core/format.py in _to_str_columns(self)\n     366                                    *(_strlen(x) for x in cheader))\n     367 \n --> 368                 fmt_values = self._format_col(i)\n     369 \n     370                 fmt_values = _make_fixed_width(fmt_values, self.justify,\n\n /usr/lib/python3/dist-packages/pandas/core/format.py in _format_col(self, i)\n     576             (frame.iloc[:, i]).get_values(),\n     577             formatter, float_format=self.float_format, na_rep=self.na_rep,\n --> 578             space=self.col_space\n     579         )\n     580 \n\n /usr/lib/python3/dist-packages/pandas/core/format.py in format_array(values, formatter, float_format, na_rep, digits, space, justify)\n    1763                         justify=justify)\n    1764 \n -> 1765     return fmt_obj.get_result()\n    1766 \n    1767 \n\n /usr/lib/python3/dist-packages/pandas/core/format.py in get_result(self)\n    1779 \n    1780     def get_result(self):\n -> 1781         fmt_values = self._format_strings()\n    1782         return _make_fixed_width(fmt_values, self.justify)\n    1783 \n\n /usr/lib/python3/dist-packages/pandas/core/format.py in _format_strings(self)\n    1817                 fmt_values.append(float_format(v))\n    1818             else:\n -> 1819                 fmt_values.append(' %s' % _format(v))\n    1820 \n    1821         return fmt_values\n\n /usr/lib/python3/dist-packages/pandas/core/format.py in _format(x)\n    1803             else:\n    1804                 # object dtype\n -> 1805                 return '%s' % formatter(x)\n    1806 \n    1807         vals = self.values\n\n /usr/lib/python3/dist-packages/pandas/core/format.py in <lambda>(x)\n    1792 \n    1793         formatter = self.formatter if self.formatter is not None else \\\n -> 1794             (lambda x: com.pprint_thing(x, escape_chars=('\\t', '\\r', '\\n')))\n    1795 \n    1796         def _format(x):\n\n /usr/lib/python3/dist-packages/pandas/core/common.py in pprint_thing(thing, _nest_lvl, escape_chars, default_escapes, quote_strings)\n    2863         result = fmt % as_escaped_unicode(thing)\n    2864     else:\n -> 2865         result = as_escaped_unicode(thing)\n    2866 \n    2867     return compat.text_type(result)  # always unicode\n\n /usr/lib/python3/dist-packages/pandas/core/common.py in as_escaped_unicode(thing, escape_chars)\n    2825 \n    2826         try:\n -> 2827             result = compat.text_type(thing)  # we should try this first\n    2828         except UnicodeDecodeError:\n    2829             # either utf-8 or we replace errors\n\n /usr/lib/python3/dist-packages/uncertainties/__init__.py in __str__(self)\n    1935         # string\n    1936         # (http://docs.python.org/2/library/string.html#format-specification-mini-language):\n -> 1937         return self.__format__('')  # Works with Python < 2.6, not format()\n    1938 \n    1939     def __format__(self, format_spec):\n\n /usr/lib/python3/dist-packages/uncertainties/__init__.py in __format__(self, format_spec)\n    2213                 # example for determining the exponent:\n    2214                 digits_limit = signif_d_to_limit(exp_ref_value,\n -> 2215                                                  num_signif_digits)\n    2216 \n    2217                 # print \"EXP_REF_VAL\", exp_ref_value\n\n /usr/lib/python3/dist-packages/uncertainties/__init__.py in signif_d_to_limit(value, num_signif_d)\n    1675     '''\n    1676 \n -> 1677     fst_digit = first_digit(value)\n    1678 \n    1679     limit_no_rounding = fst_digit-num_signif_d+1\n\n /usr/lib/python3/dist-packages/uncertainties/__init__.py in first_digit(value)\n    1115     # ValueError, so the value is directly tested:\n    1116     if value:\n -> 1117         return int(math.floor(math.log10(abs(value))))\n    1118     else:\n    1119         return 0\n\n ValueError: cannot convert float NaN to integer\n```\n\nwhich seems to boil down to some rounding not working as expected. As I said I'm not sure what's wrong here, as for example np.array([uncertainties.ufloat(np.nan, np.nan)]) displays just well, it could also be that pandas overzealously tries to round stuff?\n\nCheers,\n\nMika\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/30", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/30/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/30/events", "html_url": "https://github.com/lebigot/uncertainties/issues/30", "id": 35605493, "node_id": "MDU6SXNzdWUzNTYwNTQ5Mw==", "number": 30, "title": "Summing unusably slow", "user": {"login": "nmearl", "id": 4141126, "node_id": "MDQ6VXNlcjQxNDExMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4141126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmearl", "html_url": "https://github.com/nmearl", "followers_url": "https://api.github.com/users/nmearl/followers", "following_url": "https://api.github.com/users/nmearl/following{/other_user}", "gists_url": "https://api.github.com/users/nmearl/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmearl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmearl/subscriptions", "organizations_url": "https://api.github.com/users/nmearl/orgs", "repos_url": "https://api.github.com/users/nmearl/repos", "events_url": "https://api.github.com/users/nmearl/events{/privacy}", "received_events_url": "https://api.github.com/users/nmearl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 309011737, "node_id": "MDU6TGFiZWwzMDkwMTE3Mzc=", "url": "https://api.github.com/repos/lebigot/uncertainties/labels/Internals", "name": "Internals", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 27, "created_at": "2014-06-12T17:26:58Z", "updated_at": "2016-08-15T21:38:00Z", "closed_at": "2016-08-15T21:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just want to make sure this is a limitation of the package, and not my own fault. But it seems that summing large arrays is prohibitively slow. I have several arrays with about 20,000 points, each with errors, but it's impossible to find the mean because it takes too long to calculate. To be more specific, I'm getting the mean to normalize the array\n\n```\nalpha = 1.0 + (alpha - alpha.mean()) / (alpha.max() - alpha.min())\n```\n\nIs there any quicker way this can be done? Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/29", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/29/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/29/events", "html_url": "https://github.com/lebigot/uncertainties/issues/29", "id": 31088151, "node_id": "MDU6SXNzdWUzMTA4ODE1MQ==", "number": 29, "title": "Dealing with correlations", "user": {"login": "mverzett", "id": 2329596, "node_id": "MDQ6VXNlcjIzMjk1OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2329596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mverzett", "html_url": "https://github.com/mverzett", "followers_url": "https://api.github.com/users/mverzett/followers", "following_url": "https://api.github.com/users/mverzett/following{/other_user}", "gists_url": "https://api.github.com/users/mverzett/gists{/gist_id}", "starred_url": "https://api.github.com/users/mverzett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mverzett/subscriptions", "organizations_url": "https://api.github.com/users/mverzett/orgs", "repos_url": "https://api.github.com/users/mverzett/repos", "events_url": "https://api.github.com/users/mverzett/events{/privacy}", "received_events_url": "https://api.github.com/users/mverzett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-08T16:49:15Z", "updated_at": "2014-04-10T07:34:45Z", "closed_at": "2014-04-09T09:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear lebigot,\n\nI am facing the problem of properly correlating the error sources in different observables (variables). I know that the package is supposed to properly deal with it, **but that's only in case the error variable is actually the same**.\nI am in the unfortunate situation in which this is not the case and the same error source has different inpact on different observables. I was hoping that the tag attribute might do the trick but this example shows it's not the case:\n\n``` python\n>>> sys = ufloat(1, 0.02, 'sys')\n>>> x = 5*sys # a 2% effect on the x observable \n>>> x\n5.0+/-0.10000000000000001\n>>> y = 10*sys # same error variable, same 2%\n>>> y/x #this is handled properly\n2.0+/-0\n>>> x+y #this too\n15.0+/-0.29999999999999999\n>>> sys2 = ufloat(1, 0.04, 'sys') \n>>> z = 10*sys2 #but now the error source has a larger inpact on Z\n>>> y+z # and unfortunately this in not handled properly (should be 20+/-0.6)\n20.0+/-0.44721359549995798\n```\n\nSo, how do I fully correlate (positively **and** negatively) two variables? Of course the problem is a lot trickier than this mock-up exaple, and has some error sources that correlate between variables and others that don't.\n\nLet me know if I did not explain myself properly and of course if you have a solution :).\n\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/28", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/28/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/28/events", "html_url": "https://github.com/lebigot/uncertainties/issues/28", "id": 27977415, "node_id": "MDU6SXNzdWUyNzk3NzQxNQ==", "number": 28, "title": "intersphinx mapping to uncertainties doesn't work", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-02-20T16:59:34Z", "updated_at": "2015-04-04T03:19:34Z", "closed_at": "2015-04-04T03:19:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a Python package `gammapy` that is using the [intersphinx_mapping](http://sphinx-doc.org/ext/intersphinx.html) sphinx extension to create-cross links e.g. to the `numpy`, `scipy`, `astropy`, ... docs.\n\nFor some reason the links to `uncertainties` don't work, even though I've added `http://pythonhosted.org/uncertainties/` to the `intersphinx_mapping` dict and the file `http://pythonhosted.org/uncertainties/objects.inv` does exist and is successfullly downloaded by sphinx. I think the problem is that the file doesn't contain the usual information, because it is too small (532 bytes).\n\n@lebigot In case you have no idea what I'm talking about ... [here](https://gammapy.readthedocs.org/en/latest/api/gammapy.image.binary_opening_circle.html?highlight=scipy) is an example where linking against the `scipy` docs worked and [here](https://gammapy.readthedocs.org/en/latest/api/gammapy.morphology.gaussian_sum_moments.html) is an example where linking against the `uncertainties` docs doesn't work.\n\nAny idea how to fix this?\n\n(I'm trying to fix this on my end at https://github.com/gammapy/gammapy/pull/83 )\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/26", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/26/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/26/events", "html_url": "https://github.com/lebigot/uncertainties/issues/26", "id": 25588450, "node_id": "MDU6SXNzdWUyNTU4ODQ1MA==", "number": 26, "title": "Plotting data with error bars/band?", "user": {"login": "SjoerdOptLand", "id": 1442504, "node_id": "MDQ6VXNlcjE0NDI1MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1442504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SjoerdOptLand", "html_url": "https://github.com/SjoerdOptLand", "followers_url": "https://api.github.com/users/SjoerdOptLand/followers", "following_url": "https://api.github.com/users/SjoerdOptLand/following{/other_user}", "gists_url": "https://api.github.com/users/SjoerdOptLand/gists{/gist_id}", "starred_url": "https://api.github.com/users/SjoerdOptLand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SjoerdOptLand/subscriptions", "organizations_url": "https://api.github.com/users/SjoerdOptLand/orgs", "repos_url": "https://api.github.com/users/SjoerdOptLand/repos", "events_url": "https://api.github.com/users/SjoerdOptLand/events{/privacy}", "received_events_url": "https://api.github.com/users/SjoerdOptLand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-01-14T17:03:22Z", "updated_at": "2017-04-02T19:19:03Z", "closed_at": "2014-01-23T15:37:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure whether this belongs in `uncertainties` (in order to keep it light and with few external dependencies), but I wanted to visualise uncertain measurement data and had to come up with a snippet like this.\n\nIn my experience, having visualizing tools handy really helps in development and debugging, which might be an argument in favor of creating a `uplot` module (and only this module requiring matplotlib). Other error visualisation (tool tips showing the chain, tags, ...) may be less trivial and useful to share.\n\nWhat do others think?\n\n``` python\nfrom matplotlib import pyplot\nfrom uncertainties import unumpy\n\ndef plot(x,y,*args,**kwargs):\n    nominal_curve = pyplot.plot(x, unumpy.nominal_values(y), *args, **kwargs)\n    pyplot.fill_between(x, \n                        unumpy.nominal_values(y)-unumpy.std_devs(y), \n                        unumpy.nominal_values(y)+unumpy.std_devs(y),\n                        facecolor=nominal_curve[0].get_color(),\n                        edgecolor='face',\n                        alpha=0.1,\n                        linewidth=0)\n    return nominal_curve\n\nif __name__ == '__main__':\n    import numpy\n    from uncertainties import ufloat\n    x = numpy.linspace(0, 15, 120)\n\n    eps = ufloat(0,0.4)\n    y = unumpy.sin((x+eps)/6*numpy.pi)\n\n    plot(x,y,'r--',label='sine')\n    pyplot.legend()\n    pyplot.show()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/25", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/25/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/25/events", "html_url": "https://github.com/lebigot/uncertainties/issues/25", "id": 25581241, "node_id": "MDU6SXNzdWUyNTU4MTI0MQ==", "number": 25, "title": "Asymmetrical error distributions?", "user": {"login": "SjoerdOptLand", "id": 1442504, "node_id": "MDQ6VXNlcjE0NDI1MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1442504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SjoerdOptLand", "html_url": "https://github.com/SjoerdOptLand", "followers_url": "https://api.github.com/users/SjoerdOptLand/followers", "following_url": "https://api.github.com/users/SjoerdOptLand/following{/other_user}", "gists_url": "https://api.github.com/users/SjoerdOptLand/gists{/gist_id}", "starred_url": "https://api.github.com/users/SjoerdOptLand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SjoerdOptLand/subscriptions", "organizations_url": "https://api.github.com/users/SjoerdOptLand/orgs", "repos_url": "https://api.github.com/users/SjoerdOptLand/repos", "events_url": "https://api.github.com/users/SjoerdOptLand/events{/privacy}", "received_events_url": "https://api.github.com/users/SjoerdOptLand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-01-14T15:30:26Z", "updated_at": "2016-08-27T20:18:08Z", "closed_at": "2014-01-23T15:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "How hard would it be to add support for asymmetrical error distributions? E.g.: 3 (-1/+4)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/23", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/23/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/23/events", "html_url": "https://github.com/lebigot/uncertainties/issues/23", "id": 23661511, "node_id": "MDU6SXNzdWUyMzY2MTUxMQ==", "number": 23, "title": "Gracefully handle negative std_dev values", "user": {"login": "cmarqu", "id": 360986, "node_id": "MDQ6VXNlcjM2MDk4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/360986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmarqu", "html_url": "https://github.com/cmarqu", "followers_url": "https://api.github.com/users/cmarqu/followers", "following_url": "https://api.github.com/users/cmarqu/following{/other_user}", "gists_url": "https://api.github.com/users/cmarqu/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmarqu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmarqu/subscriptions", "organizations_url": "https://api.github.com/users/cmarqu/orgs", "repos_url": "https://api.github.com/users/cmarqu/repos", "events_url": "https://api.github.com/users/cmarqu/events{/privacy}", "received_events_url": "https://api.github.com/users/cmarqu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-03T18:06:26Z", "updated_at": "2013-12-07T10:44:21Z", "closed_at": "2013-12-03T20:51:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "With uncertainties 2.3.6 (the newest I have available easily), when I write\n\n```\nrngsh_unc   = uncertainties.ufloat(rngsh, -0.03)\n```\n\nI get \n\n```\nfixedpointcalc.py:79: UserWarning: Obsolete: either use ufloat(nominal_value, std_dev), ufloat(nominal_value, std_dev, tag), or the ufloat_fromstr() function, for string representations. Code can be automatically updated with python -m uncertainties.1to2 -w ProgramDirectory.\n[...]\n  File \"[...]/python/2.6/lib/uncertainties-2.3.6-py2.6.egg/uncertainties/__init__.py\", line 1949, in _str_to_number_with_uncert\n    (value, uncert) = representation.split('+/-')\nAttributeError: 'float' object has no attribute 'split'\n```\n\nYou may ask why anybody would use negative values for std_dev here. Well, it's because my original code was\n\n```\nrngsh_unc   = uncertainties.ufloat(rngsh,   3.0/100.0*rngsh)\n```\n\ni.e., I want to allow a 3% deviation, and rngsh can be a negative value.\nI can of course use abs(rngsh), but IMO it's not that nice.\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/22", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/22/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/22/events", "html_url": "https://github.com/lebigot/uncertainties/issues/22", "id": 22886203, "node_id": "MDU6SXNzdWUyMjg4NjIwMw==", "number": 22, "title": "NumPy 1.8 breaks mean() in arrays", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-19T03:38:54Z", "updated_at": "2013-11-19T17:18:55Z", "closed_at": "2013-11-19T14:30:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I upgraded NumPy to 1.8 recently and it broke my apps that use uncertainties. I haven't switch them to 2.0+ yet and understand that you may not be interested in making older versions compatible with newer version of NumPy, so you can close this if that is the case. But here is the bug nonetheless.\n\nHere is pre 1.8 behavior:\n\n```\nIn [1]: import numpy\n\nIn [2]: from uncertainties import unumpy\n\nIn [3]: a = unumpy.uarray(([1.0, 2.0], [0.1, 0.2]))\n\nIn [4]: a\nOut[4]: array([1.0+/-0.1, 2.0+/-0.2], dtype=object)\n\nIn [5]: a.mean()\nOut[5]: 1.5+/-0.1118033988749895\n\nIn [6]: numpy.mean(a)\nOut[6]: 1.5+/-0.1118033988749895\n\nIn [7]: numpy.__version__\nOut[7]: '1.7.1'\n\nIn [8]: import uncertainties\n\nIn [10]: uncertainties.__version__\nOut[10]: '1.9.1'\n```\n\nNow with NumPy 1.8. It seems the _mean function has changed and is looking for something that isn't there. I haven't investigated further.\n\n```\nPython 2.7.5+ (default, Sep 19 2013, 13:48:49) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 1.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import uncertainties\n\nIn [2]: import numpy\n\nIn [3]: uncertainties.__version__\nOut[3]: '1.9.1'\n\nIn [4]: numpy.__version__\nOut[4]: '1.8.0'\n\nIn [5]: from uncertainties import unumpy\n\nIn [6]: a = unumpy.uarray(([1.0, 2.0], [0.1, 0.2]))\n\nIn [7]: numpy.mean(a)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-7-a6fa0915df2b> in <module>()\n----> 1 numpy.mean(a)\n\n/home/moorepants/envs/uncertainties/lib/python2.7/site-packages/numpy/core/fromnumeric.pyc in mean(a, axis, dtype, out, keepdims)\n   2714 \n   2715     return _methods._mean(a, axis=axis, dtype=dtype,\n-> 2716                             out=out, keepdims=keepdims)\n   2717 \n   2718 def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False):\n\n/home/moorepants/envs/uncertainties/lib/python2.7/site-packages/numpy/core/_methods.pyc in _mean(a, axis, dtype, out, keepdims)\n     65                 ret, rcount, out=ret, casting='unsafe', subok=False)\n     66     else:\n---> 67         ret = ret.dtype.type(ret / rcount)\n     68 \n     69     return ret\n\nAttributeError: 'AffineScalarFunc' object has no attribute 'dtype'\n\nIn [8]: a.mean()\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-8-dc887f7a7bfb> in <module>()\n----> 1 a.mean()\n\n/home/moorepants/envs/uncertainties/lib/python2.7/site-packages/numpy/core/_methods.pyc in _mean(a, axis, dtype, out, keepdims)\n     65                 ret, rcount, out=ret, casting='unsafe', subok=False)\n     66     else:\n---> 67         ret = ret.dtype.type(ret / rcount)\n     68 \n     69     return ret\n\nAttributeError: 'AffineScalarFunc' object has no attribute 'dtype'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/21", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/21/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/21/events", "html_url": "https://github.com/lebigot/uncertainties/issues/21", "id": 21983615, "node_id": "MDU6SXNzdWUyMTk4MzYxNQ==", "number": 21, "title": "Tagging correlated variables", "user": {"login": "smithsp", "id": 782050, "node_id": "MDQ6VXNlcjc4MjA1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/782050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smithsp", "html_url": "https://github.com/smithsp", "followers_url": "https://api.github.com/users/smithsp/followers", "following_url": "https://api.github.com/users/smithsp/following{/other_user}", "gists_url": "https://api.github.com/users/smithsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/smithsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smithsp/subscriptions", "organizations_url": "https://api.github.com/users/smithsp/orgs", "repos_url": "https://api.github.com/users/smithsp/repos", "events_url": "https://api.github.com/users/smithsp/events{/privacy}", "received_events_url": "https://api.github.com/users/smithsp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-01T20:53:31Z", "updated_at": "2013-11-02T08:15:22Z", "closed_at": "2013-11-01T21:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Eric,\n\nYour `uncertainties` package is awesome.  One use case I have encountered is to use the `correlated_values` function to create new variables with uncertainty based on the covariance from a separate procedure.  However, the variables that are returned do not have a `tag` attribute, and I cannot set the `tag` attribute.  \n\n(From my limited knowledge of python internals, it seems that this is because the `AffineScalarFunc` variables that are returned use the `__slots__` to limit the attributes that can be used.)\n\nSo my request is to have the `__slots__` include a tag as well.\n\n-Sterling\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/17", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/17/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/17/events", "html_url": "https://github.com/lebigot/uncertainties/issues/17", "id": 14440896, "node_id": "MDU6SXNzdWUxNDQ0MDg5Ng==", "number": 17, "title": "Please consider using tags to mark released versions to pypi", "user": {"login": "mindw", "id": 578872, "node_id": "MDQ6VXNlcjU3ODg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/578872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindw", "html_url": "https://github.com/mindw", "followers_url": "https://api.github.com/users/mindw/followers", "following_url": "https://api.github.com/users/mindw/following{/other_user}", "gists_url": "https://api.github.com/users/mindw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindw/subscriptions", "organizations_url": "https://api.github.com/users/mindw/orgs", "repos_url": "https://api.github.com/users/mindw/repos", "events_url": "https://api.github.com/users/mindw/events{/privacy}", "received_events_url": "https://api.github.com/users/mindw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-17T07:31:55Z", "updated_at": "2013-05-17T07:44:23Z", "closed_at": "2013-05-17T07:44:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It will make it easier to package and follow uncertainties.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/16", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/16/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/16/events", "html_url": "https://github.com/lebigot/uncertainties/issues/16", "id": 13076773, "node_id": "MDU6SXNzdWUxMzA3Njc3Mw==", "number": 16, "title": "Dealing with two errors", "user": {"login": "mverzett", "id": 2329596, "node_id": "MDQ6VXNlcjIzMjk1OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2329596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mverzett", "html_url": "https://github.com/mverzett", "followers_url": "https://api.github.com/users/mverzett/followers", "following_url": "https://api.github.com/users/mverzett/following{/other_user}", "gists_url": "https://api.github.com/users/mverzett/gists{/gist_id}", "starred_url": "https://api.github.com/users/mverzett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mverzett/subscriptions", "organizations_url": "https://api.github.com/users/mverzett/orgs", "repos_url": "https://api.github.com/users/mverzett/repos", "events_url": "https://api.github.com/users/mverzett/events{/privacy}", "received_events_url": "https://api.github.com/users/mverzett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-04-11T16:38:47Z", "updated_at": "2013-04-13T08:00:07Z", "closed_at": "2013-04-12T03:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear lebigot, \n\nfirst of all let me thank you for such an awesome package.\nI have a question: I am dealing with numbers that have TWO errors, one is statistical, the other is the so called \"systematic\" and is considered good practice to deal with them separately. \nSomething like:\n1.0 +/- 0.1 +/- 0.05\nThe two errors are considered to be totally uncorrelated.\n\nDo you have any suggestion on how to treat this problem with your package?\nI tried looking up in the documentation but I could not find anything useful\n\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/15", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/15/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/15/events", "html_url": "https://github.com/lebigot/uncertainties/issues/15", "id": 11527131, "node_id": "MDU6SXNzdWUxMTUyNzEzMQ==", "number": 15, "title": "Inconsistent ways of accessing .nominal_value and .std_dev() ", "user": {"login": "jbwhit", "id": 105829, "node_id": "MDQ6VXNlcjEwNTgyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/105829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbwhit", "html_url": "https://github.com/jbwhit", "followers_url": "https://api.github.com/users/jbwhit/followers", "following_url": "https://api.github.com/users/jbwhit/following{/other_user}", "gists_url": "https://api.github.com/users/jbwhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbwhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbwhit/subscriptions", "organizations_url": "https://api.github.com/users/jbwhit/orgs", "repos_url": "https://api.github.com/users/jbwhit/repos", "events_url": "https://api.github.com/users/jbwhit/events{/privacy}", "received_events_url": "https://api.github.com/users/jbwhit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-01T00:49:52Z", "updated_at": "2013-03-01T01:11:16Z", "closed_at": "2013-03-01T01:11:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would have expected that the ufloat nominal_value and std_dev would be called in the same way, but they aren't.\n\nA short example of what I mean: \n\n```\nimport uncertainties\ntest1 = uncertainties.ufloat((3, 1))\nprint test1\n3.0+/-1.0\n\n# I would have expected the following to yield the same behavior:\nprint test1.nominal_value\n3.0\nprint test1.std_dev\n<bound method Variable.std_dev of 3.0+/-1.0>\n\n# And, I would have expected the following to yield the same behavior:    \nprint test1.std_dev()\n1.0\nprint test1.nominal_value()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-9-719980b52ebb> in <module>()\n      3 print test1.std_dev\n      4 print test1.std_dev()\n----> 5 print test1.nominal_value()\n\nTypeError: 'float' object is not callable\n```\n\nPerhaps there is a specific reason for this implementation, but I wanted to bring it to your attention. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/11", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/11/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/11/events", "html_url": "https://github.com/lebigot/uncertainties/issues/11", "id": 8720899, "node_id": "MDU6SXNzdWU4NzIwODk5", "number": 11, "title": "Make uncertainties tests on travis-ci work for all branches and Python versions", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-11-27T14:00:09Z", "updated_at": "2014-01-23T15:37:24Z", "closed_at": "2014-01-23T15:37:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I will try to make the uncertainties tests work on travis-ci for all branches as Python versions.\n\nAt the moment there are issues with numpy on travis-ci though, and things will become simpler soon because they are adding pre-installed versions, so let's simply wait a bit until those things are sorted out:\n- https://github.com/travis-ci/travis-cookbooks/issues/89\n- https://github.com/pypa/virtualenv/issues/359\n- https://github.com/numpy/numpy/issues/2761#issuecomment-10672029\n- https://github.com/travis-ci/travis-cookbooks/issues/48\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/6", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/6/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/6/events", "html_url": "https://github.com/lebigot/uncertainties/issues/6", "id": 1175888, "node_id": "MDU6SXNzdWUxMTc1ODg4", "number": 6, "title": "wrapped function returns NotImplemented", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-07-06T18:50:02Z", "updated_at": "2011-07-14T15:46:15Z", "closed_at": "2011-07-14T14:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nimport numpy as np\nimport uncertainties as un\nfrom uncertainties import unumpy\n\nprint \"Numpy version:\", np.__version__\nprint \"Uncertainties version:\", un.__version__\n\ndef rotate_inertia_tensor(I, angle):\n    '''Returns inertia tensor rotated through angle about the Y axis.\n\n    Parameters\n    ----------\n    I : ndarray, shape(3,)\n        An inertia tensor.\n    angle : float\n        Angle in radians about the positive Y axis of which to rotate the\n        inertia tensor.\n\n    '''\n    ca = np.cos(angle)\n    sa = np.sin(angle)\n    C = np.matrix([[ca, 0., -sa],\n                   [0., 1., 0.],\n                   [sa, 0., ca]])\n    return C * I * C.T\n\nw_rot = un.wrap(rotate_inertia_tensor)\n\nvals = np.ones((3,3))\nstds = 0.1 * np.ones((3,3))\nI = unumpy.uarray((vals, stds))\nangle = un.ufloat((5.,.1))\n\nprint w_rot(I, 5.)\n\nprint w_rot(I, angle)\n\n```\n\nThis is what is returned for me:\n\n```\nNumpy version: 1.5.1\nUncertainties version: 1.7.3\n[[1.54402111089+/-0.1 1.24258646013+/-0.1 -0.839071529076+/-0.1]\n [1.24258646013+/-0.1 1.0+/-0.1 -0.6752620892+/-0.1]\n [-0.839071529076+/-0.1 -0.6752620892+/-0.1 0.455978889111+/-0.1]]\nNotImplemented\n```\n\nI'm not sure what is causing the NotImplemented to be returned. I have a bunch of functions that are written for numpy arrays and would love to use them with uarrays without having to rewrite them with umath calls and stuff.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/5", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/5/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/5/events", "html_url": "https://github.com/lebigot/uncertainties/issues/5", "id": 1071116, "node_id": "MDU6SXNzdWUxMDcxMTE2", "number": 5, "title": "missing multiplication operator between float and unumpy.matrix in one direction", "user": {"login": "seibert", "id": 425352, "node_id": "MDQ6VXNlcjQyNTM1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/425352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seibert", "html_url": "https://github.com/seibert", "followers_url": "https://api.github.com/users/seibert/followers", "following_url": "https://api.github.com/users/seibert/following{/other_user}", "gists_url": "https://api.github.com/users/seibert/gists{/gist_id}", "starred_url": "https://api.github.com/users/seibert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seibert/subscriptions", "organizations_url": "https://api.github.com/users/seibert/orgs", "repos_url": "https://api.github.com/users/seibert/repos", "events_url": "https://api.github.com/users/seibert/events{/privacy}", "received_events_url": "https://api.github.com/users/seibert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lebigot", "id": 5793, "node_id": "MDQ6VXNlcjU3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebigot", "html_url": "https://github.com/lebigot", "followers_url": "https://api.github.com/users/lebigot/followers", "following_url": "https://api.github.com/users/lebigot/following{/other_user}", "gists_url": "https://api.github.com/users/lebigot/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebigot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebigot/subscriptions", "organizations_url": "https://api.github.com/users/lebigot/orgs", "repos_url": "https://api.github.com/users/lebigot/repos", "events_url": "https://api.github.com/users/lebigot/events{/privacy}", "received_events_url": "https://api.github.com/users/lebigot/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2011-06-17T02:14:33Z", "updated_at": "2011-06-18T22:27:18Z", "closed_at": "2011-06-18T22:27:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "One direction of the multiplication operator between a float and a unumpy matrix seems to be missing:\n\n```\n>>> from uncertainties import unumpy, ufloat\n>>> m = unumpy.matrix([[ufloat((1.0, 0.2))]])\n>>> m * 0.5\nmatrix([[0.5+/-0.1]], dtype=object)\n>>> 0.5 * m\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unsupported operand type(s) for *: 'float' and 'matrix'\n```\n\nHowever, this works just fine for a normal numpy matrix:\n\n```\n>>> import numpy\n>>> m = numpy.matrix([[1.0]])\n>>> m * 0.5\nmatrix([[ 0.5]])\n>>> 0.5 * m\nmatrix([[ 0.5]])\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lebigot/uncertainties/issues/4", "repository_url": "https://api.github.com/repos/lebigot/uncertainties", "labels_url": "https://api.github.com/repos/lebigot/uncertainties/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/lebigot/uncertainties/issues/4/comments", "events_url": "https://api.github.com/repos/lebigot/uncertainties/issues/4/events", "html_url": "https://github.com/lebigot/uncertainties/issues/4", "id": 846800, "node_id": "MDU6SXNzdWU4NDY4MDA=", "number": 4, "title": "additional uarray functionality", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2011-05-04T03:20:09Z", "updated_at": "2011-05-04T20:46:20Z", "closed_at": "2011-05-04T20:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I often have several ufloat variables that I'd like to insert into a numpy array and then manipulate them with the unumpy functionality. For example\n\n``` python\nfrom numpy import array\nfrom uncertainties import ufloat\na = ufloat((1., .1))\nb = ufloat((2., .1))\nc = array([a, b], dtype=object)\n```\n\nIt would be nice not to have to type \", dtype=object\" everytime. The equivalent functionality with floats and numpy arrays is that you don't have to declare the dtype for floats. Alternatively, making the array c with unumpy.uarray is clumsy because you have to declare the nominal values and uncertainties separetly. It would be nice to be able to type this:\n\n``` python\nfrom uncertainties import unumpy\nfrom uncertainties import ufloat\na = ufloat((1., .1))\nb = ufloat((2., .1))\nc = unumpy.uarray([a, b])\n```\n", "performed_via_github_app": null, "score": 1.0}]}