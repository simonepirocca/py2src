{"total_count": 35, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/google/apitools/issues/290", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/290/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/290/events", "html_url": "https://github.com/google/apitools/issues/290", "id": 578290743, "node_id": "MDU6SXNzdWU1NzgyOTA3NDM=", "number": 290, "title": "crash from monotonic depending upon ctypes", "user": {"login": "dgaedcke", "id": 1172930, "node_id": "MDQ6VXNlcjExNzI5MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1172930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgaedcke", "html_url": "https://github.com/dgaedcke", "followers_url": "https://api.github.com/users/dgaedcke/followers", "following_url": "https://api.github.com/users/dgaedcke/following{/other_user}", "gists_url": "https://api.github.com/users/dgaedcke/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgaedcke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgaedcke/subscriptions", "organizations_url": "https://api.github.com/users/dgaedcke/orgs", "repos_url": "https://api.github.com/users/dgaedcke/repos", "events_url": "https://api.github.com/users/dgaedcke/events{/privacy}", "received_events_url": "https://api.github.com/users/dgaedcke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-10T02:10:05Z", "updated_at": "2020-04-06T19:39:10Z", "closed_at": "2020-04-06T19:39:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm stuck in Python 2.7 because the endpoints library has not yet been upgraded or rewritten for Python 3 and all of our API's (are currently &) must be swagger documented.\r\n\r\nI'm getting this crash from monotonic depending upon ctypes.\r\n\r\n```\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/endpoints_management/config/service_config.py\", line 25, in <module>\r\n    from apitools.base.py import encoding\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/apitools/base/py/__init__.py\", line 23, in <module>\r\n    from apitools.base.py.credentials_lib import *\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/apitools/base/py/credentials_lib.py\", line 44, in <module>\r\n    import fasteners\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/fasteners/__init__.py\", line 23, in <module>\r\n    from fasteners.lock import locked  # noqa\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/fasteners/lock.py\", line 24, in <module>\r\n    from fasteners import _utils\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/fasteners/_utils.py\", line 39, in <module>\r\n    from monotonic import monotonic as now  # noqa\r\n  File \"/Users/dgaedcke/dev/gaeStdEndptTestcase/lib/monotonic.py\", line 50, in <module>\r\n    import ctypes\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ctypes/__init__.py\", line 29, in <module>\r\n    if int(_os.uname()[2].split('.')[0]) < 8:\r\nValueError: invalid literal for int() with base 10: ''\r\n```\r\n\r\nIs this something you guys can fix or if not, is there someone who can coach me on how to approach the problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/285", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/285/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/285/events", "html_url": "https://github.com/google/apitools/issues/285", "id": 555134221, "node_id": "MDU6SXNzdWU1NTUxMzQyMjE=", "number": 285, "title": "Importing ABC from collections module directly was removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-25T20:27:30Z", "updated_at": "2020-01-27T14:51:16Z", "closed_at": "2020-01-27T14:51:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using collections.abc and falling back to collections would be a good fix for this.\r\n\r\n```\r\napitools/base/py/util.py\r\n81:    elif isinstance(scope_spec, collections.Iterable):\r\n\r\napitools/base/py/extra_types.py\r\n132:    if isinstance(py_value, collections.Iterable):\r\n215:    if (isinstance(py_value, collections.Iterable) and\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/274", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/274/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/274/events", "html_url": "https://github.com/google/apitools/issues/274", "id": 460950588, "node_id": "MDU6SXNzdWU0NjA5NTA1ODg=", "number": 274, "title": "Cloud Endpoints, python, UnboundLocalError: local variable 'scope_spec' referenced before assignment", "user": {"login": "myloginistaken", "id": 6669636, "node_id": "MDQ6VXNlcjY2Njk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6669636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myloginistaken", "html_url": "https://github.com/myloginistaken", "followers_url": "https://api.github.com/users/myloginistaken/followers", "following_url": "https://api.github.com/users/myloginistaken/following{/other_user}", "gists_url": "https://api.github.com/users/myloginistaken/gists{/gist_id}", "starred_url": "https://api.github.com/users/myloginistaken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myloginistaken/subscriptions", "organizations_url": "https://api.github.com/users/myloginistaken/orgs", "repos_url": "https://api.github.com/users/myloginistaken/repos", "events_url": "https://api.github.com/users/myloginistaken/events{/privacy}", "received_events_url": "https://api.github.com/users/myloginistaken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-26T12:47:43Z", "updated_at": "2019-06-26T23:04:23Z", "closed_at": "2019-06-26T23:04:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using App Engine with Cloud Endpoints Framework for Python. In **apitools.base.py.credentials_lib.py** at l**ine 140** the variable **scope_spec** is referenced before assignment.\r\nFull stacktrace:\r\n```(/base/alloc/tmpfs/dynamic_runtimes/python27g/6a5167f0cae8960d/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py:269)\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/6a5167f0cae8960d/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 240, in Handle\r\n    handler = _config_handle.add_wsgi_middleware(self._LoadHandler())\r\n\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/6a5167f0cae8960d/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 311, in _LoadHandler\r\n    handler, path, err = LoadObject(self._handler)\r\n\r\n  File \"/base/alloc/tmpfs/dynamic_runtimes/python27g/6a5167f0cae8960d/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 85, in LoadObject\r\n    obj = __import__(path[0])\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/main.py\", line 167, in <module>\r\n    api = endpoints.api_server([AIMyDataAPI])\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints/apiserving.py\", line 601, in api_server\r\n    controller.start()\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints_management/control/client.py\", line 253, in start\r\n    self._initialize_flushing()\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints_management/control/client.py\", line 372, in _initialize_flushing\r\n    self._flush_schedule_report_aggregator()\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints_management/control/client.py\", line 465, in _flush_schedule_report_aggregator\r\n    transport = self._create_transport()\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints_management/control/client.py\", line 151, in create_transport\r\n    local.transport = _create_http_transport()\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints_management/control/client.py\", line 143, in _create_http_transport\r\n    log_response=do_logging)\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/endpoints_management/gen/servicecontrol_v1_client.py\", line 50, in __init__\r\n    additional_http_headers=additional_http_headers)\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/apitools/base/py/base_api.py\", line 261, in __init__\r\n    self._SetCredentials(**credentials_args)\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/apitools/base/py/base_api.py\", line 309, in _SetCredentials\r\n    self._credentials = credentials_lib.GetCredentials(**args)\r\n\r\n  File \"/base/data/home/apps/e~aimydata/20190626t111403.419174768539258548/lib/apitools/base/py/credentials_lib.py\", line 140, in GetCredentials\r\n    if isinstance(scope_spec, six.string_types):\r\n\r\nUnboundLocalError: local variable 'scope_spec' referenced before assignment```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/257", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/257/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/257/events", "html_url": "https://github.com/google/apitools/issues/257", "id": 412090144, "node_id": "MDU6SXNzdWU0MTIwOTAxNDQ=", "number": 257, "title": "Upload.RefreshResumableUploadState seeks to beginning of stream on OK, CREATED", "user": {"login": "udim", "id": 127695, "node_id": "MDQ6VXNlcjEyNzY5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/127695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udim", "html_url": "https://github.com/udim", "followers_url": "https://api.github.com/users/udim/followers", "following_url": "https://api.github.com/users/udim/following{/other_user}", "gists_url": "https://api.github.com/users/udim/gists{/gist_id}", "starred_url": "https://api.github.com/users/udim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udim/subscriptions", "organizations_url": "https://api.github.com/users/udim/orgs", "repos_url": "https://api.github.com/users/udim/repos", "events_url": "https://api.github.com/users/udim/events{/privacy}", "received_events_url": "https://api.github.com/users/udim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-19T19:37:00Z", "updated_at": "2019-09-13T17:51:57Z", "closed_at": "2019-09-13T15:09:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the upload has total_size=None, it will seek(0), which breaks our stream implementation (which can only seek to its current position).\r\nSeems like it should be seeking to `self.__GetLastByte(range_header) + 1` in this case.\r\n\r\nThis is the branch in question: https://github.com/google/apitools/blob/8e836fe2942e74d4f6ae5d4b3ccbaf161b9c052b/apitools/base/py/transfer.py#L836-L844\r\n\r\nStacktrace:\r\n```\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/sdks/python/apache_beam/io/gcp/gcsio.py\", line 583, in _start_upload\r\n16:01:43     self._client.objects.Insert(self._insert_request, upload=self._upload)\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/sdks/python/apache_beam/io/gcp/internal/clients/storage/storage_v1_client.py\", line 1154, in Insert\r\n16:01:43     upload=upload, upload_config=upload_config)\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/build/gradleenv/1327086738/local/lib/python2.7/site-packages/apitools/base/py/base_api.py\", line 715, in _RunMethod\r\n16:01:43     http_request, client=self.client)\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/build/gradleenv/1327086738/local/lib/python2.7/site-packages/apitools/base/py/transfer.py\", line 885, in InitializeUpload\r\n16:01:43     return self.StreamInChunks()\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/build/gradleenv/1327086738/local/lib/python2.7/site-packages/apitools/base/py/transfer.py\", line 997, in StreamInChunks\r\n16:01:43     additional_headers=additional_headers)\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/build/gradleenv/1327086738/local/lib/python2.7/site-packages/apitools/base/py/transfer.py\", line 948, in __StreamMedia\r\n16:01:43     self.RefreshResumableUploadState()\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/build/gradleenv/1327086738/local/lib/python2.7/site-packages/apitools/base/py/transfer.py\", line 850, in RefreshResumableUploadState\r\n16:01:43     self.stream.seek(self.progress)\r\n16:01:43   File \"/home/jenkins/jenkins-slave/workspace/beam_PostCommit_Python_Verify/src/sdks/python/apache_beam/io/filesystemio.py\", line 269, in seek\r\n16:01:43     offset, whence, self.position, self.last_position))\r\n16:01:43 NotImplementedError: offset: 0, whence: 0, position: 48944, last: 0\r\n```\r\n(https://builds.apache.org/view/A-D/view/Beam/view/All/job/beam_PostCommit_Python_Verify/7444/consoleFull)\r\n\r\nApache Beam issue: https://issues.apache.org/jira/browse/BEAM-6380\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/249", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/249/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/249/events", "html_url": "https://github.com/google/apitools/issues/249", "id": 387421755, "node_id": "MDU6SXNzdWUzODc0MjE3NTU=", "number": 249, "title": "Python 3 incompatible in batch request", "user": {"login": "markflyhigh", "id": 4008895, "node_id": "MDQ6VXNlcjQwMDg4OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4008895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markflyhigh", "html_url": "https://github.com/markflyhigh", "followers_url": "https://api.github.com/users/markflyhigh/followers", "following_url": "https://api.github.com/users/markflyhigh/following{/other_user}", "gists_url": "https://api.github.com/users/markflyhigh/gists{/gist_id}", "starred_url": "https://api.github.com/users/markflyhigh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markflyhigh/subscriptions", "organizations_url": "https://api.github.com/users/markflyhigh/orgs", "repos_url": "https://api.github.com/users/markflyhigh/repos", "events_url": "https://api.github.com/users/markflyhigh/events{/privacy}", "received_events_url": "https://api.github.com/users/markflyhigh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-04T18:29:29Z", "updated_at": "2019-09-13T14:09:48Z", "closed_at": "2019-09-13T14:09:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Batch request failed in Python 3 using apitools library due to response content encoding error. Found this problem in Beam Python pipeline whose gcsio is built based on apitools. The version I use is python 3.5.\r\n\r\nStacktrace:\r\nFile \"/usr/local/lib/python3.5/site-packages/apache_beam/io/iobase.py\", line 1077, in <genexpr>\r\n    window.TimestampedValue(v, timestamp.MAX_TIMESTAMP) for v in outputs)\r\n  File \"/usr/local/lib/python3.5/site-packages/apache_beam/io/filebasedsink.py\", line 315, in finalize_write\r\n    num_threads)\r\n  File \"/usr/local/lib/python3.5/site-packages/apache_beam/internal/util.py\", line 145, in run_using_threadpool\r\n    return pool.map(fn_to_execute, inputs)\r\n  File \"/usr/local/lib/python3.5/multiprocessing/pool.py\", line 266, in map\r\n    return self._map_async(func, iterable, mapstar, chunksize).get()\r\n  File \"/usr/local/lib/python3.5/multiprocessing/pool.py\", line 644, in get\r\n    raise self._value\r\n  File \"/usr/local/lib/python3.5/multiprocessing/pool.py\", line 119, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/usr/local/lib/python3.5/multiprocessing/pool.py\", line 44, in mapstar\r\n    return list(map(*args))\r\n  File \"/usr/local/lib/python3.5/site-packages/apache_beam/io/filebasedsink.py\", line 299, in _rename_batch\r\n    FileSystems.rename(source_files, destination_files)\r\n  File \"/usr/local/lib/python3.5/site-packages/apache_beam/io/filesystems.py\", line 252, in rename\r\n    return filesystem.rename(source_file_names, destination_file_names)\r\n  File \"/usr/local/lib/python3.5/site-packages/apache_beam/io/gcp/gcsfilesystem.py\", line 229, in rename\r\n    copy_statuses = gcsio.GcsIO().copy_batch(batch)\r\n  File \"/usr/local/lib/python3.5/site-packages/apache_beam/io/gcp/gcsio.py\", line 322, in copy_batch\r\n    api_calls = batch_request.Execute(self.client._http)  # pylint: disable=protected-access\r\n  File \"/usr/local/lib/python3.5/site-packages/apitools/base/py/batch.py\", line 222, in Execute\r\n    batch_http_request.Execute(http)\r\n  File \"/usr/local/lib/python3.5/site-packages/apitools/base/py/batch.py\", line 480, in Execute\r\n    self._Execute(http)\r\n  File \"/usr/local/lib/python3.5/site-packages/apitools/base/py/batch.py\", line 450, in _Execute\r\n    mime_response = parser.parsestr(header + response.content)\r\nTypeError: Can't convert 'bytes' object to str implicitly\r\n\r\nresponse.content is bytes and should be decoded after http response is returned: https://github.com/google/apitools/blob/master/apitools/base/py/http_wrapper.py#L393. Official explanation of this scenario is here: https://github.com/httplib2/httplib2/wiki/Examples-Python3#simple-retrieval.\r\n\r\nSame issue is tracking in Beam in https://issues.apache.org/jira/browse/BEAM-6154. Reproduce steps can be found there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/246", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/246/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/246/events", "html_url": "https://github.com/google/apitools/issues/246", "id": 367376461, "node_id": "MDU6SXNzdWUzNjczNzY0NjE=", "number": 246, "title": "TravisCI tests began failing at some commit after v0.5.24", "user": {"login": "houglum", "id": 14894525, "node_id": "MDQ6VXNlcjE0ODk0NTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/14894525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houglum", "html_url": "https://github.com/houglum", "followers_url": "https://api.github.com/users/houglum/followers", "following_url": "https://api.github.com/users/houglum/following{/other_user}", "gists_url": "https://api.github.com/users/houglum/gists{/gist_id}", "starred_url": "https://api.github.com/users/houglum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houglum/subscriptions", "organizations_url": "https://api.github.com/users/houglum/orgs", "repos_url": "https://api.github.com/users/houglum/repos", "events_url": "https://api.github.com/users/houglum/events{/privacy}", "received_events_url": "https://api.github.com/users/houglum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "markpell", "id": 7944070, "node_id": "MDQ6VXNlcjc5NDQwNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7944070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpell", "html_url": "https://github.com/markpell", "followers_url": "https://api.github.com/users/markpell/followers", "following_url": "https://api.github.com/users/markpell/following{/other_user}", "gists_url": "https://api.github.com/users/markpell/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpell/subscriptions", "organizations_url": "https://api.github.com/users/markpell/orgs", "repos_url": "https://api.github.com/users/markpell/repos", "events_url": "https://api.github.com/users/markpell/events{/privacy}", "received_events_url": "https://api.github.com/users/markpell/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "markpell", "id": 7944070, "node_id": "MDQ6VXNlcjc5NDQwNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7944070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpell", "html_url": "https://github.com/markpell", "followers_url": "https://api.github.com/users/markpell/followers", "following_url": "https://api.github.com/users/markpell/following{/other_user}", "gists_url": "https://api.github.com/users/markpell/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpell/subscriptions", "organizations_url": "https://api.github.com/users/markpell/orgs", "repos_url": "https://api.github.com/users/markpell/repos", "events_url": "https://api.github.com/users/markpell/events{/privacy}", "received_events_url": "https://api.github.com/users/markpell/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-05T21:36:24Z", "updated_at": "2018-10-12T22:15:58Z", "closed_at": "2018-10-12T22:15:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "TravisCI tests began failing at some commit after v0.5.24 was released.  Here is a link to an example set of CI tests; looks like it fails under the lint and Py3.4+ configurations:\r\nhttps://travis-ci.org/google/apitools/builds/437401234?utm_source=github_status&utm_medium=notification\r\n\r\nFrom the commit history, it seems that https://github.com/google/apitools/commit/8c502250841d5d4cccb24a18403bdcb980b1b383 was the culprit -- I believe the commit was pushed directly to this repo, rather than going through the pull request flow, which would have run the CI tests and caught this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/242", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/242/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/242/events", "html_url": "https://github.com/google/apitools/issues/242", "id": 357904478, "node_id": "MDU6SXNzdWUzNTc5MDQ0Nzg=", "number": 242, "title": "Update auth URIs that have new oauth2.googleapis.com equivalents", "user": {"login": "houglum", "id": 14894525, "node_id": "MDQ6VXNlcjE0ODk0NTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/14894525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houglum", "html_url": "https://github.com/houglum", "followers_url": "https://api.github.com/users/houglum/followers", "following_url": "https://api.github.com/users/houglum/following{/other_user}", "gists_url": "https://api.github.com/users/houglum/gists{/gist_id}", "starred_url": "https://api.github.com/users/houglum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houglum/subscriptions", "organizations_url": "https://api.github.com/users/houglum/orgs", "repos_url": "https://api.github.com/users/houglum/repos", "events_url": "https://api.github.com/users/houglum/events{/privacy}", "received_events_url": "https://api.github.com/users/houglum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-07T03:17:11Z", "updated_at": "2018-09-07T15:14:08Z", "closed_at": "2018-09-07T15:14:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As part of https://issuetracker.google.com/issues/79946689, we're updating gsutil and the libraries it relies on to use the newer oauth2.googleapis.com-based URIs, away from the current accounts.google.com and googleapis.com/oauth2 equivalents.\r\n\r\nBrowser-interactive endpoints (like the auth endpoint, https://accounts.google.com/o/oauth2/auth) can remain unchanged.  Additionally, some URIs don't have a oauth2.googleapis.com equivalent (notably, `https://www.googleapis.com/oauth2/v<NUMBER>/certs` and `https://www.googleapis.com/oauth2/v<NUMBER>/userinfo`, where `<NUMBER>` is... a number).\r\n\r\nOccurrences can be found by greping for \"accounts.google.com\" or \"googleapis.com/oauth2\" within the source files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/235", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/235/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/235/events", "html_url": "https://github.com/google/apitools/issues/235", "id": 332859407, "node_id": "MDU6SXNzdWUzMzI4NTk0MDc=", "number": 235, "title": "Python 3.3 Travis tests always fail", "user": {"login": "HarrisonGregg", "id": 3527935, "node_id": "MDQ6VXNlcjM1Mjc5MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3527935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarrisonGregg", "html_url": "https://github.com/HarrisonGregg", "followers_url": "https://api.github.com/users/HarrisonGregg/followers", "following_url": "https://api.github.com/users/HarrisonGregg/following{/other_user}", "gists_url": "https://api.github.com/users/HarrisonGregg/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarrisonGregg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarrisonGregg/subscriptions", "organizations_url": "https://api.github.com/users/HarrisonGregg/orgs", "repos_url": "https://api.github.com/users/HarrisonGregg/repos", "events_url": "https://api.github.com/users/HarrisonGregg/events{/privacy}", "received_events_url": "https://api.github.com/users/HarrisonGregg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-15T17:37:35Z", "updated_at": "2018-10-05T21:30:49Z", "closed_at": "2018-10-05T21:30:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://travis-ci.org/google/apitools/jobs/392809585\r\n\r\nLooks like wheel stopped supporting Python 3.3:\r\n```\r\nwheel requires Python '>=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*' but the running Python is 3.3.6\r\n```\r\nI'm not sure if there's a workaround, or if apitools should just stop supporting Python 3.3 as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/217", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/217/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/217/events", "html_url": "https://github.com/google/apitools/issues/217", "id": 315099053, "node_id": "MDU6SXNzdWUzMTUwOTkwNTM=", "number": 217, "title": "New pycodestyle version (2.4.0) causing CI runs to fail due to lint errors.", "user": {"login": "kevinli7", "id": 9062666, "node_id": "MDQ6VXNlcjkwNjI2NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9062666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinli7", "html_url": "https://github.com/kevinli7", "followers_url": "https://api.github.com/users/kevinli7/followers", "following_url": "https://api.github.com/users/kevinli7/following{/other_user}", "gists_url": "https://api.github.com/users/kevinli7/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinli7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinli7/subscriptions", "organizations_url": "https://api.github.com/users/kevinli7/orgs", "repos_url": "https://api.github.com/users/kevinli7/repos", "events_url": "https://api.github.com/users/kevinli7/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinli7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T14:55:50Z", "updated_at": "2018-04-17T15:44:06Z", "closed_at": "2018-04-17T15:44:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should probably be pinning the linter to a specific version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/200", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/200/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/200/events", "html_url": "https://github.com/google/apitools/issues/200", "id": 286134978, "node_id": "MDU6SXNzdWUyODYxMzQ5Nzg=", "number": 200, "title": "Travis builds failing due to lint errors caused by pylint.", "user": {"login": "kevinli7", "id": 9062666, "node_id": "MDQ6VXNlcjkwNjI2NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9062666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinli7", "html_url": "https://github.com/kevinli7", "followers_url": "https://api.github.com/users/kevinli7/followers", "following_url": "https://api.github.com/users/kevinli7/following{/other_user}", "gists_url": "https://api.github.com/users/kevinli7/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinli7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinli7/subscriptions", "organizations_url": "https://api.github.com/users/kevinli7/orgs", "repos_url": "https://api.github.com/users/kevinli7/repos", "events_url": "https://api.github.com/users/kevinli7/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinli7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-04T22:37:09Z", "updated_at": "2018-03-29T14:56:08Z", "closed_at": "2018-03-29T14:56:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With new version 1.8.0, pylint introduced checks for new errors. This is causing CI lint builds to fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/192", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/192/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/192/events", "html_url": "https://github.com/google/apitools/issues/192", "id": 280611669, "node_id": "MDU6SXNzdWUyODA2MTE2Njk=", "number": 192, "title": "Version 0.5.18 reads entire upload streams into memory, which will fail for files larger than available amount of memory ", "user": {"login": "houglum", "id": 14894525, "node_id": "MDQ6VXNlcjE0ODk0NTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/14894525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houglum", "html_url": "https://github.com/houglum", "followers_url": "https://api.github.com/users/houglum/followers", "following_url": "https://api.github.com/users/houglum/following{/other_user}", "gists_url": "https://api.github.com/users/houglum/gists{/gist_id}", "starred_url": "https://api.github.com/users/houglum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houglum/subscriptions", "organizations_url": "https://api.github.com/users/houglum/orgs", "repos_url": "https://api.github.com/users/houglum/repos", "events_url": "https://api.github.com/users/houglum/events{/privacy}", "received_events_url": "https://api.github.com/users/houglum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-08T20:44:11Z", "updated_at": "2017-12-08T22:30:38Z", "closed_at": "2017-12-08T22:30:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/google/apitools/commit/7ccade5be76c6715c0b8d2109ef6b484edadfe97 added code that calls `read()` on a StreamSlice, thus effectively reading the entire contents of a stream into memory.  This takes away one of the main advantages of using streams - being able to read them gradually and buffer their contents into memory, allowing the transfer of large files.  If you attempt uploads of files larger than the available amount of memory you have, this will fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/178", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/178/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/178/events", "html_url": "https://github.com/google/apitools/issues/178", "id": 261415397, "node_id": "MDU6SXNzdWUyNjE0MTUzOTc=", "number": 178, "title": "Instantiate known HTTP status codes as subclasses of HttpError", "user": {"login": "betamos", "id": 135960, "node_id": "MDQ6VXNlcjEzNTk2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/135960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/betamos", "html_url": "https://github.com/betamos", "followers_url": "https://api.github.com/users/betamos/followers", "following_url": "https://api.github.com/users/betamos/following{/other_user}", "gists_url": "https://api.github.com/users/betamos/gists{/gist_id}", "starred_url": "https://api.github.com/users/betamos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/betamos/subscriptions", "organizations_url": "https://api.github.com/users/betamos/orgs", "repos_url": "https://api.github.com/users/betamos/repos", "events_url": "https://api.github.com/users/betamos/events{/privacy}", "received_events_url": "https://api.github.com/users/betamos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-28T18:25:03Z", "updated_at": "2017-10-03T19:17:13Z", "closed_at": "2017-10-03T19:17:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is an FR to use separate classes for known status codes, which all may derive from HttpError, for instance:\r\n\r\n```\r\nclass ConflictError(HttpError):\r\n   \"\"\"This is an HTTP Conflict 409 error.\"\"\"\r\n```\r\n\r\nWhy? The reason is to greatly simplify control flow for the caller. It is very common to want to switch on specifically the status code. For instance, let's say you want to display a resource, but if it doesn't yet exist you want to prompt for its creation. The current recommended flow is:\r\n\r\n```\r\ntry:\r\n  my_resource = MyMessageClass.Get()  # calls API\r\nexcept apitools_exceptions.HttpError as e:\r\n  if e.status_code == 409:\r\n    my_resource = OfferCreateInteractively()\r\n  elif e.status_code == 403:\r\n    raise PermissionError('Please go to your console and grant access to the user account')\r\n  else:\r\n    raise UserFacingCatchAllError(e)\r\n```\r\n\r\nWith real classes, the control flow could look like this:\r\n```\r\ntry:\r\n  my_resource = MyMessageClass.Get()  # calls API\r\nexcept apitools_exceptions.HttpConflictError:\r\n  my_resource = OfferCreateInteractively()\r\nexcept apitools_exceptions.HttpForbiddenError:\r\n  raise MyPermissionError('Please go to your console and grant access to the user account')\r\nexcept apitools_exceptions.HttpError as e:\r\n  raise UserFacingCatchAllError(e)\r\n```\r\n\r\nThis way, we:\r\n\r\n- avoid boilerplate for re-raising\r\n- utilize Python-idiomatic control flow for exceptions\r\n- allow for easier mocking of errors in unit tests\r\n\r\nwhile still being fully backwards compatible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/175", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/175/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/175/events", "html_url": "https://github.com/google/apitools/issues/175", "id": 258470186, "node_id": "MDU6SXNzdWUyNTg0NzAxODY=", "number": 175, "title": "six 1.11.0 causes TypeError: Error when calling the metaclass bases", "user": {"login": "florenthemmi", "id": 4488419, "node_id": "MDQ6VXNlcjQ0ODg0MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4488419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florenthemmi", "html_url": "https://github.com/florenthemmi", "followers_url": "https://api.github.com/users/florenthemmi/followers", "following_url": "https://api.github.com/users/florenthemmi/following{/other_user}", "gists_url": "https://api.github.com/users/florenthemmi/gists{/gist_id}", "starred_url": "https://api.github.com/users/florenthemmi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florenthemmi/subscriptions", "organizations_url": "https://api.github.com/users/florenthemmi/orgs", "repos_url": "https://api.github.com/users/florenthemmi/repos", "events_url": "https://api.github.com/users/florenthemmi/events{/privacy}", "received_events_url": "https://api.github.com/users/florenthemmi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-18T12:58:54Z", "updated_at": "2017-09-19T22:16:44Z", "closed_at": "2017-09-19T22:16:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version 1.11.0 of the six package was released yesterday and causes:\r\n\r\n```\r\n  File \"/Users/florenthemmi/dev/env/lib/python2.7/site-packages/apache_beam/internal/gcp/json_value.py\", line 23, in <module>\r\n    from apitools.base.py import extra_types\r\n  File \"/Users/florenthemmi/dev/env/lib/python2.7/site-packages/apitools/base/py/__init__.py\", line 21, in <module>\r\n    from apitools.base.py.base_api import *\r\n  File \"/Users/florenthemmi/dev/env/lib/python2.7/site-packages/apitools/base/py/base_api.py\", line 31, in <module>\r\n    from apitools.base.protorpclite import message_types\r\n  File \"/Users/florenthemmi/dev/env/lib/python2.7/site-packages/apitools/base/protorpclite/message_types.py\", line 25, in <module>\r\n    from apitools.base.protorpclite import messages\r\n  File \"/Users/florenthemmi/dev/env/lib/python2.7/site-packages/apitools/base/protorpclite/messages.py\", line 1165, in <module>\r\n    class Field(six.with_metaclass(_FieldMeta, object)):\r\nTypeError: Error when calling the metaclass bases\r\n    metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases\r\n```\r\n\r\nThis issue has been encountered by several more folks and has been reported as issue benjaminp/six#210.\r\n\r\nThis issue is to track its resolution, or to make whatever change in apitools could fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/160", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/160/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/160/events", "html_url": "https://github.com/google/apitools/issues/160", "id": 225757077, "node_id": "MDU6SXNzdWUyMjU3NTcwNzc=", "number": 160, "title": "Python 3 support in apitools", "user": {"login": "aaltay", "id": 696638, "node_id": "MDQ6VXNlcjY5NjYzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/696638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaltay", "html_url": "https://github.com/aaltay", "followers_url": "https://api.github.com/users/aaltay/followers", "following_url": "https://api.github.com/users/aaltay/following{/other_user}", "gists_url": "https://api.github.com/users/aaltay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaltay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaltay/subscriptions", "organizations_url": "https://api.github.com/users/aaltay/orgs", "repos_url": "https://api.github.com/users/aaltay/repos", "events_url": "https://api.github.com/users/aaltay/events{/privacy}", "received_events_url": "https://api.github.com/users/aaltay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-02T16:57:33Z", "updated_at": "2017-07-16T03:12:14Z", "closed_at": "2017-07-16T03:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "httplib2 is the only blocking dependency for this (https://caniusepython3.com/project/google-apitools) and it has a newer version that supports python3. Are there anything else blocking this feature? Is it possible to get it on the roadmap?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/141", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/141/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/141/events", "html_url": "https://github.com/google/apitools/issues/141", "id": 203844562, "node_id": "MDU6SXNzdWUyMDM4NDQ1NjI=", "number": 141, "title": "Global logging level changes from INFO to ERROR when apitools is invoked using a ThreadPool", "user": {"login": "chamikaramj", "id": 10819857, "node_id": "MDQ6VXNlcjEwODE5ODU3", "avatar_url": "https://avatars3.githubusercontent.com/u/10819857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chamikaramj", "html_url": "https://github.com/chamikaramj", "followers_url": "https://api.github.com/users/chamikaramj/followers", "following_url": "https://api.github.com/users/chamikaramj/following{/other_user}", "gists_url": "https://api.github.com/users/chamikaramj/gists{/gist_id}", "starred_url": "https://api.github.com/users/chamikaramj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chamikaramj/subscriptions", "organizations_url": "https://api.github.com/users/chamikaramj/orgs", "repos_url": "https://api.github.com/users/chamikaramj/repos", "events_url": "https://api.github.com/users/chamikaramj/events{/privacy}", "received_events_url": "https://api.github.com/users/chamikaramj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-29T01:46:51Z", "updated_at": "2017-02-01T23:04:29Z", "closed_at": "2017-02-01T23:04:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This happens in Apache Beam Python SDK when trying to estimate size of a GCS file pattern using a thread pool.\r\n\r\nThis seems to be due to global logger set/reset at following location.\r\nhttps://github.com/google/apitools/blob/master/apitools/base/py/encoding.py#L282\r\n\r\nWhen invoking this using a ThreadPool, some threads might see 'logging.ERROR' to be the old_level and reset global logger to 'logging.ERROR'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/139", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/139/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/139/events", "html_url": "https://github.com/google/apitools/issues/139", "id": 201657275, "node_id": "MDU6SXNzdWUyMDE2NTcyNzU=", "number": 139, "title": "Warn instead of fail on GCE cache file access errors", "user": {"login": "thobrla", "id": 3239120, "node_id": "MDQ6VXNlcjMyMzkxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-18T18:38:39Z", "updated_at": "2017-01-19T14:22:54Z", "closed_at": "2017-01-19T14:22:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[Here](https://github.com/google/apitools/blob/cce7bd1896ba611186b0a3ce6b579da0687f158e/apitools/base/py/credentials_lib.py#L294) and [here](https://github.com/google/apitools/blob/cce7bd1896ba611186b0a3ce6b579da0687f158e/apitools/base/py/credentials_lib.py#L323) apitools attempts to interact with a cache file for GCE credentials.  Exceptions accessing the file propagate out.  Instead, apitools should only warn, since the cache file is not essential for functioning.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/134", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/134/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/134/events", "html_url": "https://github.com/google/apitools/issues/134", "id": 186798195, "node_id": "MDU6SXNzdWUxODY3OTgxOTU=", "number": 134, "title": "Clearing fields using '_IncludeFields' method also clears unrelated fields.", "user": {"login": "przemekwitek", "id": 19312454, "node_id": "MDQ6VXNlcjE5MzEyNDU0", "avatar_url": "https://avatars3.githubusercontent.com/u/19312454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/przemekwitek", "html_url": "https://github.com/przemekwitek", "followers_url": "https://api.github.com/users/przemekwitek/followers", "following_url": "https://api.github.com/users/przemekwitek/following{/other_user}", "gists_url": "https://api.github.com/users/przemekwitek/gists{/gist_id}", "starred_url": "https://api.github.com/users/przemekwitek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/przemekwitek/subscriptions", "organizations_url": "https://api.github.com/users/przemekwitek/orgs", "repos_url": "https://api.github.com/users/przemekwitek/repos", "events_url": "https://api.github.com/users/przemekwitek/events{/privacy}", "received_events_url": "https://api.github.com/users/przemekwitek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-02T13:18:46Z", "updated_at": "2016-11-04T08:53:27Z", "closed_at": "2016-11-04T08:53:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When clearing a field X, '_IncludeFields' method resets X's parent fields.\r\nThis breaks the request to be sent via API.\r\n\r\nhttps://github.com/google/apitools/blob/master/apitools/base/py/encoding.py#L233", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/127", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/127/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/127/events", "html_url": "https://github.com/google/apitools/issues/127", "id": 180058376, "node_id": "MDU6SXNzdWUxODAwNTgzNzY=", "number": 127, "title": "AdditionalProperties not able to decode int values encoded as strings.", "user": {"login": "cherba", "id": 11074390, "node_id": "MDQ6VXNlcjExMDc0Mzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/11074390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherba", "html_url": "https://github.com/cherba", "followers_url": "https://api.github.com/users/cherba/followers", "following_url": "https://api.github.com/users/cherba/following{/other_user}", "gists_url": "https://api.github.com/users/cherba/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherba/subscriptions", "organizations_url": "https://api.github.com/users/cherba/orgs", "repos_url": "https://api.github.com/users/cherba/repos", "events_url": "https://api.github.com/users/cherba/events{/privacy}", "received_events_url": "https://api.github.com/users/cherba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-29T14:04:03Z", "updated_at": "2016-09-30T17:40:56Z", "closed_at": "2016-09-30T17:40:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Discovery doc describing the following type (conceptually `map<string, int64>()`)\n\n```\n    \"MyMapOfValues\": {\n      \"description\": \"\",\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\",\n        \"format\": \"int64\"\n      }\n    }\n```\n\ngets converted to\n\n```\n@encoding.MapUnrecognizedFields('additionalProperties')\nclass MyMapOfValues(_messages.Message):\n  class AdditionalProperty(_messages.Message):\n    key = _messages.StringField(1)\n    value = _messages.IntegerField(2)\n  additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)\n```\n\nUnfortunately decoding json payloads like:\n\n```\nmessage = encoding.JsonToMessage(MyMapOfValues, '{\"myValue\": \"5\"}')\n```\n\nresults in\n\n```\nValidationError: Expected type (<type 'int'>, <type 'long'>) for field value, found 5 (type <type 'unicode'>)\n```\n\nnote that\n\n```\nmessage = encoding.JsonToMessage(MyMapOfValues, '{\"myValue\": 5}')\n```\n\nworks as expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/123", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/123/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/123/events", "html_url": "https://github.com/google/apitools/issues/123", "id": 168098254, "node_id": "MDU6SXNzdWUxNjgwOTgyNTQ=", "number": 123, "title": "Enum in Python 2.7", "user": {"login": "sergioisidoro", "id": 5014629, "node_id": "MDQ6VXNlcjUwMTQ2Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5014629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergioisidoro", "html_url": "https://github.com/sergioisidoro", "followers_url": "https://api.github.com/users/sergioisidoro/followers", "following_url": "https://api.github.com/users/sergioisidoro/following{/other_user}", "gists_url": "https://api.github.com/users/sergioisidoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergioisidoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergioisidoro/subscriptions", "organizations_url": "https://api.github.com/users/sergioisidoro/orgs", "repos_url": "https://api.github.com/users/sergioisidoro/repos", "events_url": "https://api.github.com/users/sergioisidoro/events{/privacy}", "received_events_url": "https://api.github.com/users/sergioisidoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-28T13:41:15Z", "updated_at": "2019-09-13T14:10:50Z", "closed_at": "2019-09-13T14:10:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Enum is referenced before definition.\n\nReproduce:\n1. Create virtualenv\n2. Activate\n3. Clone repo\n4. python setup.py install\n5. In interpreter `from apitools.base.protorpclite import messages`\n\n```\nIn [1]: from apitools.base.protorpclite import messages\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-1-8b7eda70bd5b> in <module>()\n----> 1 from apitools.base.protorpclite import messages\n\n/Users/sergioisidoro/apitools/apitools/base/protorpclite/messages.py in <module>()\n    402 \n    403 \n--> 404 class Enum(six.with_metaclass(_EnumClass, object)):\n    405     \"\"\"Base class for all enumerated types.\"\"\"\n    406 \n\n/Users/sergioisidoro/apitools/apitools/base/protorpclite/messages.py in __init__(cls, name, bases, dct)\n    301     def __init__(cls, name, bases, dct):\n    302         # Can only define one level of sub-classes below Enum.\n--> 303         if not (bases == (object,) or bases == (Enum,)):\n    304             raise EnumDefinitionError(\n    305                 'Enum type %s may only inherit from Enum' % name)\n\nNameError: global name 'Enum' is not defined\n```\n\nhttps://github.com/google/apitools/blob/master/apitools/base/protorpclite/messages.py#L303\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/117", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/117/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/117/events", "html_url": "https://github.com/google/apitools/issues/117", "id": 163176313, "node_id": "MDU6SXNzdWUxNjMxNzYzMTM=", "number": 117, "title": "extra_types not always imported when required for generated messages", "user": {"login": "cherba", "id": 11074390, "node_id": "MDQ6VXNlcjExMDc0Mzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/11074390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherba", "html_url": "https://github.com/cherba", "followers_url": "https://api.github.com/users/cherba/followers", "following_url": "https://api.github.com/users/cherba/following{/other_user}", "gists_url": "https://api.github.com/users/cherba/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherba/subscriptions", "organizations_url": "https://api.github.com/users/cherba/orgs", "repos_url": "https://api.github.com/users/cherba/repos", "events_url": "https://api.github.com/users/cherba/events{/privacy}", "received_events_url": "https://api.github.com/users/cherba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-30T14:16:41Z", "updated_at": "2016-07-06T20:50:05Z", "closed_at": "2016-07-06T20:50:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When generating message with AdditionalProperties if value type is \"any\" \n`from apitools.base.py import extra_types`\nis not present in messages file.\n\n`extra_types` module defines messages such as `JsonValue` and `JsonObject` which are referenced by the message.\n\nOne would get following error when trying to instantiate a message using these extra types:\n\n```\nFile \"apitools\\base\\protorpclite\\messages.py\", line 1992, in find_definition\n    'Could not find definition for %s' % name)\napitools.base.protorpclite.messages.DefinitionNotFoundError:\n    Could not find definition for extra_types.JsonValue\n```\n\nUp till now what was saving this code from failing is that there was a wild card import in the generated `__init__.py` file which was pulling in `extra_types` at the package level, and the type lookup routine is designed to look for types up the hierarchy.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/81", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/81/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/81/events", "html_url": "https://github.com/google/apitools/issues/81", "id": 121037544, "node_id": "MDU6SXNzdWUxMjEwMzc1NDQ=", "number": 81, "title": "Fix errors caught by new version of py lint.", "user": {"login": "vilasj", "id": 10121572, "node_id": "MDQ6VXNlcjEwMTIxNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/10121572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vilasj", "html_url": "https://github.com/vilasj", "followers_url": "https://api.github.com/users/vilasj/followers", "following_url": "https://api.github.com/users/vilasj/following{/other_user}", "gists_url": "https://api.github.com/users/vilasj/gists{/gist_id}", "starred_url": "https://api.github.com/users/vilasj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vilasj/subscriptions", "organizations_url": "https://api.github.com/users/vilasj/orgs", "repos_url": "https://api.github.com/users/vilasj/repos", "events_url": "https://api.github.com/users/vilasj/events{/privacy}", "received_events_url": "https://api.github.com/users/vilasj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-08T15:57:39Z", "updated_at": "2016-01-01T19:57:24Z", "closed_at": "2016-01-01T19:57:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here are the details of the errors: https://travis-ci.org/google/apitools/builds/94512014.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/75", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/75/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/75/events", "html_url": "https://github.com/google/apitools/issues/75", "id": 117715885, "node_id": "MDU6SXNzdWUxMTc3MTU4ODU=", "number": 75, "title": "Handle transient oauth2client refresh failures in default handler", "user": {"login": "thobrla", "id": 3239120, "node_id": "MDQ6VXNlcjMyMzkxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-19T00:50:13Z", "updated_at": "2015-11-19T22:14:40Z", "closed_at": "2015-11-19T22:14:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Presently, if an Oauth2 token URI returns a transient error code (like a 503), it's up to the application to handle it.  But apitools should be able to retry now that HttpAccessTokenRefreshError in oauth2client v1.5.2 allows inspection of the status code.\n\nSomething like this in the default retry function [HandleExceptionsAndRebuildHttpConnections](https://github.com/google/apitools/blob/master/apitools/base/py/http_wrapper.py#L245) should work:\n\n```\nelif (isinstance(retry_args.exc,\n                 oauth2client.client.HttpAccessTokenRefreshError)\n      and (retry_args.exc.status == TOO_MANY_REQUESTS or\n           retry_args.exc.status >= 500)):\n    logging.debug(\n        'Caught transient credential refresh error (%s), retrying',\n        retry_args.exc)       \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/73", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/73/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/73/events", "html_url": "https://github.com/google/apitools/issues/73", "id": 117244493, "node_id": "MDU6SXNzdWUxMTcyNDQ0OTM=", "number": 73, "title": "decode_message duplicates keys from response", "user": {"login": "thobrla", "id": 3239120, "node_id": "MDQ6VXNlcjMyMzkxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-16T23:34:02Z", "updated_at": "2015-11-17T00:21:23Z", "closed_at": "2015-11-17T00:21:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At a high level, when we get a response with custom object metadata such as \"456\": \"def\" in gsutil, set_unrecognized_field is being called twice:\nOnce from protojson.py.__decode_dictionary() with the non-unicode version of the string, i.e., '456'\n\nand once from encoding.py(536)_ProcessUnknownMessages() with the unicode version of the string, i.e., u'456'\n\nResulting in a message with duplicate entries:\nmetadata: <MetadataValue\n additionalProperties: [<AdditionalProperty\n key: '456'\n value: u'def'>, <AdditionalProperty\n key: '456'\n value: u'def'>]>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/63", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/63/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/63/events", "html_url": "https://github.com/google/apitools/issues/63", "id": 112342041, "node_id": "MDU6SXNzdWUxMTIzNDIwNDE=", "number": 63, "title": "Please add per-file licenses", "user": {"login": "petrcermak", "id": 2546601, "node_id": "MDQ6VXNlcjI1NDY2MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2546601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrcermak", "html_url": "https://github.com/petrcermak", "followers_url": "https://api.github.com/users/petrcermak/followers", "following_url": "https://api.github.com/users/petrcermak/following{/other_user}", "gists_url": "https://api.github.com/users/petrcermak/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrcermak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrcermak/subscriptions", "organizations_url": "https://api.github.com/users/petrcermak/orgs", "repos_url": "https://api.github.com/users/petrcermak/repos", "events_url": "https://api.github.com/users/petrcermak/events{/privacy}", "received_events_url": "https://api.github.com/users/petrcermak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-20T11:00:39Z", "updated_at": "2015-10-26T13:51:51Z", "closed_at": "2015-10-26T13:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Chromium project (www.chromium.org) pulls in apitools indirectly through the catapult (https://github.com/catapult-project/catapult/) and gsutil (https://github.com/GoogleCloudPlatform/gsutil) source repositories. In order for Chromium to be pulled into various Linux source distributions there's a requirement that all of the third party files pass the Linux <tt>licensecheck</tt> utility. Currently there are many files in the apitools repository missing per-file licenses. From a current run of <tt>licensecheck</tt>, they are:\n\n```\n$ licensecheck -r . | grep \"No copyright\"\n./run_pylint.py: *No copyright* UNKNOWN\n./samples/storage_sample/storage/__init__.py: *No copyright* UNKNOWN\n./samples/storage_sample/storage/storage_v1_client.py: *No copyright* UNKNOWN\n./samples/storage_sample/storage/storage_v1.py: *No copyright* UNKNOWN\n./samples/storage_sample/storage/storage_v1_messages.py: *No copyright* UNKNOWN\n./samples/storage_sample/downloads_test.py: *No copyright* UNKNOWN\n./samples/storage_sample/uploads_test.py: *No copyright* UNKNOWN\n./ez_setup.py: *No copyright* UNKNOWN\n./apitools/__init__.py: *No copyright* UNKNOWN\n./apitools/gen/service_registry.py: *No copyright* UNKNOWN\n./apitools/gen/util.py: *No copyright* UNKNOWN\n./apitools/gen/__init__.py: *No copyright* UNKNOWN\n./apitools/gen/extended_descriptor.py: *No copyright* UNKNOWN\n./apitools/gen/util_test.py: *No copyright* UNKNOWN\n./apitools/gen/command_registry.py: *No copyright* UNKNOWN\n./apitools/gen/client_generation_test.py: *No copyright* UNKNOWN\n./apitools/gen/message_registry.py: *No copyright* UNKNOWN\n./apitools/gen/gen_client.py: *No copyright* UNKNOWN\n./apitools/gen/gen_client_lib.py: *No copyright* UNKNOWN\n./apitools/base/py/exceptions.py: *No copyright* UNKNOWN\n./apitools/base/py/util.py: *No copyright* UNKNOWN\n./apitools/base/py/testing/mock.py: *No copyright* UNKNOWN\n./apitools/base/py/testing/__init__.py: *No copyright* UNKNOWN\n./apitools/base/py/testing/testclient/fusiontables_v1_messages.py: *No copyright* GENERATED FILE\n./apitools/base/py/testing/testclient/__init__.py: *No copyright* UNKNOWN\n./apitools/base/py/testing/testclient/fusiontables_v1_client.py: *No copyright* UNKNOWN\n./apitools/base/py/testing/mock_test.py: *No copyright* UNKNOWN\n./apitools/base/py/credentials_lib.py: *No copyright* GENERATED FILE\n./apitools/base/py/base_cli.py: *No copyright* GENERATED FILE\n./apitools/base/py/stream_slice_test.py: *No copyright* UNKNOWN\n./apitools/base/py/encoding_test.py: *No copyright* UNKNOWN\n./apitools/base/py/cli.py: *No copyright* UNKNOWN\n./apitools/base/py/stream_slice.py: *No copyright* UNKNOWN\n./apitools/base/py/http_wrapper.py: *No copyright* UNKNOWN\n./apitools/base/py/extra_types_test.py: *No copyright* UNKNOWN\n./apitools/base/py/base_api_test.py: *No copyright* UNKNOWN\n./apitools/base/py/transfer_test.py: *No copyright* UNKNOWN\n./apitools/base/py/batch_test.py: *No copyright* UNKNOWN\n./apitools/base/py/__init__.py: *No copyright* UNKNOWN\n./apitools/base/py/http_wrapper_test.py: *No copyright* UNKNOWN\n./apitools/base/py/list_pager_test.py: *No copyright* UNKNOWN\n./apitools/base/py/encoding.py: *No copyright* UNKNOWN\n./apitools/base/py/list_pager.py: *No copyright* UNKNOWN\n./apitools/base/py/credentials_lib_test.py: *No copyright* UNKNOWN\n./apitools/base/py/buffered_stream.py: *No copyright* UNKNOWN\n./apitools/base/py/base_api.py: *No copyright* UNKNOWN\n./apitools/base/py/util_test.py: *No copyright* UNKNOWN\n./apitools/base/py/extra_types.py: *No copyright* UNKNOWN\n./apitools/base/py/buffered_stream_test.py: *No copyright* UNKNOWN\n./apitools/base/py/batch.py: *No copyright* UNKNOWN\n./apitools/base/py/transfer.py: *No copyright* UNKNOWN\n./apitools/base/py/app2.py: *No copyright* UNKNOWN\n./apitools/base/__init__.py: *No copyright* UNKNOWN\n```\n\nWe'd like to ask that per-file licenses be added to these files to make it easier to integrate apitools not only into Chromium, but also Linux distributions in general. Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/55", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/55/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/55/events", "html_url": "https://github.com/google/apitools/issues/55", "id": 106075776, "node_id": "MDU6SXNzdWUxMDYwNzU3NzY=", "number": 55, "title": "auto_transfer=False uploads double-POST for resumable uploads", "user": {"login": "thobrla", "id": 3239120, "node_id": "MDQ6VXNlcjMyMzkxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-11T19:17:36Z", "updated_at": "2015-09-11T20:13:59Z", "closed_at": "2015-09-11T20:13:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The upload is initialized and an initial POST is made [here](https://github.com/google/apitools/blob/master/apitools/base/py/base_api.py#L667), but because auto_transfer is False, the HTTP response to the POST is not returned.  Then we make a [second POST](https://github.com/google/apitools/blob/master/apitools/base/py/base_api.py#L673), this time with bytes_http, throwing away the first uploadID and using the second one.\n\nI'll get a pull request out to fix this once I've had an opportunity to do some testing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/41", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/41/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/41/events", "html_url": "https://github.com/google/apitools/issues/41", "id": 99082607, "node_id": "MDU6SXNzdWU5OTA4MjYwNw==", "number": 41, "title": "AttributeError in gsutil _UploadObject cases", "user": {"login": "thobrla", "id": 3239120, "node_id": "MDQ6VXNlcjMyMzkxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-04T23:22:02Z", "updated_at": "2015-08-05T01:48:41Z", "closed_at": "2015-08-05T01:48:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This occurred when copying a 1MiB object with a low parallel composite upload threshold.  This in turn split the request into two 512KiB calls to UploadObject made simultaneously across two threads.\n\nIt's a rare occurrence (can't reproduce it easily), but it seems like it should never happen.\n\n```\nEncountered exception while copying:\nTraceback (most recent call last):\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/command.py\", line 1680, in PerformTask\n    results = task.func(cls, task.args, thread_state=self.thread_gsutil_api)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/copy_helper.py\", line 279, in _PerformParallelUploadFileToObject\n    gzip_exts=None, allow_splitting=False)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/copy_helper.py\", line 1649, in _UploadFileToObject\n    dst_obj_metadata, preconditions, gsutil_api, logger)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/copy_helper.py\", line 1402, in _UploadFileToObjectNonResumable\n    provider=dst_url.scheme, fields=UPLOAD_RETURN_FIELDS)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/cloud_api_delegator.py\", line 233, in UploadObject\n    fields=fields)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/gcs_json_api.py\", line 1024, in UploadObject\n    apitools_strategy=apitools_transfer.SIMPLE_UPLOAD)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/gcs_json_api.py\", line 887, in _UploadObject\n    global_params=global_params)\n  File \"/usr/local/google/home/thobrla/gsutil/gslib/third_party/storage_apitools/storage_v1_client.py\", line 975, in Insert\n    download=download)\n  File \"/usr/local/google/home/thobrla/gsutil/third_party/apitools/apitools/base/py/base_api.py\", line 616, in _RunMethod\n    download)\n  File \"/usr/local/google/home/thobrla/gsutil/third_party/apitools/apitools/base/py/base_api.py\", line 598, in PrepareHttpRequest\n    self.__FinalizeRequest(http_request, url_builder)\n  File \"/usr/local/google/home/thobrla/gsutil/third_party/apitools/apitools/base/py/base_api.py\", line 517, in __FinalizeRequest\n    http_request.url = url_builder.url\n  File \"/usr/local/google/home/thobrla/gsutil/third_party/apitools/apitools/base/py/base_api.py\", line 184, in url\n    self.__scheme, self.__netloc, self.relative_path, self.query, ''))\n  File \"/usr/local/google/home/thobrla/gsutil/third_party/apitools/apitools/base/py/base_api.py\", line 176, in query\n    return urllib.parse.urlencode(self.query_params, doseq=True)\n  File \"/usr/local/google/home/thobrla/gsutil/third_party/six/six.py\", line 92, in __get__\n    delattr(obj.__class__, self.name)\nAttributeError: urlencode\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/38", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/38/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/38/events", "html_url": "https://github.com/google/apitools/issues/38", "id": 96377921, "node_id": "MDU6SXNzdWU5NjM3NzkyMQ==", "number": 38, "title": "Pull change into `google-cloud-sdk`", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-21T17:58:44Z", "updated_at": "2015-07-23T21:47:57Z", "closed_at": "2015-07-23T21:47:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@thobrla I filed:\nhttps://code.google.com/p/google-cloud-sdk/issues/detail?id=165\n\nHow does one pull such a change into `google-cloud-sdk`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/28", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/28/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/28/events", "html_url": "https://github.com/google/apitools/issues/28", "id": 77785341, "node_id": "MDU6SXNzdWU3Nzc4NTM0MQ==", "number": 28, "title": "protorpc.messages import statement in auto-generated code, might collide with proto field names", "user": {"login": "neurogeek", "id": 243474, "node_id": "MDQ6VXNlcjI0MzQ3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/243474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neurogeek", "html_url": "https://github.com/neurogeek", "followers_url": "https://api.github.com/users/neurogeek/followers", "following_url": "https://api.github.com/users/neurogeek/following{/other_user}", "gists_url": "https://api.github.com/users/neurogeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/neurogeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neurogeek/subscriptions", "organizations_url": "https://api.github.com/users/neurogeek/orgs", "repos_url": "https://api.github.com/users/neurogeek/repos", "events_url": "https://api.github.com/users/neurogeek/events{/privacy}", "received_events_url": "https://api.github.com/users/neurogeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-05-18T19:59:36Z", "updated_at": "2015-05-27T23:06:09Z", "closed_at": "2015-05-27T23:06:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider this scenario:\n\n``` protobuf\nmessage SomeMessage {\n   required int32 x = 1;\n}\n\nmessage SomeOtherMessage {\n  repeated SomeMessage messages = 1;\n  required string uid = 2;\n}\n```\n\nThe generated code will be something like this:\n\n``` python\n[...]\nfrom protorpc import messages\n[...]\n\nclass SomeOtherMessage(messages.Message):\n  messages = messages.MessageField('SomeMessage',...)\n  uid = messages.StringField(2)\n```\n\nWhen using the auto-generated code above, an error will be raised: \neg. 'MessageField' object has no attribute 'StringField'.\n\nSince SomeOtherMessage.messages field shadows protorpc.messages module.\nModule messages from protorpc should be qualified to avoid these sorts of name collisions:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/21", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/21/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/21/events", "html_url": "https://github.com/google/apitools/issues/21", "id": 71955422, "node_id": "MDU6SXNzdWU3MTk1NTQyMg==", "number": 21, "title": "Upload.FromStream does not require mime_type but Upload constructor does", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-29T18:45:21Z", "updated_at": "2015-04-29T18:46:46Z", "closed_at": "2015-04-29T18:46:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In filing this I realized it was changed at `HEAD` but not with the version I have locally. Have you cut a new release yet?\n\n---\n\nSee `Upload` [constructor](https://github.com/google/apitools/blob/4062e9f7e7fee7b082913a47df4ecb8f0619ea9e/apitools/base/py/transfer.py#L432-L433)\n\n``` python\n  def __init__(self, stream, mime_type, total_size=None, http=None,\n               close_stream=False, chunksize=None, auto_transfer=True,\n```\n\nand the `Upload.FromStream` [factory](https://github.com/google/apitools/blob/4062e9f7e7fee7b082913a47df4ecb8f0619ea9e/apitools/base/py/transfer.py#L467-L468)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/20", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/20/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/20/events", "html_url": "https://github.com/google/apitools/issues/20", "id": 71944200, "node_id": "MDU6SXNzdWU3MTk0NDIwMA==", "number": 20, "title": "Helpstring in gen_client is incorrect for discovery_url", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-29T17:59:50Z", "updated_at": "2015-04-29T19:45:21Z", "closed_at": "2015-04-29T19:15:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `gen_client help` [says](https://github.com/google/apitools/blob/4062e9f7e7fee7b082913a47df4ecb8f0619ea9e/apitools/gen/gen_client.py#L24)\n\n```\n  --discovery_url: URL (or \"name/version\") of the ...\n```\n\nbut the code [rejects](https://github.com/google/apitools/blob/4062e9f7e7fee7b082913a47df4ecb8f0619ea9e/apitools/gen/util.py#L280-L281) if it doesn't come in the form `name.version`.\n\n---\n\nExample stacktrace:\n\n``` bash\n$ gen_client --discovery_url=\"storage/v1\" --outdir=foo client\nTraceback (most recent call last):\n  File \"/usr/local/bin/gen_client\", line 9, in <module>\n    load_entry_point('google-apitools==0.4.1', 'console_scripts', 'gen_client')()\n  File \"/usr/local/lib/python2.7/dist-packages/apitools/gen/gen_client.py\", line 240, in run_main\n    appcommands.Run()\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/appcommands.py\", line 791, in Run\n    return app.run()\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/app.py\", line 238, in run\n    return _actual_start()\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/app.py\", line 267, in _actual_start\n    really_start()\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/appcommands.py\", line 788, in InterceptReallyStart\n    original_really_start(main=_CommandsStart)\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/app.py\", line 220, in really_start\n    sys.exit(main(argv))\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/appcommands.py\", line 773, in _CommandsStart\n    sys.exit(command.CommandRun(GetCommandArgv()))\n  File \"/usr/local/lib/python2.7/dist-packages/google/apputils/appcommands.py\", line 293, in CommandRun\n    ret = self.Run(argv)\n  File \"/usr/local/lib/python2.7/dist-packages/apitools/gen/gen_client.py\", line 203, in Run\n    codegen = _GetCodegenFromFlags()\n  File \"/usr/local/lib/python2.7/dist-packages/apitools/gen/gen_client.py\", line 109, in _GetCodegenFromFlags\n    discovery_doc = util.FetchDiscoveryDoc(FLAGS.discovery_url)\n  File \"/usr/local/lib/python2.7/dist-packages/apitools/gen/util.py\", line 289, in FetchDiscoveryDoc\n    discovery_url = NormalizeDiscoveryUrl(discovery_url)\n  File \"/usr/local/lib/python2.7/dist-packages/apitools/gen/util.py\", line 281, in NormalizeDiscoveryUrl\n    raise ValueError('Unrecognized value \"%s\" for discovery url')\nValueError: Unrecognized value \"%s\" for discovery url\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/18", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/18/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/18/events", "html_url": "https://github.com/google/apitools/issues/18", "id": 68962628, "node_id": "MDU6SXNzdWU2ODk2MjYyOA==", "number": 18, "title": "Upload.__StreamMedia breaks on non-seekable streams", "user": {"login": "mwitkow", "id": 9655971, "node_id": "MDQ6VXNlcjk2NTU5NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9655971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwitkow", "html_url": "https://github.com/mwitkow", "followers_url": "https://api.github.com/users/mwitkow/followers", "following_url": "https://api.github.com/users/mwitkow/following{/other_user}", "gists_url": "https://api.github.com/users/mwitkow/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwitkow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwitkow/subscriptions", "organizations_url": "https://api.github.com/users/mwitkow/orgs", "repos_url": "https://api.github.com/users/mwitkow/repos", "events_url": "https://api.github.com/users/mwitkow/events{/privacy}", "received_events_url": "https://api.github.com/users/mwitkow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-16T16:38:31Z", "updated_at": "2015-04-16T19:37:55Z", "closed_at": "2015-04-16T19:37:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to be able to use non-seekable streams, such as `werkzeug.wsgi.LimitedStream` that is used in Flask for streaming request and respone data. This is how we do streaming to/from Google Cloud Storage. However, the `Upload.__StreamMedia` calls `stream.seek()` to verify completion:\n\n```\n  File \"site-packages/gcloud/storage/blob.py\", line 350, in upload_from_file\n    finish_callback=lambda *args: None)\n  File \"site-packages/apitools/base/py/transfer.py\", line 807, in StreamInChunks\n    additional_headers=additional_headers)\n  File \"site-packages/apitools/base/py/transfer.py\", line 773, in __StreamMedia\n    self.stream.seek(0, os.SEEK_END)\nAttributeError: 'LimitedStream' object has no attribute 'seek'\n```\n\nThere's even a TODO:\n\n```\n# TODO(craigcitro): Decide how to handle errors in the\n      # non-seekable case.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/16", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/16/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/16/events", "html_url": "https://github.com/google/apitools/issues/16", "id": 67459563, "node_id": "MDU6SXNzdWU2NzQ1OTU2Mw==", "number": 16, "title": "Migration path to one-true source is unknown", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-09T21:57:30Z", "updated_at": "2015-04-10T07:02:56Z", "closed_at": "2015-04-10T07:02:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are copies floating here, in https://github.com/craigcitro/apitools, \"internal\" in Google, in `gsutil` and possible elsewhere.\n\nIs there a migration plan in place? Is there a known set of features that differ? Is there a TODO list?\n\n---\n\n**Most importantly**: Can we (open source peoplez) help?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/14", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/14/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/14/events", "html_url": "https://github.com/google/apitools/issues/14", "id": 67040318, "node_id": "MDU6SXNzdWU2NzA0MDMxOA==", "number": 14, "title": "Importing apitools.base.py takes half a second", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-04-08T03:29:05Z", "updated_at": "2015-07-25T17:25:52Z", "closed_at": "2015-07-25T16:12:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This makes using the library a very jarring experience for application start-up times.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/8", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/8/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/8/events", "html_url": "https://github.com/google/apitools/issues/8", "id": 64325640, "node_id": "MDU6SXNzdWU2NDMyNTY0MA==", "number": 8, "title": "Drop apputils and gflags.", "user": {"login": "craigcitro", "id": 468559, "node_id": "MDQ6VXNlcjQ2ODU1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "craigcitro", "id": 468559, "node_id": "MDQ6VXNlcjQ2ODU1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "craigcitro", "id": 468559, "node_id": "MDQ6VXNlcjQ2ODU1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-03-25T17:24:20Z", "updated_at": "2018-04-11T18:09:43Z", "closed_at": "2018-04-11T18:09:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to drop these two dependencies.\n\nThese two libraries get used in two places:\n- `gen_client` uses them for processing command-line args \n- generated CLIs use them.\n\nI'll probably take care of this in two steps.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/google/apitools/issues/1", "repository_url": "https://api.github.com/repos/google/apitools", "labels_url": "https://api.github.com/repos/google/apitools/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/google/apitools/issues/1/comments", "events_url": "https://api.github.com/repos/google/apitools/issues/1/events", "html_url": "https://github.com/google/apitools/issues/1", "id": 59125111, "node_id": "MDU6SXNzdWU1OTEyNTExMQ==", "number": 1, "title": "Bring `apitools` Python3 support.", "user": {"login": "dhermes", "id": 520669, "node_id": "MDQ6VXNlcjUyMDY2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-02-26T19:10:30Z", "updated_at": "2015-03-25T17:23:14Z", "closed_at": "2015-03-25T17:23:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See @craigcitro [comment](https://github.com/GoogleCloudPlatform/gcloud-python/pull/654#issuecomment-76243464).\n\nPS Craig, https://github.com/google/protorpc does not have issues turned on.\n", "performed_via_github_app": null, "score": 1.0}]}