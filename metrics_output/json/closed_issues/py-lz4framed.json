{"total_count": 11, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/16", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/16/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/16/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/16", "id": 567329906, "node_id": "MDU6SXNzdWU1NjczMjk5MDY=", "number": 16, "title": "multi-threading decompression", "user": {"login": "YoelShoshan", "id": 7043815, "node_id": "MDQ6VXNlcjcwNDM4MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7043815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YoelShoshan", "html_url": "https://github.com/YoelShoshan", "followers_url": "https://api.github.com/users/YoelShoshan/followers", "following_url": "https://api.github.com/users/YoelShoshan/following{/other_user}", "gists_url": "https://api.github.com/users/YoelShoshan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YoelShoshan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YoelShoshan/subscriptions", "organizations_url": "https://api.github.com/users/YoelShoshan/orgs", "repos_url": "https://api.github.com/users/YoelShoshan/repos", "events_url": "https://api.github.com/users/YoelShoshan/events{/privacy}", "received_events_url": "https://api.github.com/users/YoelShoshan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 270617210, "node_id": "MDU6TGFiZWwyNzA2MTcyMTA=", "url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T05:40:14Z", "updated_at": "2020-02-24T18:08:33Z", "closed_at": "2020-02-24T18:08:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nThanks for sharing this repo :)\r\n\r\nI'm wondering - since this is thread safe, is there an example of using multi-threading to decode a single file faster ?\r\n(I assume that it is done decoding each part separately using each thread worker)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/15", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/15/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/15/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/15", "id": 300280372, "node_id": "MDU6SXNzdWUzMDAyODAzNzI=", "number": 15, "title": "v0.11.0 uses LZ4 v1.8.1.2", "user": {"login": "hhromic", "id": 5802993, "node_id": "MDQ6VXNlcjU4MDI5OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5802993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhromic", "html_url": "https://github.com/hhromic", "followers_url": "https://api.github.com/users/hhromic/followers", "following_url": "https://api.github.com/users/hhromic/following{/other_user}", "gists_url": "https://api.github.com/users/hhromic/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhromic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhromic/subscriptions", "organizations_url": "https://api.github.com/users/hhromic/orgs", "repos_url": "https://api.github.com/users/hhromic/repos", "events_url": "https://api.github.com/users/hhromic/events{/privacy}", "received_events_url": "https://api.github.com/users/hhromic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 270617210, "node_id": "MDU6TGFiZWwyNzA2MTcyMTA=", "url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-26T15:25:21Z", "updated_at": "2018-02-27T21:50:48Z", "closed_at": "2018-02-27T21:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\nfirst thanks for your python library! it proved to be very useful for my research work which needs to store a lot of gigabytes of data.\r\n\r\nSecondly, the current version of lz4 is now v1.8.1.2, with v1.8.1 being deprecated:\r\nhttps://github.com/lz4/lz4/releases/tag/v1.8.1\r\n\r\nThe code is exactly the same it seems, but with a packaging mistake. Are you planning on getting up-to-date with it or just wait for the next major version?\r\nI think keeping the versions up-to-date is less confusing :).\r\n\r\nThanks again!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/14", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/14/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/14/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/14", "id": 292131380, "node_id": "MDU6SXNzdWUyOTIxMzEzODA=", "number": 14, "title": "Duplicated effort", "user": {"login": "jonathanunderwood", "id": 992114, "node_id": "MDQ6VXNlcjk5MjExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/992114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanunderwood", "html_url": "https://github.com/jonathanunderwood", "followers_url": "https://api.github.com/users/jonathanunderwood/followers", "following_url": "https://api.github.com/users/jonathanunderwood/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanunderwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanunderwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanunderwood/subscriptions", "organizations_url": "https://api.github.com/users/jonathanunderwood/orgs", "repos_url": "https://api.github.com/users/jonathanunderwood/repos", "events_url": "https://api.github.com/users/jonathanunderwood/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanunderwood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-27T16:05:35Z", "updated_at": "2018-02-07T22:33:00Z", "closed_at": "2018-02-07T22:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks at Iotic. I just stumbled across this package. We've been hard at work here building out lz4 frame bindings for Python (including file handlers etc): https://github.com/python-lz4/python-lz4\r\n\r\nIt's a shame to duplicate effort, hopefully we can collaborate :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/13", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/13/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/13/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/13", "id": 243648946, "node_id": "MDU6SXNzdWUyNDM2NDg5NDY=", "number": 13, "title": "Please never delete releases from PyPI", "user": {"login": "underyx", "id": 1060436, "node_id": "MDQ6VXNlcjEwNjA0MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1060436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underyx", "html_url": "https://github.com/underyx", "followers_url": "https://api.github.com/users/underyx/followers", "following_url": "https://api.github.com/users/underyx/following{/other_user}", "gists_url": "https://api.github.com/users/underyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/underyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underyx/subscriptions", "organizations_url": "https://api.github.com/users/underyx/orgs", "repos_url": "https://api.github.com/users/underyx/repos", "events_url": "https://api.github.com/users/underyx/events{/privacy}", "received_events_url": "https://api.github.com/users/underyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-18T09:08:53Z", "updated_at": "2017-07-18T10:05:56Z", "closed_at": "2017-07-18T10:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our build system broke since we were pinned to `py-lz4framed==0.9.5`, which has been deleted from `pypi.python.org`. It is a best practice to never delete released packages, to prevent such issues for people who were already using your library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/12", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/12/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/12/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/12", "id": 243452041, "node_id": "MDU6SXNzdWUyNDM0NTIwNDE=", "number": 12, "title": "Support passing memoryview objects", "user": {"login": "ssolari", "id": 1182784, "node_id": "MDQ6VXNlcjExODI3ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1182784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssolari", "html_url": "https://github.com/ssolari", "followers_url": "https://api.github.com/users/ssolari/followers", "following_url": "https://api.github.com/users/ssolari/following{/other_user}", "gists_url": "https://api.github.com/users/ssolari/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssolari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssolari/subscriptions", "organizations_url": "https://api.github.com/users/ssolari/orgs", "repos_url": "https://api.github.com/users/ssolari/repos", "events_url": "https://api.github.com/users/ssolari/events{/privacy}", "received_events_url": "https://api.github.com/users/ssolari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-17T16:26:45Z", "updated_at": "2017-07-18T07:54:36Z", "closed_at": "2017-07-18T07:54:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use case\r\n=======\r\n\r\nWe have a large pointer (memoryview) to a bytes buffer containing compressed data.  Specifically we are receiving and sending compressed py-lz4framed data via [zeromq zero-copy](http://zeromq.org/blog:zero-copy).   \r\n\r\nIt would be beneficial (and possibly more performant) if we did not have to create a copy of the bytes buffer (via .tobytes()) before we passed the data to py-lz4framed.   \r\n\r\nDesired behavior\r\n-----------------\r\n  * decompress accepts memoryview object and does not create a copy of the input data\r\n  * compress accepts memoryview object and does not copy the input data\r\n\r\nI apologize that my C skills aren't good enough to submit a pull-request. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/11", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/11/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/11/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/11", "id": 226095256, "node_id": "MDU6SXNzdWUyMjYwOTUyNTY=", "number": 11, "title": "Allow for any bytes-like objects as input (e.g. memoryview)", "user": {"login": "llchan", "id": 51099, "node_id": "MDQ6VXNlcjUxMDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/51099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llchan", "html_url": "https://github.com/llchan", "followers_url": "https://api.github.com/users/llchan/followers", "following_url": "https://api.github.com/users/llchan/following{/other_user}", "gists_url": "https://api.github.com/users/llchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llchan/subscriptions", "organizations_url": "https://api.github.com/users/llchan/orgs", "repos_url": "https://api.github.com/users/llchan/repos", "events_url": "https://api.github.com/users/llchan/events{/privacy}", "received_events_url": "https://api.github.com/users/llchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 270617207, "node_id": "MDU6TGFiZWwyNzA2MTcyMDc=", "url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "vtermanis", "id": 6112689, "node_id": "MDQ6VXNlcjYxMTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6112689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtermanis", "html_url": "https://github.com/vtermanis", "followers_url": "https://api.github.com/users/vtermanis/followers", "following_url": "https://api.github.com/users/vtermanis/following{/other_user}", "gists_url": "https://api.github.com/users/vtermanis/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtermanis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtermanis/subscriptions", "organizations_url": "https://api.github.com/users/vtermanis/orgs", "repos_url": "https://api.github.com/users/vtermanis/repos", "events_url": "https://api.github.com/users/vtermanis/events{/privacy}", "received_events_url": "https://api.github.com/users/vtermanis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vtermanis", "id": 6112689, "node_id": "MDQ6VXNlcjYxMTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6112689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtermanis", "html_url": "https://github.com/vtermanis", "followers_url": "https://api.github.com/users/vtermanis/followers", "following_url": "https://api.github.com/users/vtermanis/following{/other_user}", "gists_url": "https://api.github.com/users/vtermanis/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtermanis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtermanis/subscriptions", "organizations_url": "https://api.github.com/users/vtermanis/orgs", "repos_url": "https://api.github.com/users/vtermanis/repos", "events_url": "https://api.github.com/users/vtermanis/events{/privacy}", "received_events_url": "https://api.github.com/users/vtermanis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-05-03T19:50:01Z", "updated_at": "2017-07-04T08:03:11Z", "closed_at": "2017-07-04T08:03:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be beneficial to be able to pass in a buffer/memoryview without making a bytes copy. I think it would just involve using a different format string to the func arg parser (maybe `y*` if I'm reading this right?).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/8", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/8/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/8/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/8", "id": 210867830, "node_id": "MDU6SXNzdWUyMTA4Njc4MzA=", "number": 8, "title": "Linewise iteration over compressed file", "user": {"login": "dreamflasher", "id": 31695, "node_id": "MDQ6VXNlcjMxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/31695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamflasher", "html_url": "https://github.com/dreamflasher", "followers_url": "https://api.github.com/users/dreamflasher/followers", "following_url": "https://api.github.com/users/dreamflasher/following{/other_user}", "gists_url": "https://api.github.com/users/dreamflasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamflasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamflasher/subscriptions", "organizations_url": "https://api.github.com/users/dreamflasher/orgs", "repos_url": "https://api.github.com/users/dreamflasher/repos", "events_url": "https://api.github.com/users/dreamflasher/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamflasher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-28T18:21:24Z", "updated_at": "2017-04-28T08:25:08Z", "closed_at": "2017-02-28T22:48:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "With gzip.open() the following is possible:\r\n\r\n```\r\nwith gzip.open(filename, 'rb') as f:\r\n    for line in f:\r\n```\r\nHow do I achieve this with lz4framed? (And I think this question is general enough that this should be integrated into the library)\r\n\r\nThere's ByteIO, but this only supports an initial chunk. The question is essentially: How do I stream the chunks from lz4 into a ByteIO so that I can read line-by-line?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/7", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/7/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/7/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/7", "id": 210843285, "node_id": "MDU6SXNzdWUyMTA4NDMyODU=", "number": 7, "title": "What causes Lz4FramedError (lz4framed.LZ4F_ERROR_GENERIC)", "user": {"login": "SysLabIT", "id": 977330, "node_id": "MDQ6VXNlcjk3NzMzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/977330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SysLabIT", "html_url": "https://github.com/SysLabIT", "followers_url": "https://api.github.com/users/SysLabIT/followers", "following_url": "https://api.github.com/users/SysLabIT/following{/other_user}", "gists_url": "https://api.github.com/users/SysLabIT/gists{/gist_id}", "starred_url": "https://api.github.com/users/SysLabIT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SysLabIT/subscriptions", "organizations_url": "https://api.github.com/users/SysLabIT/orgs", "repos_url": "https://api.github.com/users/SysLabIT/repos", "events_url": "https://api.github.com/users/SysLabIT/events{/privacy}", "received_events_url": "https://api.github.com/users/SysLabIT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-28T16:46:03Z", "updated_at": "2017-03-01T16:53:39Z", "closed_at": "2017-03-01T12:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhat does it mean error ('ERROR_GENERIC', 1)?\r\n\r\nI wrote a piece of code that uses the TCP socket.\r\nOn one side I compresses data and send to the socket.\r\nOn other side I read.\r\nThe error occurs (on reader side) after I put too much, too quickly data to the socket.\r\nChange block_size_id from LZ4F_BLOCKSIZE_MAX64KB to LZ4F_BLOCKSIZE_MAX4MB pushes the boundaries of the speed with which I can write.\r\n\r\nIs this the expected error after exceeding the speed limit?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/6", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/6/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/6/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/6", "id": 210790736, "node_id": "MDU6SXNzdWUyMTA3OTA3MzY=", "number": 6, "title": "level parameter <3 no effect", "user": {"login": "dreamflasher", "id": 31695, "node_id": "MDQ6VXNlcjMxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/31695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamflasher", "html_url": "https://github.com/dreamflasher", "followers_url": "https://api.github.com/users/dreamflasher/followers", "following_url": "https://api.github.com/users/dreamflasher/following{/other_user}", "gists_url": "https://api.github.com/users/dreamflasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamflasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamflasher/subscriptions", "organizations_url": "https://api.github.com/users/dreamflasher/orgs", "repos_url": "https://api.github.com/users/dreamflasher/repos", "events_url": "https://api.github.com/users/dreamflasher/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamflasher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-28T13:44:41Z", "updated_at": "2017-02-28T14:36:36Z", "closed_at": "2017-02-28T14:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to benchmark different fast compression configurations, but setting the level to {0,1,2} makes no difference in file size.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/5", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/5/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/5/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/5", "id": 210789997, "node_id": "MDU6SXNzdWUyMTA3ODk5OTc=", "number": 5, "title": "Add documentation for levels", "user": {"login": "dreamflasher", "id": 31695, "node_id": "MDQ6VXNlcjMxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/31695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamflasher", "html_url": "https://github.com/dreamflasher", "followers_url": "https://api.github.com/users/dreamflasher/followers", "following_url": "https://api.github.com/users/dreamflasher/following{/other_user}", "gists_url": "https://api.github.com/users/dreamflasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamflasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamflasher/subscriptions", "organizations_url": "https://api.github.com/users/dreamflasher/orgs", "repos_url": "https://api.github.com/users/dreamflasher/repos", "events_url": "https://api.github.com/users/dreamflasher/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamflasher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-02-28T13:41:43Z", "updated_at": "2017-09-05T15:12:20Z", "closed_at": "2017-02-28T17:44:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "At https://github.com/lz4/lz4 is a benchmark for different lz4 settings. I am interested in maximum decompression throughput, currently the best for that is \"LZ4 fast 8 (v1.7.3)\". How do I specify this setting with py-lz4framed?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/4", "repository_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed", "labels_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/4/comments", "events_url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/issues/4/events", "html_url": "https://github.com/Iotic-Labs/py-lz4framed/issues/4", "id": 207266453, "node_id": "MDU6SXNzdWUyMDcyNjY0NTM=", "number": 4, "title": "Precompiled binaries for easier installation?", "user": {"login": "ssolari", "id": 1182784, "node_id": "MDQ6VXNlcjExODI3ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1182784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssolari", "html_url": "https://github.com/ssolari", "followers_url": "https://api.github.com/users/ssolari/followers", "following_url": "https://api.github.com/users/ssolari/following{/other_user}", "gists_url": "https://api.github.com/users/ssolari/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssolari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssolari/subscriptions", "organizations_url": "https://api.github.com/users/ssolari/orgs", "repos_url": "https://api.github.com/users/ssolari/repos", "events_url": "https://api.github.com/users/ssolari/events{/privacy}", "received_events_url": "https://api.github.com/users/ssolari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 270617207, "node_id": "MDU6TGFiZWwyNzA2MTcyMDc=", "url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 270617210, "node_id": "MDU6TGFiZWwyNzA2MTcyMTA=", "url": "https://api.github.com/repos/Iotic-Labs/py-lz4framed/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "vtermanis", "id": 6112689, "node_id": "MDQ6VXNlcjYxMTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6112689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtermanis", "html_url": "https://github.com/vtermanis", "followers_url": "https://api.github.com/users/vtermanis/followers", "following_url": "https://api.github.com/users/vtermanis/following{/other_user}", "gists_url": "https://api.github.com/users/vtermanis/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtermanis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtermanis/subscriptions", "organizations_url": "https://api.github.com/users/vtermanis/orgs", "repos_url": "https://api.github.com/users/vtermanis/repos", "events_url": "https://api.github.com/users/vtermanis/events{/privacy}", "received_events_url": "https://api.github.com/users/vtermanis/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vtermanis", "id": 6112689, "node_id": "MDQ6VXNlcjYxMTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6112689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtermanis", "html_url": "https://github.com/vtermanis", "followers_url": "https://api.github.com/users/vtermanis/followers", "following_url": "https://api.github.com/users/vtermanis/following{/other_user}", "gists_url": "https://api.github.com/users/vtermanis/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtermanis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtermanis/subscriptions", "organizations_url": "https://api.github.com/users/vtermanis/orgs", "repos_url": "https://api.github.com/users/vtermanis/repos", "events_url": "https://api.github.com/users/vtermanis/events{/privacy}", "received_events_url": "https://api.github.com/users/vtermanis/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-02-13T16:22:26Z", "updated_at": "2017-02-22T00:33:59Z", "closed_at": "2017-02-22T00:33:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nOur specific use case is that we are using lz4framed inside Docker containers.    The issue is that base linux in docker used for python often doesn't have the needed gcc components.   We use the miniconda3 docker base image and of the dozens of python packages we use (many of which require compilation), lz4framed is the only one that needs to have  gcc installed into the container.   \r\n\r\nWe can obviously apt-get install gcc, but having lz4framed packaged up into binaries would be a great benefit to its users like us.  I don't know what the compile dependencies are and if they impact wheels for pip, but if so conda can be used to build binaries so this isn't an issue and the package just installs anywhere easily.    \r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}