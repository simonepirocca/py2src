{"total_count": 175, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/340", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/340/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/340/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/340", "id": 672867797, "node_id": "MDU6SXNzdWU2NzI4Njc3OTc=", "number": 340, "title": "Is this project still alive?", "user": {"login": "larsrinn", "id": 22575361, "node_id": "MDQ6VXNlcjIyNTc1MzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/22575361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larsrinn", "html_url": "https://github.com/larsrinn", "followers_url": "https://api.github.com/users/larsrinn/followers", "following_url": "https://api.github.com/users/larsrinn/following{/other_user}", "gists_url": "https://api.github.com/users/larsrinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/larsrinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larsrinn/subscriptions", "organizations_url": "https://api.github.com/users/larsrinn/orgs", "repos_url": "https://api.github.com/users/larsrinn/repos", "events_url": "https://api.github.com/users/larsrinn/events{/privacy}", "received_events_url": "https://api.github.com/users/larsrinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-04T15:09:45Z", "updated_at": "2020-08-08T03:19:30Z", "closed_at": "2020-08-08T03:19:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're thinking about integrating a package to simplify filtering in APIs. It seems like this project is abandoned? A bunch of open issues, no release in more than a year, incompatibility with the later releases of Django. \r\n\r\nDoes anyone have a recommendation for another project?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/337", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/337/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/337/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/337", "id": 636329107, "node_id": "MDU6SXNzdWU2MzYzMjkxMDc=", "number": 337, "title": "Specify Model Dynamiclly", "user": {"login": "DanishAbsar", "id": 18595466, "node_id": "MDQ6VXNlcjE4NTk1NDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/18595466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanishAbsar", "html_url": "https://github.com/DanishAbsar", "followers_url": "https://api.github.com/users/DanishAbsar/followers", "following_url": "https://api.github.com/users/DanishAbsar/following{/other_user}", "gists_url": "https://api.github.com/users/DanishAbsar/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanishAbsar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanishAbsar/subscriptions", "organizations_url": "https://api.github.com/users/DanishAbsar/orgs", "repos_url": "https://api.github.com/users/DanishAbsar/repos", "events_url": "https://api.github.com/users/DanishAbsar/events{/privacy}", "received_events_url": "https://api.github.com/users/DanishAbsar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T15:09:17Z", "updated_at": "2020-06-17T08:36:12Z", "closed_at": "2020-06-10T23:24:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI want to specify model dynamically, but getting following error\r\n\r\n ```\r\nfor expr, lookup in model_field.get_lookups().items():\r\nAttributeError: 'NoneType' object has no attribute 'get_lookups'\r\n```\r\n\r\nHere is My Code\r\n```\r\n\r\nclass DynamicFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = None\r\n        fields = {'name': '__all__'}\r\n\r\nclass DynamicAPI():\r\n    def __init__(self, model_name):\r\n        self.model_name = model_name\r\n\r\n    def get_params(self):\r\n        response = {\"queryset\" : self.model_name.objects.all()}\r\n        model_class_name = self.model_name.__name__\r\n        print(model_class_name)\r\n        if model_class_name == \"MasterMappingVideoMap\":\r\n            instace_serializer = MasterMappingVideoMapSerializer\r\n        else:\r\n            instace_serializer = CommonSerializer\r\n        instace_serializer.Meta.model = self.model_name\r\n        response[\"serializer_class\"] = instace_serializer\r\n        DynamicFilter.Meta.model = self.model_name\r\n        response[\"filter_class\"] = DynamicFilter\r\n        return response\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/336", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/336/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/336/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/336", "id": 636071608, "node_id": "MDU6SXNzdWU2MzYwNzE2MDg=", "number": 336, "title": "ImportError: cannot import name 'six' from 'django.utils'", "user": {"login": "oguzhancelikarslan", "id": 25379136, "node_id": "MDQ6VXNlcjI1Mzc5MTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/25379136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oguzhancelikarslan", "html_url": "https://github.com/oguzhancelikarslan", "followers_url": "https://api.github.com/users/oguzhancelikarslan/followers", "following_url": "https://api.github.com/users/oguzhancelikarslan/following{/other_user}", "gists_url": "https://api.github.com/users/oguzhancelikarslan/gists{/gist_id}", "starred_url": "https://api.github.com/users/oguzhancelikarslan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oguzhancelikarslan/subscriptions", "organizations_url": "https://api.github.com/users/oguzhancelikarslan/orgs", "repos_url": "https://api.github.com/users/oguzhancelikarslan/repos", "events_url": "https://api.github.com/users/oguzhancelikarslan/events{/privacy}", "received_events_url": "https://api.github.com/users/oguzhancelikarslan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T09:02:50Z", "updated_at": "2020-06-10T09:06:05Z", "closed_at": "2020-06-10T09:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "getting this error after placing configuration dict.\r\n\r\n 'DEFAULT_FILTER_BACKENDS': (\r\n        'rest_framework_filters.backends.RestFrameworkFilterBackend',\r\n    ),\r\n\r\nDjango version: 3.0.7 \r\nImportError: Could not import 'rest_framework_filters.backends.RestFrameworkFilterBackend' for API setting 'DEFAULT_FILTER_BACKENDS'. ImportError: cannot import name 'six' from 'django.utils'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/335", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/335/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/335/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/335", "id": 630437516, "node_id": "MDU6SXNzdWU2MzA0Mzc1MTY=", "number": 335, "title": "Trying out ComplexJSONFilterBackend", "user": {"login": "lofidevops", "id": 229415, "node_id": "MDQ6VXNlcjIyOTQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/229415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lofidevops", "html_url": "https://github.com/lofidevops", "followers_url": "https://api.github.com/users/lofidevops/followers", "following_url": "https://api.github.com/users/lofidevops/following{/other_user}", "gists_url": "https://api.github.com/users/lofidevops/gists{/gist_id}", "starred_url": "https://api.github.com/users/lofidevops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lofidevops/subscriptions", "organizations_url": "https://api.github.com/users/lofidevops/orgs", "repos_url": "https://api.github.com/users/lofidevops/repos", "events_url": "https://api.github.com/users/lofidevops/events{/privacy}", "received_events_url": "https://api.github.com/users/lofidevops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T01:20:09Z", "updated_at": "2020-06-12T09:36:15Z", "closed_at": "2020-06-12T09:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "@ferrants I'm trying out your `json-filter` branch, but although I'm submitting valid JSON, I can't seem to trigger a search. Would you mind looking at what I'm doing wrong? Here's a simple REST view for users:\r\n\r\n```\r\nclass UserList(generics.ListCreateAPIView):\r\n    queryset = get_user_model().objects.all().order_by(\"username\")\r\n    serializer_class = UserSerializer\r\n    permission_classes = (UserRolePermissions,)\r\n    filter_backends = (filters.backends.ComplexJSONFilterBackend,)\r\n```\r\n\r\nand a trivial query, which I dump to json and encode with urllib.parse.quote:\r\n\r\n```\r\n{\"or\": [{\"username__startswith\": \"a\"},{\"username__startswith\": \"b\"}]}\r\n```\r\n\r\nBut when I append this to `URL/?json_filters=` it has no effect. The JSON filter is active, because if I append `URL/?json_filters=ksjfhshfjdsgfe` I get a JSON parsing error.\r\n\r\nSimilarly, if I use this query I would expect to get no results, but instead I still get all results:\r\n\r\n```\r\n{\"and\": [{\"username__eq\": \"x\"},{\"username__eq\": \"y\"}]}\r\n```\r\n\r\nSimilarly, if I enter valid JSON with nonsense content, I get all results:\r\n\r\n```\r\n{\"and\": [{\"foo\": \"bar\"},{\"spam\": \"eggs\"}]}\r\n```\r\n\r\nFinally, if I enter an empty dictionary, I get all results, but I think that's expected (no filter == all results):\r\n\r\n```\r\n{}\r\n```\r\n\r\nIs there a section of the branch documentation, `django-rest-framework-filters` documentation or `django-filters` documentation that I've overlooked?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/334", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/334/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/334/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/334", "id": 625560567, "node_id": "MDU6SXNzdWU2MjU1NjA1Njc=", "number": 334, "title": "filter on two model", "user": {"login": "Sarthak77tiwari", "id": 58113869, "node_id": "MDQ6VXNlcjU4MTEzODY5", "avatar_url": "https://avatars0.githubusercontent.com/u/58113869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sarthak77tiwari", "html_url": "https://github.com/Sarthak77tiwari", "followers_url": "https://api.github.com/users/Sarthak77tiwari/followers", "following_url": "https://api.github.com/users/Sarthak77tiwari/following{/other_user}", "gists_url": "https://api.github.com/users/Sarthak77tiwari/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sarthak77tiwari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sarthak77tiwari/subscriptions", "organizations_url": "https://api.github.com/users/Sarthak77tiwari/orgs", "repos_url": "https://api.github.com/users/Sarthak77tiwari/repos", "events_url": "https://api.github.com/users/Sarthak77tiwari/events{/privacy}", "received_events_url": "https://api.github.com/users/Sarthak77tiwari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T10:08:05Z", "updated_at": "2020-05-28T19:42:04Z", "closed_at": "2020-05-28T19:42:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two model shop1 and shop2\r\n\r\nshop1\r\n\r\n```python\r\nCATEGORY = (\r\n    ('BookShop', 'Bookshop'),\r\n    ('Bakery', 'Bakery'),\r\n    ('Dairy', 'Dairy'),\r\n)\r\nShop_category = models.CharField(max_length=200, choices=CATEGORY)\r\nYour_location = models.PointField()\r\n```\r\nshop2\r\n\r\n```python\r\nCATEGORY = (\r\n    ('BookShop', 'Bookshop'),\r\n    ('Bakery', 'Bakery'),\r\n    ('Dairy', 'Dairy'),\r\n)\r\nShop_category = models.CharField(max_length=200, null=True, choices=CATEGORY)\r\nDistance = models.PositiveIntegerField(null=True)\r\nShop_location = models.PointField()\r\n```\r\ni want set a filter where the the shop1 get the shame category of shop2 if the distnce given by shop2 less then or equall", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/333", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/333/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/333/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/333", "id": 611075142, "node_id": "MDU6SXNzdWU2MTEwNzUxNDI=", "number": 333, "title": "RecursionError for circular self relationship", "user": {"login": "dwoldenberg1", "id": 4872234, "node_id": "MDQ6VXNlcjQ4NzIyMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4872234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwoldenberg1", "html_url": "https://github.com/dwoldenberg1", "followers_url": "https://api.github.com/users/dwoldenberg1/followers", "following_url": "https://api.github.com/users/dwoldenberg1/following{/other_user}", "gists_url": "https://api.github.com/users/dwoldenberg1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwoldenberg1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwoldenberg1/subscriptions", "organizations_url": "https://api.github.com/users/dwoldenberg1/orgs", "repos_url": "https://api.github.com/users/dwoldenberg1/repos", "events_url": "https://api.github.com/users/dwoldenberg1/events{/privacy}", "received_events_url": "https://api.github.com/users/dwoldenberg1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265155, "node_id": "MDU6TGFiZWw3MDI2NTE1NQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T00:49:43Z", "updated_at": "2020-08-08T04:07:27Z", "closed_at": "2020-08-08T04:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am experiencing a `Maximum Recursion Depth Exceeded Error` when using this library to create filter classes for API views using django rest framework. I followed the documentation on how to create this type of filter relationship and still experience this recursion error: https://github.com/philipn/django-rest-framework-filters#recursive--circular-relationships . The error occurs specifically when trying to filter on objects by id only (that have a recursive filter).\r\n\r\nI am fairly certain this is an issue with the library and not our implementation because this issue first occurred as a bug in an actual class with the fields modeled out but I was able to recreate the same issue by simply adding a `RelatedFilter` creating a circular reference to the class it is in without actually referencing a real field in the model the filter is for (the error occurs regardless of the fields in the model).\r\n\r\nCode usage:\r\n\r\nData:\r\n```\r\n{\r\n  'id' : 1,\r\n  'name': 'fred',\r\n  'best_friend': 2\r\n}\r\n\r\n{\r\n  'id':2,\r\n  'name':'daniel'\r\n}\r\n```\r\n\r\nFilter Class Code:\r\n```\r\n# in filters.py\r\nclassNameFilter(rest_framework_filters.filterset.FilterSet):\r\n    best_friend = RelatedFilter('people.filters.NameFilter', field_name='best_friend', queryset=Name.objects.all())\r\n    ....\r\n\r\n# in views_api.py\r\nclass NameViewSet(viewsets.ModelViewSet):\r\n    serializer_class = NameSerializer\r\n    filter_class = NameFilter\r\n    filter_backends = (DjangoFilterBackend, )\r\n    ...\r\n```\r\n\r\nWorking API Call:\r\n```\r\n$curl \"https://app.local/api/names/?best_friend__name=daniel\"\r\n{\r\n  \"count\": 1,\r\n  \"next\": null,\r\n  \"previous\": null,\r\n  \"results\": [\r\n    {\r\n      'id':2,\r\n      'name':'daniel'\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nBroken API Call\r\n```\r\n$curl \"https://app.local/api/names/?best_friend=2\"\r\nRecursionError at /api/names/\r\nmaximum recursion depth exceeded\r\n\r\nRequest Method: GET\r\nRequest URL: https://app.local/api/names/?best_friend=2\r\nDjango Version: 2.2.10\r\nPython Executable: /usr/bin/python3\r\nPython Version: 3.6.8\r\nPython Path: ['/app', '/usr/local/bin', '/usr/lib64/python36.zip', '/usr/lib64/python3.6', '/usr/lib64/python3.6/lib-dynload', '/usr/local/lib64/python3.6/site-packages', '/usr/local/lib/python3.6/site-packages', '/usr/lib64/python3.6/site-packages', '/usr/lib/python3.6/site-packages', '/app']\r\n...\r\nTraceback:\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\" in inner\r\n  34.             response = get_response(request)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  115.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  113.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/usr/lib64/python3.6/contextlib.py\" in inner\r\n  52.                 return func(*args, **kwds)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django/views/decorators/csrf.py\" in wrapped_view\r\n  54.         return view_func(*args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/viewsets.py\" in view\r\n  114.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\" in dispatch\r\n  505.             response = self.handle_exception(exc)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\" in handle_exception\r\n  465.             self.raise_uncaught_exception(exc)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\" in raise_uncaught_exception\r\n  476.         raise exc\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\" in dispatch\r\n  502.             response = handler(request, *args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py\" in list\r\n  38.         queryset = self.filter_queryset(self.get_queryset())\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework/generics.py\" in filter_queryset\r\n  150.             queryset = backend().filter_queryset(self.request, queryset, self)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django_filters/rest_framework/backends.py\" in filter_queryset\r\n  90.         filterset = self.get_filterset(request, queryset, view)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/django_filters/rest_framework/backends.py\" in get_filterset\r\n  36.         return filterset_class(**kwargs)\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\" in __init__\r\n  93.         self.related_filtersets = self.get_related_filtersets()\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\" in get_related_filtersets\r\n  235.                 prefix=self.form_prefix,\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\" in __init__\r\n  93.         self.related_filtersets = self.get_related_filtersets()\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\" in get_related_filtersets\r\n  235.                 prefix=self.form_prefix,\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\" in __init__\r\n  93.         self.related_filtersets = self.get_related_filtersets()\r\n\r\nFile \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\" in get_related_filtersets\r\n  235.                 prefix=self.form_prefix,\r\n...\r\n```\r\n\r\n\r\nRelevant version information:\r\n```\r\nDjango Version: 2.2.10\r\ndjango-filter==2.2.0\r\ndjango-filters==0.2.1\r\ndjangorestframework-filters==1.0.0.dev0\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/332", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/332/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/332/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/332", "id": 610904394, "node_id": "MDU6SXNzdWU2MTA5MDQzOTQ=", "number": 332, "title": "Django 3 support", "user": {"login": "fmalina", "id": 10356928, "node_id": "MDQ6VXNlcjEwMzU2OTI4", "avatar_url": "https://avatars1.githubusercontent.com/u/10356928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmalina", "html_url": "https://github.com/fmalina", "followers_url": "https://api.github.com/users/fmalina/followers", "following_url": "https://api.github.com/users/fmalina/following{/other_user}", "gists_url": "https://api.github.com/users/fmalina/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmalina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmalina/subscriptions", "organizations_url": "https://api.github.com/users/fmalina/orgs", "repos_url": "https://api.github.com/users/fmalina/repos", "events_url": "https://api.github.com/users/fmalina/events{/privacy}", "received_events_url": "https://api.github.com/users/fmalina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T18:42:37Z", "updated_at": "2020-08-08T05:31:48Z", "closed_at": "2020-05-01T18:44:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Fix requiring six and/or drop python2 support", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/331", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/331/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/331/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/331", "id": 603689590, "node_id": "MDU6SXNzdWU2MDM2ODk1OTA=", "number": 331, "title": "How to distinct result?", "user": {"login": "AsheKR", "id": 42999044, "node_id": "MDQ6VXNlcjQyOTk5MDQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/42999044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsheKR", "html_url": "https://github.com/AsheKR", "followers_url": "https://api.github.com/users/AsheKR/followers", "following_url": "https://api.github.com/users/AsheKR/following{/other_user}", "gists_url": "https://api.github.com/users/AsheKR/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsheKR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsheKR/subscriptions", "organizations_url": "https://api.github.com/users/AsheKR/orgs", "repos_url": "https://api.github.com/users/AsheKR/repos", "events_url": "https://api.github.com/users/AsheKR/events{/privacy}", "received_events_url": "https://api.github.com/users/AsheKR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-21T04:07:37Z", "updated_at": "2020-08-08T03:07:42Z", "closed_at": "2020-08-08T03:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "`/api/posts/?comment__content='some contnet'` has more than one same post id\r\n\r\n![image](https://user-images.githubusercontent.com/42999044/79829028-07cb5a80-83dd-11ea-8a29-544f4288e193.png)\r\n\r\nhow can i distinct this result?\r\n\r\n- pip list\r\ndjango: 2.2.9\r\ndjango-filter: 2.2.0\r\ndjangorestframework: 3.11.0\r\ndjangorestframework-filters 1.1.0.dev0\r\n\r\n```python\r\nclass Post(models.Model):\r\n  pass\r\n\r\nclass Comment(models.Model):\r\n  post = models.ForeignKey(Post)\r\n\r\n\r\nclass CommentFilter(FilterSet):\r\n  content = filters.CharFilter(field_name='content', lookup_expr='icontains')\r\n\r\n  class Meta:\r\n    model = Comment\r\n    fields = (\r\n      'content',\r\n    )\r\n\r\nclass PostFilter(FilterSet):\r\n  comment = filters.RelatedFilter(CommentFilter, queryset=Comment.objects.all())\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/330", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/330/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/330/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/330", "id": 600963329, "node_id": "MDU6SXNzdWU2MDA5NjMzMjk=", "number": 330, "title": "Search Inside JSON field", "user": {"login": "rjsnh1522", "id": 7428293, "node_id": "MDQ6VXNlcjc0MjgyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7428293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjsnh1522", "html_url": "https://github.com/rjsnh1522", "followers_url": "https://api.github.com/users/rjsnh1522/followers", "following_url": "https://api.github.com/users/rjsnh1522/following{/other_user}", "gists_url": "https://api.github.com/users/rjsnh1522/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjsnh1522/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjsnh1522/subscriptions", "organizations_url": "https://api.github.com/users/rjsnh1522/orgs", "repos_url": "https://api.github.com/users/rjsnh1522/repos", "events_url": "https://api.github.com/users/rjsnh1522/events{/privacy}", "received_events_url": "https://api.github.com/users/rjsnh1522/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T11:22:03Z", "updated_at": "2020-08-08T03:10:44Z", "closed_at": "2020-08-08T03:10:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a json field like \r\n```\r\nrecord 1 = group_name: {\r\n   \"id\": 2,\r\n   \"name\" :\"G1\"\r\n}\r\nrecord 2 = group_name: {\r\n   \"id\": 2,\r\n   \"name\" :\"G1\"\r\n}\r\nrecord 3 = group_name: {\r\n   \"id\": 1,\r\n   \"name\" :\"G0\"\r\n}\r\n\r\n```\r\nI need to fetch all the records which has name \"G1\" case insensitive.\r\nI have tried sending \"**group_name__name__in**\" but its not working. I need to fetch multiple records with names.\r\n\r\ncan you explain ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/327", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/327/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/327/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/327", "id": 580383847, "node_id": "MDU6SXNzdWU1ODAzODM4NDc=", "number": 327, "title": "Filtering Over multiple Databases.", "user": {"login": "rjsnh1522", "id": 7428293, "node_id": "MDQ6VXNlcjc0MjgyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7428293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjsnh1522", "html_url": "https://github.com/rjsnh1522", "followers_url": "https://api.github.com/users/rjsnh1522/followers", "following_url": "https://api.github.com/users/rjsnh1522/following{/other_user}", "gists_url": "https://api.github.com/users/rjsnh1522/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjsnh1522/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjsnh1522/subscriptions", "organizations_url": "https://api.github.com/users/rjsnh1522/orgs", "repos_url": "https://api.github.com/users/rjsnh1522/repos", "events_url": "https://api.github.com/users/rjsnh1522/events{/privacy}", "received_events_url": "https://api.github.com/users/rjsnh1522/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-13T05:41:11Z", "updated_at": "2020-03-13T18:02:17Z", "closed_at": "2020-03-13T18:02:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ,\r\nThis framework is working fine. But I have a specific requirements where I have to fetch and filter on multiple databases.\r\nExample:\r\nI have 5 database and each data have same tables and column structure.\r\nwhat I am doing is I loop through these database and pass on request.GET and query set to filter.\r\n**inside view**\r\n```\r\nresults = []\r\nfor i in dbs:\r\n     data = MyModel.objects.using(i.db_name).all()\r\n     my_filter_set = MyFilter(self.request.GET, queryset=data)\r\n     seri_data = MyModelSerializer(my_filter_set.qs, many=True)\r\n     results.append(seri_data)\r\n```\r\nNow the problem is inside filter there is dependency on other models.\r\n\r\n```\r\nclass MyFilter(filters.FilterSet):\r\n    title = filters.AutoFilter(lookups='__all__')\r\n    model_two = filters.RelatedFilter(\r\n        ModelTwoFilter, field_name=\"model_two\", queryset=ModelTwo.objects.all()\r\n    )\r\n    model_three = filters.RelatedFilter(\r\n        ModelThreeFilter, field_name=\"model_three\", queryset=ModelThree.objects.all()\r\n    )\r\n   # like this multiple models are three.\r\n   class Meta:\r\n        model = MyModel\r\n        fields = {\r\n            \"title\": [\"exact\", \"in\", \"startswith\"],\r\n            'model_two': ['exact', 'in'],\r\n            'model_three': ['exact', 'in']\r\n        }\r\n\r\n\r\n\r\n```\r\nI need to set specific database to query from inside the queryset like.\r\n`ModelTwo.objects.using(db_name).all()`\r\nis there any way to set this db_name from some where so that I can filter according to that database and merge the end result ?\r\n\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/323", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/323/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/323/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/323", "id": 531149127, "node_id": "MDU6SXNzdWU1MzExNDkxMjc=", "number": 323, "title": "RelatedFilter.bind would conflict with DF PR", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T14:04:37Z", "updated_at": "2020-08-08T04:21:30Z", "closed_at": "2020-08-08T04:21:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The newly introduced bind method would conflict with carltongibson/django-filter#1150. Thanks for pointing this out @gustabot42.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/322", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/322/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/322/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/322", "id": 524995816, "node_id": "MDU6SXNzdWU1MjQ5OTU4MTY=", "number": 322, "title": "Unexisting field in a RelatedFilter does not raise Field Error", "user": {"login": "hectorcanto", "id": 1630319, "node_id": "MDQ6VXNlcjE2MzAzMTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1630319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hectorcanto", "html_url": "https://github.com/hectorcanto", "followers_url": "https://api.github.com/users/hectorcanto/followers", "following_url": "https://api.github.com/users/hectorcanto/following{/other_user}", "gists_url": "https://api.github.com/users/hectorcanto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hectorcanto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hectorcanto/subscriptions", "organizations_url": "https://api.github.com/users/hectorcanto/orgs", "repos_url": "https://api.github.com/users/hectorcanto/repos", "events_url": "https://api.github.com/users/hectorcanto/events{/privacy}", "received_events_url": "https://api.github.com/users/hectorcanto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-19T13:02:45Z", "updated_at": "2020-01-28T01:45:12Z", "closed_at": "2020-01-28T01:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using v1.0.0.dev0  and I've set up a Custom ComplexFilterBackend with RelatedField FilterSets and when I query over an unexisting field in a relation (or an unexisting field) I don't get the expected Field Error.\r\n\r\nUsing the debugger I've applied the search manually and got what I expected:\r\n```\r\nqueryset.filter(countries__badfield=\"Bulgaria\")\r\n*** django.core.exceptions.FieldError: Related Field got invalid lookup: badfield\r\n```\r\n\r\nMy ViewSet and FilterSets are:\r\n```\r\nclass CountryFilter(rest_framework_filters.filters.FilterSet):\r\n    class Meta:\r\n        model = Country\r\n        fields = {'name': ['exact', 'icontains', 'startswith']}\r\n\r\n\r\nclass CustomUserFilter(rest_framework_filters.filters.FilterSet):\r\n    countries = filters.RelatedFilter(CountryFilter, field_name='countries',\r\n                                    queryset=Country.objects.all())\r\n\r\n    class Meta:\r\n        model = CustomUser\r\n        fields = {'name': ['exact', 'in', 'startswith'],  'id': ['exact']}\r\n\r\n\r\nclass CustomUserViewSet(viewsets.GenericViewSet, mixins. RetrieveModelMixin):\r\n    serializer_class = UserSerializer\r\n    filter_backends = (OrderingFilter, FuzzyFilter, ComplexFilterBackend, )\r\n    filterset_class = CustomBackendFilter\r\n\r\n```\r\nThe query_strings I tried are:\r\n```\r\n['badfield=Bulgaria']\r\n['countries_nam=Bulgaria']  # without the 'e' in name\r\n['countries_badfield=Bulgaria']\r\n```\r\nWhich I believe are encoded properly (I have tests working with valid fields already)\r\nThe QueryDict looks like\r\n<QueryDict: {'complex': ['%28badfield%253DBulgaria%29'], 'page[limit]': ['100']}>\r\n\r\nNone of the tests raised a Field Error nor any other exception, it returns all the objects as if the filter wasn't there.\r\n\r\nThanks for your assistance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/319", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/319/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/319/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/319", "id": 515464432, "node_id": "MDU6SXNzdWU1MTU0NjQ0MzI=", "number": 319, "title": "Filter.method not support negation/exclusion", "user": {"login": "gustabot42", "id": 133016, "node_id": "MDQ6VXNlcjEzMzAxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/133016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustabot42", "html_url": "https://github.com/gustabot42", "followers_url": "https://api.github.com/users/gustabot42/followers", "following_url": "https://api.github.com/users/gustabot42/following{/other_user}", "gists_url": "https://api.github.com/users/gustabot42/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustabot42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustabot42/subscriptions", "organizations_url": "https://api.github.com/users/gustabot42/orgs", "repos_url": "https://api.github.com/users/gustabot42/repos", "events_url": "https://api.github.com/users/gustabot42/events{/privacy}", "received_events_url": "https://api.github.com/users/gustabot42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T14:11:17Z", "updated_at": "2019-11-15T02:43:04Z", "closed_at": "2019-11-15T02:43:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The actual signature of filter method does not permit to resolve automatic filter negations !=.\r\nAutomatic filter negation depends on the exclude attribute but this attribute is not accessible with the actual filter method signature.\r\nA possible solution is to change the signature from `(qs, name, value)` to `(qs, name, value, exclude)`\r\n```\r\nclass FilterMethod(object):\r\n    def __call__(self, qs, value):\r\n        if value in EMPTY_VALUES:\r\n            return qs\r\n        return self.method(qs, self.f.field_name, value, self.f.exclude)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/317", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/317/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/317/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/317", "id": 504357653, "node_id": "MDU6SXNzdWU1MDQzNTc2NTM=", "number": 317, "title": "Raise an exception if `MultipleChoiceFilter` filter doesn't receive a list data type", "user": {"login": "lliendo", "id": 716082, "node_id": "MDQ6VXNlcjcxNjA4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/716082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lliendo", "html_url": "https://github.com/lliendo", "followers_url": "https://api.github.com/users/lliendo/followers", "following_url": "https://api.github.com/users/lliendo/following{/other_user}", "gists_url": "https://api.github.com/users/lliendo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lliendo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lliendo/subscriptions", "organizations_url": "https://api.github.com/users/lliendo/orgs", "repos_url": "https://api.github.com/users/lliendo/repos", "events_url": "https://api.github.com/users/lliendo/events{/privacy}", "received_events_url": "https://api.github.com/users/lliendo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T01:24:55Z", "updated_at": "2019-10-09T04:26:52Z", "closed_at": "2019-10-09T04:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was writing some unit tests against a filter. My filter consisted in some fields, but one of them (registration_state) was `MultipleChoiceFilter`. \r\n\r\nThe unit test I was writing was roughly:\r\n\r\n```python\r\ndef test_filter_users_by_status(self, _, registration_state, expected_users_count):\r\n    user_filter = UserFilter(\r\n        {\r\n            'registration_state': registration_state,\r\n        },\r\n        queryset=User.objects.all(),\r\n    )\r\n    ...\r\n    # Assert something about `user_filter.qs`\r\n```\r\n\r\nThe filter type doesn't run as expected as the type of the value for the \"registration_state\" needs to be a list. So the correct way to do this is: \r\n\r\n```python\r\ndef test_filter_users_by_status(self, _, registration_state, expected_users_count):\r\n    user_filter = UserFilter(\r\n        {\r\n            'registration_state': [registration_state],\r\n        },\r\n        queryset=User.objects.all(),\r\n    )\r\n    ...\r\n    # Assert something about `user_filter.qs`\r\n```\r\n\r\nWhat it would be tremendously helpful is to raise an exception in the first case so developers don't waste time trying to figure out why the filter doesn't bring the correct results just because the data type is incorrect (should be a list containing choices and not a string). \r\n\r\nSame suggestion could be applied to other types that don't expect simple data types as strings, ints, etc. \r\n\r\nIf this suggestion is not adequate there still should be a way to easily notify the user that is doing something wrong in these kind of situations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/315", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/315/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/315/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/315", "id": 494518585, "node_id": "MDU6SXNzdWU0OTQ1MTg1ODU=", "number": 315, "title": "How to get the filter class through model?", "user": {"login": "Scheinin", "id": 26054233, "node_id": "MDQ6VXNlcjI2MDU0MjMz", "avatar_url": "https://avatars2.githubusercontent.com/u/26054233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Scheinin", "html_url": "https://github.com/Scheinin", "followers_url": "https://api.github.com/users/Scheinin/followers", "following_url": "https://api.github.com/users/Scheinin/following{/other_user}", "gists_url": "https://api.github.com/users/Scheinin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Scheinin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Scheinin/subscriptions", "organizations_url": "https://api.github.com/users/Scheinin/orgs", "repos_url": "https://api.github.com/users/Scheinin/repos", "events_url": "https://api.github.com/users/Scheinin/events{/privacy}", "received_events_url": "https://api.github.com/users/Scheinin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-17T09:48:42Z", "updated_at": "2019-09-18T18:24:12Z", "closed_at": "2019-09-18T18:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't find an effective way. Has anyone implemented it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/314", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/314/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/314/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/314", "id": 488822848, "node_id": "MDU6SXNzdWU0ODg4MjI4NDg=", "number": 314, "title": "[resolved] typo in application code", "user": {"login": "mosesmc52", "id": 5233925, "node_id": "MDQ6VXNlcjUyMzM5MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5233925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mosesmc52", "html_url": "https://github.com/mosesmc52", "followers_url": "https://api.github.com/users/mosesmc52/followers", "following_url": "https://api.github.com/users/mosesmc52/following{/other_user}", "gists_url": "https://api.github.com/users/mosesmc52/gists{/gist_id}", "starred_url": "https://api.github.com/users/mosesmc52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mosesmc52/subscriptions", "organizations_url": "https://api.github.com/users/mosesmc52/orgs", "repos_url": "https://api.github.com/users/mosesmc52/repos", "events_url": "https://api.github.com/users/mosesmc52/events{/privacy}", "received_events_url": "https://api.github.com/users/mosesmc52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-09-03T21:02:35Z", "updated_at": "2019-09-04T20:58:38Z", "closed_at": "2019-09-04T20:43:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Th django-rest-framework-filters is not not working with my install of Django v.2.2.4. I have  djangorestframework-filters v 1.0.0.dev0 installed, python v. 3.7.4 . I believe I have everything installed as described in the instructions. I'm not sure this makes a difference, within the view I'm using the filter_class within generics.ListAPIView. What steps can I take to troubleshoot this issue?\r\n\r\nI'm testing using the Django Rest Framework UI. \r\n\r\nThanks,\r\n\r\nMoses\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/313", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/313/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/313/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/313", "id": 488579008, "node_id": "MDU6SXNzdWU0ODg1NzkwMDg=", "number": 313, "title": "Attribute error on FilterSet", "user": {"login": "uber1geek", "id": 8023116, "node_id": "MDQ6VXNlcjgwMjMxMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8023116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uber1geek", "html_url": "https://github.com/uber1geek", "followers_url": "https://api.github.com/users/uber1geek/followers", "following_url": "https://api.github.com/users/uber1geek/following{/other_user}", "gists_url": "https://api.github.com/users/uber1geek/gists{/gist_id}", "starred_url": "https://api.github.com/users/uber1geek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uber1geek/subscriptions", "organizations_url": "https://api.github.com/users/uber1geek/orgs", "repos_url": "https://api.github.com/users/uber1geek/repos", "events_url": "https://api.github.com/users/uber1geek/events{/privacy}", "received_events_url": "https://api.github.com/users/uber1geek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-03T12:35:49Z", "updated_at": "2019-09-04T05:37:03Z", "closed_at": "2019-09-04T02:47:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "> AttributeError: module 'django_filters.rest_framework.filters' has no attribute 'FilterSet'\r\n\r\n\r\n```from django_filters.rest_framework import FilterSet, filters```\r\n```\r\n \"djangorestframework-filters\": \r\n            \"version\": \"==1.0.0.dev0\"\r\n \"django-filter\": \r\n            \"version\": \"==2.2.0\"        \r\n\"django\": \r\n            \"version\": \"==2.2.5\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/310", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/310/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/310/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/310", "id": 481886714, "node_id": "MDU6SXNzdWU0ODE4ODY3MTQ=", "number": 310, "title": "Update Django Filter Docs", "user": {"login": "narendra-kumawat", "id": 39728695, "node_id": "MDQ6VXNlcjM5NzI4Njk1", "avatar_url": "https://avatars1.githubusercontent.com/u/39728695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narendra-kumawat", "html_url": "https://github.com/narendra-kumawat", "followers_url": "https://api.github.com/users/narendra-kumawat/followers", "following_url": "https://api.github.com/users/narendra-kumawat/following{/other_user}", "gists_url": "https://api.github.com/users/narendra-kumawat/gists{/gist_id}", "starred_url": "https://api.github.com/users/narendra-kumawat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narendra-kumawat/subscriptions", "organizations_url": "https://api.github.com/users/narendra-kumawat/orgs", "repos_url": "https://api.github.com/users/narendra-kumawat/repos", "events_url": "https://api.github.com/users/narendra-kumawat/events{/privacy}", "received_events_url": "https://api.github.com/users/narendra-kumawat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-17T13:34:19Z", "updated_at": "2019-08-20T10:10:30Z", "closed_at": "2019-08-19T16:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django Rest Filter Docs saying import `ComplexFilterBackend` that actually not exists in the installed `djangorestframework-filters` pip package", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/308", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/308/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/308/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/308", "id": 473459631, "node_id": "MDU6SXNzdWU0NzM0NTk2MzE=", "number": 308, "title": "lt gt", "user": {"login": "jmpmcmanus", "id": 495665, "node_id": "MDQ6VXNlcjQ5NTY2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/495665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmpmcmanus", "html_url": "https://github.com/jmpmcmanus", "followers_url": "https://api.github.com/users/jmpmcmanus/followers", "following_url": "https://api.github.com/users/jmpmcmanus/following{/other_user}", "gists_url": "https://api.github.com/users/jmpmcmanus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmpmcmanus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmpmcmanus/subscriptions", "organizations_url": "https://api.github.com/users/jmpmcmanus/orgs", "repos_url": "https://api.github.com/users/jmpmcmanus/repos", "events_url": "https://api.github.com/users/jmpmcmanus/events{/privacy}", "received_events_url": "https://api.github.com/users/jmpmcmanus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T17:24:38Z", "updated_at": "2019-07-26T18:10:33Z", "closed_at": "2019-07-26T18:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use lt and gt. My filter is:\r\n\r\n```python\r\nimport rest_framework_filters as filters\r\nfrom .models import testdata_Model\r\n\r\nclass TestdataFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = testdata_Model\r\n        fields = {\r\n            'concentrat':  ['exact', 'lt', 'gt', 'lte', 'gte']\r\n        }\r\n\r\n# view\r\nclass testdata_View(viewsets.ModelViewSet):\r\n    queryset = testdata_Model.objects.all()\r\n    serializer_class = testdata_Serializer\r\n    filter_class = TestdataFilter\r\n```\r\n\r\nwhen I try:\r\n\r\nhttp://localhost:8000/api/testdata_Model/?concentrat__gt=2\r\n\r\nit does not subset the data?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/307", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/307/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/307/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/307", "id": 473413349, "node_id": "MDU6SXNzdWU0NzM0MTMzNDk=", "number": 307, "title": "cannot import name 'QUERY_TERMS' again", "user": {"login": "jmpmcmanus", "id": 495665, "node_id": "MDQ6VXNlcjQ5NTY2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/495665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmpmcmanus", "html_url": "https://github.com/jmpmcmanus", "followers_url": "https://api.github.com/users/jmpmcmanus/followers", "following_url": "https://api.github.com/users/jmpmcmanus/following{/other_user}", "gists_url": "https://api.github.com/users/jmpmcmanus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmpmcmanus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmpmcmanus/subscriptions", "organizations_url": "https://api.github.com/users/jmpmcmanus/orgs", "repos_url": "https://api.github.com/users/jmpmcmanus/repos", "events_url": "https://api.github.com/users/jmpmcmanus/events{/privacy}", "received_events_url": "https://api.github.com/users/jmpmcmanus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T15:24:20Z", "updated_at": "2019-07-26T15:49:32Z", "closed_at": "2019-07-26T15:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I install djangorestframework_filters it installs django-filter==1.1,  uninstalling django-filter=2.0. Then when I attempt to import rest_framework_filters I get the following error message:\r\n\r\ncannot import name 'QUERY_TERMS' \r\n\r\nI get the same error when I try and import django-filter==1.1. Before I install djangorestframework_filters I am able to import django_filters=2.0.\r\n\r\nThe readme for djangorestframework_filters says it supports django-filter==2.0, why is it uninstalling it, and installing django-filter==1.1?\r\n\r\nThanks\r\nJim", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/305", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/305/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/305/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/305", "id": 468668005, "node_id": "MDU6SXNzdWU0Njg2NjgwMDU=", "number": 305, "title": "Complex Filters from APIView", "user": {"login": "Svenito", "id": 31278, "node_id": "MDQ6VXNlcjMxMjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/31278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Svenito", "html_url": "https://github.com/Svenito", "followers_url": "https://api.github.com/users/Svenito/followers", "following_url": "https://api.github.com/users/Svenito/following{/other_user}", "gists_url": "https://api.github.com/users/Svenito/gists{/gist_id}", "starred_url": "https://api.github.com/users/Svenito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Svenito/subscriptions", "organizations_url": "https://api.github.com/users/Svenito/orgs", "repos_url": "https://api.github.com/users/Svenito/repos", "events_url": "https://api.github.com/users/Svenito/events{/privacy}", "received_events_url": "https://api.github.com/users/Svenito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-16T13:52:30Z", "updated_at": "2020-03-11T07:01:16Z", "closed_at": "2019-07-16T18:39:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to add the complex filters to my view, but without success.\r\n\r\nMy Filter:\r\n\r\n```\r\nclass JobFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = Job\r\n        fields = {\r\n            'id': '__all__',\r\n        }\r\n```\r\n\r\nand my view (for get)\r\n\r\n```\r\nclass JobList(APIView):\r\n    filter_class = JobFilter\r\n    def get(self, request, format=None):\r\n        print(request.GET)\r\n        filter = JobFilter(request.GET, queryset=Job.objects.all())\r\n        print(filter.filter_queryset(request.GET))\r\n```\r\n\r\nBut the `filter.filter_queryset(request.GET)` always returns all objects and `filter.get_request_filters()` is an empty OrderedDict.\r\n\r\nI can't find any examples with using the complex filters with a basic APIView and am a bit stuck. I need the basic view as I need to override the GET and POST methods.\r\n\r\nOriginally I am returning the results with:\r\n\r\n```\r\njobs = Job.objects.all()\r\nserialiser = JobSerialiser(jobs, many=True)\r\nreturn Response(serialiser.data)\r\n```\r\n\r\nI'm reaching it via\r\n\r\n`localhost:8000/jobs?filters=(id__gt=3)`\r\n\r\nusing Postman\r\n\r\n[Django: 2.2.3 - DRFF: 1.0.0-dev0- Python 3.7.3]\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/299", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/299/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/299/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/299", "id": 440686782, "node_id": "MDU6SXNzdWU0NDA2ODY3ODI=", "number": 299, "title": "Build failing on master due to isort issues", "user": {"login": "moseb", "id": 47785526, "node_id": "MDQ6VXNlcjQ3Nzg1NTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/47785526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moseb", "html_url": "https://github.com/moseb", "followers_url": "https://api.github.com/users/moseb/followers", "following_url": "https://api.github.com/users/moseb/following{/other_user}", "gists_url": "https://api.github.com/users/moseb/gists{/gist_id}", "starred_url": "https://api.github.com/users/moseb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moseb/subscriptions", "organizations_url": "https://api.github.com/users/moseb/orgs", "repos_url": "https://api.github.com/users/moseb/repos", "events_url": "https://api.github.com/users/moseb/events{/privacy}", "received_events_url": "https://api.github.com/users/moseb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-06T12:56:52Z", "updated_at": "2019-09-06T22:58:12Z", "closed_at": "2019-06-06T03:17:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "This repository is currently marked \"build: failing\" because commit f4806f3a8daea2a18aff218874789d542f841ee2 broke the CI regarding isort: https://travis-ci.org/philipn/django-rest-framework-filters/jobs/503911313#L237\r\n\r\nWould be cool to be fixed. I can provide a pull request if needed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/298", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/298/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/298/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/298", "id": 440123921, "node_id": "MDU6SXNzdWU0NDAxMjM5MjE=", "number": 298, "title": "Documentation on URL format inaccurate for DRF", "user": {"login": "tonimarie", "id": 4583501, "node_id": "MDQ6VXNlcjQ1ODM1MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4583501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonimarie", "html_url": "https://github.com/tonimarie", "followers_url": "https://api.github.com/users/tonimarie/followers", "following_url": "https://api.github.com/users/tonimarie/following{/other_user}", "gists_url": "https://api.github.com/users/tonimarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonimarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonimarie/subscriptions", "organizations_url": "https://api.github.com/users/tonimarie/orgs", "repos_url": "https://api.github.com/users/tonimarie/repos", "events_url": "https://api.github.com/users/tonimarie/events{/privacy}", "received_events_url": "https://api.github.com/users/tonimarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-03T16:29:34Z", "updated_at": "2019-06-18T00:45:27Z", "closed_at": "2019-06-18T00:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was following your documentation and intending to use it with DRF.  The URL format used in your documentation for the RelatedFilter was not working (returned all records instead of filtered records)\r\n\r\nJust about when I was going to lose my mind, I was in my browseable API and DRF amazingly has a button to trigger the filters I'd now created... and by using that GUI I ended up getting the correct URL formatting.\r\n\r\nExample: \r\n\r\nYour format would say : \r\n...api/inventory/hardware?asset__status__exact=Excessed\r\n\r\nThe correct format based on using DRF's API gui:\r\napi/inventory/hardware?asset=&asset__status=Excessed\r\n\r\n\r\nI don't know if it's my version of the browseable API (using Core API), but this worked for me with FilterSet called as a filter_class in a ModelViewSet.\r\n\r\nEDIT: More accurate representation of the error and its result. I got two of my issues crossed the first time through.  More testing required to describe that issue.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/295", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/295/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/295/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/295", "id": 423626250, "node_id": "MDU6SXNzdWU0MjM2MjYyNTA=", "number": 295, "title": "ImportWarning on Python 2: missing __init__.py in templatetags/", "user": {"login": "benjaminrigaud", "id": 1983087, "node_id": "MDQ6VXNlcjE5ODMwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1983087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminrigaud", "html_url": "https://github.com/benjaminrigaud", "followers_url": "https://api.github.com/users/benjaminrigaud/followers", "following_url": "https://api.github.com/users/benjaminrigaud/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminrigaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminrigaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminrigaud/subscriptions", "organizations_url": "https://api.github.com/users/benjaminrigaud/orgs", "repos_url": "https://api.github.com/users/benjaminrigaud/repos", "events_url": "https://api.github.com/users/benjaminrigaud/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminrigaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-21T09:02:14Z", "updated_at": "2019-03-22T09:09:24Z", "closed_at": "2019-03-21T18:33:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/usr/lib/python2.7/importlib/__init__.py:37: ImportWarning:\r\n  \r\n  Not importing directory '/home/.../virtualenvs/.../local/lib/python2.7/site-packages/rest_framework_filters/templatetags': missing __init__.py\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```\r\n\r\nThe directory is empty.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/291", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/291/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/291/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/291", "id": 420711527, "node_id": "MDU6SXNzdWU0MjA3MTE1Mjc=", "number": 291, "title": "Fix Deprecation Warnings for v0.10.2", "user": {"login": "mikelane", "id": 6543713, "node_id": "MDQ6VXNlcjY1NDM3MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6543713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikelane", "html_url": "https://github.com/mikelane", "followers_url": "https://api.github.com/users/mikelane/followers", "following_url": "https://api.github.com/users/mikelane/following{/other_user}", "gists_url": "https://api.github.com/users/mikelane/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikelane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikelane/subscriptions", "organizations_url": "https://api.github.com/users/mikelane/orgs", "repos_url": "https://api.github.com/users/mikelane/repos", "events_url": "https://api.github.com/users/mikelane/events{/privacy}", "received_events_url": "https://api.github.com/users/mikelane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-13T20:46:20Z", "updated_at": "2019-03-14T04:47:31Z", "closed_at": "2019-03-14T04:06:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're on `djangorestframework-filters` 0.10.2 and we're getting many of these warnings:\r\n\r\n```\r\n...lib/python3.6/site-packages/rest_framework_filters/filterset.py:44: DeprecationWarning: `Filter.name` has been renamed to `Filter.field_name`. See: https://django-filter.readthedocs.io/en/develop/migration.html\r\n    opts.fields = {f.name: f.lookups or []}\r\n```\r\nAlso it happens on line 54 of that same file.\r\n\r\nAnd\r\n\r\n```\r\n.../lib/python3.6/site-packages/rest_framework_filters/filters.py:17: DeprecationWarning: `Filter.name` has been renamed to `Filter.field_name`. See: https://django-filter.readthedocs.io/en/develop/migration.html\r\n    super(AutoFilter, self).__init__(*args, **kwargs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/290", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/290/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/290/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/290", "id": 416530791, "node_id": "MDU6SXNzdWU0MTY1MzA3OTE=", "number": 290, "title": "Filtering fields order changes every time in swagger", "user": {"login": "seifElislam", "id": 24291860, "node_id": "MDQ6VXNlcjI0MjkxODYw", "avatar_url": "https://avatars3.githubusercontent.com/u/24291860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seifElislam", "html_url": "https://github.com/seifElislam", "followers_url": "https://api.github.com/users/seifElislam/followers", "following_url": "https://api.github.com/users/seifElislam/following{/other_user}", "gists_url": "https://api.github.com/users/seifElislam/gists{/gist_id}", "starred_url": "https://api.github.com/users/seifElislam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seifElislam/subscriptions", "organizations_url": "https://api.github.com/users/seifElislam/orgs", "repos_url": "https://api.github.com/users/seifElislam/repos", "events_url": "https://api.github.com/users/seifElislam/events{/privacy}", "received_events_url": "https://api.github.com/users/seifElislam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-03T15:55:02Z", "updated_at": "2019-06-18T00:47:01Z", "closed_at": "2019-06-18T00:47:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using **drf-yasg** swagger library. I wrote filter_class using  **django-rest-framework-filters filterset**\r\n. Every change in the code changes the filtering fields order in swagger.\r\n\r\n![screenshot from 2019-03-03 17-54-14](https://user-images.githubusercontent.com/24291860/53697765-6a2e5980-3ddd-11e9-9a34-5a3db7e66461.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/289", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/289/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/289/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/289", "id": 412934712, "node_id": "MDU6SXNzdWU0MTI5MzQ3MTI=", "number": 289, "title": "Ability to handle all lookups for a non-field filter", "user": {"login": "hemache", "id": 1282990, "node_id": "MDQ6VXNlcjEyODI5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1282990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemache", "html_url": "https://github.com/hemache", "followers_url": "https://api.github.com/users/hemache/followers", "following_url": "https://api.github.com/users/hemache/following{/other_user}", "gists_url": "https://api.github.com/users/hemache/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemache/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemache/subscriptions", "organizations_url": "https://api.github.com/users/hemache/orgs", "repos_url": "https://api.github.com/users/hemache/repos", "events_url": "https://api.github.com/users/hemache/events{/privacy}", "received_events_url": "https://api.github.com/users/hemache/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-21T13:52:16Z", "updated_at": "2019-02-21T22:04:00Z", "closed_at": "2019-02-21T21:52:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys,\r\n\r\nI need to define a filter (`full_name`) that will lookup multiple fields (`'first_name', 'middle_name', 'last_name'`) at once based on a supplied `lookup_expr`. \r\n\r\nfor example, `/api/users/?full_name__startswith=test` will result queryset `Q(first_name__startswith='test') | Q(middle_name__startswith='test') | Q(last_name__startswith='test')` \r\n\r\nis there a way to achieve this?\r\n\r\n```python\r\nFULL_NAME_FIELD_NAMES = ['first_name', 'middle_name', 'last_name']\r\n\r\nclass UserFilter(filters.FilterSet):\r\n    # lookup FULL_NAME_FIELD_NAMES\r\n    full_name = filters.CharFilter(method='filter_full_name', lookups=filters.ALL_LOOKUPS)\r\n\r\n    class Meta:\r\n        model = Expert\r\n        fields = {\r\n            'email': ['exact', 'iexact', 'contains', 'icontains', 'startswith', 'istartswith', 'endswith', 'iendswith'],\r\n            'full_name': filters.ALL_LOOKUPS,\r\n        }\r\n\r\n    def filter_full_name(self, qs, name, value):\r\n        lookups = Q()\r\n        for field_name in FULL_NAME_FIELD_NAMES:\r\n            # how to access `lookup_expr` inside filter method?\r\n            lookups |= Q(**{\r\n                LOOKUP_SEP.join([field_name, lookup_expr]): value\r\n            })\r\n        return qs.filter(lookups)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/284", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/284/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/284/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/284", "id": 408381130, "node_id": "MDU6SXNzdWU0MDgzODExMzA=", "number": 284, "title": "Raise exception for auto filters if Meta.model not provided", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-09T01:19:08Z", "updated_at": "2019-02-09T01:42:01Z", "closed_at": "2019-02-09T01:42:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If a user does not provide a `Meta.model`, auto filters are simply skipped over. If a user has declared auto/related filters, this should raise a `TypeError` or similar instead. \r\n\r\nhttps://github.com/philipn/django-rest-framework-filters/blob/f3e092cb1e1fe70fc5ae307f693a54cb10f127a3/rest_framework_filters/filterset.py#L36-L38", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/283", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/283/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/283/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/283", "id": 407537680, "node_id": "MDU6SXNzdWU0MDc1Mzc2ODA=", "number": 283, "title": "Add Python 3.7 support for Complex Ops", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-07T04:31:52Z", "updated_at": "2019-02-16T01:23:48Z", "closed_at": "2019-02-16T01:23:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Python 3.7 moved [[*]](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote) from RFC 2396 to RFC 3986, which adds ~ to the reserved character set. Tests/docs/code need to be updated to ensure that decoding both is handled appropriately. This may be purely a testing issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/280", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/280/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/280/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/280", "id": 400865210, "node_id": "MDU6SXNzdWU0MDA4NjUyMTA=", "number": 280, "title": "Empty param name causes IndexError", "user": {"login": "bewing", "id": 4759896, "node_id": "MDQ6VXNlcjQ3NTk4OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4759896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bewing", "html_url": "https://github.com/bewing", "followers_url": "https://api.github.com/users/bewing/followers", "following_url": "https://api.github.com/users/bewing/following{/other_user}", "gists_url": "https://api.github.com/users/bewing/gists{/gist_id}", "starred_url": "https://api.github.com/users/bewing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bewing/subscriptions", "organizations_url": "https://api.github.com/users/bewing/orgs", "repos_url": "https://api.github.com/users/bewing/repos", "events_url": "https://api.github.com/users/bewing/events{/privacy}", "received_events_url": "https://api.github.com/users/bewing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-18T19:49:32Z", "updated_at": "2019-08-17T03:16:39Z", "closed_at": "2019-02-08T00:00:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Passing an empty param name into a FilterSet causes an IndexError.  Example app and response below.\r\n```\r\nfrom django.contrib.auth.models import User, Group\r\nfrom django.urls import include, path\r\nfrom rest_framework import routers, serializers, viewsets\r\nfrom rest_framework_filters import FilterSet, ModelChoiceFilter\r\n\r\n\r\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\r\n    class Meta:\r\n        model = User\r\n        fields = ('url', 'username', 'email')\r\n\r\n\r\nclass UserFilter(FilterSet):\r\n    groups = ModelChoiceFilter(queryset=Group.objects.all())\r\n\r\n\r\nclass UserViewSet(viewsets.ModelViewSet):\r\n    queryset = User.objects.all().order_by('-date_joined')\r\n    serializer_class = UserSerializer\r\n    filter_class = UserFilter\r\n\r\nrouter = routers.DefaultRouter()\r\nrouter.register(r'users', UserViewSet)\r\n\r\nurlpatterns = [\r\n    path('', include(router.urls)),\r\n]\r\n```\r\n\r\n```\r\nRequest Method: | GET\r\n-- | --\r\nhttp://localhost:8000/users/?=0\r\n2.1.5\r\nIndexError\r\nstring index out of range\r\nTraceback (most recent call last):\r\n  File \"/home/bewing/django-rest-framework-filters/tests/test_filtering.py\", line 390, in test_empty_field\r\n    f = NoteFilter(GET, queryset=Note.objects.all())\r\n  File \"/home/bewing/django-rest-framework-filters/rest_framework_filters/filterset.py\", line 88, in __init__\r\n    self.base_filters = self.get_filter_subset(data or {}, relationship)\r\n  File \"/home/bewing/django-rest-framework-filters/rest_framework_filters/filterset.py\", line 121, in get_filter_subset\r\n    filter_names = {cls.get_param_filter_name(param, rel) for param in params}\r\n  File \"/home/bewing/django-rest-framework-filters/rest_framework_filters/filterset.py\", line 121, in <setcomp>\r\n    filter_names = {cls.get_param_filter_name(param, rel) for param in params}\r\n  File \"/home/bewing/django-rest-framework-filters/rest_framework_filters/filterset.py\", line 185, in get_param_filter_name\r\n    if param[-1] == '!' and param[:-1] in cls.base_filters:\r\nIndexError: string index out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/279", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/279/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/279/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/279", "id": 387570693, "node_id": "MDU6SXNzdWUzODc1NzA2OTM=", "number": 279, "title": "No examples", "user": {"login": "hasufell", "id": 1241845, "node_id": "MDQ6VXNlcjEyNDE4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1241845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hasufell", "html_url": "https://github.com/hasufell", "followers_url": "https://api.github.com/users/hasufell/followers", "following_url": "https://api.github.com/users/hasufell/following{/other_user}", "gists_url": "https://api.github.com/users/hasufell/gists{/gist_id}", "starred_url": "https://api.github.com/users/hasufell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hasufell/subscriptions", "organizations_url": "https://api.github.com/users/hasufell/orgs", "repos_url": "https://api.github.com/users/hasufell/repos", "events_url": "https://api.github.com/users/hasufell/events{/privacy}", "received_events_url": "https://api.github.com/users/hasufell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-05T02:51:01Z", "updated_at": "2019-02-14T04:40:39Z", "closed_at": "2019-02-14T04:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation makes little effort to give a comprehensive example and assumes people are familiar with django-filters and django-rest-framework. It gives pretty much no direction on how to create a simple dynamic REST query endpoint to your database model.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/278", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/278/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/278/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/278", "id": 386347627, "node_id": "MDU6SXNzdWUzODYzNDc2Mjc=", "number": 278, "title": "RelatedFilter 400s when Related Object not found by Id", "user": {"login": "ferrants", "id": 882183, "node_id": "MDQ6VXNlcjg4MjE4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/882183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrants", "html_url": "https://github.com/ferrants", "followers_url": "https://api.github.com/users/ferrants/followers", "following_url": "https://api.github.com/users/ferrants/following{/other_user}", "gists_url": "https://api.github.com/users/ferrants/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrants/subscriptions", "organizations_url": "https://api.github.com/users/ferrants/orgs", "repos_url": "https://api.github.com/users/ferrants/repos", "events_url": "https://api.github.com/users/ferrants/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-30T20:57:38Z", "updated_at": "2019-02-16T01:45:12Z", "closed_at": "2019-02-16T01:45:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Versions:\r\n```\r\ndjango-filter==2.0.0\r\ndjangorestframework-filters==1.0.0.dev0\r\n```\r\n\r\nIf I filter by a related object and that related object is not found, I get a 400 error and an error like:\r\n```\r\n{\r\n    'id': [{'manufacturer': 'Select a valid choice. That choice is not one of the available choices.', 'code': 'invalid_choice'}],\r\n}\r\n```\r\n\r\nI have a a FilterSet defined like:\r\n```\r\nclass ProductFilter(filters.FilterSet):\r\n    manufacturer = filters.RelatedFilter('ManufacturerFilter', queryset=Manufacturer.objects.all(), lookups='__all__')  # `lookups` also accepts a list\r\n\r\n    class Meta:\r\n        model = Product\r\n```\r\n\r\nIf I do a filter like:\r\n```\r\n/api/products/?manufacturer=100\r\n/api/products/?manufacturer__in=100,101\r\n\r\n# no error\r\n/api/products/?manufacturer__name=something_that_doesnt_exist\r\n```\r\n\r\nThis may also be a `django-filter` issue. Has anyone run into this and figured out how to get it to return a 200 with an empty list, like it did in previous versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/277", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/277/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/277/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/277", "id": 377130262, "node_id": "MDU6SXNzdWUzNzcxMzAyNjI=", "number": 277, "title": "whenever i include the package in installed apps i get this error", "user": {"login": "tluanga", "id": 1406978, "node_id": "MDQ6VXNlcjE0MDY5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1406978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tluanga", "html_url": "https://github.com/tluanga", "followers_url": "https://api.github.com/users/tluanga/followers", "following_url": "https://api.github.com/users/tluanga/following{/other_user}", "gists_url": "https://api.github.com/users/tluanga/gists{/gist_id}", "starred_url": "https://api.github.com/users/tluanga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tluanga/subscriptions", "organizations_url": "https://api.github.com/users/tluanga/orgs", "repos_url": "https://api.github.com/users/tluanga/repos", "events_url": "https://api.github.com/users/tluanga/events{/privacy}", "received_events_url": "https://api.github.com/users/tluanga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-04T07:49:35Z", "updated_at": "2018-11-05T20:56:01Z", "closed_at": "2018-11-05T20:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n(pro1-w0duipED) \u03bb python manage.py runserver\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x00000252A5E492F0>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\utils\\autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\utils\\autoreload.py\", line 248, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 337, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\utils\\autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\apps\\registry.py\", line 89, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\apps\\config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\rest_framework_filters\\__init__.py\", line 3, in <module>\r\n    from .filterset import FilterSet\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\rest_framework_filters\\filterset.py\", line 10, in <module>\r\n    from django_filters import filterset, rest_framework\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django_filters\\__init__.py\", line 7, in <module>\r\n    from .filterset import FilterSet\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django_filters\\filterset.py\", line 15, in <module>\r\n    from .filters import (\r\n  File \"C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django_filters\\filters.py\", line 9, in <module>\r\n    from django.db.models.sql.constants import QUERY_TERMS\r\nImportError: cannot import name 'QUERY_TERMS' from 'django.db.models.sql.constants' (C:\\Users\\tluanga\\.virtualenvs\\pro1-w0duipED\\lib\\site-packages\\django\\db\\models\\sql\\constants.py)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/276", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/276/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/276/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/276", "id": 368954427, "node_id": "MDU6SXNzdWUzNjg5NTQ0Mjc=", "number": 276, "title": "Complex filter returning all objects", "user": {"login": "ross-weir", "id": 29697678, "node_id": "MDQ6VXNlcjI5Njk3Njc4", "avatar_url": "https://avatars0.githubusercontent.com/u/29697678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ross-weir", "html_url": "https://github.com/ross-weir", "followers_url": "https://api.github.com/users/ross-weir/followers", "following_url": "https://api.github.com/users/ross-weir/following{/other_user}", "gists_url": "https://api.github.com/users/ross-weir/gists{/gist_id}", "starred_url": "https://api.github.com/users/ross-weir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ross-weir/subscriptions", "organizations_url": "https://api.github.com/users/ross-weir/orgs", "repos_url": "https://api.github.com/users/ross-weir/repos", "events_url": "https://api.github.com/users/ross-weir/events{/privacy}", "received_events_url": "https://api.github.com/users/ross-weir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-11T05:06:20Z", "updated_at": "2018-10-15T15:17:31Z", "closed_at": "2018-10-15T15:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. This is probably a mistake on my behalf but I'm having trouble getting complex filtering to return filtered items. I've searched the docs but haven't had any luck.\r\n\r\nI am using the following filter:\r\n```\r\n(count__lt=11) & (name__icontains=hat)\r\n%28count__lt%3D11%29%20%26%20%28name__icontains%3Dhat%29\r\n```\r\n\r\nIt seems to be encoded correctly because when I make a get request it returns all of the instances and when I put a error in the encoding I receive a error about the encoding.\r\n\r\nView:\r\n\r\n```\r\nclass ItemSetView(views.ModelViewSet):\r\n    permission_classes = [permissions.IsAuthenticated]\r\n    queryset = models.Item.objects.all()\r\n    serializer_class = serializers.ItemSerializer\r\n    filter_set = filters.ItemFilter\r\n```\r\n\r\nFilter:\r\n\r\n```\r\nclass ItemFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = Item\r\n        fields = {\"name\": [\"icontains\"], \"count\": [\"lt\", \"gt\", \"lte\", \"gte\", \"exact\"]}\r\n```\r\n\r\nPerhaps I need to add something to my url conf?\r\n```\r\nrouter.register(r\"items\", ItemViewSet, base_name=\"items\")\r\n...\r\npath(\"items/\", include(router.urls), name=\"m-items\"),\r\n```\r\n\r\nAny help or advice would be great. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/275", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/275/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/275/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/275", "id": 365839174, "node_id": "MDU6SXNzdWUzNjU4MzkxNzQ=", "number": 275, "title": "ImportError: cannot import name 'SortedDict' from 'django.utils.datastructures'", "user": {"login": "yohanesa", "id": 4374335, "node_id": "MDQ6VXNlcjQzNzQzMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4374335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yohanesa", "html_url": "https://github.com/yohanesa", "followers_url": "https://api.github.com/users/yohanesa/followers", "following_url": "https://api.github.com/users/yohanesa/following{/other_user}", "gists_url": "https://api.github.com/users/yohanesa/gists{/gist_id}", "starred_url": "https://api.github.com/users/yohanesa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yohanesa/subscriptions", "organizations_url": "https://api.github.com/users/yohanesa/orgs", "repos_url": "https://api.github.com/users/yohanesa/repos", "events_url": "https://api.github.com/users/yohanesa/events{/privacy}", "received_events_url": "https://api.github.com/users/yohanesa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-02T10:42:21Z", "updated_at": "2018-10-03T08:17:26Z", "closed_at": "2018-10-03T08:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nAfter installing and add to installed_apps, this error is shown.\r\nThe environment is in python 3.7.0 and Django 2.1 (2, 1, 0, 'final', 0)\r\n\r\nPlease help.\r\n\r\nFile \"/opt/app/proj.com/lib/python3.7/site-packages/rest_framework_filters/__init__.py\", line 3, in <module>\r\n    from .filterset import FilterSet\r\n  File \"/opt/app/proj.com/lib/python3.7/site-packages/rest_framework_filters/filterset.py\", line 12, in <module>\r\n    from django.utils.datastructures import SortedDict\r\nImportError: cannot import name 'SortedDict' from 'django.utils.datastructures' (/opt/app/proj.com/lib/python3.7/site-packages/django/utils/datastructures.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/274", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/274/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/274/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/274", "id": 363479528, "node_id": "MDU6SXNzdWUzNjM0Nzk1Mjg=", "number": 274, "title": "Django 2.1 works not fine", "user": {"login": "LQBing", "id": 6857508, "node_id": "MDQ6VXNlcjY4NTc1MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6857508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LQBing", "html_url": "https://github.com/LQBing", "followers_url": "https://api.github.com/users/LQBing/followers", "following_url": "https://api.github.com/users/LQBing/following{/other_user}", "gists_url": "https://api.github.com/users/LQBing/gists{/gist_id}", "starred_url": "https://api.github.com/users/LQBing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LQBing/subscriptions", "organizations_url": "https://api.github.com/users/LQBing/orgs", "repos_url": "https://api.github.com/users/LQBing/repos", "events_url": "https://api.github.com/users/LQBing/events{/privacy}", "received_events_url": "https://api.github.com/users/LQBing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T09:09:52Z", "updated_at": "2018-09-28T21:30:39Z", "closed_at": "2018-09-28T21:30:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was installed it with django 2.1, and alert: \r\n\r\nfrom django.db.models.sql.constants import QUERY_TERMS\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/273", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/273/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/273/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/273", "id": 362451295, "node_id": "MDU6SXNzdWUzNjI0NTEyOTU=", "number": 273, "title": "Create 1.0 prerelease", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-21T04:25:30Z", "updated_at": "2018-09-28T21:31:02Z", "closed_at": "2018-09-28T21:31:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are a few bugs remaining, but the major 1.0 blocker is the documentation overhaul. In the meantime there should be at least be a prerelease so users don't need to install from GitHub. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/272", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/272/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/272/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/272", "id": 359478021, "node_id": "MDU6SXNzdWUzNTk0NzgwMjE=", "number": 272, "title": "KeyError  on filter fields", "user": {"login": "HVaghinak", "id": 23260437, "node_id": "MDQ6VXNlcjIzMjYwNDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/23260437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HVaghinak", "html_url": "https://github.com/HVaghinak", "followers_url": "https://api.github.com/users/HVaghinak/followers", "following_url": "https://api.github.com/users/HVaghinak/following{/other_user}", "gists_url": "https://api.github.com/users/HVaghinak/gists{/gist_id}", "starred_url": "https://api.github.com/users/HVaghinak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HVaghinak/subscriptions", "organizations_url": "https://api.github.com/users/HVaghinak/orgs", "repos_url": "https://api.github.com/users/HVaghinak/repos", "events_url": "https://api.github.com/users/HVaghinak/events{/privacy}", "received_events_url": "https://api.github.com/users/HVaghinak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-12T13:22:36Z", "updated_at": "2018-09-12T16:38:21Z", "closed_at": "2018-09-12T16:38:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "After Upgrading **Django** from 1.11 to 2.0  I was required to upgrade django filters and django rest framework filters. After upgrading I'm getting KeyErrors on all  filter class fields, error occurred in django filter **firlterset.py** file in **filter_queryset** method , in django rest filters **filterset.py** file `self.filters` was overridden with requested_filters but in django_filters in **filter_queryset** method it  going through  `self.form.cleaned_data.items() ` and trying to get all fields from self.filters but because it is overridden it gives KeyError.\r\ndjango==2.1.1\r\ndjangorestframework-filters==0.10.2\r\ndjangorestframework==3.8.2\r\ndjango-filter==2.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/271", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/271/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/271/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/271", "id": 357608100, "node_id": "MDU6SXNzdWUzNTc2MDgxMDA=", "number": 271, "title": "Complex Operations", "user": {"login": "olasfar", "id": 1301822, "node_id": "MDQ6VXNlcjEzMDE4MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1301822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olasfar", "html_url": "https://github.com/olasfar", "followers_url": "https://api.github.com/users/olasfar/followers", "following_url": "https://api.github.com/users/olasfar/following{/other_user}", "gists_url": "https://api.github.com/users/olasfar/gists{/gist_id}", "starred_url": "https://api.github.com/users/olasfar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olasfar/subscriptions", "organizations_url": "https://api.github.com/users/olasfar/orgs", "repos_url": "https://api.github.com/users/olasfar/repos", "events_url": "https://api.github.com/users/olasfar/events{/privacy}", "received_events_url": "https://api.github.com/users/olasfar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-06T11:14:13Z", "updated_at": "2019-02-21T22:03:33Z", "closed_at": "2018-09-06T20:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nIs there a way to do some complex queries like for instance:\r\n```\r\n\"((model2__field_1=1) & (model2__field_2=2)) & ((model2__field_1=3) & (model2__field_2=4))\"?\r\n```\r\nThe Django's queryset should look like : \r\n```\r\nModel1.objects.filter(\r\n    model2__field_1=1,\r\n    model2__field_2=2\r\n).filter(\r\n    model2__field_1=3,\r\n    model2__field_2=4\r\n)\r\n```\r\nWhich will result in SQL to something like : \r\n```\r\nSELECT * FROM model_1\r\nINNER JOIN model_2 ON (...)\r\nINNER JOIN model_2 ON (...)\r\nWHERE (...)\r\n```\r\nOr should we write something manual with the `django-filter` library?\r\n\r\nPlease advice.\r\nThx", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/270", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/270/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/270/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/270", "id": 357498176, "node_id": "MDU6SXNzdWUzNTc0OTgxNzY=", "number": 270, "title": "DRF return empty list in results randomly, but count still correct", "user": {"login": "yothinix", "id": 689679, "node_id": "MDQ6VXNlcjY4OTY3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/689679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yothinix", "html_url": "https://github.com/yothinix", "followers_url": "https://api.github.com/users/yothinix/followers", "following_url": "https://api.github.com/users/yothinix/following{/other_user}", "gists_url": "https://api.github.com/users/yothinix/gists{/gist_id}", "starred_url": "https://api.github.com/users/yothinix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yothinix/subscriptions", "organizations_url": "https://api.github.com/users/yothinix/orgs", "repos_url": "https://api.github.com/users/yothinix/repos", "events_url": "https://api.github.com/users/yothinix/events{/privacy}", "received_events_url": "https://api.github.com/users/yothinix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-06T05:09:33Z", "updated_at": "2018-09-11T01:20:01Z", "closed_at": "2018-09-11T01:20:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I'm trying to use the custom filter it's working all the time in local development, but when we deploy to Production (Docker Swarm) We found an issue that sometimes the API response is returned empty results randomly, but the count is correct. Below is the example results from the API\r\n\r\nAPI Response\r\n\r\n```python\r\n{\r\n    'count': 1, \r\n    'next': 'http://localhost:8000/api/somethings/?email=test%40example.com&limit=0&offset=0', \r\n    'previous': None, \r\n    'results': []\r\n}\r\n```\r\n\r\nRight now we need to restart a uWSGI service (By restarting docker swarm for this service) and the problem is fixed for a moment and randomly happen again.\r\n\r\nHere is our DRF view\r\n\r\n```python\r\nclass SomeView(ListCreateAPIView):\r\n    queryset = SomeModel.objects.all()\r\n    serializer_class = SomeModelSerializer\r\n    filter_backends = (OrderingFilter, DjangoFilterBackend)\r\n    filter_class = CustomFilter\r\n    ordering = ('id',)\r\n\r\n    def list(self, request, *args, **kwargs):\r\n        if request.GET.get('all', None):\r\n            # Do something\r\n            serializer = self.get_serializer(queryset, many=True)\r\n            return Response(serializer.data)\r\n        else:\r\n            return super(SomeView, self).list(self, request, *args, **kwargs)\r\n```\r\n\r\nHere is our CustomFilter\r\n\r\n```python\r\nfrom django_filters.rest_framework.filters import CharFilter\r\nimport rest_framework_filters as filters\r\n\r\n\r\nclass CustomFilter(filters.FilterSet):\r\n    json_field_separator = '___'\r\n\r\n    json_field_is = CharFilter(name='json_field', method='filter_json_field')\r\n    json_field_is_not = CharFilter(name='json_field', method='exclude_json_field')\r\n\r\n    def split_lookup_field(self, value):\r\n        return dict(field.split(':') for field in value.split(self.json_field_separator))\r\n\r\n    def filter_json_field(self, queryset, name, value):\r\n        try:\r\n            lookup_field = self.split_lookup_field(value)\r\n            return queryset.filter(**lookup_field)\r\n        except (ValueError, FieldError):\r\n            return queryset.none()\r\n\r\n    def exclude_json_field(self, queryset, name, value):\r\n        try:\r\n            lookup_field = self.split_lookup_field(value)\r\n        except (ValueError, FieldError):\r\n            return queryset.none()\r\n\r\n        for query_arg, query_value in lookup_field.items():\r\n            queryset = queryset.exclude(**{query_arg: query_value})\r\n\r\n        return queryset\r\n\r\n    class Meta:\r\n        model = SomeModel\r\n        exclude = ['image', 'json_field']\r\n```\r\n\r\nHere is a version of the Package we use for this project\r\n\r\n```\r\nDjango==1.10.8\r\ndjangorestframework==3.6.4\r\ndjango-filter==1.0.4\r\ndjangorestframework-filters==0.10.2\r\n```\r\n\r\nWe suspect that this is possible related to **djangorestframework-filters** since the only change before this error occured is when we implement CustomFilter above, Any idea?\r\n\r\nUPDATE: The problem seems to be reduce, **but still occured** once we using `DjangoFilterBackend` from `rest_framework_filters.backends` package instead of `django_filters`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/269", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/269/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/269/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/269", "id": 350752003, "node_id": "MDU6SXNzdWUzNTA3NTIwMDM=", "number": 269, "title": "Filter the filters (ChoiceFields)", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-15T09:56:59Z", "updated_at": "2018-08-15T15:25:24Z", "closed_at": "2018-08-15T15:08:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I initiate a modelchoicefield filter, all the choices from the model will be poured into the dropdown, which isn't what we need. I need the choices to be based on request.user.XXXX. So far I have tried to rewrite:\r\n\r\n```python\r\n     def get_filters(self):\r\n         fs = super(ApplicationFilter, self).get_filters()\r\n         fs.filters['location'].field.queryset = fs.filters['location'].field.queryset.filter(user=self.request.user)\r\n         return fs\r\n```\r\n\r\nbut keep running into 'self' argument is missing.\r\n\r\n```python\r\n Unhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x000001FE23726AE8>\r\n Traceback (most recent call last):\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\utils\\autoreload.py\", line 225, in wrapper\r\n     fn(*args, **kwargs)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 120, in inner_run\r\n     self.check(display_num_errors=True)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\core\\management\\base.py\", line 364, in check\r\n     include_deployment_checks=include_deployment_checks,\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\core\\management\\base.py\", line 351, in _run_checks\r\n     return checks.run_checks(**kwargs)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\core\\checks\\registry.py\", line 73, in run_checks\r\n     new_errors = check(app_configs=app_configs)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 40, in check_url_namespaces_unique\r\n     all_namespaces = _load_all_namespaces(resolver)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\core\\checks\\urls.py\", line 57, in _load_all_namespaces\r\n     url_patterns = getattr(resolver, 'url_patterns', [])\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\utils\\functional.py\", line 36, in __get__\r\n     res = instance.__dict__[self.name] = self.func(instance)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\urls\\resolvers.py\", line 536, in url_patterns\r\n     patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\utils\\functional.py\", line 36, in __get__\r\n     res = instance.__dict__[self.name] = self.func(instance)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django\\urls\\resolvers.py\", line 529, in urlconf_module\r\n     return import_module(self.urlconf_name)\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n     return _bootstrap._gcd_import(name[level:], package, level)\r\n   File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n   File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n   File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n   File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n   File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n   File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n   File \"F:\\Python projects\\pe\\pe\\urls.py\", line 8, in <module>\r\n     from agency import views as agency_views\r\n   File \"F:\\Python projects\\pe\\agency\\views\\__init__.py\", line 3, in <module>\r\n     from .institution import *\r\n   File \"F:\\Python projects\\pe\\agency\\views\\institution.py\", line 11, in <module>\r\n     from agency.filters import *  # this includes models\r\n   File \"F:\\Python projects\\pe\\agency\\filters.py\", line 59, in <module>\r\n     class ApplicationFilter(django_filters.FilterSet):\r\n   File \"C:\\Users\\Exis\\Anaconda3\\envs\\pe\\lib\\site-packages\\django_filters\\filterset.py\", line 71, in __new__\r\n     new_class.base_filters = new_class.get_filters()\r\n TypeError: get_filters() missing 1 required positional argument: 'self'\r\n```\r\n\r\nCan someone tell me what's is happening here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/268", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/268/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/268/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/268", "id": 348408787, "node_id": "MDU6SXNzdWUzNDg0MDg3ODc=", "number": 268, "title": "Does not work with django-filters 2.0.0", "user": {"login": "efagerberg", "id": 7632073, "node_id": "MDQ6VXNlcjc2MzIwNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7632073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efagerberg", "html_url": "https://github.com/efagerberg", "followers_url": "https://api.github.com/users/efagerberg/followers", "following_url": "https://api.github.com/users/efagerberg/following{/other_user}", "gists_url": "https://api.github.com/users/efagerberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/efagerberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efagerberg/subscriptions", "organizations_url": "https://api.github.com/users/efagerberg/orgs", "repos_url": "https://api.github.com/users/efagerberg/repos", "events_url": "https://api.github.com/users/efagerberg/events{/privacy}", "received_events_url": "https://api.github.com/users/efagerberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-07T17:04:40Z", "updated_at": "2018-08-07T20:49:28Z", "closed_at": "2018-08-07T20:35:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.6\r\ndjango-filter 2.0\r\nDjango 2.0.8\r\ndjangorestframework 3.8.2\r\ndjangorestframework-filters 0.10.2\r\n\r\n```  File \"api/viewsets.py\", line 4, in <module>\r\n    from api.filters import (\r\n  File \"api/filters.py\", line 10, in <module>\r\n    class GarageFilter(filters.FilterSet):\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\", line 44, in __new__\r\n    opts.fields = {f.name: f.lookups or []}\r\nAttributeError: 'RelatedFilter' object has no attribute 'name'\r\n\r\nclass GarageFilter(filters.FilterSet):\r\n    cars = filters.RelatedFilter('api.filters.CarsFilter',\r\n                                     queryset=Cars.objects.all(),\r\n                                     distinct=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/267", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/267/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/267/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/267", "id": 347795103, "node_id": "MDU6SXNzdWUzNDc3OTUxMDM=", "number": 267, "title": "Module has no attribute ComplexFilterBackend", "user": {"login": "ross-weir", "id": 29697678, "node_id": "MDQ6VXNlcjI5Njk3Njc4", "avatar_url": "https://avatars0.githubusercontent.com/u/29697678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ross-weir", "html_url": "https://github.com/ross-weir", "followers_url": "https://api.github.com/users/ross-weir/followers", "following_url": "https://api.github.com/users/ross-weir/following{/other_user}", "gists_url": "https://api.github.com/users/ross-weir/gists{/gist_id}", "starred_url": "https://api.github.com/users/ross-weir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ross-weir/subscriptions", "organizations_url": "https://api.github.com/users/ross-weir/orgs", "repos_url": "https://api.github.com/users/ross-weir/repos", "events_url": "https://api.github.com/users/ross-weir/events{/privacy}", "received_events_url": "https://api.github.com/users/ross-weir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-06T06:30:26Z", "updated_at": "2018-08-06T18:15:27Z", "closed_at": "2018-08-06T18:15:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, \r\n\r\nThis is likely just configuration error but I have been completely unable to solve it.\r\n\r\nI'm getting the following error when trying to use the `django-rest-framework-filters` package:\r\n\r\n```\r\nImportError: Could not import 'rest_framework_filters.backends.ComplexFilterBackend' for API setting 'DEFAULT_FILTER_BACKENDS'. AttributeError: module 'rest_framework_filters.backends' has no attribute 'ComplexFilterBackend'.\r\n```\r\n\r\nI have installed the package `djangorestframework-filters = \"*\"` and it is present in my Pipfile. I also have all the other requirements installed as well as the correct versions.\r\n\r\nMy projects settings are configured as follows:\r\n\r\n```\r\nINSTALLED_APPS = [\r\n    \"accounts.apps.AccountsConfig\",\r\n    \"items.apps.ItemsConfig\",\r\n    \"rest_framework\",\r\n    \"django_filters\",\r\n    \"rest_framework_filters\",\r\n    \"django_extensions\",\r\n    \"django.contrib.admin\",\r\n    \"django.contrib.auth\",\r\n    \"django.contrib.contenttypes\",\r\n    \"django.contrib.sessions\",\r\n    \"django.contrib.messages\",\r\n    \"django.contrib.staticfiles\",\r\n]\r\n\r\nREST_FRAMEWORK = {\r\n    \"DEFAULT_FILTER_BACKENDS\": (\"rest_framework_filters.backends.ComplexFilterBackend\",)\r\n}\r\n```\r\nI have tried rearranging my installed apps in hopes that might have some affect but no luck (I'm kinda new to django and python :+1: )\r\n\r\nI am also able to open a shell and use what I think is other parts of the package except for `backends`.\r\n\r\nI am not trying to use the package yet. Just trying to get my project to run without this error. Any help would be greatly appreciated. Sorry for posting here as an issue, I hope to use your sweet looking package as soon as I get this cleared up! :)\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/266", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/266/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/266/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/266", "id": 346113053, "node_id": "MDU6SXNzdWUzNDYxMTMwNTM=", "number": 266, "title": "Serialize the possible values for a field", "user": {"login": "Sharlock93", "id": 3481015, "node_id": "MDQ6VXNlcjM0ODEwMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3481015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sharlock93", "html_url": "https://github.com/Sharlock93", "followers_url": "https://api.github.com/users/Sharlock93/followers", "following_url": "https://api.github.com/users/Sharlock93/following{/other_user}", "gists_url": "https://api.github.com/users/Sharlock93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sharlock93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sharlock93/subscriptions", "organizations_url": "https://api.github.com/users/Sharlock93/orgs", "repos_url": "https://api.github.com/users/Sharlock93/repos", "events_url": "https://api.github.com/users/Sharlock93/events{/privacy}", "received_events_url": "https://api.github.com/users/Sharlock93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-31T09:46:19Z", "updated_at": "2018-07-31T19:08:22Z", "closed_at": "2018-07-31T19:08:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been looking for this for sometime now I couldn't find any documentation on it, is it possible to do it?\r\nfor example if you override a viewsets list method which has a filterset class, and you write something like this\r\n`self.filterset_class.get_filters()['filed_name'].field.choices` \r\nit will return the possible values for that field, I was wondering if there is a more straight forward way for doing this? when you use DRF and add a filterset_class, it will add a filter button to the browseable API view so the functionality must be there, isn't there a way to access it more cleanly?\r\n\r\nor if FilterSet could for example add an extra action for the DRF router and it could make life easier when you try to build a frontend filtering system.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/265", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/265/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/265/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/265", "id": 345603715, "node_id": "MDU6SXNzdWUzNDU2MDM3MTU=", "number": 265, "title": "Fix crispy-forms template", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265155, "node_id": "MDU6TGFiZWw3MDI2NTE1NQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-30T04:04:14Z", "updated_at": "2019-08-17T02:42:32Z", "closed_at": "2019-06-18T00:32:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/261", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/261/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/261/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/261", "id": 344619536, "node_id": "MDU6SXNzdWUzNDQ2MTk1MzY=", "number": 261, "title": "Errors on ViewSets with no filterset_class provided", "user": {"login": "joshua-s", "id": 1479244, "node_id": "MDQ6VXNlcjE0NzkyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1479244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshua-s", "html_url": "https://github.com/joshua-s", "followers_url": "https://api.github.com/users/joshua-s/followers", "following_url": "https://api.github.com/users/joshua-s/following{/other_user}", "gists_url": "https://api.github.com/users/joshua-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshua-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshua-s/subscriptions", "organizations_url": "https://api.github.com/users/joshua-s/orgs", "repos_url": "https://api.github.com/users/joshua-s/repos", "events_url": "https://api.github.com/users/joshua-s/events{/privacy}", "received_events_url": "https://api.github.com/users/joshua-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-25T21:47:34Z", "updated_at": "2018-07-29T18:34:54Z", "closed_at": "2018-07-29T18:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Issue:\r\nThis line is causing ViewSets without a `filterset_class` to break: https://github.com/philipn/django-rest-framework-filters/blob/2fba26e4b9ca3cf129a880e6c3efe77461cea11b/rest_framework_filters/backends.py#L33\r\n\r\n### It returns:\r\n`TypeError: issubclass() arg 1 must be a class`\r\n\r\n## Example ViewSet from my project:\r\nI am using the `rest_framework_filters.backends.RestFrameworkFilterBackend` globally.\r\n```python\r\nclass SavedSearchViewSet(viewsets.ModelViewSet):\r\n    \"\"\"\r\n    View or edit saved searches.\r\n    \"\"\"\r\n    queryset = models.SavedSearch.objects.all()\r\n    serializer_class = serializers.SavedSearchSerializer\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/258", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/258/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/258/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/258", "id": 343726723, "node_id": "MDU6SXNzdWUzNDM3MjY3MjM=", "number": 258, "title": "v0.10.2.post0 release", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "philipn", "id": 96469, "node_id": "MDQ6VXNlcjk2NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/96469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipn", "html_url": "https://github.com/philipn", "followers_url": "https://api.github.com/users/philipn/followers", "following_url": "https://api.github.com/users/philipn/following{/other_user}", "gists_url": "https://api.github.com/users/philipn/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipn/subscriptions", "organizations_url": "https://api.github.com/users/philipn/orgs", "repos_url": "https://api.github.com/users/philipn/repos", "events_url": "https://api.github.com/users/philipn/events{/privacy}", "received_events_url": "https://api.github.com/users/philipn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "philipn", "id": 96469, "node_id": "MDQ6VXNlcjk2NDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/96469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipn", "html_url": "https://github.com/philipn", "followers_url": "https://api.github.com/users/philipn/followers", "following_url": "https://api.github.com/users/philipn/following{/other_user}", "gists_url": "https://api.github.com/users/philipn/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipn/subscriptions", "organizations_url": "https://api.github.com/users/philipn/orgs", "repos_url": "https://api.github.com/users/philipn/repos", "events_url": "https://api.github.com/users/philipn/events{/privacy}", "received_events_url": "https://api.github.com/users/philipn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-07-23T17:34:07Z", "updated_at": "2018-09-13T16:41:00Z", "closed_at": "2018-09-13T16:41:00Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @philipn. The 1.0 milestone is nearly ready - just working on docs. In the meantime, 0.10.x is not compatible with the latest 2.0 release of django-filter, so this sets the version to 1.x-compatible releases. \r\n\r\nI created a separate 0.10.x branch (see #257), which should have an already updated `setup.py` and changelog. Could you double check the branch and upload to PyPI? Thanks as always.\r\n\r\nRelease notes (`changelog.rst` already up-to-date):\r\n\r\n```\r\n* #253 Set django-filter version at 1.x-compatible releases.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/256", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/256/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/256/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/256", "id": 343685847, "node_id": "MDU6SXNzdWUzNDM2ODU4NDc=", "number": 256, "title": "KeyError when using django-filter>=2.0", "user": {"login": "florimondmanca", "id": 15911462, "node_id": "MDQ6VXNlcjE1OTExNDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/15911462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florimondmanca", "html_url": "https://github.com/florimondmanca", "followers_url": "https://api.github.com/users/florimondmanca/followers", "following_url": "https://api.github.com/users/florimondmanca/following{/other_user}", "gists_url": "https://api.github.com/users/florimondmanca/gists{/gist_id}", "starred_url": "https://api.github.com/users/florimondmanca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florimondmanca/subscriptions", "organizations_url": "https://api.github.com/users/florimondmanca/orgs", "repos_url": "https://api.github.com/users/florimondmanca/repos", "events_url": "https://api.github.com/users/florimondmanca/events{/privacy}", "received_events_url": "https://api.github.com/users/florimondmanca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T15:36:36Z", "updated_at": "2018-07-23T17:40:25Z", "closed_at": "2018-07-23T16:27:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Steps to Reproduce\r\n\r\nNote: the model I was using was replaced with a generic `MyModel` (for confidentiality concerns), so I have not run this code myself but hopefully it should be enough to reproduce the issue.\r\n\r\n```python\r\n# models.py\r\n\r\nclass MyModel(models.Model):\r\n    name = models.TextField()\r\n\r\n\r\n# serializers.py\r\n\r\nfrom rest_framework import serializers\r\n\r\nfrom .models import MyModel\r\n\r\nclass MyModelSerializer(serializers.ModelSerializer):\r\n\r\n    class Meta:\r\n        model = MyModel\r\n        fields = ('name',)\r\n\r\n\r\n# filters.py\r\n\r\nclass MyModelFilter(filters.FilterSet):\r\n\r\n    class Meta:\r\n        model = MyModel\r\n        fields = {\r\n            'name': ['exact'],\r\n        }\r\n\r\n\r\n# views.py\r\n\r\nfrom rest_framework import mixins\r\nfrom rest_framework_filters.backends import DjangoFilterBackend\r\n\r\nfrom .models import MyModel\r\nfrom .serializers import MyModelSerializer\r\nfrom .filters import MyModelFilter\r\n\r\nclass MyModelViewSet(mixins.ModelViewSet):\r\n\r\n    queryset = MyModel.objects.all()\r\n    serializer_class = MyModelSerializer\r\n\r\n    filter_backends = (DjangoFilterBackend,)\r\n    search_fields = ('name',)\r\n    filter_class = MyModelFilter\r\n\r\n\r\n# urls.py\r\n\r\nimport myapp.views\r\n\r\n...\r\nrouter.register('foo', myapp.views.MyModelViewSet)\r\n...\r\n```\r\n\r\nThen, in a test, performing:\r\n\r\n```python\r\nresponse = self.client.get('/foo/', data={'search': 'name'})\r\n```\r\n\r\nraises the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/app/tests/test_api.py\", line 156, in test_foo\r\n    response = self.client.get('/foo/', data={'search': 'name'})\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/test.py\", line 292, in get\r\n    response = super(APIClient, self).get(path, data=data, **extra)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/test.py\", line 209, in get\r\n    return self.generic('GET', path, **r)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/test.py\", line 238, in generic\r\n    method, path, data, content_type, secure, **extra)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/test/client.py\", line 416, in generic\r\n    return self.request(**r)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/test.py\", line 289, in request\r\n    return super(APIClient, self).request(**kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/test.py\", line 241, in request\r\n    request = super(APIRequestFactory, self).request(**kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/test/client.py\", line 501, in request\r\n    six.reraise(*exc_info)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/utils/six.py\", line 686, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/viewsets.py\", line 103, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 483, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 443, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 480, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py\", line 40, in list\r\n    queryset = self.filter_queryset(self.get_queryset())\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/generics.py\", line 152, in filter_queryset\r\n    queryset = backend().filter_queryset(self.request, queryset, self)\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/backends.py\", line 34, in filter_queryset\r\n    return super(DjangoFilterBackend, self).filter_queryset(request, queryset, view)\r\n  File \"/usr/local/lib/python3.6/site-packages/django_filters/rest_framework/backends.py\", line 96, in filter_queryset\r\n    return filterset.qs\r\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework_filters/filterset.py\", line 266, in qs\r\n    qs = super(FilterSet, self).qs\r\n  File \"/usr/local/lib/python3.6/site-packages/django_filters/filterset.py\", line 237, in qs\r\n    qs = self.filter_queryset(qs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django_filters/filterset.py\", line 224, in filter_queryset\r\n    queryset = self.filters[name].filter(queryset, value)\r\nKeyError: 'name'\r\n```\r\n\r\nPreviously, the `KeyError` was not raised and the filtering worked perfectly fine.\r\n\r\n## Environment\r\n\r\nDocker image: `python:3.6`\r\n\r\n## Possible Solution\r\n\r\nI am using `django-rest-framework-filters==0.10.2`.\r\n\r\nThe `setup.py` file in the repo states that it requires `django_filter>=1.0`.\r\n\r\n```python\r\ninstall_requires=[\r\n    'djangorestframework',\r\n    'django-filter>=1.0.0',\r\n],\r\n```\r\nSo, as `django-filter==2.0` was released recently, when installing requirements from scratch again today, it installed that new version and the bug started to occur.\r\n\r\nI was able to make it work again my explicitly stating `django-filter<2.0`, which installs `django-filter==1.1`. So it should be possible to quick-fix this by updating `install_requires` in `setup.py`, waiting for a release that supports `django-filter>=2.0`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/253", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/253/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/253/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/253", "id": 343159479, "node_id": "MDU6SXNzdWUzNDMxNTk0Nzk=", "number": 253, "title": "Incompatible with django-filter 2.x", "user": {"login": "kwigley", "id": 9877221, "node_id": "MDQ6VXNlcjk4NzcyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9877221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwigley", "html_url": "https://github.com/kwigley", "followers_url": "https://api.github.com/users/kwigley/followers", "following_url": "https://api.github.com/users/kwigley/following{/other_user}", "gists_url": "https://api.github.com/users/kwigley/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwigley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwigley/subscriptions", "organizations_url": "https://api.github.com/users/kwigley/orgs", "repos_url": "https://api.github.com/users/kwigley/repos", "events_url": "https://api.github.com/users/kwigley/events{/privacy}", "received_events_url": "https://api.github.com/users/kwigley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-20T15:52:52Z", "updated_at": "2018-07-23T16:40:39Z", "closed_at": "2018-07-21T00:06:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Discovered that using `djangorestframework-filters==0.10.2` with Python 2.7 led to:\r\n```\r\nFile \"/usr/local/lib/python2.7/site-packages/django_filters/__init__.py\", line 4, in <module>\r\n    from .filterset import FilterSet\r\nFile \"/usr/local/lib/python2.7/site-packages/django_filters/filterset.py\", line 184\r\n    def __init__(self, data=None, queryset=None, *, request=None, prefix=None):\r\n```\r\nTurns out that \r\n> [From Version 2.0 Django Filter is Python 3 only. If you need to support Python 2.7 use the version 1.1 release.](https://github.com/carltongibson/django-filter)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/238", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/238/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/238/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/238", "id": 340399906, "node_id": "MDU6SXNzdWUzNDAzOTk5MDY=", "number": 238, "title": "Support for Django 2.1", "user": {"login": "sassanh", "id": 1270688, "node_id": "MDQ6VXNlcjEyNzA2ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1270688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sassanh", "html_url": "https://github.com/sassanh", "followers_url": "https://api.github.com/users/sassanh/followers", "following_url": "https://api.github.com/users/sassanh/following{/other_user}", "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions", "organizations_url": "https://api.github.com/users/sassanh/orgs", "repos_url": "https://api.github.com/users/sassanh/repos", "events_url": "https://api.github.com/users/sassanh/events{/privacy}", "received_events_url": "https://api.github.com/users/sassanh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-11T20:50:32Z", "updated_at": "2018-07-15T02:04:15Z", "closed_at": "2018-07-13T15:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the main page of the repo and considering it's been inactive for a while I'm wondering if django 2.1 will be supported or not.\r\nCurrently it's raising this exception when used with django 2.1b1:\r\n```\r\nCould not import 'rest_framework_filters.backends.DjangoFilterBackend' for API setting 'DEFAULT_FILTER_BACKENDS'. ImportError: cannot import name 'QUERY_TERMS'.\r\n```\r\nAlso regarding this issue: https://github.com/philipn/django-rest-framework-filters/issues/179#issuecomment-325272715 that led me to use drf-filters in a big project I'm wondering what's the state of this project. Are there any plans to release version 1?\r\n\r\nThanks for the great work so far.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/237", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/237/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/237/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/237", "id": 337087685, "node_id": "MDU6SXNzdWUzMzcwODc2ODU=", "number": 237, "title": "query name different with field name", "user": {"login": "Guest007", "id": 147067, "node_id": "MDQ6VXNlcjE0NzA2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/147067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Guest007", "html_url": "https://github.com/Guest007", "followers_url": "https://api.github.com/users/Guest007/followers", "following_url": "https://api.github.com/users/Guest007/following{/other_user}", "gists_url": "https://api.github.com/users/Guest007/gists{/gist_id}", "starred_url": "https://api.github.com/users/Guest007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Guest007/subscriptions", "organizations_url": "https://api.github.com/users/Guest007/orgs", "repos_url": "https://api.github.com/users/Guest007/repos", "events_url": "https://api.github.com/users/Guest007/events{/privacy}", "received_events_url": "https://api.github.com/users/Guest007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-29T18:02:59Z", "updated_at": "2018-06-29T20:00:38Z", "closed_at": "2018-06-29T19:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "installs django-rest-framework-filters (fresh from github)\r\npython 3.6.5, django 2\r\nThis code is work. \r\n```python\r\nclass OrderFilter(filters.FilterSet):\r\n    user = filters.AllLookupsFilter(name='user')\r\n\r\n    class Meta:\r\n        model = Order\r\n        fields = ['user']\r\n```\r\n`/api/v1/orders/order/?user=1` - works great.\r\nbut I need to use `customer` in query instead of real model name `user`:\r\n`/api/v1/orders/order/?customer=1`\r\nI tried this:\r\n ```python\r\nclass OrderFilter(filters.FilterSet):\r\n    customer = filters.AllLookupsFilter(name='user')\r\n\r\n    class Meta:\r\n        model = Order\r\n        fields = ['customer']\r\n```\r\nAnd got:\r\n```\r\n    class OrderFilter(filters.FilterSet):\r\n  File \"/home/guest007/.pyenv/versions/3.6.5/envs/pex/src/djangorestframework-filters/rest_framework_filters/filterset.py\", line 21, in __new__\r\n    cls.expand_auto_filters(new_class)\r\n  File \"/home/guest007/.pyenv/versions/3.6.5/envs/pex/src/djangorestframework-filters/rest_framework_filters/filterset.py\", line 42, in expand_auto_filters\r\n    for gen_name, gen_f in new_class.get_filters().items():\r\n  File \"/home/guest007/.pyenv/versions/pex/lib/python3.6/site-packages/django_filters/filterset.py\", line 280, in get_filters\r\n    fields = cls.get_fields()\r\n  File \"/home/guest007/.pyenv/versions/3.6.5/envs/pex/src/djangorestframework-filters/rest_framework_filters/filterset.py\", line 88, in get_fields\r\n    fields[name] = utils.lookups_for_field(field)\r\n  File \"/home/guest007/.pyenv/versions/3.6.5/envs/pex/src/djangorestframework-filters/rest_framework_filters/utils.py\", line 31, in lookups_for_field\r\n    for expr, lookup in model_field.get_lookups().items():\r\nAttributeError: 'NoneType' object has no attribute 'get_lookups'\r\n```\r\nwhere I was mistaken?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/236", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/236/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/236/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/236", "id": 336841028, "node_id": "MDU6SXNzdWUzMzY4NDEwMjg=", "number": 236, "title": "Applying a FilterSet to an Annotated QuerySet?", "user": {"login": "ferrants", "id": 882183, "node_id": "MDQ6VXNlcjg4MjE4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/882183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrants", "html_url": "https://github.com/ferrants", "followers_url": "https://api.github.com/users/ferrants/followers", "following_url": "https://api.github.com/users/ferrants/following{/other_user}", "gists_url": "https://api.github.com/users/ferrants/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrants/subscriptions", "organizations_url": "https://api.github.com/users/ferrants/orgs", "repos_url": "https://api.github.com/users/ferrants/repos", "events_url": "https://api.github.com/users/ferrants/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrants/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-29T02:26:29Z", "updated_at": "2019-02-21T22:04:11Z", "closed_at": "2018-06-29T19:22:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi! I'm trying to apply a filter to an annotated queryset, like is done here:\r\nhttps://docs.djangoproject.com/en/2.0/topics/db/aggregation/#filtering-on-annotations\r\n\r\nSimilar to the snippet below, I'd like to make that `highly_rated` piece a FilterSet that picks up the request parameters\r\n```\r\nhighly_rated = Count('books', filter=Q(books__rating__gte=7))\r\nAuthor.objects.annotate(num_books=Count('books'), highly_rated_books=highly_rated)\r\n```\r\nI'd like to make that `highly_rated` piece a FilterSet that picks up the request queries. Something like:\r\n\r\n```\r\nclass MainFilter(FilterSet):\r\n    class Meta:\r\n        model = Author\r\n        fields = {\r\n            author: ['in', 'exact'],\r\n            genre: ['in', 'exact']\r\n        }\r\n\r\nclass AnnotatedFilter(FilterSet):\r\n    class Meta:\r\n        fields = {\r\n            'books__rating': ['gt', 'lt' ],\r\n        }\r\n\r\nclass MyView(ListApiView):\r\n    filter_class = AuthorFilter\r\n\r\n    def get_queryset(self):\r\n        annotated_filter = AnnotatedFilter(request) # how do I set up another filter based on the request?\r\n        Author.objects.annotate(num_books=Count('books'), FilterSet=annotated_filter) # how do I apply it to an annotated queryset?\r\n\r\n```\r\nAll so I can query something like:\r\n```\r\napi/authors/?genre=Fantasy&books__rating__gt=5\r\n```\r\nWhere one of the parameters executes against all the records and other params execute against the annotated part.\r\n\r\nAny help is greatly appreciated. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/235", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/235/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/235/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/235", "id": 335623622, "node_id": "MDU6SXNzdWUzMzU2MjM2MjI=", "number": 235, "title": "How can I filter fields related to itself?", "user": {"login": "aisabellafontes", "id": 3491032, "node_id": "MDQ6VXNlcjM0OTEwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3491032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aisabellafontes", "html_url": "https://github.com/aisabellafontes", "followers_url": "https://api.github.com/users/aisabellafontes/followers", "following_url": "https://api.github.com/users/aisabellafontes/following{/other_user}", "gists_url": "https://api.github.com/users/aisabellafontes/gists{/gist_id}", "starred_url": "https://api.github.com/users/aisabellafontes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aisabellafontes/subscriptions", "organizations_url": "https://api.github.com/users/aisabellafontes/orgs", "repos_url": "https://api.github.com/users/aisabellafontes/repos", "events_url": "https://api.github.com/users/aisabellafontes/events{/privacy}", "received_events_url": "https://api.github.com/users/aisabellafontes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-26T01:23:12Z", "updated_at": "2019-02-21T22:01:30Z", "closed_at": "2018-06-26T13:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I filter looking for a parent id (related to the same Model)\r\n\r\n```\r\nclass ListTypeItemFilterSet(filters.FilterSet):\r\n    category = filters.RelatedFilter(CategoryFilterSet,\r\n                                                     name='categories',\r\n                                                     queryset=Category.objects.all())\r\n\r\n    class Meta:\r\n        model = ListTypeItem\r\n        fields = ('id', 'category', 'label', 'details')\r\n\r\nclass CategoryFilterSet(filters.FilterSet):\r\n\r\n    class Meta:\r\n        model = Category\r\n        fields = ('id', 'label', 'parent')\r\n```\r\n\r\n\r\nE.g:\r\n\r\n```\r\n {\r\n        \"id\": 38,\r\n        \"label\": \"Lorem XYZ\",\r\n        \"details\": \"loren spisum\",\r\n         \"category\": {\r\n            \"id\": 5,\r\n            \"label\": \"Los Angeles\",\r\n            \"parent\": 1,\r\n            \"images\": null\r\n        }\r\n}\r\n\r\n**The Category Parent:**\r\n\r\n\"category\": {\r\n            \"id\": 1,\r\n            \"label\": \"Vacation\",\r\n            \"parent\": null,\r\n            \"images\": null\r\n        }\r\n```\r\n\r\nHow can be the query filtering?\r\n\r\n?category__parent", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/234", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/234/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/234/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/234", "id": 334245212, "node_id": "MDU6SXNzdWUzMzQyNDUyMTI=", "number": 234, "title": "Issue with RelatedFilter parameter name replacement", "user": {"login": "jsmedmar", "id": 8843150, "node_id": "MDQ6VXNlcjg4NDMxNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8843150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsmedmar", "html_url": "https://github.com/jsmedmar", "followers_url": "https://api.github.com/users/jsmedmar/followers", "following_url": "https://api.github.com/users/jsmedmar/following{/other_user}", "gists_url": "https://api.github.com/users/jsmedmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsmedmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsmedmar/subscriptions", "organizations_url": "https://api.github.com/users/jsmedmar/orgs", "repos_url": "https://api.github.com/users/jsmedmar/repos", "events_url": "https://api.github.com/users/jsmedmar/events{/privacy}", "received_events_url": "https://api.github.com/users/jsmedmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-06-20T20:52:47Z", "updated_at": "2019-08-17T02:40:28Z", "closed_at": "2019-08-08T01:17:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey!\r\n\r\nWhen I declare a related filter as `individual`, an extra query parameter `indivpkual` is generated.\r\n\r\nWhat's happening is that `id`  is being replaced with `pk`. I think this is coming from:\r\n\r\nhttps://github.com/philipn/django-rest-framework-filters/blob/a8fb84ba2c71b5881637157990202d8db72c428b/rest_framework_filters/filterset.py#L45\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/233", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/233/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/233/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/233", "id": 333940033, "node_id": "MDU6SXNzdWUzMzM5NDAwMzM=", "number": 233, "title": "Automatic Filter Negation/Exclusion not working", "user": {"login": "pavankumar1792", "id": 9476365, "node_id": "MDQ6VXNlcjk0NzYzNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9476365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavankumar1792", "html_url": "https://github.com/pavankumar1792", "followers_url": "https://api.github.com/users/pavankumar1792/followers", "following_url": "https://api.github.com/users/pavankumar1792/following{/other_user}", "gists_url": "https://api.github.com/users/pavankumar1792/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavankumar1792/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavankumar1792/subscriptions", "organizations_url": "https://api.github.com/users/pavankumar1792/orgs", "repos_url": "https://api.github.com/users/pavankumar1792/repos", "events_url": "https://api.github.com/users/pavankumar1792/events{/privacy}", "received_events_url": "https://api.github.com/users/pavankumar1792/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-20T06:27:22Z", "updated_at": "2018-06-21T13:57:31Z", "closed_at": "2018-06-21T08:15:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried filter using negation(/api/trackcampaigns/?asin1__iexact!=B018XN37AU)  as described in the docs but it is not working. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/232", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/232/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/232/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/232", "id": 326924541, "node_id": "MDU6SXNzdWUzMjY5MjQ1NDE=", "number": 232, "title": "Caching of FilterSet cause problems with ForeignKey in v0.10.2", "user": {"login": "dzwiedziu-nkg", "id": 1639316, "node_id": "MDQ6VXNlcjE2MzkzMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1639316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzwiedziu-nkg", "html_url": "https://github.com/dzwiedziu-nkg", "followers_url": "https://api.github.com/users/dzwiedziu-nkg/followers", "following_url": "https://api.github.com/users/dzwiedziu-nkg/following{/other_user}", "gists_url": "https://api.github.com/users/dzwiedziu-nkg/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzwiedziu-nkg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzwiedziu-nkg/subscriptions", "organizations_url": "https://api.github.com/users/dzwiedziu-nkg/orgs", "repos_url": "https://api.github.com/users/dzwiedziu-nkg/repos", "events_url": "https://api.github.com/users/dzwiedziu-nkg/events{/privacy}", "received_events_url": "https://api.github.com/users/dzwiedziu-nkg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-28T07:25:54Z", "updated_at": "2018-07-15T20:34:18Z", "closed_at": "2018-07-15T20:34:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "In v0.10.2 of `filterset.py` you have:\r\n```\r\n        # attempt to retrieve related filterset subset from the cache\r\n        key = cls.cache_key(filter_names)\r\n        subset_class = cls.cache_get(key)\r\n\r\n        # if no cached subset, then derive base_filters and create new subset\r\n        if subset_class is not None:\r\n            return subset_class\r\n```\r\n\r\nWhen I have:\r\n```\r\nclass ParentOne(models.Model):\r\n    ...\r\n\r\nclass ParentTwo(models.Model):\r\n    ...\r\n\r\nclass ChildOne(models.Model):\r\n    parent = models.ForeignKey(ParentOne)\r\n    ...\r\n\r\nclass ChildTwo(models.Model):\r\n    parent = models.ForeignKey(ParentTwo)\r\n    ...\r\n```\r\n\r\nAnd `views.py`:\r\n```\r\nclass ChildOne(viewsets.ModelViewSet):\r\n    queryset = ChildOne.objects.all()\r\n    filter_fields = {'parent': ['exact']}\r\n    ...\r\n\r\nclass ChildTwo(viewsets.ModelViewSet):\r\n    queryset = ChildTwo.objects.all()\r\n    filter_fields = {'parent': ['exact']}\r\n    ...\r\n```\r\n\r\nThen when I make `GET /api/child_one/?parent=3` and after it I make `GET /api/child_two/?parent=10` then I get `ValueError: Cannot query \"ParentOne(...)\": Must be \"ParentTwo\" instance.` because botch subsets in cache have the same name. When I comment caching of subsets its works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/231", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/231/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/231/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/231", "id": 326857276, "node_id": "MDU6SXNzdWUzMjY4NTcyNzY=", "number": 231, "title": "Relationship filtering not working or only working one time", "user": {"login": "jdlovins", "id": 14537284, "node_id": "MDQ6VXNlcjE0NTM3Mjg0", "avatar_url": "https://avatars1.githubusercontent.com/u/14537284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdlovins", "html_url": "https://github.com/jdlovins", "followers_url": "https://api.github.com/users/jdlovins/followers", "following_url": "https://api.github.com/users/jdlovins/following{/other_user}", "gists_url": "https://api.github.com/users/jdlovins/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdlovins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdlovins/subscriptions", "organizations_url": "https://api.github.com/users/jdlovins/orgs", "repos_url": "https://api.github.com/users/jdlovins/repos", "events_url": "https://api.github.com/users/jdlovins/events{/privacy}", "received_events_url": "https://api.github.com/users/jdlovins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-27T22:41:43Z", "updated_at": "2018-07-15T20:35:57Z", "closed_at": "2018-07-15T20:35:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nTrying to get this working since it would save me a lot of time and redundant calls for IDs. I might be doing something completely wrong but it seems like on every restart it works 1 time before just ignoring the filter.\r\n\r\nTo give a brief overview of the structure (or https://git.resurfed.xyz/Resurfed/timer-web/tree/zones/maps ):\r\n\r\n# requirements.txt\r\n```\r\nastroid==1.6.3\r\ncolorama==0.3.9\r\ndj-database-url==0.5.0\r\nDjango==2.0.5\r\ndjango-filter==2.0.0.dev1\r\ndjangorestframework==3.8.2\r\ndjangorestframework-filters==git+https://github.com/philipn/django-rest-framework-filters.git\r\ngunicorn==19.8.1\r\nisort==4.3.4\r\nlazy-object-proxy==1.3.1\r\nmccabe==0.6.1\r\npep8==1.7.1\r\npsycopg2==2.7.4\r\npylint==1.8.4\r\npytz==2018.4\r\nsix==1.11.0\r\nwhitenoise==3.3.1\r\nwrapt==1.10.11\r\n```\r\n\r\n# settings.py\r\n```\r\n'DEFAULT_FILTER_BACKENDS': (\r\n        'rest_framework_filters.backends.RestFrameworkFilterBackend',\r\n    ),\r\n```\r\n\r\n# models.py\r\n\r\n```python\r\nclass Map(models.Model):\r\n    \"\"\" Map model \"\"\"\r\n    name = models.CharField(unique=True, max_length=50)\r\n\r\n    author = models.ForeignKey(\r\n        Author,\r\n        on_delete=models.SET_NULL,\r\n        blank=True,\r\n        null=True\r\n    )\r\n\r\n    last_played = models.DateTimeField(default=now, blank=True)\r\n    added = models.DateTimeField(default=now, blank=True)\r\n    hours_played = models.FloatField()\r\n\r\nclass Course(models.Model):\r\n    \"\"\" Course model \"\"\"\r\n    map = models.ForeignKey(Map, on_delete=models.CASCADE)\r\n\r\n    author = models.ForeignKey(\r\n        Author,\r\n        on_delete=models.SET_NULL,\r\n        blank=True,\r\n        null=True\r\n    )\r\n\r\n    difficulty = models.SmallIntegerField(blank=True, default=0)\r\n    checkpoints = models.SmallIntegerField()\r\n\r\n    priority = models.ForeignKey(\r\n        Priority,\r\n        on_delete=models.DO_NOTHING,\r\n        blank=True,\r\n        null=True\r\n    )\r\n\r\n    behavior = models.ForeignKey(\r\n        Behavior,\r\n        on_delete=models.DO_NOTHING,\r\n        blank=True,\r\n        null=True\r\n    )\r\n\r\nclass Zone(models.Model):\r\n    \"\"\" Zone model \"\"\"\r\n    course = models.ForeignKey(Course, on_delete=models.CASCADE)\r\n    start = models.CharField(max_length=60)\r\n    end = models.CharField(max_length=60)\r\n\r\n```\r\n# views.py\r\n\r\n```python\r\nclass MapList(generics.ListCreateAPIView):\r\n    queryset = Map.objects.all()\r\n    serializer_class = MapSerializer\r\n    filter_class = MapFilter\r\n\r\nclass CourseList(generics.ListCreateAPIView):\r\n    queryset = Course.objects.all()\r\n    serializer_class = CourseSerializer\r\n    filter_class = CourseFilter\r\n\r\nclass ZoneList(generics.ListCreateAPIView):\r\n    queryset = Zone.objects.all()\r\n    serializer_class = ZoneSerializer\r\n    filter_class = ZoneFilter\r\n```\r\n# filters.py\r\n```python\r\nimport rest_framework_filters as filters\r\nfrom .models import Map, Course, Zone\r\n\r\n\r\nclass MapFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = Map\r\n        fields = {'name': ['exact', 'contains']}\r\n\r\n\r\nclass CourseFilter(filters.FilterSet):\r\n    map = filters.RelatedFilter(MapFilter, field_name=\"map\", queryset=Map.objects.all())\r\n\r\n    class Meta:\r\n        model = Course\r\n        fields = {'map': ['exact', 'in']}\r\n\r\n\r\nclass ZoneFilter(filters.FilterSet):\r\n    course = filters.RelatedFilter(CourseFilter, field_name=\"course\", queryset=Course.objects.all())\r\n\r\n    class Meta:\r\n        model = Zone\r\n        fields = {\r\n            'course': ['exact', 'in']\r\n        }\r\n\r\n```\r\n\r\nI want to be able to call\r\n/maps/zones?course__map__name=my_name\r\n\r\nto return all of the zones associated with the map. The zones are directly tied to courses which then are then tied to a map.\r\n\r\nIf i restart the django process it will work one time and only return the appropriate object(s), but if i refresh it will basically just ignore the filter and act like it doesn't exist.\r\n\r\nSorry if i am missing something very obvious!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/230", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/230/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/230/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/230", "id": 324215972, "node_id": "MDU6SXNzdWUzMjQyMTU5NzI=", "number": 230, "title": "AttributeError: 'NoneType' object has no attribute 'override_filters'", "user": {"login": "iwaszko", "id": 1711875, "node_id": "MDQ6VXNlcjE3MTE4NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1711875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iwaszko", "html_url": "https://github.com/iwaszko", "followers_url": "https://api.github.com/users/iwaszko/followers", "following_url": "https://api.github.com/users/iwaszko/following{/other_user}", "gists_url": "https://api.github.com/users/iwaszko/gists{/gist_id}", "starred_url": "https://api.github.com/users/iwaszko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iwaszko/subscriptions", "organizations_url": "https://api.github.com/users/iwaszko/orgs", "repos_url": "https://api.github.com/users/iwaszko/repos", "events_url": "https://api.github.com/users/iwaszko/events{/privacy}", "received_events_url": "https://api.github.com/users/iwaszko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T23:07:41Z", "updated_at": "2018-07-15T20:30:04Z", "closed_at": "2018-07-15T20:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might be doing something wrong but my setup seems very simple:\r\n- I'm using the latest version of `django-rest-framework-filters` (installed with pip from github, which also installs `django-filter` in version 2.0.0.dev1)\r\n- `django-rest-framework` version 3.8.2, `django` version 1.11.12\r\n- in settings, I have:\r\n```\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_FILTER_BACKENDS': [\r\n        'rest_framework_filters.backends.RestFrameworkFilterBackend',\r\n    ],\r\n}\r\n```\r\nand for each `ViewSet` without `filter_fields` defined I'm getting the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \".../python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \".../python3.6/site-packages/django/core/handlers/base.py\", line 217, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \".../python3.6/site-packages/django/core/handlers/base.py\", line 215, in _get_response\r\n    response = response.render()\r\n  File \".../python3.6/site-packages/django/template/response.py\", line 107, in render\r\n    self.content = self.rendered_content\r\n  File \".../python3.6/site-packages/rest_framework/response.py\", line 72, in rendered_content\r\n    ret = renderer.render(self.data, accepted_media_type, context)\r\n  File \".../python3.6/site-packages/rest_framework/renderers.py\", line 724, in render\r\n    context = self.get_context(data, accepted_media_type, renderer_context)\r\n  File \".../python3.6/site-packages/rest_framework/renderers.py\", line 701, in get_context\r\n    'filter_form': self.get_filter_form(data, view, request),\r\n  File \".../python3.6/site-packages/rest_framework/renderers.py\", line 635, in get_filter_form\r\n    html = backend().to_html(request, queryset, view)\r\n  File \".../python3.6/site-packages/rest_framework_filters/backends.py\", line 48, in to_html\r\n    return super(RestFrameworkFilterBackend, self).to_html(request, queryset, view)\r\n  File \".../python3.6/site-packages/django_filters/rest_framework/backends.py\", line 60, in to_html\r\n    filter_class = self.get_filter_class(view, queryset)\r\n  File \".../python3.6/site-packages/rest_framework_filters/backends.py\", line 36, in get_filter_class\r\n    filter_class.override_filters = noop\r\nAttributeError: 'NoneType' object has no attribute 'override_filters'\r\n```\r\n\r\nThe `get_filter_class` method of `DjangoFilterBackend` class in `django_filters/rest_framework/backends.py` may actually return `None` in cases when `filter_class` and `filter_fileds` are both not defined.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/229", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/229/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/229/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/229", "id": 323039593, "node_id": "MDU6SXNzdWUzMjMwMzk1OTM=", "number": 229, "title": "ComplexFilter with python 2.7", "user": {"login": "amcorreia", "id": 1193473, "node_id": "MDQ6VXNlcjExOTM0NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1193473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amcorreia", "html_url": "https://github.com/amcorreia", "followers_url": "https://api.github.com/users/amcorreia/followers", "following_url": "https://api.github.com/users/amcorreia/following{/other_user}", "gists_url": "https://api.github.com/users/amcorreia/gists{/gist_id}", "starred_url": "https://api.github.com/users/amcorreia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amcorreia/subscriptions", "organizations_url": "https://api.github.com/users/amcorreia/orgs", "repos_url": "https://api.github.com/users/amcorreia/repos", "events_url": "https://api.github.com/users/amcorreia/events{/privacy}", "received_events_url": "https://api.github.com/users/amcorreia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-15T01:56:38Z", "updated_at": "2019-02-21T22:01:05Z", "closed_at": "2018-05-15T02:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to use ComplexFilter but I can't upgrade right now my project to python 3, is there possible to use OR in filter in v0.10.2 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/228", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/228/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/228/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/228", "id": 321449504, "node_id": "MDU6SXNzdWUzMjE0NDk1MDQ=", "number": 228, "title": "Add additional example to Complex querystring encoding", "user": {"login": "crintus", "id": 8260732, "node_id": "MDQ6VXNlcjgyNjA3MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8260732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crintus", "html_url": "https://github.com/crintus", "followers_url": "https://api.github.com/users/crintus/followers", "following_url": "https://api.github.com/users/crintus/following{/other_user}", "gists_url": "https://api.github.com/users/crintus/gists{/gist_id}", "starred_url": "https://api.github.com/users/crintus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crintus/subscriptions", "organizations_url": "https://api.github.com/users/crintus/orgs", "repos_url": "https://api.github.com/users/crintus/repos", "events_url": "https://api.github.com/users/crintus/events{/privacy}", "received_events_url": "https://api.github.com/users/crintus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-09T06:44:12Z", "updated_at": "2019-02-09T03:41:21Z", "closed_at": "2019-02-09T03:41:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/philipn/django-rest-framework-filters#complex-querystring-encoding\r\n\r\nThe part about Complex querystring encoding is not very clear from the perspective of being used in an API. While the final line `Set as the value to the complex filter param (default: filters).` does explain to add the encoded complex querystring to the `filter` param, it is easily missed.\r\n\r\nI suggest just adding a sentence below to outline this with an example url showing how it is used in total.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/227", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/227/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/227/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/227", "id": 316918980, "node_id": "MDU6SXNzdWUzMTY5MTg5ODA=", "number": 227, "title": "AllLookupsFilter by default for specific model field", "user": {"login": "Eloi-Marin", "id": 33829722, "node_id": "MDQ6VXNlcjMzODI5NzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/33829722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eloi-Marin", "html_url": "https://github.com/Eloi-Marin", "followers_url": "https://api.github.com/users/Eloi-Marin/followers", "following_url": "https://api.github.com/users/Eloi-Marin/following{/other_user}", "gists_url": "https://api.github.com/users/Eloi-Marin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eloi-Marin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eloi-Marin/subscriptions", "organizations_url": "https://api.github.com/users/Eloi-Marin/orgs", "repos_url": "https://api.github.com/users/Eloi-Marin/repos", "events_url": "https://api.github.com/users/Eloi-Marin/events{/privacy}", "received_events_url": "https://api.github.com/users/Eloi-Marin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-23T17:59:41Z", "updated_at": "2018-04-26T14:15:29Z", "closed_at": "2018-04-26T14:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n\r\nI'd like to do something like:\r\n\r\n```python\r\nclass OrdersFilter(filters.FilterSet):\r\n   class Meta:\r\n      model = OrderView\r\n      fields = '__all__'\r\n\r\n   @classmethod\r\n   def filter_for_lookup(cls, f, lookup_type):\r\n      if isinstance(f, models.FloatField):\r\n         return filters.AllLookupsFilter, {}\r\n```\r\n\r\nbut it is not working :S Is there any reason for that ? I am doing the same for DateFields in order to activare range filtering for any date and it works well.\r\n\r\n```python\r\n        if isinstance(f, models.DateField):\r\n            return DateRangeRangeFilter, {'lookup_expr': 'range'}\r\n        if isinstance(f, models.CharField):\r\n            return ChoicesInFilter, {'lookup_expr': 'in'}\r\n```\r\n\r\nAlso, would there be a way to set the allowed lookup_expr for AllLookupsFilter, something like\r\n\r\n```python\r\n        if isinstance(f, models.FloatField):\r\n             return filters.AllLookupsFilter, {'lookup_expr': ['gt','lt','gte','lte','exact']}\r\n```\r\n\r\nThanks!!\r\n\r\n----\r\n\r\n(@rpkilby) edited for formatting", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/226", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/226/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/226/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/226", "id": 313606176, "node_id": "MDU6SXNzdWUzMTM2MDYxNzY=", "number": 226, "title": "ImportError: cannot import name 'QUERY_TERMS'", "user": {"login": "l25359423", "id": 16286461, "node_id": "MDQ6VXNlcjE2Mjg2NDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/16286461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l25359423", "html_url": "https://github.com/l25359423", "followers_url": "https://api.github.com/users/l25359423/followers", "following_url": "https://api.github.com/users/l25359423/following{/other_user}", "gists_url": "https://api.github.com/users/l25359423/gists{/gist_id}", "starred_url": "https://api.github.com/users/l25359423/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l25359423/subscriptions", "organizations_url": "https://api.github.com/users/l25359423/orgs", "repos_url": "https://api.github.com/users/l25359423/repos", "events_url": "https://api.github.com/users/l25359423/events{/privacy}", "received_events_url": "https://api.github.com/users/l25359423/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-12T07:24:07Z", "updated_at": "2019-02-09T03:41:21Z", "closed_at": "2019-02-09T03:41:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x105813b70>\r\nTraceback (most recent call last):\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/core/management/commands/runserver.py\", line 110, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/utils/autoreload.py\", line 248, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/core/management/__init__.py\", line 337, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/apps/registry.py\", line 89, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/Users/liuxiaoshuai/tmp/django/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/rest_framework_filters/__init__.py\", line 3, in <module>\r\n    from .filterset import FilterSet\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/rest_framework_filters/filterset.py\", line 10, in <module>\r\n    from django_filters import filterset, rest_framework\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django_filters/__init__.py\", line 7, in <module>\r\n    from .filterset import FilterSet\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django_filters/filterset.py\", line 15, in <module>\r\n    from .filters import (\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django_filters/filters.py\", line 9, in <module>\r\n    from django.db.models.sql.constants import QUERY_TERMS\r\nImportError: cannot import name 'QUERY_TERMS'\r\n```\r\npython3.6\r\ndjango2.0.4\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/225", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/225/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/225/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/225", "id": 313289995, "node_id": "MDU6SXNzdWUzMTMyODk5OTU=", "number": 225, "title": "ComplexFIlterBackend Unable to parse querystring. Decoded", "user": {"login": "radiegtya", "id": 2161622, "node_id": "MDQ6VXNlcjIxNjE2MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2161622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radiegtya", "html_url": "https://github.com/radiegtya", "followers_url": "https://api.github.com/users/radiegtya/followers", "following_url": "https://api.github.com/users/radiegtya/following{/other_user}", "gists_url": "https://api.github.com/users/radiegtya/gists{/gist_id}", "starred_url": "https://api.github.com/users/radiegtya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radiegtya/subscriptions", "organizations_url": "https://api.github.com/users/radiegtya/orgs", "repos_url": "https://api.github.com/users/radiegtya/repos", "events_url": "https://api.github.com/users/radiegtya/events{/privacy}", "received_events_url": "https://api.github.com/users/radiegtya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-11T11:50:02Z", "updated_at": "2019-02-21T22:04:27Z", "closed_at": "2018-04-11T12:06:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I am running this filter\r\n\r\n```\r\nhttp://localhost:8000/api/units/?filters=(name=gram&code=gr) | (name=k)\r\n```\r\n\r\nthe result is like this\r\n```\r\n{\r\n    \"filters\": [\r\n        \"Unable to parse querystring. Decoded: '(name=gram'.\"\r\n    ]\r\n}\r\n```\r\n\r\nPlease help, btw the units collection have code, and name fields.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/224", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/224/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/224/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/224", "id": 313262793, "node_id": "MDU6SXNzdWUzMTMyNjI3OTM=", "number": 224, "title": "Already using 0.10.2 but latest class like RestFrameworkFilterBackend and ComplexFilterBackend Not Found", "user": {"login": "radiegtya", "id": 2161622, "node_id": "MDQ6VXNlcjIxNjE2MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2161622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radiegtya", "html_url": "https://github.com/radiegtya", "followers_url": "https://api.github.com/users/radiegtya/followers", "following_url": "https://api.github.com/users/radiegtya/following{/other_user}", "gists_url": "https://api.github.com/users/radiegtya/gists{/gist_id}", "starred_url": "https://api.github.com/users/radiegtya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radiegtya/subscriptions", "organizations_url": "https://api.github.com/users/radiegtya/orgs", "repos_url": "https://api.github.com/users/radiegtya/repos", "events_url": "https://api.github.com/users/radiegtya/events{/privacy}", "received_events_url": "https://api.github.com/users/radiegtya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-11T10:23:19Z", "updated_at": "2018-04-11T11:28:15Z", "closed_at": "2018-04-11T11:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was Already using 0.10.2 but latest class like RestFrameworkFilterBackend and ComplexFilterBackend Not Found. What am I doing wrong? Anyway if I import\r\n\r\n```python\r\nfrom rest_framework_filters import backends\r\n\r\n#this is known (which is in docs, this is old version)\r\nbackends.DjangoFilterBackend\r\n\r\n#this is not working\r\nbackends.RestFrameworkFilterBackend\r\n\r\n#this is also not working\r\nbackends.ComplexFilterBackend\r\n```\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/223", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/223/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/223/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/223", "id": 309400241, "node_id": "MDU6SXNzdWUzMDk0MDAyNDE=", "number": 223, "title": "Provide ability to not include filters on ModelViewSet.get", "user": {"login": "efagerberg", "id": 7632073, "node_id": "MDQ6VXNlcjc2MzIwNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7632073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efagerberg", "html_url": "https://github.com/efagerberg", "followers_url": "https://api.github.com/users/efagerberg/followers", "following_url": "https://api.github.com/users/efagerberg/following{/other_user}", "gists_url": "https://api.github.com/users/efagerberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/efagerberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efagerberg/subscriptions", "organizations_url": "https://api.github.com/users/efagerberg/orgs", "repos_url": "https://api.github.com/users/efagerberg/repos", "events_url": "https://api.github.com/users/efagerberg/events{/privacy}", "received_events_url": "https://api.github.com/users/efagerberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-28T14:48:02Z", "updated_at": "2018-03-29T02:35:35Z", "closed_at": "2018-03-28T20:05:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed when setting up a filter with all lookup fields on a viewset that all the filters end up in the `get` method. These filters are most likely useless for gets and should not be included as parameters.\r\n\r\n```\r\nclass Person(filters.FilterSet):\r\n\r\n    class Meta:\r\n        model = Node\r\n        fields = {\r\n            'id': '__all__',\r\n            'name': '__all__',\r\n        }\r\n```\r\nA serializer like this\r\n```\r\nclass PersonSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Person\r\n        fields = ('id', 'name')\r\n```\r\n\r\nand finally a viewset like this\r\n```\r\nclass PersonViewSet(viewsets.ReadOnlyModelViewSet):\r\n\r\n    queryset = Person.objects.all()\r\n    serializer_class = PersonSerializer\r\n    filter_class = PersonFilter\r\n```\r\n\r\nIf I register this to my urls I would get a route for a list view and a get similar to this `api/person/` and `api/person/{id}`\r\n\r\nAnd if I go to say swagger and check the get Person API out I would notice that I have filter options for the get like this screenshot.\r\n![screen shot 2018-03-28 at 11 48 44 am](https://user-images.githubusercontent.com/7632073/38040681-077df360-327e-11e8-83a7-3c237c90d6b2.png)\r\n\r\nThe issue here is, get requires an id and you usually do not need more than that, so these filter options are superfluous.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/222", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/222/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/222/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/222", "id": 301153584, "node_id": "MDU6SXNzdWUzMDExNTM1ODQ=", "number": 222, "title": "Using RelatedFilter with name skipping a relationship doesn't seem to work", "user": {"login": "drewbrew", "id": 7773256, "node_id": "MDQ6VXNlcjc3NzMyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7773256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbrew", "html_url": "https://github.com/drewbrew", "followers_url": "https://api.github.com/users/drewbrew/followers", "following_url": "https://api.github.com/users/drewbrew/following{/other_user}", "gists_url": "https://api.github.com/users/drewbrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbrew/subscriptions", "organizations_url": "https://api.github.com/users/drewbrew/orgs", "repos_url": "https://api.github.com/users/drewbrew/repos", "events_url": "https://api.github.com/users/drewbrew/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-28T19:33:22Z", "updated_at": "2018-03-02T13:01:25Z", "closed_at": "2018-03-02T12:16:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "TLDR: when using a `RelatedFilter` with `name='other_model__field'`, the related filter's attributes don't appear to be honored.\r\n\r\nExample test case at https://github.com/drewbrew/related-filter-test.\r\n\r\n## models.py\r\n\r\n```python\r\nfrom django.db import models\r\n\r\n\r\nclass Author(models.Model):\r\n    name = models.CharField(max_length=200)\r\n\r\n\r\nclass Book(models.Model):\r\n    title = models.CharField(max_length=50)\r\n    author = models.ForeignKey(Author, models.DO_NOTHING, related_name='books')\r\n\r\n    class Meta:\r\n        unique_together = (('title', 'author'), )\r\n\r\n\r\nclass Chapter(models.Model):\r\n    title = models.CharField(max_length=50)\r\n    chapter_number = models.PositiveSmallIntegerField()\r\n    book = models.ForeignKey(Book, models.DO_NOTHING, related_name='chapters')\r\n    text = models.TextField()\r\n\r\n    class Meta:\r\n        unique_together = (('book', 'chapter_number'), )\r\n```\r\n\r\n## filters.py\r\n\r\n```python\r\nfrom rest_framework_filters import RelatedFilter\r\nfrom rest_framework_filters.filterset import FilterSet\r\n\r\nfrom relatedtest import models\r\n\r\n\r\nclass AuthorFilter(FilterSet):\r\n    class Meta:\r\n        model = models.Author\r\n        fields = ['id', 'name']\r\n\r\n\r\nclass ChapterFilter(FilterSet):\r\n    author = RelatedFilter(\r\n        AuthorFilter,\r\n        name='book__author',\r\n        queryset=models.Author.objects.all(),\r\n    )\r\n\r\n    class Meta:\r\n        model = models.Chapter\r\n        fields = ['id', 'title', 'chapter_number', 'author']\r\n```\r\n\r\n# Expected behavior\r\n\r\nI should be able to filter chapters by `author__name__icontains=smith` and get only chapters by authors who have `smith` in their name (case-insensitive) (i.e. `manage.py test` succeeds)\r\n\r\n# Actual behavior\r\n\r\nI get all chapters instead (i.e. `manage.py test` fails on `test_filtered_list()`)\r\n\r\n# Environment\r\n- Ubuntu 17.10 artful and 16.04 xenial, both amd64\r\n- Tested on PostgreSQL and SQLite\r\n- Django 2.0.2\r\n- django-filter 1.1.0\r\n- djangorestframework 3.7.7\r\n- djangorestframework-filters 0.10.2\r\n- pytz 2018.3\r\n\r\nAny help would be greatly appreciated!\r\n\r\nThis package has been a seriously big help, so I also wanted to say thank you for your work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/221", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/221/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/221/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/221", "id": 290875796, "node_id": "MDU6SXNzdWUyOTA4NzU3OTY=", "number": 221, "title": "Timestamp comparisons not working for date querystring values", "user": {"login": "nhaggmark", "id": 5544806, "node_id": "MDQ6VXNlcjU1NDQ4MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5544806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhaggmark", "html_url": "https://github.com/nhaggmark", "followers_url": "https://api.github.com/users/nhaggmark/followers", "following_url": "https://api.github.com/users/nhaggmark/following{/other_user}", "gists_url": "https://api.github.com/users/nhaggmark/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhaggmark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhaggmark/subscriptions", "organizations_url": "https://api.github.com/users/nhaggmark/orgs", "repos_url": "https://api.github.com/users/nhaggmark/repos", "events_url": "https://api.github.com/users/nhaggmark/events{/privacy}", "received_events_url": "https://api.github.com/users/nhaggmark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-23T15:18:42Z", "updated_at": "2019-02-21T21:59:32Z", "closed_at": "2018-01-24T15:48:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings!\r\n\r\nI was just implementing a set of filters for a couple of timestamp fields in our system and I noticed that I could not get the gt, gte, lt, lte filters to work when plain dates are passed into the url.\r\n\r\nExample:\r\n\r\n>     class Meta:\r\n>         model = Foo\r\n>         fields = {\r\n>             'my_date': ('exact', 'gt', 'gte', 'lt', 'lte', ),\r\n>         }\r\n\r\nIf I use this querystring:\r\n\r\n> ?my_date__gt=2016-11-24T08:41:17\r\n\r\nI get the following whereclause added to my ORM query (Postgres):\r\n\r\n> \"my_date\" > '2016-11-24T08:41:17'::timestamp)\r\n\r\nThis is the expected behavior, however, if I use this querystring:\r\n\r\n> ?my_date__gt=2016-11-24\r\n\r\nI don't get any kind of error, it literally just doesn't execute a query to retrieve records at all. It returns an empty record set every time.  If I then use a conventional definition of a django timestamp filter with the same querystring value:\r\n\r\n> import django_filters\r\n> my_date__gt = django_filters.DateTimeFilter(name=\"my_date\", lookup_expr='gt')\r\n\r\nI get the expected whereclause in my query of: \r\n\r\n> \"my_date\" > '2016-11-24T00:00:00'::timestamp)\r\n\r\nIn my experience, the typical behavior for filtering timestamp fields from date values is to implicitly convert the date to a timestamp.  Am I doing something incorrectly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/213", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/213/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/213/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/213", "id": 287488557, "node_id": "MDU6SXNzdWUyODc0ODg1NTc=", "number": 213, "title": "Get queryset from RelatedFilter after it was applied?", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-10T16:08:48Z", "updated_at": "2018-01-11T09:03:44Z", "closed_at": "2018-01-10T19:11:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to get the filtered queryset from a related filter? \r\n\r\nSay I have models:\r\n\r\n```python\r\nclass A(models.Model):\r\n    field = models.CharField()\r\n\r\n\r\nclass B(models.Model):\r\n    a = models.ForeignKey(A)\r\n```\r\nand set up filtering for them\r\n\r\n```python\r\nclass AFilter(filters.FilterSet):\r\n    class Meta:\r\n        fields = ('field',)\r\n\r\n\r\nclass BFilter(filters.FilterSet):\r\n    a = filters.RelatedFilter(AFilter, queryset=A.objects.all())\r\n\r\n    class Meta:\r\n        fields = ('a',)\r\n```\r\nAnd use these in a view:\r\n\r\n```python\r\nb_qs = BFilter({'a__field': 'foo'}).qs\r\n```\r\n\r\nI was wondering wether there was anyway to get the `A` queryset from the `BFilter` as if I was doing \r\n```python\r\na_qs = AFilter({'field': 'foo'}).qs\r\n```\r\nwithout having to resort to removing `'a__'` from all keys in the query param dict.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/211", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/211/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/211/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/211", "id": 285212688, "node_id": "MDU6SXNzdWUyODUyMTI2ODg=", "number": 211, "title": "ComplexFilterBackend usage", "user": {"login": "fsaina", "id": 9042798, "node_id": "MDQ6VXNlcjkwNDI3OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9042798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fsaina", "html_url": "https://github.com/fsaina", "followers_url": "https://api.github.com/users/fsaina/followers", "following_url": "https://api.github.com/users/fsaina/following{/other_user}", "gists_url": "https://api.github.com/users/fsaina/gists{/gist_id}", "starred_url": "https://api.github.com/users/fsaina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fsaina/subscriptions", "organizations_url": "https://api.github.com/users/fsaina/orgs", "repos_url": "https://api.github.com/users/fsaina/repos", "events_url": "https://api.github.com/users/fsaina/events{/privacy}", "received_events_url": "https://api.github.com/users/fsaina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-30T17:04:26Z", "updated_at": "2017-12-30T17:20:32Z", "closed_at": "2017-12-30T17:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "The \"old\" docs describe the Complex Operations how-to. I would like to use that but there is no mention what version supports them. The new docs do not mention such functionality. What versions do i need to install in order to use the Complex Operations part ? For what i see you dropped support for that in the new 1.0 version. \r\n\r\nEDIT: Sorry -- just seen It's a fresh feature. never-mind :)\r\nBtw, great library!  \ud83d\udc4d ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/209", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/209/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/209/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/209", "id": 284739039, "node_id": "MDU6SXNzdWUyODQ3MzkwMzk=", "number": 209, "title": "Possibility to make the root of RelatedFilter accept comma separated values", "user": {"login": "sassanh", "id": 1270688, "node_id": "MDQ6VXNlcjEyNzA2ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1270688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sassanh", "html_url": "https://github.com/sassanh", "followers_url": "https://api.github.com/users/sassanh/followers", "following_url": "https://api.github.com/users/sassanh/following{/other_user}", "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions", "organizations_url": "https://api.github.com/users/sassanh/orgs", "repos_url": "https://api.github.com/users/sassanh/repos", "events_url": "https://api.github.com/users/sassanh/events{/privacy}", "received_events_url": "https://api.github.com/users/sassanh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-27T15:00:56Z", "updated_at": "2017-12-27T20:03:27Z", "closed_at": "2017-12-27T20:03:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose that I have this filter class:\r\n```\r\nclass SomeFilter(filters.FilterSet):\r\n    related = filters.RelatedFilter(RelatedFilter, queryset=Related.objects.all())\r\n```\r\nis it possible to query related itself like this:\r\n```\r\n/api/some/?related=4,5\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/207", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/207/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/207/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/207", "id": 284195927, "node_id": "MDU6SXNzdWUyODQxOTU5Mjc=", "number": 207, "title": "Filtering on a through model doesn't work as expected?", "user": {"login": "RobinRamael", "id": 127796, "node_id": "MDQ6VXNlcjEyNzc5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/127796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobinRamael", "html_url": "https://github.com/RobinRamael", "followers_url": "https://api.github.com/users/RobinRamael/followers", "following_url": "https://api.github.com/users/RobinRamael/following{/other_user}", "gists_url": "https://api.github.com/users/RobinRamael/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobinRamael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobinRamael/subscriptions", "organizations_url": "https://api.github.com/users/RobinRamael/orgs", "repos_url": "https://api.github.com/users/RobinRamael/repos", "events_url": "https://api.github.com/users/RobinRamael/events{/privacy}", "received_events_url": "https://api.github.com/users/RobinRamael/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-22T15:58:46Z", "updated_at": "2017-12-30T05:16:01Z", "closed_at": "2017-12-30T05:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\n\r\nI have two models: `Medium` and `Hashtag`, which are in a m2m relation with each other. `Medium` also points to another model, `Card`.  \r\n\r\nI'm writing an endpoint that now returns the most used hashtags for mediums corresponding to a certain set of filters and trying to do this with `rest_framework_filters.FilterSet`. \r\n\r\nTo achieve this, I'm trying to apply a `FilterSet` on a subquery on the m2m through model:\r\n\r\n```python\r\n\r\nclass MediumFilter(filters.FilterSet):\r\n\r\n    class Meta:\r\n        model = Medium\r\n        fields = {'card': ['exact'], 'published_at': ['lte', 'gte', 'date']}\r\n\r\n\r\nclass MediumHashtagsFilter(filters.FilterSet):\r\n    medium = filters.RelatedFilter(MediumFilter, queryset=Medium.objects.all())\r\n\r\n    class Meta:\r\n        model = Medium.hashtags.through\r\n        fields = ['medium', 'medium__card', 'medium__published_at']  # this works for card, but not published_at\r\n\r\n\r\nclass MostUsedHashtagsViewSet(ReadOnlyModelViewSet):\r\n    permission_classes = (StaffPermission,)\r\n    serializer_class = MostUsedHashtagSerializer\r\n    pagination_class = None\r\n    subquery_filter_class = MediumHashtagsFilter\r\n    limit = 10\r\n\r\n    def get_queryset(self):\r\n\r\n        subquery_filter = self.subquery_filter_class(self.request.query_params)\r\n\r\n        # if not subquery_filter.is_valid():  # unrelated, maybe, but this raises AttributeError: 'MediumHashtagsFilter' object has no attribute 'is_valid'\r\n        if not subquery_filter.form.is_valid() or not subquery_filter.is_bound:\r\n            raise Exception\r\n\r\n        subquery = Subquery(\r\n            subquery_filter.qs\r\n            .filter(hashtag_id=OuterRef('pk'))\r\n            .values('hashtag')\r\n            .annotate(count=Count('medium'))\r\n            .values('count'))\r\n\r\n        queryset = (\r\n            Hashtag.objects\r\n            .annotate(usage_count=Expr(subquery, output_field=IntegerField()))\r\n            .exclude(usage_count=None)\r\n            .order_by('-usage_count', 'name')\r\n        )\r\n\r\n        return queryset[:self.limit]\r\n```\r\nAnd then calling the endpoint in a test like so:\r\n\r\n```python\r\n# this works as expected:\r\n        response = self.client.get(self.url, {\r\n            # 'medium__card': self.card.pk,\r\n            'medium__card': self.card.pk\r\n        })\r\n\r\n# but this doesn't:\r\n\r\n        response = self.client.get(self.url, {\r\n            'medium__published_at__gte': '2017-01-14',\r\n            'medium__published_at__lte': '2017-01-24'\r\n        })\r\n```\r\nGetting the filtering by `Card` working required a weird fields declaration in the `FilterSet`s `Meta`, but I got it working. Now I'd like to also be able to filter on a range of datetimes, but my solution doesn't work for this case.\r\n\r\nAfter tearing my hair out for the last day, I came to this solution with the `__` in the `Meta.fields` declaration by stepping through the code and seeing that while the data for the underlying form was mapping the filter value to `medium__card`,  the only field name being looked for was `medium` itself. Is this a bug? Am I abusing the library? Am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/206", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/206/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/206/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/206", "id": 282219898, "node_id": "MDU6SXNzdWUyODIyMTk4OTg=", "number": 206, "title": "reverse relationship lookup support", "user": {"login": "rustanacexd", "id": 4982729, "node_id": "MDQ6VXNlcjQ5ODI3Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4982729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustanacexd", "html_url": "https://github.com/rustanacexd", "followers_url": "https://api.github.com/users/rustanacexd/followers", "following_url": "https://api.github.com/users/rustanacexd/following{/other_user}", "gists_url": "https://api.github.com/users/rustanacexd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustanacexd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustanacexd/subscriptions", "organizations_url": "https://api.github.com/users/rustanacexd/orgs", "repos_url": "https://api.github.com/users/rustanacexd/repos", "events_url": "https://api.github.com/users/rustanacexd/events{/privacy}", "received_events_url": "https://api.github.com/users/rustanacexd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-14T19:54:12Z", "updated_at": "2017-12-14T20:07:23Z", "closed_at": "2017-12-14T20:02:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "does this support reverse relationship lookup?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/203", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/203/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/203/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/203", "id": 272595522, "node_id": "MDU6SXNzdWUyNzI1OTU1MjI=", "number": 203, "title": "AttributeError: 'NoneType' object has no attribute 'update'", "user": {"login": "jfsanchez-gh", "id": 3751757, "node_id": "MDQ6VXNlcjM3NTE3NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3751757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfsanchez-gh", "html_url": "https://github.com/jfsanchez-gh", "followers_url": "https://api.github.com/users/jfsanchez-gh/followers", "following_url": "https://api.github.com/users/jfsanchez-gh/following{/other_user}", "gists_url": "https://api.github.com/users/jfsanchez-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfsanchez-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfsanchez-gh/subscriptions", "organizations_url": "https://api.github.com/users/jfsanchez-gh/orgs", "repos_url": "https://api.github.com/users/jfsanchez-gh/repos", "events_url": "https://api.github.com/users/jfsanchez-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/jfsanchez-gh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-09T15:02:54Z", "updated_at": "2017-11-21T03:39:18Z", "closed_at": "2017-11-21T03:39:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there, \r\nI'm using Django Rest Framework Filters (DRFF).\r\nI have these two **models definition**:\r\n\r\n```\r\nclass Release(models.Model):\r\n    application = models.ForeignKey(Application, on_delete=models.CASCADE,\r\n                                    related_name='releases')\r\n    price = models.FloatField(default=0.0)\r\n    version_code = models.IntegerField()\r\n\r\n\r\nclass Application(models.Model):\r\n\tpackage_name = models.CharField(max_length=144, unique=True)\r\n\tdescription = models.TextField()\r\n\r\n```\r\n\r\nand as you can see an Application has many Releases with releated_name='releases'.\r\nSo, I have these two **serializers**:\r\n\r\n```\r\nclass ApplicationSerializer(serializers.ModelSerializer):\r\n\treleases = serializers.PrimaryKeyRelatedField(many=True, read_only=True)\r\n\r\n    class Meta:\r\n        model = Application\r\n        fields = '__all__'\r\n\r\nclass ReleaseSerializer(serializers.ModelSerializer):\r\n    class Meta:\r\n        model = Release\r\n        fields = '__all__'\r\n\r\n```\r\nthese two **viewsets**:\r\n\r\n```\r\nclass ApplicationViewSet(viewsets.ModelViewSet):\r\n    queryset = Application.objects.all()\r\n    serializer_class = ApplicationSerializer\r\n    filter_class = ApplicationFilter\r\n\r\nclass ReleaseViewSet(viewsets.ModelViewSet):\r\n    queryset = Release.objects.all()\r\n    serializer_class = ReleaseSerializer\r\n    filter_class = ReleaseFilter\r\n\r\n```\r\n\r\n\r\nand I have these two **filters** (using DRFF):\r\n\r\n```\r\nclass ReleaseFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = Release\r\n        fields = {\r\n            'price': '__all__',\r\n            'version_code': '__all__',\r\n        }\r\n\r\nclass ApplicationFilter(filters.FilterSet):\r\n    releases = filters.RelatedFilter(\r\n        ReleaseFilter,\r\n        queryset=Release.objects.all()\r\n    )\r\n\r\n    class Meta:\r\n        model = Application\r\n        fields = {\r\n            'package_name': '__all__',\r\n        }\r\n\r\n```\r\n\r\nMy REST API is running on localhost:9000/api/v1/\r\nbut, when I try to see the Application view (in the browser: \"GET /api/v1/application/\") I get \r\nthis error: **\"AttributeError: 'NoneType' object has no attribute 'update'\"**\r\nThis is the **Traceback** for this error:\r\n\r\n```\r\nInternal Server Error: /api/v1/application/\r\nTraceback (most recent call last):\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/django/core/handlers/base.py\", line 217, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/django/core/handlers/base.py\", line 215, in _get_response\r\n    response = response.render()\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/django/template/response.py\", line 107, in render\r\n    self.content = self.rendered_content\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/rest_framework/response.py\", line 72, in rendered_content\r\n    ret = renderer.render(self.data, accepted_media_type, context)\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/rest_framework/renderers.py\", line 706, in render\r\n    context = self.get_context(data, accepted_media_type, renderer_context)\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/rest_framework/renderers.py\", line 683, in get_context\r\n    'filter_form': self.get_filter_form(data, view, request),\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/rest_framework/renderers.py\", line 618, in get_filter_form\r\n    html = backend().to_html(request, queryset, view)\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/django_filters/rest_framework/backends.py\", line 61, in to_html\r\n    filter_instance = filter_class(request.query_params, queryset=queryset, request=request)\r\n  File \"/home/jfsanchez/Projects/kiosko/lib/python3.5/site-packages/django_filters/filterset.py\", line 186, in __init__\r\n    self.filters = copy.deepcopy(self.base_filters)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 320, in _reconstruct\r\n    value = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 297, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 243, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/lib/python3.5/copy.py\", line 306, in _reconstruct\r\n    y.__dict__.update(state)\r\nAttributeError: 'NoneType' object has no attribute 'update'\r\n[09/Nov/2017 14:49:29] \"GET /api/v1/application/ HTTP/1.1\" 500 664601\r\n\r\n```\r\n**And this is my (mainly) virtualenv stack:**\r\n```\r\nDjango==1.11.4\r\ndjango-filters==0.2.1\r\ndjangorestframework==3.6.4\r\ndjangorestframework-filters==0.10.2\r\n```\r\n\r\nCan anyone help me to fix this?\r\nWhat's the problem here? What do I'm doing wrong?\r\n**Thanks!**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/202", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/202/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/202/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/202", "id": 271837840, "node_id": "MDU6SXNzdWUyNzE4Mzc4NDA=", "number": 202, "title": "Version 0.10.1 has an exception when used with django-filter 1.1", "user": {"login": "hmpf", "id": 11956096, "node_id": "MDQ6VXNlcjExOTU2MDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11956096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmpf", "html_url": "https://github.com/hmpf", "followers_url": "https://api.github.com/users/hmpf/followers", "following_url": "https://api.github.com/users/hmpf/following{/other_user}", "gists_url": "https://api.github.com/users/hmpf/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmpf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmpf/subscriptions", "organizations_url": "https://api.github.com/users/hmpf/orgs", "repos_url": "https://api.github.com/users/hmpf/repos", "events_url": "https://api.github.com/users/hmpf/events{/privacy}", "received_events_url": "https://api.github.com/users/hmpf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265156, "node_id": "MDU6TGFiZWw3MDI2NTE1Ng==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-07T13:50:48Z", "updated_at": "2017-11-07T13:57:46Z", "closed_at": "2017-11-07T13:57:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run django-rest-framework-filters 0.10.1 on top of django-filter 1.1 I get the following exception:\r\n\r\n```\r\n  File \"/../python3.5/site-packages/rest_framework_filters/backends.py\", line 19, in get_subset_class\r\n    filter_class = original(view, queryset)\r\n  File \"/../python3.5/site-packages/django_filters/rest_framework/backends.py\", line 41, in get_filter_class\r\n    class AutoFilterSet(self.default_filter_set):\r\n  File \"/../python3.5/site-packages/rest_framework_filters/filterset.py\", line 19, in __new__\r\n    new_class = super(FilterSetMetaclass, cls).__new__(cls, name, bases, attrs)\r\n  File \"/../python3.5/site-packages/django_filters/filterset.py\", line 90, in __new__\r\n    new_class.base_filters = new_class.get_filters()\r\n  File \"/../python3.5/site-packages/django_filters/filterset.py\", line 320, in get_filters\r\n    filter_name = cls.get_filter_name(field_name, lookup_expr)\r\nTypeError: get_filter_name() takes 2 positional arguments but 3 were given\r\n```\r\nDowngrading django-filters to 1.0.4 solves the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/201", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/201/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/201/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/201", "id": 269950022, "node_id": "MDU6SXNzdWUyNjk5NTAwMjI=", "number": 201, "title": "Feature: Supports OR operations between fields", "user": {"login": "mani098", "id": 7437058, "node_id": "MDQ6VXNlcjc0MzcwNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7437058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mani098", "html_url": "https://github.com/mani098", "followers_url": "https://api.github.com/users/mani098/followers", "following_url": "https://api.github.com/users/mani098/following{/other_user}", "gists_url": "https://api.github.com/users/mani098/gists{/gist_id}", "starred_url": "https://api.github.com/users/mani098/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mani098/subscriptions", "organizations_url": "https://api.github.com/users/mani098/orgs", "repos_url": "https://api.github.com/users/mani098/repos", "events_url": "https://api.github.com/users/mani098/events{/privacy}", "received_events_url": "https://api.github.com/users/mani098/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-31T13:03:16Z", "updated_at": "2017-10-31T14:29:18Z", "closed_at": "2017-10-31T14:29:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we have an option to support OR operation to filter by value in multiple fields specified in URL\r\nFor example: /api/companies?search_fields=department__name,department__alias&search_value=Accounting\r\nThis will return queryset if `Accounting` present in either of the fields specified in the URL dynamically.\r\n\r\nReference:\r\nfrom django.db.models import Q\r\nqs = Company.objects.filter(Q(department__name=Accouting) | Q(department__alias=Accounting))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/190", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/190/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/190/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/190", "id": 267289941, "node_id": "MDU6SXNzdWUyNjcyODk5NDE=", "number": 190, "title": "v0.10.2 release", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/milestones/7", "html_url": "https://github.com/philipn/django-rest-framework-filters/milestone/7", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/milestones/7/labels", "id": 2855130, "node_id": "MDk6TWlsZXN0b25lMjg1NTEzMA==", "number": 7, "title": "v0.10.2", "description": "", "creator": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2017-10-20T19:26:09Z", "updated_at": "2017-10-24T12:09:18Z", "due_on": null, "closed_at": "2017-10-24T12:09:18Z"}, "comments": 2, "created_at": "2017-10-20T20:03:20Z", "updated_at": "2017-10-20T20:16:25Z", "closed_at": "2017-10-20T20:15:09Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @philipn - getting closer to that 1.0 release \ud83d\ude04, but in the meantime, this should fix compatibility with the newly minted django-filter v1.1.\r\n\r\nRelease notes (changelog.rst already up-to-date):\r\n```\r\nv0.10.2:\r\n--------\r\n\r\nThis is a maintenance release that fixes compatibility with django-filter.\r\n\r\n* 189 Fix method name collision\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/188", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/188/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/188/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/188", "id": 266850660, "node_id": "MDU6SXNzdWUyNjY4NTA2NjA=", "number": 188, "title": "New release django-filter change get_filter_name() method", "user": {"login": "egregors", "id": 2153895, "node_id": "MDQ6VXNlcjIxNTM4OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2153895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egregors", "html_url": "https://github.com/egregors", "followers_url": "https://api.github.com/users/egregors/followers", "following_url": "https://api.github.com/users/egregors/following{/other_user}", "gists_url": "https://api.github.com/users/egregors/gists{/gist_id}", "starred_url": "https://api.github.com/users/egregors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egregors/subscriptions", "organizations_url": "https://api.github.com/users/egregors/orgs", "repos_url": "https://api.github.com/users/egregors/repos", "events_url": "https://api.github.com/users/egregors/events{/privacy}", "received_events_url": "https://api.github.com/users/egregors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265156, "node_id": "MDU6TGFiZWw3MDI2NTE1Ng==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T13:53:18Z", "updated_at": "2017-10-20T20:17:28Z", "closed_at": "2017-10-19T17:03:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "And we got `TypeError: get_filter_name() takes 2 positional arguments but 3 were given` exception:\r\n```\r\n\r\nmanage.py@retail > check\r\nbash -cl \"/Users/egregors/Documents/Bitbucket/retail/env/bin/python /Applications/PyCharm.app/Contents/helpers/pycharm/django_manage.py check /Users/egregors/Documents/Bitbucket/retail\"\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/helpers/pycharm/django_manage.py\", line 43, in <module>\r\n    run_module(manage_file, None, '__main__', True)\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 205, in run_module\r\n    return _run_module_code(code, init_globals, run_name, mod_spec)\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/base.py\", line 294, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/base.py\", line 345, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/commands/check.py\", line 68, in handle\r\n    fail_level=getattr(checks, options['fail_level']),\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/base.py\", line 374, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/management/base.py\", line 361, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/checks/registry.py\", line 81, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/checks/urls.py\", line 14, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/core/checks/urls.py\", line 24, in check_resolver\r\n    for pattern in resolver.url_patterns:\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/urls/resolvers.py\", line 313, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django/urls/resolvers.py\", line 306, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/config/urls.py\", line 29, in <module>\r\n    from retail.order.views import BundleViewSet, OrderHomeView, OrderDetailView, OrderViewSet, \\\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/retail/order/views.py\", line 18, in <module>\r\n    from retail.order.filters import OrderFilter\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/retail/order/filters.py\", line 9, in <module>\r\n    class OrderFilter(filters.FilterSet):\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/rest_framework_filters/filterset.py\", line 19, in __new__\r\n    new_class = super(FilterSetMetaclass, cls).__new__(cls, name, bases, attrs)\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django_filters/filterset.py\", line 90, in __new__\r\n    new_class.base_filters = new_class.get_filters()\r\n  File \"/Users/egregors/Documents/Bitbucket/retail/env/lib/python3.6/site-packages/django_filters/filterset.py\", line 320, in get_filters\r\n    filter_name = cls.get_filter_name(field_name, lookup_expr)\r\nTypeError: get_filter_name() takes 2 positional arguments but 3 were given\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/187", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/187/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/187/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/187", "id": 266848438, "node_id": "MDU6SXNzdWUyNjY4NDg0Mzg=", "number": 187, "title": "TypeError: get_filter_name() takes 2 positional arguments but 3 were given", "user": {"login": "danielhers", "id": 263363, "node_id": "MDQ6VXNlcjI2MzM2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/263363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhers", "html_url": "https://github.com/danielhers", "followers_url": "https://api.github.com/users/danielhers/followers", "following_url": "https://api.github.com/users/danielhers/following{/other_user}", "gists_url": "https://api.github.com/users/danielhers/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhers/subscriptions", "organizations_url": "https://api.github.com/users/danielhers/orgs", "repos_url": "https://api.github.com/users/danielhers/repos", "events_url": "https://api.github.com/users/danielhers/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/milestones/7", "html_url": "https://github.com/philipn/django-rest-framework-filters/milestone/7", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/milestones/7/labels", "id": 2855130, "node_id": "MDk6TWlsZXN0b25lMjg1NTEzMA==", "number": 7, "title": "v0.10.2", "description": "", "creator": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2017-10-20T19:26:09Z", "updated_at": "2017-10-24T12:09:18Z", "due_on": null, "closed_at": "2017-10-24T12:09:18Z"}, "comments": 6, "created_at": "2017-10-19T13:46:50Z", "updated_at": "2017-10-21T02:54:56Z", "closed_at": "2017-10-20T19:58:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Starting with django-filter 1.1.0 (released today), I get this error. With django-filter 1.0.4 it worked fine.\r\n\r\nSee carltongibson/django-filter#798, and the failing job [here](https://travis-ci.org/danielhers/UCCA-App/jobs/289970765).\r\n\r\nSeems like the problem is with [this line](https://github.com/philipn/django-rest-framework-filters/blob/master/rest_framework_filters/filterset.py#L19), as the backtrace is:\r\n\r\n    File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/rest_framework_filters/filterset.py\", line 19, in __new__\r\n        new_class = super(FilterSetMetaclass, cls).__new__(cls, name, bases, attrs)\r\n      File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/django_filters/filterset.py\", line 90, in __new__\r\n        new_class.base_filters = new_class.get_filters()\r\n      File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/django_filters/filterset.py\", line 320, in get_filters\r\n        filter_name = cls.get_filter_name(field_name, lookup_expr)\r\n    TypeError: get_filter_name() takes 2 positional arguments but 3 were given", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/181", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/181/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/181/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/181", "id": 253549442, "node_id": "MDU6SXNzdWUyNTM1NDk0NDI=", "number": 181, "title": "Using Filter.method with multiple field lookups", "user": {"login": "nogurenn", "id": 15997393, "node_id": "MDQ6VXNlcjE1OTk3Mzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/15997393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nogurenn", "html_url": "https://github.com/nogurenn", "followers_url": "https://api.github.com/users/nogurenn/followers", "following_url": "https://api.github.com/users/nogurenn/following{/other_user}", "gists_url": "https://api.github.com/users/nogurenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nogurenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nogurenn/subscriptions", "organizations_url": "https://api.github.com/users/nogurenn/orgs", "repos_url": "https://api.github.com/users/nogurenn/repos", "events_url": "https://api.github.com/users/nogurenn/events{/privacy}", "received_events_url": "https://api.github.com/users/nogurenn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-29T07:08:25Z", "updated_at": "2019-02-21T21:58:23Z", "closed_at": "2017-08-29T07:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a canonical/package way to filter a queryset inside `Filter.method` based on certain query parameter lookups? \r\n\r\nThe current behavior is that the filter method only triggers if the url query parameter exactly matches the filter calling the method (e.g. `?departure_date=2017-01-01`, but not `?departure_date__<lookup>=2017-01-01`). What I need is for `departure_date` filter to trigger whether it is a single date or two dates separated by a delimiter.\r\n\r\n\r\nBelow is my current implementation that satisfies `?departure_date=2017-01-01`, but I don't know how to modify it to also accept a range of dates without resorting to a `CharFilter`.\r\n\r\n\r\n``` python\r\nclass TripFilterSet(filters.FilterSet):\r\n    departure_date = filters.DateTimeFilter(name='departure_date', method='filter_departure_date')\r\n\r\n    class Meta:\r\n        model = Trip\r\n        fields = ('departure_date',)\r\n\r\n    def filter_departure_date(self, queryset, name, value):\r\n        lookup = f'{name}__date'\r\n        return queryset.filter(**{lookup: value})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/180", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/180/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/180/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/180", "id": 253286078, "node_id": "MDU6SXNzdWUyNTMyODYwNzg=", "number": 180, "title": "Ensure nested relationships are valid for RelatedFilter", "user": {"login": "sassanh", "id": 1270688, "node_id": "MDQ6VXNlcjEyNzA2ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1270688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sassanh", "html_url": "https://github.com/sassanh", "followers_url": "https://api.github.com/users/sassanh/followers", "following_url": "https://api.github.com/users/sassanh/following{/other_user}", "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions", "organizations_url": "https://api.github.com/users/sassanh/orgs", "repos_url": "https://api.github.com/users/sassanh/repos", "events_url": "https://api.github.com/users/sassanh/events{/privacy}", "received_events_url": "https://api.github.com/users/sassanh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-28T10:14:55Z", "updated_at": "2017-10-04T23:51:10Z", "closed_at": "2017-10-04T23:51:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It'd be great if we had same `source` parameter in other `django-filters` filters on `RelatedFilter`. Something like this:\r\n```\r\n    examination = filters.RelatedFilter(\r\n        ExaminationFilter,\r\n        source='students__student__registrations__examination',\r\n        queryset=Examination.objects.all(),\r\n    )\r\n```\r\nSo that instead of `/api/school/?students__student__registrations__examination__date__range` I can query `/api/school/?examination__date__range`. \"students__student__registrations__\" is internal detail that API user doesn't need to know about.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/179", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/179/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/179/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/179", "id": 253224722, "node_id": "MDU6SXNzdWUyNTMyMjQ3MjI=", "number": 179, "title": "Status of project", "user": {"login": "sassanh", "id": 1270688, "node_id": "MDQ6VXNlcjEyNzA2ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1270688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sassanh", "html_url": "https://github.com/sassanh", "followers_url": "https://api.github.com/users/sassanh/followers", "following_url": "https://api.github.com/users/sassanh/following{/other_user}", "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions", "organizations_url": "https://api.github.com/users/sassanh/orgs", "repos_url": "https://api.github.com/users/sassanh/repos", "events_url": "https://api.github.com/users/sassanh/events{/privacy}", "received_events_url": "https://api.github.com/users/sassanh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-28T04:38:08Z", "updated_at": "2019-02-21T21:58:07Z", "closed_at": "2018-07-11T20:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at recent commits seems like it's progressing slowly recently. I'm trying to find a good way for embedding filter sets in each other and `django-rest-framework-filters` has this out of the box. But I wanna know if using it is safe for long time. I know about issues 99 and 100 and those aren't currently a concern for my project as I don't expect anyone to try hacky things till user base grows. I just wanna know is there going to be a version 1 in coming months? Are you planning to work on this project? Few months ago we had a discussion here https://github.com/carltongibson/django-filter/issues/587. It would be great if you could update me with the status of project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/177", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/177/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/177/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/177", "id": 244127271, "node_id": "MDU6SXNzdWUyNDQxMjcyNzE=", "number": 177, "title": "Provide wheel distribution on PyPI", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-19T18:10:29Z", "updated_at": "2017-10-19T22:06:11Z", "closed_at": "2017-10-19T22:06:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nPlease could this package also by made available as a wheel on PyPI?\r\nhttps://pypi.python.org/pypi/djangorestframework-filters\r\n\r\nWheels have the following advantages:\r\n* Faster installation time\r\n* Allows the wheel cache to work even when using the new pip hash-checking mode\r\n* Allows tools to statically inspect the package metadata without having to execute untrusted code.\r\n* ...and more - see: http://pythonwheels.com\r\n\r\nThis package is pure Python and supports both Python 2 and 3, so can be distributed as a \"universal wheel\":\r\nhttps://packaging.python.org/tutorials/distributing-packages/#wheels\r\n\r\nTo save having to pass `--universal` to `setup.py` each time, the pref can be saved in `setup.cfg`:\r\n\r\n```\r\n[bdist_wheel]\r\nuniversal=1\r\n```\r\n\r\nThe Python packaging guide recommends using [Twine](https://github.com/pypa/twine) to upload packages:\r\nhttps://packaging.python.org/tutorials/distributing-packages/#uploading-your-project-to-pypi\r\n\r\nSo with the `setup.cfg` as above, the steps for building/uploading a new release are then:\r\n\r\n```bash\r\n$ pip install -U twine setuptools wheel\r\n$ rm -rf dist/ build/\r\n$ python setup.py sdist bdist_wheel\r\n$ twine upload dist/*\r\n```\r\n\r\nThe PyPI package listing will then display two entries for the new release, one with type \"Source\" and the other \"Python Wheel\".\r\n\r\nMany thanks :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/176", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/176/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/176/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/176", "id": 234137173, "node_id": "MDU6SXNzdWUyMzQxMzcxNzM=", "number": 176, "title": "Changelog section missing for v0.10.1", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-07T08:52:31Z", "updated_at": "2017-06-14T16:18:25Z", "closed_at": "2017-06-14T01:56:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thank you for the new release :-)\r\n\r\nThere doesn't appear to be a changelog entry for it in:\r\nhttps://github.com/philipn/django-rest-framework-filters/blob/master/CHANGELOG.rst\r\n\r\nFrom what I can see, #172 was the only change, and was to (a) fix #171, (b) improve performance.\r\n\r\n(Having a changelog entry helps when using tools like pyup-bot, since it includes the entry in the PR it opens, but in this case it couldn't find one, eg: mozilla/treeherder#2542)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/175", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/175/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/175/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/175", "id": 229826851, "node_id": "MDU6SXNzdWUyMjk4MjY4NTE=", "number": 175, "title": "DRY: Allowing __all__ lookups on all fields, fields already defined in serializer", "user": {"login": "darkpixel", "id": 158380, "node_id": "MDQ6VXNlcjE1ODM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/158380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkpixel", "html_url": "https://github.com/darkpixel", "followers_url": "https://api.github.com/users/darkpixel/followers", "following_url": "https://api.github.com/users/darkpixel/following{/other_user}", "gists_url": "https://api.github.com/users/darkpixel/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkpixel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkpixel/subscriptions", "organizations_url": "https://api.github.com/users/darkpixel/orgs", "repos_url": "https://api.github.com/users/darkpixel/repos", "events_url": "https://api.github.com/users/darkpixel/events{/privacy}", "received_events_url": "https://api.github.com/users/darkpixel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-18T22:54:32Z", "updated_at": "2017-05-22T17:04:38Z", "closed_at": "2017-05-22T17:04:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my serializer, I already have:\r\n```\r\nclass Meta:\r\n  model = Note\r\n  fields = [\r\n    'id',\r\n    'computer',\r\n    'note',\r\n  ]\r\n```\r\n\r\nI would like to allow all lookups on those fields.  In order to do this, I have to define a FilterSet:\r\n```\r\nclass Meta:\r\n  model = Computer\r\n  fields = {\r\n    'id': '__all__',\r\n    'computer': '__all__',\r\n    'note': '__all__',\r\n  }\r\n```\r\nAm I missing something?  Is there a way to apply a filterset without re-defining the model and explicitly setting the fields to __all__?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/174", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/174/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/174/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/174", "id": 228288696, "node_id": "MDU6SXNzdWUyMjgyODg2OTY=", "number": 174, "title": "Order by name of parent. ", "user": {"login": "danilke", "id": 2322829, "node_id": "MDQ6VXNlcjIzMjI4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2322829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilke", "html_url": "https://github.com/danilke", "followers_url": "https://api.github.com/users/danilke/followers", "following_url": "https://api.github.com/users/danilke/following{/other_user}", "gists_url": "https://api.github.com/users/danilke/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilke/subscriptions", "organizations_url": "https://api.github.com/users/danilke/orgs", "repos_url": "https://api.github.com/users/danilke/repos", "events_url": "https://api.github.com/users/danilke/events{/privacy}", "received_events_url": "https://api.github.com/users/danilke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-12T13:15:33Z", "updated_at": "2017-05-12T14:14:13Z", "closed_at": "2017-05-12T14:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": " Hello. If is posible somehow to order objects by name of parents, using django-rest-framework-filters ?  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/173", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/173/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/173/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/173", "id": 228217155, "node_id": "MDU6SXNzdWUyMjgyMTcxNTU=", "number": 173, "title": "Filter by count of children. ", "user": {"login": "danilke", "id": 2322829, "node_id": "MDQ6VXNlcjIzMjI4Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2322829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danilke", "html_url": "https://github.com/danilke", "followers_url": "https://api.github.com/users/danilke/followers", "following_url": "https://api.github.com/users/danilke/following{/other_user}", "gists_url": "https://api.github.com/users/danilke/gists{/gist_id}", "starred_url": "https://api.github.com/users/danilke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danilke/subscriptions", "organizations_url": "https://api.github.com/users/danilke/orgs", "repos_url": "https://api.github.com/users/danilke/repos", "events_url": "https://api.github.com/users/danilke/events{/privacy}", "received_events_url": "https://api.github.com/users/danilke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-12T08:05:37Z", "updated_at": "2019-02-21T21:57:38Z", "closed_at": "2017-05-12T18:20:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Is possible to filter by count of children?\r\n\r\n For example: Order has many OrderItems, I want to filter orders with orders count 4? Or I have to save order_items_count attribute to Order model? And how I order by count?\r\n\r\n\r\nThanks a lot! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/171", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/171/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/171/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/171", "id": 224171188, "node_id": "MDU6SXNzdWUyMjQxNzExODg=", "number": 171, "title": "Deecopy error when using exclusion", "user": {"login": "feuloren", "id": 1497071, "node_id": "MDQ6VXNlcjE0OTcwNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1497071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feuloren", "html_url": "https://github.com/feuloren", "followers_url": "https://api.github.com/users/feuloren/followers", "following_url": "https://api.github.com/users/feuloren/following{/other_user}", "gists_url": "https://api.github.com/users/feuloren/gists{/gist_id}", "starred_url": "https://api.github.com/users/feuloren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feuloren/subscriptions", "organizations_url": "https://api.github.com/users/feuloren/orgs", "repos_url": "https://api.github.com/users/feuloren/repos", "events_url": "https://api.github.com/users/feuloren/events{/privacy}", "received_events_url": "https://api.github.com/users/feuloren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/milestones/6", "html_url": "https://github.com/philipn/django-rest-framework-filters/milestone/6", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/milestones/6/labels", "id": 2480865, "node_id": "MDk6TWlsZXN0b25lMjQ4MDg2NQ==", "number": 6, "title": "v0.10.1", "description": "", "creator": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2017-04-25T16:55:44Z", "updated_at": "2017-10-06T22:06:21Z", "due_on": null, "closed_at": "2017-10-06T22:06:21Z"}, "comments": 6, "created_at": "2017-04-25T15:07:01Z", "updated_at": "2017-06-07T03:04:58Z", "closed_at": "2017-06-07T02:55:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just upgraded to rest-framework-filters 0.10 (+ rest-framework 3.6 and django-filter 1.0), and can't use the exclusion feature anymore, because of a deepcopy error.\r\n\r\nHere is my filter set:\r\n```python\r\nimport rest_framework_filters as filters\r\n\r\nclass RefillFilterSet(filters.FilterSet):\r\n    class Meta:\r\n        model = models.Refill\r\n        fields = {\r\n            'kind': ['exact', 'in'],\r\n        }\r\n```\r\n\r\nHere is the full trackeback (ran as part of unit tests), the query paramters were \"kind!=toBeIgnored\"\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.4/site-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python3.4/site-packages/django/core/handlers/base.py\", line 249, in _legacy_get_response\r\n    response = self._get_response(request)\r\n  File \"/usr/local/lib/python3.4/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/local/lib/python3.4/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/local/lib/python3.4/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework/viewsets.py\", line 83, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework/views.py\", line 483, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework/views.py\", line 443, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework/views.py\", line 480, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework/mixins.py\", line 40, in list\r\n    queryset = self.filter_queryset(self.get_queryset())\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework/generics.py\", line 151, in filter_queryset\r\n    queryset = backend().filter_queryset(self.request, queryset, self)\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework_filters/backends.py\", line 34, in filter_queryset\r\n    return super(DjangoFilterBackend, self).filter_queryset(request, queryset, view)\r\n  File \"/usr/local/lib/python3.4/site-packages/django_filters/rest_framework/backends.py\", line 51, in filter_queryset\r\n    return filter_class(request.query_params, queryset=queryset, request=request).qs\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework_filters/filterset.py\", line 259, in qs\r\n    requested_filters = self.expand_filters()\r\n  File \"/usr/local/lib/python3.4/site-packages/rest_framework_filters/filterset.py\", line 118, in expand_filters\r\n    f = copy.deepcopy(f)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 300, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 246, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 300, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 246, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 300, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 246, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 182, in deepcopy\r\n    y = _reconstruct(x, rv, 1, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 300, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 155, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 246, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/local/lib/python3.4/copy.py\", line 166, in deepcopy\r\n    y = copier(memo)\r\nTypeError: cannot deepcopy this match object\r\n```\r\n\r\nWith a real HTTP request I get a similar error, but on a different object:\r\n```TypeError: cannot serialize '_io.BufferedReader' object```\r\n\r\nMy dependencies versions:\r\n```\r\nDjango==1.10.4\r\ndjango-crispy-forms==1.6.1\r\ndjango-filter==1.0.2\r\ndjangorestframework==3.6.2\r\ndjangorestframework-filters==0.10.0\r\n```\r\n\r\nDo you know what's going on ?\r\nMy only guess is that deepcopy reaches the django request object (through filter._parent) and fails to copy an un-pickeable object, but it doesn't explain why it works with djangorestframework-filters 0.9.1 + django-filter 0.15.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/169", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/169/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/169/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/169", "id": 223691649, "node_id": "MDU6SXNzdWUyMjM2OTE2NDk=", "number": 169, "title": "RelatedFilter queryset assertion could be more informative", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-24T02:49:21Z", "updated_at": "2017-04-24T03:00:33Z", "closed_at": "2017-04-24T03:00:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The current error message is\r\n\r\n> Expected `.get_queryset()` to return a `QuerySet`, but got `None`.\r\n\r\nIncluding the parent filterset's class name and filter name would improve debugging.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/168", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/168/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/168/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/168", "id": 223518721, "node_id": "MDU6SXNzdWUyMjM1MTg3MjE=", "number": 168, "title": "Filtering across relations throws keyerror in latest package", "user": {"login": "mlissner", "id": 236970, "node_id": "MDQ6VXNlcjIzNjk3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/236970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlissner", "html_url": "https://github.com/mlissner", "followers_url": "https://api.github.com/users/mlissner/followers", "following_url": "https://api.github.com/users/mlissner/following{/other_user}", "gists_url": "https://api.github.com/users/mlissner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlissner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlissner/subscriptions", "organizations_url": "https://api.github.com/users/mlissner/orgs", "repos_url": "https://api.github.com/users/mlissner/repos", "events_url": "https://api.github.com/users/mlissner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlissner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-21T23:04:13Z", "updated_at": "2017-10-24T16:01:30Z", "closed_at": "2017-04-24T17:21:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(This might be a dup of #134, but I'm starting fresh so we have a cleaner bug.)\r\n\r\nIn https://github.com/freelawproject/courtlistener/issues/665 I'm in the process of upgrading from \r\n\r\n    djangorestframework-filters==0.6.0\r\n\r\nTo: \r\n\r\n    djangorestframework-filters==0.9.1\r\n\r\nI'm also upgrading DRF and all of it's requirements at the same time. When I completed the upgrade using pip, several of my unit tests began failing with errors like:\r\n\r\n```\r\nError\r\nTraceback (most recent call last):\r\n  File \"/home/mlissner/Programming/intellij/courtlistener/cl/api/tests.py\", line 372, in test_circular_relationships\r\n    assertCount(self, path, q, 0)\r\n  File \"/home/mlissner/Programming/intellij/courtlistener/cl/api/tests.py\", line 170, in assertCount\r\n    r = cls.client.get(path, q)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django/test/client.py\", line 500, in get\r\n    **extra)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django/test/client.py\", line 303, in get\r\n    return self.generic('GET', path, secure=secure, **r)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django/test/client.py\", line 379, in generic\r\n    return self.request(**r)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django/test/client.py\", line 466, in request\r\n    six.reraise(*exc_info)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 132, in get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework/viewsets.py\", line 83, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework/views.py\", line 483, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework/views.py\", line 443, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework/views.py\", line 480, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework/mixins.py\", line 40, in list\r\n    queryset = self.filter_queryset(self.get_queryset())\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework/generics.py\", line 151, in filter_queryset\r\n    queryset = backend().filter_queryset(self.request, queryset, self)\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework_filters/backends.py\", line 18, in filter_queryset\r\n    return filter_class(request.query_params, queryset=queryset).qs\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/rest_framework_filters/filterset.py\", line 326, in qs\r\n    qs = super(FilterSet, self).qs\r\n  File \"/home/mlissner/.virtualenvs/courtlistener/local/lib/python2.7/site-packages/django_filters/filterset.py\", line 335, in qs\r\n    value = self.form.cleaned_data[name]\r\nKeyError: 'person__positions__job_title__icontains'\r\n```\r\n\r\nI have some complicated models that have a lot of relations, but these tests passed just fine before the upgrade. Something seems to be wrong with the latest package or perhaps my configuration of it. Here's what I've got set up:\r\n\r\n### Filters\r\n```python\r\nBASIC_TEXT_LOOKUPS = ['exact', 'iexact', 'startswith', 'istartswith',\r\n                      'endswith', 'iendswith']\r\nALL_TEXT_LOOKUPS = BASIC_TEXT_LOOKUPS + ['contains', 'icontains']\r\nclass EducationFilter(filters.FilterSet):\r\n    person = filters.RelatedFilter(\r\n        'cl.people_db.filters.PersonFilter',\r\n        name='person',\r\n        queryset=Person.objects.all(),\r\n    )\r\n\r\n    class Meta:\r\n        model = Education\r\n\r\n\r\nclass PositionFilter(filters.FilterSet):\r\n    class Meta:\r\n        model = Position\r\n        fields = {\r\n            'job_title': ALL_TEXT_LOOKUPS,\r\n        }\r\n\r\n\r\nclass PersonFilter(filters.FilterSet):\r\n    positions = filters.RelatedFilter(\r\n        PositionFilter,\r\n        name='positions',\r\n        queryset=Position.objects.all(),\r\n    )\r\n    class Meta:\r\n        model = Person\r\n```\r\n\r\n### Views\r\n\r\n```python\r\nclass EducationViewSet(LoggingMixin, viewsets.ModelViewSet):\r\n    queryset = Education.objects.all()\r\n    serializer_class = EducationSerializer\r\n    filter_class = EducationFilter\r\n    ordering_fields = ('date_created', 'date_modified')\r\n```\r\n\r\n### Filter backends\r\n\r\n```python\r\n    # Filtering\r\n    'DEFAULT_FILTER_BACKENDS': (\r\n        # 'cl.api.utils.DisabledHTMLFilterBackend',\r\n        'rest_framework_filters.backends.DjangoFilterBackend',\r\n        'rest_framework.filters.OrderingFilter',\r\n    ),\r\n```\r\n\r\nI've been trying to sort this out all day now and I'm pretty stumped. It makes the upgrade to the latest DRF pretty much impossible for our API.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/167", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/167/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/167/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/167", "id": 223166503, "node_id": "MDU6SXNzdWUyMjMxNjY1MDM=", "number": 167, "title": "v0.10.0 release", "user": {"login": "rpkilby", "id": 2370209, "node_id": "MDQ6VXNlcjIzNzAyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2370209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpkilby", "html_url": "https://github.com/rpkilby", "followers_url": "https://api.github.com/users/rpkilby/followers", "following_url": "https://api.github.com/users/rpkilby/following{/other_user}", "gists_url": "https://api.github.com/users/rpkilby/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpkilby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpkilby/subscriptions", "organizations_url": "https://api.github.com/users/rpkilby/orgs", "repos_url": "https://api.github.com/users/rpkilby/repos", "events_url": "https://api.github.com/users/rpkilby/events{/privacy}", "received_events_url": "https://api.github.com/users/rpkilby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-20T19:00:29Z", "updated_at": "2017-04-24T21:08:18Z", "closed_at": "2017-04-24T19:10:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi @philipn - I'm still working on changes for a 1.0 release, but a django-filter 1.0 compatible release is long overdue. v0.10.0 should tide us over until then.\r\n\r\nIf you'd like to review all of the various changes, there's the [v0.10.0 milestone](https://github.com/philipn/django-rest-framework-filters/milestone/4?closed=1). As always, thanks.\r\n\r\nRelease notes (`changelog.rst` already up-to-date):\r\n\r\n```\r\nv0.10.0:\r\n--------\r\n\r\nThis release primarily adds compatibility with django-filter 1.0 (more details\r\nin #144), and is an intermediate step to overhauling the behavior of filters\r\nthat span relationships.\r\n\r\nAs `RelatedFilter` is a subclass of `ModelChoiceFilter`, you may take advantage\r\nof the `callable` behavior for the `queryset` argument. The `queryset` is now a\r\nrequired argument, which is a forwards-incompatible change. You can provide the\r\nmodel's default queryset to maintain the current behavior, or a callable, which\r\nwill allow you to filter the queryset by the request's properties.\r\n\r\n* #124 Removed deprecation warnings\r\n* #128 Fix all lookups handling for related fields\r\n* #129 Fix template rendering\r\n* #139 Fix metaclass inheritance bug\r\n* #146 Make `RelatedFilter.queryset` a required argument\r\n* #154 Add python 3.6 support\r\n* #161 Fix request-based filtering\r\n* #170 Improve RelatedFilter queryset error message\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/165", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/165/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/165/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/165", "id": 219497050, "node_id": "MDU6SXNzdWUyMTk0OTcwNTA=", "number": 165, "title": "Fix the formatting on PyPI", "user": {"login": "hedleyroos", "id": 316314, "node_id": "MDQ6VXNlcjMxNjMxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/316314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hedleyroos", "html_url": "https://github.com/hedleyroos", "followers_url": "https://api.github.com/users/hedleyroos/followers", "following_url": "https://api.github.com/users/hedleyroos/following{/other_user}", "gists_url": "https://api.github.com/users/hedleyroos/gists{/gist_id}", "starred_url": "https://api.github.com/users/hedleyroos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hedleyroos/subscriptions", "organizations_url": "https://api.github.com/users/hedleyroos/orgs", "repos_url": "https://api.github.com/users/hedleyroos/repos", "events_url": "https://api.github.com/users/hedleyroos/events{/privacy}", "received_events_url": "https://api.github.com/users/hedleyroos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-05T07:51:06Z", "updated_at": "2017-10-04T23:09:54Z", "closed_at": "2017-10-04T23:09:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not really an issue but it will make the product appear more professional on PyPI. Do `setup.py check --restructuredtext -s` to ensure the readme is in PyPI format.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/164", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/164/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/164/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/164", "id": 213894539, "node_id": "MDU6SXNzdWUyMTM4OTQ1Mzk=", "number": 164, "title": "Key error when using Negation/Exclusion", "user": {"login": "weasteam", "id": 6238854, "node_id": "MDQ6VXNlcjYyMzg4NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6238854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weasteam", "html_url": "https://github.com/weasteam", "followers_url": "https://api.github.com/users/weasteam/followers", "following_url": "https://api.github.com/users/weasteam/following{/other_user}", "gists_url": "https://api.github.com/users/weasteam/gists{/gist_id}", "starred_url": "https://api.github.com/users/weasteam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weasteam/subscriptions", "organizations_url": "https://api.github.com/users/weasteam/orgs", "repos_url": "https://api.github.com/users/weasteam/repos", "events_url": "https://api.github.com/users/weasteam/events{/privacy}", "received_events_url": "https://api.github.com/users/weasteam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-13T20:55:53Z", "updated_at": "2017-10-05T00:16:40Z", "closed_at": "2017-10-05T00:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "`?id!=1` and I got Key error\r\n\r\n```\r\nException Type:\tKeyError\r\nException Value:\t\r\n'id!'\r\n```\r\n\r\nI set it up according to https://github.com/philipn/django-rest-framework-filters, did I miss something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/163", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/163/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/163/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/163", "id": 209015152, "node_id": "MDU6SXNzdWUyMDkwMTUxNTI=", "number": 163, "title": "Release a version with Django 1.11 support", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-02-21T01:00:10Z", "updated_at": "2018-01-10T21:08:25Z", "closed_at": "2017-04-20T19:00:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\r\n\r\nDjango 1.11 beta 1 has just been released:\r\nhttps://www.djangoproject.com/weblog/2017/feb/20/django-111-beta-1-released/\r\n\r\nIt would be great if the recent Django 1.11 compatibility fixes on master (eg supporting django-filter >1.0) could be released so we could start testing with Django 1.11 on our projects without needing to install from master.\r\n\r\nMany thanks :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/162", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/162/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/162/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/162", "id": 204454046, "node_id": "MDU6SXNzdWUyMDQ0NTQwNDY=", "number": 162, "title": "many-to-many filter relationship example", "user": {"login": "georgerb", "id": 1149423, "node_id": "MDQ6VXNlcjExNDk0MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1149423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgerb", "html_url": "https://github.com/georgerb", "followers_url": "https://api.github.com/users/georgerb/followers", "following_url": "https://api.github.com/users/georgerb/following{/other_user}", "gists_url": "https://api.github.com/users/georgerb/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgerb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgerb/subscriptions", "organizations_url": "https://api.github.com/users/georgerb/orgs", "repos_url": "https://api.github.com/users/georgerb/repos", "events_url": "https://api.github.com/users/georgerb/events{/privacy}", "received_events_url": "https://api.github.com/users/georgerb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 70265159, "node_id": "MDU6TGFiZWw3MDI2NTE1OQ==", "url": "https://api.github.com/repos/philipn/django-rest-framework-filters/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-31T23:22:46Z", "updated_at": "2019-02-21T21:57:30Z", "closed_at": "2017-02-02T16:24:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs there an example on how to create a filterset for a many-to-many related model?\r\n\r\nThanks, \r\nGeorge", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/160", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/160/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/160/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/160", "id": 203757101, "node_id": "MDU6SXNzdWUyMDM3NTcxMDE=", "number": 160, "title": "can't import viewsets", "user": {"login": "nareshku", "id": 2739149, "node_id": "MDQ6VXNlcjI3MzkxNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2739149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nareshku", "html_url": "https://github.com/nareshku", "followers_url": "https://api.github.com/users/nareshku/followers", "following_url": "https://api.github.com/users/nareshku/following{/other_user}", "gists_url": "https://api.github.com/users/nareshku/gists{/gist_id}", "starred_url": "https://api.github.com/users/nareshku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nareshku/subscriptions", "organizations_url": "https://api.github.com/users/nareshku/orgs", "repos_url": "https://api.github.com/users/nareshku/repos", "events_url": "https://api.github.com/users/nareshku/events{/privacy}", "received_events_url": "https://api.github.com/users/nareshku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-27T22:32:54Z", "updated_at": "2017-01-31T07:51:35Z", "closed_at": "2017-01-28T00:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Somehow I couldn't import viewsets anymore.\r\n\r\n```\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        'rest_framework.authentication.BasicAuthentication',\r\n        'rest_framework.authentication.SessionAuthentication',\r\n     ),\r\n    'DEFAULT_RENDERER_CLASSES': (\r\n        'rest_framework.renderers.JSONRenderer',\r\n     ),\r\n    'DEFAULT_FILTER_BACKENDS': (\r\n        'rest_framework_filters.backends.DjangoFilterBackend',\r\n   ),\r\n}\r\n```\r\n\r\n```\r\npython manage.py shell\r\nPython 2.7.6 (default, Jan 27 2017, 05:17:03)\r\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n(InteractiveConsole)\r\n>>> from rest_framework import viewsets, routers\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework/viewsets.py\", line 26, in <module>\r\n    from rest_framework import generics, mixins, views\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework/generics.py\", line 25, in <module>\r\n    class GenericAPIView(views.APIView):\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework/generics.py\", line 44, in GenericAPIView\r\n    filter_backends = api_settings.DEFAULT_FILTER_BACKENDS\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework/settings.py\", line 211, in __getattr__\r\n    val = perform_import(val, attr)\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework/settings.py\", line 156, in perform_import\r\n    return [import_from_string(item, setting_name) for item in val]\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework/settings.py\", line 168, in import_from_string\r\n    module = importlib.import_module(module_path)\r\n  File \"/usr/local/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework_filters/__init__.py\", line 3, in <module>\r\n    from .filterset import FilterSet\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework_filters/filterset.py\", line 117, in <module>\r\n    class FilterSet(six.with_metaclass(FilterSetMetaclass, filterset.FilterSet)):\r\n  File \"/opt/py27/lib/python2.7/site-packages/django/utils/six.py\", line 808, in __new__\r\n    return meta(name, bases, d)\r\n  File \"/opt/py27/lib/python2.7/site-packages/rest_framework_filters/filterset.py\", line 39, in __new__\r\n    new_class = super(FilterSetMetaclass, cls).__new__(cls, name, bases, attrs)\r\n  File \"/opt/py27/lib/python2.7/site-packages/django_filters/filterset.py\", line 85, in __new__\r\n    new_class.base_filters = new_class.get_filters()\r\nTypeError: Error when calling the metaclass bases\r\n    unbound method get_filters() must be called with FilterSet instance as first argument (got nothing instead)\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/159", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/159/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/159/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/159", "id": 200472602, "node_id": "MDU6SXNzdWUyMDA0NzI2MDI=", "number": 159, "title": "README DRF versions are outdated (3.3, 3.4 => 3.4, 3.5)", "user": {"login": "Jaredn", "id": 6464367, "node_id": "MDQ6VXNlcjY0NjQzNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6464367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaredn", "html_url": "https://github.com/Jaredn", "followers_url": "https://api.github.com/users/Jaredn/followers", "following_url": "https://api.github.com/users/Jaredn/following{/other_user}", "gists_url": "https://api.github.com/users/Jaredn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaredn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaredn/subscriptions", "organizations_url": "https://api.github.com/users/Jaredn/orgs", "repos_url": "https://api.github.com/users/Jaredn/repos", "events_url": "https://api.github.com/users/Jaredn/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaredn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-12T20:35:06Z", "updated_at": "2017-01-29T22:13:36Z", "closed_at": "2017-01-29T22:13:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wondering if this is DRF 3.5.x compatible.  Documentation says 3.3 and 3.4.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/156", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/156/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/156/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/156", "id": 198323778, "node_id": "MDU6SXNzdWUxOTgzMjM3Nzg=", "number": 156, "title": "give me error when I use \"MongoModelViewSet using rest-framework-mongoengine", "user": {"login": "KiranPrajapati345", "id": 20300526, "node_id": "MDQ6VXNlcjIwMzAwNTI2", "avatar_url": "https://avatars0.githubusercontent.com/u/20300526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiranPrajapati345", "html_url": "https://github.com/KiranPrajapati345", "followers_url": "https://api.github.com/users/KiranPrajapati345/followers", "following_url": "https://api.github.com/users/KiranPrajapati345/following{/other_user}", "gists_url": "https://api.github.com/users/KiranPrajapati345/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiranPrajapati345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiranPrajapati345/subscriptions", "organizations_url": "https://api.github.com/users/KiranPrajapati345/orgs", "repos_url": "https://api.github.com/users/KiranPrajapati345/repos", "events_url": "https://api.github.com/users/KiranPrajapati345/events{/privacy}", "received_events_url": "https://api.github.com/users/KiranPrajapati345/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-02T11:33:22Z", "updated_at": "2017-01-03T18:54:33Z", "closed_at": "2017-01-03T18:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code \r\n\r\n```py\r\nimport django_filters\r\nimport django_filters.rest_framework\r\n\r\nfrom rest_framework_mongoengine.viewsets import ModelViewSet as MongoModelViewSet\r\nfrom app.serializers import *\r\nfrom rest_framework_mongoengine.generics import *    \r\nfrom rest_framework import filters    \r\n\r\nfrom rest_framework.filters import SearchFilter\r\nfrom django_filters import Filter,CharFilter\r\nfrom django_filters.fields import Lookup\r\nfrom rest_framework import generics,filters\r\ndef index_view(request):\r\n    context = {}\r\n    return TemplateResponse(request, 'index.html', context)\r\n\r\n\r\nclass ListFilter(CharFilter):\r\n    def sanitize(self, value_list):\r\n        return [v for v in value_list if v != u'']\r\n\r\n    def customize(self, value):\r\n        return value\r\n\r\n    def filter(self, qs, value):\r\n        multiple_vals = value.split(u\",\")\r\n        multiple_vals = self.sanitize(multiple_vals)\r\n        multiple_vals = map(self.customize, multiple_vals)\r\n        actual_filter = django_filters.fields.Lookup(multiple_vals, 'in')\r\n        return super(ListFilter, self).filter(qs, actual_filter)\r\n\r\nclass ListIntegerFilter(ListFilter):\r\n    def customize(self, value):\r\n        return int(value)\r\n\r\nclass ToolFilterSet(django_filters.FilterSet):\r\n    crop = ListFilter(name='fruit',)\r\n    district = ListFilter(name='district',)\r\n    taluka = ListFilter(name='taluka',)\r\n    class Meta:\r\n        model = Tool\r\n        fields = ['crop','district','taluka',]\r\n\r\n\r\n\r\nclass ToolViewSet(MongoModelViewSet):\r\n    queryset = Tool.objects.all()\r\n    model=Tool\r\n    serializer_class = ToolSerializer\r\n    filter_backends = (django_filters.rest_framework.DjangoFilterBackend,SearchFilter,filters.OrderingFilter,)\r\n    filter_class = ToolFilterSet\r\n    search_fields=['crop','district','taluka',]  \r\n    ordering_fields = '__all__'\r\n```\r\n\r\n\r\nthis is code:\r\nand I got the error :  \r\nAttributeError: 'MetaDict' object has no attribute 'get_field'\r\n\r\nSo, how can I filter my multiple fields value?\r\nHow can I get then if someone want data for  http://tool/?district=Pune,Nasik    using rest-framework-filters I have data stored in mongodb.\r\n\r\nEdited for formatting (@rpkilby)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/155", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/155/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/155/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/155", "id": 198215924, "node_id": "MDU6SXNzdWUxOTgyMTU5MjQ=", "number": 155, "title": "TypeError: get_filters() missing 1 required positional argument: 'self'", "user": {"login": "bashu", "id": 144783, "node_id": "MDQ6VXNlcjE0NDc4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/144783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bashu", "html_url": "https://github.com/bashu", "followers_url": "https://api.github.com/users/bashu/followers", "following_url": "https://api.github.com/users/bashu/following{/other_user}", "gists_url": "https://api.github.com/users/bashu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bashu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bashu/subscriptions", "organizations_url": "https://api.github.com/users/bashu/orgs", "repos_url": "https://api.github.com/users/bashu/repos", "events_url": "https://api.github.com/users/bashu/events{/privacy}", "received_events_url": "https://api.github.com/users/bashu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-31T03:40:01Z", "updated_at": "2017-10-20T19:41:30Z", "closed_at": "2016-12-31T03:42:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n...\r\n  File \"/home/vagrant/morpheus/djangoapp/workouts/api.py\", line 7, in <module>\r\n    import rest_framework_filters as filters\r\n  File \"/home/vagrant/.virtualenv/lib/python3.4/site-packages/rest_framework_filters/__init__.py\", line 3, in <module>\r\n    from .filterset import FilterSet\r\n  File \"/home/vagrant/.virtualenv/lib/python3.4/site-packages/rest_framework_filters/filterset.py\", line 101, in <module>\r\n    class FilterSet(six.with_metaclass(FilterSetMetaclass, rest_framework.FilterSet)):\r\n  File \"/home/vagrant/.virtualenv/lib/python3.4/site-packages/django/utils/six.py\", line 808, in __new__\r\n    return meta(name, bases, d)\r\n  File \"/home/vagrant/.virtualenv/lib/python3.4/site-packages/rest_framework_filters/filterset.py\", line 36, in __new__\r\n    new_class = super(FilterSetMetaclass, cls).__new__(cls, name, bases, attrs)\r\n  File \"/home/vagrant/.virtualenv/lib/python3.4/site-packages/django_filters/filterset.py\", line 85, in __new__\r\n    new_class.base_filters = new_class.get_filters()\r\nTypeError: get_filters() missing 1 required positional argument: 'self'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/153", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/153/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/153/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/153", "id": 197641890, "node_id": "MDU6SXNzdWUxOTc2NDE4OTA=", "number": 153, "title": "Travis failures with django-filter 1.0.1", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-27T03:52:53Z", "updated_at": "2016-12-27T21:49:50Z", "closed_at": "2016-12-27T21:49:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The last Travis run on master was green:\r\nhttps://travis-ci.org/philipn/django-rest-framework-filters/jobs/176898665\r\n\r\nHowever a newer run on a PR that only updates changelog.rst is now failing on Python 2.7/3.4 (but not 3.5):\r\nhttps://travis-ci.org/philipn/django-rest-framework-filters/jobs/186893153\r\n\r\nOne difference between the runs appears to be that the latter is using django-filter 1.0.1 vs 1.0.0.\r\n\r\nChangelog:\r\nhttps://github.com/carltongibson/django-filter/compare/1.0.0...1.0.1\r\n\r\nI'm guessing django-rest-framework-filters needs to adjust to:\r\nhttps://github.com/carltongibson/django-filter/commit/d5516f9828fd7ab5e59359ad6ade5fa5bcbbb949", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/151", "repository_url": "https://api.github.com/repos/philipn/django-rest-framework-filters", "labels_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/151/comments", "events_url": "https://api.github.com/repos/philipn/django-rest-framework-filters/issues/151/events", "html_url": "https://github.com/philipn/django-rest-framework-filters/issues/151", "id": 197634348, "node_id": "MDU6SXNzdWUxOTc2MzQzNDg=", "number": 151, "title": "v0.9.1 changelog entry missing from master", "user": {"login": "edmorley", "id": 501702, "node_id": "MDQ6VXNlcjUwMTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/501702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edmorley", "html_url": "https://github.com/edmorley", "followers_url": "https://api.github.com/users/edmorley/followers", "following_url": "https://api.github.com/users/edmorley/following{/other_user}", "gists_url": "https://api.github.com/users/edmorley/gists{/gist_id}", "starred_url": "https://api.github.com/users/edmorley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edmorley/subscriptions", "organizations_url": "https://api.github.com/users/edmorley/orgs", "repos_url": "https://api.github.com/users/edmorley/repos", "events_url": "https://api.github.com/users/edmorley/events{/privacy}", "received_events_url": "https://api.github.com/users/edmorley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-27T02:07:49Z", "updated_at": "2016-12-27T21:25:46Z", "closed_at": "2016-12-27T21:25:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Compare:\r\nhttps://github.com/philipn/django-rest-framework-filters/blob/0.9.x/CHANGELOG.rst\r\nhttps://github.com/philipn/django-rest-framework-filters/blob/master/CHANGELOG.rst\r\n\r\nI'll open a PR shortly :-)", "performed_via_github_app": null, "score": 1.0}]}