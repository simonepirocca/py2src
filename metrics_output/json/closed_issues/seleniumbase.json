{"total_count": 153, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/657", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/657/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/657/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/657", "id": 679799104, "node_id": "MDU6SXNzdWU2Nzk3OTkxMDQ=", "number": 657, "title": "How to get input variable while running pytest for SeleniumBase in Python?", "user": {"login": "bsmith4133", "id": 69334328, "node_id": "MDQ6VXNlcjY5MzM0MzI4", "avatar_url": "https://avatars2.githubusercontent.com/u/69334328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsmith4133", "html_url": "https://github.com/bsmith4133", "followers_url": "https://api.github.com/users/bsmith4133/followers", "following_url": "https://api.github.com/users/bsmith4133/following{/other_user}", "gists_url": "https://api.github.com/users/bsmith4133/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsmith4133/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsmith4133/subscriptions", "organizations_url": "https://api.github.com/users/bsmith4133/orgs", "repos_url": "https://api.github.com/users/bsmith4133/repos", "events_url": "https://api.github.com/users/bsmith4133/events{/privacy}", "received_events_url": "https://api.github.com/users/bsmith4133/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-16T18:08:16Z", "updated_at": "2020-08-18T23:05:23Z", "closed_at": "2020-08-18T23:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The file I upload to a website changes with each run, and I'd like a way to change it in test method. Currently, I have it set up like this:\r\n## functions.py\r\n```\r\ndef get_file():\r\n    ...\r\n    file = file_ex1.doc\r\n    return file\r\n\r\ndef run_test1():\r\n    cmd = \"pytest -v webtests.py::EF --browser=chrome\"\r\n    subprocess.run(split(cmd))  # run command line\r\n...\r\n```\r\n\r\n## webtests.py\r\n```\r\nfile_path = file  # changes with each run\r\n\r\nclass EF(BaseCase):\r\n    def test_now(self):\r\n        self.open('https://www...')\r\n        self.find_element('input[name=\"Query\"]').send_keys(file_path)`\r\n\r\n```\r\nI was wondering about the best way to change the `file_path` variable based on the output of certain functions in `functions.py`. For example, it could sometimes produce a file called file1 to upload, or another time filet2.txt. What's the best way to connect the two scripts and run `test_now()` with the updated file path each run?\r\n\r\nThanks so much in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/650", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/650/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/650/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/650", "id": 678135362, "node_id": "MDU6SXNzdWU2NzgxMzUzNjI=", "number": 650, "title": "Using the SeleniumBase module in Python, how to get URL of link that changes with each query?", "user": {"login": "bsmith4133", "id": 69334328, "node_id": "MDQ6VXNlcjY5MzM0MzI4", "avatar_url": "https://avatars2.githubusercontent.com/u/69334328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsmith4133", "html_url": "https://github.com/bsmith4133", "followers_url": "https://api.github.com/users/bsmith4133/followers", "following_url": "https://api.github.com/users/bsmith4133/following{/other_user}", "gists_url": "https://api.github.com/users/bsmith4133/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsmith4133/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsmith4133/subscriptions", "organizations_url": "https://api.github.com/users/bsmith4133/orgs", "repos_url": "https://api.github.com/users/bsmith4133/repos", "events_url": "https://api.github.com/users/bsmith4133/events{/privacy}", "received_events_url": "https://api.github.com/users/bsmith4133/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-13T04:11:42Z", "updated_at": "2020-08-16T17:35:45Z", "closed_at": "2020-08-16T17:35:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the HTML from a website I'm working with:\r\n\r\n```\r\n<pre>\r\nUnique sequence file: \r\n<a href=\"/cgi-bin/elimdupesv2/elimdupes.cgi?id=4ROEFYUD&amp;output=unique_default.Fasta\">View</a> \r\n<a href=\"/cgi-bin/elimdupesv2/elimdupes.cgi?id=4ROEFYUD&amp;download=unique_default.Fasta\">Download</a>\r\n<pre>\r\n```\r\n\r\nWhat's displayed:\r\n\r\nUnique sequence file: View Download\r\n\r\nThe download link changes every run because a different file is produced. How should I extract the URL and save it into a variable to download the file? I tried this but it didn't work:\r\n\r\n```\r\nclass Example(BaseCase):\r\n\r\ndef test_(self):\r\n    ...\r\n    url = self.find_link_text('Download', timeout=None).get_link_attribute()\r\n    self.download_file(file_url, destination_folder=None)\r\n```\r\n\r\nThanks a bunch in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/642", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/642/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/642/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/642", "id": 668428363, "node_id": "MDU6SXNzdWU2Njg0MjgzNjM=", "number": 642, "title": "Feature for Screen(video) recording of browser", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T06:56:59Z", "updated_at": "2020-07-30T13:07:39Z", "closed_at": "2020-07-30T13:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\r\nFeature Enhancement request:\r\ncan you add something like to record video of each test case ? in headed mode and headless mode both ?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/640", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/640/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/640/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/640", "id": 667108326, "node_id": "MDU6SXNzdWU2NjcxMDgzMjY=", "number": 640, "title": "Add the ability to create charts with SeleniumBase", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094999, "node_id": "MDU6TGFiZWw4NDA5NDk5OQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-28T14:13:14Z", "updated_at": "2020-07-28T16:07:09Z", "closed_at": "2020-07-28T14:13:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Add the ability to create charts with SeleniumBase.\r\n* Pie Charts\r\n* Line Charts\r\n* Column Charts\r\n* Bar Charts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/639", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/639/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/639/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/639", "id": 666966848, "node_id": "MDU6SXNzdWU2NjY5NjY4NDg=", "number": 639, "title": "please add the function of uploading files", "user": {"login": "kinghua2008", "id": 42334723, "node_id": "MDQ6VXNlcjQyMzM0NzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/42334723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kinghua2008", "html_url": "https://github.com/kinghua2008", "followers_url": "https://api.github.com/users/kinghua2008/followers", "following_url": "https://api.github.com/users/kinghua2008/following{/other_user}", "gists_url": "https://api.github.com/users/kinghua2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/kinghua2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kinghua2008/subscriptions", "organizations_url": "https://api.github.com/users/kinghua2008/orgs", "repos_url": "https://api.github.com/users/kinghua2008/repos", "events_url": "https://api.github.com/users/kinghua2008/events{/privacy}", "received_events_url": "https://api.github.com/users/kinghua2008/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-28T10:34:57Z", "updated_at": "2020-07-28T10:44:48Z", "closed_at": "2020-07-28T10:44:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "please add the function of uploading files something like selenium", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/634", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/634/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/634/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/634", "id": 662832891, "node_id": "MDU6SXNzdWU2NjI4MzI4OTE=", "number": 634, "title": "Pytests with BaseCase not run in order", "user": {"login": "jbnjohnathan", "id": 54041505, "node_id": "MDQ6VXNlcjU0MDQxNTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/54041505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbnjohnathan", "html_url": "https://github.com/jbnjohnathan", "followers_url": "https://api.github.com/users/jbnjohnathan/followers", "following_url": "https://api.github.com/users/jbnjohnathan/following{/other_user}", "gists_url": "https://api.github.com/users/jbnjohnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbnjohnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbnjohnathan/subscriptions", "organizations_url": "https://api.github.com/users/jbnjohnathan/orgs", "repos_url": "https://api.github.com/users/jbnjohnathan/repos", "events_url": "https://api.github.com/users/jbnjohnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/jbnjohnathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-21T10:05:20Z", "updated_at": "2020-07-23T07:18:17Z", "closed_at": "2020-07-23T03:08:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider this simple pytest script\r\n\r\n```\r\ndef test_one():\r\n    assert True\r\n\r\ndef test_two():\r\n    assert True\r\n\r\ndef test_three():\r\n    assert True\r\n```\r\nWe run it with: `$ env/bin/pytest -sv tests/test_order_simple.py`\r\n\r\nThe output will be\r\n```\r\ntests/test_order_simple.py::test_one PASSED\r\ntests/test_order_simple.py::test_two PASSED\r\ntests/test_order_simple.py::test_three PASSED\r\n```\r\n\r\nNow lets get it in a class and use BaseCase\r\n```\r\nfrom seleniumbase import BaseCase\r\nfrom selenium.webdriver.common.by import By\r\nimport os\r\nfrom selenium.common import exceptions\r\n\r\n\r\nclass MyTestClass(BaseCase):\r\n    def test_one(self):\r\n        assert True\r\n\r\n    def test_two(self):\r\n        assert True\r\n\r\n    def test_three(self):\r\n        assert True\r\n```\r\nLets run it in the same way `$ env/bin/pytest -sv tests/test_order_simple.py`\r\n\r\n```\r\ntests/test_order.py::MyTestClass::test_one FAILED\r\ntests/test_order.py::MyTestClass::test_three FAILED\r\ntests/test_order.py::MyTestClass::test_two FAILED\r\n```\r\n\r\nLet's not focus on the fail, but rather the order in which it is run in. 1,3,2. Why is this not run in order from top to bottom?\r\nWhen I run my more advanced SeleniumBase pytest I find that it seems to run from bottom to top, but I haven't checked the exact order of all the functions.\r\n\r\nseleniumbase==1.42.5\r\npytest==5.4.3\r\nRunning in Ubuntu 18.04.2 (WSL 2)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/631", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/631/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/631/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/631", "id": 661301096, "node_id": "MDU6SXNzdWU2NjEzMDEwOTY=", "number": 631, "title": "How to get the current selection of the drop-down box\uff1f", "user": {"login": "zhonghai9967", "id": 64431881, "node_id": "MDQ6VXNlcjY0NDMxODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/64431881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhonghai9967", "html_url": "https://github.com/zhonghai9967", "followers_url": "https://api.github.com/users/zhonghai9967/followers", "following_url": "https://api.github.com/users/zhonghai9967/following{/other_user}", "gists_url": "https://api.github.com/users/zhonghai9967/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhonghai9967/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhonghai9967/subscriptions", "organizations_url": "https://api.github.com/users/zhonghai9967/orgs", "repos_url": "https://api.github.com/users/zhonghai9967/repos", "events_url": "https://api.github.com/users/zhonghai9967/events{/privacy}", "received_events_url": "https://api.github.com/users/zhonghai9967/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-20T03:04:00Z", "updated_at": "2020-07-21T00:50:17Z", "closed_at": "2020-07-21T00:50:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "self.select_option_by_text\uff08\uff09\u3001index\u3001value,These methods can be selected.\r\nFor the drop-down box that has been selected, how much does it mean selection or index or value?\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/629", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/629/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/629/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/629", "id": 660982469, "node_id": "MDU6SXNzdWU2NjA5ODI0Njk=", "number": 629, "title": "UnicodeDecodeErrors on Windows when using codecs.open(*) with UTF-8 characters", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094997, "node_id": "MDU6TGFiZWw4NDA5NDk5Nw==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/bug", "name": "bug", "color": "f83e3e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-19T18:12:25Z", "updated_at": "2020-07-21T14:32:23Z", "closed_at": "2020-07-19T18:25:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "UnicodeDecodeErrors on Windows with UTF-8 characters when using codecs.open(*)\r\n\r\nThis can impact:\r\n* SeleniumBase Tours\r\n* SeleniumBase Presentations\r\n* Exporting web pages to HTML\r\n\r\nExample:\r\nExporting a SeleniumBase Tour that contains an emoji\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/628", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/628/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/628/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/628", "id": 659189250, "node_id": "MDU6SXNzdWU2NTkxODkyNTA=", "number": 628, "title": "how to change chrome from pc mode into mobile mode in one test?", "user": {"login": "guke1991", "id": 6972503, "node_id": "MDQ6VXNlcjY5NzI1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6972503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guke1991", "html_url": "https://github.com/guke1991", "followers_url": "https://api.github.com/users/guke1991/followers", "following_url": "https://api.github.com/users/guke1991/following{/other_user}", "gists_url": "https://api.github.com/users/guke1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/guke1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guke1991/subscriptions", "organizations_url": "https://api.github.com/users/guke1991/orgs", "repos_url": "https://api.github.com/users/guke1991/repos", "events_url": "https://api.github.com/users/guke1991/events{/privacy}", "received_events_url": "https://api.github.com/users/guke1991/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T11:45:50Z", "updated_at": "2020-07-19T19:57:19Z", "closed_at": "2020-07-19T19:57:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "        mobileEmulation = {'deviceName': 'iPhone X'}\r\n        options = webdriver.ChromeOptions()\r\n        options.add_experimental_option('mobileEmulation', mobileEmulation)\r\n        self.driver = webdriver.Chrome(chrome_options=options)\r\n\r\nthis code work in windows\uff08open a new chrome\uff09 ,but rebort an error in linux.\r\n\r\nor how to set different tests with different mode(pc/mobile)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/626", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/626/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/626/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/626", "id": 657289360, "node_id": "MDU6SXNzdWU2NTcyODkzNjA=", "number": 626, "title": " Stay in the same webpage between tests", "user": {"login": "mrverde", "id": 25179425, "node_id": "MDQ6VXNlcjI1MTc5NDI1", "avatar_url": "https://avatars1.githubusercontent.com/u/25179425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrverde", "html_url": "https://github.com/mrverde", "followers_url": "https://api.github.com/users/mrverde/followers", "following_url": "https://api.github.com/users/mrverde/following{/other_user}", "gists_url": "https://api.github.com/users/mrverde/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrverde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrverde/subscriptions", "organizations_url": "https://api.github.com/users/mrverde/orgs", "repos_url": "https://api.github.com/users/mrverde/repos", "events_url": "https://api.github.com/users/mrverde/events{/privacy}", "received_events_url": "https://api.github.com/users/mrverde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094999, "node_id": "MDU6TGFiZWw4NDA5NDk5OQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-15T11:50:29Z", "updated_at": "2020-07-17T14:51:00Z", "closed_at": "2020-07-15T22:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello @mdmintz\r\n\r\nIs it possible to stay on the same web page where a test ends as the initial web page in the next test?\r\n\r\nI tried to use --reuse-session on the command line, but between tests (in Chrome browser) I always get the \"data :,\" page. I can't use the command line option --start-page = URL because I always need the last web used.\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/625", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/625/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/625/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/625", "id": 657149241, "node_id": "MDU6SXNzdWU2NTcxNDkyNDE=", "number": 625, "title": "How to put password in?", "user": {"login": "SwannZhang412", "id": 43056867, "node_id": "MDQ6VXNlcjQzMDU2ODY3", "avatar_url": "https://avatars0.githubusercontent.com/u/43056867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SwannZhang412", "html_url": "https://github.com/SwannZhang412", "followers_url": "https://api.github.com/users/SwannZhang412/followers", "following_url": "https://api.github.com/users/SwannZhang412/following{/other_user}", "gists_url": "https://api.github.com/users/SwannZhang412/gists{/gist_id}", "starred_url": "https://api.github.com/users/SwannZhang412/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SwannZhang412/subscriptions", "organizations_url": "https://api.github.com/users/SwannZhang412/orgs", "repos_url": "https://api.github.com/users/SwannZhang412/repos", "events_url": "https://api.github.com/users/SwannZhang412/events{/privacy}", "received_events_url": "https://api.github.com/users/SwannZhang412/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-15T08:03:45Z", "updated_at": "2020-07-19T19:57:05Z", "closed_at": "2020-07-19T19:57:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\uff0c@mdmintz\r\nI need to put password in, like this: \r\n![image](https://user-images.githubusercontent.com/43056867/87501510-d687c100-c691-11ea-99e1-11ca852d46c7.png)\r\n\r\n\r\nthen I use:\r\n![image](https://user-images.githubusercontent.com/43056867/87501172-07b3c180-c691-11ea-8f08-987cb88beaf9.png)\r\nit return:\r\n![image](https://user-images.githubusercontent.com/43056867/87501195-169a7400-c691-11ea-8fe1-c5ce8c375f8b.png)\r\n\r\nMany thanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/624", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/624/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/624/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/624", "id": 656621293, "node_id": "MDU6SXNzdWU2NTY2MjEyOTM=", "number": 624, "title": "How to triple click a text field/area?", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-07-14T13:40:32Z", "updated_at": "2020-07-17T14:51:31Z", "closed_at": "2020-07-15T07:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @mdmintz ,\r\n\r\nIs there any way to perform triple clicks?\r\n\r\nI need to select text from a field and I might have multiple whitespaces inside the text, so a double click won't suffice.\r\n\r\nMany thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/619", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/619/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/619/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/619", "id": 655032795, "node_id": "MDU6SXNzdWU2NTUwMzI3OTU=", "number": 619, "title": "How do I add a custom Chrome command-line argument?", "user": {"login": "mildmojo", "id": 103495, "node_id": "MDQ6VXNlcjEwMzQ5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/103495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mildmojo", "html_url": "https://github.com/mildmojo", "followers_url": "https://api.github.com/users/mildmojo/followers", "following_url": "https://api.github.com/users/mildmojo/following{/other_user}", "gists_url": "https://api.github.com/users/mildmojo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mildmojo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mildmojo/subscriptions", "organizations_url": "https://api.github.com/users/mildmojo/orgs", "repos_url": "https://api.github.com/users/mildmojo/repos", "events_url": "https://api.github.com/users/mildmojo/events{/privacy}", "received_events_url": "https://api.github.com/users/mildmojo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094999, "node_id": "MDU6TGFiZWw4NDA5NDk5OQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-07-10T20:58:37Z", "updated_at": "2020-07-17T18:16:44Z", "closed_at": "2020-07-10T23:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Python project using SeleniumBase 1.34.11 that's running inside a docker container, and I'm forwarding my pytest run to the X server on my Linux host. Unfortunately, Chrome v79 has a bug that makes it render a blank window to my host X server (nothing, no UI at all).\r\n\r\nIn the [Chromium project bug report](https://bugs.chromium.org/p/chromium/issues/detail?id=1048186#c3), one commenter suggests starting Chrome with `--use-gl=swiftshader` to enable software rendering. This works for me; I can run `google-chrome --use-gl=swiftshader`, and I get a regular Chome window with full UI.\r\n\r\nI'd like to send that argument to Chrome via SeleniumBase. I've looked through the documentation and the issues in this repo, but I don't see any mention or examples of custom Chrome options. In the codebase, I see where the browser launcher's [_set_chrome_options](https://github.com/seleniumbase/SeleniumBase/blob/master/seleniumbase/core/browser_launcher.py#L131) gets a ChromeOptions object and sets arguments on it, but it seems like it only understands hardcoded arguments.\r\n\r\nIs there a way to add a custom Chrome command-line argument?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/616", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/616/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/616/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/616", "id": 653869181, "node_id": "MDU6SXNzdWU2NTM4NjkxODE=", "number": 616, "title": "Feature request - add method assert_not_text", "user": {"login": "jbnjohnathan", "id": 54041505, "node_id": "MDQ6VXNlcjU0MDQxNTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/54041505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbnjohnathan", "html_url": "https://github.com/jbnjohnathan", "followers_url": "https://api.github.com/users/jbnjohnathan/followers", "following_url": "https://api.github.com/users/jbnjohnathan/following{/other_user}", "gists_url": "https://api.github.com/users/jbnjohnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbnjohnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbnjohnathan/subscriptions", "organizations_url": "https://api.github.com/users/jbnjohnathan/orgs", "repos_url": "https://api.github.com/users/jbnjohnathan/repos", "events_url": "https://api.github.com/users/jbnjohnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/jbnjohnathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T08:27:22Z", "updated_at": "2020-07-09T08:33:16Z", "closed_at": "2020-07-09T08:33:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am testing a website, and as part of the test I am removing an element of the page by clicking on the X. \r\n(See <https://ant.design/components/select/> - multiple selection)\r\nAfter I click the X to remove the selection I would like to assert that it is no longer present.\r\nI have a method for asserting that texts does exist, `self.assert_text(\"some text\") but I would like to opposite.\r\n\r\nI have checked the list of methods here - <https://github.com/seleniumbase/SeleniumBase/blob/master/help_docs/method_summary.md> but have not found the function I am after.\r\n\r\nAnother way of solving it would be to include something that could negate any of the already existing functions.\r\n\r\nI worked around this by trying to find the text and catching the ElementNotVisibleException exception. But if a `assert_not_text` function was included that could make this use much less code in the test script.\r\n\r\n```\r\nfrom selenium.common import exceptions\r\nfrom seleniumbase import BaseCase\r\nclass MyTestClass(BaseCase):\r\n    def test_text_not_exist(self):\r\n        text_exist = True\r\n        try:\r\n            self.assert_text(\"some text\")\r\n        except exceptions.ElementNotVisibleException:\r\n            text_exist = False\r\n\r\n        assert text_exist is False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/615", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/615/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/615/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/615", "id": 653857735, "node_id": "MDU6SXNzdWU2NTM4NTc3MzU=", "number": 615, "title": "How to prevent the browser from loading pictures\uff1f", "user": {"login": "guke1991", "id": 6972503, "node_id": "MDQ6VXNlcjY5NzI1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6972503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guke1991", "html_url": "https://github.com/guke1991", "followers_url": "https://api.github.com/users/guke1991/followers", "following_url": "https://api.github.com/users/guke1991/following{/other_user}", "gists_url": "https://api.github.com/users/guke1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/guke1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guke1991/subscriptions", "organizations_url": "https://api.github.com/users/guke1991/orgs", "repos_url": "https://api.github.com/users/guke1991/repos", "events_url": "https://api.github.com/users/guke1991/events{/privacy}", "received_events_url": "https://api.github.com/users/guke1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-09T08:10:08Z", "updated_at": "2020-07-10T02:23:45Z", "closed_at": "2020-07-10T02:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want improve test speed.\r\n\r\n```\r\nchrome_options = webdriver.ChromeOptions()\r\nprefs = {\"profile.managed_default_content_settings.images\": 2}\r\nchrome_options.add_experimental_option(\"prefs\", prefs)\r\nself.driver = webdriver.Chrome(chrome_options=chrome_options)\r\n```\r\n\r\nthis code can do it,but will open a new chrome.\r\nhow to make it in only one chrome?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/613", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/613/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/613/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/613", "id": 653557969, "node_id": "MDU6SXNzdWU2NTM1NTc5Njk=", "number": 613, "title": "Selenium", "user": {"login": "gopinath126", "id": 65773600, "node_id": "MDQ6VXNlcjY1NzczNjAw", "avatar_url": "https://avatars3.githubusercontent.com/u/65773600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gopinath126", "html_url": "https://github.com/gopinath126", "followers_url": "https://api.github.com/users/gopinath126/followers", "following_url": "https://api.github.com/users/gopinath126/following{/other_user}", "gists_url": "https://api.github.com/users/gopinath126/gists{/gist_id}", "starred_url": "https://api.github.com/users/gopinath126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gopinath126/subscriptions", "organizations_url": "https://api.github.com/users/gopinath126/orgs", "repos_url": "https://api.github.com/users/gopinath126/repos", "events_url": "https://api.github.com/users/gopinath126/events{/privacy}", "received_events_url": "https://api.github.com/users/gopinath126/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095000, "node_id": "MDU6TGFiZWw4NDA5NTAwMA==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-08T19:58:45Z", "updated_at": "2020-07-08T21:06:34Z", "closed_at": "2020-07-08T21:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/612", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/612/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/612/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/612", "id": 652384066, "node_id": "MDU6SXNzdWU2NTIzODQwNjY=", "number": 612, "title": "element not found using XPath", "user": {"login": "jbnjohnathan", "id": 54041505, "node_id": "MDQ6VXNlcjU0MDQxNTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/54041505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbnjohnathan", "html_url": "https://github.com/jbnjohnathan", "followers_url": "https://api.github.com/users/jbnjohnathan/followers", "following_url": "https://api.github.com/users/jbnjohnathan/following{/other_user}", "gists_url": "https://api.github.com/users/jbnjohnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbnjohnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbnjohnathan/subscriptions", "organizations_url": "https://api.github.com/users/jbnjohnathan/orgs", "repos_url": "https://api.github.com/users/jbnjohnathan/repos", "events_url": "https://api.github.com/users/jbnjohnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/jbnjohnathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-07T14:45:28Z", "updated_at": "2020-07-09T20:35:08Z", "closed_at": "2020-07-09T20:35:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to click on a drop down box created in React in order to select an item in it\r\n\r\nThis is my SeleniumBase code which is not working (running with `pytest --browser=firefox`)\r\n```\r\nfrom seleniumbase import BaseCase\r\nclass MyTestClass(BaseCase):\r\n    def test_ant_dropdown(self):\r\n        url = \"https://ant.design/components/select/\"\r\n        self.open(url)\r\n        self.assert_title(\"Select - Ant Design\")\r\n        self.click('//*[@id=\"rc_select_13\"]')\r\n```\r\nError message is\r\n```\r\nexception = <class 'selenium.common.exceptions.ElementNotVisibleException'>\r\nmessage = '\\n Element {//*[@id=\"rc_select_13\"]} was not visible after 6 seconds!'\r\n```\r\n\r\nTrying the same with Selenium Webdriver (this works)\r\n```\r\n# Generated by Selenium IDE\r\nimport pytest\r\nimport time\r\nimport json\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.common.action_chains import ActionChains\r\nfrom selenium.webdriver.support import expected_conditions\r\nfrom selenium.webdriver.support.wait import WebDriverWait\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n\r\n\r\nclass TestAdddevice:\r\n    def setup_method(self, method):\r\n        # self.driver = webdriver.Firefox()\r\n        self.driver = webdriver.Firefox(\r\n            executable_path=r\"/usr/local/lib/python3.7/dist-packages/seleniumbase-1.42.4-py3.7.egg/seleniumbase/drivers/geckodriver\"\r\n        )\r\n        self.vars = {}\r\n\r\n    def teardown_method(self, method):\r\n        self.driver.quit()\r\n\r\n    def test_adddevice(self):\r\n        self.driver.get(\"https://ant.design/components/select/\")\r\n        self.driver.find_element(By.XPATH, \"//*[@id='rc_select_13']\").click()\r\n```\r\nThis works.\r\nThe XPATH is exactly the same, but for some reason SeleniumBase cannot click it.\r\n\r\nAs I workaround I use this code which works\r\n```\r\nfrom seleniumbase import BaseCase\r\nfrom selenium.webdriver.common.by import By\r\nclass MyTestClass(BaseCase):\r\n    def test_ant_dropdown(self):\r\n        url = \"https://ant.design/components/select/\"\r\n        self.open(url)\r\n        self.assert_title(\"Select - Ant Design\")\r\n        self.driver.find_element(By.XPATH, \"//*[@id='rc_select_13']\").click()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/611", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/611/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/611/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/611", "id": 652034972, "node_id": "MDU6SXNzdWU2NTIwMzQ5NzI=", "number": 611, "title": "ignore self signed cert check argument ", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T06:16:30Z", "updated_at": "2020-07-09T20:33:02Z", "closed_at": "2020-07-09T20:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\ni have checked your all command line options but not founded option for disable to check ssl verification.\r\nso i need help to ignore self signed cert check .\r\n\r\nso is any option available for that?\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/602", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/602/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/602/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/602", "id": 646174935, "node_id": "MDU6SXNzdWU2NDYxNzQ5MzU=", "number": 602, "title": "proxy pass using hostname", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-26T10:43:15Z", "updated_at": "2020-06-29T08:29:15Z", "closed_at": "2020-06-29T08:29:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest in i am passing argument like\r\npipenv run pytest . -m 'basic' --browser=chrome --proxy=172.19.0.2:8090\r\nso\r\n--proxy=IP_ADDRESS:PORT\r\nis only allowing to use ip address.\r\n\r\ni using docker so in proxy we want to pass hostname instead of ip.\r\nbecause we don't know ip address .\r\nso my expectation is it will accept hostname also.\r\n--proxy=HOSTNAME:PORT\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/598", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/598/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/598/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/598", "id": 640892781, "node_id": "MDU6SXNzdWU2NDA4OTI3ODE=", "number": 598, "title": "Possible issue with collect-only package printing on Windows", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T04:14:33Z", "updated_at": "2020-06-18T04:54:01Z", "closed_at": "2020-06-18T04:54:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Microsoft found this issue: https://github.com/microsoft/vscode-python/issues/12372 , which they say is caused by https://github.com/pytest-dev/py/issues/245\r\nI'm going to do what Microsoft did and pin ``py`` to ``1.8.1`` when the sys platform is \"win32\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/595", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/595/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/595/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/595", "id": 634427337, "node_id": "MDU6SXNzdWU2MzQ0MjczMzc=", "number": 595, "title": "Feature: detect locator type by the value", "user": {"login": "aklajnert", "id": 18279161, "node_id": "MDQ6VXNlcjE4Mjc5MTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/18279161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aklajnert", "html_url": "https://github.com/aklajnert", "followers_url": "https://api.github.com/users/aklajnert/followers", "following_url": "https://api.github.com/users/aklajnert/following{/other_user}", "gists_url": "https://api.github.com/users/aklajnert/gists{/gist_id}", "starred_url": "https://api.github.com/users/aklajnert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aklajnert/subscriptions", "organizations_url": "https://api.github.com/users/aklajnert/orgs", "repos_url": "https://api.github.com/users/aklajnert/repos", "events_url": "https://api.github.com/users/aklajnert/events{/privacy}", "received_events_url": "https://api.github.com/users/aklajnert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T09:21:15Z", "updated_at": "2020-06-08T13:51:38Z", "closed_at": "2020-06-08T13:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my use case, I need to mix the default `CSS_SELECTOR` locators with `XPATH`. Most of the locators are reused between test so I keep them as constants, mostly in different files.\r\nThis is a bit annoying when I need to use them, as I need to remember to set valid `by` for the `XPATH` locators. \r\n\r\nThe types are easily distinguishable by looking at the value. I think it would make sense for the framework to figure it out automatically, and fallback to `CSS_SELECTOR` if the value is not recognized.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/592", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/592/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/592/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/592", "id": 629912259, "node_id": "MDU6SXNzdWU2Mjk5MTIyNTk=", "number": 592, "title": "Seleniumbase often raises a KeyError: session id when executing some javascript commands", "user": {"login": "symonk", "id": 17887843, "node_id": "MDQ6VXNlcjE3ODg3ODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/17887843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symonk", "html_url": "https://github.com/symonk", "followers_url": "https://api.github.com/users/symonk/followers", "following_url": "https://api.github.com/users/symonk/following{/other_user}", "gists_url": "https://api.github.com/users/symonk/gists{/gist_id}", "starred_url": "https://api.github.com/users/symonk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symonk/subscriptions", "organizations_url": "https://api.github.com/users/symonk/orgs", "repos_url": "https://api.github.com/users/symonk/repos", "events_url": "https://api.github.com/users/symonk/events{/privacy}", "received_events_url": "https://api.github.com/users/symonk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-03T11:20:13Z", "updated_at": "2020-06-10T03:41:17Z", "closed_at": "2020-06-10T03:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Often we see when executing tests in CI, the following:\r\n\r\n```python\r\nKeyError: 'sessionId'\r\n```\r\n\r\nWhen inspecting the stack during these incidents (varied/random when they occur) there is always one common trait, it is the execution of javascript.  See an example below:\r\n\r\n\r\n```\r\nproduct/pom/login_page.py:47: in login_as\r\n    censored_data\r\nproduct/pom/login_page.py:31: in decorated\r\n    censored_data\r\nproduct/pom/login_page.py:61: in __handle_login\r\n    censored_data\r\nproduct/pom/login_page.py:78: in accept_eula\r\n    censored_data\r\nproduct/pom/base_page.py:187: in click\r\n    censored_data\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:158: in click\r\n    self.wait_for_ready_state_complete()\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:1425: in wait_for_ready_state_complete\r\n    is_ready = js_utils.wait_for_ready_state_complete(self.driver, timeout)\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/js_utils.py:27: in wait_for_ready_state_complete\r\n    ready_state = driver.execute_script(\"return document.readyState\")\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/support/event_firing_webdriver.py:88: in execute_script\r\n    return self._dispatch(\"execute_script\", (script, self._driver), \"execute_script\", unwrapped_args)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/support/event_firing_webdriver.py:160: in _dispatch\r\n    raise e\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/support/event_firing_webdriver.py:157: in _dispatch\r\n    result = getattr(self._driver, d_call)(*d_args)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:636: in execute_script\r\n    'args': converted_args})['value']\r\nlib/plugins/stack_debugging_plugin.py:39: in execute\r\n    response = self.command_executor.execute(driver_command, params)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py:369: in execute\r\n    path = string.Template(command_info[1]).substitute(params)\r\n/usr/lib/python3.7/string.py:132: in substitute\r\n    return self.pattern.sub(convert, self.template)\r\n```\r\n\r\nUnfortunately its hard to create a 'recreatable' example, but we get around 1-2 keyerror session ID during a full CI run on pretty much every run, test varies massively.\r\n\r\nThis could also lie with selenium/grid/ etc, but I'd like to query your thoughts on it / what might be causing it.\r\n\r\nhas there been any changes regarding this stuff recently? (cant see any in release notes - I am currently rolling up dependency versions so it might be helped there, merely a question at this point).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/590", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/590/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/590/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/590", "id": 628836866, "node_id": "MDU6SXNzdWU2Mjg4MzY4NjY=", "number": 590, "title": "Exception: Message: connection refused when using firefox in Linux.", "user": {"login": "clobob", "id": 10508051, "node_id": "MDQ6VXNlcjEwNTA4MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/10508051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clobob", "html_url": "https://github.com/clobob", "followers_url": "https://api.github.com/users/clobob/followers", "following_url": "https://api.github.com/users/clobob/following{/other_user}", "gists_url": "https://api.github.com/users/clobob/gists{/gist_id}", "starred_url": "https://api.github.com/users/clobob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clobob/subscriptions", "organizations_url": "https://api.github.com/users/clobob/orgs", "repos_url": "https://api.github.com/users/clobob/repos", "events_url": "https://api.github.com/users/clobob/events{/privacy}", "received_events_url": "https://api.github.com/users/clobob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-02T01:43:40Z", "updated_at": "2020-06-03T08:24:00Z", "closed_at": "2020-06-03T08:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a Linux machine. Set up with python 3.75 + seleniumbase latest + geckodriver 0.17.0 + Firefox 52.2.0.\r\n\r\nTry to use seleniumbase to run test.  the firefox browser can be start-up but test can not run  and an '**Exception: Message: connection refused.**' show in bash window.\r\n\r\nHere is the code:\r\n`class DemoTestCase(BaseCase):\r\n\r\n\r\n\r\n    def test_demo_01(self):\r\n        self.open('http://www.baidu.com')\r\n        self.sleep(10)\r\n        self.quit()\r\n`\r\nand the command to run test:\r\n` pytest demo_sb_test.py -s --browser=firefox --headless`\r\n\r\nfailed log:\r\n`======================================================================================== test session starts ========================================================================================\r\nplatform linux -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/work/workspace\r\nplugins: forked-1.1.3, ordering-0.6, seleniumbase-1.39.2, metadata-1.9.0, rerunfailures-9.0, xdist-1.32.0, cov-2.9.0, html-2.0.1\r\ncollected 1 item                                                                                                                                                                                    \r\n\r\ndemo_sb_test.py F\r\n\r\n============================================================================================= FAILURES ==============================================================================================\r\n_____________________________________________________________________________________ DemoTestCase.test_demo_01 _____________________________________________________________________________________\r\n\r\nbrowser_name = 'firefox', headless = True, servername = 'localhost', proxy_string = None, proxy_auth = False, proxy_user = None, proxy_pass = None, user_agent = None, disable_csp = False\r\nenable_sync = False, use_auto_ext = False, no_sandbox = False, disable_gpu = False, incognito = False, guest_mode = False, devtools = False, user_data_dir = None, extension_zip = None\r\nextension_dir = None, mobile_emulator = False, device_width = None, device_height = None, device_pixel_ratio = None\r\n\r\n    def get_local_driver(\r\n            browser_name, headless, servername,\r\n            proxy_string, proxy_auth, proxy_user, proxy_pass, user_agent,\r\n            disable_csp, enable_sync, use_auto_ext, no_sandbox, disable_gpu,\r\n            incognito, guest_mode, devtools,\r\n            user_data_dir, extension_zip, extension_dir,\r\n            mobile_emulator, device_width, device_height, device_pixel_ratio):\r\n        '''\r\n        Spins up a new web browser and returns the driver.\r\n        Can also be used to spin up additional browsers for the same test.\r\n        '''\r\n        downloads_path = download_helper.get_downloads_folder()\r\n        download_helper.reset_downloads_folder()\r\n    \r\n        if browser_name == constants.Browser.FIREFOX:\r\n            try:\r\n                try:\r\n                    # Use Geckodriver for Firefox if it's on the PATH\r\n                    profile = _create_firefox_profile(\r\n                        downloads_path, proxy_string, user_agent, disable_csp)\r\n                    firefox_capabilities = DesiredCapabilities.FIREFOX.copy()\r\n                    firefox_capabilities['marionette'] = True\r\n                    options = webdriver.FirefoxOptions()\r\n                    if headless:\r\n                        options.add_argument('-headless')\r\n                        firefox_capabilities['moz:firefoxOptions'] = (\r\n                            {'args': ['-headless']})\r\n                    if LOCAL_GECKODRIVER and os.path.exists(LOCAL_GECKODRIVER):\r\n                        try:\r\n                            make_driver_executable_if_not(LOCAL_GECKODRIVER)\r\n                        except Exception as e:\r\n                            logging.debug(\"\\nWarning: Could not make geckodriver\"\r\n                                          \" executable: %s\" % e)\r\n                    elif not is_geckodriver_on_path():\r\n                        args = \" \".join(sys.argv)\r\n                        if not (\"-n\" in sys.argv or \"-n=\" in args or args == \"-c\"):\r\n                            # (Not multithreaded)\r\n                            from seleniumbase.console_scripts import sb_install\r\n                            sys_args = sys.argv  # Save a copy of current sys args\r\n                            print(\"\\nWarning: geckodriver not found!\"\r\n                                  \" Installing now:\")\r\n                            try:\r\n                                sb_install.main(override=\"geckodriver\")\r\n                            except Exception as e:\r\n                                print(\"\\nWarning: Could not install geckodriver: \"\r\n                                      \"%s\" % e)\r\n                            sys.argv = sys_args  # Put back the original sys args\r\n                    if \"linux\" in PLATFORM or not headless:\r\n                        firefox_driver = webdriver.Firefox(\r\n                            firefox_profile=profile,\r\n>                           capabilities=firefox_capabilities)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:616: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>, firefox_profile = <selenium.webdriver.firefox.firefox_profile.FirefoxProfile object at 0x7f68d1bb6f90>\r\nfirefox_binary = None, timeout = 30\r\ncapabilities = {'acceptInsecureCerts': True, 'browserName': 'firefox', 'marionette': True, 'moz:firefoxOptions': {'profile': 'UEsDBBQ...pakkmkllMcD4H1BLAQIUAxQAAAAIAKJLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}\r\nproxy = None, executable_path = 'geckodriver', options = <selenium.webdriver.firefox.options.Options object at 0x7f68d1c2d7d0>, service_log_path = 'geckodriver.log', firefox_options = None\r\nservice_args = None, desired_capabilities = None, log_path = None, keep_alive = True\r\n\r\n    def __init__(self, firefox_profile=None, firefox_binary=None,\r\n                 timeout=30, capabilities=None, proxy=None,\r\n                 executable_path=\"geckodriver\", options=None,\r\n                 service_log_path=\"geckodriver.log\", firefox_options=None,\r\n                 service_args=None, desired_capabilities=None, log_path=None,\r\n                 keep_alive=True):\r\n        \"\"\"Starts a new local session of Firefox.\r\n    \r\n        Based on the combination and specificity of the various keyword\r\n        arguments, a capabilities dictionary will be constructed that\r\n        is passed to the remote end.\r\n    \r\n        The keyword arguments given to this constructor are helpers to\r\n        more easily allow Firefox WebDriver sessions to be customised\r\n        with different options.  They are mapped on to a capabilities\r\n        dictionary that is passed on to the remote end.\r\n    \r\n        As some of the options, such as `firefox_profile` and\r\n        `options.profile` are mutually exclusive, precedence is\r\n        given from how specific the setting is.  `capabilities` is the\r\n        least specific keyword argument, followed by `options`,\r\n        followed by `firefox_binary` and `firefox_profile`.\r\n    \r\n        In practice this means that if `firefox_profile` and\r\n        `options.profile` are both set, the selected profile\r\n        instance will always come from the most specific variable.\r\n        In this case that would be `firefox_profile`.  This will result in\r\n        `options.profile` to be ignored because it is considered\r\n        a less specific setting than the top-level `firefox_profile`\r\n        keyword argument.  Similarily, if you had specified a\r\n        `capabilities[\"moz:firefoxOptions\"][\"profile\"]` Base64 string,\r\n        this would rank below `options.profile`.\r\n    \r\n        :param firefox_profile: Instance of ``FirefoxProfile`` object\r\n            or a string.  If undefined, a fresh profile will be created\r\n            in a temporary location on the system.\r\n        :param firefox_binary: Instance of ``FirefoxBinary`` or full\r\n            path to the Firefox binary.  If undefined, the system default\r\n            Firefox installation will  be used.\r\n        :param timeout: Time to wait for Firefox to launch when using\r\n            the extension connection.\r\n        :param capabilities: Dictionary of desired capabilities.\r\n        :param proxy: The proxy settings to us when communicating with\r\n            Firefox via the extension connection.\r\n        :param executable_path: Full path to override which geckodriver\r\n            binary to use for Firefox 47.0.1 and greater, which\r\n            defaults to picking up the binary from the system path.\r\n        :param options: Instance of ``options.Options``.\r\n        :param service_log_path: Where to log information from the driver.\r\n        :param firefox_options: Deprecated argument for options\r\n        :param service_args: List of args to pass to the driver service\r\n        :param desired_capabilities: alias of capabilities. In future\r\n            versions of this library, this will replace 'capabilities'.\r\n            This will make the signature consistent with RemoteWebDriver.\r\n        :param log_path: Deprecated argument for service_log_path\r\n        :param keep_alive: Whether to configure remote_connection.RemoteConnection to use\r\n             HTTP keep-alive.\r\n        \"\"\"\r\n        if log_path:\r\n            warnings.warn('use service_log_path instead of log_path',\r\n                          DeprecationWarning, stacklevel=2)\r\n            service_log_path = log_path\r\n        if firefox_options:\r\n            warnings.warn('use options instead of firefox_options',\r\n                          DeprecationWarning, stacklevel=2)\r\n            options = firefox_options\r\n        self.binary = None\r\n        self.profile = None\r\n        self.service = None\r\n    \r\n        # If desired capabilities is set, alias it to capabilities.\r\n        # If both are set ignore desired capabilities.\r\n        if capabilities is None and desired_capabilities:\r\n            capabilities = desired_capabilities\r\n    \r\n        if capabilities is None:\r\n            capabilities = DesiredCapabilities.FIREFOX.copy()\r\n        if options is None:\r\n            options = Options()\r\n    \r\n        capabilities = dict(capabilities)\r\n    \r\n        if capabilities.get(\"binary\"):\r\n            self.binary = capabilities[\"binary\"]\r\n    \r\n        # options overrides capabilities\r\n        if options is not None:\r\n            if options.binary is not None:\r\n                self.binary = options.binary\r\n            if options.profile is not None:\r\n                self.profile = options.profile\r\n    \r\n        # firefox_binary and firefox_profile\r\n        # override options\r\n        if firefox_binary is not None:\r\n            if isinstance(firefox_binary, basestring):\r\n                firefox_binary = FirefoxBinary(firefox_binary)\r\n            self.binary = firefox_binary\r\n            options.binary = firefox_binary\r\n        if firefox_profile is not None:\r\n            if isinstance(firefox_profile, basestring):\r\n                firefox_profile = FirefoxProfile(firefox_profile)\r\n            self.profile = firefox_profile\r\n            options.profile = firefox_profile\r\n    \r\n        # W3C remote\r\n        # TODO(ato): Perform conformance negotiation\r\n    \r\n        if capabilities.get(\"marionette\"):\r\n            capabilities.pop(\"marionette\")\r\n            self.service = Service(\r\n                executable_path,\r\n                service_args=service_args,\r\n                log_path=service_log_path)\r\n            self.service.start()\r\n    \r\n            capabilities.update(options.to_capabilities())\r\n    \r\n            executor = FirefoxRemoteConnection(\r\n                remote_server_addr=self.service.service_url)\r\n            RemoteWebDriver.__init__(\r\n                self,\r\n                command_executor=executor,\r\n                desired_capabilities=capabilities,\r\n>               keep_alive=True)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/firefox/webdriver.py:174: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>, command_executor = <selenium.webdriver.firefox.remote_connection.FirefoxRemoteConnection object at 0x7f68d1cd2bd0>\r\ndesired_capabilities = {'acceptInsecureCerts': True, 'browserName': 'firefox', 'marionette': True, 'moz:firefoxOptions': {'profile': 'UEsDBBQ...pakkmkllMcD4H1BLAQIUAxQAAAAIAKJLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}\r\nbrowser_profile = None, proxy = None, keep_alive = True, file_detector = None, options = None\r\n\r\n    def __init__(self, command_executor='http://127.0.0.1:4444/wd/hub',\r\n                 desired_capabilities=None, browser_profile=None, proxy=None,\r\n                 keep_alive=False, file_detector=None, options=None):\r\n        \"\"\"\r\n        Create a new driver that will issue commands using the wire protocol.\r\n    \r\n        :Args:\r\n         - command_executor - Either a string representing URL of the remote server or a custom\r\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\r\n         - desired_capabilities - A dictionary of capabilities to request when\r\n             starting the browser session. Required parameter.\r\n         - browser_profile - A selenium.webdriver.firefox.firefox_profile.FirefoxProfile object.\r\n             Only used if Firefox is requested. Optional.\r\n         - proxy - A selenium.webdriver.common.proxy.Proxy object. The browser session will\r\n             be started with given proxy settings, if possible. Optional.\r\n         - keep_alive - Whether to configure remote_connection.RemoteConnection to use\r\n             HTTP keep-alive. Defaults to False.\r\n         - file_detector - Pass custom file detector object during instantiation. If None,\r\n             then default LocalFileDetector() will be used.\r\n         - options - instance of a driver options.Options class\r\n        \"\"\"\r\n        capabilities = {}\r\n        if options is not None:\r\n            capabilities = options.to_capabilities()\r\n        if desired_capabilities is not None:\r\n            if not isinstance(desired_capabilities, dict):\r\n                raise WebDriverException(\"Desired Capabilities must be a dictionary\")\r\n            else:\r\n                capabilities.update(desired_capabilities)\r\n        if proxy is not None:\r\n            warnings.warn(\"Please use FirefoxOptions to set proxy\",\r\n                          DeprecationWarning, stacklevel=2)\r\n            proxy.add_to_capabilities(capabilities)\r\n        self.command_executor = command_executor\r\n        if type(self.command_executor) is bytes or isinstance(self.command_executor, str):\r\n            self.command_executor = RemoteConnection(command_executor, keep_alive=keep_alive)\r\n        self._is_remote = True\r\n        self.session_id = None\r\n        self.capabilities = {}\r\n        self.error_handler = ErrorHandler()\r\n        self.start_client()\r\n        if browser_profile is not None:\r\n            warnings.warn(\"Please use FirefoxOptions to set browser profile\",\r\n                          DeprecationWarning, stacklevel=2)\r\n>       self.start_session(capabilities, browser_profile)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:157: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>\r\ncapabilities = {'acceptInsecureCerts': True, 'browserName': 'firefox', 'marionette': True, 'moz:firefoxOptions': {'profile': 'UEsDBBQ...pakkmkllMcD4H1BLAQIUAxQAAAAIAKJLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}\r\nbrowser_profile = None\r\n\r\n    def start_session(self, capabilities, browser_profile=None):\r\n        \"\"\"\r\n        Creates a new session with the desired capabilities.\r\n    \r\n        :Args:\r\n         - browser_name - The name of the browser to request.\r\n         - version - Which browser version to request.\r\n         - platform - Which platform to request the browser on.\r\n         - javascript_enabled - Whether the new session should support JavaScript.\r\n         - browser_profile - A selenium.webdriver.firefox.firefox_profile.FirefoxProfile object. Only used if Firefox is requested.\r\n        \"\"\"\r\n        if not isinstance(capabilities, dict):\r\n            raise InvalidArgumentException(\"Capabilities must be a dictionary\")\r\n        if browser_profile:\r\n            if \"moz:firefoxOptions\" in capabilities:\r\n                capabilities[\"moz:firefoxOptions\"][\"profile\"] = browser_profile.encoded\r\n            else:\r\n                capabilities.update({'firefox_profile': browser_profile.encoded})\r\n        w3c_caps = _make_w3c_caps(capabilities)\r\n        parameters = {\"capabilities\": w3c_caps,\r\n                      \"desiredCapabilities\": capabilities}\r\n>       response = self.execute(Command.NEW_SESSION, parameters)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:252: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>, driver_command = 'newSession'\r\nparams = {'capabilities': {'alwaysMatch': {'acceptInsecureCerts': True, 'browserName': 'firefox', 'moz:firefoxOptions': {'profi...akkmkllMcD4H1BLAQIUAxQAAAAIAKJLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}}\r\n\r\n    def execute(self, driver_command, params=None):\r\n        \"\"\"\r\n        Sends a command to be executed by a command.CommandExecutor.\r\n    \r\n        :Args:\r\n         - driver_command: The name of the command to execute as a string.\r\n         - params: A dictionary of named parameters to send with the command.\r\n    \r\n        :Returns:\r\n          The command's JSON response loaded into a dictionary object.\r\n        \"\"\"\r\n        if self.session_id is not None:\r\n            if not params:\r\n                params = {'sessionId': self.session_id}\r\n            elif 'sessionId' not in params:\r\n                params['sessionId'] = self.session_id\r\n    \r\n        params = self._wrap_value(params)\r\n        response = self.command_executor.execute(driver_command, params)\r\n        if response:\r\n>           self.error_handler.check_response(response)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:321: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f68d1cd2b50>\r\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"connection refused\",\"stacktrace\":\"\"}}'}\r\n\r\n    def check_response(self, response):\r\n        \"\"\"\r\n        Checks that a JSON response from the WebDriver does not have an error.\r\n    \r\n        :Args:\r\n         - response - The JSON response from the WebDriver server as a dictionary\r\n           object.\r\n    \r\n        :Raises: If the response contains an error message.\r\n        \"\"\"\r\n        status = response.get('status', None)\r\n        if status is None or status == ErrorCode.SUCCESS:\r\n            return\r\n        value = None\r\n        message = response.get(\"message\", \"\")\r\n        screen = response.get(\"screen\", \"\")\r\n        stacktrace = None\r\n        if isinstance(status, int):\r\n            value_json = response.get('value', None)\r\n            if value_json and isinstance(value_json, basestring):\r\n                import json\r\n                try:\r\n                    value = json.loads(value_json)\r\n                    if len(value.keys()) == 1:\r\n                        value = value['value']\r\n                    status = value.get('error', None)\r\n                    if status is None:\r\n                        status = value[\"status\"]\r\n                        message = value[\"value\"]\r\n                        if not isinstance(message, basestring):\r\n                            value = message\r\n                            message = message.get('message')\r\n                    else:\r\n                        message = value.get('message', None)\r\n                except ValueError:\r\n                    pass\r\n    \r\n        exception_class = ErrorInResponseException\r\n        if status in ErrorCode.NO_SUCH_ELEMENT:\r\n            exception_class = NoSuchElementException\r\n        elif status in ErrorCode.NO_SUCH_FRAME:\r\n            exception_class = NoSuchFrameException\r\n        elif status in ErrorCode.NO_SUCH_WINDOW:\r\n            exception_class = NoSuchWindowException\r\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\r\n            exception_class = StaleElementReferenceException\r\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\r\n            exception_class = ElementNotVisibleException\r\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\r\n            exception_class = InvalidElementStateException\r\n        elif status in ErrorCode.INVALID_SELECTOR \\\r\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\r\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\r\n            exception_class = InvalidSelectorException\r\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\r\n            exception_class = ElementNotSelectableException\r\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\r\n            exception_class = ElementNotInteractableException\r\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\r\n            exception_class = InvalidCookieDomainException\r\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\r\n            exception_class = UnableToSetCookieException\r\n        elif status in ErrorCode.TIMEOUT:\r\n            exception_class = TimeoutException\r\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\r\n            exception_class = TimeoutException\r\n        elif status in ErrorCode.UNKNOWN_ERROR:\r\n            exception_class = WebDriverException\r\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\r\n            exception_class = UnexpectedAlertPresentException\r\n        elif status in ErrorCode.NO_ALERT_OPEN:\r\n            exception_class = NoAlertPresentException\r\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\r\n            exception_class = ImeNotAvailableException\r\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\r\n            exception_class = ImeActivationFailedException\r\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\r\n            exception_class = MoveTargetOutOfBoundsException\r\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\r\n            exception_class = JavascriptException\r\n        elif status in ErrorCode.SESSION_NOT_CREATED:\r\n            exception_class = SessionNotCreatedException\r\n        elif status in ErrorCode.INVALID_ARGUMENT:\r\n            exception_class = InvalidArgumentException\r\n        elif status in ErrorCode.NO_SUCH_COOKIE:\r\n            exception_class = NoSuchCookieException\r\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\r\n            exception_class = ScreenshotException\r\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\r\n            exception_class = ElementClickInterceptedException\r\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\r\n            exception_class = InsecureCertificateException\r\n        elif status in ErrorCode.INVALID_COORDINATES:\r\n            exception_class = InvalidCoordinatesException\r\n        elif status in ErrorCode.INVALID_SESSION_ID:\r\n            exception_class = InvalidSessionIdException\r\n        elif status in ErrorCode.UNKNOWN_METHOD:\r\n            exception_class = UnknownMethodException\r\n        else:\r\n            exception_class = WebDriverException\r\n        if value == '' or value is None:\r\n            value = response['value']\r\n        if isinstance(value, basestring):\r\n            if exception_class == ErrorInResponseException:\r\n                raise exception_class(response, value)\r\n            raise exception_class(value)\r\n        if message == \"\" and 'message' in value:\r\n            message = value['message']\r\n    \r\n        screen = None\r\n        if 'screen' in value:\r\n            screen = value['screen']\r\n    \r\n        stacktrace = None\r\n        if 'stackTrace' in value and value['stackTrace']:\r\n            stacktrace = []\r\n            try:\r\n                for frame in value['stackTrace']:\r\n                    line = self._value_or_default(frame, 'lineNumber', '')\r\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\r\n                    if line:\r\n                        file = \"%s:%s\" % (file, line)\r\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\r\n                    if 'className' in frame:\r\n                        meth = \"%s.%s\" % (frame['className'], meth)\r\n                    msg = \"    at %s (%s)\"\r\n                    msg = msg % (meth, file)\r\n                    stacktrace.append(msg)\r\n            except TypeError:\r\n                pass\r\n        if exception_class == ErrorInResponseException:\r\n            raise exception_class(response, message)\r\n        elif exception_class == UnexpectedAlertPresentException:\r\n            alert_text = None\r\n            if 'data' in value:\r\n                alert_text = value['data'].get('text')\r\n            elif 'alert' in value:\r\n                alert_text = value['alert'].get('text')\r\n            raise exception_class(message, screen, stacktrace, alert_text)\r\n>       raise exception_class(message, screen, stacktrace)\r\nE       selenium.common.exceptions.TimeoutException: Message: connection refused\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py:242: TimeoutException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nbrowser_name = 'firefox', headless = True, servername = 'localhost', proxy_string = None, proxy_auth = False, proxy_user = None, proxy_pass = None, user_agent = None, disable_csp = False\r\nenable_sync = False, use_auto_ext = False, no_sandbox = False, disable_gpu = False, incognito = False, guest_mode = False, devtools = False, user_data_dir = None, extension_zip = None\r\nextension_dir = None, mobile_emulator = False, device_width = None, device_height = None, device_pixel_ratio = None\r\n\r\n    def get_local_driver(\r\n            browser_name, headless, servername,\r\n            proxy_string, proxy_auth, proxy_user, proxy_pass, user_agent,\r\n            disable_csp, enable_sync, use_auto_ext, no_sandbox, disable_gpu,\r\n            incognito, guest_mode, devtools,\r\n            user_data_dir, extension_zip, extension_dir,\r\n            mobile_emulator, device_width, device_height, device_pixel_ratio):\r\n        '''\r\n        Spins up a new web browser and returns the driver.\r\n        Can also be used to spin up additional browsers for the same test.\r\n        '''\r\n        downloads_path = download_helper.get_downloads_folder()\r\n        download_helper.reset_downloads_folder()\r\n    \r\n        if browser_name == constants.Browser.FIREFOX:\r\n            try:\r\n                try:\r\n                    # Use Geckodriver for Firefox if it's on the PATH\r\n                    profile = _create_firefox_profile(\r\n                        downloads_path, proxy_string, user_agent, disable_csp)\r\n                    firefox_capabilities = DesiredCapabilities.FIREFOX.copy()\r\n                    firefox_capabilities['marionette'] = True\r\n                    options = webdriver.FirefoxOptions()\r\n                    if headless:\r\n                        options.add_argument('-headless')\r\n                        firefox_capabilities['moz:firefoxOptions'] = (\r\n                            {'args': ['-headless']})\r\n                    if LOCAL_GECKODRIVER and os.path.exists(LOCAL_GECKODRIVER):\r\n                        try:\r\n                            make_driver_executable_if_not(LOCAL_GECKODRIVER)\r\n                        except Exception as e:\r\n                            logging.debug(\"\\nWarning: Could not make geckodriver\"\r\n                                          \" executable: %s\" % e)\r\n                    elif not is_geckodriver_on_path():\r\n                        args = \" \".join(sys.argv)\r\n                        if not (\"-n\" in sys.argv or \"-n=\" in args or args == \"-c\"):\r\n                            # (Not multithreaded)\r\n                            from seleniumbase.console_scripts import sb_install\r\n                            sys_args = sys.argv  # Save a copy of current sys args\r\n                            print(\"\\nWarning: geckodriver not found!\"\r\n                                  \" Installing now:\")\r\n                            try:\r\n                                sb_install.main(override=\"geckodriver\")\r\n                            except Exception as e:\r\n                                print(\"\\nWarning: Could not install geckodriver: \"\r\n                                      \"%s\" % e)\r\n                            sys.argv = sys_args  # Put back the original sys args\r\n                    if \"linux\" in PLATFORM or not headless:\r\n                        firefox_driver = webdriver.Firefox(\r\n                            firefox_profile=profile,\r\n                            capabilities=firefox_capabilities)\r\n                    else:\r\n                        firefox_driver = webdriver.Firefox(\r\n                            firefox_profile=profile,\r\n                            capabilities=firefox_capabilities,\r\n                            options=options)\r\n                except Exception:\r\n                    profile = _create_firefox_profile(\r\n                        downloads_path, proxy_string, user_agent, disable_csp)\r\n                    firefox_capabilities = DesiredCapabilities.FIREFOX.copy()\r\n                    firefox_driver = webdriver.Firefox(\r\n                        firefox_profile=profile,\r\n>                       capabilities=firefox_capabilities)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:628: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>, firefox_profile = <selenium.webdriver.firefox.firefox_profile.FirefoxProfile object at 0x7f68d41cf090>\r\nfirefox_binary = None, timeout = 30\r\ncapabilities = {'acceptInsecureCerts': True, 'browserName': 'firefox', 'marionette': True, 'moz:firefoxOptions': {'profile': 'UEsDBBQ...pakkmkllMcD4H1BLAQIUAxQAAAAIAMNLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}\r\nproxy = None, executable_path = 'geckodriver', options = <selenium.webdriver.firefox.options.Options object at 0x7f68d1bbcd10>, service_log_path = 'geckodriver.log', firefox_options = None\r\nservice_args = None, desired_capabilities = None, log_path = None, keep_alive = True\r\n\r\n    def __init__(self, firefox_profile=None, firefox_binary=None,\r\n                 timeout=30, capabilities=None, proxy=None,\r\n                 executable_path=\"geckodriver\", options=None,\r\n                 service_log_path=\"geckodriver.log\", firefox_options=None,\r\n                 service_args=None, desired_capabilities=None, log_path=None,\r\n                 keep_alive=True):\r\n        \"\"\"Starts a new local session of Firefox.\r\n    \r\n        Based on the combination and specificity of the various keyword\r\n        arguments, a capabilities dictionary will be constructed that\r\n        is passed to the remote end.\r\n    \r\n        The keyword arguments given to this constructor are helpers to\r\n        more easily allow Firefox WebDriver sessions to be customised\r\n        with different options.  They are mapped on to a capabilities\r\n        dictionary that is passed on to the remote end.\r\n    \r\n        As some of the options, such as `firefox_profile` and\r\n        `options.profile` are mutually exclusive, precedence is\r\n        given from how specific the setting is.  `capabilities` is the\r\n        least specific keyword argument, followed by `options`,\r\n        followed by `firefox_binary` and `firefox_profile`.\r\n    \r\n        In practice this means that if `firefox_profile` and\r\n        `options.profile` are both set, the selected profile\r\n        instance will always come from the most specific variable.\r\n        In this case that would be `firefox_profile`.  This will result in\r\n        `options.profile` to be ignored because it is considered\r\n        a less specific setting than the top-level `firefox_profile`\r\n        keyword argument.  Similarily, if you had specified a\r\n        `capabilities[\"moz:firefoxOptions\"][\"profile\"]` Base64 string,\r\n        this would rank below `options.profile`.\r\n    \r\n        :param firefox_profile: Instance of ``FirefoxProfile`` object\r\n            or a string.  If undefined, a fresh profile will be created\r\n            in a temporary location on the system.\r\n        :param firefox_binary: Instance of ``FirefoxBinary`` or full\r\n            path to the Firefox binary.  If undefined, the system default\r\n            Firefox installation will  be used.\r\n        :param timeout: Time to wait for Firefox to launch when using\r\n            the extension connection.\r\n        :param capabilities: Dictionary of desired capabilities.\r\n        :param proxy: The proxy settings to us when communicating with\r\n            Firefox via the extension connection.\r\n        :param executable_path: Full path to override which geckodriver\r\n            binary to use for Firefox 47.0.1 and greater, which\r\n            defaults to picking up the binary from the system path.\r\n        :param options: Instance of ``options.Options``.\r\n        :param service_log_path: Where to log information from the driver.\r\n        :param firefox_options: Deprecated argument for options\r\n        :param service_args: List of args to pass to the driver service\r\n        :param desired_capabilities: alias of capabilities. In future\r\n            versions of this library, this will replace 'capabilities'.\r\n            This will make the signature consistent with RemoteWebDriver.\r\n        :param log_path: Deprecated argument for service_log_path\r\n        :param keep_alive: Whether to configure remote_connection.RemoteConnection to use\r\n             HTTP keep-alive.\r\n        \"\"\"\r\n        if log_path:\r\n            warnings.warn('use service_log_path instead of log_path',\r\n                          DeprecationWarning, stacklevel=2)\r\n            service_log_path = log_path\r\n        if firefox_options:\r\n            warnings.warn('use options instead of firefox_options',\r\n                          DeprecationWarning, stacklevel=2)\r\n            options = firefox_options\r\n        self.binary = None\r\n        self.profile = None\r\n        self.service = None\r\n    \r\n        # If desired capabilities is set, alias it to capabilities.\r\n        # If both are set ignore desired capabilities.\r\n        if capabilities is None and desired_capabilities:\r\n            capabilities = desired_capabilities\r\n    \r\n        if capabilities is None:\r\n            capabilities = DesiredCapabilities.FIREFOX.copy()\r\n        if options is None:\r\n            options = Options()\r\n    \r\n        capabilities = dict(capabilities)\r\n    \r\n        if capabilities.get(\"binary\"):\r\n            self.binary = capabilities[\"binary\"]\r\n    \r\n        # options overrides capabilities\r\n        if options is not None:\r\n            if options.binary is not None:\r\n                self.binary = options.binary\r\n            if options.profile is not None:\r\n                self.profile = options.profile\r\n    \r\n        # firefox_binary and firefox_profile\r\n        # override options\r\n        if firefox_binary is not None:\r\n            if isinstance(firefox_binary, basestring):\r\n                firefox_binary = FirefoxBinary(firefox_binary)\r\n            self.binary = firefox_binary\r\n            options.binary = firefox_binary\r\n        if firefox_profile is not None:\r\n            if isinstance(firefox_profile, basestring):\r\n                firefox_profile = FirefoxProfile(firefox_profile)\r\n            self.profile = firefox_profile\r\n            options.profile = firefox_profile\r\n    \r\n        # W3C remote\r\n        # TODO(ato): Perform conformance negotiation\r\n    \r\n        if capabilities.get(\"marionette\"):\r\n            capabilities.pop(\"marionette\")\r\n            self.service = Service(\r\n                executable_path,\r\n                service_args=service_args,\r\n                log_path=service_log_path)\r\n            self.service.start()\r\n    \r\n            capabilities.update(options.to_capabilities())\r\n    \r\n            executor = FirefoxRemoteConnection(\r\n                remote_server_addr=self.service.service_url)\r\n            RemoteWebDriver.__init__(\r\n                self,\r\n                command_executor=executor,\r\n                desired_capabilities=capabilities,\r\n>               keep_alive=True)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/firefox/webdriver.py:174: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>, command_executor = <selenium.webdriver.firefox.remote_connection.FirefoxRemoteConnection object at 0x7f68d1bd3b90>\r\ndesired_capabilities = {'acceptInsecureCerts': True, 'browserName': 'firefox', 'marionette': True, 'moz:firefoxOptions': {'profile': 'UEsDBBQ...pakkmkllMcD4H1BLAQIUAxQAAAAIAMNLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}\r\nbrowser_profile = None, proxy = None, keep_alive = True, file_detector = None, options = None\r\n\r\n    def __init__(self, command_executor='http://127.0.0.1:4444/wd/hub',\r\n                 desired_capabilities=None, browser_profile=None, proxy=None,\r\n                 keep_alive=False, file_detector=None, options=None):\r\n        \"\"\"\r\n        Create a new driver that will issue commands using the wire protocol.\r\n    \r\n        :Args:\r\n         - command_executor - Either a string representing URL of the remote server or a custom\r\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\r\n         - desired_capabilities - A dictionary of capabilities to request when\r\n             starting the browser session. Required parameter.\r\n         - browser_profile - A selenium.webdriver.firefox.firefox_profile.FirefoxProfile object.\r\n             Only used if Firefox is requested. Optional.\r\n         - proxy - A selenium.webdriver.common.proxy.Proxy object. The browser session will\r\n             be started with given proxy settings, if possible. Optional.\r\n         - keep_alive - Whether to configure remote_connection.RemoteConnection to use\r\n             HTTP keep-alive. Defaults to False.\r\n         - file_detector - Pass custom file detector object during instantiation. If None,\r\n             then default LocalFileDetector() will be used.\r\n         - options - instance of a driver options.Options class\r\n        \"\"\"\r\n        capabilities = {}\r\n        if options is not None:\r\n            capabilities = options.to_capabilities()\r\n        if desired_capabilities is not None:\r\n            if not isinstance(desired_capabilities, dict):\r\n                raise WebDriverException(\"Desired Capabilities must be a dictionary\")\r\n            else:\r\n                capabilities.update(desired_capabilities)\r\n        if proxy is not None:\r\n            warnings.warn(\"Please use FirefoxOptions to set proxy\",\r\n                          DeprecationWarning, stacklevel=2)\r\n            proxy.add_to_capabilities(capabilities)\r\n        self.command_executor = command_executor\r\n        if type(self.command_executor) is bytes or isinstance(self.command_executor, str):\r\n            self.command_executor = RemoteConnection(command_executor, keep_alive=keep_alive)\r\n        self._is_remote = True\r\n        self.session_id = None\r\n        self.capabilities = {}\r\n        self.error_handler = ErrorHandler()\r\n        self.start_client()\r\n        if browser_profile is not None:\r\n            warnings.warn(\"Please use FirefoxOptions to set browser profile\",\r\n                          DeprecationWarning, stacklevel=2)\r\n>       self.start_session(capabilities, browser_profile)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:157: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>\r\ncapabilities = {'acceptInsecureCerts': True, 'browserName': 'firefox', 'marionette': True, 'moz:firefoxOptions': {'profile': 'UEsDBBQ...pakkmkllMcD4H1BLAQIUAxQAAAAIAMNLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}\r\nbrowser_profile = None\r\n\r\n    def start_session(self, capabilities, browser_profile=None):\r\n        \"\"\"\r\n        Creates a new session with the desired capabilities.\r\n    \r\n        :Args:\r\n         - browser_name - The name of the browser to request.\r\n         - version - Which browser version to request.\r\n         - platform - Which platform to request the browser on.\r\n         - javascript_enabled - Whether the new session should support JavaScript.\r\n         - browser_profile - A selenium.webdriver.firefox.firefox_profile.FirefoxProfile object. Only used if Firefox is requested.\r\n        \"\"\"\r\n        if not isinstance(capabilities, dict):\r\n            raise InvalidArgumentException(\"Capabilities must be a dictionary\")\r\n        if browser_profile:\r\n            if \"moz:firefoxOptions\" in capabilities:\r\n                capabilities[\"moz:firefoxOptions\"][\"profile\"] = browser_profile.encoded\r\n            else:\r\n                capabilities.update({'firefox_profile': browser_profile.encoded})\r\n        w3c_caps = _make_w3c_caps(capabilities)\r\n        parameters = {\"capabilities\": w3c_caps,\r\n                      \"desiredCapabilities\": capabilities}\r\n>       response = self.execute(Command.NEW_SESSION, parameters)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:252: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"None\")>, driver_command = 'newSession'\r\nparams = {'capabilities': {'alwaysMatch': {'acceptInsecureCerts': True, 'browserName': 'firefox', 'moz:firefoxOptions': {'profi...akkmkllMcD4H1BLAQIUAxQAAAAIAMNLwlCFEme/uQQAACsRAAAHAAAAAAAAAAAAAAC0gQAAAAB1c2VyLmpzUEsFBgAAAAABAAEANQAAAN4EAAAAAA=='}}}\r\n\r\n    def execute(self, driver_command, params=None):\r\n        \"\"\"\r\n        Sends a command to be executed by a command.CommandExecutor.\r\n    \r\n        :Args:\r\n         - driver_command: The name of the command to execute as a string.\r\n         - params: A dictionary of named parameters to send with the command.\r\n    \r\n        :Returns:\r\n          The command's JSON response loaded into a dictionary object.\r\n        \"\"\"\r\n        if self.session_id is not None:\r\n            if not params:\r\n                params = {'sessionId': self.session_id}\r\n            elif 'sessionId' not in params:\r\n                params['sessionId'] = self.session_id\r\n    \r\n        params = self._wrap_value(params)\r\n        response = self.command_executor.execute(driver_command, params)\r\n        if response:\r\n>           self.error_handler.check_response(response)\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:321: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f68d1bd3d90>\r\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"connection refused\",\"stacktrace\":\"\"}}'}\r\n\r\n    def check_response(self, response):\r\n        \"\"\"\r\n        Checks that a JSON response from the WebDriver does not have an error.\r\n    \r\n        :Args:\r\n         - response - The JSON response from the WebDriver server as a dictionary\r\n           object.\r\n    \r\n        :Raises: If the response contains an error message.\r\n        \"\"\"\r\n        status = response.get('status', None)\r\n        if status is None or status == ErrorCode.SUCCESS:\r\n            return\r\n        value = None\r\n        message = response.get(\"message\", \"\")\r\n        screen = response.get(\"screen\", \"\")\r\n        stacktrace = None\r\n        if isinstance(status, int):\r\n            value_json = response.get('value', None)\r\n            if value_json and isinstance(value_json, basestring):\r\n                import json\r\n                try:\r\n                    value = json.loads(value_json)\r\n                    if len(value.keys()) == 1:\r\n                        value = value['value']\r\n                    status = value.get('error', None)\r\n                    if status is None:\r\n                        status = value[\"status\"]\r\n                        message = value[\"value\"]\r\n                        if not isinstance(message, basestring):\r\n                            value = message\r\n                            message = message.get('message')\r\n                    else:\r\n                        message = value.get('message', None)\r\n                except ValueError:\r\n                    pass\r\n    \r\n        exception_class = ErrorInResponseException\r\n        if status in ErrorCode.NO_SUCH_ELEMENT:\r\n            exception_class = NoSuchElementException\r\n        elif status in ErrorCode.NO_SUCH_FRAME:\r\n            exception_class = NoSuchFrameException\r\n        elif status in ErrorCode.NO_SUCH_WINDOW:\r\n            exception_class = NoSuchWindowException\r\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\r\n            exception_class = StaleElementReferenceException\r\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\r\n            exception_class = ElementNotVisibleException\r\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\r\n            exception_class = InvalidElementStateException\r\n        elif status in ErrorCode.INVALID_SELECTOR \\\r\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\r\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\r\n            exception_class = InvalidSelectorException\r\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\r\n            exception_class = ElementNotSelectableException\r\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\r\n            exception_class = ElementNotInteractableException\r\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\r\n            exception_class = InvalidCookieDomainException\r\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\r\n            exception_class = UnableToSetCookieException\r\n        elif status in ErrorCode.TIMEOUT:\r\n            exception_class = TimeoutException\r\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\r\n            exception_class = TimeoutException\r\n        elif status in ErrorCode.UNKNOWN_ERROR:\r\n            exception_class = WebDriverException\r\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\r\n            exception_class = UnexpectedAlertPresentException\r\n        elif status in ErrorCode.NO_ALERT_OPEN:\r\n            exception_class = NoAlertPresentException\r\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\r\n            exception_class = ImeNotAvailableException\r\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\r\n            exception_class = ImeActivationFailedException\r\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\r\n            exception_class = MoveTargetOutOfBoundsException\r\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\r\n            exception_class = JavascriptException\r\n        elif status in ErrorCode.SESSION_NOT_CREATED:\r\n            exception_class = SessionNotCreatedException\r\n        elif status in ErrorCode.INVALID_ARGUMENT:\r\n            exception_class = InvalidArgumentException\r\n        elif status in ErrorCode.NO_SUCH_COOKIE:\r\n            exception_class = NoSuchCookieException\r\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\r\n            exception_class = ScreenshotException\r\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\r\n            exception_class = ElementClickInterceptedException\r\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\r\n            exception_class = InsecureCertificateException\r\n        elif status in ErrorCode.INVALID_COORDINATES:\r\n            exception_class = InvalidCoordinatesException\r\n        elif status in ErrorCode.INVALID_SESSION_ID:\r\n            exception_class = InvalidSessionIdException\r\n        elif status in ErrorCode.UNKNOWN_METHOD:\r\n            exception_class = UnknownMethodException\r\n        else:\r\n            exception_class = WebDriverException\r\n        if value == '' or value is None:\r\n            value = response['value']\r\n        if isinstance(value, basestring):\r\n            if exception_class == ErrorInResponseException:\r\n                raise exception_class(response, value)\r\n            raise exception_class(value)\r\n        if message == \"\" and 'message' in value:\r\n            message = value['message']\r\n    \r\n        screen = None\r\n        if 'screen' in value:\r\n            screen = value['screen']\r\n    \r\n        stacktrace = None\r\n        if 'stackTrace' in value and value['stackTrace']:\r\n            stacktrace = []\r\n            try:\r\n                for frame in value['stackTrace']:\r\n                    line = self._value_or_default(frame, 'lineNumber', '')\r\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\r\n                    if line:\r\n                        file = \"%s:%s\" % (file, line)\r\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\r\n                    if 'className' in frame:\r\n                        meth = \"%s.%s\" % (frame['className'], meth)\r\n                    msg = \"    at %s (%s)\"\r\n                    msg = msg % (meth, file)\r\n                    stacktrace.append(msg)\r\n            except TypeError:\r\n                pass\r\n        if exception_class == ErrorInResponseException:\r\n            raise exception_class(response, message)\r\n        elif exception_class == UnexpectedAlertPresentException:\r\n            alert_text = None\r\n            if 'data' in value:\r\n                alert_text = value['data'].get('text')\r\n            elif 'alert' in value:\r\n                alert_text = value['alert'].get('text')\r\n            raise exception_class(message, screen, stacktrace, alert_text)\r\n>       raise exception_class(message, screen, stacktrace)\r\nE       selenium.common.exceptions.TimeoutException: Message: connection refused\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py:242: TimeoutException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:5041: in setUp\r\n    d_p_r=self.__device_pixel_ratio)\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:1706: in get_new_driver\r\n    device_pixel_ratio=d_p_r)\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:408: in get_driver\r\n    mobile_emulator, device_width, device_height, device_pixel_ratio)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nbrowser_name = 'firefox', headless = True, servername = 'localhost', proxy_string = None, proxy_auth = False, proxy_user = None, proxy_pass = None, user_agent = None, disable_csp = False\r\nenable_sync = False, use_auto_ext = False, no_sandbox = False, disable_gpu = False, incognito = False, guest_mode = False, devtools = False, user_data_dir = None, extension_zip = None\r\nextension_dir = None, mobile_emulator = False, device_width = None, device_height = None, device_pixel_ratio = None\r\n\r\n    def get_local_driver(\r\n            browser_name, headless, servername,\r\n            proxy_string, proxy_auth, proxy_user, proxy_pass, user_agent,\r\n            disable_csp, enable_sync, use_auto_ext, no_sandbox, disable_gpu,\r\n            incognito, guest_mode, devtools,\r\n            user_data_dir, extension_zip, extension_dir,\r\n            mobile_emulator, device_width, device_height, device_pixel_ratio):\r\n        '''\r\n        Spins up a new web browser and returns the driver.\r\n        Can also be used to spin up additional browsers for the same test.\r\n        '''\r\n        downloads_path = download_helper.get_downloads_folder()\r\n        download_helper.reset_downloads_folder()\r\n    \r\n        if browser_name == constants.Browser.FIREFOX:\r\n            try:\r\n                try:\r\n                    # Use Geckodriver for Firefox if it's on the PATH\r\n                    profile = _create_firefox_profile(\r\n                        downloads_path, proxy_string, user_agent, disable_csp)\r\n                    firefox_capabilities = DesiredCapabilities.FIREFOX.copy()\r\n                    firefox_capabilities['marionette'] = True\r\n                    options = webdriver.FirefoxOptions()\r\n                    if headless:\r\n                        options.add_argument('-headless')\r\n                        firefox_capabilities['moz:firefoxOptions'] = (\r\n                            {'args': ['-headless']})\r\n                    if LOCAL_GECKODRIVER and os.path.exists(LOCAL_GECKODRIVER):\r\n                        try:\r\n                            make_driver_executable_if_not(LOCAL_GECKODRIVER)\r\n                        except Exception as e:\r\n                            logging.debug(\"\\nWarning: Could not make geckodriver\"\r\n                                          \" executable: %s\" % e)\r\n                    elif not is_geckodriver_on_path():\r\n                        args = \" \".join(sys.argv)\r\n                        if not (\"-n\" in sys.argv or \"-n=\" in args or args == \"-c\"):\r\n                            # (Not multithreaded)\r\n                            from seleniumbase.console_scripts import sb_install\r\n                            sys_args = sys.argv  # Save a copy of current sys args\r\n                            print(\"\\nWarning: geckodriver not found!\"\r\n                                  \" Installing now:\")\r\n                            try:\r\n                                sb_install.main(override=\"geckodriver\")\r\n                            except Exception as e:\r\n                                print(\"\\nWarning: Could not install geckodriver: \"\r\n                                      \"%s\" % e)\r\n                            sys.argv = sys_args  # Put back the original sys args\r\n                    if \"linux\" in PLATFORM or not headless:\r\n                        firefox_driver = webdriver.Firefox(\r\n                            firefox_profile=profile,\r\n                            capabilities=firefox_capabilities)\r\n                    else:\r\n                        firefox_driver = webdriver.Firefox(\r\n                            firefox_profile=profile,\r\n                            capabilities=firefox_capabilities,\r\n                            options=options)\r\n                except Exception:\r\n                    profile = _create_firefox_profile(\r\n                        downloads_path, proxy_string, user_agent, disable_csp)\r\n                    firefox_capabilities = DesiredCapabilities.FIREFOX.copy()\r\n                    firefox_driver = webdriver.Firefox(\r\n                        firefox_profile=profile,\r\n                        capabilities=firefox_capabilities)\r\n                return firefox_driver\r\n            except Exception as e:\r\n                if headless:\r\n>                   raise Exception(e)\r\nE                   Exception: Message: connection refused\r\n\r\n../.virtualenvs/seleniumbase_env/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:632: Exception\r\n====================================================================================== short test summary info ======================================================================================\r\nFAILED demo_sb_test.py::DemoTestCase::test_demo_01 - Exception: Message: connection refused\r\n=================================================================================== 1 failed in 123.28s (0:02:03) ===================================================================================\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/587", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/587/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/587/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/587/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/587", "id": 627018603, "node_id": "MDU6SXNzdWU2MjcwMTg2MDM=", "number": 587, "title": "Feature : seleniumbase driver auto download based on browser stable current version", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-29T05:56:32Z", "updated_at": "2020-06-08T16:54:59Z", "closed_at": "2020-06-08T16:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\nright now getting issue like i have prepared docker file and in that google stable version is 81.\r\nand using salenium latest it is installing version  83.\r\n\r\nso both are mismatch.\r\n\r\nso according that suggetion is if something like salenium base read version of browser version and based on that download perticular match driver so it will be good.\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/585", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/585/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/585/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/585", "id": 625357653, "node_id": "MDU6SXNzdWU2MjUzNTc2NTM=", "number": 585, "title": "firefox headless mode by argument not working", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1995896876, "node_id": "MDU6TGFiZWwxOTk1ODk2ODc2", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/incorrect%20usage", "name": "incorrect usage", "color": "dbab82", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-27T03:59:04Z", "updated_at": "2020-05-28T17:54:56Z", "closed_at": "2020-05-28T17:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\ni want to test using all possible browser with headless mode.\r\nbut when i am trung to do with `--browser=firefox --headless` argument then it is not working in headless mode.\r\n\r\nfor that need to set environment variable like `export MOZ_HEADLESS=1` \r\n\r\nso is there any argument based option to do that ?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/583", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/583/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/583/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/583", "id": 623961285, "node_id": "MDU6SXNzdWU2MjM5NjEyODU=", "number": 583, "title": "Some example tests that use files will only work when run from the folder they live in", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094997, "node_id": "MDU6TGFiZWw4NDA5NDk5Nw==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/bug", "name": "bug", "color": "f83e3e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T22:43:01Z", "updated_at": "2020-05-25T09:02:02Z", "closed_at": "2020-05-25T09:02:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Some example tests that use files will only work when run from the folder they live in.\r\n\r\nThis is caused by using a relative file path that changes based on where pytest is initiated. These paths should be tied to the location of the tests themselves.\r\n\r\nImpacted tests:\r\n* examples/upload_file_test.py\r\n* examples/offline_examples/test_demo_page.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/582", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/582/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/582/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/582", "id": 623937791, "node_id": "MDU6SXNzdWU2MjM5Mzc3OTE=", "number": 582, "title": "Changing the test time-limit inside one test may impact other tests in the same pytest run", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094997, "node_id": "MDU6TGFiZWw4NDA5NDk5Nw==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/bug", "name": "bug", "color": "f83e3e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T20:17:47Z", "updated_at": "2020-05-25T09:01:47Z", "closed_at": "2020-05-25T09:01:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Changing the test time-limit inside one test may impact other tests in the same pytest run", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/581", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/581/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/581/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/581", "id": 623811406, "node_id": "MDU6SXNzdWU2MjM4MTE0MDY=", "number": 581, "title": "[Question]: Can SeleniumBase be used without pytest", "user": {"login": "allandsouza", "id": 17289362, "node_id": "MDQ6VXNlcjE3Mjg5MzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/17289362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allandsouza", "html_url": "https://github.com/allandsouza", "followers_url": "https://api.github.com/users/allandsouza/followers", "following_url": "https://api.github.com/users/allandsouza/following{/other_user}", "gists_url": "https://api.github.com/users/allandsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/allandsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allandsouza/subscriptions", "organizations_url": "https://api.github.com/users/allandsouza/orgs", "repos_url": "https://api.github.com/users/allandsouza/repos", "events_url": "https://api.github.com/users/allandsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/allandsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-24T07:19:05Z", "updated_at": "2020-05-24T07:42:50Z", "closed_at": "2020-05-24T07:42:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a need to perform some actions on a webpage and scrape some data in a standalone command line python program. Was wondering if SeleniumBase is a good candidate. Feels like it is; except that I don\u2019t know how to use it outside of pytest. \r\n\r\nAny thoughts/samples @mdmintz ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/579", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/579/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/579/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/579", "id": 623805154, "node_id": "MDU6SXNzdWU2MjM4MDUxNTQ=", "number": 579, "title": "Some translations of the Translation API need improvement", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-24T06:28:34Z", "updated_at": "2020-05-24T07:07:53Z", "closed_at": "2020-05-24T07:07:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Some translations of the Translation API need improvement", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/577", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/577/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/577/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/577", "id": 623330890, "node_id": "MDU6SXNzdWU2MjMzMzA4OTA=", "number": 577, "title": "Using Selenium Grid could raise an httpconnecterror", "user": {"login": "Swj-ningbo", "id": 28249628, "node_id": "MDQ6VXNlcjI4MjQ5NjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/28249628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swj-ningbo", "html_url": "https://github.com/Swj-ningbo", "followers_url": "https://api.github.com/users/Swj-ningbo/followers", "following_url": "https://api.github.com/users/Swj-ningbo/following{/other_user}", "gists_url": "https://api.github.com/users/Swj-ningbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swj-ningbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swj-ningbo/subscriptions", "organizations_url": "https://api.github.com/users/Swj-ningbo/orgs", "repos_url": "https://api.github.com/users/Swj-ningbo/repos", "events_url": "https://api.github.com/users/Swj-ningbo/events{/privacy}", "received_events_url": "https://api.github.com/users/Swj-ningbo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094997, "node_id": "MDU6TGFiZWw4NDA5NDk5Nw==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/bug", "name": "bug", "color": "f83e3e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T16:28:42Z", "updated_at": "2020-05-22T21:28:03Z", "closed_at": "2020-05-22T21:28:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "if you have a selenium grid and you was runing a suite with more then 4 theads ,may you'll see the error .the issue was the remote driver not give the volue(keep-alive)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/576", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/576/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/576/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/576", "id": 622599785, "node_id": "MDU6SXNzdWU2MjI1OTk3ODU=", "number": 576, "title": "Overrides SeleniumBase settings how to add new parameter in overrided file", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-21T15:51:56Z", "updated_at": "2020-05-22T03:41:32Z", "closed_at": "2020-05-22T03:41:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello i want to override default settings.py file and want to add more Timeout variables\r\n`--settings-file=FILE  # (Overrides SeleniumBase settings.py values.)`\r\n\r\nso after adding `MICRO_TIMEOUT` parameter how i can use ?\r\ni have tried by adding but it is giving below error\r\n\r\n```\r\nAttributeError: module 'seleniumbase.config.settings' has no attribute 'MICRO_TIMEOUT'\r\n```\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/575", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/575/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/575/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/575", "id": 621589666, "node_id": "MDU6SXNzdWU2MjE1ODk2NjY=", "number": 575, "title": "not able to pass --mobile=\"mobile device name\"", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1995896876, "node_id": "MDU6TGFiZWwxOTk1ODk2ODc2", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/incorrect%20usage", "name": "incorrect usage", "color": "dbab82", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T09:01:39Z", "updated_at": "2020-05-21T07:20:48Z", "closed_at": "2020-05-21T07:20:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\nhere i have attached device list screenshot.\r\nso how i can give perticular  device selection using pytest with saleniumbase.\r\ni am trying to do someting like below command\r\n`\r\npipenv run pytest my_testcases.py --headed --browser=chrome --mobile=\"iPhone X\"\r\n`\r\n\r\ngetting below error while executing above command\r\n```\r\npytest: error: argument --mobile/--mobile-emulator/--mobile_emulator: ignored explicit argument 'iPhone X'\r\n```\r\n\r\nHere some one did using programatically but it is useful if something direct argument based\r\n`\r\n https://gist.github.com/devinmancuso/ec8ae08fa73402e45bf1\r\n`\r\n![1](https://user-images.githubusercontent.com/63253499/82427023-2ee17e80-9aa6-11ea-83f0-993e0c4f09de.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/572", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/572/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/572/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/572", "id": 619672844, "node_id": "MDU6SXNzdWU2MTk2NzI4NDQ=", "number": 572, "title": "Testing with Selenium Grid get SessionNotCreatedException", "user": {"login": "clobob", "id": 10508051, "node_id": "MDQ6VXNlcjEwNTA4MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/10508051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clobob", "html_url": "https://github.com/clobob", "followers_url": "https://api.github.com/users/clobob/followers", "following_url": "https://api.github.com/users/clobob/following{/other_user}", "gists_url": "https://api.github.com/users/clobob/gists{/gist_id}", "starred_url": "https://api.github.com/users/clobob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clobob/subscriptions", "organizations_url": "https://api.github.com/users/clobob/orgs", "repos_url": "https://api.github.com/users/clobob/repos", "events_url": "https://api.github.com/users/clobob/events{/privacy}", "received_events_url": "https://api.github.com/users/clobob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2007433844, "node_id": "MDU6TGFiZWwyMDA3NDMzODQ0", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/external%20issue", "name": "external issue", "color": "f4b165", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-17T11:02:40Z", "updated_at": "2020-05-24T07:08:26Z", "closed_at": "2020-05-24T07:08:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run a test in examples\\visual_testing. The command which I used like this:\r\n\r\n> pytest python_home_test.py  --server=192.168.1.101 --cap_file=..\\capabilities\\local_cap_file_firefox.py --browser=remote\r\n\r\nSelenium Grid  docker -->>   selenium/hub, selenium/node-firfox\r\nOS:  Linux localhost.localdomain 3.10.0-862.9.1.nd7.zx.4.x86_64 #1 SMP Wed Jan 9 01:27:43 CST 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nSelenium grid looks working ok. \r\n\r\nafter running test, I get a failed with stacktrace:\r\n\r\n> E       selenium.common.exceptions.SessionNotCreatedException: Message: Unable to create session from {\r\nE         \"desiredCapabilities\": {\r\nE           \"server:CONFIG_UUID\": \"e9e2ba04-f65c-42c6-830b-3ad01b57e376\",\r\nE           \"os\": \"LINUX\",\r\nE           \"browser\": \"firefox\"\r\nE         },\r\nE         \"capabilities\": {\r\nE           \"firstMatch\": [\r\nE             {\r\nE               \"server:CONFIG_UUID\": \"e9e2ba04-f65c-42c6-830b-3ad01b57e376\"\r\nE             }\r\nE           ]\r\nE         }\r\nE       }\r\nE       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\r\nE       System info: host: '9636b7966d94', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.9.1.nd7.zx.4.x86_64', java.version: '1.8.0_252'\r\nE       Driver info: driver.version: unknown\r\nE       Stacktrace:\r\nE           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$4 (NewSessionPipeline.java:76)\r\nE           at java.util.Optional.orElseThrow (Optional.java:290)\r\nE           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$5 (NewSessionPipeline.java:75)\r\nE           at java.util.Optional.orElseGet (Optional.java:267)\r\nE           at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession (NewSessionPipeline.java:73)\r\nE           at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute (BeginSession.java:65)\r\nE           at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:235)\r\nE           at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:511)\r\nE           at java.util.concurrent.FutureTask.run (FutureTask.java:266)\r\nE           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)\r\nE           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)\r\nE           at java.lang.Thread.run (Thread.java:748)\r\n\r\n..\\..\\..\\envs\\seleniumbase_env\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: SessionNotCreatedException\r\n\r\n\r\ncan you have a look at this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/570", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/570/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/570/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/570", "id": 618703456, "node_id": "MDU6SXNzdWU2MTg3MDM0NTY=", "number": 570, "title": "Feature Suggetion for rest api automation", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T05:14:13Z", "updated_at": "2020-05-15T07:18:27Z", "closed_at": "2020-05-15T07:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\ni am intrested to used this framework with rest api based test automation.\r\n\r\nso if you have something related that or need to develop for that ?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/569", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/569/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/569/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/569", "id": 618016840, "node_id": "MDU6SXNzdWU2MTgwMTY4NDA=", "number": 569, "title": "setUp method with not able to set fixture scope session", "user": {"login": "teamdts", "id": 63253499, "node_id": "MDQ6VXNlcjYzMjUzNDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/63253499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teamdts", "html_url": "https://github.com/teamdts", "followers_url": "https://api.github.com/users/teamdts/followers", "following_url": "https://api.github.com/users/teamdts/following{/other_user}", "gists_url": "https://api.github.com/users/teamdts/gists{/gist_id}", "starred_url": "https://api.github.com/users/teamdts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teamdts/subscriptions", "organizations_url": "https://api.github.com/users/teamdts/orgs", "repos_url": "https://api.github.com/users/teamdts/repos", "events_url": "https://api.github.com/users/teamdts/events{/privacy}", "received_events_url": "https://api.github.com/users/teamdts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-14T08:06:56Z", "updated_at": "2020-05-14T16:38:35Z", "closed_at": "2020-05-14T16:38:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello\r\ni want to use login method only one time for all test cases.\r\nso i am trying to set fixture for setup or login related my test case.\r\n\r\nbut not able to set it.\r\n\r\nhow i can implement \r\nhttps://www.seleniumeasy.com/python/pytest-run-webdriver-tests-in-parallel\r\n\r\nthing on our below function \r\n```\r\ndef setUp(self):\r\n   super(BaseCase,self).setUp()\r\n```\r\ncan u please help me to resolve this issue ?\r\nor if anything in your architecture related that \r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/568", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/568/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/568/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/568/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/568", "id": 617867503, "node_id": "MDU6SXNzdWU2MTc4Njc1MDM=", "number": 568, "title": "self.double_click('select'),will close chrome", "user": {"login": "zhonghai9967", "id": 64431881, "node_id": "MDQ6VXNlcjY0NDMxODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/64431881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhonghai9967", "html_url": "https://github.com/zhonghai9967", "followers_url": "https://api.github.com/users/zhonghai9967/followers", "following_url": "https://api.github.com/users/zhonghai9967/following{/other_user}", "gists_url": "https://api.github.com/users/zhonghai9967/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhonghai9967/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhonghai9967/subscriptions", "organizations_url": "https://api.github.com/users/zhonghai9967/orgs", "repos_url": "https://api.github.com/users/zhonghai9967/repos", "events_url": "https://api.github.com/users/zhonghai9967/events{/privacy}", "received_events_url": "https://api.github.com/users/zhonghai9967/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-05-14T02:02:10Z", "updated_at": "2020-05-19T06:02:56Z", "closed_at": "2020-05-19T06:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "self.click is True.\r\nself.hover_and_double_click is none.\r\nself.double_click,chrome is close.\r\n====\r\nwindows 10\r\npython 3.7.5\r\npytest 3.7.5\r\nseleniumbase 1.37.14\r\nchrome 68.0.3440.75", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/566", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/566/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/566/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/566", "id": 615698667, "node_id": "MDU6SXNzdWU2MTU2OTg2Njc=", "number": 566, "title": "Simplify error output", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094999, "node_id": "MDU6TGFiZWw4NDA5NDk5OQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T08:39:33Z", "updated_at": "2020-05-22T21:27:20Z", "closed_at": "2020-05-22T21:27:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If it test fails, the error output can be too long sometimes. It needs to be simplified. Here's an example of the long output:\r\n```bash\r\nself = <examples.test_suite.MyTestSuite testMethod=test_4>\r\n\r\n    @pytest.mark.expected_failure\r\n    def test_4(self):\r\n        print(\"\\n(This test fails on purpose)\")\r\n        self.open(\"https://xkcd.com/1670/\")\r\n>       self.assert_element(\"FakeElement.DoesNotExist\", timeout=0.5)\r\n\r\ntest_suite.py:32: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../seleniumbase/fixtures/base_case.py:3625: in assert_element\r\n    self.wait_for_element_visible(selector, by=by, timeout=timeout)\r\n../seleniumbase/fixtures/base_case.py:2955: in wait_for_element_visible\r\n    self.driver, selector, by, timeout)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d3357977113134765452bd93ae9b662e\")>\r\nselector = 'FakeElement.DoesNotExist', by = 'css selector', timeout = 0.5\r\n\r\n    def wait_for_element_visible(driver, selector, by=By.CSS_SELECTOR,\r\n                                 timeout=settings.LARGE_TIMEOUT):\r\n        \"\"\"\r\n        Searches for the specified element by the given selector. Returns the\r\n        element object if the element is present and visible on the page.\r\n        Raises an exception if the element does not appear in the\r\n        specified timeout.\r\n        @Params\r\n        driver - the webdriver object (required)\r\n        selector - the locator for identifying the page element (required)\r\n        by - the type of selector being used (Default: By.CSS_SELECTOR)\r\n        timeout - the time to wait for elements in seconds\r\n    \r\n        @Returns\r\n        A web element object\r\n        \"\"\"\r\n        element = None\r\n        start_ms = time.time() * 1000.0\r\n        stop_ms = start_ms + (timeout * 1000.0)\r\n        for x in range(int(timeout * 10)):\r\n            shared_utils.check_if_time_limit_exceeded()\r\n            try:\r\n                element = driver.find_element(by=by, value=selector)\r\n                if element.is_displayed():\r\n                    return element\r\n                else:\r\n                    element = None\r\n                    raise Exception()\r\n            except Exception:\r\n                now_ms = time.time() * 1000.0\r\n                if now_ms >= stop_ms:\r\n                    break\r\n                time.sleep(0.1)\r\n        plural = \"s\"\r\n        if timeout == 1:\r\n            plural = \"\"\r\n        if not element and by != By.LINK_TEXT:\r\n            raise ElementNotVisibleException(\r\n                \"Element {%s} was not visible after %s second%s!\" % (\r\n>                   selector, timeout, plural))\r\nE           selenium.common.exceptions.ElementNotVisibleException: Message: Element {FakeElement.DoesNotExist} was not visible after 0.5 seconds!\r\n\r\n../seleniumbase/fixtures/page_actions.py:285: ElementNotVisibleException\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/563", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/563/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/563/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/563", "id": 613769645, "node_id": "MDU6SXNzdWU2MTM3Njk2NDU=", "number": 563, "title": "\u2019--reuse-session' can not work when using '-n NUM'.", "user": {"login": "clobob", "id": 10508051, "node_id": "MDQ6VXNlcjEwNTA4MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/10508051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clobob", "html_url": "https://github.com/clobob", "followers_url": "https://api.github.com/users/clobob/followers", "following_url": "https://api.github.com/users/clobob/following{/other_user}", "gists_url": "https://api.github.com/users/clobob/gists{/gist_id}", "starred_url": "https://api.github.com/users/clobob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clobob/subscriptions", "organizations_url": "https://api.github.com/users/clobob/orgs", "repos_url": "https://api.github.com/users/clobob/repos", "events_url": "https://api.github.com/users/clobob/events{/privacy}", "received_events_url": "https://api.github.com/users/clobob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094997, "node_id": "MDU6TGFiZWw4NDA5NDk5Nw==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/bug", "name": "bug", "color": "f83e3e", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-07T04:48:06Z", "updated_at": "2020-05-11T08:29:28Z", "closed_at": "2020-05-11T08:29:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\r\nHere is my scenario: \r\n 1.  create many tests which need re-use 'login' session .\r\n 2.  to run all these tests with option both '--user-dir-data --reuse-session' and '-n NUM'\r\n\r\nresult:\r\n  all tests run under multiple threads , but ' --reuse-session' does not work.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/560", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/560/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/560/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/560", "id": 610794533, "node_id": "MDU6SXNzdWU2MTA3OTQ1MzM=", "number": 560, "title": "Time limit will not end the test if the page didn't load", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1995896876, "node_id": "MDU6TGFiZWwxOTk1ODk2ODc2", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/incorrect%20usage", "name": "incorrect usage", "color": "dbab82", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-01T14:59:20Z", "updated_at": "2020-05-02T16:11:11Z", "closed_at": "2020-05-02T15:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @mdmintz,\r\n\r\nI reported an issue before with a webpage having a big load time and the conclusion was that it there was nothing to do from a seleniumbase perspective since any action on the page starts after the page is loaded.\r\n\r\nFair enough.\r\n\r\nBut, I see there is an argument that you can pass `time_limit`, so your tests can end if it takes longer than the given value. \r\nIsn't this supposed to fail my test in this case? \r\nApparently, it doesn't.\r\n\r\nThe issue is that the test will fail with the time limit error after the page is loaded.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/559", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/559/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/559/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/559", "id": 610355321, "node_id": "MDU6SXNzdWU2MTAzNTUzMjE=", "number": 559, "title": "How can I reuse a code", "user": {"login": "filipe-guerra", "id": 8474726, "node_id": "MDQ6VXNlcjg0NzQ3MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8474726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/filipe-guerra", "html_url": "https://github.com/filipe-guerra", "followers_url": "https://api.github.com/users/filipe-guerra/followers", "following_url": "https://api.github.com/users/filipe-guerra/following{/other_user}", "gists_url": "https://api.github.com/users/filipe-guerra/gists{/gist_id}", "starred_url": "https://api.github.com/users/filipe-guerra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/filipe-guerra/subscriptions", "organizations_url": "https://api.github.com/users/filipe-guerra/orgs", "repos_url": "https://api.github.com/users/filipe-guerra/repos", "events_url": "https://api.github.com/users/filipe-guerra/events{/privacy}", "received_events_url": "https://api.github.com/users/filipe-guerra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-30T20:11:58Z", "updated_at": "2020-04-30T23:54:58Z", "closed_at": "2020-04-30T22:21:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an login step, and I want to reuse that code in many tests. I like use \"self.open\" and \"self.click\" in a file that not are a test function, is that possible? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/558", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/558/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/558/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/558", "id": 610029524, "node_id": "MDU6SXNzdWU2MTAwMjk1MjQ=", "number": 558, "title": "May use contains to find a element", "user": {"login": "wagnermduarte", "id": 23167784, "node_id": "MDQ6VXNlcjIzMTY3Nzg0", "avatar_url": "https://avatars0.githubusercontent.com/u/23167784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wagnermduarte", "html_url": "https://github.com/wagnermduarte", "followers_url": "https://api.github.com/users/wagnermduarte/followers", "following_url": "https://api.github.com/users/wagnermduarte/following{/other_user}", "gists_url": "https://api.github.com/users/wagnermduarte/gists{/gist_id}", "starred_url": "https://api.github.com/users/wagnermduarte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wagnermduarte/subscriptions", "organizations_url": "https://api.github.com/users/wagnermduarte/orgs", "repos_url": "https://api.github.com/users/wagnermduarte/repos", "events_url": "https://api.github.com/users/wagnermduarte/events{/privacy}", "received_events_url": "https://api.github.com/users/wagnermduarte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T13:59:48Z", "updated_at": "2020-05-02T02:59:53Z", "closed_at": "2020-05-02T02:59:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nCongrats about this job, is awesome.\r\n\r\nI want to ask about use contains to find elements? Is it all ready done? or you mind to do a thing similar?\r\n\r\nsorry about my rusty english...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/557", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/557/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/557/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/557", "id": 609745831, "node_id": "MDU6SXNzdWU2MDk3NDU4MzE=", "number": 557, "title": " Can you add a method to compare the pictures?", "user": {"login": "Likangkang08", "id": 22090651, "node_id": "MDQ6VXNlcjIyMDkwNjUx", "avatar_url": "https://avatars0.githubusercontent.com/u/22090651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Likangkang08", "html_url": "https://github.com/Likangkang08", "followers_url": "https://api.github.com/users/Likangkang08/followers", "following_url": "https://api.github.com/users/Likangkang08/following{/other_user}", "gists_url": "https://api.github.com/users/Likangkang08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Likangkang08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Likangkang08/subscriptions", "organizations_url": "https://api.github.com/users/Likangkang08/orgs", "repos_url": "https://api.github.com/users/Likangkang08/repos", "events_url": "https://api.github.com/users/Likangkang08/events{/privacy}", "received_events_url": "https://api.github.com/users/Likangkang08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84094999, "node_id": "MDU6TGFiZWw4NDA5NDk5OQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T09:15:51Z", "updated_at": "2020-05-11T08:24:21Z", "closed_at": "2020-05-11T08:24:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think we can try to use python's opencv to compare the pictures. Selenium is only responsible for screenshots.\r\n\r\n![image](https://user-images.githubusercontent.com/22090651/80693751-1238d300-8b06-11ea-956b-338c98bf53fe.png)\r\n\r\nFor example, before you start, put the original picture in the base file, take a screenshot at runtime, and then use python to write a method for comparison. If the same returns true, it returns false. Then mark the different places.\r\n![image](https://user-images.githubusercontent.com/22090651/80693791-1e249500-8b06-11ea-8c78-bd04f0f813bd.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/553", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/553/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/553/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/553", "id": 607008745, "node_id": "MDU6SXNzdWU2MDcwMDg3NDU=", "number": 553, "title": "About @ pytest.fixture", "user": {"login": "SubePython", "id": 39877932, "node_id": "MDQ6VXNlcjM5ODc3OTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/39877932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SubePython", "html_url": "https://github.com/SubePython", "followers_url": "https://api.github.com/users/SubePython/followers", "following_url": "https://api.github.com/users/SubePython/following{/other_user}", "gists_url": "https://api.github.com/users/SubePython/gists{/gist_id}", "starred_url": "https://api.github.com/users/SubePython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SubePython/subscriptions", "organizations_url": "https://api.github.com/users/SubePython/orgs", "repos_url": "https://api.github.com/users/SubePython/repos", "events_url": "https://api.github.com/users/SubePython/events{/privacy}", "received_events_url": "https://api.github.com/users/SubePython/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T13:08:56Z", "updated_at": "2020-04-27T00:35:44Z", "closed_at": "2020-04-27T00:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm a Xiaobai. I have a question. Please help me out:\r\n\r\nNow I need to use @ pytest. Fixture() to define my web login in confitest.py, but it seems that it can't be used in the class. How can I solve this problem", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/551", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/551/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/551/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/551", "id": 606211364, "node_id": "MDU6SXNzdWU2MDYyMTEzNjQ=", "number": 551, "title": "get_attribute method cannot get the value,but when I use selenium,it works.", "user": {"login": "Melissa-mao", "id": 39981474, "node_id": "MDQ6VXNlcjM5OTgxNDc0", "avatar_url": "https://avatars2.githubusercontent.com/u/39981474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Melissa-mao", "html_url": "https://github.com/Melissa-mao", "followers_url": "https://api.github.com/users/Melissa-mao/followers", "following_url": "https://api.github.com/users/Melissa-mao/following{/other_user}", "gists_url": "https://api.github.com/users/Melissa-mao/gists{/gist_id}", "starred_url": "https://api.github.com/users/Melissa-mao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Melissa-mao/subscriptions", "organizations_url": "https://api.github.com/users/Melissa-mao/orgs", "repos_url": "https://api.github.com/users/Melissa-mao/repos", "events_url": "https://api.github.com/users/Melissa-mao/events{/privacy}", "received_events_url": "https://api.github.com/users/Melissa-mao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2011991158, "node_id": "MDU6TGFiZWwyMDExOTkxMTU4", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/need%20more%20info", "name": "need more info", "color": "dfccff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-24T10:28:57Z", "updated_at": "2020-04-26T06:12:58Z", "closed_at": "2020-04-26T06:12:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i need to get an input value,just like this:\r\n![image](https://user-images.githubusercontent.com/39981474/80200981-03f63d00-8656-11ea-9434-6c104c01d6f7.png)\r\nWhen i use selenium, it works. I can use\r\n![image](https://user-images.githubusercontent.com/39981474/80201286-7b2bd100-8656-11ea-810c-d32e81c14ee3.png)\r\nI can get value=adminnd20200424180307;\r\nBut when I use seleniumBase to get this value, it dosen't work.\r\n![image](https://user-images.githubusercontent.com/39981474/80202862-d65ec300-8658-11ea-8c3d-8a98e8d957cd.png)\r\n![image](https://user-images.githubusercontent.com/39981474/80202887-deb6fe00-8658-11ea-9aee-e8438a13f081.png)\r\nI consider that it's the problem of driver, it also send request to brower, and the response also has value, but it's an empty string.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/550", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/550/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/550/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/550", "id": 605699908, "node_id": "MDU6SXNzdWU2MDU2OTk5MDg=", "number": 550, "title": "how do I detect/verify seleniumbase version", "user": {"login": "hh-xu", "id": 50179761, "node_id": "MDQ6VXNlcjUwMTc5NzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/50179761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hh-xu", "html_url": "https://github.com/hh-xu", "followers_url": "https://api.github.com/users/hh-xu/followers", "following_url": "https://api.github.com/users/hh-xu/following{/other_user}", "gists_url": "https://api.github.com/users/hh-xu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hh-xu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hh-xu/subscriptions", "organizations_url": "https://api.github.com/users/hh-xu/orgs", "repos_url": "https://api.github.com/users/hh-xu/repos", "events_url": "https://api.github.com/users/hh-xu/events{/privacy}", "received_events_url": "https://api.github.com/users/hh-xu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 84095001, "node_id": "MDU6TGFiZWw4NDA5NTAwMQ==", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/question", "name": "question", "color": "d2919c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T17:05:17Z", "updated_at": "2020-04-23T17:21:42Z", "closed_at": "2020-04-23T17:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "how do I find out the version of seleniumbase in my env? I'd expect something like\r\n  - `seleniumbase --version`\r\n  - or in python `import seleniumbase; seleniumbase.__version__`\r\nI can't seem to find anything that shows the version I am currently using. Please help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/549", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/549/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/549/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/549", "id": 605201535, "node_id": "MDU6SXNzdWU2MDUyMDE1MzU=", "number": 549, "title": "Microsoft Edge (Chromium) no longer accepts ChromeOptions on Windows", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2007556009, "node_id": "MDU6TGFiZWwyMDA3NTU2MDA5", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/workaround%20exists", "name": "workaround exists", "color": "a9578f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-23T02:57:53Z", "updated_at": "2020-08-08T17:57:42Z", "closed_at": "2020-08-08T17:57:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As stated on https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium =>\r\n\r\n\"If you were previously automating or testing Microsoft Edge (Chromium) by using ChromeDriver and ChromeOptions, your WebDriver code does not run successfully against Microsoft Edge 80 or newer. This is a breaking change and Microsoft Edge (Chromium) no longer accepts these commands. You must change your tests to use EdgeOptions and Microsoft Edge Driver.\"\r\n\r\nMicrosoft Edge automation still works normally on a Mac, and for versions of Edge earlier than 80.\r\nSelenium 4 (currently only in alpha) will have updates to take care of this situation on Windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/548", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/548/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/548/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/548", "id": 604868422, "node_id": "MDU6SXNzdWU2MDQ4Njg0MjI=", "number": 548, "title": "No possibility for sending text on alert prompt", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2007433844, "node_id": "MDU6TGFiZWwyMDA3NDMzODQ0", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/external%20issue", "name": "external issue", "color": "f4b165", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-22T15:54:16Z", "updated_at": "2020-04-25T17:47:07Z", "closed_at": "2020-04-25T17:47:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI am trying to send some text to an alert prompt, but can't figure out how using seleniumbase.\r\n\r\n```python\r\nfrom seleniumbase import BaseCase\r\nimport time\r\n\r\n\r\nclass MyTestClass(BaseCase):\r\n\r\n    def test_alerts(self):\r\n        self.open(\"about:blank\")\r\n        self.execute_script('window.prompt(\"sometext\",\"defaultText\");')\r\n        time.sleep(1.2)  # Not needed (Lets you see the alert pop up)\r\n        self.wait_for_and_switch_to_alert(timeout=2)\r\n        self.send_keys('*', 'newText')\r\n        time.sleep(1.5)\r\n        self.wait_for_and_accept_alert()\r\n        time.sleep(0.8)  # Not needed (Lets you see the alert go away)\r\n```\r\nThis version actually fails. Remove line 14 and it will pass, but it doesn't send any text regardless.\r\n\r\nSession data\r\n`metadata: {'Python': '3.8.2', 'Platform': 'macOS-10.15.4-x86_64-i386-64bit', 'Packages': {'pytest': '5.3.5', 'py': '1.8.1', 'pluggy': '0.13.1'}, 'Plugins': {'html': '2.0.1', 'rerunfailures': '9.0', 'xdist': '1.31.0', 'ordering': '0.6', 'seleniumbase': '1.37.8', 'forked': '1.1.3', 'metadata': '1.8.0', 'cov': '2.8.1'}}\r\n`\r\n\r\nP.S. Just installed latest version of pytest and got this:\r\n`ERROR: seleniumbase 1.37.8 has requirement pytest==5.3.5; python_version >= \"3.5\", but you'll have pytest 5.4.1 which is incompatible.\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/538", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/538/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/538/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/538", "id": 598519785, "node_id": "MDU6SXNzdWU1OTg1MTk3ODU=", "number": 538, "title": "Using --cap_file threw an exception", "user": {"login": "tcw0nw", "id": 3793852, "node_id": "MDQ6VXNlcjM3OTM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcw0nw", "html_url": "https://github.com/tcw0nw", "followers_url": "https://api.github.com/users/tcw0nw/followers", "following_url": "https://api.github.com/users/tcw0nw/following{/other_user}", "gists_url": "https://api.github.com/users/tcw0nw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcw0nw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcw0nw/subscriptions", "organizations_url": "https://api.github.com/users/tcw0nw/orgs", "repos_url": "https://api.github.com/users/tcw0nw/repos", "events_url": "https://api.github.com/users/tcw0nw/events{/privacy}", "received_events_url": "https://api.github.com/users/tcw0nw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1995896876, "node_id": "MDU6TGFiZWwxOTk1ODk2ODc2", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/incorrect%20usage", "name": "incorrect usage", "color": "dbab82", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-04-12T16:18:28Z", "updated_at": "2020-04-22T02:40:50Z", "closed_at": "2020-04-22T02:40:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "code:\r\n\r\n`s = \"abc\"`\r\ncapabilities = {\r\n                'browserName': 'chrome',\r\n                'tz': 'Asia/Harbin',\r\n                'build': s,\r\n                'name': \"build_\" ,\r\n                'idleTimeout': 90,         }\r\n\r\nerror\uff1a\r\n`_____________________________________________________________________________________________________ MyTestClass.test_open_baidu _____________________________________________________________________________________________________\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:4518: in setUp\r\n    d_p_r=self.__device_pixel_ratio)\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:1564: in get_new_driver\r\n    device_pixel_ratio=d_p_r)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:378: in get_driver\r\n    mobile_emulator, device_width, device_height, device_pixel_ratio)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:399: in get_remote_driver\r\n    desired_caps = capabilities_parser.get_desired_capabilities(cap_file)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/capabilities_parser.py:206: in get_desired_capabilities\r\n    capabilities = _parse_py_file(cap_file)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/capabilities_parser.py:190: in _parse_py_file\r\n    capabilities = _analyze_ast(all_code)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/capabilities_parser.py:22: in _analyze_ast\r\n    return ast.literal_eval(contents)\r\n/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py:91: in literal_eval\r\n    return _convert(node_or_string)\r\n/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py:79: in _convert\r\n    map(_convert, node.values)))\r\n/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py:90: in _convert\r\n    return _convert_signed_num(node)\r\n/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/ast.py:63: in _convert_signed_num\r\n    return _convert_num(node)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nnode = <_ast.Call object at 0x107bfd950>\r\n\r\n    def _convert_num(node):\r\n        if isinstance(node, Constant):\r\n            if isinstance(node.value, (int, float, complex)):\r\n                return node.value\r\n        elif isinstance(node, Num):\r\n            return node.n\r\n>       raise ValueError('malformed node or string: ' + repr(node))\r\nE       ValueError: malformed node or string: <_ast.Call object at 0x107bfd950>\r\n----------------\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/534", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/534/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/534/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/534", "id": 591799126, "node_id": "MDU6SXNzdWU1OTE3OTkxMjY=", "number": 534, "title": "SeleniumBase's pytest dependency is pinned to v5.3.5", "user": {"login": "aklajnert", "id": 18279161, "node_id": "MDQ6VXNlcjE4Mjc5MTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/18279161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aklajnert", "html_url": "https://github.com/aklajnert", "followers_url": "https://api.github.com/users/aklajnert/followers", "following_url": "https://api.github.com/users/aklajnert/following{/other_user}", "gists_url": "https://api.github.com/users/aklajnert/gists{/gist_id}", "starred_url": "https://api.github.com/users/aklajnert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aklajnert/subscriptions", "organizations_url": "https://api.github.com/users/aklajnert/orgs", "repos_url": "https://api.github.com/users/aklajnert/repos", "events_url": "https://api.github.com/users/aklajnert/events{/privacy}", "received_events_url": "https://api.github.com/users/aklajnert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1995903096, "node_id": "MDU6TGFiZWwxOTk1OTAzMDk2", "url": "https://api.github.com/repos/seleniumbase/SeleniumBase/labels/requirements", "name": "requirements", "color": "c7e283", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-04-01T10:16:25Z", "updated_at": "2020-05-11T08:26:17Z", "closed_at": "2020-05-11T08:26:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is what happens when I run `pip install pytest seleniumbase`:  \r\n\r\n```\r\nERROR: seleniumbase 1.36.9 has requirement pytest==5.3.5; python_version >= \"3.5\", but you'll have pytest 5.4.1 which is incompatible.\r\n```\r\n\r\nI'm actually a bit surprised by the `pytest==5.3.5` constraint. Is there a reason for that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/533", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/533/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/533/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/533", "id": 591368391, "node_id": "MDU6SXNzdWU1OTEzNjgzOTE=", "number": 533, "title": "Element Id saved in html folder latest logs doen't match with real webpage", "user": {"login": "acpn", "id": 12258695, "node_id": "MDQ6VXNlcjEyMjU4Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/12258695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acpn", "html_url": "https://github.com/acpn", "followers_url": "https://api.github.com/users/acpn/followers", "following_url": "https://api.github.com/users/acpn/following{/other_user}", "gists_url": "https://api.github.com/users/acpn/gists{/gist_id}", "starred_url": "https://api.github.com/users/acpn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acpn/subscriptions", "organizations_url": "https://api.github.com/users/acpn/orgs", "repos_url": "https://api.github.com/users/acpn/repos", "events_url": "https://api.github.com/users/acpn/events{/privacy}", "received_events_url": "https://api.github.com/users/acpn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-31T19:33:57Z", "updated_at": "2020-04-01T14:20:07Z", "closed_at": "2020-04-01T14:20:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys, \r\n\r\nI've doubt here and maybe a possible bug, i'm in the middle of an automation project from a website write in ADF, the HTML file it's very 'dirty' per say, and  i've facing an issue when a try to find and input element by ID, i just get the id from page HTML and seleniumbase tells me which the element isn't present. I start to  digging and compare the element and it is present in the webpage. \r\n\r\nThen i saw the log files and found an html from the page stored in the latest_logs folder, that's ok but when I search for my element i can't find it in the stored html file. So I start to digging more and find my element with other id:\r\n\r\nreal element id from page source: `pt1:contentAreaReg:0:tabrg3:2:pt1:mR:it4::content`\r\nstored element id from the html file stored in latest_logs: `pt1:contentAreaReg:0:tabrg2:2:pt1:mR:it4::content`\r\n\r\nThe only difference it's in tabrg part, in the real page its **tabrg3:2** and in the stored file it's **tabrg2:2**.\r\n\r\nWhen i change the element id for the stored one, my code works, so, i supose the locators are running in the stored file, that is correct?\r\n\r\nAnd if it's correct I think there is a bug or something wrong when the html file it's stored.\r\n\r\nThanks,\r\nAntonio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/532", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/532/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/532/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/532", "id": 590426972, "node_id": "MDU6SXNzdWU1OTA0MjY5NzI=", "number": 532, "title": "Unable to get current url of new window pdf in headless mode", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-03-30T16:30:45Z", "updated_at": "2020-03-31T18:30:49Z", "closed_at": "2020-03-31T18:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is an issue when trying to click a button that opens a pdf file in a new browser tab.\r\nI'm doing a basic verification of the new tab url and it appears that I can't get the new tab url in headless mode.\r\n\r\nWorth mentioning that the test has no issues when the browser window is opened in normal mode.\r\n\r\nMight be related to this issue: https://bugs.chromium.org/p/chromedriver/issues/detail?id=3120\r\nBut there it seems the current url is accessible on their side, so maybe there is a seleniumbase issue.\r\n\r\nMy test looks something like this:\r\n```python\r\nself.open(URL)\r\nself.click(element)\r\nself.switch_to_window(1)\r\nself.assert_true(element.get('url') in self.get_current_url().strip(),\r\n                             f'URL {element.get(\"url\")} could not be found inside URL! '\r\n                             f'Got {self.get_current_url()} instead.')\r\n```\r\nCommand: \r\n`pytest my_test.py -vs --headless`\r\n(tested in Chrome only)\r\n\r\nError:\r\n`  AssertionError: False is not true : URL Flavored-Tobacco-Bans-and-Menthol-Exemptions-List could not be found inside URL! Got about:blank instead.\r\n` is what I get after 7:30 mins\r\n\r\nConfig:  {'Python': '3.8.2', 'Platform': 'macOS-10.15.4-x86_64-i386-64bit', 'Packages': {'pytest': '5.3.5', 'py': '1.8.1', 'pluggy': '0.13.1'}, 'Plugins': {'html': '2.0.1', 'rerunfailures': '9.0', 'seleniumbase': '1.36.9', 'xdist': '1.31.0', 'ordering': '0.6', 'forked': '1.1.3', 'metadata': '1.8.0', 'cov': '2.8.1'}}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/531", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/531/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/531/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/531", "id": 590395918, "node_id": "MDU6SXNzdWU1OTAzOTU5MTg=", "number": 531, "title": "seleniumBase convert id to css_selector don't find the element", "user": {"login": "acpn", "id": 12258695, "node_id": "MDQ6VXNlcjEyMjU4Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/12258695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acpn", "html_url": "https://github.com/acpn", "followers_url": "https://api.github.com/users/acpn/followers", "following_url": "https://api.github.com/users/acpn/following{/other_user}", "gists_url": "https://api.github.com/users/acpn/gists{/gist_id}", "starred_url": "https://api.github.com/users/acpn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acpn/subscriptions", "organizations_url": "https://api.github.com/users/acpn/orgs", "repos_url": "https://api.github.com/users/acpn/repos", "events_url": "https://api.github.com/users/acpn/events{/privacy}", "received_events_url": "https://api.github.com/users/acpn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T15:47:06Z", "updated_at": "2020-07-27T20:10:44Z", "closed_at": "2020-03-30T16:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys,\r\n\r\nI'm in an automation project of a system developed in ADF (i know, why someone use that, right?), it's a proprietary software and i've to do a lot of automation here.\r\n\r\nI've a background with selenium + python and recently i hear in the testGuilde podcast about seleniumBase, and i think why not?\r\n\r\nNow i'm facing an issue when i have the id of an element, but with selenium base update_text method, doesn't work. So i go through documentation (excellent by the way), and noted which i can pass by=By.SELECTOR, but also doesn't work. Someone have a clue?\r\n\r\nI know seleniumBase convert id or whatever to css_selector, but maybe because of something doesn't working.\r\n\r\nThanks,\r\nAntonio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/527", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/527/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/527/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/527", "id": 589597485, "node_id": "MDU6SXNzdWU1ODk1OTc0ODU=", "number": 527, "title": "custom --with-db_reporting storage field\uff1f", "user": {"login": "tcw0nw", "id": 3793852, "node_id": "MDQ6VXNlcjM3OTM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcw0nw", "html_url": "https://github.com/tcw0nw", "followers_url": "https://api.github.com/users/tcw0nw/followers", "following_url": "https://api.github.com/users/tcw0nw/following{/other_user}", "gists_url": "https://api.github.com/users/tcw0nw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcw0nw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcw0nw/subscriptions", "organizations_url": "https://api.github.com/users/tcw0nw/orgs", "repos_url": "https://api.github.com/users/tcw0nw/repos", "events_url": "https://api.github.com/users/tcw0nw/events{/privacy}", "received_events_url": "https://api.github.com/users/tcw0nw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-28T15:24:02Z", "updated_at": "2020-04-09T15:45:54Z", "closed_at": "2020-04-09T15:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "pytest.ini --with-db_reporting \r\nCan this parameter define the fields stored in the database, because I need to read the results of these use cases and display them on the page, but the current fields do not meet my needs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/525", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/525/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/525/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/525", "id": 586771670, "node_id": "MDU6SXNzdWU1ODY3NzE2NzA=", "number": 525, "title": "Is there any method like is_selected() for checkbox and radio?", "user": {"login": "arantir53", "id": 34082555, "node_id": "MDQ6VXNlcjM0MDgyNTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/34082555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arantir53", "html_url": "https://github.com/arantir53", "followers_url": "https://api.github.com/users/arantir53/followers", "following_url": "https://api.github.com/users/arantir53/following{/other_user}", "gists_url": "https://api.github.com/users/arantir53/gists{/gist_id}", "starred_url": "https://api.github.com/users/arantir53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arantir53/subscriptions", "organizations_url": "https://api.github.com/users/arantir53/orgs", "repos_url": "https://api.github.com/users/arantir53/repos", "events_url": "https://api.github.com/users/arantir53/events{/privacy}", "received_events_url": "https://api.github.com/users/arantir53/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-03-24T08:09:15Z", "updated_at": "2020-03-30T01:19:56Z", "closed_at": "2020-03-30T01:19:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I now have two problems. I need to determine whether a checkbox is selected, but I find that this method is not available in seleniumbase. what should I do?\r\nThe second problem is that I find that seleniumbase cannot locate the checkbox I want to find, it always reports an error like \"Element {//ux-table-body//tr[34]//span//input} was not visible after 6 seconds!\"  The strange thing is, if the locator I use is \"//ux-table-body//tr [34]//span\", this checkbox can be found, what is the reason for this?\r\nI tried it in Chrome's console,  Both $x(\"//ux-table-body//tr[34]//span\")[0].click() and $x(\"//ux-table- body//tr[34]//span//input\")[0].click() can operate elements correctly, why is it not possible in seleniumbase? Even if I use self. js_click(\"//ux-table-body//tr[34]//span//input\"), still didn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/524", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/524/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/524/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/524", "id": 586296282, "node_id": "MDU6SXNzdWU1ODYyOTYyODI=", "number": 524, "title": "How to use json dictionary in seleniumbase @parameterized.expand?", "user": {"login": "arantir53", "id": 34082555, "node_id": "MDQ6VXNlcjM0MDgyNTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/34082555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arantir53", "html_url": "https://github.com/arantir53", "followers_url": "https://api.github.com/users/arantir53/followers", "following_url": "https://api.github.com/users/arantir53/following{/other_user}", "gists_url": "https://api.github.com/users/arantir53/gists{/gist_id}", "starred_url": "https://api.github.com/users/arantir53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arantir53/subscriptions", "organizations_url": "https://api.github.com/users/arantir53/orgs", "repos_url": "https://api.github.com/users/arantir53/repos", "events_url": "https://api.github.com/users/arantir53/events{/privacy}", "received_events_url": "https://api.github.com/users/arantir53/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-23T15:28:38Z", "updated_at": "2020-04-22T04:38:07Z", "closed_at": "2020-03-24T07:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Simple @json using @ parameterized.expand () is not difficult, but the situation is different when you use a list of json. For example this is my json:\r\n```python\r\n[\r\n  {\"username\": \"admin\",\"password\":\"admin\",\r\n    \"usergroup\": [3,4,5]\r\n  },\r\n  {\"username\": \"user\",\"password\":\"123456\",\r\n    \"usergroup\": [\"g1\",\"g2\",\"g3\"]\r\n  }\r\n]\r\n```\r\n\r\nThis is my code:\r\n```python\r\nimport json\r\nfrom seleniumbase import BaseCase\r\nfrom parameterized import parameterized\r\ndef parsejson():\r\n    with open(\"testfile.json\") as json_file:\r\n        return json.load(json_file)\r\n\r\nclass test_param(BaseCase):\r\n    @parameterized.expand(\r\n        parsejson()\r\n    )\r\n    def test_func(self,username,password,usergroup):\r\n        print(username)\r\n        print(password)\r\n        for i in usergroup:\r\n            print(usergroup)\r\n```\r\nAs a result, I can only get the dictionary key. I cannot get the value. When I change the expression to self.username, the compiler tells me 'test_param' object has no attribute 'username'. Why is that?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/521", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/521/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/521/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/521", "id": 585283777, "node_id": "MDU6SXNzdWU1ODUyODM3Nzc=", "number": 521, "title": "[Question]: Invalid or unsupported Xpath", "user": {"login": "allandsouza", "id": 17289362, "node_id": "MDQ6VXNlcjE3Mjg5MzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/17289362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allandsouza", "html_url": "https://github.com/allandsouza", "followers_url": "https://api.github.com/users/allandsouza/followers", "following_url": "https://api.github.com/users/allandsouza/following{/other_user}", "gists_url": "https://api.github.com/users/allandsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/allandsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allandsouza/subscriptions", "organizations_url": "https://api.github.com/users/allandsouza/orgs", "repos_url": "https://api.github.com/users/allandsouza/repos", "events_url": "https://api.github.com/users/allandsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/allandsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-20T19:29:35Z", "updated_at": "2020-03-20T21:06:24Z", "closed_at": "2020-03-20T20:48:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "PS: This is likely not a seleniumbase thing but wanted to confirm.\r\n\r\nA xpath expression like below returns back as unsupported.\r\n`//span[text()='Add Products']/ancestor::button`\r\n\r\nseems to be a valid xpath expression. Is this a seleniumbase thing? If yes, can it be fixed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/518", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/518/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/518/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/518", "id": 584407750, "node_id": "MDU6SXNzdWU1ODQ0MDc3NTA=", "number": 518, "title": "@pytest.mark.repeat() can not use in seleniumbase.", "user": {"login": "arantir53", "id": 34082555, "node_id": "MDQ6VXNlcjM0MDgyNTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/34082555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arantir53", "html_url": "https://github.com/arantir53", "followers_url": "https://api.github.com/users/arantir53/followers", "following_url": "https://api.github.com/users/arantir53/following{/other_user}", "gists_url": "https://api.github.com/users/arantir53/gists{/gist_id}", "starred_url": "https://api.github.com/users/arantir53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arantir53/subscriptions", "organizations_url": "https://api.github.com/users/arantir53/orgs", "repos_url": "https://api.github.com/users/arantir53/repos", "events_url": "https://api.github.com/users/arantir53/events{/privacy}", "received_events_url": "https://api.github.com/users/arantir53/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-19T13:21:18Z", "updated_at": "2020-03-21T03:50:28Z", "closed_at": "2020-03-21T03:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n     I wanted to execute a test case many times, so I used decorator @pytest.mark.repeat(3), but it didn't work.  If I use raw pytest-repeat alone, there is no problem, but not in seleniumbase. Why? I have import pytest and also installed the pytest-repeat library.\r\n     The raw pytest code works.  The code is as follows:\r\n```python\r\nimport pytest\r\n@pytest.mark.repeat(3)\r\ndef test_1():\r\n   print(\"message\")\r\n```\r\n\r\n   The seleniumBase code didn't works.  The code is as follows:\r\n```python\r\nfrom seleniumbase import BaseCase\r\n\r\nclass test_case(BaseCase):\r\n    @pytest.mark.repeat(3)\r\n    def test_1(self):\r\n        print(\"message\")\r\n```\r\n\r\n    My purpose is to generate a user, this user has a lot of attributes, so I want to randomly generate for each, this is why I need to execute a use case multiple times.  The only way I know is @ pytest.mark.repeat ().  Please tell me if there is any similar scheme in seleniumbase.\r\n\r\nBest Regards.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/517", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/517/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/517/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/517", "id": 583716069, "node_id": "MDU6SXNzdWU1ODM3MTYwNjk=", "number": 517, "title": "How to use a function with @parameterized.expand?", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-18T13:09:02Z", "updated_at": "2020-03-20T23:24:19Z", "closed_at": "2020-03-20T23:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI want to parametrise a test and I would like to have a function call as an argument instead of a hardcoded element.\r\nI've seen some examples using @pytest.mark.parametrize, but I can't get my head around this time.\r\n\r\nThis is my code:\r\n```\r\n    @parameterized.expand([(0, 'test_name', None, 'disabled'),\r\n                           (get_random_location, '', None, 'disabled'),\r\n                           (57, 'test_name', None, 'enabled'),\r\n                           (1, 'test_name', '', 'disabled'),\r\n                           (1, '', 'test_another_name', 'disabled'),\r\n                           (1, 'test_name', 'test_another_name', 'enabled')])\r\n```\r\nIn line 3, I want to use `get_random_location` function as well instead of the hardcoded value `57`.\r\nProbably I would need to create a fixture in my `BaseTestCase` class while my tests are in `TestSuite` class which inherits the previous one.\r\n\r\nTo make it easier, I tried to place the function in the `TestSuite` class as a fixture:\r\n```\r\n@fixture\r\n    def get_random_location(self):\r\n        # my function body here\r\n```\r\nbut it results in an error:\r\n`FAILED WANP/selenium_tests/test_suite.py::TestSuite::test_letter_button_1 - TypeError: %d format: a number is required, not function\r\n`\r\n\r\nDo you have any idea how could I accomplish this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/516", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/516/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/516/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/516", "id": 583707716, "node_id": "MDU6SXNzdWU1ODM3MDc3MTY=", "number": 516, "title": "No screenshot in html report after test failure", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-18T12:54:45Z", "updated_at": "2020-03-18T13:43:10Z", "closed_at": "2020-03-18T13:43:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nMaybe I am doing something wrong, but I can't get any screenshot when my tests fail.\r\nI've tried with and without `--headless` arg, running them one by one or in parallel, adding `--save-screenshot` arg and I would only get screenshots for passed tests.\r\n\r\nI did follow your boilerplate model and I have a `base_test_case.py` file and `test_suite.py` file.\r\nIn `base_test_case.py` I have this:\r\n```\r\nclass BaseTestCase(BaseCase):\r\n\r\n    def setUp(self):\r\n        super(BaseTestCase, self).setUp()\r\n        self.maximize_window()\r\n        self.open(URL)\r\n\r\n    def tearDown(self):\r\n        self.save_teardown_screenshot()\r\n        super(BaseTestCase, self).tearDown()\r\n```\r\n\r\nIn `test_suite.py` I have this:\r\n```\r\nclass TestSuite(BaseTestCase):\r\n    def test_basic(self):\r\n        assert False\r\n```\r\n\r\nMy config from the test report:\r\n```\r\nPackages | {'pytest': '5.4.0', 'py': '1.8.1', 'pluggy': '0.13.1'}\r\n-- | --\r\nPlatform | macOS-10.15.3-x86_64-i386-64bit\r\nPlugins | {'seleniumbase': '1.35.8', 'html': '2.0.1', 'rerunfailures': '8.0', 'xdist': '1.31.0', 'ordering': '0.6', 'forked': '1.1.3', 'metadata': '1.8.0', 'cov': '2.8.1'}\r\nPython | 3.8.2\r\n\r\n```\r\nAttached image of the test report:\r\n![image](https://user-images.githubusercontent.com/23474238/76962387-0a86eb80-6917-11ea-869d-f778acd3342b.png)\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/513", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/513/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/513/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/513", "id": 582184815, "node_id": "MDU6SXNzdWU1ODIxODQ4MTU=", "number": 513, "title": " self.hover_and_click() does not support xpath", "user": {"login": "alex-pancho", "id": 10905223, "node_id": "MDQ6VXNlcjEwOTA1MjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/10905223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-pancho", "html_url": "https://github.com/alex-pancho", "followers_url": "https://api.github.com/users/alex-pancho/followers", "following_url": "https://api.github.com/users/alex-pancho/following{/other_user}", "gists_url": "https://api.github.com/users/alex-pancho/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-pancho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-pancho/subscriptions", "organizations_url": "https://api.github.com/users/alex-pancho/orgs", "repos_url": "https://api.github.com/users/alex-pancho/repos", "events_url": "https://api.github.com/users/alex-pancho/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-pancho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-03-16T10:39:08Z", "updated_at": "2020-03-21T04:43:41Z", "closed_at": "2020-03-21T04:43:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Look like  self.hover_and_click() does not support xpath any way.\r\nI try to use just\r\n```! python\r\ndef test_sub_menu(self):\r\n        self.get(\"https://www.babyshop.com\")\r\n        self.hover_and_click('//a[@data-class=\"babyshoes\"]', '//div[@class=\"babyshoes mid-navigation-container\"]//a')\r\n```\r\nand try\r\n```! python\r\nfrom selenium.webdriver.common.by import By\r\ndef test_sub_menu(self):\r\n        self.get(\"https://www.babyshop.com\")\r\n        self.hover_and_click('//a[@data-class=\"babyshoes\"]', '//div[@class=\"babyshoes mid-navigation-container\"]//a',By.XPATH,By.XPATH)\r\n```\r\nbut its function work only with css-selector", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/511", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/511/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/511/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/511", "id": 581851031, "node_id": "MDU6SXNzdWU1ODE4NTEwMzE=", "number": 511, "title": "Allow user to specify `--no-sandbox` and `--disable-gpu` for Chrome drivers ran inside Docker containers", "user": {"login": "zhangxiubo", "id": 2065923, "node_id": "MDQ6VXNlcjIwNjU5MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2065923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangxiubo", "html_url": "https://github.com/zhangxiubo", "followers_url": "https://api.github.com/users/zhangxiubo/followers", "following_url": "https://api.github.com/users/zhangxiubo/following{/other_user}", "gists_url": "https://api.github.com/users/zhangxiubo/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangxiubo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangxiubo/subscriptions", "organizations_url": "https://api.github.com/users/zhangxiubo/orgs", "repos_url": "https://api.github.com/users/zhangxiubo/repos", "events_url": "https://api.github.com/users/zhangxiubo/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangxiubo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-15T22:29:16Z", "updated_at": "2020-03-16T12:00:10Z", "closed_at": "2020-03-16T12:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running tests written with SeleniumBase inside a Docker container, the user may want to load extensions when launching the Chrome driver. The logic for determining which options to be supplied to the Chrome driver when launching the browser is controlled by `core/browser_launcher.py`; for Linux, the segment relevant to this issue is:\r\n```\r\n    if headless:\r\n        if not proxy_auth:\r\n            # Headless Chrome doesn't support extensions, which are\r\n            # required when using a proxy server that has authentication.\r\n            # Instead, base_case.py will use PyVirtualDisplay when not\r\n            # using Chrome's built-in headless mode. See link for details:\r\n            # https://bugs.chromium.org/p/chromium/issues/detail?id=706008\r\n            chrome_options.add_argument(\"--headless\")\r\n        chrome_options.add_argument(\"--disable-gpu\")\r\n        if \"linux\" in PLATFORM:\r\n            chrome_options.add_argument(\"--no-sandbox\")\r\n    if \"linux\" in PLATFORM:\r\n        chrome_options.add_argument(\"--disable-dev-shm-usage\")\r\n```\r\n\r\nSince `headless` mode does not support extensions, one has to enable `--gui` to turn off headless mode; however, it seems Chrome inside a docker container will not launch its GUI without specifying the `--no-sandbox` (and sometimes the `--disable-gpu`) option, which is only supplied to the driver when headless mode is turned on.\r\n\r\nThis means that SeleniumBase tests launched inside a Docker container cannot benefit from extensions.\r\n\r\nPerhaps additional options can be added to allow the user to manipulate these settings?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/508", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/508/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/508/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/508", "id": 580481546, "node_id": "MDU6SXNzdWU1ODA0ODE1NDY=", "number": 508, "title": "Timeout in switch_to_window method doesn't do anything when the window page doesn't load", "user": {"login": "createNull", "id": 23474238, "node_id": "MDQ6VXNlcjIzNDc0MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/23474238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/createNull", "html_url": "https://github.com/createNull", "followers_url": "https://api.github.com/users/createNull/followers", "following_url": "https://api.github.com/users/createNull/following{/other_user}", "gists_url": "https://api.github.com/users/createNull/gists{/gist_id}", "starred_url": "https://api.github.com/users/createNull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/createNull/subscriptions", "organizations_url": "https://api.github.com/users/createNull/orgs", "repos_url": "https://api.github.com/users/createNull/repos", "events_url": "https://api.github.com/users/createNull/events{/privacy}", "received_events_url": "https://api.github.com/users/createNull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-13T09:39:24Z", "updated_at": "2020-03-13T20:16:05Z", "closed_at": "2020-03-13T20:16:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I press a button which will open a new tab in my browser. That new tab will have a long page load time and even if I set timeout=0 to switch_to_window method and try to execute a script in order to stop loading that page, my automated script will still wait for the new page to load.\r\n\r\nIs there any other way I could stop that page from loading? \r\nWorth mentioning that I also need to check for some elements in the new page, so the switch is necessary", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/503", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/503/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/503/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/503", "id": 566910676, "node_id": "MDU6SXNzdWU1NjY5MTA2NzY=", "number": 503, "title": "How does MySQL log in using a non-default port?", "user": {"login": "tcw0nw", "id": 3793852, "node_id": "MDQ6VXNlcjM3OTM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcw0nw", "html_url": "https://github.com/tcw0nw", "followers_url": "https://api.github.com/users/tcw0nw/followers", "following_url": "https://api.github.com/users/tcw0nw/following{/other_user}", "gists_url": "https://api.github.com/users/tcw0nw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcw0nw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcw0nw/subscriptions", "organizations_url": "https://api.github.com/users/tcw0nw/orgs", "repos_url": "https://api.github.com/users/tcw0nw/repos", "events_url": "https://api.github.com/users/tcw0nw/events{/privacy}", "received_events_url": "https://api.github.com/users/tcw0nw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-02-18T13:58:00Z", "updated_at": "2020-02-19T14:44:18Z", "closed_at": "2020-02-19T14:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "APP_CREDS = {\r\n\r\n    Apps.TESTCASE_REPOSITORY: {\r\n        TEST: (\r\n            settings.DB_HOST,\r\n            settings.DB_USERNAME,\r\n            settings.DB_PASSWORD,\r\n            settings.DB_SCHEMA)\r\n    },", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/501", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/501/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/501/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/501", "id": 566169294, "node_id": "MDU6SXNzdWU1NjYxNjkyOTQ=", "number": 501, "title": "when the tested page has Chinese words, convert seleniumbase script has an error", "user": {"login": "tkspeking", "id": 47775353, "node_id": "MDQ6VXNlcjQ3Nzc1MzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/47775353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkspeking", "html_url": "https://github.com/tkspeking", "followers_url": "https://api.github.com/users/tkspeking/followers", "following_url": "https://api.github.com/users/tkspeking/following{/other_user}", "gists_url": "https://api.github.com/users/tkspeking/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkspeking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkspeking/subscriptions", "organizations_url": "https://api.github.com/users/tkspeking/orgs", "repos_url": "https://api.github.com/users/tkspeking/repos", "events_url": "https://api.github.com/users/tkspeking/events{/privacy}", "received_events_url": "https://api.github.com/users/tkspeking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-17T09:33:39Z", "updated_at": "2020-02-18T07:25:24Z", "closed_at": "2020-02-18T06:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "take look:\r\n![image](https://user-images.githubusercontent.com/47775353/74640762-0e560f80-51ab-11ea-910a-c9ca1b27f2d3.png)\r\n\r\nerror info:UnicodeDecodeError: 'gbk' codec can't decode byte 0x98 in position 1413: illegal multibyte sequence\r\n\r\nwhen I edit the code 53 line in convert_ide.py like\r\nf = open(webdriver_python_file, 'r') ->     f = open(webdriver_python_file, 'r', encoding='utf-8'), convert succefully, but Chinese word is garbage characters", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/500", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/500/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/500/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/500", "id": 566010722, "node_id": "MDU6SXNzdWU1NjYwMTA3MjI=", "number": 500, "title": "where is testcaserepository.sql file\uff0cthe page is 404", "user": {"login": "tkspeking", "id": 47775353, "node_id": "MDQ6VXNlcjQ3Nzc1MzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/47775353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkspeking", "html_url": "https://github.com/tkspeking", "followers_url": "https://api.github.com/users/tkspeking/followers", "following_url": "https://api.github.com/users/tkspeking/following{/other_user}", "gists_url": "https://api.github.com/users/tkspeking/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkspeking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkspeking/subscriptions", "organizations_url": "https://api.github.com/users/tkspeking/orgs", "repos_url": "https://api.github.com/users/tkspeking/repos", "events_url": "https://api.github.com/users/tkspeking/events{/privacy}", "received_events_url": "https://api.github.com/users/tkspeking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-17T01:38:48Z", "updated_at": "2020-02-18T07:25:57Z", "closed_at": "2020-02-17T02:53:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/499", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/499/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/499/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/499", "id": 564591822, "node_id": "MDU6SXNzdWU1NjQ1OTE4MjI=", "number": 499, "title": "Cannot run tests with selenium grid", "user": {"login": "PeterNgTr", "id": 7845001, "node_id": "MDQ6VXNlcjc4NDUwMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7845001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterNgTr", "html_url": "https://github.com/PeterNgTr", "followers_url": "https://api.github.com/users/PeterNgTr/followers", "following_url": "https://api.github.com/users/PeterNgTr/following{/other_user}", "gists_url": "https://api.github.com/users/PeterNgTr/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterNgTr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterNgTr/subscriptions", "organizations_url": "https://api.github.com/users/PeterNgTr/orgs", "repos_url": "https://api.github.com/users/PeterNgTr/repos", "events_url": "https://api.github.com/users/PeterNgTr/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterNgTr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-13T10:41:08Z", "updated_at": "2020-02-18T08:42:59Z", "closed_at": "2020-02-17T11:00:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following error when trying to run tests with selenium grid. I used the Zalenium, it's up and running.\r\n\r\n```sh\r\n_______________________________________________________________________________________________________________________________ AutoComplete.test_C11827_Autocomplete_Catalog_ID _______________________________________________________________________________________________________________________________\r\ntests/commons/base.py:129: in setUp\r\n    super(BaseTestCase, self).setUp()\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:4427: in setUp\r\n    d_p_r=self.__device_pixel_ratio)\r\nvenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:1491: in get_new_driver\r\n    device_pixel_ratio=d_p_r)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:376: in get_driver\r\n    device_width, device_height, device_pixel_ratio)\r\nvenv/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:409: in get_remote_driver\r\n    desired_capabilities=capabilities)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\r\n    self.start_session(capabilities, browser_profile)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\r\n    response = self.execute(Command.NEW_SESSION, parameters)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:319: in execute\r\n    response = self.command_executor.execute(driver_command, params)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py:374: in execute\r\n    return self._request(command_info[0], url, body=data)\r\nvenv/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py:402: in _request\r\n    resp = http.request(method, url, body=body, headers=headers)\r\nvenv/lib/python3.7/site-packages/urllib3/request.py:72: in request\r\n    **urlopen_kw)\r\nvenv/lib/python3.7/site-packages/urllib3/request.py:150: in request_encode_body\r\n    return self.urlopen(method, url, **extra_kw)\r\nvenv/lib/python3.7/site-packages/urllib3/poolmanager.py:314: in urlopen\r\n    u = parse_url(url)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nurl = 'http://127.0.0.1 --port=4444:4444/wd/hub/session'\r\n\r\n    def parse_url(url):\r\n        \"\"\"\r\n        Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is\r\n        performed to parse incomplete urls. Fields not provided will be None.\r\n        This parser is RFC 3986 compliant.\r\n    \r\n        :param str url: URL to parse into a :class:`.Url` namedtuple.\r\n    \r\n        Partly backwards-compatible with :mod:`urlparse`.\r\n    \r\n        Example::\r\n    \r\n            >>> parse_url('http://google.com/mail/')\r\n            Url(scheme='http', host='google.com', port=None, path='/mail/', ...)\r\n            >>> parse_url('google.com:80')\r\n            Url(scheme=None, host='google.com', port=80, path=None, ...)\r\n            >>> parse_url('/foo?bar')\r\n            Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)\r\n        \"\"\"\r\n        if not url:\r\n            # Empty\r\n            return Url()\r\n    \r\n        is_string = not isinstance(url, six.binary_type)\r\n    \r\n        # RFC 3986 doesn't like URLs that have a host but don't start\r\n        # with a scheme and we support URLs like that so we need to\r\n        # detect that problem and add an empty scheme indication.\r\n        # We don't get hurt on path-only URLs here as it's stripped\r\n        # off and given an empty scheme anyways.\r\n        if not SCHEME_REGEX.search(url):\r\n            url = \"//\" + url\r\n    \r\n        def idna_encode(name):\r\n            if name and any([ord(x) > 128 for x in name]):\r\n                try:\r\n                    import idna\r\n                except ImportError:\r\n                    raise LocationParseError(\"Unable to parse URL without the 'idna' module\")\r\n                try:\r\n                    return idna.encode(name.lower(), strict=True, std3_rules=True)\r\n                except idna.IDNAError:\r\n                    raise LocationParseError(u\"Name '%s' is not a valid IDNA label\" % name)\r\n            return name\r\n    \r\n        try:\r\n            split_iri = misc.IRI_MATCHER.match(compat.to_str(url)).groupdict()\r\n            iri_ref = rfc3986.IRIReference(\r\n                split_iri['scheme'], split_iri['authority'],\r\n                _encode_invalid_chars(split_iri['path'], PATH_CHARS),\r\n                _encode_invalid_chars(split_iri['query'], QUERY_CHARS),\r\n                _encode_invalid_chars(split_iri['fragment'], FRAGMENT_CHARS)\r\n            )\r\n            has_authority = iri_ref.authority is not None\r\n            uri_ref = iri_ref.encode(idna_encoder=idna_encode)\r\n        except (ValueError, RFC3986Exception):\r\n            return six.raise_from(LocationParseError(url), None)\r\n    \r\n        # rfc3986 strips the authority if it's invalid\r\n        if has_authority and uri_ref.authority is None:\r\n>           raise LocationParseError(url)\r\nE           urllib3.exceptions.LocationParseError: Failed to parse: http://127.0.0.1 --port=4444:4444/wd/hub/session\r\n\r\nvenv/lib/python3.7/site-packages/urllib3/util/url.py:234: LocationParseError\r\n````\r\n\r\nor maybe `urllib3` broke something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/498", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/498/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/498/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/498", "id": 564528701, "node_id": "MDU6SXNzdWU1NjQ1Mjg3MDE=", "number": 498, "title": "Cannot run my_first_test.py - ImportError while importing test module ('Requests' ?)", "user": {"login": "MaksimZinovev", "id": 53397443, "node_id": "MDQ6VXNlcjUzMzk3NDQz", "avatar_url": "https://avatars1.githubusercontent.com/u/53397443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaksimZinovev", "html_url": "https://github.com/MaksimZinovev", "followers_url": "https://api.github.com/users/MaksimZinovev/followers", "following_url": "https://api.github.com/users/MaksimZinovev/following{/other_user}", "gists_url": "https://api.github.com/users/MaksimZinovev/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaksimZinovev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaksimZinovev/subscriptions", "organizations_url": "https://api.github.com/users/MaksimZinovev/orgs", "repos_url": "https://api.github.com/users/MaksimZinovev/repos", "events_url": "https://api.github.com/users/MaksimZinovev/events{/privacy}", "received_events_url": "https://api.github.com/users/MaksimZinovev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-13T08:51:20Z", "updated_at": "2020-02-14T08:55:15Z", "closed_at": "2020-02-14T08:54:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am new to Python and test automation. I learn how to use pytest for web ui testin. Recently  found SeleniumBase  framework and wanted to give it a try. I followed your installation instructions but  keep getting this error:\r\n\r\n`====================================== ERRORS ======================================\r\n____________________ ERROR collecting examples/my_first_test.py ____________________\r\nImportError while importing test module '/Users/maksim/repos/seleniumbase/SeleniumBase/examples/my_first_test.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\nmy_first_test.py:1: in <module>\r\n    from seleniumbase import BaseCase\r\n../seleniumbase/__init__.py:1: in <module>\r\n    from seleniumbase.fixtures.base_case import BaseCase  # noqa\r\n../seleniumbase/fixtures/base_case.py:52: in <module>\r\n    from seleniumbase.core import tour_helper\r\n../seleniumbase/core/tour_helper.py:12: in <module>\r\n    from seleniumbase.fixtures import js_utils\r\n../seleniumbase/fixtures/js_utils.py:6: in <module>\r\n    import requests\r\nE   ModuleNotFoundError: No module named 'requests'\r\n!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!\r\n============================= 1 error in 0.66 seconds ==============================` \r\n\r\nI would really appreciate if you could help me to fix the problem \r\nThank you!\r\nMax\r\n\r\nPlease see terminal output (sorry, only 1000 lines available) attached and command history\r\n[history.txt](https://github.com/seleniumbase/SeleniumBase/files/4197266/history.txt)\r\n[iTerm2 Session 13 Feb 2020 at 7:18:33 pm.txt](https://github.com/seleniumbase/SeleniumBase/files/4197267/iTerm2.Session.13.Feb.2020.at.7.18.33.pm.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/494", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/494/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/494/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/494", "id": 558777714, "node_id": "MDU6SXNzdWU1NTg3Nzc3MTQ=", "number": 494, "title": "Allow URLS that start with \"://\" for the open() method", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-02T23:41:10Z", "updated_at": "2020-02-03T05:46:53Z", "closed_at": "2020-02-03T05:46:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Allow URLS that start with ``://`` for the ``open(URL)`` method\r\n\r\nIf you copy/paste a URL such as ``://google.com`` into a web browser, the browser automatically converts the URL to ``https://google.com``. But if you use the webdriver ``get(URL)`` method for URLs that start with ``://``, you'll get the following error:\r\n```\r\nselenium.common.exceptions.WebDriverException:\r\nMessage: unhandled inspector error:\r\n{\"code\":-32000,\"message\":\"Cannot navigate to invalid URL\"}\r\n```\r\nTo fix this, we'll make sure that the SeleniumBase ``open(URL)`` method (which wraps ``driver.get``) automatically adds the ``https`` to URLs that start with ``://`` to prevent the error.\r\nAs a bonus, you'll be able to make your Python code lines 5 characters shorter if they use the ``open(URL)`` method for ``https`` URLs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/492", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/492/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/492/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/492", "id": 556267601, "node_id": "MDU6SXNzdWU1NTYyNjc2MDE=", "number": 492, "title": "pytest plugin --port option conflicts with pytest-selenium plugin", "user": {"login": "nfk", "id": 662724, "node_id": "MDQ6VXNlcjY2MjcyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/662724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfk", "html_url": "https://github.com/nfk", "followers_url": "https://api.github.com/users/nfk/followers", "following_url": "https://api.github.com/users/nfk/following{/other_user}", "gists_url": "https://api.github.com/users/nfk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfk/subscriptions", "organizations_url": "https://api.github.com/users/nfk/orgs", "repos_url": "https://api.github.com/users/nfk/repos", "events_url": "https://api.github.com/users/nfk/events{/privacy}", "received_events_url": "https://api.github.com/users/nfk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-28T15:01:37Z", "updated_at": "2020-01-29T22:06:02Z", "closed_at": "2020-01-29T22:06:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In order to update a test base and to be able to run pytest without a virtual environment it should be great to have the ability to use both `seleniumbase` and `pytest-selenium` in same time.\r\n\r\nAfter installing seleniumbase I cannot use `pytest` due to the following error.\r\n```\r\nargparse.ArgumentError: argument --port: conflicting option string: --port\r\n```\r\n Can you rename some options? Or prefix it with sb?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/489", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/489/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/489/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/489", "id": 554218916, "node_id": "MDU6SXNzdWU1NTQyMTg5MTY=", "number": 489, "title": "--data=DATA  (Extra data to pass to tests. Use \"self.data\" in tests.)", "user": {"login": "tcw0nw", "id": 3793852, "node_id": "MDQ6VXNlcjM3OTM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcw0nw", "html_url": "https://github.com/tcw0nw", "followers_url": "https://api.github.com/users/tcw0nw/followers", "following_url": "https://api.github.com/users/tcw0nw/following{/other_user}", "gists_url": "https://api.github.com/users/tcw0nw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcw0nw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcw0nw/subscriptions", "organizations_url": "https://api.github.com/users/tcw0nw/orgs", "repos_url": "https://api.github.com/users/tcw0nw/repos", "events_url": "https://api.github.com/users/tcw0nw/events{/privacy}", "received_events_url": "https://api.github.com/users/tcw0nw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T15:11:47Z", "updated_at": "2020-04-22T04:17:04Z", "closed_at": "2020-01-24T16:12:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I use it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/486", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/486/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/486/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/486", "id": 552602549, "node_id": "MDU6SXNzdWU1NTI2MDI1NDk=", "number": 486, "title": "--log_path option does not take effect", "user": {"login": "cjydayang", "id": 24446099, "node_id": "MDQ6VXNlcjI0NDQ2MDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/24446099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjydayang", "html_url": "https://github.com/cjydayang", "followers_url": "https://api.github.com/users/cjydayang/followers", "following_url": "https://api.github.com/users/cjydayang/following{/other_user}", "gists_url": "https://api.github.com/users/cjydayang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjydayang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjydayang/subscriptions", "organizations_url": "https://api.github.com/users/cjydayang/orgs", "repos_url": "https://api.github.com/users/cjydayang/repos", "events_url": "https://api.github.com/users/cjydayang/events{/privacy}", "received_events_url": "https://api.github.com/users/cjydayang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-21T03:23:03Z", "updated_at": "2020-01-22T01:53:32Z", "closed_at": "2020-01-22T01:53:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\uff0c @mdmintz \uff1a\r\nI noticed this change in v1.34.24 \uff1a\r\nhttps://github.com/seleniumbase/SeleniumBase/commit/5c9694035203c47d9842e62d50ac3034bb6c7597\r\n sb_config.log_path = 'latest_logs/'  # (No longer editable!)\r\n\r\nis this means the --log_path option will not take effect\uff1fWhat is the reason for this change\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/484", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/484/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/484/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/484", "id": 551857672, "node_id": "MDU6SXNzdWU1NTE4NTc2NzI=", "number": 484, "title": "How do I use setup and teardown?", "user": {"login": "tcw0nw", "id": 3793852, "node_id": "MDQ6VXNlcjM3OTM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcw0nw", "html_url": "https://github.com/tcw0nw", "followers_url": "https://api.github.com/users/tcw0nw/followers", "following_url": "https://api.github.com/users/tcw0nw/following{/other_user}", "gists_url": "https://api.github.com/users/tcw0nw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcw0nw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcw0nw/subscriptions", "organizations_url": "https://api.github.com/users/tcw0nw/orgs", "repos_url": "https://api.github.com/users/tcw0nw/repos", "events_url": "https://api.github.com/users/tcw0nw/events{/privacy}", "received_events_url": "https://api.github.com/users/tcw0nw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-19T03:00:10Z", "updated_at": "2020-01-19T06:25:07Z", "closed_at": "2020-01-19T06:25:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use this framework. How do I use setup and teardown? Because I want to do something before the test starts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/481", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/481/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/481/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/481", "id": 551387922, "node_id": "MDU6SXNzdWU1NTEzODc5MjI=", "number": 481, "title": "select_option_by_text & Index() throws elementnotvisibleexception always", "user": {"login": "dineshKumar777", "id": 21097695, "node_id": "MDQ6VXNlcjIxMDk3Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/21097695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dineshKumar777", "html_url": "https://github.com/dineshKumar777", "followers_url": "https://api.github.com/users/dineshKumar777/followers", "following_url": "https://api.github.com/users/dineshKumar777/following{/other_user}", "gists_url": "https://api.github.com/users/dineshKumar777/gists{/gist_id}", "starred_url": "https://api.github.com/users/dineshKumar777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dineshKumar777/subscriptions", "organizations_url": "https://api.github.com/users/dineshKumar777/orgs", "repos_url": "https://api.github.com/users/dineshKumar777/repos", "events_url": "https://api.github.com/users/dineshKumar777/events{/privacy}", "received_events_url": "https://api.github.com/users/dineshKumar777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-01-17T12:28:07Z", "updated_at": "2020-01-18T10:56:27Z", "closed_at": "2020-01-18T10:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Always getting error as following for optionbytext as well as index call.\r\n\r\n`selenium.common.exceptions.ElementNotVisibleException: Message: Element {#id_contact} was not visible after 6 seconds!`\r\n\r\nI tried with different selector types but getting the same error. Am I missing something here?\r\n\r\n\r\n\r\nTarget page http://automationpractice.com/index.php?controller=contact\r\n\r\n``` HTML\r\n<div class=\"selector\" id=\"uniform-id_contact\" style=\"width: 266px;\">\r\n\t<span style=\"width: 256px; user-select: none;\">-- Choose --</span>\r\n\t\t<select id=\"id_contact\" class=\"form-control\" name=\"id_contact\">\r\n                        <option value=\"0\">-- Choose --</option>\r\n                        <option value=\"2\">Customer service</option>\r\n                        <option value=\"1\">Webmaster</option>\r\n        </select>\r\n</div>\r\n```\r\n\r\n``` python\r\ndef select_dropdown(self):\r\n\tself.click(\"#uniform-id_contact\") #opens dropdown menu. tried with and without this line\r\n\tself.select_option_by_text(\"#id_contact\", \"Webmaster\")\r\n```\r\n\r\n\r\n**Update**\r\nThis is happening for this particular website it seems. I tried the same method in https://materializecss.com/select.html. \r\nIt working there correctly by calling `self.select_option_by_text(\"select[class='browser-default']\", \"Option 1\")`\r\nNot sure why its not working in first site?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/478", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/478/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/478/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/478", "id": 550509592, "node_id": "MDU6SXNzdWU1NTA1MDk1OTI=", "number": 478, "title": "headless issue", "user": {"login": "wangrocky", "id": 6724040, "node_id": "MDQ6VXNlcjY3MjQwNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6724040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangrocky", "html_url": "https://github.com/wangrocky", "followers_url": "https://api.github.com/users/wangrocky/followers", "following_url": "https://api.github.com/users/wangrocky/following{/other_user}", "gists_url": "https://api.github.com/users/wangrocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangrocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangrocky/subscriptions", "organizations_url": "https://api.github.com/users/wangrocky/orgs", "repos_url": "https://api.github.com/users/wangrocky/repos", "events_url": "https://api.github.com/users/wangrocky/events{/privacy}", "received_events_url": "https://api.github.com/users/wangrocky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-16T00:47:11Z", "updated_at": "2020-01-22T14:28:02Z", "closed_at": "2020-01-22T14:28:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "seleniumbase testcases ran perfectly in normal way but error raised in the headless mode, \r\nthe command is : \r\n`pytest --headless --browser=chrome\uff08or firefox\uff09`\r\nthe error as below:\r\n```\r\n File \"c:\\python37\\lib\\traceback.py\", line 285, in line\r\nINTERNALERROR>     self._line = linecache.getline(self.filename, self.lineno).strip()\r\nINTERNALERROR>   File \"c:\\python37\\lib\\linecache.py\", line 18, in getline\r\nINTERNALERROR>     lines = getlines(filename, module_globals)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\linecache.py\", line 49, in getlines\r\nINTERNALERROR>     return updatecache(filename, module_globals)\r\nINTERNALERROR>   File \"c:\\python37\\lib\\linecache.py\", line 141, in updatecache\r\nINTERNALERROR>     lines = fp.readlines()\r\nINTERNALERROR>   File \"c:\\python37\\lib\\codecs.py\", line 322, in decode\r\nINTERNALERROR>     (result, consumed) = self._buffer_decode(data, self.errors, final)\r\nINTERNALERROR> UnicodeDecodeError: 'utf-8' codec can't decode byte 0xcd in position 1472: invalid continuation byte\r\n```\r\ni tried the google and used some encoding&decoding way but it did not work, could u please check this issue which blocked me such a long time.. thanks a lot~~ ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/476", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/476/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/476/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/476", "id": 549589292, "node_id": "MDU6SXNzdWU1NDk1ODkyOTI=", "number": 476, "title": "Need help in implementing in POM", "user": {"login": "dineshKumar777", "id": 21097695, "node_id": "MDQ6VXNlcjIxMDk3Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/21097695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dineshKumar777", "html_url": "https://github.com/dineshKumar777", "followers_url": "https://api.github.com/users/dineshKumar777/followers", "following_url": "https://api.github.com/users/dineshKumar777/following{/other_user}", "gists_url": "https://api.github.com/users/dineshKumar777/gists{/gist_id}", "starred_url": "https://api.github.com/users/dineshKumar777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dineshKumar777/subscriptions", "organizations_url": "https://api.github.com/users/dineshKumar777/orgs", "repos_url": "https://api.github.com/users/dineshKumar777/repos", "events_url": "https://api.github.com/users/dineshKumar777/events{/privacy}", "received_events_url": "https://api.github.com/users/dineshKumar777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-14T14:04:27Z", "updated_at": "2020-01-15T14:54:44Z", "closed_at": "2020-01-15T14:54:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use SeleniumBase as base framework and extend test solution for our project as per need. \r\nFacing few issues in achieving that goal, mostly because I am new to python and trouble implementing whatever we did so far in Java and c#\r\n\r\nMain requirement is Page Object Model.\r\nI saw your example on POM in seleniumbase (examples/boilerplatest/Page_objects.py) which is in following structure\r\n\r\n - Project \t\r\n\t - Locators for all pages\r\n\t - Test \r\n\r\nWhat I am trying to achieve is in following structure\r\n\r\n - Project\r\n\t - Pages (contains locators and common functionalities)\r\n\t\t - HomePage\r\n\t\t - LoginPage\r\n\t- Tests\r\n\t\t- HomepageTest\r\n\t\t- LoginpageTest\r\n\r\n**Code I tried\r\nPages/Homepage.py**\r\n``` python\r\n\r\nimport time  \r\n  \r\nfrom seleniumbase import BaseCase  \r\n  \r\n  \r\nclass DuckDuckGoSearchPage(BaseCase):  \r\n  \r\n    URL = \"https://www.duckduckgo.com\"  \r\n  \r\n  # LOCATORS (default css locators)  \r\n  SEARCH_INPUT = \"input[name='q']\"  \r\n  \r\n  def load(self):  \r\n        self.open(self.URL)  \r\n  \r\n  def search(self, phrase):  \r\n        self.update_text('input[name=\"q\"]', phrase + '\\n')  \r\n        time.sleep(4)\r\n```\r\n**Tests/Homepage_test.py**\r\n```python\r\nfrom seleniumbase import BaseCase  \r\nfrom Pages.searchPage import DuckDuckGoSearchPage  \r\n  \r\n  \r\nclass HomepageTest(BaseCase):  \r\n    def test_simple_search(self):  \r\n        PHRASE = 'seleniumbase'  \r\n\tsearchengine = DuckDuckGoSearchPage(BaseCase)  \r\n        searchengine.load()  \r\n        searchengine.search(PHRASE)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/475", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/475/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/475/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/475", "id": 548867102, "node_id": "MDU6SXNzdWU1NDg4NjcxMDI=", "number": 475, "title": "Browser window not closing for 'test_timeout_failure' example", "user": {"login": "dineshKumar777", "id": 21097695, "node_id": "MDQ6VXNlcjIxMDk3Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/21097695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dineshKumar777", "html_url": "https://github.com/dineshKumar777", "followers_url": "https://api.github.com/users/dineshKumar777/followers", "following_url": "https://api.github.com/users/dineshKumar777/following{/other_user}", "gists_url": "https://api.github.com/users/dineshKumar777/gists{/gist_id}", "starred_url": "https://api.github.com/users/dineshKumar777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dineshKumar777/subscriptions", "organizations_url": "https://api.github.com/users/dineshKumar777/orgs", "repos_url": "https://api.github.com/users/dineshKumar777/repos", "events_url": "https://api.github.com/users/dineshKumar777/events{/privacy}", "received_events_url": "https://api.github.com/users/dineshKumar777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-13T11:23:52Z", "updated_at": "2020-01-15T15:42:40Z", "closed_at": "2020-01-15T15:42:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this awesome test framework.\r\nWhen checking out, noticed while running 'test_timeout_failure' example from timeout_test.py file, browser window is not closing after timeout.\r\nUsually driver has to quit even on exceptions or timeout, right? or is this an intentional behavior!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/470", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/470/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/470/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/470", "id": 547835197, "node_id": "MDU6SXNzdWU1NDc4MzUxOTc=", "number": 470, "title": "Seeing unwanted logs on Windows (\"DevTools listening on...\")", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T02:53:47Z", "updated_at": "2020-01-10T03:04:18Z", "closed_at": "2020-01-10T03:04:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Seeing unwanted logs on Windows:\r\n* \"``DevTools listening on ws://127.0.0.1 ...``\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/469", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/469/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/469/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/469", "id": 547832359, "node_id": "MDU6SXNzdWU1NDc4MzIzNTk=", "number": 469, "title": "How to customize nosetests generated html report", "user": {"login": "tcw0nw", "id": 3793852, "node_id": "MDQ6VXNlcjM3OTM4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3793852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcw0nw", "html_url": "https://github.com/tcw0nw", "followers_url": "https://api.github.com/users/tcw0nw/followers", "following_url": "https://api.github.com/users/tcw0nw/following{/other_user}", "gists_url": "https://api.github.com/users/tcw0nw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcw0nw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcw0nw/subscriptions", "organizations_url": "https://api.github.com/users/tcw0nw/orgs", "repos_url": "https://api.github.com/users/tcw0nw/repos", "events_url": "https://api.github.com/users/tcw0nw/events{/privacy}", "received_events_url": "https://api.github.com/users/tcw0nw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-10T02:41:35Z", "updated_at": "2020-01-10T03:29:36Z", "closed_at": "2020-01-10T03:24:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to customize nosetests generated html report\uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/468", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/468/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/468/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/468", "id": 547379328, "node_id": "MDU6SXNzdWU1NDczNzkzMjg=", "number": 468, "title": "A technical question", "user": {"login": "LucasDurian", "id": 33101891, "node_id": "MDQ6VXNlcjMzMTAxODkx", "avatar_url": "https://avatars2.githubusercontent.com/u/33101891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasDurian", "html_url": "https://github.com/LucasDurian", "followers_url": "https://api.github.com/users/LucasDurian/followers", "following_url": "https://api.github.com/users/LucasDurian/following{/other_user}", "gists_url": "https://api.github.com/users/LucasDurian/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasDurian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasDurian/subscriptions", "organizations_url": "https://api.github.com/users/LucasDurian/orgs", "repos_url": "https://api.github.com/users/LucasDurian/repos", "events_url": "https://api.github.com/users/LucasDurian/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasDurian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-09T10:12:50Z", "updated_at": "2020-01-10T01:42:22Z", "closed_at": "2020-01-10T01:42:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "As we all known, the webdriver should fit our browser version, I tried to set the path of a chrome_webdriver that was created by the command \"sleleniumbase install chromedirver\" , however it doesn`t work. I don`t why, could you please tell me the reason.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/466", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/466/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/466/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/466", "id": 547194833, "node_id": "MDU6SXNzdWU1NDcxOTQ4MzM=", "number": 466, "title": "Prevent unused log folders from being created", "user": {"login": "mdmintz", "id": 6788579, "node_id": "MDQ6VXNlcjY3ODg1Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdmintz", "html_url": "https://github.com/mdmintz", "followers_url": "https://api.github.com/users/mdmintz/followers", "following_url": "https://api.github.com/users/mdmintz/following{/other_user}", "gists_url": "https://api.github.com/users/mdmintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdmintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdmintz/subscriptions", "organizations_url": "https://api.github.com/users/mdmintz/orgs", "repos_url": "https://api.github.com/users/mdmintz/repos", "events_url": "https://api.github.com/users/mdmintz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdmintz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T01:25:17Z", "updated_at": "2020-01-09T01:37:41Z", "closed_at": "2020-01-09T01:37:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are log folders getting created in the ``latest_logs`` folder that aren't always used. Log folders should only be created if log files are going to be put in there. This will prevent logs from getting too messy. Logs are expected when a test fails, when a run command adds ``--save-screenshot``, and when a test calls a method that puts files into the log folder. If ``--archive-logs`` is set, the log files from ``latest_logs`` will be moved to the ``archived_logs`` folder at the start of the next test run (otherwise they will be deleted to save space).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/464", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/464/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/464/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/464", "id": 546328655, "node_id": "MDU6SXNzdWU1NDYzMjg2NTU=", "number": 464, "title": "Implement a command line to open browser with an incognito window", "user": {"login": "denis-coelho-qamm", "id": 58775700, "node_id": "MDQ6VXNlcjU4Nzc1NzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/58775700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denis-coelho-qamm", "html_url": "https://github.com/denis-coelho-qamm", "followers_url": "https://api.github.com/users/denis-coelho-qamm/followers", "following_url": "https://api.github.com/users/denis-coelho-qamm/following{/other_user}", "gists_url": "https://api.github.com/users/denis-coelho-qamm/gists{/gist_id}", "starred_url": "https://api.github.com/users/denis-coelho-qamm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denis-coelho-qamm/subscriptions", "organizations_url": "https://api.github.com/users/denis-coelho-qamm/orgs", "repos_url": "https://api.github.com/users/denis-coelho-qamm/repos", "events_url": "https://api.github.com/users/denis-coelho-qamm/events{/privacy}", "received_events_url": "https://api.github.com/users/denis-coelho-qamm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-07T14:55:14Z", "updated_at": "2020-01-08T04:55:09Z", "closed_at": "2020-01-08T04:55:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "In order to run the tests in an anonymous window, a command line with this option will benefit testers and add more value to seleniumbase.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/458", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/458/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/458/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/458", "id": 543840540, "node_id": "MDU6SXNzdWU1NDM4NDA1NDA=", "number": 458, "title": "Nested cap_file options don't work", "user": {"login": "piotrkochan", "id": 5632761, "node_id": "MDQ6VXNlcjU2MzI3NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5632761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotrkochan", "html_url": "https://github.com/piotrkochan", "followers_url": "https://api.github.com/users/piotrkochan/followers", "following_url": "https://api.github.com/users/piotrkochan/following{/other_user}", "gists_url": "https://api.github.com/users/piotrkochan/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotrkochan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotrkochan/subscriptions", "organizations_url": "https://api.github.com/users/piotrkochan/orgs", "repos_url": "https://api.github.com/users/piotrkochan/repos", "events_url": "https://api.github.com/users/piotrkochan/events{/privacy}", "received_events_url": "https://api.github.com/users/piotrkochan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T11:05:56Z", "updated_at": "2019-12-31T22:59:35Z", "closed_at": "2019-12-31T22:59:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "my_cap.py:\r\n```\r\ndesired_cap = {\r\n    \"browserName\": \"opera\",\r\n    \"version\": \"46.0\",\r\n    \"enableVNC\": True,\r\n    \"enableVideo\": False,\r\n    \"operaOptions\": {\"binary\": \"/usr/bin/opera\"}\r\n}\r\n```\r\n`capabilities_parser.py` produces:\r\n\r\n```\r\n{'browserName': 'opera', 'version': '46.0', 'enableVNC': True, 'enableVideo': False, 'operaOptions\": {\"binary': '/usr/bin/opera'} <- note missing } at the end\r\n```\r\nOther way:\r\n```\r\ndesired_cap = {\r\n    \"browserName\": \"opera\",\r\n    \"version\": \"46.0\",\r\n    \"enableVNC\": True,\r\n    \"enableVideo\": False,\r\n    \"operaOptions\": {\r\n        \"binary\": \"/usr/bin/opera\"\r\n    }\r\n}\r\n```\r\nresult:\r\n```{'browserName': 'opera', 'version': '46.0', 'enableVNC': True, 'enableVideo': False, 'binary': '/usr/bin/opera'} <- operaOptions are completely ignored```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/457", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/457/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/457/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/457", "id": 543814600, "node_id": "MDU6SXNzdWU1NDM4MTQ2MDA=", "number": 457, "title": "pytest: error: unrecognized arguments: --mobile", "user": {"login": "lgrytdwtla", "id": 15101455, "node_id": "MDQ6VXNlcjE1MTAxNDU1", "avatar_url": "https://avatars1.githubusercontent.com/u/15101455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgrytdwtla", "html_url": "https://github.com/lgrytdwtla", "followers_url": "https://api.github.com/users/lgrytdwtla/followers", "following_url": "https://api.github.com/users/lgrytdwtla/following{/other_user}", "gists_url": "https://api.github.com/users/lgrytdwtla/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgrytdwtla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgrytdwtla/subscriptions", "organizations_url": "https://api.github.com/users/lgrytdwtla/orgs", "repos_url": "https://api.github.com/users/lgrytdwtla/repos", "events_url": "https://api.github.com/users/lgrytdwtla/events{/privacy}", "received_events_url": "https://api.github.com/users/lgrytdwtla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T09:41:48Z", "updated_at": "2019-12-31T01:28:06Z", "closed_at": "2019-12-31T01:28:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am studying the examples, when i tried to run the command \"pytest test_swag_labs.py --mobile\" on command line,i got an error:\r\n![image](https://user-images.githubusercontent.com/15101455/71576222-db888700-2b2a-11ea-9267-d4406990cc30.png)\r\nbut i run this file with \"--mobile\" parameter in pycharm,it can run normally.why is this?please help me.\r\n![image](https://user-images.githubusercontent.com/15101455/71576307-2aceb780-2b2b-11ea-8985-ba4accbda2e6.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/456", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/456/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/456/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/456", "id": 543794571, "node_id": "MDU6SXNzdWU1NDM3OTQ1NzE=", "number": 456, "title": "May I use it together with selniumgrid", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-30T08:30:51Z", "updated_at": "2020-01-02T01:54:25Z", "closed_at": "2019-12-31T22:57:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the increase of cases, a single machine can't meet the daily version iteration speed, so it needs to be executed in parallel by multiple machines. There is no good method at present, so I don't know whether seleniumgrid can be used", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/448", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/448/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/448/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/448", "id": 538374802, "node_id": "MDU6SXNzdWU1MzgzNzQ4MDI=", "number": 448, "title": "Multiple --data command line arguments", "user": {"login": "molinacarlos", "id": 20499477, "node_id": "MDQ6VXNlcjIwNDk5NDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/20499477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/molinacarlos", "html_url": "https://github.com/molinacarlos", "followers_url": "https://api.github.com/users/molinacarlos/followers", "following_url": "https://api.github.com/users/molinacarlos/following{/other_user}", "gists_url": "https://api.github.com/users/molinacarlos/gists{/gist_id}", "starred_url": "https://api.github.com/users/molinacarlos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/molinacarlos/subscriptions", "organizations_url": "https://api.github.com/users/molinacarlos/orgs", "repos_url": "https://api.github.com/users/molinacarlos/repos", "events_url": "https://api.github.com/users/molinacarlos/events{/privacy}", "received_events_url": "https://api.github.com/users/molinacarlos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-16T12:13:32Z", "updated_at": "2020-04-22T04:15:17Z", "closed_at": "2019-12-16T17:44:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings !\r\n\r\nIs there a way to \"pass\" 3 custom command line arguments to a test case?\r\nRight now, I'm building a complex test case, and sometimes I need to pass multiple custom command line arguments. I know that --data=DATA exists, but I need to pass --data multiple times on same invocations\r\n\r\nThanks a lot for this great framework :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/445", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/445/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/445/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/445", "id": 535667260, "node_id": "MDU6SXNzdWU1MzU2NjcyNjA=", "number": 445, "title": "BrowserStack error - The property '#/' contains additional properties [\"useAutomationExtension\"] outside of the schema", "user": {"login": "piotrkochan", "id": 5632761, "node_id": "MDQ6VXNlcjU2MzI3NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5632761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piotrkochan", "html_url": "https://github.com/piotrkochan", "followers_url": "https://api.github.com/users/piotrkochan/followers", "following_url": "https://api.github.com/users/piotrkochan/following{/other_user}", "gists_url": "https://api.github.com/users/piotrkochan/gists{/gist_id}", "starred_url": "https://api.github.com/users/piotrkochan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piotrkochan/subscriptions", "organizations_url": "https://api.github.com/users/piotrkochan/orgs", "repos_url": "https://api.github.com/users/piotrkochan/repos", "events_url": "https://api.github.com/users/piotrkochan/events{/privacy}", "received_events_url": "https://api.github.com/users/piotrkochan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-10T11:27:10Z", "updated_at": "2020-04-22T04:33:37Z", "closed_at": "2019-12-11T07:44:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Command:\r\n```\r\npytest tests/my_test.py --browser=chrome --server=xxx:secret@hub.browserstack.com --port=80\r\n```\r\n\r\nResult:\r\n```\r\n=============================================================================================================================== FAILURES ===============================================================================================================================\r\n____________________________________________________________________________________________________________________ TestSymbolBox.test_symbol_box _____________________________________________________________________________________________________________________\r\nmyenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:4236: in setUp\r\n    extension_dir=self.extension_dir)\r\nmyenv/lib/python3.7/site-packages/seleniumbase/fixtures/base_case.py:1434: in get_new_driver\r\n    extension_dir=extension_dir)\r\nmyenv/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:339: in get_driver\r\n    extension_zip, extension_dir)\r\nmyenv/lib/python3.7/site-packages/seleniumbase/core/browser_launcher.py:368: in get_remote_driver\r\n    desired_capabilities=capabilities)\r\nmyenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\r\n    self.start_session(capabilities, browser_profile)\r\nmyenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\r\n    response = self.execute(Command.NEW_SESSION, parameters)\r\nmyenv/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:321: in execute\r\n    self.error_handler.check_response(response)\r\n\r\n.....................\r\n\r\n>       raise exception_class(message, screen, stacktrace)\r\nE       selenium.common.exceptions.WebDriverException: Message: The property '#/' contains additional properties [\"useAutomationExtension\"] outside of the schema when none are allowed in chromeOptions\r\n\r\nmyenv/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py:242: WebDriverException\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/434", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/434/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/434/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/434", "id": 529742316, "node_id": "MDU6SXNzdWU1Mjk3NDIzMTY=", "number": 434, "title": "It is not recommended to close the browser every time a testcase is executed", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-28T07:36:48Z", "updated_at": "2019-12-02T07:28:16Z", "closed_at": "2019-12-02T07:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I mentioned this requirement last time, but encapsulating all cases into functions in a testcase will be treated as a case, which is not a good feeling. This requirement is quite normal, so I suggest you optimize it,thx\r\n\r\nThe login area is too time-consuming, and our project has increased intelligent validation to limit the number of logins, which can be time-consuming once the use cases multiply\r\n\r\nOr can you give me directions, where to change the source code, I try to change to see", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/433", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/433/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/433/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/433", "id": 529604144, "node_id": "MDU6SXNzdWU1Mjk2MDQxNDQ=", "number": 433, "title": "Enhancement: Support EventFiringWebDrivers with custom listeners", "user": {"login": "symonk", "id": 17887843, "node_id": "MDQ6VXNlcjE3ODg3ODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/17887843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symonk", "html_url": "https://github.com/symonk", "followers_url": "https://api.github.com/users/symonk/followers", "following_url": "https://api.github.com/users/symonk/following{/other_user}", "gists_url": "https://api.github.com/users/symonk/gists{/gist_id}", "starred_url": "https://api.github.com/users/symonk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symonk/subscriptions", "organizations_url": "https://api.github.com/users/symonk/orgs", "repos_url": "https://api.github.com/users/symonk/repos", "events_url": "https://api.github.com/users/symonk/events{/privacy}", "received_events_url": "https://api.github.com/users/symonk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-27T22:43:59Z", "updated_at": "2019-12-02T07:21:58Z", "closed_at": "2019-12-02T07:21:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Michael, I'd like to propose we integrate support for the EventFiringWebDriver of selenium, Initial thoughts are something like this:\r\n\r\n- Allow driver instantiation to be EventFiringWebDriver(sb.driver)\r\n- Allow a user to pass in their own AbstractEventListener subclass in order to register the listener to their event firing web driver\r\n\r\nWhy?\r\nIt enables users to handle logging and certain custom events based on selenium hooks/triggers, its very common for logging and other useful capabilities.\r\n\r\n\r\nHere is a very simple example that demonstrates the use cases:\r\n\r\n```\r\nimport unittest\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.support.events import EventFiringWebDriver\r\nfrom selenium.webdriver.support.events import AbstractEventListener\r\n\r\nclass ScreenshotListener(AbstractEventListener):\r\n    def on_exception(self, exception, driver):\r\n        screenshot_name = \"exception.png\"\r\n        driver.get_screenshot_as_file(screenshot_name)\r\n        print(\"Screenshot saved as '%s'\" % screenshot_name)\r\n\r\nclass TestDemo(unittest.TestCase):\r\n    def test_demo(self):\r\n\r\n        pjsdriver = webdriver.PhantomJS(\"phantomjs\")\r\n        d = EventFiringWebDriver(pjsdriver, ScreenshotListener())\r\n\r\n        d.get(\"http://www.google.com\")\r\n        d.find_element_by_css_selector(\"div.that-does-not-exist\")\r\n\r\nif __name__ == '__main__':\r\n        unittest.main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/431", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/431/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/431/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/431", "id": 529089267, "node_id": "MDU6SXNzdWU1MjkwODkyNjc=", "number": 431, "title": " \"get_pdf_text ()\", this method, when the PDF is Chinese, the obtained text is garbled.", "user": {"login": "Likangkang08", "id": 22090651, "node_id": "MDQ6VXNlcjIyMDkwNjUx", "avatar_url": "https://avatars0.githubusercontent.com/u/22090651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Likangkang08", "html_url": "https://github.com/Likangkang08", "followers_url": "https://api.github.com/users/Likangkang08/followers", "following_url": "https://api.github.com/users/Likangkang08/following{/other_user}", "gists_url": "https://api.github.com/users/Likangkang08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Likangkang08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Likangkang08/subscriptions", "organizations_url": "https://api.github.com/users/Likangkang08/orgs", "repos_url": "https://api.github.com/users/Likangkang08/repos", "events_url": "https://api.github.com/users/Likangkang08/events{/privacy}", "received_events_url": "https://api.github.com/users/Likangkang08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-11-27T03:18:24Z", "updated_at": "2019-11-29T08:06:26Z", "closed_at": "2019-11-29T08:06:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nFor example, this file\uff1a\r\n![CodingProblem](https://user-images.githubusercontent.com/22090651/69690599-595e0a80-1107-11ea-9319-b67bb4853ba3.png)\r\n![pdf](https://user-images.githubusercontent.com/22090651/69690604-5d8a2800-1107-11ea-8f58-73e9b6b81c0e.png)\r\n[unittest.pdf](https://github.com/seleniumbase/SeleniumBase/files/3894916/unittest.pdf)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/428", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/428/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/428/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/428", "id": 527718516, "node_id": "MDU6SXNzdWU1Mjc3MTg1MTY=", "number": 428, "title": "\u5173\u4e8e\uff0cBaseCase\u7c7b\uff0c\u6240\u6709\u65b9\u6cd5\u589e\u52a0\uff0celement\u53c2\u6570\u3002", "user": {"login": "Likangkang08", "id": 22090651, "node_id": "MDQ6VXNlcjIyMDkwNjUx", "avatar_url": "https://avatars0.githubusercontent.com/u/22090651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Likangkang08", "html_url": "https://github.com/Likangkang08", "followers_url": "https://api.github.com/users/Likangkang08/followers", "following_url": "https://api.github.com/users/Likangkang08/following{/other_user}", "gists_url": "https://api.github.com/users/Likangkang08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Likangkang08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Likangkang08/subscriptions", "organizations_url": "https://api.github.com/users/Likangkang08/orgs", "repos_url": "https://api.github.com/users/Likangkang08/repos", "events_url": "https://api.github.com/users/Likangkang08/events{/privacy}", "received_events_url": "https://api.github.com/users/Likangkang08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-24T15:59:07Z", "updated_at": "2020-04-22T04:22:54Z", "closed_at": "2019-11-26T12:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u60a8\u597d\uff0c\u6211\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5de5\u7a0b\u5e08\uff0c\u4e00\u76f4\u5728\u4f7f\u7528\u60a8\u7684\u6846\u67b6\uff0c\u76ee\u524d\u6d4b\u8bd5\u7684\u9879\u76ee\uff0cui\u4f7f\u7528\u7684\u662fiView\uff0c\u6240\u6709\u4f1a\u9047\u5230\u8fd9\u4e9b\u95ee\u9898\uff1a\r\n![image](https://user-images.githubusercontent.com/22090651/69497248-c27e2c00-0f15-11ea-9c30-35b4b4d2d4bb.png)\r\n\u4e00\u4e2aclass,\u5bf9\u5e94\u5f88\u591a\u5143\u7d20\uff0c\u5982\u679c\u4f7f\u7528 self.find_elements(\".ivu-btn.ivu-btn-primary\")\uff0c\u7136\u540e\u4ece\u5217\u8868\u53d6\u51fa\u5143\u7d20\u7684\u65f6\u5019\uff0c\u5c06\u4e0d\u80fd\u4f7f\u7528\u3002self.update_text()\u4e4b\u7c7b\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u53ea\u652f\u6301\uff0cselector\u3001by=By.CSS_SELECTOR\uff0c\u8bf7\u95ee\uff0cself.update_text(),\u7b49\u65b9\u6cd5\uff0c\u53ef\u4ee5\u52a0\u4e0a\uff0celement\u8fd9\u4e2a\u53c2\u6570\u5417\uff1f\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/424", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/424/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/424/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/424", "id": 526978333, "node_id": "MDU6SXNzdWU1MjY5NzgzMzM=", "number": 424, "title": "Launch browser How to set the domain of cookies", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-22T04:18:55Z", "updated_at": "2019-11-23T07:00:11Z", "closed_at": "2019-11-23T07:00:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "One problem is how to change this domain, I need to change it to kugo.cn, otherwise when I call the interface, I will report CSRF error, because it is a different domain name\r\n\r\nGrab the bag and look at the cookies:\r\n\r\nname: csrf   value: xxxxxx  domain: xx.kugo.cn   \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/423", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/423/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/423/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/423", "id": 526486255, "node_id": "MDU6SXNzdWU1MjY0ODYyNTU=", "number": 423, "title": "Questions about the click function", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-21T10:00:50Z", "updated_at": "2019-11-22T03:31:55Z", "closed_at": "2019-11-22T03:31:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "self.click_visible_elements(\"//*[contains(text(),'\u6dfb\u52a0\u661f\u6807')]\")  --ok\r\n\r\nself.click(\"//*[contains(text(),'\u6dfb\u52a0\u661f\u6807')]\")  --failed\r\n\r\nWhy not just change click to click visible elements, The above example fails to use click directly. Click_visible_elements is ok, It is recommended that click be changed to a click on a visible element.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/422", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/422/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/422/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/422", "id": 526340595, "node_id": "MDU6SXNzdWU1MjYzNDA1OTU=", "number": 422, "title": "How can I get the log output from the console", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-21T03:21:41Z", "updated_at": "2019-11-23T11:05:56Z", "closed_at": "2019-11-22T04:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes, some functions need to be coordinated with the development to realize the verification of functions. At this time, it is necessary to develop and print some logs in the console, and then I will get them\r\n\r\nself.open(\"file:///C:/Users/Administrator/Desktop/test.html\")\r\n\t\t\tself.click(\"#copy\")\r\n\t\t\tprint(self.driver.get_log(\"browser\")) \r\n\r\nThe console output log is not available in this manner\r\n\r\n\r\ntest.html:\r\n\r\n\r\n<script>\r\n\r\nconsole.log(\"start,..\");\r\n\r\n\r\nfunction copyText()\r\n{\r\ndocument.getElementById(\"field2\").value=document.getElementById(\"field1\").value;\r\nconsole.log(\"hello world\");\r\nconsole.log(\"hello world2\");\r\nconsole.log(\"hello world3\");\r\n}\r\n</script>\r\n</head>\r\n<body>\r\n\r\nField1: <input type=\"text\" id=\"field1\" value=\"Hello World!\"><br>\r\nField2: <input type=\"text\" id=\"field2\"><br><br>\r\n\r\n<button onclick=\"copyText()\" id=\"copy\">\u590d\u5236\u6587\u672c</button>\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/421", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/421/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/421/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/421", "id": 525778396, "node_id": "MDU6SXNzdWU1MjU3NzgzOTY=", "number": 421, "title": "How to achieve right click operation", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T12:39:28Z", "updated_at": "2019-11-21T20:50:27Z", "closed_at": "2019-11-21T20:50:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "el = self.find_element(self.TeamPage.folder_first_btn)\r\nActionChains(self.driver).context_click(el).perform()\r\n\r\nself.open(\"http://www.baidu.com/\")\r\n\t\t\tel = self.find_element(\"#kw\")\r\n\t\t\t# \u6267\u884c\u9f20\u6807\u52a8\u4f5c\r\n\t\t\tActionChains(self.driver).context_click(el).perform()\r\n\t\t\tself.sleep(20)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/419", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/419/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/419/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/419", "id": 525007168, "node_id": "MDU6SXNzdWU1MjUwMDcxNjg=", "number": 419, "title": "Strangely enough, one click works, double click fails", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-19T13:24:09Z", "updated_at": "2019-11-21T01:35:51Z", "closed_at": "2019-11-21T01:35:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nself.double_click(self.TeamPage.folder_first_btn)  --failed\r\n\r\nself.click(self.TeamPage.folder_first_btn) --ok\r\n\r\nTo quote the following wrong:\r\n\r\nMessage: (Session info: chrome=77.0.3865.120)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/417", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/417/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/417/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/417", "id": 523921211, "node_id": "MDU6SXNzdWU1MjM5MjEyMTE=", "number": 417, "title": "how to get the element value", "user": {"login": "cx4", "id": 41991295, "node_id": "MDQ6VXNlcjQxOTkxMjk1", "avatar_url": "https://avatars1.githubusercontent.com/u/41991295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cx4", "html_url": "https://github.com/cx4", "followers_url": "https://api.github.com/users/cx4/followers", "following_url": "https://api.github.com/users/cx4/following{/other_user}", "gists_url": "https://api.github.com/users/cx4/gists{/gist_id}", "starred_url": "https://api.github.com/users/cx4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cx4/subscriptions", "organizations_url": "https://api.github.com/users/cx4/orgs", "repos_url": "https://api.github.com/users/cx4/repos", "events_url": "https://api.github.com/users/cx4/events{/privacy}", "received_events_url": "https://api.github.com/users/cx4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-17T01:33:59Z", "updated_at": "2019-11-19T02:08:38Z", "closed_at": "2019-11-19T02:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I use it as a crawler, how to get the text or value of an element\r\n`\r\na = self.get_text('css selector')\r\n`\r\n`print(a)`\r\n\r\nBut it doesn't work", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/414", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/414/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/414/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/414", "id": 519625664, "node_id": "MDU6SXNzdWU1MTk2MjU2NjQ=", "number": 414, "title": "Switch_to_frame_of_element switch encountered problems?", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-08T02:42:16Z", "updated_at": "2019-11-08T06:36:54Z", "closed_at": "2019-11-08T06:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n<div data-v-70f44a90=\"\" class=\"todo-iframe\">\r\n    <iframe data-v-70f44a90=\"\" src=\"https://xxx/app/334837844\" width=\"100%\" height=\"100%\" \r\n    frameborder=\"0\">\r\n    </iframe>\r\n</div>\r\n\r\nUnable to switch:\r\nself.switch_to_frame_of_element(\"//iframe[contains(@src,'334837844')]\", by=By.XPATH)\r\n\r\nI can use the native API:\r\ne = self.find_element(\"//iframe[contains(@src,'334837844')]\")\r\nself.driver.switch_to_frame(e)    --ok\r\n\r\nself.switch_to_frame(0)   --ok\r\nself.switch_to_default_content()\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/411", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/411/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/411/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/411", "id": 517543072, "node_id": "MDU6SXNzdWU1MTc1NDMwNzI=", "number": 411, "title": "I don't want to close my browser every time, is there any way?Because I don't want to log in again", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-05T04:33:53Z", "updated_at": "2019-11-08T01:02:09Z", "closed_at": "2019-11-07T23:02:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "class TestCaseClass(WebBaseCase):\r\n\r\n\t@classmethod\r\n\tdef setUpClass(self):\r\n\t\tprint(\"start\")\r\n\r\n\tdef test_something1(self):\r\n\t\tself.open(\"http://www.baidu.com/\")\r\n\t\ttime.sleep(3)\r\n\t\tself.assertTrue(True)\r\n\r\n\tdef test_something2(self):\r\n\t\tself.open(\"http://www.qq.com/\")\r\n\t\ttime.sleep(2)\r\n\t\tself.assertTrue(True)\r\n\r\n\t@classmethod\r\n\tdef tearDownClass(cls):\r\n\t\tprint(\"end\")\r\n\r\nIt's not uncommon to not want to write all validation into one testcase, but not to close the browser every time\r\n\r\nin addition\uff1a\r\nSince we are using intelligent validation, --user-data-dir also tried and failed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/408", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/408/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/408/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/408", "id": 513813699, "node_id": "MDU6SXNzdWU1MTM4MTM2OTk=", "number": 408, "title": "recommended to add the get_elements function to get all the element sets", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-29T10:10:06Z", "updated_at": "2019-11-05T04:06:52Z", "closed_at": "2019-10-29T12:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, sometimes when examining UI elements, you need to get a collection of multiple elements to make assertions. It is recommended to add the get_elements function to get all the element sets", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/406", "repository_url": "https://api.github.com/repos/seleniumbase/SeleniumBase", "labels_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/406/comments", "events_url": "https://api.github.com/repos/seleniumbase/SeleniumBase/issues/406/events", "html_url": "https://github.com/seleniumbase/SeleniumBase/issues/406", "id": 513299106, "node_id": "MDU6SXNzdWU1MTMyOTkxMDY=", "number": 406, "title": "The API for moving elements doesn't seem to exist. This is the most basic operation", "user": {"login": "meilisong1", "id": 56585881, "node_id": "MDQ6VXNlcjU2NTg1ODgx", "avatar_url": "https://avatars1.githubusercontent.com/u/56585881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meilisong1", "html_url": "https://github.com/meilisong1", "followers_url": "https://api.github.com/users/meilisong1/followers", "following_url": "https://api.github.com/users/meilisong1/following{/other_user}", "gists_url": "https://api.github.com/users/meilisong1/gists{/gist_id}", "starred_url": "https://api.github.com/users/meilisong1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meilisong1/subscriptions", "organizations_url": "https://api.github.com/users/meilisong1/orgs", "repos_url": "https://api.github.com/users/meilisong1/repos", "events_url": "https://api.github.com/users/meilisong1/events{/privacy}", "received_events_url": "https://api.github.com/users/meilisong1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T13:21:18Z", "updated_at": "2019-10-29T16:47:54Z", "closed_at": "2019-10-29T16:47:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "example:\r\nActions action =new Actions(driver);\r\nWebElement gaikuang=driver.findElement(by(bytype, object));\r\naction.moveToElement(gaikuang).click().perform();", "performed_via_github_app": null, "score": 1.0}]}