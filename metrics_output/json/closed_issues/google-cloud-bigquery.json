{"total_count": 81, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/222", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/222/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/222/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/222", "id": 678116228, "node_id": "MDU6SXNzdWU2NzgxMTYyMjg=", "number": 222, "title": "UserWarning: Cannot create BigQuery Storage client, when trying to retrieve table from Biqquery.", "user": {"login": "kokwai4869", "id": 24448347, "node_id": "MDQ6VXNlcjI0NDQ4MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/24448347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kokwai4869", "html_url": "https://github.com/kokwai4869", "followers_url": "https://api.github.com/users/kokwai4869/followers", "following_url": "https://api.github.com/users/kokwai4869/following{/other_user}", "gists_url": "https://api.github.com/users/kokwai4869/gists{/gist_id}", "starred_url": "https://api.github.com/users/kokwai4869/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kokwai4869/subscriptions", "organizations_url": "https://api.github.com/users/kokwai4869/orgs", "repos_url": "https://api.github.com/users/kokwai4869/repos", "events_url": "https://api.github.com/users/kokwai4869/events{/privacy}", "received_events_url": "https://api.github.com/users/kokwai4869/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814756002, "node_id": "MDU6TGFiZWwxODE0NzU2MDAy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": "I really want to be triaged."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T03:13:59Z", "updated_at": "2020-08-14T06:10:39Z", "closed_at": "2020-08-14T06:10:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created an instances for AI notebook in GCP and tried the tutorial to retrieve the data from Bigquery(table that I made), when I try to execute the below code and error occurred. Does anyone know why? I spent 3 hours trying to search for the solution but it wont work. \r\n\r\nMy attempted\r\n- Install the google-cloud-bigquery-storage libraries but still get error.\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud import bigquery\r\nimport pandas\r\n\r\nclient = bigquery.Client()\r\nprint(\"Client creating using default project: {}\".format(client.project))\r\n\r\nquery = \"\"\"\r\n    SELECT *\r\n    FROM `project_A.dataset.table_test`\r\n\"\"\"\r\nquery_job = client.query(\r\n    query\r\n)  # API request - starts the query\r\n\r\ndf = query_job.to_dataframe()\r\ndf\r\n```\r\n\r\n#### Stack trace\r\n```\r\nUserWarning: Cannot create BigQuery Storage client, the dependency google-cloud-bigquery-storage is not installed\r\n\r\nAfter install google-cloud-bigquery-storage, I get the below errror in AI notebook\r\n\r\nImportError: cannot import name 'bigquery_storage_v1beta1' from 'google.cloud' (unknown location)\r\n\r\n```\r\n\r\nThanks in advance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/217", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/217/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/217/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/217", "id": 676318515, "node_id": "MDU6SXNzdWU2NzYzMTg1MTU=", "number": 217, "title": "Sphinx 3.2.0 breaks 'docs' build", "user": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-10T18:06:26Z", "updated_at": "2020-08-10T19:50:27Z", "closed_at": "2020-08-10T19:50:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From [this Kokoro build](https://source.cloud.google.com/results/invocations/a4596b14-7553-4ab1-ab07-c4817ea27796/targets/cloud-devrel%2Fclient-libraries%2Fpython%2Fgoogleapis%2Fpython-bigquery%2Fpresubmit%2Fpresubmit/log):\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/cmd/build.py\", line 280, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/application.py\", line 348, in build\r\n    self.builder.build_update()\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 297, in build_update\r\n    self.build(to_build,\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 311, in build\r\n    updated_docnames = set(self.read())\r\n  File \"/usr/local/lib/python3.8/contextlib.py\", line 120, in __exit__\r\n    next(self.gen)\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/util/logging.py\", line 213, in pending_warnings\r\n    memhandler.flushTo(logger)\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/util/logging.py\", line 178, in flushTo\r\n    logger.handle(record)\r\n  File \"/usr/local/lib/python3.8/logging/__init__.py\", line 1587, in handle\r\n    self.callHandlers(record)\r\n  File \"/usr/local/lib/python3.8/logging/__init__.py\", line 1649, in callHandlers\r\n    hdlr.handle(record)\r\n  File \"/usr/local/lib/python3.8/logging/__init__.py\", line 946, in handle\r\n    rv = self.filter(record)\r\n  File \"/usr/local/lib/python3.8/logging/__init__.py\", line 807, in filter\r\n    result = f.filter(record)\r\n  File \"/tmpfs/src/github/python-bigquery/.nox/docs/lib/python3.8/site-packages/sphinx/util/logging.py\", line 421, in filter\r\n    raise exc\r\nsphinx.errors.SphinxWarning: /tmpfs/src/github/python-bigquery/google/cloud/bigquery/query.py:docstring of google.cloud.bigquery.query.ScalarQueryParameter:15:Field list ends without a blank line; unexpected unindent.\r\n\r\nWarning, treated as error:\r\n/tmpfs/src/github/python-bigquery/google/cloud/bigquery/query.py:docstring of google.cloud.bigquery.query.ScalarQueryParameter:15:Field list ends without a blank line; unexpected unindent.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/201", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/201/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/201/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/201", "id": 669137779, "node_id": "MDU6SXNzdWU2NjkxMzc3Nzk=", "number": 201, "title": "Wrong output using \"to_dataframe\" for year above 2099", "user": {"login": "davidedironza", "id": 46636416, "node_id": "MDQ6VXNlcjQ2NjM2NDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/46636416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidedironza", "html_url": "https://github.com/davidedironza", "followers_url": "https://api.github.com/users/davidedironza/followers", "following_url": "https://api.github.com/users/davidedironza/following{/other_user}", "gists_url": "https://api.github.com/users/davidedironza/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidedironza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidedironza/subscriptions", "organizations_url": "https://api.github.com/users/davidedironza/orgs", "repos_url": "https://api.github.com/users/davidedironza/repos", "events_url": "https://api.github.com/users/davidedironza/events{/privacy}", "received_events_url": "https://api.github.com/users/davidedironza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1724673012, "node_id": "MDU6TGFiZWwxNzI0NjczMDEy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T06:46:56Z", "updated_at": "2020-07-31T09:58:24Z", "closed_at": "2020-07-31T09:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nThe bigquery client library is not able to convert the datetime '9999-12-31T00:00:00' from bigquery to dataframe correctly.\r\n\r\n```py\r\nfrom google.cloud import bigquery\r\nsql_statement = f\"\"\"SELECT cast('9999-12-31T00:00:00' as datetime)\"\"\"\r\nclient_bq = bigquery.Client()\r\ndf = client_bq.query(sql_statement).to_dataframe()\r\nprint(df)\r\n```\r\n\r\nOutput\r\n`1816-03-29 05:56:08.066277376`\r\n\r\nWhy this is not possible?\r\n\r\nCheers\r\nDavide", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/199", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/199/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/199/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/199", "id": 668032206, "node_id": "MDU6SXNzdWU2NjgwMzIyMDY=", "number": 199, "title": "google-cloud-storage & google-cloud-bigquery incompatible via pip-compile", "user": {"login": "ydennisy", "id": 10243849, "node_id": "MDQ6VXNlcjEwMjQzODQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/10243849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydennisy", "html_url": "https://github.com/ydennisy", "followers_url": "https://api.github.com/users/ydennisy/followers", "following_url": "https://api.github.com/users/ydennisy/following{/other_user}", "gists_url": "https://api.github.com/users/ydennisy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydennisy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydennisy/subscriptions", "organizations_url": "https://api.github.com/users/ydennisy/orgs", "repos_url": "https://api.github.com/users/ydennisy/repos", "events_url": "https://api.github.com/users/ydennisy/events{/privacy}", "received_events_url": "https://api.github.com/users/ydennisy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755631, "node_id": "MDU6TGFiZWwxODE0NzU1NjMx", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/needs%20more%20info", "name": "needs more info", "color": "e0ff32", "default": false, "description": "This issue needs more information from the customer to proceed."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-29T17:58:44Z", "updated_at": "2020-08-04T22:48:35Z", "closed_at": "2020-08-04T22:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for stopping by to let us know something could be better!\r\n\r\n#### Environment details\r\n\r\n  - OS type and version: macos\r\n  - Python version: `3.7.8`\r\n  - pip version: `20.1.1`\r\n  - `google-cloud-bigquery` version: `1.26.1`\r\n\r\n#### Steps to reproduce\r\n\r\n  1. add the following to a `requirements.in` file:\r\n```\r\ngoogle-cloud-storage\r\ngoogle-cloud-bigquery\r\n```\r\n  2. Run `pip-compile`\r\n\r\n#### Stack trace\r\n```\r\nCould not find a version that matches google-resumable-media<0.6dev,<2.0dev,>=0.5.0,>=0.6.0 (from google-cloud-storage==1.30.0->-r requirements.in (line 8))\r\nTried: 0.0.1, 0.0.1, 0.0.2, 0.0.2, 0.0.3, 0.0.3, 0.0.4, 0.0.4, 0.0.5, 0.0.5, 0.1.0, 0.1.0, 0.1.1, 0.1.1, 0.2.0, 0.2.0, 0.2.1, 0.2.1, 0.2.2, 0.2.2, 0.2.3, 0.2.3, 0.3.0, 0.3.0, 0.3.1, 0.3.1, 0.3.2, 0.3.2, 0.3.3, 0.3.3, 0.4.0, 0.4.0, 0.4.1, 0.4.1, 0.5.0, 0.5.0, 0.5.1, 0.5.1, 0.6.0, 0.6.0, 0.7.0, 0.7.0\r\nThere are incompatible versions in the resolved dependencies:\r\n  google-resumable-media<2.0dev,>=0.6.0 (from google-cloud-storage==1.30.0->-r requirements.in (line 8))\r\n  google-resumable-media<0.6dev,>=0.5.0 (from google-cloud-bigquery==1.25.0->-r requirements.in (line 9))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/196", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/196/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/196/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/196", "id": 667266941, "node_id": "MDU6SXNzdWU2NjcyNjY5NDE=", "number": 196, "title": "Testing: reduce / remove warning spew", "user": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1870854999, "node_id": "MDU6TGFiZWwxODcwODU0OTk5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/testing", "name": "testing", "color": "637fce", "default": false, "description": ""}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-28T18:05:32Z", "updated_at": "2020-07-30T21:54:06Z", "closed_at": "2020-07-30T21:54:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\n$ nox -re unit-3.6\r\nnox > Running session unit-3.6\r\nnox > Re-using existing virtual environment at .nox/unit-3-6.\r\nnox > pip install mock pytest google-cloud-testutils pytest-cov freezegun\r\nnox > pip install grpcio\r\nnox > pip install -e .[all,fastparquet]\r\nnox > pip install ipython\r\nnox > py.test --quiet --cov=google.cloud.bigquery --cov=tests.unit --cov-append --cov-config=.coveragerc --cov-report= --cov-fail-under=0 tests/unit\r\n........................................................................ [  5%]\r\n........................................................................ [ 10%]\r\n........................................................................ [ 15%]\r\n........................................................................ [ 20%]\r\n........................................................................ [ 25%]\r\n........................................................................ [ 30%]\r\n..ss.....s.............................................................. [ 35%]\r\n........................................................................ [ 40%]\r\n........................................................................ [ 45%]\r\n........................................................................ [ 50%]\r\n........................................................................ [ 55%]\r\n........................................................................ [ 60%]\r\n........................................................................ [ 65%]\r\n........................................................................ [ 70%]\r\n........................................................................ [ 75%]\r\n........................................................................ [ 80%]\r\n........................................................................ [ 85%]\r\n........................................................................ [ 90%]\r\n........................................................................ [ 95%]\r\n.....................................................................    [100%]\r\n=============================== warnings summary ===============================\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_struct[RECORD]\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_struct[record]\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_struct[STRUCT]\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_struct[struct]\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test__pandas_helpers.py:302: FutureWarning: num_children is deprecated, use num_fields\r\n    assert actual.num_children == len(fields)\r\n\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_array_struct[RECORD]\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_array_struct[record]\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_array_struct[STRUCT]\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_data_type_w_array_struct[struct]\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test__pandas_helpers.py:347: FutureWarning: num_children is deprecated, use num_fields\r\n    assert actual.value_type.num_children == len(fields)\r\n\r\ntests/unit/test__pandas_helpers.py::test_bq_to_arrow_schema_w_unknown_type\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/google/cloud/bigquery/_pandas_helpers.py:195: UserWarning: Unable to determine type for field 'field3'.\r\n    warnings.warn(\"Unable to determine type for field '{}'.\".format(bq_field.name))\r\n\r\ntests/unit/test_client.py::TestClient::test__call_api_applying_custom_retry_on_timeout\r\ntests/unit/test_client.py::TestClient::test_create_bqstorage_client_missing_dependency\r\ntests/unit/test_magics.py::test_bigquery_magic_without_optional_arguments\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/.nox/unit-3-6/lib/python3.6/site-packages/google/auth/_default.py:69: UserWarning: Your application has authenticated using end user credentials from Google Cloud SDK without a quota project. You might receive a \"quota exceeded\" or \"API not enabled\" error. We recommend you rerun `gcloud auth application-default login` and make sure a quota project is added. Or you can use service accounts instead. For more information about service accounts, see https://cloud.google.com/docs/authentication/\r\n    warnings.warn(_CLOUD_SDK_CREDENTIALS_WARNING)\r\n\r\ntests/unit/test_client.py::TestClientUpload::test_load_table_from_dataframe_wo_pyarrow_custom_compression\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test_client.py:7477: PyarrowMissingWarning: Loading dataframe data without pyarrow installed is deprecated and will become unsupported in the future. Please install the pyarrow package.\r\n    parquet_compression=\"gzip\",\r\n\r\ntests/unit/test_client.py::TestClientUpload::test_load_table_from_dataframe_wo_pyarrow_custom_compression\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test_client.py:7477: PendingDeprecationWarning: job_config.schema is set, but not used to assist in identifying correct types for data serialization. Please install the pyarrow package.\r\n    parquet_compression=\"gzip\",\r\n\r\ntests/unit/test_job.py::TestLoadJobConfig::test_time_partitioning_hit\r\ntests/unit/test_job.py::TestLoadJobConfig::test_time_partitioning_setter\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/google/cloud/bigquery/table.py:2034: PendingDeprecationWarning: TimePartitioning.require_partition_filter will be removed in future versions. Please use Table.require_partition_filter instead.\r\n    self.require_partition_filter = require_partition_filter\r\n\r\ntests/unit/test_job.py::TestQueryJob::test_to_dataframe_column_date_dtypes_wo_pyarrow\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/google/cloud/bigquery/job.py:3383: PyarrowMissingWarning: Converting to a dataframe without pyarrow installed is often slower and will become unsupported in the future. Please install the pyarrow package.\r\n    date_as_object=date_as_object,\r\n\r\ntests/unit/test_table.py::TestRowIterator::test_to_arrow_w_unknown_type\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/google/cloud/bigquery/_pandas_helpers.py:195: UserWarning: Unable to determine type for field 'sport'.\r\n    warnings.warn(\"Unable to determine type for field '{}'.\".format(bq_field.name))\r\n\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_concat_categorical_dtype_wo_pyarrow\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test_table.py:3500: PyarrowMissingWarning: Converting to a dataframe without pyarrow installed is often slower and will become unsupported in the future. Please install the pyarrow package.\r\n    categories=[\"low\", \"medium\", \"high\"], ordered=False,\r\n\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_progress_bar_wo_pyarrow\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_progress_bar_wo_pyarrow\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_progress_bar_wo_pyarrow\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test_table.py:2373: PyarrowMissingWarning: Converting to a dataframe without pyarrow installed is often slower and will become unsupported in the future. Please install the pyarrow package.\r\n    df = row_iterator.to_dataframe(progress_bar_type=progress_bar_type)\r\n\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_w_bqstorage_v1beta1_no_streams\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/google/cloud/bigquery/_pandas_helpers.py:645: DeprecationWarning: Support for BigQuery Storage v1beta1 clients is deprecated, please consider upgrading the client to BigQuery Storage v1 stable version.\r\n    category=DeprecationWarning,\r\n\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_w_empty_results_wo_pyarrow\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test_table.py:2502: PyarrowMissingWarning: Converting to a dataframe without pyarrow installed is often slower and will become unsupported in the future. Please install the pyarrow package.\r\n    df = row_iterator.to_dataframe()\r\n\r\ntests/unit/test_table.py::TestRowIterator::test_to_dataframe_w_no_results_wo_pyarrow\r\n  /home/tseaver/projects/agendaless/Google/src/python-bigquery/tests/unit/test_table.py:2525: PyarrowMissingWarning: Converting to a dataframe without pyarrow installed is often slower and will become unsupported in the future. Please install the pyarrow package.\r\n    df = row_iterator.to_dataframe()\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n\r\n\r\n1434 passed, 3 skipped, 25 warnings in 37.53s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/194", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/194/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/194/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/194", "id": 667227826, "node_id": "MDU6SXNzdWU2NjcyMjc4MjY=", "number": 194, "title": "Unit tests should not rely on systest environ variables", "user": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1870854999, "node_id": "MDU6TGFiZWwxODcwODU0OTk5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/testing", "name": "testing", "color": "637fce", "default": false, "description": ""}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-28T16:58:28Z", "updated_at": "2020-07-28T21:05:49Z", "closed_at": "2020-07-28T21:05:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```bash\r\n$ env | grep GOOGLE && echo YES || echo NO\r\nNO\r\n$ nox -e unit-2.7\r\nnox > Running session unit-2.7\r\nnox > Creating virtual environment (virtualenv) using python2.7 in .nox/unit-2-7\r\nnox > pip install mock pytest google-cloud-testutils pytest-cov freezegun\r\nnox > pip install grpcio\r\nnox > pip install -e .[all,fastparquet]\r\nnox > pip install ipython==5.5\r\nnox > py.test --quiet --cov=google.cloud.bigquery --cov=tests.unit --cov-append --cov-config=.coveragerc --cov-report= --cov-fail-under=0 tests/unit\r\n........................................................................ [  5%]\r\n........................................................................ [ 10%]\r\n........................................................................ [ 15%]\r\n..............F...................F..................................... [ 20%]\r\n........................................................................ [ 25%]\r\n........................................................................ [ 30%]\r\n.......................ss............................................... [ 35%]\r\n........................................................................ [ 40%]\r\n........................................................................ [ 45%]\r\n........................................................................ [ 50%]\r\n........................................................................ [ 55%]\r\n........................................................................ [ 60%]\r\n........................................................................ [ 65%]\r\n.......................................................F................ [ 70%]\r\n........................................................................ [ 75%]\r\n........................................................................ [ 80%]\r\n....................ss.................................................. [ 85%]\r\n........................................................................ [ 90%]\r\n........................................................................ [ 95%]\r\n.....................................................................    [100%]\r\n=================================== FAILURES ===================================\r\n__________ TestClient.test__call_api_applying_custom_retry_on_timeout __________\r\n\r\nself = <tests.unit.test_client.TestClient testMethod=test__call_api_applying_custom_retry_on_timeout>\r\n\r\n    def test__call_api_applying_custom_retry_on_timeout(self):\r\n        from concurrent.futures import TimeoutError\r\n        from google.cloud.bigquery.retry import DEFAULT_RETRY\r\n    \r\n>       client = self._make_one()\r\n\r\ntests/unit/test_client.py:224: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntests/unit/test_client.py:108: in _make_one\r\n    return self._get_target_class()(*args, **kw)\r\ngoogle/cloud/bigquery/client.py:179: in __init__\r\n    project=project, credentials=credentials, _http=_http\r\n.nox/unit-2-7/lib/python2.7/site-packages/google/cloud/client.py:226: in __init__\r\n    _ClientProjectMixin.__init__(self, project=project)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <google.cloud.bigquery.client.Client object at 0x7f3c1826b590>\r\nproject = None\r\n\r\n    def __init__(self, project=None):\r\n        project = self._determine_default(project)\r\n        if project is None:\r\n            raise EnvironmentError(\r\n>               \"Project was not passed and could not be \"\r\n                \"determined from the environment.\"\r\n            )\r\nE           EnvironmentError: Project was not passed and could not be determined from the environment.\r\n\r\n.nox/unit-2-7/lib/python2.7/site-packages/google/cloud/client.py:181: EnvironmentError\r\n------------------------------ Captured log call -------------------------------\r\nWARNING  google.auth._default:_default.py:334 No project ID could be determined. Consider running `gcloud config set project` or setting the GOOGLE_CLOUD_PROJECT environment variable\r\n__________ TestClient.test_create_bqstorage_client_missing_dependency __________\r\n\r\nself = <tests.unit.test_client.TestClient testMethod=test_create_bqstorage_client_missing_dependency>\r\n\r\n    def test_create_bqstorage_client_missing_dependency(self):\r\n>       client = self._make_one()\r\n\r\ntests/unit/test_client.py:677: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntests/unit/test_client.py:108: in _make_one\r\n    return self._get_target_class()(*args, **kw)\r\ngoogle/cloud/bigquery/client.py:179: in __init__\r\n    project=project, credentials=credentials, _http=_http\r\n.nox/unit-2-7/lib/python2.7/site-packages/google/cloud/client.py:226: in __init__\r\n    _ClientProjectMixin.__init__(self, project=project)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <google.cloud.bigquery.client.Client object at 0x7f3c18278c50>\r\nproject = None\r\n\r\n    def __init__(self, project=None):\r\n        project = self._determine_default(project)\r\n        if project is None:\r\n            raise EnvironmentError(\r\n>               \"Project was not passed and could not be \"\r\n                \"determined from the environment.\"\r\n            )\r\nE           EnvironmentError: Project was not passed and could not be determined from the environment.\r\n\r\n.nox/unit-2-7/lib/python2.7/site-packages/google/cloud/client.py:181: EnvironmentError\r\n------------------------------ Captured log call -------------------------------\r\nWARNING  google.auth._default:_default.py:334 No project ID could be determined. Consider running `gcloud config set project` or setting the GOOGLE_CLOUD_PROJECT environment variable\r\n_____________________ test_bigquery_magic_w_missing_query ______________________\r\n\r\n    def test_bigquery_magic_w_missing_query():\r\n        ip = IPython.get_ipython()\r\n        ip.extension_manager.load_extension(\"google.cloud.bigquery\")\r\n        magics.context._project = None\r\n    \r\n        cell_body = \"   \\n    \\n   \\t\\t  \\n  \"\r\n    \r\n        with io.capture_output() as captured_io:\r\n>           ip.run_cell_magic(\"bigquery\", \"df\", cell_body)\r\n\r\ntests/unit/test_magics.py:778: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n.nox/unit-2-7/lib/python2.7/site-packages/IPython/core/interactiveshell.py:2117: in run_cell_magic\r\n    result = fn(magic_arg_s, cell)\r\ngoogle/cloud/bigquery/magics.py:503: in _cell_magic\r\n    client_info=client_info.ClientInfo(user_agent=IPYTHON_USER_AGENT),\r\ngoogle/cloud/bigquery/client.py:179: in __init__\r\n    project=project, credentials=credentials, _http=_http\r\n.nox/unit-2-7/lib/python2.7/site-packages/google/cloud/client.py:226: in __init__\r\n    _ClientProjectMixin.__init__(self, project=project)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <google.cloud.bigquery.client.Client object at 0x7f3c17f97c90>\r\nproject = None\r\n\r\n    def __init__(self, project=None):\r\n        project = self._determine_default(project)\r\n        if project is None:\r\n            raise EnvironmentError(\r\n>               \"Project was not passed and could not be \"\r\n                \"determined from the environment.\"\r\n            )\r\nE           EnvironmentError: Project was not passed and could not be determined from the environment.\r\n\r\n.nox/unit-2-7/lib/python2.7/site-packages/google/cloud/client.py:181: EnvironmentError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/193", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/193/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/193/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/193", "id": 665585057, "node_id": "MDU6SXNzdWU2NjU1ODUwNTc=", "number": 193, "title": "Some pyarrow assertions are broken in unit tests", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814755808, "node_id": "MDU6TGFiZWwxODE0NzU1ODA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1870854999, "node_id": "MDU6TGFiZWwxODcwODU0OTk5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/testing", "name": "testing", "color": "637fce", "default": false, "description": ""}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-25T13:25:39Z", "updated_at": "2020-07-25T21:14:22Z", "closed_at": "2020-07-25T21:14:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A recent `pyarrow` release appears to have broken a few unit tests that compare the Arrow column values as follows:\r\n```py\r\nassert list(col) == [1, 2, 3]\r\n```\r\n\r\nSuch conversion results in a list containing `pyarrow` scalars, causing the assertion to fail. Columns should thus be converted to Python lists with a dedicated method:\r\n```py\r\ncol.to_pylist()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/188", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/188/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/188/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/188", "id": 664686764, "node_id": "MDU6SXNzdWU2NjQ2ODY3NjQ=", "number": 188, "title": "Packaging: prep for 1.0.0 release of `google-resumable-media-python`.", "user": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-23T18:38:06Z", "updated_at": "2020-07-24T17:18:11Z", "closed_at": "2020-07-24T17:18:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See: https://github.com/googleapis/google-resumable-media-python/issues/138", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/183", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/183/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/183/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/183", "id": 664434517, "node_id": "MDU6SXNzdWU2NjQ0MzQ1MTc=", "number": 183, "title": "Synthesis failed for python-bigquery", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 2149950872, "node_id": "MDU6TGFiZWwyMTQ5OTUwODcy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814755808, "node_id": "MDU6TGFiZWwxODE0NzU1ODA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T12:32:00Z", "updated_at": "2020-07-24T12:33:05Z", "closed_at": "2020-07-24T12:33:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-bigquery. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\nepo /home/kbuilder/.cache/synthtool/synthtool\n2020-07-23 05:31:56,391 synthtool [DEBUG] > Ensuring dependencies.\n2020-07-23 05:31:56,400 synthtool [DEBUG] > Using precloned repo /home/kbuilder/.cache/synthtool/synthtool\n2020-07-23 05:31:56,404 synthtool [DEBUG] > Cloning googleapis.\n2020-07-23 05:31:56,755 synthtool [DEBUG] > Generating code for: //google/cloud/bigquery/v2:bigquery-v2-py.\n2020-07-23 05:31:57,168 synthtool [DEBUG] > Copy: google/cloud/bigquery/v2/model_reference.proto to /tmpfs/tmp/tmpcwh8amca/google/cloud/bigquery_v2/proto/model_reference.proto\n2020-07-23 05:31:57,169 synthtool [DEBUG] > Copy: google/cloud/bigquery/v2/encryption_config.proto to /tmpfs/tmp/tmpcwh8amca/google/cloud/bigquery_v2/proto/encryption_config.proto\n2020-07-23 05:31:57,169 synthtool [DEBUG] > Copy: google/cloud/bigquery/v2/model.proto to /tmpfs/tmp/tmpcwh8amca/google/cloud/bigquery_v2/proto/model.proto\n2020-07-23 05:31:57,169 synthtool [DEBUG] > Copy: google/cloud/bigquery/v2/standard_sql.proto to /tmpfs/tmp/tmpcwh8amca/google/cloud/bigquery_v2/proto/standard_sql.proto\n2020-07-23 05:31:57,170 synthtool [SUCCESS] > Placed proto files into /tmpfs/tmp/tmpcwh8amca/google/cloud/bigquery_v2/proto.\n2020-07-23 05:31:57,170 synthtool [SUCCESS] > Generated code into /tmpfs/tmp/tmpcwh8amca.\n2020-07-23 05:31:57,199 synthtool [INFO] > Replaced '\"\"\"Attributes:' in google/cloud/bigquery_v2/proto/model_pb2.py.\n2020-07-23 05:31:57,200 synthtool [INFO] > Replaced '\"\"\"Attributes:' in google/cloud/bigquery_v2/proto/encryption_config_pb2.py.\n2020-07-23 05:31:57,203 synthtool [INFO] > Replaced '[\u201c\u201d]' in google/cloud/bigquery_v2/proto/model_pb2.py.\n2020-07-23 05:31:57,204 synthtool [INFO] > Replaced '[\u201c\u201d]' in google/cloud/bigquery_v2/proto/standard_sql_pb2.py.\n.coveragerc\n.flake8\n.github/CONTRIBUTING.md\n.github/ISSUE_TEMPLATE/bug_report.md\n.github/ISSUE_TEMPLATE/feature_request.md\n.github/ISSUE_TEMPLATE/support_request.md\n.github/PULL_REQUEST_TEMPLATE.md\n.github/release-please.yml\n.gitignore\n.kokoro/build.sh\n.kokoro/continuous/common.cfg\n.kokoro/continuous/continuous.cfg\n.kokoro/docs/common.cfg\n.kokoro/docs/docs.cfg\n.kokoro/presubmit/common.cfg\n.kokoro/presubmit/presubmit.cfg\n.kokoro/publish-docs.sh\n.kokoro/release.sh\n.kokoro/release/common.cfg\n.kokoro/release/release.cfg\n.kokoro/samples/lint/common.cfg\n.kokoro/samples/lint/continuous.cfg\n.kokoro/samples/lint/periodic.cfg\n.kokoro/samples/lint/presubmit.cfg\n.kokoro/samples/python3.6/common.cfg\n.kokoro/samples/python3.6/continuous.cfg\n.kokoro/samples/python3.6/periodic.cfg\n.kokoro/samples/python3.6/presubmit.cfg\n.kokoro/samples/python3.7/common.cfg\n.kokoro/samples/python3.7/continuous.cfg\n.kokoro/samples/python3.7/periodic.cfg\n.kokoro/samples/python3.7/presubmit.cfg\n.kokoro/samples/python3.8/common.cfg\n.kokoro/samples/python3.8/continuous.cfg\n.kokoro/samples/python3.8/periodic.cfg\n.kokoro/samples/python3.8/presubmit.cfg\n.kokoro/test-samples.sh\n.kokoro/trampoline.sh\nCODE_OF_CONDUCT.md\nCONTRIBUTING.rst\nLICENSE\nMANIFEST.in\ndocs/_static/custom.css\ndocs/_templates/layout.html\ndocs/conf.py.j2\ndocs/multiprocessing.rst\nnoxfile.py.j2\nrenovate.json\nsamples/AUTHORING_GUIDE.md\nsamples/CONTRIBUTING.md\nscripts/decrypt-secrets.sh\nscripts/readme-gen/readme_gen.py.j2\nscripts/readme-gen/templates/README.tmpl.rst\nscripts/readme-gen/templates/auth.tmpl.rst\nscripts/readme-gen/templates/auth_api_key.tmpl.rst\nscripts/readme-gen/templates/install_deps.tmpl.rst\nscripts/readme-gen/templates/install_portaudio.tmpl.rst\nsetup.cfg\ntesting/.gitignore\n2020-07-23 05:31:57,391 synthtool [INFO] > Generating templates for samples project 'samples/snippets'\n2020-07-23 05:31:57,391 synthtool [DEBUG] > Installing requirements at /home/kbuilder/.cache/synthtool/python-bigquery/samples/snippets/requirements.txt to generate samples/snippets/README.rst.in\nREADME.md\n2020-07-23 05:31:58,413 synthtool [DEBUG] > Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 829, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 782, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 610, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/home/kbuilder/.cache/synthtool/python-bigquery/synth.py\", line 71, in <module>\n    python.py_samples()\n  File \"/tmpfs/src/github/synthtool/synthtool/languages/python.py\", line 137, in py_samples\n    result = t.render(subdir=sample_project_dir, **sample_readme_metadata)\n  File \"/tmpfs/src/github/synthtool/synthtool/sources/templates.py\", line 83, in render\n    _render_to_path(self.env, template_name, self.dir / subdir, kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/sources/templates.py\", line 53, in _render_to_path\n    output.dump(fh)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/jinja2/environment.py\", line 1313, in dump\n    fp.writelines(iterable)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/jinja2/environment.py\", line 1357, in __next__\n    return self._next()\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/jinja2/environment.py\", line 1125, in generate\n    yield self.environment.handle_exception()\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/jinja2/environment.py\", line 832, in handle_exception\n    reraise(*rewrite_traceback_stack(source=source))\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/jinja2/_compat.py\", line 28, in reraise\n    raise value.with_traceback(tb)\n  File \"/home/kbuilder/.cache/synthtool/synthtool/synthtool/gcp/templates/python_samples/README.md\", line 4, in top-level template code\n    ## Python Samples for {{ metadata['repo']['name_pretty'] }}\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/jinja2/environment.py\", line 452, in getitem\n    return obj[argument]\njinja2.exceptions.UndefinedError: 'metadata' is undefined\n2020-07-23 05:31:58,458 autosynth [ERROR] > Synthesis failed\n2020-07-23 05:31:58,458 autosynth [DEBUG] > Running: git reset --hard HEAD\nHEAD is now at 1ec41ef chore: skip samples/snippets in top level snippets test\n2020-07-23 05:31:58,469 autosynth [DEBUG] > Running: git checkout autosynth\nSwitched to branch 'autosynth'\n2020-07-23 05:31:58,476 autosynth [DEBUG] > Running: git clean -fdx\nRemoving .nox/\nRemoving __pycache__/\nRemoving google/__pycache__/\nRemoving google/cloud/__pycache__/\nTraceback (most recent call last):\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 367, in synthesize_loop\n    synthesize_inner_loop(fork, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 411, in synthesize_inner_loop\n    synthesizer, len(toolbox.versions) - 1\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 266, in synthesize_version_in_new_branch\n    synthesizer.synthesize(synth_log_path, self.environ)\n  File \"/tmpfs/src/github/synthtool/autosynth/synthesizer.py\", line 120, in synthesize\n    synth_proc.check_returncode()  # Raise an exception.\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 389, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 657, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 506, in main\n    return _inner_main(temp_dir)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 637, in _inner_main\n    commit_count = synthesize_loop(x, multiple_prs, change_pusher, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 375, in synthesize_loop\n    synthesize_loop_single_pr(toolbox, change_pusher, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 401, in synthesize_loop_single_pr\n    synthesize_inner_loop(toolbox, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 411, in synthesize_inner_loop\n    synthesizer, len(toolbox.versions) - 1\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 266, in synthesize_version_in_new_branch\n    synthesizer.synthesize(synth_log_path, self.environ)\n  File \"/tmpfs/src/github/synthtool/autosynth/synthesizer.py\", line 120, in synthesize\n    synth_proc.check_returncode()  # Raise an exception.\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 389, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n\n```\n\nGoogle internal developers can see the full log [here](http://sponge2/results/invocations/77de3591-0402-461b-88bf-cbf4246f8191/targets/github%2Fsynthtool;config=default/tests;query=python-bigquery;failed=false).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/178", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/178/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/178/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/178", "id": 664002625, "node_id": "MDU6SXNzdWU2NjQwMDI2MjU=", "number": 178, "title": "Implement new client options", "user": {"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-22T19:37:52Z", "updated_at": "2020-08-14T04:54:20Z", "closed_at": "2020-08-14T04:54:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add support for the three new client_options `quota_project_id`, `scopes`, and `credentials_file`.  \r\n\r\nhttps://googleapis.dev/python/google-api-core/latest/client_options.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/177", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/177/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/177/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/177", "id": 663729488, "node_id": "MDU6SXNzdWU2NjM3Mjk0ODg=", "number": 177, "title": "pd.read_gbq broken with 1.26.0 and pyarrow", "user": {"login": "inglesp", "id": 28734, "node_id": "MDQ6VXNlcjI4NzM0", "avatar_url": "https://avatars1.githubusercontent.com/u/28734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inglesp", "html_url": "https://github.com/inglesp", "followers_url": "https://api.github.com/users/inglesp/followers", "following_url": "https://api.github.com/users/inglesp/following{/other_user}", "gists_url": "https://api.github.com/users/inglesp/gists{/gist_id}", "starred_url": "https://api.github.com/users/inglesp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inglesp/subscriptions", "organizations_url": "https://api.github.com/users/inglesp/orgs", "repos_url": "https://api.github.com/users/inglesp/repos", "events_url": "https://api.github.com/users/inglesp/events{/privacy}", "received_events_url": "https://api.github.com/users/inglesp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2020-07-22T12:37:48Z", "updated_at": "2020-07-23T15:23:46Z", "closed_at": "2020-07-23T15:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "If pyarrow is installed, then with pandas-gbq==0.13.2, using `pd.read_gbq` causes an exception inside this library.\r\n\r\n```\r\n>>> pd.read_gbq(\"SELECT 1\", project_id=\"ebmdatalab\")\r\n/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/google/auth/_default.py:69: UserWarning: Your application has authenticated using end user credentials from Google Cloud SDK without a quota project. You might receive a \"quota exceeded\" or \"API not enabled\" error. We recommend you rerun `gcloud auth application-default login` and make sure a quota project is added. Or you can use service accounts instead. For more information about service accounts, see https://cloud.google.com/docs/authentication/\r\n  warnings.warn(_CLOUD_SDK_CREDENTIALS_WARNING)\r\n/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/google/cloud/bigquery/client.py:407: UserWarning: Cannot create BigQuery Storage client, the dependency google-cloud-bigquery-storage is not installed.\r\n  \"Cannot create BigQuery Storage client, the dependency \"\r\nDownloading: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00,  1.23rows/s]\r\nTraceback (most recent call last):\r\n  File \"/home/inglesp/.pyenv/versions/3.5.9/lib/python3.5/code.py\", line 91, in runcode\r\n    exec(code, self.locals)\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/pandas/io/gbq.py\", line 176, in read_gbq\r\n    **kwargs\r\n  File \"/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/pandas_gbq/gbq.py\", line 967, in read_gbq\r\n    progress_bar_type=progress_bar_type,\r\n  File \"/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/pandas_gbq/gbq.py\", line 532, in run_query\r\n    progress_bar_type=progress_bar_type,\r\n  File \"/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/pandas_gbq/gbq.py\", line 562, in _download_results\r\n    progress_bar_type=progress_bar_type,\r\n  File \"/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/google/cloud/bigquery/table.py\", line 1727, in to_dataframe\r\n    create_bqstorage_client=create_bqstorage_client,\r\n  File \"/home/inglesp/.pyenv/versions/openp/lib/python3.5/site-packages/google/cloud/bigquery/table.py\", line 1561, in to_arrow\r\n    bqstorage_client.transport.channel.close()\r\nAttributeError: 'NoneType' object has no attribute 'transport'\r\n```\r\n\r\n\r\nIf pyarrow is not installed, there is no exception.  The same code works with 1.25.0, so I'm raising the issue against this library and not [pydata/pandas-gbq/](https://github.com/pydata/pandas-gbq/) or [apache/arrow](https://github.com/apache/arrow).\r\n\r\nHere are details of the various versions used to reproduce this.\r\n\r\n```\r\n$ python --version\r\nPython 3.8.2\r\n$ cat requirements.in \r\ngoogle-cloud-bigquery\r\npandas-gbq\r\npyarrow\r\n$ pip freeze\r\ncachetools==4.1.1\r\ncertifi==2020.6.20\r\nchardet==3.0.4\r\nclick==7.1.2\r\ngoogle-api-core==1.22.0\r\ngoogle-auth==1.19.2\r\ngoogle-auth-oauthlib==0.4.1\r\ngoogle-cloud-bigquery==1.26.0\r\ngoogle-cloud-core==1.3.0\r\ngoogle-resumable-media==0.5.1\r\ngoogleapis-common-protos==1.52.0\r\nidna==2.10\r\nnumpy==1.19.1\r\noauthlib==3.1.0\r\npandas==1.0.5\r\npandas-gbq==0.13.2\r\npip-tools==5.2.1\r\nprotobuf==3.12.2\r\npyarrow==0.17.1\r\npyasn1==0.4.8\r\npyasn1-modules==0.2.8\r\npydata-google-auth==1.1.0\r\npython-dateutil==2.8.1\r\npytz==2020.1\r\nrequests==2.24.0\r\nrequests-oauthlib==1.3.0\r\nrsa==4.6\r\nsix==1.15.0\r\nurllib3==1.25.9\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/173", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/173/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/173/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/173", "id": 659487841, "node_id": "MDU6SXNzdWU2NTk0ODc4NDE=", "number": 173, "title": "release 1.26.0", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-17T18:05:17Z", "updated_at": "2020-07-22T01:30:53Z", "closed_at": "2020-07-22T01:30:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Any chance we could get a release? I'd like #170 in a released version to support a tool I'm building on my current team.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/169", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/169/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/169/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/169", "id": 657611691, "node_id": "MDU6SXNzdWU2NTc2MTE2OTE=", "number": 169, "title": "insert_rows_from_dataframe fails when NaN values are present in DataFrame", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-15T19:52:56Z", "updated_at": "2020-07-17T12:42:05Z", "closed_at": "2020-07-17T12:42:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n  - OS type and version: macOS Catalina (10.15.5)\r\n  - Python version: `python --version`: Python 3.7.3\r\n  - pip version: `pip --version`: pip 20.0.2\r\n  - `google-cloud-bigquery` version: `pip show google-cloud-bigquery`\r\n\r\n```\r\nName: google-cloud-bigquery\r\nVersion: 1.24.0\r\nSummary: Google BigQuery API client library\r\nHome-page: https://github.com/GoogleCloudPlatform/google-cloud-python\r\nAuthor: Google LLC\r\nAuthor-email: googleapis-packages@google.com\r\nLicense: Apache 2.0\r\nLocation: /Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages\r\nRequires: google-auth, six,\r\n```\r\n\r\n#### Steps to reproduce\r\n\r\n1. Create a dataframe containing NaN values.\r\n\r\n    Pandas often uses these values as a NULL indicator, such as from the result of an outer join with a missing row in either the left or right dataframe.\r\n2. Attempt to upload this dataframe using the streaming API `insert_rows_from_dataframe`.\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud import bigquery\r\nimport pandas\r\n\r\n\r\nclient = bigquery.Client()\r\n\r\ntable = bigquery.Table(\"swast-scratch.my_dataset.nan_test\")\r\ntable.schema = [\r\n    bigquery.SchemaField(\"grp_col\", \"STRING\"),\r\n    bigquery.SchemaField(\"str_col\", \"STRING\"),\r\n    bigquery.SchemaField(\"int_col\", \"INTEGER\"),\r\n    bigquery.SchemaField(\"float_col\", \"FLOAT\"),\r\n]\r\nclient.create_table(table, exists_ok=True)\r\n\r\ndf1 = pandas.DataFrame({\r\n        \"grp_col\": [\"a\", \"b\"],\r\n        \"str_col\": [\"a string\", \"b string\"],\r\n    }\r\n)\r\ndf2 = pandas.DataFrame({\r\n        \"grp_col\": [\"b\", \"c\"],\r\n        \"int_col\": [1, 2],\r\n        \"float_col\": [0.25, 0.5],\r\n    }\r\n)\r\nmerged = df1.merge(df2, how=\"outer\", on=\"grp_col\")\r\nprint(merged)\r\n\r\nerrors = client.insert_rows_from_dataframe(table, merged)\r\nprint(errors)\r\n```\r\n\r\n#### Stack trace\r\n\r\n```\r\n$ python upload_df_with_nan.py\r\n  grp_col   str_col  int_col  float_col\r\n0       a  a string      NaN        NaN\r\n1       b  b string      1.0       0.25\r\n2       c       NaN      2.0       0.50\r\nTraceback (most recent call last):\r\n  File \"upload_df_with_nan.py\", line 30, in <module>\r\n    errors = client.insert_rows_from_dataframe(table, merged)\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 2471, in insert_rows_from_dataframe\r\n    result = self.insert_rows(table, rows_chunk, selected_fields, **kwargs)\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 2425, in insert_rows\r\n    return self.insert_rows_json(table, json_rows, **kwargs)\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 2569, in insert_rows_json\r\n    timeout=timeout,\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 556, in _call_api\r\n    return call()\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/api_core/retry.py\", line 286, in retry_wrapped_func\r\n    on_error=on_error,\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/api_core/retry.py\", line 184, in retry_target\r\n    return target()\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/_http.py\", line 423, in api_request\r\n    raise exceptions.from_http_response(response)\r\ngoogle.api_core.exceptions.BadRequest: 400 POST https://bigquery.googleapis.com/bigquery/v2/projects/swast-scratch/datasets/my_dataset/tables/nan_test/insertAll: Invalid JSON payload received. Unexpected token.\r\nstring\", \"int_col\": NaN, \"float_col\": Na\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/168", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/168/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/168/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/168", "id": 657376665, "node_id": "MDU6SXNzdWU2NTczNzY2NjU=", "number": 168, "title": "to_dataframe fails when fetching timestamp values outside nanosecond bounds", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-15T14:03:56Z", "updated_at": "2020-08-15T12:20:04Z", "closed_at": "2020-08-15T12:20:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n  - OS type and version: macOS Catalina (10.15.5)\r\n  - Python version: `python --version`: Python 3.7.6\r\n  - pip version: `pip --version`: pip 20.0.2\r\n  - `google-cloud-bigquery` version: `pip show google-cloud-bigquery`\r\n\r\n```\r\nName: google-cloud-bigquery\r\nVersion: 1.24.0\r\nSummary: Google BigQuery API client library\r\nHome-page: https://github.com/GoogleCloudPlatform/google-cloud-python\r\nAuthor: Google LLC\r\nAuthor-email: googleapis-packages@google.com\r\nLicense: Apache 2.0\r\nLocation: /Users/swast/miniconda3/envs/ibis-dev/lib/python3.7/site-packages\r\nRequires: google-cloud-core, google-api-core, google-resumable-media, google-auth, protobuf, six\r\n```\r\n\r\n#### Code example\r\n\r\nCode:\r\n\r\n```python\r\nfrom google.cloud import bigquery                                                                                                    \r\nclient = bigquery.Client()                                                                                                           \r\ndf = client.query(\"SELECT TIMESTAMP '4567-01-01 00:00:00' AS `tmp`\").to_dataframe()  \r\n```\r\n\r\n\r\n#### Stack trace\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-3-6b8b40790c39> in <module>\r\n----> 1 df = client.query(\"SELECT TIMESTAMP '4567-01-01 00:00:00' AS `tmp`\").to_dataframe()\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/google/cloud/bigquery/job.py in to_dataframe(self, bqstorage_client, dtypes, progress_bar_type, create_bqstorage_client)\r\n   3372             dtypes=dtypes,\r\n   3373             progress_bar_type=progress_bar_type,\r\n-> 3374             create_bqstorage_client=create_bqstorage_client,\r\n   3375         )\r\n   3376 \r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/google/cloud/bigquery/table.py in to_dataframe(self, bqstorage_client, dtypes, progress_bar_type, create_bqstorage_client)\r\n   1729                 create_bqstorage_client=create_bqstorage_client,\r\n   1730             )\r\n-> 1731             df = record_batch.to_pandas()\r\n   1732             for column in dtypes:\r\n   1733                 df[column] = pandas.Series(df[column], dtype=dtypes[column])\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib._PandasConvertible.to_pandas()\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.Table._to_pandas()\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/pyarrow/pandas_compat.py in table_to_blockmanager(options, table, categories, ignore_metadata, types_mapper)\r\n    764     _check_data_column_metadata_consistency(all_columns)\r\n    765     columns = _deserialize_column_index(table, all_columns, column_indexes)\r\n--> 766     blocks = _table_to_blocks(options, table, categories, ext_columns_dtypes)\r\n    767 \r\n    768     axes = [columns, index]\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/pyarrow/pandas_compat.py in _table_to_blocks(options, block_table, categories, extension_columns)\r\n   1100     columns = block_table.column_names\r\n   1101     result = pa.lib.table_to_blocks(options, block_table, categories,\r\n-> 1102                                     list(extension_columns.keys()))\r\n   1103     return [_reconstruct_block(item, columns, extension_columns)\r\n   1104             for item in result]\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.table_to_blocks()\r\n\r\n~/miniconda3/envs/ibis-dev/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Casting from timestamp[us, tz=UTC] to timestamp[ns] would result in out of bounds timestamp: 81953424000000000\r\n```\r\n\r\n\r\n#### Potential solutions\r\n\r\nIn order of my preference:\r\n\r\n* Catch this exception from arrow and pass in the option to arrow to use datetime objects only in that case (no option in google-cloud-bigquery): See: https://issues.apache.org/jira/browse/ARROW-5359\r\n* Add option to use Fletcher to make a dataframe backed by the arrow table https://github.com/xhochy/fletcher\r\n* Add option to use datetime objects for timestamp/datetime columns.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/159", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/159/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/159/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/159", "id": 653347087, "node_id": "MDU6SXNzdWU2NTMzNDcwODc=", "number": 159, "title": "Comparaison between RangePartitioning objects seems to be incorrect.", "user": {"login": "francois-baptiste", "id": 7817985, "node_id": "MDQ6VXNlcjc4MTc5ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7817985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/francois-baptiste", "html_url": "https://github.com/francois-baptiste", "followers_url": "https://api.github.com/users/francois-baptiste/followers", "following_url": "https://api.github.com/users/francois-baptiste/following{/other_user}", "gists_url": "https://api.github.com/users/francois-baptiste/gists{/gist_id}", "starred_url": "https://api.github.com/users/francois-baptiste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/francois-baptiste/subscriptions", "organizations_url": "https://api.github.com/users/francois-baptiste/orgs", "repos_url": "https://api.github.com/users/francois-baptiste/repos", "events_url": "https://api.github.com/users/francois-baptiste/events{/privacy}", "received_events_url": "https://api.github.com/users/francois-baptiste/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-08T14:31:53Z", "updated_at": "2020-07-13T13:24:48Z", "closed_at": "2020-07-13T13:24:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Comparaison between RangePartitioning objects seems to be incorrect.\r\n\r\n#### Environment details\r\n\r\n  - `google-cloud-bigquery` version: `1.25.0`\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom google.cloud.bigquery import RangePartitioning\r\n\r\nprint(RangePartitioning(field='something') ==\r\n      RangePartitioning(field='something'))\r\n```\r\nCode above returns `False`. I was expecting `True`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/158", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/158/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/158/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/158", "id": 652635535, "node_id": "MDU6SXNzdWU2NTI2MzU1MzU=", "number": 158, "title": "Remove redundant dependencies", "user": {"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755708, "node_id": "MDU6TGFiZWwxODE0NzU1NzA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20cleanup", "name": "type: cleanup", "color": "c5def5", "default": false, "description": "An internal cleanup or hygiene concern."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-07T20:53:43Z", "updated_at": "2020-07-15T04:38:47Z", "closed_at": "2020-07-15T04:38:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think we can remove the following from the dependencies list:\r\n\r\nhttps://github.com/googleapis/python-bigquery/blob/dbaf3bdc35656fdfef2d4380befdcc2392c1ca83/setup.py#L31-L43\r\n\r\n* `google-auth` is already required via [google-api-core](https://github.com/googleapis/python-api-core/blob/master/setup.py#L34)\r\n* `protobuf` is already required via [google-api-core](https://github.com/googleapis/python-api-core/blob/master/setup.py#L33)\r\n* `rsa` [google-auth](https://github.com/googleapis/google-auth-library-python/blob/master/setup.py#L25-L26) is pinning compatible versions now ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/156", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/156/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/156/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/156", "id": 651840060, "node_id": "MDU6SXNzdWU2NTE4NDAwNjA=", "number": 156, "title": "load_table_from_json() fails to marshal date/datetime objects", "user": {"login": "darwinyip", "id": 3499338, "node_id": "MDQ6VXNlcjM0OTkzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3499338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darwinyip", "html_url": "https://github.com/darwinyip", "followers_url": "https://api.github.com/users/darwinyip/followers", "following_url": "https://api.github.com/users/darwinyip/following{/other_user}", "gists_url": "https://api.github.com/users/darwinyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/darwinyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darwinyip/subscriptions", "organizations_url": "https://api.github.com/users/darwinyip/orgs", "repos_url": "https://api.github.com/users/darwinyip/repos", "events_url": "https://api.github.com/users/darwinyip/events{/privacy}", "received_events_url": "https://api.github.com/users/darwinyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-06T21:49:24Z", "updated_at": "2020-07-07T18:57:04Z", "closed_at": "2020-07-07T18:57:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n  - Python version: 3.7\r\n  - `google-cloud-bigquery` version: 1.25.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Have dict with date/datetime field\r\n  2. Insert it via `load_table_from_json()`\r\n\r\n#### Code example\r\n\r\n```python\r\nfrom datetime import datetime\r\n\r\nfrom google.cloud import bigquery\r\nfrom google.cloud.bigquery import LoadJobConfig\r\n\r\ntable_name = 'data.foo'\r\n\r\ndata = [{\r\n    'id': 1,\r\n    'dt': datetime(year=2020, month=7, day=6, hour=5, minute=4, second=3)\r\n}]\r\n\r\nclient = bigquery.Client()\r\nconfig = LoadJobConfig()\r\nconfig.autodetect = True\r\njob = client.load_table_from_json(data, table_name, job_config=config)\r\njob.result()\r\n\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTypeError: Object of type datetime is not JSON serializable\r\n```\r\n\r\nMaking sure to follow these steps will guarantee the quickest resolution possible.\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/152", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/152/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/152/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/152", "id": 647389302, "node_id": "MDU6SXNzdWU2NDczODkzMDI=", "number": 152, "title": "Bigquery: Make consistent use of 'Optional' keyword in docstring", "user": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-29T13:44:02Z", "updated_at": "2020-06-30T13:26:05Z", "closed_at": "2020-06-30T13:26:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example:\r\n https://github.com/googleapis/python-bigquery/blob/a2d5ce9e97992318d7dc85c51c053cab74e25a11/google/cloud/bigquery/client.py#L223-L228\r\n\r\nUsed multiple ways to declare a parameter as a optional.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/151", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/151/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/151/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/151", "id": 646293928, "node_id": "MDU6SXNzdWU2NDYyOTM5Mjg=", "number": 151, "title": "client.insert_rows should fail when inserting non-existing fields", "user": {"login": "simonvanderveldt", "id": 204286, "node_id": "MDQ6VXNlcjIwNDI4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/204286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvanderveldt", "html_url": "https://github.com/simonvanderveldt", "followers_url": "https://api.github.com/users/simonvanderveldt/followers", "following_url": "https://api.github.com/users/simonvanderveldt/following{/other_user}", "gists_url": "https://api.github.com/users/simonvanderveldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvanderveldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvanderveldt/subscriptions", "organizations_url": "https://api.github.com/users/simonvanderveldt/orgs", "repos_url": "https://api.github.com/users/simonvanderveldt/repos", "events_url": "https://api.github.com/users/simonvanderveldt/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvanderveldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-26T14:16:11Z", "updated_at": "2020-07-30T20:08:48Z", "closed_at": "2020-07-30T20:08:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version\r\n```\r\ngoogle-cloud-bigquery==1.25.0\r\n```\r\n\r\nThe [`client.insert_rows()`](https://github.com/googleapis/python-bigquery/blob/v1.25.0/google/cloud/bigquery/client.py#L2471) function doesn't fail when inserting non-existing fields whereas the BigQuery API does fail with a message like\r\n```\r\n{\r\n  \"kind\": \"bigquery#tableDataInsertAllResponse\",\r\n  \"insertErrors\": [\r\n    {\r\n      \"index\": 0,\r\n      \"errors\": [\r\n        {\r\n          \"reason\": \"invalid\",\r\n          \"location\": \"zap\",\r\n          \"debugInfo\": \"\",\r\n          \"message\": \"no such field.\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n`insert_rows()` silently drops the additional columns instead.\r\n\r\nThis happens because `insert_rows()` uses [`_record_field_to_json`](https://github.com/googleapis/python-bigquery/blob/3869e34f3eff6fabca21c397e3f1cbc368ec880e/google/cloud/bigquery/_helpers.py#L409) which only iterates over the list of fields that are provided ignoring all the other fields that are part of the data and `insert_rows()` passes the table's schema as list of fields to `_record_field_to_json`.\r\n\r\nThis behavior is opposite to the BigQuery API and means we cannot reliably insert data because we're not made aware of changes to the incoming data because there's no failure.\r\nIMHO this behavior is not correct, I think it would be OK if `selected_fields` was provided but it should not silently use the schema to limit which of the fields of the input data are processed and ignore the rest.\r\nI can image there might be cases where one wants to be lenient/ignore all fields that are not part of table so this behavior might have to be an option, possibly combined with `selected_fields`.\r\n\r\nP.S. By extension this also applies to the [`client.insert_rows_from_dataframe()`](https://github.com/googleapis/python-bigquery/blob/v1.25.0/google/cloud/bigquery/client.py#L2533) function which uses `client.insert_rows()`.\r\n\r\nP.P.S We initially ran into this when using `insert_rows_from_dataframe()` and it was a bit of a search to find where this was going wrong because it's a somewhat indirect chain of `insert_rows_from_dataframe -> insert_rows -> insert_rows_json`.\r\nWhy was this long way chosen/added instead of simply using `insert_rows_json(table, df.to_dict(orient=\"records\"))`? It seems a lot simpler and will probably be the workaround we'll implement for now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/149", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/149/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/149/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/149", "id": 645587499, "node_id": "MDU6SXNzdWU2NDU1ODc0OTk=", "number": 149, "title": "Add bigquery/cloud-client samples from the samples repo", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-25T13:59:43Z", "updated_at": "2020-07-22T23:38:17Z", "closed_at": "2020-07-22T23:38:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A transition to the new code generator (#147) requires the code samples to be moved from the common samples repo to here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/143", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/143/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/143/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/143", "id": 642387606, "node_id": "MDU6SXNzdWU2NDIzODc2MDY=", "number": 143, "title": "Synthesis failed for python-bigquery", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814755977, "node_id": "MDU6TGFiZWwxODE0NzU1OTc3", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 2149950872, "node_id": "MDU6TGFiZWwyMTQ5OTUwODcy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814755808, "node_id": "MDU6TGFiZWwxODE0NzU1ODA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-06-20T14:34:30Z", "updated_at": "2020-07-02T12:23:26Z", "closed_at": "2020-07-02T12:23:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-bigquery. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\n://github.com/googleapis/gax-java/archive/9f83322606b982bebc4ebb2cd1d33485a1776396.zip) = 2b8fa95fab626617de820428f8841d2f1390e35b8ebbcca234b5548922ab29c3\nDEBUG: Rule 'com_google_api_gax_java' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"2b8fa95fab626617de820428f8841d2f1390e35b8ebbcca234b5548922ab29c3\"\nDEBUG: Call stack for the definition of repository 'com_google_api_gax_java' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:108:1\nLoading: 0 packages loaded\nINFO: SHA256 (https://github.com/googleapis/gapic-generator/archive/b7033a61dbfc7f1ad856b17299cf8aeb688a94f4.zip) = 5318c9464c4b7f337992123eeeae2282f22ed83d0c1d13018bd18b13a3009b34\nLoading: 0 packages loaded\nDEBUG: Rule 'com_google_api_codegen' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"5318c9464c4b7f337992123eeeae2282f22ed83d0c1d13018bd18b13a3009b34\"\nDEBUG: Call stack for the definition of repository 'com_google_api_codegen' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:62:1\nINFO: SHA256 (https://github.com/googleapis/protoc-java-resource-names-plugin/archive/2b04af0971699d6f042e8b5a6683487a40919a92.zip) = e06b4805df2b123fb494466b2995eb18b5801e6a553bc83669cf02bc8740fba9\nDEBUG: Rule 'com_google_protoc_java_resource_names_plugin' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"e06b4805df2b123fb494466b2995eb18b5801e6a553bc83669cf02bc8740fba9\"\nDEBUG: Call stack for the definition of repository 'com_google_protoc_java_resource_names_plugin' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:136:1\nINFO: SHA256 (https://github.com/googleapis/protoc-docs-plugin/archive/fa40c6ad56d6e98d3bd99fcb2b8c59d097430a7e.zip) = 3345377ac2a051d3a78c4caad4656d3db5c05be8149404ab00232d6811bc3d28\nDEBUG: Rule 'protoc_docs_plugin' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"3345377ac2a051d3a78c4caad4656d3db5c05be8149404ab00232d6811bc3d28\"\nDEBUG: Call stack for the definition of repository 'protoc_docs_plugin' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:160:1\nLoading: 0 packages loaded\nINFO: SHA256 (https://github.com/bazelbuild/bazel-gazelle/archive/0.17.0.zip) = 55d4c42482dc5d81e89cb96998fc9f05a108ee17ae493a4175a7b99a05be5380\nDEBUG: Rule 'bazel_gazelle' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"55d4c42482dc5d81e89cb96998fc9f05a108ee17ae493a4175a7b99a05be5380\"\nDEBUG: Call stack for the definition of repository 'bazel_gazelle' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:194:1\nLoading: 0 packages loaded\n    currently loading: google/cloud/bigquery/v2\nINFO: SHA256 (https://github.com/grpc/grpc-java/archive/v1.25.0.zip) = e44ebf25c8885233b15d522e3349c9b495945adea5f3e1d5a287a9ec437ecec5\nDEBUG: Rule 'io_grpc_grpc_java' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"e44ebf25c8885233b15d522e3349c9b495945adea5f3e1d5a287a9ec437ecec5\"\nDEBUG: Call stack for the definition of repository 'io_grpc_grpc_java' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/com_google_api_gax_java/repositories.bzl:114:5\n - /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/com_google_api_gax_java/repositories.bzl:60:5\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:123:1\nINFO: Build option --protocopt has changed, discarding analysis cache.\nAnalyzing: target //google/cloud/bigquery/v2:bigquery-v2-py (1 packages loaded, 0 targets configured)\nERROR: While resolving toolchains for target @pypi_black//:black: invalid registered toolchain '@gapic_generator_python//:pyenv3_toolchain': no such package '@gapic_generator_python//': The repository '@gapic_generator_python' could not be resolved\nERROR: Analysis of target '//google/cloud/bigquery/v2:bigquery-v2-py' failed; build aborted: invalid registered toolchain '@gapic_generator_python//:pyenv3_toolchain': no such package '@gapic_generator_python//': The repository '@gapic_generator_python' could not be resolved\nINFO: Elapsed time: 8.299s\nINFO: 0 processes.\nFAILED: Build did NOT complete successfully (13 packages loaded, 14 targets configured)\nFAILED: Build did NOT complete successfully (13 packages loaded, 14 targets configured)\n\n2020-06-20 07:34:27,369 synthtool [DEBUG] > Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 829, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 782, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 610, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/home/kbuilder/.cache/synthtool/python-bigquery/synth.py\", line 28, in <module>\n    include_protos=True,\n  File \"/tmpfs/src/github/synthtool/synthtool/gcp/gapic_bazel.py\", line 46, in py_library\n    return self._generate_code(service, version, \"python\", **kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/gcp/gapic_bazel.py\", line 180, in _generate_code\n    shell.run(bazel_run_args)\n  File \"/tmpfs/src/github/synthtool/synthtool/shell.py\", line 39, in run\n    raise exc\n  File \"/tmpfs/src/github/synthtool/synthtool/shell.py\", line 33, in run\n    encoding=\"utf-8\",\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 438, in run\n    output=stdout, stderr=stderr)\nsubprocess.CalledProcessError: Command '['bazel', '--max_idle_secs=60', 'build', '//google/cloud/bigquery/v2:bigquery-v2-py']' returned non-zero exit status 1.\n2020-06-20 07:34:27,422 autosynth [ERROR] > Synthesis failed\n2020-06-20 07:34:27,422 autosynth [DEBUG] > Running: git reset --hard HEAD\nHEAD is now at 3235255 docs(bigquery): fix the broken docs (#139)\n2020-06-20 07:34:27,429 autosynth [DEBUG] > Running: git checkout autosynth-self\nSwitched to branch 'autosynth-self'\n2020-06-20 07:34:27,435 autosynth [ERROR] > Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n2020-06-20 07:34:27,610 autosynth [INFO] > PR already exists: https://github.com/googleapis/python-bigquery/pull/117\n2020-06-20 07:34:27,610 autosynth [DEBUG] > Running: git clean -fdx\nRemoving __pycache__/\nRemoving google/__pycache__/\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 649, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 506, in main\n    return _inner_main(temp_dir)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 629, in _inner_main\n    commit_count = synthesize_loop(x, multiple_prs, change_pusher, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 367, in synthesize_loop\n    synthesize_inner_loop(fork, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 411, in synthesize_inner_loop\n    synthesizer, len(toolbox.versions) - 1\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 266, in synthesize_version_in_new_branch\n    synthesizer.synthesize(synth_log_path, self.environ)\n  File \"/tmpfs/src/github/synthtool/autosynth/synthesizer.py\", line 120, in synthesize\n    synth_proc.check_returncode()  # Raise an exception.\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 389, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n\n```\n\nGoogle internal developers can see the full log [here](http://sponge2/results/invocations/e93a3b66-0b9d-4731-8049-5d33389af1dc/targets/github%2Fsynthtool;config=default/tests;query=python-bigquery;failed=false).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/142", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/142/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/142/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/142", "id": 642018323, "node_id": "MDU6SXNzdWU2NDIwMTgzMjM=", "number": 142, "title": "Support for Dataflow SQL", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-19T14:36:17Z", "updated_at": "2020-06-22T17:43:17Z", "closed_at": "2020-06-22T17:43:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I understand the Dataflow SDK is maintained elsewhere but \"`Dataflow SQL`\" is supported through BigQuery console/UI so this makes it hybrid hence my question here. \r\n\r\nI would love to query pubsub, save and export results directly from the same \"bigquery engine\" library. Any chance this will happen ?\r\n\r\nToday, paradoxically, what is convenient interactively requires much more effort programmatically: learn `Apache Beam` SDK, provision DF server and start a bq stream job, kill all when done, and then only query in `BigQuery`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/140", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/140/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/140/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/140", "id": 641473003, "node_id": "MDU6SXNzdWU2NDE0NzMwMDM=", "number": 140, "title": "Still problem with struct type?", "user": {"login": "imartynetz", "id": 9934980, "node_id": "MDQ6VXNlcjk5MzQ5ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9934980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imartynetz", "html_url": "https://github.com/imartynetz", "followers_url": "https://api.github.com/users/imartynetz/followers", "following_url": "https://api.github.com/users/imartynetz/following{/other_user}", "gists_url": "https://api.github.com/users/imartynetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/imartynetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imartynetz/subscriptions", "organizations_url": "https://api.github.com/users/imartynetz/orgs", "repos_url": "https://api.github.com/users/imartynetz/repos", "events_url": "https://api.github.com/users/imartynetz/events{/privacy}", "received_events_url": "https://api.github.com/users/imartynetz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-18T18:47:33Z", "updated_at": "2020-08-04T19:12:32Z", "closed_at": "2020-08-03T04:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/googleapis/python-bigquery/blob/de9998fe85eea5e69be39cfe0075d3097ce9ec4a/google/cloud/bigquery/_pandas_helpers.py#L291\r\n\r\nIn this line it's blocking to send files using `load_table_from_dataframe` with struct type, in the link from github it's saying that this problem is fixed by the new version pyarrow. I have this problem when I'm trying upload a file from MongoDB using pymongo, and create a schema for a nested dictionary in one of the columns. I comment this lines, and the code runs, but when trying to sendo to BigQuery I got a error 500.\r\n\r\n`pyarrow=='0.18.0.dev434' (I try with anothers versions same problem)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/138", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/138/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/138/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/138", "id": 640416628, "node_id": "MDU6SXNzdWU2NDA0MTY2Mjg=", "number": 138, "title": "[docs][1.25] Documentation on https://googleapis.dev/python/bigquery/1.25.0/ is broken", "user": {"login": "evil-shrike", "id": 1203230, "node_id": "MDQ6VXNlcjEyMDMyMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1203230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evil-shrike", "html_url": "https://github.com/evil-shrike", "followers_url": "https://api.github.com/users/evil-shrike/followers", "following_url": "https://api.github.com/users/evil-shrike/following{/other_user}", "gists_url": "https://api.github.com/users/evil-shrike/gists{/gist_id}", "starred_url": "https://api.github.com/users/evil-shrike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evil-shrike/subscriptions", "organizations_url": "https://api.github.com/users/evil-shrike/orgs", "repos_url": "https://api.github.com/users/evil-shrike/repos", "events_url": "https://api.github.com/users/evil-shrike/events{/privacy}", "received_events_url": "https://api.github.com/users/evil-shrike/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1724673010, "node_id": "MDU6TGFiZWwxNzI0NjczMDEw", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-17T12:50:15Z", "updated_at": "2020-06-19T12:13:59Z", "closed_at": "2020-06-19T12:13:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nThe docs for 1.25 version is broken. At least for `Client` class, there is no methods documentation any more.\r\nJust compare:\r\n* [1.24](https://googleapis.dev/python/bigquery/1.24.0/generated/google.cloud.bigquery.client.Client.html#google.cloud.bigquery.client.Client.query)\r\n* [1.25](https://googleapis.dev/python/bigquery/1.25.0/generated/google.cloud.bigquery.client.Client.html#google.cloud.bigquery.client.Client.query)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/137", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/137/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/137/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/137", "id": 638024792, "node_id": "MDU6SXNzdWU2MzgwMjQ3OTI=", "number": 137, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-12T22:03:22Z", "updated_at": "2020-08-12T04:20:33Z", "closed_at": "2020-08-12T04:20:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #44 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/134", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/134/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/134/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/134", "id": 637938030, "node_id": "MDU6SXNzdWU2Mzc5MzgwMzA=", "number": 134, "title": "A new release of rsa dependency breaks Python 2.7 tests", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-12T18:39:37Z", "updated_at": "2020-06-16T06:35:49Z", "closed_at": "2020-06-16T06:35:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recent `rsa` releases are not compatible with Python 2.7 anymore, the last compatible version is 4.0. We need to bound its version in order to preserve Python 2.7 compatibility.\r\n\r\n> Major changes in 4.1\r\nVersion 4.0 was the last version to support Python 2 and 3.4. Version 4.1 is compatible with Python 3.5+ only.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/136", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/136/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/136/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/136", "id": 637979620, "node_id": "MDU6SXNzdWU2Mzc5Nzk2MjA=", "number": 136, "title": "BigQuery: Converting query results to dataframe fails to convert date columns", "user": {"login": "darwinyip", "id": 3499338, "node_id": "MDQ6VXNlcjM0OTkzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3499338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darwinyip", "html_url": "https://github.com/darwinyip", "followers_url": "https://api.github.com/users/darwinyip/followers", "following_url": "https://api.github.com/users/darwinyip/following{/other_user}", "gists_url": "https://api.github.com/users/darwinyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/darwinyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darwinyip/subscriptions", "organizations_url": "https://api.github.com/users/darwinyip/orgs", "repos_url": "https://api.github.com/users/darwinyip/repos", "events_url": "https://api.github.com/users/darwinyip/events{/privacy}", "received_events_url": "https://api.github.com/users/darwinyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-12T17:04:23Z", "updated_at": "2020-06-16T06:54:31Z", "closed_at": "2020-06-16T06:54:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n```\r\ngoogle-api-python-client==1.9.3\r\ngoogle-cloud-bigquery==1.25.0\r\npyarrow==0.17.1\r\n```\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Issuing a select statement that returns a date column and converting the results to dataframe fails to convert the date column and leaves it as string\r\n\r\n#### Code example\r\n\r\n```python\r\nselect = \"select DATE(date) as dt from [project:dataset.table]\"\r\nclient = bigquery.Client()\r\njob_config = bigquery.QueryJobConfig(use_legacy_sql=True)\r\nselect_job = client.query(select, job_config=job_config)\r\nselect_job.result()\r\ndf = select_job.to_dataframe()\r\ndf.dtypes\r\n\r\n# dt    object\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/129", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/129/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/129/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/129", "id": 636499842, "node_id": "MDU6SXNzdWU2MzY0OTk4NDI=", "number": 129, "title": "BigQuery: Add docs regarding Client thread-safety", "user": {"login": "cmur2", "id": 800933, "node_id": "MDQ6VXNlcjgwMDkzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/800933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmur2", "html_url": "https://github.com/cmur2", "followers_url": "https://api.github.com/users/cmur2/followers", "following_url": "https://api.github.com/users/cmur2/following{/other_user}", "gists_url": "https://api.github.com/users/cmur2/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmur2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmur2/subscriptions", "organizations_url": "https://api.github.com/users/cmur2/orgs", "repos_url": "https://api.github.com/users/cmur2/repos", "events_url": "https://api.github.com/users/cmur2/events{/privacy}", "received_events_url": "https://api.github.com/users/cmur2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-10T05:59:00Z", "updated_at": "2020-06-15T08:40:28Z", "closed_at": "2020-06-15T08:40:28Z", "author_association": "NONE", "active_lock_reason": null, "body": " **Is your feature request related to a problem? Please describe.**\r\nThere is no mention in the current docs if a `google.cloud.bigquery.Client()` instance can safely be shared among threads. This question is similar to https://github.com/googleapis/google-cloud-python/issues/7421\r\n\r\n **Describe the solution you'd like**\r\n Some docs at e.g. https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.client.Client.html#google.cloud.bigquery.client.Client explaining if a `google.cloud.bigquery.Client()` can safely be reused among threads.\r\n\r\n **Describe alternatives you've considered**\r\nI searched this repository for mentions of \"bigquery\" and \"thread safe\" but could not find any specific information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/126", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/126/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/126/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/126", "id": 635687212, "node_id": "MDU6SXNzdWU2MzU2ODcyMTI=", "number": 126, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "meredithslota", "id": 5223152, "node_id": "MDQ6VXNlcjUyMjMxNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5223152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meredithslota", "html_url": "https://github.com/meredithslota", "followers_url": "https://api.github.com/users/meredithslota/followers", "following_url": "https://api.github.com/users/meredithslota/following{/other_user}", "gists_url": "https://api.github.com/users/meredithslota/gists{/gist_id}", "starred_url": "https://api.github.com/users/meredithslota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meredithslota/subscriptions", "organizations_url": "https://api.github.com/users/meredithslota/orgs", "repos_url": "https://api.github.com/users/meredithslota/repos", "events_url": "https://api.github.com/users/meredithslota/events{/privacy}", "received_events_url": "https://api.github.com/users/meredithslota/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meredithslota", "id": 5223152, "node_id": "MDQ6VXNlcjUyMjMxNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5223152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meredithslota", "html_url": "https://github.com/meredithslota", "followers_url": "https://api.github.com/users/meredithslota/followers", "following_url": "https://api.github.com/users/meredithslota/following{/other_user}", "gists_url": "https://api.github.com/users/meredithslota/gists{/gist_id}", "starred_url": "https://api.github.com/users/meredithslota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meredithslota/subscriptions", "organizations_url": "https://api.github.com/users/meredithslota/orgs", "repos_url": "https://api.github.com/users/meredithslota/repos", "events_url": "https://api.github.com/users/meredithslota/events{/privacy}", "received_events_url": "https://api.github.com/users/meredithslota/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-09T19:03:02Z", "updated_at": "2020-06-12T21:12:04Z", "closed_at": "2020-06-12T21:12:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #44 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/124", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/124/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/124/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/124", "id": 635419608, "node_id": "MDU6SXNzdWU2MzU0MTk2MDg=", "number": 124, "title": "Improve code typing for a better coding experience", "user": {"login": "shenoy-anurag", "id": 19914954, "node_id": "MDQ6VXNlcjE5OTE0OTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/19914954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shenoy-anurag", "html_url": "https://github.com/shenoy-anurag", "followers_url": "https://api.github.com/users/shenoy-anurag/followers", "following_url": "https://api.github.com/users/shenoy-anurag/following{/other_user}", "gists_url": "https://api.github.com/users/shenoy-anurag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shenoy-anurag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shenoy-anurag/subscriptions", "organizations_url": "https://api.github.com/users/shenoy-anurag/orgs", "repos_url": "https://api.github.com/users/shenoy-anurag/repos", "events_url": "https://api.github.com/users/shenoy-anurag/events{/privacy}", "received_events_url": "https://api.github.com/users/shenoy-anurag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T13:14:54Z", "updated_at": "2020-07-24T13:46:13Z", "closed_at": "2020-07-24T13:46:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I began working with Google's BigQuery product a week ago and since I use python, I installed this client library. Having used it to manage my data, run queries etc, I have realised that the library lacks proper typing for it's functions to allow IDEs to properly display the returned object's properties and methods.\r\n\r\nI feel that adding typing hints to all the functions would help newbies like myself to find what they need and access the properties mentioned in the documentation for objects like QueryJob.\r\n\r\nI'm raising this feature request to get feedback on whether this is a good idea.\r\n\r\nBefore:\r\n![Screenshot from 2020-06-09 18-40-12](https://user-images.githubusercontent.com/19914954/84151534-27980a00-aa81-11ea-8699-39fe285ec155.png)\r\n\r\nAfter (Adding typing to query() in client.py):\r\n![Screenshot from 2020-06-09 18-40-29](https://user-images.githubusercontent.com/19914954/84151555-2f57ae80-aa81-11ea-841e-1cbbbfbb7478.png)\r\n\r\nEdit:\r\nLet me know if this issue is only affecting me as I'm using the PyCharm IDE or whether this is affecting others.\r\nI know the doc strings are present in all the functions, but I feel signature typing hints would help a great deal.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/122", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/122/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/122/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/122", "id": 634595570, "node_id": "MDU6SXNzdWU2MzQ1OTU1NzA=", "number": 122, "title": "BigQuery time_partitioning and partial schema not working", "user": {"login": "tpcgold", "id": 66625570, "node_id": "MDQ6VXNlcjY2NjI1NTcw", "avatar_url": "https://avatars1.githubusercontent.com/u/66625570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpcgold", "html_url": "https://github.com/tpcgold", "followers_url": "https://api.github.com/users/tpcgold/followers", "following_url": "https://api.github.com/users/tpcgold/following{/other_user}", "gists_url": "https://api.github.com/users/tpcgold/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpcgold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpcgold/subscriptions", "organizations_url": "https://api.github.com/users/tpcgold/orgs", "repos_url": "https://api.github.com/users/tpcgold/repos", "events_url": "https://api.github.com/users/tpcgold/events{/privacy}", "received_events_url": "https://api.github.com/users/tpcgold/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-08T12:49:42Z", "updated_at": "2020-06-09T07:36:29Z", "closed_at": "2020-06-09T06:12:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The BigQuery library seems to have a problem Creating a Timestamp Partitioned Table:\r\nhttps://cloud.google.com/bigquery/docs/creating-column-partitions\r\nWith the combination of a Partial defined Schema:\r\nhttps://cloud.google.com/bigquery/docs/pandas-gbq-migration\r\n\r\nIn the below example load_table_from_json is used but the problem also occurs when using load_table_from_dataframe.\r\n\r\nThe Table will always be created but without Partition! \r\n\r\n#### Environment details\r\n1.BigQuery: General\r\n2. OS independent\r\n3. Python 3.8\r\n4. google-cloud-bigquery 1.24.0\r\n\r\n#### Code example\r\n\r\n```python\r\nclient = bigquery.Client()\r\n\r\nschema = [\r\n    bigquery.SchemaField(\"timestamp\", \"TIMESTAMP\"),\r\n]\r\n\r\ntable_ref = bigquery.TableReference.from_string('.'.join([project, dataset, table_id]))\r\ntable = bigquery.Table(table_ref, schema=schema)\r\n#table.time_partitioning = bigquery.TimePartitioning(\r\n#    type_=bigquery.TimePartitioningType.DAY,\r\n#    field=\"timestamp\",  # name of column to use for partitioning\r\n#)\r\n\r\njob_config = bigquery.LoadJobConfig(schema=schema)\r\njob_config.autodetect = True\r\njob_config.schema_update_options = bigquery.job.SchemaUpdateOption.ALLOW_FIELD_ADDITION\r\njob_config.time_partitioning = bigquery.TimePartitioning(\r\n    type_=bigquery.TimePartitioningType.DAY,\r\n    field=\"timestamp\",  # name of column to use for partitioning\r\n)\r\n\r\njob_config.source_format = bigquery.SourceFormat.NEWLINE_DELIMITED_JSON\r\njob_config.create_disposition = 'CREATE_IF_NEEDED'\r\njob_config.write_disposition = 'WRITE_APPEND'\r\njob = client.load_table_from_json(json.loads(json_str), table, job_config)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/123", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/123/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/123/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/123", "id": 634646173, "node_id": "MDU6SXNzdWU2MzQ2NDYxNzM=", "number": 123, "title": "BigQuery: client.create_table raises Conflict instead of AlreadyExists", "user": {"login": "jpuig-mind", "id": 66418236, "node_id": "MDQ6VXNlcjY2NDE4MjM2", "avatar_url": "https://avatars0.githubusercontent.com/u/66418236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpuig-mind", "html_url": "https://github.com/jpuig-mind", "followers_url": "https://api.github.com/users/jpuig-mind/followers", "following_url": "https://api.github.com/users/jpuig-mind/following{/other_user}", "gists_url": "https://api.github.com/users/jpuig-mind/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpuig-mind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpuig-mind/subscriptions", "organizations_url": "https://api.github.com/users/jpuig-mind/orgs", "repos_url": "https://api.github.com/users/jpuig-mind/repos", "events_url": "https://api.github.com/users/jpuig-mind/events{/privacy}", "received_events_url": "https://api.github.com/users/jpuig-mind/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2020-06-04T12:05:56Z", "updated_at": "2020-07-20T13:50:00Z", "closed_at": "2020-07-20T13:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. API: BigQuery\r\n2. OS type and version:\r\n\r\n    ```bash\r\n    $ lsb_release -a\r\n    No LSB modules are available.\r\n    Distributor ID: Ubuntu\r\n    Description:    Ubuntu 20.04 LTS\r\n    Release:        20.04\r\n    Codename:       focal\r\n    ```\r\n\r\n3. Python version and virtual environment information:\r\n\r\n    ```bash\r\n    $ python3 --version\r\n    Python 3.8.2\r\n    ```\r\n\r\n4. google-cloud-bigquery version:\r\n\r\n    ```bash\r\n    $ pip show google-cloud-bigquery\r\n    Name: google-cloud-bigquery\r\n    Version: 1.24.0\r\n    Summary: Google BigQuery API client library\r\n    Home-page: https://github.com/GoogleCloudPlatform/google-cloud-python\r\n    Author: Google LLC\r\n    Author-email: googleapis-packages@google.com\r\n    License: Apache 2.0\r\n    Location: /home/REDACTED/.local/lib/python3.8/site-packages\r\n    Requires: protobuf, google-api-core, google-cloud-core, google-auth, google-resumable-media, six\r\n    Required-by:\r\n    ```\r\n\r\n#### Steps to reproduce\r\n\r\n1. Have or create a table in BigQuery\r\n2. Try to create it again using `client.create_table()`\r\n3. Confirm that the raised expression is `google.api_core.exceptions.Conflict`\r\n    * One would expect it to be `google.api_core.exceptions.AlreadyExists`\r\n    * Checked `client.delete_table()` with a non-existent table and the result is `google.api_core.exceptions.NotFound`\r\n\r\n#### Code example\r\n\r\nSlightly modified version of <https://cloud.google.com/bigquery/docs/tables#python>\r\n\r\n```python\r\nfrom google.cloud import bigquery\r\nfrom google.api_core.exceptions import AlreadyExists, Conflict\r\n\r\n# Construct a BigQuery client object.\r\nclient = bigquery.Client()\r\n\r\n# TODO(developer): Set table_id to the ID of the table to create.\r\ntable_id = \"your-project.your_dataset.your_table_name\"\r\n\r\ntable = bigquery.Table(table_id)\r\ntable = client.create_table(table)  # Make an API request.\r\ntry:\r\n    table = client.create_table(table)  # Make an API request. Second time.\r\nexcept AlreadyExists:\r\n    print(\"Caught google.api_core.exceptions.AlreadyExists\")\r\nexcept Conflict:\r\n    print(\"Caught google.api_core.exceptions.Conflict\")\r\n\r\ntable = client.create_table(table)  # Make an API request. Third time for Stack Trace\r\n\r\n```\r\n\r\n#### Stack trace\r\n\r\n```bash\r\n$ /usr/bin/python3 REDACTED/example.py\r\nCaught google.api_core.exceptions.Conflict\r\nTraceback (most recent call last):\r\n  File \"REDACTED/example.py\", line 19, in <module>\r\n    table = client.create_table(table)  # Make an API request. Third time for Stack Trace\r\n  File \"/home/REDACTED/.local/lib/python3.8/site-packages/google/cloud/bigquery/client.py\", line 543, in create_table\r\n    api_response = self._call_api(\r\n  File \"/home/REDACTED/.local/lib/python3.8/site-packages/google/cloud/bigquery/client.py\", line 556, in _call_api\r\n    return call()\r\n  File \"/home/REDACTED/.local/lib/python3.8/site-packages/google/api_core/retry.py\", line 281, in retry_wrapped_func\r\n    return retry_target(\r\n  File \"/home/REDACTED/.local/lib/python3.8/site-packages/google/api_core/retry.py\", line 184, in retry_target\r\n    return target()\r\n  File \"/home/REDACTED/.local/lib/python3.8/site-packages/google/cloud/_http.py\", line 423, in api_request\r\n    raise exceptions.from_http_response(response)\r\ngoogle.api_core.exceptions.Conflict: 409 POST https://bigquery.googleapis.com/bigquery/v2/projects/REDACTED/datasets/REDACTED/tables: Already Exists: Table REDACTED:REDACTED.your_table_name\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/120", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/120/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/120/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/120", "id": 630036489, "node_id": "MDU6SXNzdWU2MzAwMzY0ODk=", "number": 120, "title": "Why QueryJob.result() function doesn't support 'start_index' parameter?", "user": {"login": "zenkibomb", "id": 6869173, "node_id": "MDQ6VXNlcjY4NjkxNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6869173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenkibomb", "html_url": "https://github.com/zenkibomb", "followers_url": "https://api.github.com/users/zenkibomb/followers", "following_url": "https://api.github.com/users/zenkibomb/following{/other_user}", "gists_url": "https://api.github.com/users/zenkibomb/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenkibomb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenkibomb/subscriptions", "organizations_url": "https://api.github.com/users/zenkibomb/orgs", "repos_url": "https://api.github.com/users/zenkibomb/repos", "events_url": "https://api.github.com/users/zenkibomb/events{/privacy}", "received_events_url": "https://api.github.com/users/zenkibomb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-03T14:18:40Z", "updated_at": "2020-06-06T09:18:47Z", "closed_at": "2020-06-06T09:18:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why QueryJob.result function doesn't support a 'start_index' parameter for reading data by page?\r\nI know the JAVA version support this feature, and I read the code, found easy to add this parameter because list_rows() function support this, and result() function call list_row() at last.\r\n\r\nI need like this:\r\n        query_job = self.client.query(sql)\r\n        return query_job.result(start_index=100, page_size=20)\r\n\r\nThanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/118", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/118/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/118/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/118", "id": 629272513, "node_id": "MDU6SXNzdWU2MjkyNzI1MTM=", "number": 118, "title": "Dry run queries should not fail with 404:Not found job", "user": {"login": "diego-serrano-glean", "id": 64424475, "node_id": "MDQ6VXNlcjY0NDI0NDc1", "avatar_url": "https://avatars3.githubusercontent.com/u/64424475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diego-serrano-glean", "html_url": "https://github.com/diego-serrano-glean", "followers_url": "https://api.github.com/users/diego-serrano-glean/followers", "following_url": "https://api.github.com/users/diego-serrano-glean/following{/other_user}", "gists_url": "https://api.github.com/users/diego-serrano-glean/gists{/gist_id}", "starred_url": "https://api.github.com/users/diego-serrano-glean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diego-serrano-glean/subscriptions", "organizations_url": "https://api.github.com/users/diego-serrano-glean/orgs", "repos_url": "https://api.github.com/users/diego-serrano-glean/repos", "events_url": "https://api.github.com/users/diego-serrano-glean/events{/privacy}", "received_events_url": "https://api.github.com/users/diego-serrano-glean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-02T14:57:16Z", "updated_at": "2020-06-23T22:59:40Z", "closed_at": "2020-06-23T22:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using the library to execute a query in dry run mode, I got an error like the following: `google.api_core.exceptions.NotFound: 404 GET https://bigquery.googleapis.com/bigquery/v2/projects/swast-scratch/queries/None?maxResults=0&location=US: Not found: Job swast-scratch:US.None`\r\n\r\nThe code just submits a query in dry-run mode.  This is the code I am trying to run:\r\n```\r\nfrom google.cloud import bigquery\r\nfrom google.cloud.bigquery import dbapi\r\n\r\nquery_config = bigquery.QueryJobConfig(dry_run=True)\r\nclient = bigquery.Client(default_query_job_config=query_config)\r\nconn = dbapi.connect(client=client)\r\ncur = conn.cursor()\r\n\r\n# This line fails with \"404 job not found\" when in dry_run mode.\r\ncur.execute(\r\n    \"\"\"\r\n    SELECT country_name\r\n    FROM `bigquery-public-data.utility_us.country_code_iso`\r\n    WHERE country_name LIKE 'U%'\r\n    \"\"\"\r\n)\r\n\r\nresults = cur.fetchall()\r\nprint(results)\r\n```\r\n\r\nWhat I expect as a result is the stats, or an exception if the query is invalid.\r\n\r\nThe following is the full stack trace:\r\n\r\n```\r\n$ python try_dbapi.py\r\nTraceback (most recent call last):\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/dbapi/cursor.py\", line 175, in execute\r\n    self._query_job.result()\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/job.py\", line 3210, in result\r\n    timeout=timeout,\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 1287, in _get_query_results\r\n    retry, method=\"GET\", path=path, query_params=extra_params, timeout=timeout\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 556, in _call_api\r\n    return call()\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/api_core/retry.py\", line 286, in retry_wrapped_func\r\n    on_error=on_error,\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/api_core/retry.py\", line 184, in retry_target\r\n    return target()\r\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/google/cloud/_http.py\", line 423, in api_request\r\n    raise exceptions.from_http_response(response)\r\ngoogle.api_core.exceptions.NotFound: 404 GET https://bigquery.googleapis.com/bigquery/v2/projects/swast-scratch/queries/None?maxResults=0&location=US: Not found: Job swast-scratch:US.None\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/115", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/115/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/115/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/115", "id": 621328074, "node_id": "MDU6SXNzdWU2MjEzMjgwNzQ=", "number": 115, "title": "Illogical use \"full_table_id\"", "user": {"login": "pbkool", "id": 29175274, "node_id": "MDQ6VXNlcjI5MTc1Mjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/29175274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbkool", "html_url": "https://github.com/pbkool", "followers_url": "https://api.github.com/users/pbkool/followers", "following_url": "https://api.github.com/users/pbkool/following{/other_user}", "gists_url": "https://api.github.com/users/pbkool/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbkool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbkool/subscriptions", "organizations_url": "https://api.github.com/users/pbkool/orgs", "repos_url": "https://api.github.com/users/pbkool/repos", "events_url": "https://api.github.com/users/pbkool/events{/privacy}", "received_events_url": "https://api.github.com/users/pbkool/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T22:36:53Z", "updated_at": "2020-07-23T16:56:33Z", "closed_at": "2020-07-23T16:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there! Up front, I am not that experienced with either Python nor the BigQuery API, so this may be intended. But if it is, I do not understand why \ud83d\ude05 \r\n\r\nI have the following simple script that looks for a given data set, and then loops through tables inside that data set and fires queries. Right now it does a simple select, but I intend to delete some old partitions that are no longer needed.\r\n\r\n```\r\nimport os\r\nimport logging\r\nfrom google.cloud import bigquery\r\n\r\nlogging.basicConfig(level=logging.INFO,format='%(levelname)s %(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p')\r\nos.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"] = \"FILE_NAME\"\r\n\r\nbq = bigquery.Client(project=\"XXXX\")\r\nSEARCH_DATASET = \"YYYY\"                \r\nMAX_AGE_PARTITIONS = 7\r\n\r\nfor database in list(bq.list_datasets()):\r\n    if SEARCH_DATASET in database.dataset_id:\r\n        temp_tables_object = bq.list_tables(database.dataset_id)\r\n        for table in temp_tables_object:\r\n            if (str(table.table_id).startswith(\"p_\")\r\n                and \"stats\" not in str(table.table_id).lower()): \r\n                    logging.info(  \"Currently processing partions for table \" + str(table.table_id) + \" It contains \" + str(len(bq.list_partitions(table))) +\r\n                                    \" partitions. With a total size of \" + str(round(bq.get_table(table).num_bytes /pow(10,9),2)) + \" GB\" )\r\n                    logging.info( \"Deleting the partitions older than \"  + str(MAX_AGE_PARTITIONS))\r\n                    QUERY = (\r\n                                \"SELECT * FROM \" + \r\n                                str(bq.get_table(table).full_table_id) + \r\n                                \" where _PARTITIONTIME < TIMESTAMP(DATE_SUB(current_date(), INTERVAL\" + str(MAX_AGE_PARTITIONS) + \"DAY)) LIMIT 1\")\r\n                    query_job = bq.query(QUERY)\r\n                    result = query_job.result()\r\n                    logging.info(result)\r\n```\r\n\r\nI am stuck at the part of `str(bq.get_table(table).full_table_id)` I expected a table reference such as `bigquery-public-data.austin_311.311_request` but it returns something like `bigquery-public-data:austin_311.311_request` (note the : )\r\n\r\nAnd as expected my script fails with `google.api_core.exceptions.BadRequest: 400 Syntax error: Unexpected \":\" at [1:27]`\r\n\r\n\r\n```\r\npip freeze\r\ngcloud==0.18.3\r\ngoogle-api-core==1.17.0\r\ngoogle-auth==1.14.1\r\ngoogle-cloud==0.34.0\r\ngoogle-cloud-bigquery==1.24.0\r\ngoogle-cloud-core==1.3.0\r\ngoogle-resumable-media==0.5.0\r\ngoogleapis-common-protos==1.51.0\r\n\r\npython --version Python 3.8.1\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/116", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/116/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/116/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/116", "id": 622003531, "node_id": "MDU6SXNzdWU2MjIwMDM1MzE=", "number": 116, "title": "BigQuery: Checking `streaming_buffer` results in KeyError", "user": {"login": "darwinyip", "id": 3499338, "node_id": "MDQ6VXNlcjM0OTkzMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3499338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darwinyip", "html_url": "https://github.com/darwinyip", "followers_url": "https://api.github.com/users/darwinyip/followers", "following_url": "https://api.github.com/users/darwinyip/following{/other_user}", "gists_url": "https://api.github.com/users/darwinyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/darwinyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darwinyip/subscriptions", "organizations_url": "https://api.github.com/users/darwinyip/orgs", "repos_url": "https://api.github.com/users/darwinyip/repos", "events_url": "https://api.github.com/users/darwinyip/events{/privacy}", "received_events_url": "https://api.github.com/users/darwinyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-05-19T20:14:08Z", "updated_at": "2020-06-12T16:56:50Z", "closed_at": "2020-06-12T16:56:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n1. Python version and virtual environment information: 3.7\r\n2. google-cloud-bigquery version: 1.24.0\r\n\r\n#### Steps to reproduce\r\nTrying to access the field `streaming_buffer` gives an error when `streamingBuffer` is not present in the response because of how the `__init__` is defined:\r\n\r\n```python\r\nself.estimated_bytes = int(resource[\"estimatedBytes\"])\r\nself.estimated_rows = int(resource[\"estimatedRows\"])\r\n```\r\n\r\n#### Example code\r\n```python\r\nclient = bigquery.Client(project=\"project\")\r\nbq_table = self.client.get_table(\"dataset.table\")\r\nwhile bq_table.streaming_buffer.estimated_rows != 0:\r\n    sleep(60)  # sleep for a bit\r\n```\r\n\r\n#### Stack trace\r\n```\r\nFile \"/usr/local/lib/python3.6/site-packages/google/cloud/bigquery/table.py\", line 779, in streaming_buffer\r\n    return StreamingBuffer(sb)\r\n  File \"/usr/local/lib/python3.6/site-packages/google/cloud/bigquery/table.py\", line 1142, in __init__\r\n    self.estimated_bytes = int(resource[\"estimatedBytes\"])\r\nKeyError: 'estimatedBytes'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/113", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/113/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/113/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/113", "id": 621189201, "node_id": "MDU6SXNzdWU2MjExODkyMDE=", "number": 113, "title": "Reading query table.list_rows based on start_index and max_results not working.", "user": {"login": "yantrikskaran", "id": 48430512, "node_id": "MDQ6VXNlcjQ4NDMwNTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/48430512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yantrikskaran", "html_url": "https://github.com/yantrikskaran", "followers_url": "https://api.github.com/users/yantrikskaran/followers", "following_url": "https://api.github.com/users/yantrikskaran/following{/other_user}", "gists_url": "https://api.github.com/users/yantrikskaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/yantrikskaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yantrikskaran/subscriptions", "organizations_url": "https://api.github.com/users/yantrikskaran/orgs", "repos_url": "https://api.github.com/users/yantrikskaran/repos", "events_url": "https://api.github.com/users/yantrikskaran/events{/privacy}", "received_events_url": "https://api.github.com/users/yantrikskaran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755808, "node_id": "MDU6TGFiZWwxODE0NzU1ODA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-05-19T18:21:06Z", "updated_at": "2020-05-20T17:22:34Z", "closed_at": "2020-05-20T13:50:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python google.cloud.bigquery.client library.\r\n\r\nScenario: \r\nI have a query which is supposed to return 2M records. Due to another issue I am facing - https://github.com/googleapis/python-bigquery/issues/112#issuecomment-630632655\r\n\r\nI thought of using of start_index and max_results on table.list_rows method on temp table of query results.\r\nRererence - \r\nhttps://cloud.google.com/bigquery/docs/paging-results#paging_through_query_results\r\n\r\nI create a list of start_index and started multiple thread to read 1000000 records from the start_index. \r\n\r\nWhat I notice is that it is fetching same records more than once. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/112", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/112/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/112/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/112", "id": 620728299, "node_id": "MDU6SXNzdWU2MjA3MjgyOTk=", "number": 112, "title": "Pagination should allow fetching pages in batch of N pages.", "user": {"login": "yantrikskaran", "id": 48430512, "node_id": "MDQ6VXNlcjQ4NDMwNTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/48430512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yantrikskaran", "html_url": "https://github.com/yantrikskaran", "followers_url": "https://api.github.com/users/yantrikskaran/followers", "following_url": "https://api.github.com/users/yantrikskaran/following{/other_user}", "gists_url": "https://api.github.com/users/yantrikskaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/yantrikskaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yantrikskaran/subscriptions", "organizations_url": "https://api.github.com/users/yantrikskaran/orgs", "repos_url": "https://api.github.com/users/yantrikskaran/repos", "events_url": "https://api.github.com/users/yantrikskaran/events{/privacy}", "received_events_url": "https://api.github.com/users/yantrikskaran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2020-05-17T13:15:01Z", "updated_at": "2020-06-02T10:22:35Z", "closed_at": "2020-06-02T10:22:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently I am facing an issue where I have to process big number of records coming as part of query result. The results are available in multiple pages.\r\n\r\nWhen I am trying to process the row from result I notice that it takes around 10 seconds to load next page. I am able to process one page in a sec or 2 and then I have to wait for 10 seconds for next page. It is time consuming.\r\n\r\nI cannot load entire result in memory as the response can be more than 10 GB and we start hitting various QUOTA limits.\r\n\r\nIt there a way i can load batch of 100 pages in memory at once and start my process and in the background next batch of 100 pages are loaded during processing on first batch of pages.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/108", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/108/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/108/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/108", "id": 617733302, "node_id": "MDU6SXNzdWU2MTc3MzMzMDI=", "number": 108, "title": "Magic params flag fails with negative numbers", "user": {"login": "teebr", "id": 23308704, "node_id": "MDQ6VXNlcjIzMzA4NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/23308704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teebr", "html_url": "https://github.com/teebr", "followers_url": "https://api.github.com/users/teebr/followers", "following_url": "https://api.github.com/users/teebr/following{/other_user}", "gists_url": "https://api.github.com/users/teebr/gists{/gist_id}", "starred_url": "https://api.github.com/users/teebr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teebr/subscriptions", "organizations_url": "https://api.github.com/users/teebr/orgs", "repos_url": "https://api.github.com/users/teebr/repos", "events_url": "https://api.github.com/users/teebr/events{/privacy}", "received_events_url": "https://api.github.com/users/teebr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-13T20:28:30Z", "updated_at": "2020-06-04T07:02:35Z", "closed_at": "2020-06-04T07:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\nColab (Ubuntu 18.04 LTS, Python 3.6.9, pip 19.3.1, bigquery 1.21.0)\r\n\r\n#### Issue/ Example\r\n\r\nFor a parameterised query, the magic fails to parse negative numbers.\r\n\r\nFor example, this parameter dict:\r\n```\r\nparams = {\r\n    \"threshold\": -5.0,\r\n    \"min_year\": 2000\r\n}\r\n```\r\n\r\nand this query:\r\n```\r\n%%bigquery  --project my-project-name --params $params\r\nSELECT\r\n    year, MIN(mean_temp) as min, COUNTIF(snow) / COUNT(snow) * 100 AS pc_snowing\r\nFROM\r\n     `bigquery-public-data.samples.gsod`\r\nWHERE mean_temp < @threshold\r\nAND year >= @min_year\r\nGROUP BY year\r\nORDER BY year\r\n```\r\n\r\nruns fine if `threshold` is >= 0, but if it's negative, the Magic gets an exception:\r\n\r\n```\r\nUsageError: unrecognized arguments: -5.0, 'min_year': 2000}\r\n```\r\nThis happens whether it's a dictionary or a JSON string, and happens with ints as well as floats.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/106", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/106/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/106/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/106", "id": 617407205, "node_id": "MDU6SXNzdWU2MTc0MDcyMDU=", "number": 106, "title": "Remove workarounds for the BQ Storage API issue with small result sets", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755708, "node_id": "MDU6TGFiZWwxODE0NzU1NzA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20cleanup", "name": "type: cleanup", "color": "c5def5", "default": false, "description": "An internal cleanup or hygiene concern."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-13T12:29:35Z", "updated_at": "2020-06-15T10:01:04Z", "closed_at": "2020-06-15T10:01:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Context: https://github.com/googleapis/python-bigquery/pull/55#discussion_r423382586\r\n\r\nThe BigQuery Storage API has an issue with fetching small result sets, thus the BigQuery library implements a fallback to `tabledata.list` API. Since the fix for that issue on the backend will be rolled out soon, the fallback will not be necessary anymore and should be removed.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/104", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/104/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/104/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/104", "id": 617179731, "node_id": "MDU6SXNzdWU2MTcxNzk3MzE=", "number": 104, "title": "How can handle google.api_core.exceptions.BadRequest: 400 Unrecognized name: Error?", "user": {"login": "DevRockstarZ", "id": 54680428, "node_id": "MDQ6VXNlcjU0NjgwNDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/54680428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevRockstarZ", "html_url": "https://github.com/DevRockstarZ", "followers_url": "https://api.github.com/users/DevRockstarZ/followers", "following_url": "https://api.github.com/users/DevRockstarZ/following{/other_user}", "gists_url": "https://api.github.com/users/DevRockstarZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevRockstarZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevRockstarZ/subscriptions", "organizations_url": "https://api.github.com/users/DevRockstarZ/orgs", "repos_url": "https://api.github.com/users/DevRockstarZ/repos", "events_url": "https://api.github.com/users/DevRockstarZ/events{/privacy}", "received_events_url": "https://api.github.com/users/DevRockstarZ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-13T06:29:42Z", "updated_at": "2020-05-13T10:08:02Z", "closed_at": "2020-05-13T10:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to handle wrong valued query errors.\r\n\r\nMy code is like this,\r\n\r\n```\r\n    try:\r\n        query_job = client.query(query)  # Make an API request.\r\n    except:\r\n        print(\"Query Error...\")\r\n        result = None\r\n```\r\n\r\nAnd I manually send wrong query to my API,\r\n\r\nbut it raises google.api_core.exceptions.BadRequest: 400 Unrecognized name:\r\n\r\nand my except part can't catch error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/102", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/102/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/102/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/102", "id": 616595361, "node_id": "MDU6SXNzdWU2MTY1OTUzNjE=", "number": 102, "title": "chore: lint check fails on master", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-12T11:53:05Z", "updated_at": "2020-05-13T01:36:24Z", "closed_at": "2020-05-13T01:36:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A recent change of `flake8` or its config causes the code style check to fail on the `master` branch - it complains about a variable name in a line in `job.py` that has last been changed almost 10 months ago:\r\n```\r\ngoogle/cloud/bigquery/job.py:3119:39: E741 ambiguous variable name 'l'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/99", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/99/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/99/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/99", "id": 614544127, "node_id": "MDU6SXNzdWU2MTQ1NDQxMjc=", "number": 99, "title": "Bigquery: import error with v1.24.0", "user": {"login": "sagydr", "id": 9664064, "node_id": "MDQ6VXNlcjk2NjQwNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9664064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagydr", "html_url": "https://github.com/sagydr", "followers_url": "https://api.github.com/users/sagydr/followers", "following_url": "https://api.github.com/users/sagydr/following{/other_user}", "gists_url": "https://api.github.com/users/sagydr/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagydr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagydr/subscriptions", "organizations_url": "https://api.github.com/users/sagydr/orgs", "repos_url": "https://api.github.com/users/sagydr/repos", "events_url": "https://api.github.com/users/sagydr/events{/privacy}", "received_events_url": "https://api.github.com/users/sagydr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755631, "node_id": "MDU6TGFiZWwxODE0NzU1NjMx", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/needs%20more%20info", "name": "needs more info", "color": "e0ff32", "default": false, "description": "This issue needs more information from the customer to proceed."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-07T16:25:16Z", "updated_at": "2020-07-07T21:51:59Z", "closed_at": "2020-07-07T21:51:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "bug googleapis/google-cloud-python#9965 is still happening in v1.24.0 and six v1.14.0\r\n\r\n`File \"/root/.local/share/virtualenvs/code-788z9T0p/lib/python3.6/site-packages/google/cloud/bigquery/schema.py\", line 17, in <module>\r\n\r\nfrom six.moves import collections_abc\r\nImportError: cannot import name 'collections_abc'\r\n`\r\n\r\nwhy did you close the googleapis/google-cloud-python#9965  issue if it still reproduces for many people?\r\n\r\n![image](https://user-images.githubusercontent.com/9664064/81319446-58f37380-9098-11ea-9cd3-73d37ae7e2f7.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/96", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/96/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/96/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/96", "id": 614059434, "node_id": "MDU6SXNzdWU2MTQwNTk0MzQ=", "number": 96, "title": "Schedule parameter not available (big query)", "user": {"login": "Iuiu1234", "id": 30587996, "node_id": "MDQ6VXNlcjMwNTg3OTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/30587996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iuiu1234", "html_url": "https://github.com/Iuiu1234", "followers_url": "https://api.github.com/users/Iuiu1234/followers", "following_url": "https://api.github.com/users/Iuiu1234/following{/other_user}", "gists_url": "https://api.github.com/users/Iuiu1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iuiu1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iuiu1234/subscriptions", "organizations_url": "https://api.github.com/users/Iuiu1234/orgs", "repos_url": "https://api.github.com/users/Iuiu1234/repos", "events_url": "https://api.github.com/users/Iuiu1234/events{/privacy}", "received_events_url": "https://api.github.com/users/Iuiu1234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T13:29:47Z", "updated_at": "2020-07-07T21:54:43Z", "closed_at": "2020-07-07T21:54:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using bq from bash (google cloud sdk) there is the parameter 'shedule' to schedule the query.\r\n\r\nBut I can't see that argument as any of the function in the package (quey, job_configuration)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/97", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/97/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/97/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/97", "id": 614211939, "node_id": "MDU6SXNzdWU2MTQyMTE5Mzk=", "number": 97, "title": "Schedule parameter not available (big query)", "user": {"login": "Iuiu1234", "id": 30587996, "node_id": "MDQ6VXNlcjMwNTg3OTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/30587996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iuiu1234", "html_url": "https://github.com/Iuiu1234", "followers_url": "https://api.github.com/users/Iuiu1234/followers", "following_url": "https://api.github.com/users/Iuiu1234/following{/other_user}", "gists_url": "https://api.github.com/users/Iuiu1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iuiu1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iuiu1234/subscriptions", "organizations_url": "https://api.github.com/users/Iuiu1234/orgs", "repos_url": "https://api.github.com/users/Iuiu1234/repos", "events_url": "https://api.github.com/users/Iuiu1234/events{/privacy}", "received_events_url": "https://api.github.com/users/Iuiu1234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814756002, "node_id": "MDU6TGFiZWwxODE0NzU2MDAy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": "I really want to be triaged."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T13:26:58Z", "updated_at": "2020-05-11T05:09:19Z", "closed_at": "2020-05-11T05:09:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using bq from bash (google cloud sdk) there is the parameter 'shedule' to schedule the query.\r\nBut I can't see that argument as any of the function in the package (quey, job_configuration)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/94", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/94/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/94/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/94", "id": 613266287, "node_id": "MDU6SXNzdWU2MTMyNjYyODc=", "number": 94, "title": "Make AccessEntry hashable", "user": {"login": "spennymac", "id": 7563423, "node_id": "MDQ6VXNlcjc1NjM0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7563423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spennymac", "html_url": "https://github.com/spennymac", "followers_url": "https://api.github.com/users/spennymac/followers", "following_url": "https://api.github.com/users/spennymac/following{/other_user}", "gists_url": "https://api.github.com/users/spennymac/gists{/gist_id}", "starred_url": "https://api.github.com/users/spennymac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spennymac/subscriptions", "organizations_url": "https://api.github.com/users/spennymac/orgs", "repos_url": "https://api.github.com/users/spennymac/repos", "events_url": "https://api.github.com/users/spennymac/events{/privacy}", "received_events_url": "https://api.github.com/users/spennymac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-06T12:02:24Z", "updated_at": "2020-05-15T09:50:07Z", "closed_at": "2020-05-15T09:50:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to make AccessEntry hashable. I ran into it being unhashable and could not see a reason why.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/88", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/88/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/88/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/88", "id": 609058345, "node_id": "MDU6SXNzdWU2MDkwNTgzNDU=", "number": 88, "title": "Remove test_utils directory", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755708, "node_id": "MDU6TGFiZWwxODE0NzU1NzA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20cleanup", "name": "type: cleanup", "color": "c5def5", "default": false, "description": "An internal cleanup or hygiene concern."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-29T13:28:28Z", "updated_at": "2020-04-30T07:55:16Z", "closed_at": "2020-04-30T07:55:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that test utils are available in a GitHub repo, a local `test_utils` copy is not needed anymore and should be removed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/86", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/86/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/86/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/86", "id": 608118189, "node_id": "MDU6SXNzdWU2MDgxMTgxODk=", "number": 86, "title": "Use BQ Storage API by default", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-28T08:17:24Z", "updated_at": "2020-06-10T21:20:03Z", "closed_at": "2020-06-10T21:20:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Downloading query results with BQ Storage API is much faster than using the REST API.\r\n\r\nSince BQ Storage client has recently reached a stable point, we should use that by default (with a fallback on the REST API if BQ Storage dependencies are not available).\r\n\r\nRelated: #84 (proposes supporting both beta and stable versions of BQ Storage client)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/84", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/84/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/84/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/84", "id": 606405949, "node_id": "MDU6SXNzdWU2MDY0MDU5NDk=", "number": 84, "title": "BigQuery Storage API integrations should accept either v1beta1 or v1 client", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-04-24T15:39:51Z", "updated_at": "2020-06-10T21:20:03Z", "closed_at": "2020-06-10T21:20:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I notice that the v1beta1 API is still used. https://github.com/googleapis/python-bigquery/blob/952164b0f7073ffd06b6f7057dafcf6526ebb95a/google/cloud/bigquery/_pandas_helpers.py#L577-L587\r\n\r\nThis is good, as it keeps packages such as pandas-gbq from breaking, but shouldn't we start thinking about migrating folks to the v1 endpoint? To do that without causing too much disruption, the `to_dataframe`, magics, and DB-API integrations should accept either v1beta1 or v1 clients for an extended period of time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/83", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/83/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/83/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/83", "id": 605907372, "node_id": "MDU6SXNzdWU2MDU5MDczNzI=", "number": 83, "title": "Packaging issue with GRPC and google-cloud-bigquery + optional packages?", "user": {"login": "shollyman", "id": 960486, "node_id": "MDQ6VXNlcjk2MDQ4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/960486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shollyman", "html_url": "https://github.com/shollyman", "followers_url": "https://api.github.com/users/shollyman/followers", "following_url": "https://api.github.com/users/shollyman/following{/other_user}", "gists_url": "https://api.github.com/users/shollyman/gists{/gist_id}", "starred_url": "https://api.github.com/users/shollyman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shollyman/subscriptions", "organizations_url": "https://api.github.com/users/shollyman/orgs", "repos_url": "https://api.github.com/users/shollyman/repos", "events_url": "https://api.github.com/users/shollyman/events{/privacy}", "received_events_url": "https://api.github.com/users/shollyman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-23T22:12:01Z", "updated_at": "2020-04-29T06:39:44Z", "closed_at": "2020-04-29T06:39:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're apparently losing some needed dependencies when using the optional installs for google-cloud-bigquery\r\n\r\n```\r\n$ ~/.pyenv/versions/3.8.2/bin/virtualenv repro\r\n$ source repro/bin/activate\r\n$ pip freeze \r\n```\r\n(no results)\r\n```\r\n$ pip install --upgrade google-cloud-bigquery[bqstorage,pandas]\r\n$ pip freeze > before.txt\r\n$ cat before.txt\r\n```\r\ncachetools==4.1.0\r\ncertifi==2020.4.5.1\r\nchardet==3.0.4\r\ngoogle-api-core==1.17.0\r\ngoogle-auth==1.14.1\r\ngoogle-cloud-bigquery==1.24.0\r\ngoogle-cloud-bigquery-storage==0.8.0\r\ngoogle-cloud-core==1.3.0\r\ngoogle-resumable-media==0.5.0\r\ngoogleapis-common-protos==1.51.0\r\nidna==2.9\r\nnumpy==1.18.3\r\npandas==1.0.3\r\nprotobuf==3.11.3\r\npyarrow==0.17.0\r\npyasn1==0.4.8\r\npyasn1-modules==0.2.8\r\npython-dateutil==2.8.1\r\npytz==2019.3\r\nrequests==2.23.0\r\nrsa==4.0\r\nsix==1.14.0\r\nurllib3==1.25.9\r\n\r\n\r\n```\r\n$ python\r\n>>> from google.cloud import bigquery_storage_v1beta1\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/google/home/shollyman/python_envs/repro/lib/python3.8/site-packages/google/cloud/bigquery_storage_v1beta1/__init__.py\", line 26, in <module>\r\n    from google.cloud.bigquery_storage_v1beta1 import client\r\n  File \"/usr/local/google/home/shollyman/python_envs/repro/lib/python3.8/site-packages/google/cloud/bigquery_storage_v1beta1/client.py\", line 24, in <module>\r\n    import google.api_core.gapic_v1.method\r\n  File \"/usr/local/google/home/shollyman/python_envs/repro/lib/python3.8/site-packages/google/api_core/gapic_v1/__init__.py\", line 16, in <module>\r\n    from google.api_core.gapic_v1 import config\r\n  File \"/usr/local/google/home/shollyman/python_envs/repro/lib/python3.8/site-packages/google/api_core/gapic_v1/config.py\", line 23, in <module>\r\n    import grpc\r\nModuleNotFoundError: No module named 'grpc'\r\n```\r\n\r\n```\r\n$ pip install google-cloud-bigquery-storage\r\n$ pip freeze > after.txt\r\n$ diff before.txt after.txt\r\n```\r\n\r\n> grpcio==1.28.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/82", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/82/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/82/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/82", "id": 604229505, "node_id": "MDU6SXNzdWU2MDQyMjk1MDU=", "number": 82, "title": "  \"You are linking against OpenSSL 1.0.1, which is no longer \" E   RuntimeError: You are linking against OpenSSL 1.0.1, which is no longer supported by the OpenSSL project. You need to upgrade to a newer version of OpenSSL.", "user": {"login": "EitanBe", "id": 20422205, "node_id": "MDQ6VXNlcjIwNDIyMjA1", "avatar_url": "https://avatars3.githubusercontent.com/u/20422205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EitanBe", "html_url": "https://github.com/EitanBe", "followers_url": "https://api.github.com/users/EitanBe/followers", "following_url": "https://api.github.com/users/EitanBe/following{/other_user}", "gists_url": "https://api.github.com/users/EitanBe/gists{/gist_id}", "starred_url": "https://api.github.com/users/EitanBe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EitanBe/subscriptions", "organizations_url": "https://api.github.com/users/EitanBe/orgs", "repos_url": "https://api.github.com/users/EitanBe/repos", "events_url": "https://api.github.com/users/EitanBe/events{/privacy}", "received_events_url": "https://api.github.com/users/EitanBe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-21T18:23:59Z", "updated_at": "2020-08-07T06:58:45Z", "closed_at": "2020-04-22T20:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "  from google.cloud import bigquery\r\n/usr/local/lib/python3.6/site-packages/google/cloud/bigquery/__init__.py:35: in <module>\r\n    from google.cloud.bigquery.client import Client\r\n/usr/local/lib/python3.6/site-packages/google/cloud/bigquery/client.py:54: in <module>\r\n    from google.cloud.client import ClientWithProject\r\n/usr/local/lib/python3.6/site-packages/google/cloud/client.py:27: in <module>\r\n    from google.oauth2 import service_account\r\n/usr/local/lib/python3.6/site-packages/google/oauth2/service_account.py:77: in <module>\r\n    from google.auth import _service_account_info\r\n/usr/local/lib/python3.6/site-packages/google/auth/_service_account_info.py:22: in <module>\r\n    from google.auth import crypt\r\n/usr/local/lib/python3.6/site-packages/google/auth/crypt/__init__.py:43: in <module>\r\n    from google.auth.crypt import rsa\r\n/usr/local/lib/python3.6/site-packages/google/auth/crypt/rsa.py:20: in <module>\r\n    from google.auth.crypt import _cryptography_rsa\r\n/usr/local/lib/python3.6/site-packages/google/auth/crypt/_cryptography_rsa.py:46: in <module>\r\n    _BACKEND = backends.default_backend()\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/backends/__init__.py:15: in default_backend\r\n    from cryptography.hazmat.backends.openssl.backend import backend\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/backends/openssl/__init__.py:7: in <module>\r\n    from cryptography.hazmat.backends.openssl.backend import backend\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/backends/openssl/backend.py:75: in <module>\r\n    from cryptography.hazmat.bindings.openssl import binding\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/bindings/openssl/binding.py:205: in <module>\r\n    _verify_openssl_version(Binding.lib)\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/bindings/openssl/binding.py:169: in _verify_openssl_version\r\n    \"You are linking against OpenSSL 1.0.1, which is no longer \"\r\nE   RuntimeError: You are linking against OpenSSL 1.0.1, which is no longer supported by the OpenSSL project. You need to upgrade to a newer version of OpenSSL.\r\n\r\nopenSSL version:\r\n$ openssl version\r\nOpenSSL 1.1.1g  21 Apr 2020\r\n\r\nOS:\r\nUbuntu 14.04.6 LTS \\n \\l\r\n\r\npackage:\r\ngoogle-cloud-bigquery==1.24.0\r\n\r\nrom cryptography.hazmat.backends.openssl import backend; print(backend.openssl_version_text())\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-3-574257f7b27c> in <module>\r\n----> 1 from cryptography.hazmat.backends.openssl import backend; print(backend.openssl_version_text())\r\n\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/backends/openssl/__init__.py in <module>\r\n      5 from __future__ import absolute_import, division, print_function\r\n      6\r\n----> 7 from cryptography.hazmat.backends.openssl.backend import backend\r\n      8\r\n      9\r\n\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/backends/openssl/backend.py in <module>\r\n     73     _CertificateSigningRequest, _RevokedCertificate\r\n     74 )\r\n---> 75 from cryptography.hazmat.bindings.openssl import binding\r\n     76 from cryptography.hazmat.primitives import hashes, serialization\r\n     77 from cryptography.hazmat.primitives.asymmetric import (\r\n\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/bindings/openssl/binding.py in <module>\r\n    203 Binding.init_static_locks()\r\n    204\r\n--> 205 _verify_openssl_version(Binding.lib)\r\n\r\n/usr/local/lib/python3.6/site-packages/cryptography/hazmat/bindings/openssl/binding.py in _verify_openssl_version(lib)\r\n    167         else:\r\n    168             raise RuntimeError(\r\n--> 169                 \"You are linking against OpenSSL 1.0.1, which is no longer \"\r\n    170                 \"supported by the OpenSSL project. You need to upgrade to a \"\r\n    171                 \"newer version of OpenSSL.\"\r\n\r\nRuntimeError: You are linking against OpenSSL 1.0.1, which is no longer supported by the OpenSSL project. You need to upgrade to a newer version of OpenSSL.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/81", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/81/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/81/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/81", "id": 604039053, "node_id": "MDU6SXNzdWU2MDQwMzkwNTM=", "number": 81, "title": "chore: replace Artman with bazel for synthesizing code", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-21T14:23:07Z", "updated_at": "2020-04-22T08:49:44Z", "closed_at": "2020-04-22T08:49:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The synthtool should start using bazel instead of Artman.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/78", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/78/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/78/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/78", "id": 603239772, "node_id": "MDU6SXNzdWU2MDMyMzk3NzI=", "number": 78, "title": "Unit tests fail in Python 2.7, 3.5 (dependency issue)", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755808, "node_id": "MDU6TGFiZWwxODE0NzU1ODA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-20T13:30:00Z", "updated_at": "2020-04-20T16:26:19Z", "closed_at": "2020-04-20T16:26:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unit tests check fails on Python 2.7 and Python 3.5, because not all dependencies can be installed.\r\n\r\n#### Environment details\r\n\r\n  - OS type and version: Linux (and possibly others?)\r\n  - Python version: 2.7, 3.5\r\n  - pip version: `pip --version`: 20.0.2\r\n  - `google-cloud-bigquery` version: 1.24.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Run uni tests session for Python 2.7 or 3.5, e.g.:\r\n    ```\r\n    nox -f noxfile.py -s unit-2.7    \r\n    ```\r\n  2. Test do not run, an error occurs when installing dependencies.\r\n\r\n#### Code example\r\n\r\n```python\r\n# example\r\n```\r\n\r\n#### Stack trace\r\n```\r\nBuilding wheels for collected packages: llvmlite\r\n...\r\nRuntimeError: Building llvmlite requires LLVM 7.0.x, 7.1.x or 8.0.x, got '11.0.0'. Be sure to set LLVM_CONFIG to the right executable path.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/75", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/75/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/75/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/75", "id": 597193625, "node_id": "MDU6SXNzdWU1OTcxOTM2MjU=", "number": 75, "title": "Building the docs breaks (duplicate object description)", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-04-09T10:45:32Z", "updated_at": "2020-04-10T08:26:09Z", "closed_at": "2020-04-10T08:26:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that building the docs locally on `master` fails due to the following error:\r\n> sphinx.errors.SphinxWarning: <workspace_dir>/python-bigquery/google/cloud/bigquery_v2/types.py:docstring of google.cloud.bigquery_v2.types.DeleteModelRequest.dataset_id:1:duplicate object description of google.cloud.bigquery_v2.types.DeleteModelRequest.dataset_id, other instance in gapic/v2/types, use :noindex: for one of them\r\n\r\nChecking what gets injected into the `types` module does not reveal anything, the `DeleteModelRequest` type is **not** duplicated.\r\n\r\nIt turns out that the issue does not occur with the older version of Sphinx (< 3.x), ~~thus it appears as a bug in the Sphinx package itself.~~ A workaround is to pin that dependency to an older version.\r\n\r\nPreferably, though, the new warnings emitted in Sphinx 3 should be addressed at their root causes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/74", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/74/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/74/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/74", "id": 596964895, "node_id": "MDU6SXNzdWU1OTY5NjQ4OTU=", "number": 74, "title": "Support policy tags in FieldSchema for column-level security", "user": {"login": "syucream", "id": 191684, "node_id": "MDQ6VXNlcjE5MTY4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/191684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syucream", "html_url": "https://github.com/syucream", "followers_url": "https://api.github.com/users/syucream/followers", "following_url": "https://api.github.com/users/syucream/following{/other_user}", "gists_url": "https://api.github.com/users/syucream/gists{/gist_id}", "starred_url": "https://api.github.com/users/syucream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syucream/subscriptions", "organizations_url": "https://api.github.com/users/syucream/orgs", "repos_url": "https://api.github.com/users/syucream/repos", "events_url": "https://api.github.com/users/syucream/events{/privacy}", "received_events_url": "https://api.github.com/users/syucream/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T01:50:06Z", "updated_at": "2020-05-18T18:00:20Z", "closed_at": "2020-05-18T18:00:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope to attach Data Catalog policy tags to fields for column-level security.\r\nhttps://cloud.google.com/bigquery/docs/column-level-security-intro\r\n\r\nIt will just append `policyTags` field to `FieldSchema` like\r\nhttps://github.com/googleapis/google-cloud-go/commit/4c25d137998220b6518c4ea2b2f03af9bf14f6a8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/70", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/70/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/70/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/70", "id": 588616771, "node_id": "MDU6SXNzdWU1ODg2MTY3NzE=", "number": 70, "title": "ImportError: cannot import name 'collections_abc' from 'six.moves' (unknown location)", "user": {"login": "hoshw", "id": 10110152, "node_id": "MDQ6VXNlcjEwMTEwMTUy", "avatar_url": "https://avatars1.githubusercontent.com/u/10110152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoshw", "html_url": "https://github.com/hoshw", "followers_url": "https://api.github.com/users/hoshw/followers", "following_url": "https://api.github.com/users/hoshw/following{/other_user}", "gists_url": "https://api.github.com/users/hoshw/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoshw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoshw/subscriptions", "organizations_url": "https://api.github.com/users/hoshw/orgs", "repos_url": "https://api.github.com/users/hoshw/repos", "events_url": "https://api.github.com/users/hoshw/events{/privacy}", "received_events_url": "https://api.github.com/users/hoshw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-26T18:01:20Z", "updated_at": "2020-04-02T14:10:46Z", "closed_at": "2020-04-02T14:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n#### Environment details\r\n\r\n  - OS type and version: \r\nMacOS\r\n  - Python version: `python --version`. \r\nPython 2.7.16\r\n  - pip version: `pip --version`. \r\npip 20.0.2 \r\n  - `google-cloud-bigquery` version: `pip show google-cloud-bigquery`\r\n\r\nName: google-cloud-bigquery\r\nVersion: 1.24.0\r\nSummary: Google BigQuery API client library\r\nHome-page: https://github.com/GoogleCloudPlatform/google-cloud-python\r\nAuthor: Google LLC\r\nAuthor-email: googleapis-packages@google.com\r\nLicense: Apache 2.0\r\nLocation: /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages\r\nRequires: protobuf, google-api-core, six, google-cloud-core, google-auth, google-resumable-media\r\nRequired-by: \r\n\r\n\r\n#### Steps to reproduce\r\n\r\n  1.  from google.cloud import bigquery\r\n  2. That fails with the message ImportError: cannot import name 'collections_abc' from 'six.moves' (unknown location)\r\n\r\n#### Local fix\r\nI made the following change to \r\n/Library/Python/3.7/site-packages/google/cloud/bigquery/Schema.py\r\n\r\n```\r\n##from six.moves import collections_abc\r\ntry:\r\n    from collections import abc as collections_abc\r\nexcept ImportError:  # Python 2.7\r\n    import collections as collections_abc\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/67", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/67/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/67/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/67", "id": 587587693, "node_id": "MDU6SXNzdWU1ODc1ODc2OTM=", "number": 67, "title": "Temporarily adjust/disable system test for uploading DATETIME fields", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1870854999, "node_id": "MDU6TGFiZWwxODcwODU0OTk5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/testing", "name": "testing", "color": "637fce", "default": false, "description": ""}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-25T10:17:37Z", "updated_at": "2020-03-26T07:47:08Z", "closed_at": "2020-03-26T07:47:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The fix for the likely external issue #61 is not expected for the next day or two, but the failing test is currently blocking all other PRs. The decision was made to **temporarily** adjust it, and revert the change once the fix is ready.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/65", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/65/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/65/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/65", "id": 587022379, "node_id": "MDU6SXNzdWU1ODcwMjIzNzk=", "number": 65, "title": "Bigquery: Model reference repr seems wrong for model_id", "user": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-24T14:57:09Z", "updated_at": "2020-03-26T11:49:41Z", "closed_at": "2020-03-26T11:49:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For `ModelReference`'s repr use project_id against model_id\r\n\r\nhttps://github.com/googleapis/python-bigquery/blob/be5c8b1ede9a2d762fd5574c32587d125eca4713/google/cloud/bigquery/model.py#L432-L435", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/63", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/63/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/63/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/63", "id": 583637057, "node_id": "MDU6SXNzdWU1ODM2MzcwNTc=", "number": 63, "title": "BigQuery to_dataframe() ArrowNotImplementedError", "user": {"login": "jvschoen", "id": 35496082, "node_id": "MDQ6VXNlcjM1NDk2MDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/35496082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvschoen", "html_url": "https://github.com/jvschoen", "followers_url": "https://api.github.com/users/jvschoen/followers", "following_url": "https://api.github.com/users/jvschoen/following{/other_user}", "gists_url": "https://api.github.com/users/jvschoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvschoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvschoen/subscriptions", "organizations_url": "https://api.github.com/users/jvschoen/orgs", "repos_url": "https://api.github.com/users/jvschoen/repos", "events_url": "https://api.github.com/users/jvschoen/events{/privacy}", "received_events_url": "https://api.github.com/users/jvschoen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-17T20:06:59Z", "updated_at": "2020-05-06T15:48:13Z", "closed_at": "2020-05-06T15:48:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working with the Google Vision API and trying to do some analysis in pandas. When I try to get the output into pandas there is an issue and I get the NotImplementedError Below.\r\n\r\n#### Environment details\r\n\r\n1. Specify the API at the beginning of the title (for example, \"BigQuery: ...\")\r\n   General, Core, and Other are also allowed as types\r\n2. OS type and version: **GCP AI Notebook** Python framework\r\n3. Python version and virtual environment information: 3.7.6\r\n4. google-cloud-bigquery version:  1.24.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Query Vision API output results in nested structs. Our output has **RECORD** datatypes of mode **REPEATED**\r\n\r\n#### Code example\r\n\r\n```python\r\n\r\ndef get_data(_project_id, _table_id):\r\n    \r\n    client = bq.Client(project=_project_id)\r\n    try:\r\n        df = client.query(sql_)\r\n    except OperationalError as oe:\r\n        print(oe.msg)\r\n    print(\"Query Complete. Converting to Dataframe\")\r\n\r\n    df = df.to_dataframe(progress_bar_type='tqdm') # Converts to dataframe\r\n    return df\r\n\r\nsql_ = (\r\n    '''\r\n    SELECT\r\n      *\r\n      FROM `{}`\r\n    '''.format(_table_id)\r\n    )\r\n\r\ndf = get_data(project_id, table_id)\r\n```\r\n\r\n#### Stack trace\r\n```\r\nArrowNotImplementedError                  Traceback (most recent call last)\r\n<ipython-input-17-15263a59b273> in <module>\r\n----> 1 df = get_data(project_id, table_id)\r\n\r\n<ipython-input-16-83704d37548f> in get_data(_project_id, _table_id, verbose)\r\n     18     print(\"Query Complete. Converting to Dataframe\")\r\n     19 \r\n---> 20     df = df.to_dataframe(progress_bar_type='tqdm') # Converts to dataframe\r\n     21     return df\r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/job.py in to_dataframe(self, bqstorage_client, dtypes, progress_bar_type, create_bqstorage_client)\r\n   3372             dtypes=dtypes,\r\n   3373             progress_bar_type=progress_bar_type,\r\n-> 3374             create_bqstorage_client=create_bqstorage_client,\r\n   3375         )\r\n   3376 \r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py in to_dataframe(self, bqstorage_client, dtypes, progress_bar_type, create_bqstorage_client)\r\n   1729                 create_bqstorage_client=create_bqstorage_client,\r\n   1730             )\r\n-> 1731             df = record_batch.to_pandas()\r\n   1732             for column in dtypes:\r\n   1733                 df[column] = pandas.Series(df[column], dtype=dtypes[column])\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib._PandasConvertible.to_pandas()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.Table._to_pandas()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/pandas_compat.py in table_to_blockmanager(options, table, categories, ignore_metadata, types_mapper)\r\n    764     _check_data_column_metadata_consistency(all_columns)\r\n    765     columns = _deserialize_column_index(table, all_columns, column_indexes)\r\n--> 766     blocks = _table_to_blocks(options, table, categories, ext_columns_dtypes)\r\n    767 \r\n    768     axes = [columns, index]\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/pandas_compat.py in _table_to_blocks(options, block_table, categories, extension_columns)\r\n   1099     columns = block_table.column_names\r\n   1100     result = pa.lib.table_to_blocks(options, block_table, categories,\r\n-> 1101                                     list(extension_columns.keys()))\r\n   1102     return [_reconstruct_block(item, columns, extension_columns)\r\n   1103             for item in result]\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.table_to_blocks()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowNotImplementedError: Not implemented type for Arrow list to pandas: struct<score: double, description: string>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/60", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/60/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/60/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/60", "id": 582763821, "node_id": "MDU6SXNzdWU1ODI3NjM4MjE=", "number": 60, "title": "Expose 'sourceModel' for ExtractJobConfiguration", "user": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-17T05:25:11Z", "updated_at": "2020-05-11T14:37:06Z", "closed_at": "2020-05-11T14:37:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Bigquery Api documentation of [ExtractJobConfiguration](https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#jobconfigurationextract) which shows that source can be a  sourceTable or sourceModel.\r\n\r\nRelated Java issue [202](https://github.com/googleapis/java-bigquery/issues/202)\r\n\r\n/cc: @shollyman \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/57", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/57/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/57/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/57", "id": 578515130, "node_id": "MDU6SXNzdWU1Nzg1MTUxMzA=", "number": 57, "title": "Uninformative Jupyter cell magic error if the query is missing", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-03-10T11:32:03Z", "updated_at": "2020-03-26T09:42:09Z", "closed_at": "2020-03-26T09:42:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n### Environment details\r\n\r\nBigQuery client v1.24.0, all Python versions.\r\n\r\n### Steps to reproduce\r\n\r\n1. Fire up a Jupyter notebook or an IPython session and load the `bigquery` extension:\r\n    ```\r\n     %load_ext google.cloud.bigquery\r\n    ```\r\n\r\n2. Use the `bigquery` cell magic without specifying the query:\r\n    ```\r\n    %%bigquery --project my-project --destination_table my_dataset.my_table\r\n    ```\r\n**Actual result:**\r\nAn error message is displayed, but is kind of misleading:\r\n```\r\nERROR:\r\n table_id must be a fully-qualified ID in standard SQL format, e.g., \"project.dataset.table_id\", got \r\n```\r\nIt might make the user wonder why the table ID is incorrect even if `--destination` is correctly specified.\r\n\r\n**Expected result:**\r\nThe error message should explain that the query is missing in the cell body.\r\n\r\n### Proposed solution\r\nThe [current implementation](https://github.com/googleapis/python-bigquery/blob/v1.24.0/google/cloud/bigquery/magics.py#L507-L511) assumes that any query without whitespace represents a table ID, but it fails to check if the query is non-empty in the first place. The latter check should be added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/53", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/53/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/53/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/53", "id": 578015454, "node_id": "MDU6SXNzdWU1NzgwMTU0NTQ=", "number": 53, "title": "Bigquery : magic arg ``--destination_table`` issue, with google-cloud-bigquery-magics", "user": {"login": "julioyildo", "id": 17247165, "node_id": "MDQ6VXNlcjE3MjQ3MTY1", "avatar_url": "https://avatars1.githubusercontent.com/u/17247165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julioyildo", "html_url": "https://github.com/julioyildo", "followers_url": "https://api.github.com/users/julioyildo/followers", "following_url": "https://api.github.com/users/julioyildo/following{/other_user}", "gists_url": "https://api.github.com/users/julioyildo/gists{/gist_id}", "starred_url": "https://api.github.com/users/julioyildo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julioyildo/subscriptions", "organizations_url": "https://api.github.com/users/julioyildo/orgs", "repos_url": "https://api.github.com/users/julioyildo/repos", "events_url": "https://api.github.com/users/julioyildo/events{/privacy}", "received_events_url": "https://api.github.com/users/julioyildo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-03-06T14:13:39Z", "updated_at": "2020-03-24T13:17:48Z", "closed_at": "2020-03-24T13:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI would like to use Bigquery's magic commands to make a query that can create and store the result in a new Bigquery table.\r\n\r\nI'm trying to use the following method : \r\n`%%bigquery   --use_legacy_sql  --project projectName  --destination_table datasetname.tablename `\r\n\r\nBut currently having this issue :\r\n_`unrecognized arguments: --destination_table datasetname.tablename`_\r\n\r\nThis argument is mentioned in the Source code for [google.cloud.bigquery.magics.](https://googleapis.dev/python/bigquery/latest/_modules/google/cloud/bigquery/magics.html)\r\n\r\nThanks for your help !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/49", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/49/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/49/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/49", "id": 572405458, "node_id": "MDU6SXNzdWU1NzI0MDU0NTg=", "number": 49, "title": "BigQuery: TypeError: from_arrays() takes at least 2 positional arguments (1 given)", "user": {"login": "georghildebrand", "id": 16001398, "node_id": "MDQ6VXNlcjE2MDAxMzk4", "avatar_url": "https://avatars2.githubusercontent.com/u/16001398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georghildebrand", "html_url": "https://github.com/georghildebrand", "followers_url": "https://api.github.com/users/georghildebrand/followers", "following_url": "https://api.github.com/users/georghildebrand/following{/other_user}", "gists_url": "https://api.github.com/users/georghildebrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/georghildebrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georghildebrand/subscriptions", "organizations_url": "https://api.github.com/users/georghildebrand/orgs", "repos_url": "https://api.github.com/users/georghildebrand/repos", "events_url": "https://api.github.com/users/georghildebrand/events{/privacy}", "received_events_url": "https://api.github.com/users/georghildebrand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-02-27T10:40:35Z", "updated_at": "2020-03-04T07:48:38Z", "closed_at": "2020-03-04T07:48:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, i tried bq client in python with the default example. Since i moved from 1.23.1 to 1.24.0 last week i get the following issue.\r\n\r\nIts related to pyarrow but i was not upgrading pyarrow (worked with it before)\r\n\r\n#### Environment details\r\n- Python 3.7.6\r\n- bigquery.__version__ '1.24.0'\r\n- pyarrow.__version__ '0.11.1'\r\n- Linux jupyter-generic 4.15.0-1057-aws googleapis/google-cloud-python#59-Ubuntu SMP Wed Dec 4 10:02:00 UTC 2019 x86_64 \r\n\r\n- x86_64 x86_64 GNU/Linux\r\n- Name: google-cloud-bigquery\r\n- Version: 1.24.0\r\n- Summary: Google BigQuery API client library\r\n- Location: /opt/conda/lib/python3.7/site-packages\r\n- Requires: google-cloud-core, google-auth, six, google-resumable-media, protobuf, google-api-core\r\n- Required-by: pandas-gbq\r\n\r\n#### Steps to reproduce\r\njust running a default example form the webhttps://cloud.google.com/bigquery/docs/bigquery-storage-python-pandas\r\n\r\n```python\r\nimport google.auth\r\nfrom google.cloud import bigquery\r\nclient = bigquery.Client.from_service_account_json('cred.json')\r\n\r\n# Download query results.\r\nquery_string = \"\"\"\r\nSELECT\r\nCONCAT(\r\n    'https://stackoverflow.com/questions/',\r\n    CAST(id as STRING)) as url,\r\nview_count\r\nFROM `bigquery-public-data.stackoverflow.posts_questions`\r\nWHERE tags like '%google-bigquery%'\r\nORDER BY view_count DESC\r\n\"\"\"\r\n\r\ndataframe = (\r\n    client.query(query_string)\r\n    .result()\r\n    .to_dataframe()\r\n)\r\nprint(dataframe.head())\r\n```\r\n\r\n\r\n#### Stack trace\r\n```\r\n--------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-11-61d06599dbdd> in <module>\r\n     12 \r\n     13 dataframe = (\r\n---> 14     client.query(query_string)\r\n     15     .result()\r\n     16     .to_dataframe()\r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py in to_dataframe(self, bqstorage_client, dtypes, progress_bar_type, create_bqstorage_client)\r\n   1727                 progress_bar_type=progress_bar_type,\r\n   1728                 bqstorage_client=bqstorage_client,\r\n-> 1729                 create_bqstorage_client=create_bqstorage_client,\r\n   1730             )\r\n   1731             df = record_batch.to_pandas()\r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py in to_arrow(self, progress_bar_type, bqstorage_client, create_bqstorage_client)\r\n   1541             record_batches = []\r\n   1542             for record_batch in self._to_arrow_iterable(\r\n-> 1543                 bqstorage_client=bqstorage_client\r\n   1544             ):\r\n   1545                 record_batches.append(record_batch)\r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py in _to_page_iterable(self, bqstorage_download, tabledata_list_download, bqstorage_client)\r\n   1433             )\r\n   1434         )\r\n-> 1435         for item in tabledata_list_download():\r\n   1436             yield item\r\n   1437 \r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/_pandas_helpers.py in download_arrow_tabledata_list(pages, bq_schema)\r\n    523 \r\n    524     for page in pages:\r\n--> 525         yield _tabledata_list_page_to_arrow(page, column_names, arrow_types)\r\n    526 \r\n    527 \r\n\r\n/opt/conda/lib/python3.7/site-packages/google/cloud/bigquery/_pandas_helpers.py in _tabledata_list_page_to_arrow(page, column_names, arrow_types)\r\n    499 \r\n    500     if isinstance(column_names, pyarrow.Schema):\r\n--> 501         return pyarrow.RecordBatch.from_arrays(arrays, schema=column_names)\r\n    502     return pyarrow.RecordBatch.from_arrays(arrays, names=column_names)\r\n    503 \r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.RecordBatch.from_arrays()\r\n\r\nTypeError: from_arrays() takes at least 2 positional arguments (1 given)\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/45", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/45/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/45/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/45", "id": 570802271, "node_id": "MDU6SXNzdWU1NzA4MDIyNzE=", "number": 45, "title": "Testing: drop majyk coverage number: `--cov-fail-under=97`", "user": {"login": "tseaver", "id": 242750, "node_id": "MDQ6VXNlcjI0Mjc1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1870854999, "node_id": "MDU6TGFiZWwxODcwODU0OTk5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/testing", "name": "testing", "color": "637fce", "default": false, "description": ""}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-25T20:07:33Z", "updated_at": "2020-04-29T07:15:47Z", "closed_at": "2020-04-29T07:15:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/40", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/40/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/40/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/40", "id": 567737218, "node_id": "MDU6SXNzdWU1Njc3MzcyMTg=", "number": 40, "title": "Random timeouts in api calls to bigquery.googleapis.com", "user": {"login": "peku33", "id": 8615581, "node_id": "MDQ6VXNlcjg2MTU1ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8615581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peku33", "html_url": "https://github.com/peku33", "followers_url": "https://api.github.com/users/peku33/followers", "following_url": "https://api.github.com/users/peku33/following{/other_user}", "gists_url": "https://api.github.com/users/peku33/gists{/gist_id}", "starred_url": "https://api.github.com/users/peku33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peku33/subscriptions", "organizations_url": "https://api.github.com/users/peku33/orgs", "repos_url": "https://api.github.com/users/peku33/repos", "events_url": "https://api.github.com/users/peku33/events{/privacy}", "received_events_url": "https://api.github.com/users/peku33/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-19T18:00:10Z", "updated_at": "2020-03-09T18:49:49Z", "closed_at": "2020-03-09T18:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating google-cloud-bigquery from version 1.19.0 to 1.24.0, \r\n`requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='bigquery.googleapis.com', port=443): Read timed out. (read timeout=11.0)` started to pop up randomly.\r\n\r\nThis is likely related to https://github.com/googleapis/python-bigquery/issues/34\r\n\r\n#### Environment details\r\n\r\n  - OS type and version: `Ubuntu 19.10 x64`\r\n  - Python version: `3.7.5`\r\n  - pip version: `pip 20.0.2`\r\n  - `google-cloud-bigquery` version: `1.24.0`\r\n\r\n#### Steps to reproduce\r\n\r\nThe error is not deterministic, however we observed it on production environments (compute instances in GCP) and local developement environments.\r\n\r\nFor about 100 queries, at least 1-2 fails with this error (which makes it reproducible). This makes something like 1-2% of ALL requests to fail!\r\n\r\nIf I understand correctly, BQ API endpoint responsible for result() method will block for at most 10 seconds. There is also 1 second margin to neutralize network lags etc. No retry mechanism covering the timeout is present, so in case of delay of more than 1 second, the whole request will fail.\r\n\r\nIn my opinion, having 1.0s non-configurable timeout is not safe. Also not-mutating endpoints (like \"is job finished\") should automatically retry in case of timeout. This is not implemented at the moment.\r\n\r\nWe had to rollback to 1.19.0 to make everything stable again.\r\n\r\n#### Code example\r\n\r\nNothing really helpful could be placed here.\r\n\r\nThe easiest way to reproduce this error is to run query that takes MORE than 10s in 100x loop.\r\n\r\n#### Stack trace\r\n\r\nThe stack trace is always the same:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"/usr/lib/python3.7/http/client.py\", line 1344, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib/python3.7/http/client.py\", line 306, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"/usr/lib/python3.7/http/client.py\", line 267, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"/usr/lib/python3.7/socket.py\", line 589, in readinto\r\n    return self._sock.recv_into(b)\r\n  File \"/usr/lib/python3.7/ssl.py\", line 1071, in recv_into\r\n    return self.read(nbytes, buffer)\r\n  File \"/usr/lib/python3.7/ssl.py\", line 929, in read\r\n    return self._sslobj.read(len, buffer)\r\nsocket.timeout: The read operation timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<proj>/venv/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/util/retry.py\", line 400, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/packages/six.py\", line 735, in reraise\r\n    raise value\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 423, in _make_request\r\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 331, in _raise_timeout\r\n    self, url, \"Read timed out. (read timeout=%s)\" % timeout_value\r\nurllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='bigquery.googleapis.com', port=443): Read timed out. (read timeout=11.0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/bigquery/job.py\", line 3196, in result\r\n    super(QueryJob, self).result(retry=retry, timeout=timeout)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/bigquery/job.py\", line 818, in result\r\n    return super(_AsyncJob, self).result(timeout=timeout)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/future/polling.py\", line 122, in result\r\n    self._blocking_poll(timeout=timeout)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/bigquery/job.py\", line 3098, in _blocking_poll\r\n    super(QueryJob, self)._blocking_poll(timeout=timeout)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/future/polling.py\", line 101, in _blocking_poll\r\n    retry_(self._done_or_raise)()\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/retry.py\", line 289, in retry_wrapped_func\r\n    return retry_wrapped_func\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/retry.py\", line 184, in retry_target\r\n    return target()\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/future/polling.py\", line 80, in _done_or_raise\r\n    if not self.done():\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/bigquery/job.py\", line 3085, in done\r\n    timeout=timeout,\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 1287, in _get_query_results\r\n    retry, method=\"GET\", path=path, query_params=extra_params, timeout=timeout\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/bigquery/client.py\", line 556, in _call_api\r\n    return call()\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/retry.py\", line 289, in retry_wrapped_func\r\n    return retry_wrapped_func\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/api_core/retry.py\", line 184, in retry_target\r\n    return target()\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/_http.py\", line 419, in api_request\r\n    timeout=timeout,\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/_http.py\", line 277, in _make_request\r\n    method, url, headers, data, target_object, timeout=timeout\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/cloud/_http.py\", line 315, in _do_request\r\n    url=url, method=method, headers=headers, data=data, timeout=timeout\r\n  File \"<proj>/venv/lib/python3.7/site-packages/google/auth/transport/requests.py\", line 317, in request\r\n    **kwargs\r\n  File \"<proj>/venv/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"<proj>/venv/lib/python3.7/site-packages/requests/adapters.py\", line 529, in send\r\n    raise ReadTimeout(e, request=request)\r\nrequests.exceptions.ReadTimeout: HTTPSConnectionPool(host='bigquery.googleapis.com', port=443): Read timed out. (read timeout=11.0)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/34", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/34/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/34/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/34", "id": 561822640, "node_id": "MDU6SXNzdWU1NjE4MjI2NDA=", "number": 34, "title": "Calls to `create_dataset` and `get_table` are timing out", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1826540398, "node_id": "MDU6TGFiZWwxODI2NTQwMzk4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/status:%20awaiting%20information", "name": "status: awaiting information", "color": "fef2c0", "default": false, "description": ""}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2020-02-07T19:18:49Z", "updated_at": "2020-08-19T17:14:08Z", "closed_at": "2020-08-19T17:14:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're getting some frequent test failures in the pandas integration tests due to timed out requests, possibly due to https://github.com/googleapis/google-cloud-python/pull/10219 which added non-`None` default timeout.\r\n\r\nIt seems 60 seconds is not enough for these calls (but strange that so many API requests are timing out).\r\n\r\n#### Environment details\r\n\r\nContext: https://github.com/pydata/pandas-gbq/issues/309\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Make frequent calls to `create_dataset`.\r\n  2. Observe flakey tests.\r\n\r\n#### Stack trace\r\n\r\n```\r\n        if new_retry.is_exhausted():\r\n>           raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nE           urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='bigquery.googleapis.com', port=443): Max retries exceeded with url: /bigquery/v2/projects/pandas-travis/datasets/pydata_pandas_bq_testing_dddqwbgrjz/tables/hrsctwrmva (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7ff87946e898>: Failed to establish a new connection: [Errno 110] Connection timed out',))\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/urllib3/util/retry.py:436: MaxRetryError\r\nDuring handling of the above exception, another exception occurred:\r\nself = <pandas.tests.io.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath object at 0x7ff879725160>\r\ngbq_dataset = 'pydata_pandas_bq_testing_dddqwbgrjz.hrsctwrmva'\r\n    def test_roundtrip(self, gbq_dataset):\r\n        destination_table = gbq_dataset\r\n    \r\n        test_size = 20001\r\n        df = make_mixed_dataframe_v2(test_size)\r\n    \r\n        df.to_gbq(\r\n            destination_table,\r\n            _get_project_id(),\r\n            chunksize=None,\r\n>           credentials=_get_credentials(),\r\n        )\r\npandas/tests/io/test_gbq.py:185: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/core/frame.py:1551: in to_gbq\r\n    credentials=credentials,\r\npandas/io/gbq.py:219: in to_gbq\r\n    private_key=private_key,\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas_gbq/gbq.py:1202: in to_gbq\r\n    if table.exists(table_id):\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/pandas_gbq/gbq.py:1312: in exists\r\n    self.client.get_table(table_ref)\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/cloud/bigquery/client.py:679: in get_table\r\n    retry, method=\"GET\", path=table_ref.path, timeout=timeout\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/cloud/bigquery/client.py:556: in _call_api\r\n    return call()\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/api_core/retry.py:286: in retry_wrapped_func\r\n    on_error=on_error,\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/api_core/retry.py:184: in retry_target\r\n    return target()\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/cloud/_http.py:419: in api_request\r\n    timeout=timeout,\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/cloud/_http.py:277: in _make_request\r\n    method, url, headers, data, target_object, timeout=timeout\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/cloud/_http.py:315: in _do_request\r\n    url=url, method=method, headers=headers, data=data, timeout=timeout\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/google/auth/transport/requests.py:317: in request\r\n    **kwargs\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/requests/sessions.py:533: in request\r\n    resp = self.send(prep, **send_kwargs)\r\n../../../miniconda3/envs/pandas-dev/lib/python3.6/site-packages/requests/sessions.py:646: in send\r\n    r = adapter.send(request, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/31", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/31/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/31/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/31", "id": 561135405, "node_id": "MDU6SXNzdWU1NjExMzU0MDU=", "number": 31, "title": "BigQuery: Python - Implement Integer Range Partitioning", "user": {"login": "d-torres", "id": 46171068, "node_id": "MDQ6VXNlcjQ2MTcxMDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/46171068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-torres", "html_url": "https://github.com/d-torres", "followers_url": "https://api.github.com/users/d-torres/followers", "following_url": "https://api.github.com/users/d-torres/following{/other_user}", "gists_url": "https://api.github.com/users/d-torres/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-torres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-torres/subscriptions", "organizations_url": "https://api.github.com/users/d-torres/orgs", "repos_url": "https://api.github.com/users/d-torres/repos", "events_url": "https://api.github.com/users/d-torres/events{/privacy}", "received_events_url": "https://api.github.com/users/d-torres/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T16:43:59Z", "updated_at": "2020-02-11T18:01:39Z", "closed_at": "2020-02-11T18:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a tracking FR for implementing the Integer Range Partitioning functionality within the\r\nBigQuery API. \r\n\r\nInteger range partitioning supports partitioning a table based on the values in a specified integer column, and divides the table using start, stop, and interval values.  A table can only support a single partitioning specification, so users can choose either integer partitioning or time-based partitioning, but not both.  Clustering is independent of partitioning and works with both.\r\n\r\nMore implementation details about this API are shared directly with library\r\nmaintainers. Please contact shollyman for questions.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/29", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/29/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/29/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/29", "id": 561045105, "node_id": "MDU6SXNzdWU1NjEwNDUxMDU=", "number": 29, "title": "Refactor logic in synth.py for excluding noxfile", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755708, "node_id": "MDU6TGFiZWwxODE0NzU1NzA4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20cleanup", "name": "type: cleanup", "color": "c5def5", "default": false, "description": "An internal cleanup or hygiene concern."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-06T14:23:19Z", "updated_at": "2020-02-06T17:46:33Z", "closed_at": "2020-02-06T17:46:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As explained in a [comment](https://github.com/googleapis/python-bigquery/pull/1#discussion_r375560206), preventing the synthtool for overriding the customized `noxfile.py` can be achieved in a more straightforward way than currently used.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/2", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/2/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/2/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/2", "id": 559700178, "node_id": "MDU6SXNzdWU1NTk3MDAxNzg=", "number": 2, "title": "Biquery - bigquery_client.query() Attribute Error", "user": {"login": "Seldakao", "id": 40172628, "node_id": "MDQ6VXNlcjQwMTcyNjI4", "avatar_url": "https://avatars1.githubusercontent.com/u/40172628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seldakao", "html_url": "https://github.com/Seldakao", "followers_url": "https://api.github.com/users/Seldakao/followers", "following_url": "https://api.github.com/users/Seldakao/following{/other_user}", "gists_url": "https://api.github.com/users/Seldakao/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seldakao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seldakao/subscriptions", "organizations_url": "https://api.github.com/users/Seldakao/orgs", "repos_url": "https://api.github.com/users/Seldakao/repos", "events_url": "https://api.github.com/users/Seldakao/events{/privacy}", "received_events_url": "https://api.github.com/users/Seldakao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": {"login": "shollyman", "id": 960486, "node_id": "MDQ6VXNlcjk2MDQ4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/960486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shollyman", "html_url": "https://github.com/shollyman", "followers_url": "https://api.github.com/users/shollyman/followers", "following_url": "https://api.github.com/users/shollyman/following{/other_user}", "gists_url": "https://api.github.com/users/shollyman/gists{/gist_id}", "starred_url": "https://api.github.com/users/shollyman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shollyman/subscriptions", "organizations_url": "https://api.github.com/users/shollyman/orgs", "repos_url": "https://api.github.com/users/shollyman/repos", "events_url": "https://api.github.com/users/shollyman/events{/privacy}", "received_events_url": "https://api.github.com/users/shollyman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shollyman", "id": 960486, "node_id": "MDQ6VXNlcjk2MDQ4Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/960486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shollyman", "html_url": "https://github.com/shollyman", "followers_url": "https://api.github.com/users/shollyman/followers", "following_url": "https://api.github.com/users/shollyman/following{/other_user}", "gists_url": "https://api.github.com/users/shollyman/gists{/gist_id}", "starred_url": "https://api.github.com/users/shollyman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shollyman/subscriptions", "organizations_url": "https://api.github.com/users/shollyman/orgs", "repos_url": "https://api.github.com/users/shollyman/repos", "events_url": "https://api.github.com/users/shollyman/events{/privacy}", "received_events_url": "https://api.github.com/users/shollyman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-02-03T17:53:58Z", "updated_at": "2020-06-09T21:47:30Z", "closed_at": "2020-06-09T21:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am fetching data from bigquery by using\r\n\r\nfrom google.cloud import bigquery\r\n...\r\ndef bigquery_to_df(query):\r\n    '''A small tool to convert the result of Bigquery to DataFrame'''\r\n\r\n    query_job = bigquery_client.query(query)\r\n    df = query_job.result().to_dataframe()\r\n    return df\r\n...\r\nBut got AttributeError which I didn't get before \r\n     10     query_job = bigquery_client.query(query)\r\n---> 11     df = query_job.result().to_dataframe()\r\n     12     return df\r\n     13 \r\n\r\nAttributeError: 'HTTPIterator' object has no attribute 'to_dataframe'\r\n\r\n#### Environment details\r\nMac Book Pro\r\nI used to use google-cloud-bigquery 0.28.0 and it worked fine for a long time until now. And even after I upgraded to 1.24.0 now the error still occurs.\r\n\r\nDoes anyone encounter the same issue?\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/3", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/3/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/3/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/3", "id": 559700458, "node_id": "MDU6SXNzdWU1NTk3MDA0NTg=", "number": 3, "title": "BigQuery: deprecate pandas code paths that do not use pyarrow", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-01-23T15:04:03Z", "updated_at": "2020-03-17T08:37:21Z", "closed_at": "2020-03-17T08:37:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the pandas-related BigQuery code, there is a lot of branching on whether `pyarrow` is available or not, and significant portions of business logic dealing with both cases.\r\n\r\nThe `pyarrow` side is often more efficient, more concise, and less prone to weird edge cases, thus it is preferred that it eventually becomes the only code path.\r\n\r\nThe goal of this issue is to emit deprecation warnings whenever a code path is hit that deals with `pandas`, but without the `pyarrow` dependency available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/4", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/4/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/4/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/4", "id": 559700969, "node_id": "MDU6SXNzdWU1NTk3MDA5Njk=", "number": 4, "title": "BigQuery API -- List Row with 'start Index' and Big 'Max Results' induce wrong output.", "user": {"login": "adussarps", "id": 10469161, "node_id": "MDQ6VXNlcjEwNDY5MTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/10469161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adussarps", "html_url": "https://github.com/adussarps", "followers_url": "https://api.github.com/users/adussarps/followers", "following_url": "https://api.github.com/users/adussarps/following{/other_user}", "gists_url": "https://api.github.com/users/adussarps/gists{/gist_id}", "starred_url": "https://api.github.com/users/adussarps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adussarps/subscriptions", "organizations_url": "https://api.github.com/users/adussarps/orgs", "repos_url": "https://api.github.com/users/adussarps/repos", "events_url": "https://api.github.com/users/adussarps/events{/privacy}", "received_events_url": "https://api.github.com/users/adussarps/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-23T09:23:51Z", "updated_at": "2020-03-04T12:03:22Z", "closed_at": "2020-03-04T12:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "###### Environment details\r\nUsing the **google-cloud-bigquery** client with version **1.23.1**\r\nPython 3.7 (on linux and macos)\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Using client.list_row with max_result and start_index induce wrong data to be pulled when \r\nthe client needs to use more than one page.\r\nHe then issued a second call with 'nextPageToken' and 'startIndex' wich seems to be incompatible.\r\n\r\n#### Code example\r\n\r\n```python\r\ndef table_to_df_iterator(project_id, dataset_id, table_id) -> iter:\r\n    table_full_id = project_id + \".\" + dataset_id + \".\" + table_id\r\n    client = get_client()\r\n    index = 0\r\n    while True:\r\n        offset = BATCH_SIZE_ROWS * index\r\n        df = client.list_rows(table_full_id, max_results=BATCH_SIZE_ROWS, \r\n                                          start_index=offset).to_dataframe()\r\n        if df.empty:\r\n            break\r\n        logging.info(f\"Offset is at {offset} got a dataframe of size {len(DataFrame.index)}\")\r\n        yield df\r\n        index += 1\r\n```\r\n#### Trace\r\n\r\n```cmd\r\nDEBUG:google.cloud.bigquery.table:Started reading table 'samsung-global-dashboard.1_Raw.Facebook_SEUK_VIDEO_20190101' with tabledata.list.\r\nDEBUG:urllib3.connectionpool:https://bigquery.googleapis.com:443 \"GET /bigquery/v2/projects/samsung-global-dashboard/datasets/1_Raw/tables/Facebook_SEUK_VIDEO_20190101/data?maxResults=100000&startIndex=100000 HTTP/1.1\" 200 None\r\nDEBUG:urllib3.connectionpool:https://bigquery.googleapis.com:443 \"GET /bigquery/v2/projects/samsung-global-dashboard/datasets/1_Raw/tables/Facebook_SEUK_VIDEO_20190101/data?pageToken=BEP6ZNORN4AQAAASAUIIBAEAAUNAQCEG6ADBBIENAYQP777777777777P4VAA%3D%3D%3D&maxResults=87354&startIndex=100000 HTTP/1.1\" 200 None\r\nDEBUG:urllib3.connectionpool:https://bigquery.googleapis.com:443 \"GET /bigquery/v2/projects/samsung-global-dashboard/datasets/1_Raw/tables/Facebook_SEUK_VIDEO_20190101/data?pageToken=BEP6ZNORN4AQAAASAUIIBAEAAUNAQCEG6ADBBOVKAUQP777777777777P4VAA%3D%3D%3D&maxResults=74708&startIndex=100000 HTTP/1.1\" 200 None\r\nDEBUG:urllib3.connectionpool:https://bigquery.googleapis.com:443 \"GET /bigquery/v2/projects/samsung-global-dashboard/datasets/1_Raw/tables/Facebook_SEUK_VIDEO_20190101/data?pageToken=BEP6ZNORN4AQAAASAUIIBAEAAUNAQCEG6ADBBVGHAQQP777777777777P4VAA%3D%3D%3D&maxResults=62062&startIndex=100000 HTTP/1.1\" 200 None\r\nDEBUG:urllib3.connectionpool:https://bigquery.googleapis.com:443 \"GET /bigquery/v2/projects/samsung-global-dashboard/datasets/1_Raw/tables/Facebook_SEUK_VIDEO_20190101/data?pageToken=BEP6ZNORN4AQAAASAUIIBAEAAUNAQCEG6ADBB3XEAMQP777777777777P4VAA%3D%3D%3D&maxResults=49416&startIndex=100000 HTTP/1.1\" 200 None\r\n\r\n```\r\n\r\n#### Idea to fix\r\nMake the second call use an updated startIndex instead of 'nextPageToken'\r\n\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/5", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/5/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/5/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/5", "id": 559701221, "node_id": "MDU6SXNzdWU1NTk3MDEyMjE=", "number": 5, "title": "BigQuery google.cloud.bigquery.job.LoadJob methods return types documentation", "user": {"login": "TanGolf", "id": 7602811, "node_id": "MDQ6VXNlcjc2MDI4MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7602811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TanGolf", "html_url": "https://github.com/TanGolf", "followers_url": "https://api.github.com/users/TanGolf/followers", "following_url": "https://api.github.com/users/TanGolf/following{/other_user}", "gists_url": "https://api.github.com/users/TanGolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/TanGolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TanGolf/subscriptions", "organizations_url": "https://api.github.com/users/TanGolf/orgs", "repos_url": "https://api.github.com/users/TanGolf/repos", "events_url": "https://api.github.com/users/TanGolf/events{/privacy}", "received_events_url": "https://api.github.com/users/TanGolf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-01-22T15:01:05Z", "updated_at": "2020-03-26T08:59:19Z", "closed_at": "2020-03-26T08:59:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day,\r\nI am using the Python client libraries for BigQuery. I noticed in the documentation that the google.cloud.bigquery.job.LoadJob methods do not indicate return types. They only seem to give a brief explanation of the method. \r\n\r\nIn particular, I am looking for what the return type of the result() method is. I noticed that in the source code, queryJob.result() returns an EmptyRowIterator, but I am not able to find out whether this is the case for loadJob's as there doesn't seem to be a  result() method defined for the LoadJob class. Is the result  used in this context that from google.api_core.future.polling.PollingFuture?\r\n\r\nMy goal is simply to determine whether the load job was successful or not.\r\n\r\nWould it be possible to add some information on the return types of the methods, as is the case with other classes in the library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/8", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/8/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/8/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/8", "id": 559702181, "node_id": "MDU6SXNzdWU1NTk3MDIxODE=", "number": 8, "title": "BigQuery: Document the use of the timeout parameter in samples", "user": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755962, "node_id": "MDU6TGFiZWwxODE0NzU1OTYy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20docs", "name": "type: docs", "color": "0000A0", "default": false, "description": "Improvement to the documentation for an API."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-17T18:44:30Z", "updated_at": "2020-03-09T07:29:28Z", "closed_at": "2020-03-09T07:29:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After adding the new `timeout` parameter to various public methods (#9987), we should demonstrate its usage in the code samples.\r\n\r\nUsers should be aware of this new feature, and should probably use it by default to avoid sporadic weird issues related to a method \"getting stuck\" at the transport layer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/9", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/9/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/9/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/9", "id": 559702537, "node_id": "MDU6SXNzdWU1NTk3MDI1Mzc=", "number": 9, "title": "BigQuery Storage API: RuntimeError: (\"can't start new thread\", 'occurred at index 0')", "user": {"login": "megancooper", "id": 8683055, "node_id": "MDQ6VXNlcjg2ODMwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8683055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/megancooper", "html_url": "https://github.com/megancooper", "followers_url": "https://api.github.com/users/megancooper/followers", "following_url": "https://api.github.com/users/megancooper/following{/other_user}", "gists_url": "https://api.github.com/users/megancooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/megancooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/megancooper/subscriptions", "organizations_url": "https://api.github.com/users/megancooper/orgs", "repos_url": "https://api.github.com/users/megancooper/repos", "events_url": "https://api.github.com/users/megancooper/events{/privacy}", "received_events_url": "https://api.github.com/users/megancooper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755631, "node_id": "MDU6TGFiZWwxODE0NzU1NjMx", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/needs%20more%20info", "name": "needs more info", "color": "e0ff32", "default": false, "description": "This issue needs more information from the customer to proceed."}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-11T15:07:37Z", "updated_at": "2020-06-16T16:32:30Z", "closed_at": "2020-06-16T16:32:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Issue\r\nI am running a spark script that needs to perform a `count(*)` query 30x for every row in a dataframe. The dataframe on average has 25000 rows, which means after completing the script should have made 750000 requests/queries to the BigQuery table.\r\n\r\nFor some reason with a large amount of executors I ran into the `RuntimeError` detailed in the stacktrace below, where it seems the google api core is unable to create a bigquery client. Is this because my script is creating too many clients? Apologies if my code is incorrect or I am using the client wrong, I am new to BigQuery and have not used this api before. What would be the best way to use the BIgQuery storage api in this use case?\r\n\r\n#### Environment details\r\n\r\n1. PySpark script running in AWS EMR clusters, with 30+ executors\r\n2. BigQuery Storage API (python)\r\n\r\n\r\n#### Steps to reproduce\r\n\r\n  1. ?\r\n\r\n#### Code Example Of PySpark Script\r\n\r\n```\r\ndef query_cache(query):\r\n    bqclient, bqstorageclient = clients()\r\n\r\n        dataframe = (\r\n            bqclient.query(query)\r\n                .result()\r\n                .to_dataframe(bqstorage_client=bqstorageclient)\r\n        )\r\n        return dataframe['f0_'][0]\r\n\r\n@pandas_udf(schema(), PandasUDFType.GROUPED_MAP)\r\ndef calc_counts(df):\r\n    query = \"select count(*) from dataset.table where ...{some column filters}...\"\r\n    df['count'] = df.apply(query_cache, args=(query), axis=1)\r\n```\r\n\r\n#### Stack trace\r\n```\r\npy4j.protocol.Py4JJavaError: An error occurred while calling o526.save.\r\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 3.0 failed 4 times, most recent failure: Lost task 1.3 in stage 3.0 (TID 54, ip-172-31-8-118.us-west-2.compute.internal, executor 7): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/worker.py\", line 377, in main\r\n    process()\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/worker.py\", line 372, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/serializers.py\", line 286, in dump_stream\r\n    for series in iterator:\r\n  File \"<string>\", line 1, in <lambda>\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/worker.py\", line 113, in wrapped\r\n    result = f(pd.concat(value_series, axis=1))\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/util.py\", line 113, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/home/hadoop/metrics_bq.py\", line 724, in calc_comps\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/frame.py\", line 6928, in apply\r\n    return op.get_result()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 186, in get_result\r\n    return self.apply_standard()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 292, in apply_standard\r\n    self.apply_series_generator()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 321, in apply_series_generator\r\n    results[i] = self.f(v)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 112, in f\r\n    return func(x, *args, **kwds)\r\n  File \"/home/hadoop/metrics_bq.py\", line 718, in count_comps_sql\r\n  File \"/home/hadoop/metrics_bq.py\", line 652, in query_cache\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py\", line 1636, in to_dataframe\r\n    bqstorage_client=bqstorage_client, dtypes=dtypes\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py\", line 1414, in _to_page_iterable\r\n    for item in bqstorage_download():\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery/_pandas_helpers.py\", line 632, in _download_table_bqstorage\r\n    requested_streams=requested_streams,\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery_storage_v1beta1/gapic/big_query_storage_client.py\", line 318, in create_read_session\r\n    request, retry=retry, timeout=timeout, metadata=metadata\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/gapic_v1/method.py\", line 143, in __call__\r\n    return wrapped_func(*args, **kwargs)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/retry.py\", line 277, in retry_wrapped_func\r\n    on_error=on_error,\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/retry.py\", line 182, in retry_target\r\n    return target()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/timeout.py\", line 214, in func_with_timeout\r\n    return func(*args, **kwargs)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/grpc_helpers.py\", line 57, in error_remapped_callable\r\n    return callable_(*args, **kwargs)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/grpc/_channel.py\", line 689, in __call__\r\n    wait_for_ready, compression)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/grpc/_channel.py\", line 676, in _blocking\r\n    ),), self._context)\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 500, in grpc._cython.cygrpc.Channel.segregated_call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 368, in grpc._cython.cygrpc._segregated_call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 362, in grpc._cython.cygrpc._segregated_call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 222, in grpc._cython.cygrpc._call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 250, in grpc._cython.cygrpc._call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 56, in grpc._cython.cygrpc._get_metadata\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 31, in grpc._cython.cygrpc._spawn_callback_async\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 22, in grpc._cython.cygrpc._spawn_callback_in_thread\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi\", line 119, in grpc._cython.cygrpc.ForkManagedThread.start\r\n  File \"/home/hadoop/conda/lib/python3.7/threading.py\", line 852, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: (\"can't start new thread\", 'occurred at index 0')\r\n\r\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:452)\r\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:172)\r\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:156)\r\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:122)\r\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:406)\r\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage2.processNext(Unknown Source)\r\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\r\n\tat org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1.hasNext(WholeStageCodegenExec.scala:636)\r\n\tat org.apache.spark.sql.execution.UnsafeExternalRowSorter.sort(UnsafeExternalRowSorter.java:216)\r\n\tat org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$2.apply(ShuffleExchangeExec.scala:295)\r\n\tat org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$2.apply(ShuffleExchangeExec.scala:266)\r\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\r\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\r\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\r\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\r\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\r\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:121)\r\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\r\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nDriver stacktrace:\r\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:2041)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:2029)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:2028)\r\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\r\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\r\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2028)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:966)\r\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:966)\r\n\tat scala.Option.foreach(Option.scala:257)\r\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:966)\r\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2262)\r\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2211)\r\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2200)\r\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\r\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:777)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2061)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2082)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2101)\r\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2126)\r\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:935)\r\n\tat org.apache.spark.rdd.RDD$$anonfun$foreachPartition$1.apply(RDD.scala:933)\r\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\r\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\r\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:363)\r\n\tat org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:933)\r\n\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:834)\r\n\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:68)\r\n\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:45)\r\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\r\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\r\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:86)\r\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)\r\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)\r\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:156)\r\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\r\n\tat org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)\r\n\tat org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)\r\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:80)\r\n\tat org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:80)\r\n\tat org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:676)\r\n\tat org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:676)\r\n\tat org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:78)\r\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:125)\r\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:73)\r\n\tat org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:676)\r\n\tat org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:285)\r\n\tat org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:271)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\r\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\r\n\tat py4j.Gateway.invoke(Gateway.java:282)\r\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\r\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\r\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/worker.py\", line 377, in main\r\n    process()\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/worker.py\", line 372, in process\r\n    serializer.dump_stream(func(split_index, iterator), outfile)\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/serializers.py\", line 286, in dump_stream\r\n    for series in iterator:\r\n  File \"<string>\", line 1, in <lambda>\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/worker.py\", line 113, in wrapped\r\n    result = f(pd.concat(value_series, axis=1))\r\n  File \"/mnt/yarn/usercache/hadoop/appcache/application_1576044279513_0001/container_1576044279513_0001_01_000009/pyspark.zip/pyspark/util.py\", line 113, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/home/hadoop/metrics_bq.py\", line 724, in calc_comps\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/frame.py\", line 6928, in apply\r\n    return op.get_result()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 186, in get_result\r\n    return self.apply_standard()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 292, in apply_standard\r\n    self.apply_series_generator()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 321, in apply_series_generator\r\n    results[i] = self.f(v)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/pandas/core/apply.py\", line 112, in f\r\n    return func(x, *args, **kwds)\r\n  File \"/home/hadoop/metrics_bq.py\", line 718, in count_comps_sql\r\n  File \"/home/hadoop/metrics_bq.py\", line 652, in query_cache\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py\", line 1636, in to_dataframe\r\n    bqstorage_client=bqstorage_client, dtypes=dtypes\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery/table.py\", line 1414, in _to_page_iterable\r\n    for item in bqstorage_download():\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery/_pandas_helpers.py\", line 632, in _download_table_bqstorage\r\n    requested_streams=requested_streams,\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/cloud/bigquery_storage_v1beta1/gapic/big_query_storage_client.py\", line 318, in create_read_session\r\n    request, retry=retry, timeout=timeout, metadata=metadata\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/gapic_v1/method.py\", line 143, in __call__\r\n    return wrapped_func(*args, **kwargs)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/retry.py\", line 277, in retry_wrapped_func\r\n    on_error=on_error,\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/retry.py\", line 182, in retry_target\r\n    return target()\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/timeout.py\", line 214, in func_with_timeout\r\n    return func(*args, **kwargs)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/google/api_core/grpc_helpers.py\", line 57, in error_remapped_callable\r\n    return callable_(*args, **kwargs)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/grpc/_channel.py\", line 689, in __call__\r\n    wait_for_ready, compression)\r\n  File \"/home/hadoop/conda/lib/python3.7/site-packages/grpc/_channel.py\", line 676, in _blocking\r\n    ),), self._context)\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 500, in grpc._cython.cygrpc.Channel.segregated_call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 368, in grpc._cython.cygrpc._segregated_call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 362, in grpc._cython.cygrpc._segregated_call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 222, in grpc._cython.cygrpc._call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi\", line 250, in grpc._cython.cygrpc._call\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 56, in grpc._cython.cygrpc._get_metadata\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 31, in grpc._cython.cygrpc._spawn_callback_async\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/credentials.pyx.pxi\", line 22, in grpc._cython.cygrpc._spawn_callback_in_thread\r\n  File \"src/python/grpcio/grpc/_cython/_cygrpc/fork_posix.pyx.pxi\", line 119, in grpc._cython.cygrpc.ForkManagedThread.start\r\n  File \"/home/hadoop/conda/lib/python3.7/threading.py\", line 852, in start\r\n    _start_new_thread(self._bootstrap, ())\r\nRuntimeError: (\"can't start new thread\", 'occurred at index 0')\r\n\r\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.handlePythonException(PythonRunner.scala:452)\r\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:172)\r\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:156)\r\n\tat org.apache.spark.sql.execution.python.ArrowPythonRunner$$anon$1.read(ArrowPythonRunner.scala:122)\r\n\tat org.apache.spark.api.python.BasePythonRunner$ReaderIterator.hasNext(PythonRunner.scala:406)\r\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage2.processNext(Unknown Source)\r\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\r\n\tat org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1.hasNext(WholeStageCodegenExec.scala:636)\r\n\tat org.apache.spark.sql.execution.UnsafeExternalRowSorter.sort(UnsafeExternalRowSorter.java:216)\r\n\tat org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$2.apply(ShuffleExchangeExec.scala:295)\r\n\tat org.apache.spark.sql.execution.exchange.ShuffleExchangeExec$$anonfun$2.apply(ShuffleExchangeExec.scala:266)\r\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\r\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\r\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\r\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\r\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\r\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\r\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\r\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:55)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:121)\r\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\r\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t... 1 more\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/11", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/11/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/11/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/11", "id": 559703425, "node_id": "MDU6SXNzdWU1NTk3MDM0MjU=", "number": 11, "title": "BigQuery: to_dataframe does not respect date fields", "user": {"login": "QuinRiva", "id": 6433951, "node_id": "MDQ6VXNlcjY0MzM5NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6433951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuinRiva", "html_url": "https://github.com/QuinRiva", "followers_url": "https://api.github.com/users/QuinRiva/followers", "following_url": "https://api.github.com/users/QuinRiva/following{/other_user}", "gists_url": "https://api.github.com/users/QuinRiva/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuinRiva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuinRiva/subscriptions", "organizations_url": "https://api.github.com/users/QuinRiva/orgs", "repos_url": "https://api.github.com/users/QuinRiva/repos", "events_url": "https://api.github.com/users/QuinRiva/events{/privacy}", "received_events_url": "https://api.github.com/users/QuinRiva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1826540398, "node_id": "MDU6TGFiZWwxODI2NTQwMzk4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/status:%20awaiting%20information", "name": "status: awaiting information", "color": "fef2c0", "default": false, "description": ""}, {"id": 1814755769, "node_id": "MDU6TGFiZWwxODE0NzU1NzY5", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-12-06T03:13:22Z", "updated_at": "2020-06-29T09:49:29Z", "closed_at": "2020-06-29T09:49:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Environment details\r\n\r\n1. google-cloud-bigquery: version 1.22\r\n2. OS type and version: Centos 7\r\n3. Python version: 3.6.9\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Download a table from BigQuery to a pandas Dataframe\r\n\r\n#### Code example\r\n\r\n```python\r\ndf = bq_client.list_rows(table).to_dataframe()\r\ndf.types\r\n\r\ncontractId                       int64\r\ncontractTypeId                   int64\r\naffiliateId                      int64\r\ninvoicePeriodId                  int64\r\nstartDate                       **object**\r\nendDate                         **object**\r\ncontractName                    object\r\ndetails                         object\r\nupdated            datetime64[ns, UTC]\r\ncreated            datetime64[ns, UTC]\r\ndtype: object\r\n```\r\nTimestamps seem to work fine, but **date** is just being treated as a string.\r\n\r\nTable schema is defined as:\r\n```python\r\n'contract' : [\r\n            bigquery.SchemaField(\"contractId\", \"INTEGER\", mode=\"REQUIRED\"),\r\n            bigquery.SchemaField(\"contractTypeId\", \"INTEGER\", mode=\"REQUIRED\"),\r\n            bigquery.SchemaField(\"affiliateId\", \"INTEGER\", mode=\"REQUIRED\"),\r\n            bigquery.SchemaField(\"invoicePeriodId\", \"INTEGER\", mode=\"REQUIRED\"),\r\n            bigquery.SchemaField(\"startDate\", \"DATE\", mode=\"REQUIRED\"),\r\n            bigquery.SchemaField(\"endDate\", \"DATE\", mode=\"NULLABLE\"),\r\n            bigquery.SchemaField(\"contractName\", \"STRING\", mode=\"NULLABLE\"),\r\n            bigquery.SchemaField(\"details\", \"STRING\", mode=\"NULLABLE\"),\r\n            bigquery.SchemaField(\"created\", \"TIMESTAMP\", mode=\"REQUIRED\"),\r\n            bigquery.SchemaField(\"updated\", \"TIMESTAMP\", mode=\"REQUIRED\"),\r\n        ]\r\n```\r\nThis should have anything to do with pagination, because the _startDate_ field is required; also the table only has 20 records.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/12", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/12/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/12/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/12", "id": 559703689, "node_id": "MDU6SXNzdWU1NTk3MDM2ODk=", "number": 12, "title": "BigQuery: test with all optional dependencies in Python 3.8", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755752, "node_id": "MDU6TGFiZWwxODE0NzU1NzUy", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": {"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-21T23:12:56Z", "updated_at": "2020-03-04T10:41:23Z", "closed_at": "2020-03-04T10:41:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Blocked on:\r\n\r\n- Apache Arrow: https://issues.apache.org/jira/browse/ARROW-6920\r\n- fastparquet: https://github.com/dask/fastparquet/issues/468", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/14", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/14/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/14/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/14", "id": 559704409, "node_id": "MDU6SXNzdWU1NTk3MDQ0MDk=", "number": 14, "title": "BigQuery: add `create_job` method that takes any kind of job config (and public configuration property to job classes)", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-12T22:05:45Z", "updated_at": "2020-03-26T10:24:52Z", "closed_at": "2020-03-26T10:24:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " **Is your feature request related to a problem? Please describe.**\r\n\r\nSome job failures are just due to current conditions and the job will succeed if started from the beginning. The problem is that this isn't a simple \"retry\" because the job configuration is mutable.\r\n\r\nFor example, BigQuery automatically populates a destination table if not set. In this case, the destination table should not be part of the retried request. In my opinion, this kind of logic is outside the scope of the client libraries, as it's not clear when destination table needs to be cleared just from the job resource.\r\n\r\n **Describe the solution you'd like**\r\n\r\n- [ ] Provide a `create_job` method that takes any JobConfig object.\r\n- [ ] Add a `configuration` property to job classes.\r\n- [ ] Add an example of retrying a job that has failed due to `403 rateLimitExceeded` (possibly with resetting the destination table if it was a query job)\r\n\r\n **Describe alternatives you've considered**\r\n\r\nAdd `.retry()` method to job classes. This is problematic, primarily because the configuration may have changed since the job was initially created, leading to unintended consequences or hard-to-debug failures.\r\n\r\n **Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n\r\nSee customer request for a method to retry any job at https://github.com/googleapis/google-cloud-python/issues/5555\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/16", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/16/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/16/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/16", "id": 559705377, "node_id": "MDU6SXNzdWU1NTk3MDUzNzc=", "number": 16, "title": "[BigQuery, BigQuery Storage]: Add option to use BigQuery Storage API to download results in BigQuery DB-API", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-14T23:27:21Z", "updated_at": "2020-02-25T18:47:01Z", "closed_at": "2020-02-25T18:47:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIn projects like superset, that use the SQL Alchemy connector, it can be quite slow to download large query results. The BigQuery Storage API speeds this up for `to_dataframe` / pandas, but not when used via the DB-API / SQL Alchemy. See: https://github.com/mxmzdlv/pybigquery/issues/41\r\n\r\n**Describe the solution you'd like**\r\n\r\nWhen creating a DB-API Connection, provide a way to supply a BQ Storage client, in addition to a BQ client. Use this client to download results for the relevant methods in the Cursor object.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nCould have a `use_bqstorage_api` option, but this would be inconsistent with the current constructor, which expects a client.\r\n\r\n/cc @yiga2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/17", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/17/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/17/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/17", "id": 559705632, "node_id": "MDU6SXNzdWU1NTk3MDU2MzI=", "number": 17, "title": "BigQuery: Field 'bar' is specified as REPEATED in provided schema which does not match REQUIRED as specified in the file.", "user": {"login": "timocb", "id": 42134934, "node_id": "MDQ6VXNlcjQyMTM0OTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/42134934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timocb", "html_url": "https://github.com/timocb", "followers_url": "https://api.github.com/users/timocb/followers", "following_url": "https://api.github.com/users/timocb/following{/other_user}", "gists_url": "https://api.github.com/users/timocb/gists{/gist_id}", "starred_url": "https://api.github.com/users/timocb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timocb/subscriptions", "organizations_url": "https://api.github.com/users/timocb/orgs", "repos_url": "https://api.github.com/users/timocb/repos", "events_url": "https://api.github.com/users/timocb/events{/privacy}", "received_events_url": "https://api.github.com/users/timocb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814755977, "node_id": "MDU6TGFiZWwxODE0NzU1OTc3", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755788, "node_id": "MDU6TGFiZWwxODE0NzU1Nzg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814755688, "node_id": "MDU6TGFiZWwxODE0NzU1Njg4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "plamut", "id": 1235663, "node_id": "MDQ6VXNlcjEyMzU2NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1235663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plamut", "html_url": "https://github.com/plamut", "followers_url": "https://api.github.com/users/plamut/followers", "following_url": "https://api.github.com/users/plamut/following{/other_user}", "gists_url": "https://api.github.com/users/plamut/gists{/gist_id}", "starred_url": "https://api.github.com/users/plamut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plamut/subscriptions", "organizations_url": "https://api.github.com/users/plamut/orgs", "repos_url": "https://api.github.com/users/plamut/repos", "events_url": "https://api.github.com/users/plamut/events{/privacy}", "received_events_url": "https://api.github.com/users/plamut/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2019-09-11T08:51:38Z", "updated_at": "2020-04-07T13:11:03Z", "closed_at": "2020-02-10T20:33:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an issue where it is not possible to upload a Pandas DataFrame with a repeated field to BigQuery. It is very much related to an issue I've had earlier: https://github.com/googleapis/google-cloud-python/issues/8093\r\n\r\nSince that has been resolved (by being able to specify the schema), I've created a separate issue. I also couldn't find issues related to REPEATED fields.\r\n\r\n#### Environment details\r\nMac OS X 10.14.5\r\nPython 3.6.8\r\n\r\nPackages:\r\n```\r\ngoogle-api-core==1.14.2\r\ngoogle-auth==1.6.3\r\ngoogle-cloud-bigquery==1.19.0\r\ngoogle-cloud-core==1.0.3\r\ngoogle-cloud-iam==0.2.1\r\ngoogle-cloud-logging==1.12.1\r\ngoogle-resumable-media==0.3.3\r\ngoogleapis-common-protos==1.6.0\r\n```\r\n\r\n#### Steps to reproduce\r\n1. Have a table with a REPEATED field\r\n2. Upload a Pandas DataFrame with a repeated field to this table\r\n3. Error\r\n\r\nAlso:\r\n- Getting the schema from BigQuery and using that in the `JobConfig` doesn't change the error.\r\n\r\n#### Code example\r\n```python\r\nimport pandas as pd\r\nfrom google.cloud import bigquery\r\n\r\n\r\nPROJECT = \"MY-PROJECT\"\r\nDATASET = \"MY_DATASET\"\r\nTABLE = \"MY_TABLE\"\r\n\r\n\r\n# My table schema\r\nschema = [\r\n    bigquery.SchemaField(\"foo\", \"INTEGER\", mode=\"REQUIRED\"),\r\n    bigquery.SchemaField(\"bar\", \"FLOAT\", mode=\"REPEATED\"),\r\n]\r\n\r\n\r\n# Set everything up\r\nclient = bigquery.Client(PROJECT)\r\ndataset_ref = client.dataset(DATASET)\r\ntable_ref = dataset_ref.table(TABLE)\r\n\r\n\r\n# Delete the table if exists\r\nprint(\"Deleting table if exists...\")\r\nclient.delete_table(table_ref, not_found_ok=True)\r\n\r\n\r\n# Create the table\r\nprint(\"Creating table...\")\r\ntable = bigquery.Table(table_ref, schema=schema)\r\ntable.time_partitioning = bigquery.TimePartitioning(\r\n    type_=bigquery.TimePartitioningType.DAY\r\n)\r\ntable = client.create_table(table, exists_ok=True)\r\n\r\nprint(\"Table schema:\")\r\nprint(table.schema)\r\n\r\nprint(\"Table partitioning:\")\r\nprint(table.time_partitioning)\r\n\r\n# Upload data to partition\r\ntable_partition = TABLE + \"$20190522\"\r\ntable_ref = dataset_ref.table(table_partition)\r\n\r\ndf = pd.DataFrame({\"foo\": [1, 2, 3], \"bar\": [[2.0, 3.0], [3.0, 4.0], [4.0, 5.0]]})\r\n\r\njob_config = bigquery.LoadJobConfig(schema=schema)\r\nclient.load_table_from_dataframe(df, table_ref, job_config=job_config).result()\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 51, in <module>\r\n    client.load_table_from_dataframe(df, table_ref, job_config=job_config).result()\r\n  File \"google/cloud/bigquery/job.py\", line 734, in result\r\n    return super(_AsyncJob, self).result(timeout=timeout)\r\n  File \"google/api_core/future/polling.py\", line 127, in result\r\n    raise self._exception\r\ngoogle.api_core.exceptions.BadRequest: 400 Error while reading data, error message: \r\n\r\nProvided schema is not compatible with the file 'prod-scotty-******'. \r\n\r\nField 'bar' is specified as REPEATED in provided schema \r\nwhich does not match REQUIRED as specified in the file.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/21", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/21/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/21/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/21", "id": 559707952, "node_id": "MDU6SXNzdWU1NTk3MDc5NTI=", "number": 21, "title": "BigQuery: Upload STRUCT / RECORD fields from load_table_from_dataframe", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755616, "node_id": "MDU6TGFiZWwxODE0NzU1NjE2", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/status:%20blocked", "name": "status: blocked", "color": "f9d0c4", "default": false, "description": "Resolving the issue is dependent on other work."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-05-30T00:37:15Z", "updated_at": "2020-08-03T04:47:01Z", "closed_at": "2020-08-03T04:47:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIf you have a pandas Series containing dictionaries, ideally this could be uploaded to BigQuery as a STRUCT / RECORD column. Currently this fails with a \"file does not exist error\" because the arrow write_table fails with \"\"ArrowInvalid: Nested column branch had multiple children\".\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nUpload of a RECORD column succeeds. This will require a fix to https://jira.apache.org/jira/browse/ARROW-2587.\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nChange intermediate file format to JSON or some other type. This isn't ideal, since most other types are row-oriented, but pandas DataFrames are column-oriented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-bigquery/issues/22", "repository_url": "https://api.github.com/repos/googleapis/python-bigquery", "labels_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/22/comments", "events_url": "https://api.github.com/repos/googleapis/python-bigquery/issues/22/events", "html_url": "https://github.com/googleapis/python-bigquery/issues/22", "id": 559708296, "node_id": "MDU6SXNzdWU1NTk3MDgyOTY=", "number": 22, "title": "BigQuery : ArrowTypeError when trying to push DataFrame with int columns with NaN values", "user": {"login": "sebastienharinck", "id": 9366256, "node_id": "MDQ6VXNlcjkzNjYyNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9366256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastienharinck", "html_url": "https://github.com/sebastienharinck", "followers_url": "https://api.github.com/users/sebastienharinck/followers", "following_url": "https://api.github.com/users/sebastienharinck/following{/other_user}", "gists_url": "https://api.github.com/users/sebastienharinck/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastienharinck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastienharinck/subscriptions", "organizations_url": "https://api.github.com/users/sebastienharinck/orgs", "repos_url": "https://api.github.com/users/sebastienharinck/repos", "events_url": "https://api.github.com/users/sebastienharinck/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastienharinck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814753695, "node_id": "MDU6TGFiZWwxODE0NzUzNjk1", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/api:%20bigquery", "name": "api: bigquery", "color": "fa84e2", "default": false, "description": "Issues related to the BigQuery API."}, {"id": 1814755728, "node_id": "MDU6TGFiZWwxODE0NzU1NzI4", "url": "https://api.github.com/repos/googleapis/python-bigquery/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": {"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "HemangChothani", "id": 50404902, "node_id": "MDQ6VXNlcjUwNDA0OTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/50404902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HemangChothani", "html_url": "https://github.com/HemangChothani", "followers_url": "https://api.github.com/users/HemangChothani/followers", "following_url": "https://api.github.com/users/HemangChothani/following{/other_user}", "gists_url": "https://api.github.com/users/HemangChothani/gists{/gist_id}", "starred_url": "https://api.github.com/users/HemangChothani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HemangChothani/subscriptions", "organizations_url": "https://api.github.com/users/HemangChothani/orgs", "repos_url": "https://api.github.com/users/HemangChothani/repos", "events_url": "https://api.github.com/users/HemangChothani/events{/privacy}", "received_events_url": "https://api.github.com/users/HemangChothani/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-04-12T14:14:36Z", "updated_at": "2020-05-13T07:30:12Z", "closed_at": "2020-05-13T07:30:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello !\r\n\r\nI am a new user of BigQuery python package. And I encounter a problem.\r\n\r\nTo simplify, I have a simple pandas DataFrame with a None value : \r\n```python\r\ndf = pd.DataFrame({'x': [1, 2, None, 4]})\r\n```\r\nFor pandas, this will be a **NaN** and the dtype of column will be **float64** by default. But I would like to push this DataFrame on BigQuery with an integer format for the column **x**. (the None will be a null)\r\n\r\nThanks to the new version of pandas (>= 0.24), we can change the type of the column and keep the NaN value : \r\n```python\r\ndf['x'] = df['x'].astype('Int64')\r\nprint(df.dtypes)\r\n# Int64\r\n```\r\n> source : https://stackoverflow.com/questions/11548005/numpy-or-pandas-keeping-array-type-as-integer-while-having-a-nan-value\r\n\r\nBut when I try to push this DataFrame to BigQuery, I encounter an ArrowTypeError : \r\n> ArrowTypeError: ('Did not pass numpy.dtype object', 'Conversion failed for column x with type Int64')\r\n\r\nI find some solutions that allow me to do the stuff. But I always need to update my table after execute **load_table_from_dataframe**... I think it must have a better solution for doing this. Any ideas please ? \r\n\r\nAt the end, I would like to have this table in BigQuery : \r\n```\r\nLine | x    |\r\n1    | 1    |\r\n2    | 2    |\r\n3    | null |\r\n4    | 4    |\r\n```\r\nwith x as an INTEGER type.\r\n\r\n#### The full code\r\n```python\r\nimport pandas as pd\r\nfrom google.cloud import bigquery\r\n\r\nprint(pd.__version__)\r\nprint(bigquery.__version__)\r\n\r\ndf = pd.DataFrame({'x': [1, 2, None, 4]})\r\n\r\ndf['x'] = df['x'].astype('Int64')\r\nprint(df.dtypes)\r\n\r\nclient = bigquery.Client()\r\ndataset_ref = client.dataset('test_dataset')\r\ntable_ref = dataset_ref.table('test')\r\n\r\nclient.load_table_from_dataframe(df, table_ref).result()\r\n```\r\n\r\n#### Stack trace\r\n```\r\nArrowTypeError                            Traceback (most recent call last)\r\n<ipython-input-4-fe43ea977e67> in <module>\r\n     14 table_ref = dataset_ref.table('test')\r\n     15 \r\n---> 16 client.load_table_from_dataframe(df, table_ref).result()\r\n\r\n/usr/local/lib/python3.7/site-packages/google/cloud/bigquery/client.py in load_table_from_dataframe(self, dataframe, destination, num_retries, job_id, job_id_prefix, location, project, job_config)\r\n   1045         \"\"\"\r\n   1046         buffer = six.BytesIO()\r\n-> 1047         dataframe.to_parquet(buffer)\r\n   1048 \r\n   1049         if job_config is None:\r\n\r\n/usr/local/lib/python3.7/site-packages/pandas/core/frame.py in to_parquet(self, fname, engine, compression, index, partition_cols, **kwargs)\r\n   2201         to_parquet(self, fname, engine,\r\n   2202                    compression=compression, index=index,\r\n-> 2203                    partition_cols=partition_cols, **kwargs)\r\n   2204 \r\n   2205     @Substitution(header='Whether to print column labels, default True')\r\n\r\n/usr/local/lib/python3.7/site-packages/pandas/io/parquet.py in to_parquet(df, path, engine, compression, index, partition_cols, **kwargs)\r\n    250     impl = get_engine(engine)\r\n    251     return impl.write(df, path, compression=compression, index=index,\r\n--> 252                       partition_cols=partition_cols, **kwargs)\r\n    253 \r\n    254 \r\n\r\n/usr/local/lib/python3.7/site-packages/pandas/io/parquet.py in write(self, df, path, compression, coerce_timestamps, index, partition_cols, **kwargs)\r\n    111         else:\r\n    112             from_pandas_kwargs = {'preserve_index': index}\r\n--> 113         table = self.api.Table.from_pandas(df, **from_pandas_kwargs)\r\n    114         if partition_cols is not None:\r\n    115             self.api.parquet.write_to_dataset(\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.Table.from_pandas()\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/pandas_compat.py in dataframe_to_arrays(df, schema, preserve_index, nthreads, columns, safe)\r\n    466         arrays = [convert_column(c, t)\r\n    467                   for c, t in zip(columns_to_convert,\r\n--> 468                                   convert_types)]\r\n    469     else:\r\n    470         from concurrent import futures\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/pandas_compat.py in <listcomp>(.0)\r\n    465     if nthreads == 1:\r\n    466         arrays = [convert_column(c, t)\r\n--> 467                   for c, t in zip(columns_to_convert,\r\n    468                                   convert_types)]\r\n    469     else:\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/pandas_compat.py in convert_column(col, ty)\r\n    461             e.args += (\"Conversion failed for column {0!s} with type {1!s}\"\r\n    462                        .format(col.name, col.dtype),)\r\n--> 463             raise e\r\n    464 \r\n    465     if nthreads == 1:\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/pandas_compat.py in convert_column(col, ty)\r\n    455     def convert_column(col, ty):\r\n    456         try:\r\n--> 457             return pa.array(col, type=ty, from_pandas=True, safe=safe)\r\n    458         except (pa.ArrowInvalid,\r\n    459                 pa.ArrowNotImplementedError,\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib.array()\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib._ndarray_to_array()\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib._ndarray_to_type()\r\n\r\n/usr/local/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowTypeError: ('Did not pass numpy.dtype object', 'Conversion failed for column x with type Int64')\r\n```\r\n\r\nThank you :)", "performed_via_github_app": null, "score": 1.0}]}