{"total_count": 6, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/paulc/dnslib/issues/14", "repository_url": "https://api.github.com/repos/paulc/dnslib", "labels_url": "https://api.github.com/repos/paulc/dnslib/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/paulc/dnslib/issues/14/comments", "events_url": "https://api.github.com/repos/paulc/dnslib/issues/14/events", "html_url": "https://github.com/paulc/dnslib/issues/14", "id": 648478285, "node_id": "MDU6SXNzdWU2NDg0NzgyODU=", "number": 14, "title": "Request: add NULL to QTYPE", "user": {"login": "DidierStevens", "id": 6815601, "node_id": "MDQ6VXNlcjY4MTU2MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6815601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DidierStevens", "html_url": "https://github.com/DidierStevens", "followers_url": "https://api.github.com/users/DidierStevens/followers", "following_url": "https://api.github.com/users/DidierStevens/following{/other_user}", "gists_url": "https://api.github.com/users/DidierStevens/gists{/gist_id}", "starred_url": "https://api.github.com/users/DidierStevens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DidierStevens/subscriptions", "organizations_url": "https://api.github.com/users/DidierStevens/orgs", "repos_url": "https://api.github.com/users/DidierStevens/repos", "events_url": "https://api.github.com/users/DidierStevens/events{/privacy}", "received_events_url": "https://api.github.com/users/DidierStevens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-30T20:41:02Z", "updated_at": "2020-07-19T14:13:08Z", "closed_at": "2020-07-19T14:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you mind adding the null record (experimental)?\r\n\r\nin dnslib.QTYPE, add 10:'NULL'\r\n\r\nI need it in one of my Python tools. I added it on my machine, but it would be easier for maintenance if it was in the master code.\r\n\r\nThanks,\r\n\r\nDidier", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paulc/dnslib/issues/12", "repository_url": "https://api.github.com/repos/paulc/dnslib", "labels_url": "https://api.github.com/repos/paulc/dnslib/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/paulc/dnslib/issues/12/comments", "events_url": "https://api.github.com/repos/paulc/dnslib/issues/12/events", "html_url": "https://github.com/paulc/dnslib/issues/12", "id": 638776954, "node_id": "MDU6SXNzdWU2Mzg3NzY5NTQ=", "number": 12, "title": "automated testing?", "user": {"login": "noci2012", "id": 1962961, "node_id": "MDQ6VXNlcjE5NjI5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1962961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noci2012", "html_url": "https://github.com/noci2012", "followers_url": "https://api.github.com/users/noci2012/followers", "following_url": "https://api.github.com/users/noci2012/following{/other_user}", "gists_url": "https://api.github.com/users/noci2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/noci2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noci2012/subscriptions", "organizations_url": "https://api.github.com/users/noci2012/orgs", "repos_url": "https://api.github.com/users/noci2012/repos", "events_url": "https://api.github.com/users/noci2012/events{/privacy}", "received_events_url": "https://api.github.com/users/noci2012/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T11:31:08Z", "updated_at": "2020-07-31T10:32:40Z", "closed_at": "2020-07-31T10:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is automated testing feasable?\r\nThat would verifying if the library works in various python versions simpler i guess.\r\n\r\nIt is one of the hurdles to keep it in gentoo.\r\nRef: https://bugs.gentoo.org/show_bug.cgi?id=718762\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paulc/dnslib/issues/11", "repository_url": "https://api.github.com/repos/paulc/dnslib", "labels_url": "https://api.github.com/repos/paulc/dnslib/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/paulc/dnslib/issues/11/comments", "events_url": "https://api.github.com/repos/paulc/dnslib/issues/11/events", "html_url": "https://github.com/paulc/dnslib/issues/11", "id": 631088327, "node_id": "MDU6SXNzdWU2MzEwODgzMjc=", "number": 11, "title": "Basic Parsing Usage", "user": {"login": "tkoch96", "id": 10697990, "node_id": "MDQ6VXNlcjEwNjk3OTkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10697990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkoch96", "html_url": "https://github.com/tkoch96", "followers_url": "https://api.github.com/users/tkoch96/followers", "following_url": "https://api.github.com/users/tkoch96/following{/other_user}", "gists_url": "https://api.github.com/users/tkoch96/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkoch96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkoch96/subscriptions", "organizations_url": "https://api.github.com/users/tkoch96/orgs", "repos_url": "https://api.github.com/users/tkoch96/repos", "events_url": "https://api.github.com/users/tkoch96/events{/privacy}", "received_events_url": "https://api.github.com/users/tkoch96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-04T19:25:17Z", "updated_at": "2020-06-14T16:14:34Z", "closed_at": "2020-06-14T14:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In your example usage, you parse a 'packet' using 'dnslib.DNSRecord.parse'. What is a 'packet'? I.e. what layer of the communication stack? Also, what data-type is 'packet'?\r\n\r\nWhat I'm trying to do is read DNS traffic from pcaps (I know how to filter out things that aren't DNS traffic), with a library like dpkt. dpkt can give me any layer of the stack I want, but neither the full packet nor solely the application layer seem to work as input to 'dnslib.DNSRecord.parse'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paulc/dnslib/issues/9", "repository_url": "https://api.github.com/repos/paulc/dnslib", "labels_url": "https://api.github.com/repos/paulc/dnslib/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/paulc/dnslib/issues/9/comments", "events_url": "https://api.github.com/repos/paulc/dnslib/issues/9/events", "html_url": "https://github.com/paulc/dnslib/issues/9", "id": 624467621, "node_id": "MDU6SXNzdWU2MjQ0Njc2MjE=", "number": 9, "title": "Error in malformed requests", "user": {"login": "brunobg", "id": 798800, "node_id": "MDQ6VXNlcjc5ODgwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/798800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunobg", "html_url": "https://github.com/brunobg", "followers_url": "https://api.github.com/users/brunobg/followers", "following_url": "https://api.github.com/users/brunobg/following{/other_user}", "gists_url": "https://api.github.com/users/brunobg/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunobg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunobg/subscriptions", "organizations_url": "https://api.github.com/users/brunobg/orgs", "repos_url": "https://api.github.com/users/brunobg/repos", "events_url": "https://api.github.com/users/brunobg/events{/privacy}", "received_events_url": "https://api.github.com/users/brunobg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T20:11:13Z", "updated_at": "2020-05-31T11:20:04Z", "closed_at": "2020-05-31T11:20:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get a bunch of these errors after running the server for a while:\r\n\r\n```\r\nTraceback (most recent call last):                                                                                        \r\nFile \"/usr/lib/python3.6/socketserver.py\", line 654, in process_request_thread\r\nself.finish_request(request, client_address)     \r\nFile \"/usr/lib/python3.6/socketserver.py\", line 364, in finish_request\r\nself.RequestHandlerClass(request, client_address, self)                                                                             \r\nFile \"/usr/lib/python3.6/socketserver.py\", line 724, in __init__\r\nself.handle()\r\nFile \"/usr/local/lib/python3.6/dist-packages/dnslib/server.py\", line 130, in handle                                                     length = struct.unpack(\"!H\",bytes(data[:2]))[0]                                                                                   struct.error: unpack requires a buffer of 2 bytes                                                                                     \r\n```\r\n\r\nApparently they are harmless, but I wonder if dnslib is handling something in the DNS protocol wrongly. If not it'd be nice to have a try/catch to avoid logging these. Any ideas of what is causing them? \r\n\r\nI also get a few like these:\r\n\r\n`Error unpacking DNSQuestion [offset=344]: Not enough bytes [offset=344,remaining=59,requested=79]\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paulc/dnslib/issues/7", "repository_url": "https://api.github.com/repos/paulc/dnslib", "labels_url": "https://api.github.com/repos/paulc/dnslib/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/paulc/dnslib/issues/7/comments", "events_url": "https://api.github.com/repos/paulc/dnslib/issues/7/events", "html_url": "https://github.com/paulc/dnslib/issues/7", "id": 615083803, "node_id": "MDU6SXNzdWU2MTUwODM4MDM=", "number": 7, "title": "threading.Thread.isAlive has been depreacated and removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-09T03:49:45Z", "updated_at": "2020-05-31T11:20:44Z", "closed_at": "2020-05-31T11:20:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The dnslib/server.py implements isAlive but checks for self.thread.isAlive which should be self.thread.is_alive. The isAlive method on DNSserver class can remain for backwards compatibility reasons.\r\n\r\n```\r\ndnslib/shellresolver.py\r\n114:    while udp_server.isAlive():\r\n\r\ndnslib/server.py\r\n358:    def isAlive(self):\r\n359:        return self.thread.isAlive()\r\n\r\ndnslib/fixedresolver.py\r\n96:    while udp_server.isAlive():\r\n\r\ndnslib/zoneresolver.py\r\n116:    while udp_server.isAlive():\r\n\r\ndnslib/proxy.py\r\n156:    while udp_server.isAlive():\r\n\r\ndnslib/intercept.py\r\n161:    while udp_server.isAlive():\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paulc/dnslib/issues/6", "repository_url": "https://api.github.com/repos/paulc/dnslib", "labels_url": "https://api.github.com/repos/paulc/dnslib/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/paulc/dnslib/issues/6/comments", "events_url": "https://api.github.com/repos/paulc/dnslib/issues/6/events", "html_url": "https://github.com/paulc/dnslib/issues/6", "id": 604112405, "node_id": "MDU6SXNzdWU2MDQxMTI0MDU=", "number": 6, "title": "Missing tags for releases past 0.9.7", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-21T16:28:37Z", "updated_at": "2020-05-31T11:21:01Z", "closed_at": "2020-05-31T11:21:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to pypi, the newest release is 0.9.12 but the newest tag on GitHub is 0.9.7. Could you please push the missing tags? Monitoring new releases via GitHub is much more convenient since it provides ATOM feeds.", "performed_via_github_app": null, "score": 1.0}]}