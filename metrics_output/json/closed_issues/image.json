{"total_count": 5, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/francescortiz/image/issues/10", "repository_url": "https://api.github.com/repos/francescortiz/image", "labels_url": "https://api.github.com/repos/francescortiz/image/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/francescortiz/image/issues/10/comments", "events_url": "https://api.github.com/repos/francescortiz/image/issues/10/events", "html_url": "https://github.com/francescortiz/image/issues/10", "id": 598413873, "node_id": "MDU6SXNzdWU1OTg0MTM4NzM=", "number": 10, "title": "Deprecation warning due to invalid escape sequences in Python 3.7", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-12T05:21:41Z", "updated_at": "2020-04-14T08:57:44Z", "closed_at": "2020-04-14T08:57:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals.\r\n\r\n```\r\nfind . -iname '*.py' | grep -Ev 'example|utl|samples' | xargs -P 4 -I{} python3.8 -Wall -m py_compile {} \r\n./image/utils.py:140: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if not tint or tint is 'None':\r\n./image/fields.py:109: DeprecationWarning: invalid escape sequence \\.\r\n  add_introspection_rules([], [\"^image\\.fields\\.ImageCenterField$\"])\r\n./image/fields.py:110: DeprecationWarning: invalid escape sequence \\.\r\n  add_introspection_rules([], [\"^image\\.video_field\\.VideoField$\"])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/francescortiz/image/issues/9", "repository_url": "https://api.github.com/repos/francescortiz/image", "labels_url": "https://api.github.com/repos/francescortiz/image/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/francescortiz/image/issues/9/comments", "events_url": "https://api.github.com/repos/francescortiz/image/issues/9/events", "html_url": "https://github.com/francescortiz/image/issues/9", "id": 285420168, "node_id": "MDU6SXNzdWUyODU0MjAxNjg=", "number": 9, "title": "Tensorflow object detection through web cam issue", "user": {"login": "Dasun1991", "id": 34977438, "node_id": "MDQ6VXNlcjM0OTc3NDM4", "avatar_url": "https://avatars0.githubusercontent.com/u/34977438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dasun1991", "html_url": "https://github.com/Dasun1991", "followers_url": "https://api.github.com/users/Dasun1991/followers", "following_url": "https://api.github.com/users/Dasun1991/following{/other_user}", "gists_url": "https://api.github.com/users/Dasun1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dasun1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dasun1991/subscriptions", "organizations_url": "https://api.github.com/users/Dasun1991/orgs", "repos_url": "https://api.github.com/users/Dasun1991/repos", "events_url": "https://api.github.com/users/Dasun1991/events{/privacy}", "received_events_url": "https://api.github.com/users/Dasun1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-02T12:38:26Z", "updated_at": "2018-01-03T11:02:01Z", "closed_at": "2018-01-03T11:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im new to Tensorflow and Opencv, Python . so that i followed a tutorial to detect objects through my webcam. but problem is web cam`s bulb is on but show nothing in IDLE. but if i do a simple programe to open my web cam using opencv and python web cam shows the display.\r\n\r\n**My tensorflow version 1.4.0 CUDD version 8.0 Python version 3.5**\r\n\r\n```\r\n`import numpy as np\r\nimport os\r\nimport six.moves.urllib as urllib\r\nimport sys\r\nimport tarfile\r\nimport tensorflow as tf\r\nimport zipfile\r\n\r\nfrom collections import defaultdict\r\nfrom io import StringIO\r\nfrom matplotlib import pyplot as plt\r\nfrom PIL import Image\r\n\r\nimport cv2\r\ncap = cv2.VideoCapture(0)\r\n\r\n# This is needed since the notebook is stored in the object_detection folder.\r\nsys.path.append(\"..\")\r\n\r\n\r\n# ## Object detection imports\r\n# Here are the imports from the object detection module.\r\n\r\n# In[3]:\r\n\r\nfrom utils import label_map_util\r\n\r\nfrom utils import visualization_utils as vis_util\r\n\r\n\r\n# # Model preparation \r\n\r\n# ## Variables\r\n# \r\n# Any model exported using the `export_inference_graph.py` tool can be loaded here simply by changing `PATH_TO_CKPT` to point to a new .pb file.  \r\n# \r\n# By default we use an \"SSD with Mobilenet\" model here. See the [detection model zoo](https://github.com/tensorflow/models/blob/master/object_detection/g3doc/detection_model_zoo.md) for a list of other models that can be run out-of-the-box with varying speeds and accuracies.\r\n\r\n# In[4]:\r\n\r\n# What model to download.\r\nMODEL_NAME = 'ssd_mobilenet_v1_coco_11_06_2017'\r\nMODEL_FILE = MODEL_NAME + '.tar.gz'\r\nDOWNLOAD_BASE = 'http://download.tensorflow.org/models/object_detection/'\r\n\r\n# Path to frozen detection graph. This is the actual model that is used for the object detection.\r\nPATH_TO_CKPT = MODEL_NAME + '/frozen_inference_graph.pb'\r\n\r\n# List of the strings that is used to add correct label for each box.\r\nPATH_TO_LABELS = os.path.join('data', 'mscoco_label_map.pbtxt')\r\n\r\nNUM_CLASSES = 90\r\n\r\n\r\n# ## Download Model\r\n\r\n# In[5]:\r\n\r\nopener = urllib.request.URLopener()\r\nopener.retrieve(DOWNLOAD_BASE + MODEL_FILE, MODEL_FILE)\r\ntar_file = tarfile.open(MODEL_FILE)\r\nfor file in tar_file.getmembers():\r\n  file_name = os.path.basename(file.name)\r\n  if 'frozen_inference_graph.pb' in file_name:\r\n    tar_file.extract(file, os.getcwd())\r\n\r\n\r\n# ## Load a (frozen) Tensorflow model into memory.\r\n\r\n# In[6]:\r\n\r\ndetection_graph = tf.Graph()\r\nwith detection_graph.as_default():\r\n  od_graph_def = tf.GraphDef()\r\n  with tf.gfile.GFile(PATH_TO_CKPT, 'rb') as fid:\r\n    serialized_graph = fid.read()\r\n    od_graph_def.ParseFromString(serialized_graph)\r\n    tf.import_graph_def(od_graph_def, name='')\r\n\r\n\r\n# ## Loading label map\r\n# Label maps map indices to category names, so that when our convolution network predicts `5`, we know that this corresponds to `airplane`.  Here we use internal utility functions, but anything that returns a dictionary mapping integers to appropriate string labels would be fine\r\n\r\n# In[7]:\r\n\r\nlabel_map = label_map_util.load_labelmap(PATH_TO_LABELS)\r\ncategories = label_map_util.convert_label_map_to_categories(label_map, max_num_classes=NUM_CLASSES, use_display_name=True)\r\ncategory_index = label_map_util.create_category_index(categories)\r\n\r\n\r\n# ## Helper code\r\n\r\n# In[8]:\r\n\r\ndef load_image_into_numpy_array(image):\r\n  (im_width, im_height) = image.size\r\n  return np.array(image.getdata()).reshape(\r\n      (im_height, im_width, 3)).astype(np.uint8)\r\n\r\n\r\n# # Detection\r\n\r\n# In[9]:\r\n\r\n# For the sake of simplicity we will use only 2 images:\r\n# image1.jpg\r\n# image2.jpg\r\n# If you want to test the code with your images, just add path to the images to the TEST_IMAGE_PATHS.\r\nPATH_TO_TEST_IMAGES_DIR = 'test_images'\r\nTEST_IMAGE_PATHS = [ os.path.join(PATH_TO_TEST_IMAGES_DIR, 'image{}.jpg'.format(i)) for i in range(1, 3) ]\r\n\r\n# Size, in inches, of the output images.\r\nIMAGE_SIZE = (12, 8)\r\n\r\n\r\n# In[10]:\r\n\r\nwith detection_graph.as_default():\r\n  with tf.Session(graph=detection_graph) as sess:\r\n    while True:\r\n      ret, image_np = cap.read()\r\n      # Expand dimensions since the model expects images to have shape: [1, None, None, 3]\r\n      image_np_expanded = np.expand_dims(image_np, axis=0)\r\n      image_tensor = detection_graph.get_tensor_by_name('image_tensor:0')\r\n      # Each box represents a part of the image where a particular object was detected.\r\n      boxes = detection_graph.get_tensor_by_name('detection_boxes:0')\r\n      # Each score represent how level of confidence for each of the objects.\r\n      # Score is shown on the result image, together with the class label.\r\n      scores = detection_graph.get_tensor_by_name('detection_scores:0')\r\n      classes = detection_graph.get_tensor_by_name('detection_classes:0')\r\n      num_detections = detection_graph.get_tensor_by_name('num_detections:0')\r\n      # Actual detection.\r\n      (boxes, scores, classes, num_detections) = sess.run(\r\n          [boxes, scores, classes, num_detections],\r\n          feed_dict={image_tensor: image_np_expanded})\r\n      # Visualization of the results of a detection.\r\n      vis_util.visualize_boxes_and_labels_on_image_array(\r\n          image_np,\r\n          np.squeeze(boxes),\r\n          np.squeeze(classes).astype(np.int32),\r\n          np.squeeze(scores),\r\n          category_index,\r\n          use_normalized_coordinates=True,\r\n          line_thickness=8)\r\n\r\n      cv2.imshow('object detection', cv2.resize(image_np, (800,600)))\r\n      if cv2.waitKey(25) & 0xFF == ord('q'):\r\n        cv2.destroyAllWindows() `\r\n\r\n```\r\n\r\n**This is the sample code i mentioned and if i run this this will open my web cam.** \r\n\r\n\r\n```\r\n`import numpy as np\r\nimport cv2\r\n\r\ncap = cv2.VideoCapture(1)\r\nfourcc = cv2.VideoWriter_fourcc(*'XVID')\r\nout = cv2.VideoWriter('output.avi',fourcc, 20.0, (640,480))\r\n\r\nwhile(True):\r\n    ret, frame = cap.read()\r\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\r\n    out.write(frame)\r\n    cv2.imshow('frame',gray)\r\n    if cv2.waitKey(1) & 0xFF == ord('q'):\r\n        break\r\n\r\ncap.release()\r\nout.release()\r\ncv2.destroyAllWindows()`\r\n```\r\n\r\nCan anyone help me to solve this problem pls?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/francescortiz/image/issues/5", "repository_url": "https://api.github.com/repos/francescortiz/image", "labels_url": "https://api.github.com/repos/francescortiz/image/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/francescortiz/image/issues/5/comments", "events_url": "https://api.github.com/repos/francescortiz/image/issues/5/events", "html_url": "https://github.com/francescortiz/image/issues/5", "id": 79517977, "node_id": "MDU6SXNzdWU3OTUxNzk3Nw==", "number": 5, "title": "Typo in setup.py", "user": {"login": "Roxysteve", "id": 12562818, "node_id": "MDQ6VXNlcjEyNTYyODE4", "avatar_url": "https://avatars2.githubusercontent.com/u/12562818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Roxysteve", "html_url": "https://github.com/Roxysteve", "followers_url": "https://api.github.com/users/Roxysteve/followers", "following_url": "https://api.github.com/users/Roxysteve/following{/other_user}", "gists_url": "https://api.github.com/users/Roxysteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/Roxysteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Roxysteve/subscriptions", "organizations_url": "https://api.github.com/users/Roxysteve/orgs", "repos_url": "https://api.github.com/users/Roxysteve/repos", "events_url": "https://api.github.com/users/Roxysteve/events{/privacy}", "received_events_url": "https://api.github.com/users/Roxysteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-22T16:28:41Z", "updated_at": "2015-05-24T08:52:11Z", "closed_at": "2015-05-23T16:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to install Image on a raspberry Pi2 using \"sudo pip-3.2 install Image\".\n\nInstall fails because of a reported typo at the \"Author\" line of the setup.py file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/francescortiz/image/issues/3", "repository_url": "https://api.github.com/repos/francescortiz/image", "labels_url": "https://api.github.com/repos/francescortiz/image/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/francescortiz/image/issues/3/comments", "events_url": "https://api.github.com/repos/francescortiz/image/issues/3/events", "html_url": "https://github.com/francescortiz/image/issues/3", "id": 64840498, "node_id": "MDU6SXNzdWU2NDg0MDQ5OA==", "number": 3, "title": "403 Forbidden returned when loading images with the image template tag", "user": {"login": "gregorvolkmann", "id": 1497977, "node_id": "MDQ6VXNlcjE0OTc5Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1497977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregorvolkmann", "html_url": "https://github.com/gregorvolkmann", "followers_url": "https://api.github.com/users/gregorvolkmann/followers", "following_url": "https://api.github.com/users/gregorvolkmann/following{/other_user}", "gists_url": "https://api.github.com/users/gregorvolkmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregorvolkmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregorvolkmann/subscriptions", "organizations_url": "https://api.github.com/users/gregorvolkmann/orgs", "repos_url": "https://api.github.com/users/gregorvolkmann/repos", "events_url": "https://api.github.com/users/gregorvolkmann/events{/privacy}", "received_events_url": "https://api.github.com/users/gregorvolkmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-27T19:57:26Z", "updated_at": "2015-04-12T17:14:13Z", "closed_at": "2015-04-12T17:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The browser can not load nor does django render the requested image to the local filesystem. The referenced image in the DOM with its token is not created in the `IMAGE_CACHE_ROOT`.\n### Example:\n\n**settings.py:**\n\n```\n[...]\n\nINSTALLED_APPS = (\n    [...]\n    'image',\n    'core',\n)\n\nMIDDLEWARE_CLASSES = (\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n)\n\n[...]\n\nDEBUG = True\nTEMPLATE_DEBUG = Tru\nSETTINGS_DIR = os.path.dirname(__file__)\nPROJECT_PATH = os.path.abspath(os.path.join(SETTINGS_DIR, os.pardir))\nIMAGE_CACHE_ROOT = os.path.join(PROJECT_PATH, 'image')\n\n[...]\n```\n\n**urls.py:**\n\n```\n[...]\nurl(r'^image/', include('image.urls')),\n```\n\n**page.html:**\n\n```\n{% load img %}\n[...]\n<img class=\"img-responsive img-thumbnail\" src=\"{% image object.image 'width=300&height=170' %}\" />\n[...]\n```\n\n**HTML Output:**\n\n```\n<img class=\"img-responsive img-thumbnail\" src=\"/image/object/image-name.jpg/image_token_c7e127e385c3f007ecb0432d01e0eb516963bcc1\">\n```\n\n**localhost:8000/image/object/image-name.jpg/image_token_c7e127e385c3f007ecb0432d01e0eb516963bcc1:**\n\n```\nForbidden\n```\n\n_Although the `DEBUG` setting is turned on, the visited image url returns only `Forbidden`._\n\nHow would a working settings.py look like?\n\n**Installed packages:**\n\n```\n(venv) User$ pip freeze\nDjango==1.7\nPillow==2.7.0\nargparse==1.2.1\ndjango-versatileimagefield==0.5.4\nimage==1.3.4\npsycopg2==2.5.4\nwsgiref==0.1.2\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/francescortiz/image/issues/1", "repository_url": "https://api.github.com/repos/francescortiz/image", "labels_url": "https://api.github.com/repos/francescortiz/image/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/francescortiz/image/issues/1/comments", "events_url": "https://api.github.com/repos/francescortiz/image/issues/1/events", "html_url": "https://github.com/francescortiz/image/issues/1", "id": 1481384, "node_id": "MDU6SXNzdWUxNDgxMzg0", "number": 1, "title": "Admin interface headcut", "user": {"login": "karan-agarwal-py", "id": 1003694, "node_id": "MDQ6VXNlcjEwMDM2OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1003694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karan-agarwal-py", "html_url": "https://github.com/karan-agarwal-py", "followers_url": "https://api.github.com/users/karan-agarwal-py/followers", "following_url": "https://api.github.com/users/karan-agarwal-py/following{/other_user}", "gists_url": "https://api.github.com/users/karan-agarwal-py/gists{/gist_id}", "starred_url": "https://api.github.com/users/karan-agarwal-py/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karan-agarwal-py/subscriptions", "organizations_url": "https://api.github.com/users/karan-agarwal-py/orgs", "repos_url": "https://api.github.com/users/karan-agarwal-py/repos", "events_url": "https://api.github.com/users/karan-agarwal-py/events{/privacy}", "received_events_url": "https://api.github.com/users/karan-agarwal-py/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2011-08-25T09:31:29Z", "updated_at": "2011-09-08T08:06:24Z", "closed_at": "2011-09-08T08:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I needed the Photo sharing and Video sharing django app. So I ended up here. I am a newbie....and all i want is to add this app(if this is an app...correct me if i am wrong) to my admin so that it looks like the screenshots u hav displayed. how do i integrate this app with my admin.. \n", "performed_via_github_app": null, "score": 1.0}]}