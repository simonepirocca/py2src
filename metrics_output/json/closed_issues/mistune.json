{"total_count": 174, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/lepture/mistune/issues/246", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/246/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/246/events", "html_url": "https://github.com/lepture/mistune/issues/246", "id": 646682411, "node_id": "MDU6SXNzdWU2NDY2ODI0MTE=", "number": 246, "title": "Fenced code blocks in list items insert spaces", "user": {"login": "yujiri8", "id": 16864184, "node_id": "MDQ6VXNlcjE2ODY0MTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/16864184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yujiri8", "html_url": "https://github.com/yujiri8", "followers_url": "https://api.github.com/users/yujiri8/followers", "following_url": "https://api.github.com/users/yujiri8/following{/other_user}", "gists_url": "https://api.github.com/users/yujiri8/gists{/gist_id}", "starred_url": "https://api.github.com/users/yujiri8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yujiri8/subscriptions", "organizations_url": "https://api.github.com/users/yujiri8/orgs", "repos_url": "https://api.github.com/users/yujiri8/repos", "events_url": "https://api.github.com/users/yujiri8/events{/privacy}", "received_events_url": "https://api.github.com/users/yujiri8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T13:24:41Z", "updated_at": "2020-06-27T13:38:51Z", "closed_at": "2020-06-27T13:38:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "````\r\n* text\r\n\r\n\t```\r\n\tline1\r\n\tline2\r\n\t```\r\n````\r\nExpected output:\r\n```\r\n<ul>\r\n<li><p>text</p>\r\n<pre><code>line1\r\nline2\r\n</code></pre>\r\n</li>\r\n</ul>\r\n```\r\nActual output:\r\n```\r\n<ul>\r\n<li><p>text</p>\r\n<pre><code>  line1\r\n  line2\r\n</code></pre>\r\n</li>\r\n</ul>\r\n\r\n```\r\nTwo spaces are inserted before each line of code, that don't appear in the source.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/241", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/241/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/241/events", "html_url": "https://github.com/lepture/mistune/issues/241", "id": 637560305, "node_id": "MDU6SXNzdWU2Mzc1NjAzMDU=", "number": 241, "title": "XSS Vulnerability in docs/Advanced.rst", "user": {"login": "CSDUMMI", "id": 31551856, "node_id": "MDQ6VXNlcjMxNTUxODU2", "avatar_url": "https://avatars1.githubusercontent.com/u/31551856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSDUMMI", "html_url": "https://github.com/CSDUMMI", "followers_url": "https://api.github.com/users/CSDUMMI/followers", "following_url": "https://api.github.com/users/CSDUMMI/following{/other_user}", "gists_url": "https://api.github.com/users/CSDUMMI/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSDUMMI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSDUMMI/subscriptions", "organizations_url": "https://api.github.com/users/CSDUMMI/orgs", "repos_url": "https://api.github.com/users/CSDUMMI/repos", "events_url": "https://api.github.com/users/CSDUMMI/events{/privacy}", "received_events_url": "https://api.github.com/users/CSDUMMI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T07:52:46Z", "updated_at": "2020-06-23T01:28:29Z", "closed_at": "2020-06-23T01:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "In said file there is an example code, which uses a format string to insert user input into HTML. I wanted to ask how this stands with XSS Vulnerabilities, given that there is no more escaping as far as I can see.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/240", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/240/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/240/events", "html_url": "https://github.com/lepture/mistune/issues/240", "id": 628903244, "node_id": "MDU6SXNzdWU2Mjg5MDMyNDQ=", "number": 240, "title": "Minor Documentation Typo", "user": {"login": "Amar1729", "id": 15623522, "node_id": "MDQ6VXNlcjE1NjIzNTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/15623522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amar1729", "html_url": "https://github.com/Amar1729", "followers_url": "https://api.github.com/users/Amar1729/followers", "following_url": "https://api.github.com/users/Amar1729/following{/other_user}", "gists_url": "https://api.github.com/users/Amar1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amar1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amar1729/subscriptions", "organizations_url": "https://api.github.com/users/Amar1729/orgs", "repos_url": "https://api.github.com/users/Amar1729/repos", "events_url": "https://api.github.com/users/Amar1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Amar1729/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T05:05:37Z", "updated_at": "2020-06-12T12:06:23Z", "closed_at": "2020-06-12T12:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/lepture/mistune/blame/14ce757ba0ff1f0d78c9f71f193ec4e3072c4836/docs/advanced.rst#L22\r\n\r\nhttps://mistune.readthedocs.io/en/latest/advanced.html#use-renderers\r\n\r\n```\r\nclass MyRenderer(mistune.HTMLRenderer):\r\n    def codespan(self, text):\r\n        if text.startswith('$') and text.endswith('$'):\r\n            return '<span class=\"math\">' + escape(text) + '</span>'\r\n        return '<code>' + escape(text) + '</code>'\r\n\r\n# use customized renderer\r\nmarkdown = mistune.create_markdown(renderer=MyRenderer())\r\nprint(markdown('hi `$a^2=4`'))\r\n```\r\n\r\nCurrently your example `MyRenderer` is showing how to render math, but I think you meant to render the text:\r\n\r\n    'hi `$a^2=4$`'\r\n\r\n(currently missing trailing `$`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/239", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/239/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/239/events", "html_url": "https://github.com/lepture/mistune/issues/239", "id": 624969358, "node_id": "MDU6SXNzdWU2MjQ5NjkzNTg=", "number": 239, "title": "Wrap code blocks across screen", "user": {"login": "darkLord19", "id": 16662014, "node_id": "MDQ6VXNlcjE2NjYyMDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/16662014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkLord19", "html_url": "https://github.com/darkLord19", "followers_url": "https://api.github.com/users/darkLord19/followers", "following_url": "https://api.github.com/users/darkLord19/following{/other_user}", "gists_url": "https://api.github.com/users/darkLord19/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkLord19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkLord19/subscriptions", "organizations_url": "https://api.github.com/users/darkLord19/orgs", "repos_url": "https://api.github.com/users/darkLord19/repos", "events_url": "https://api.github.com/users/darkLord19/events{/privacy}", "received_events_url": "https://api.github.com/users/darkLord19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T15:22:16Z", "updated_at": "2020-05-26T16:48:15Z", "closed_at": "2020-05-26T16:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to wrap lines inside code blocks(```) or provide scrolling like behaviour such as one found in GitHub markdown rendering. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/238", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/238/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/238/events", "html_url": "https://github.com/lepture/mistune/issues/238", "id": 619555446, "node_id": "MDU6SXNzdWU2MTk1NTU0NDY=", "number": 238, "title": "Picture url escape bug", "user": {"login": "ygcaicn", "id": 17684070, "node_id": "MDQ6VXNlcjE3Njg0MDcw", "avatar_url": "https://avatars1.githubusercontent.com/u/17684070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ygcaicn", "html_url": "https://github.com/ygcaicn", "followers_url": "https://api.github.com/users/ygcaicn/followers", "following_url": "https://api.github.com/users/ygcaicn/following{/other_user}", "gists_url": "https://api.github.com/users/ygcaicn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ygcaicn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ygcaicn/subscriptions", "organizations_url": "https://api.github.com/users/ygcaicn/orgs", "repos_url": "https://api.github.com/users/ygcaicn/repos", "events_url": "https://api.github.com/users/ygcaicn/events{/privacy}", "received_events_url": "https://api.github.com/users/ygcaicn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-16T21:06:00Z", "updated_at": "2020-05-17T05:47:11Z", "closed_at": "2020-05-17T03:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "`mistune.html(\"![](/media/name 1.png)\")`\r\nurl contain backspace.\r\n\r\ngot:\r\n```\r\n'<p>![](/media/name 1.png)</p>\\n'\r\n```\r\n\r\nexpect:\r\n```\r\n'<p><img src=\"/media/name%201.png\" alt=\"\" /></p>\\n'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/235", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/235/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/235/events", "html_url": "https://github.com/lepture/mistune/issues/235", "id": 605691979, "node_id": "MDU6SXNzdWU2MDU2OTE5Nzk=", "number": 235, "title": "2.0.0a4 is ~2.5 times slower than 0.8.4", "user": {"login": "a-vrma", "id": 29077900, "node_id": "MDQ6VXNlcjI5MDc3OTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/29077900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-vrma", "html_url": "https://github.com/a-vrma", "followers_url": "https://api.github.com/users/a-vrma/followers", "following_url": "https://api.github.com/users/a-vrma/following{/other_user}", "gists_url": "https://api.github.com/users/a-vrma/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-vrma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-vrma/subscriptions", "organizations_url": "https://api.github.com/users/a-vrma/orgs", "repos_url": "https://api.github.com/users/a-vrma/repos", "events_url": "https://api.github.com/users/a-vrma/events{/privacy}", "received_events_url": "https://api.github.com/users/a-vrma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T16:53:32Z", "updated_at": "2020-04-23T23:47:55Z", "closed_at": "2020-04-23T23:47:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was benchmarking and noticed that mistune 2.0.0a4 is around 2.5 times slower than 0.8.4 on the benchmark suite over at https://github.com/miyuchina/mistletoe. The results I got were surprising:\r\n\r\n```\r\nmistune 0.8.4: 8.952760785999999\r\nmistune 2.0.0a4: 23.15826605300026\r\n```\r\n\r\nInterestingly, this puts mistune's speed at a comparable level to mistletoe, which has a far more robust and spec-compliant parser. Is this something that you are looking to fix with the final 2.0 release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/233", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/233/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/233/events", "html_url": "https://github.com/lepture/mistune/issues/233", "id": 602658181, "node_id": "MDU6SXNzdWU2MDI2NTgxODE=", "number": 233, "title": "Trying to implement a plugin for checkboxes", "user": {"login": "dsancheznet", "id": 4673828, "node_id": "MDQ6VXNlcjQ2NzM4Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4673828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsancheznet", "html_url": "https://github.com/dsancheznet", "followers_url": "https://api.github.com/users/dsancheznet/followers", "following_url": "https://api.github.com/users/dsancheznet/following{/other_user}", "gists_url": "https://api.github.com/users/dsancheznet/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsancheznet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsancheznet/subscriptions", "organizations_url": "https://api.github.com/users/dsancheznet/orgs", "repos_url": "https://api.github.com/users/dsancheznet/repos", "events_url": "https://api.github.com/users/dsancheznet/events{/privacy}", "received_events_url": "https://api.github.com/users/dsancheznet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-19T08:39:53Z", "updated_at": "2020-04-19T14:53:38Z", "closed_at": "2020-04-19T14:49:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\nI'm working on a plugin to render checkboxes as in https://help.github.com/es/github/managing-your-work-on-github/about-task-lists which are immensely useful and although not being part of the original MD specification, they are part of the Github MD. \r\n\r\nMy code is as following (based on the example you have given a few hours back):\r\n```python3\r\nimport re\r\n\r\n__all__ = ['plugin_checkbox']\r\n\r\nCHECKBOX_PATTERN = (\r\n    r'^-[ ]\\[([ xX])\\][ ]?([^\\n]*)'\r\n)\r\n\r\ndef parse_checkbox(self, m, state):\r\n    check = m.group(1)\r\n    text = m.group(2)\r\n    if check.upper()=='X':\r\n        return 'checkbox', text, True\r\n    else:\r\n        return 'checkbox', text, False\r\n\r\n# define how to render HTML\r\ndef render_html_checkbox(text, state):\r\n    if state==False:\r\n        status=\"\"\r\n    else:\r\n        status=\" checked\"\r\n    return f'<input type=\"checkbox\"{status}>{text}'\r\n\r\ndef plugin_checkbox(md):\r\n    md.inline.register_rule('checkbox', CHECKBOX_PATTERN, parse_checkbox)\r\n    md.inline.rules.append('checkbox')\r\n    if md.renderer.NAME == 'html':\r\n        md.renderer.register('checkbox', render_html_checkbox)\r\n```\r\n\r\nBut whenever I try to hook up my plugin I get the following error:\r\n`NameError: name 'plugin_checkbox' is not defined`\r\n\r\nWhat am I doing wrong?\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/232", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/232/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/232/events", "html_url": "https://github.com/lepture/mistune/issues/232", "id": 599681220, "node_id": "MDU6SXNzdWU1OTk2ODEyMjA=", "number": 232, "title": "list item levels ignored in itemized list inside directive ", "user": {"login": "timhemel", "id": 758520, "node_id": "MDQ6VXNlcjc1ODUyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/758520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timhemel", "html_url": "https://github.com/timhemel", "followers_url": "https://api.github.com/users/timhemel/followers", "following_url": "https://api.github.com/users/timhemel/following{/other_user}", "gists_url": "https://api.github.com/users/timhemel/gists{/gist_id}", "starred_url": "https://api.github.com/users/timhemel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timhemel/subscriptions", "organizations_url": "https://api.github.com/users/timhemel/orgs", "repos_url": "https://api.github.com/users/timhemel/repos", "events_url": "https://api.github.com/users/timhemel/events{/privacy}", "received_events_url": "https://api.github.com/users/timhemel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T15:57:43Z", "updated_at": "2020-04-19T03:54:09Z", "closed_at": "2020-04-19T03:54:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Observation\r\n\r\nI am using the following code to print out an AST element:\r\n\r\n``` python\r\n#!/usr/bin/env python3\r\n\r\nimport sys\r\nimport mistune\r\nfrom mistune import AstRenderer\r\nfrom mistune.directives.admonition import Admonition\r\n\r\nmarkdown = mistune.create_markdown(renderer=mistune.AstRenderer(), plugins=['table', Admonition()])\r\nx = markdown(sys.stdin.read())\r\nprint(x)\r\n```\r\nI test the following two inputs: `test1.md`:\r\n\r\n```\r\n# test 1\r\n\r\n* item 1\r\n  - subitem 1\r\n* item 2\r\n* item 3\r\n\r\n```\r\nand `test2.md`:\r\n\r\n```\r\n# test 2\r\n\r\n.. warning::\r\n\r\n   * item 1\r\n     - subitem 1\r\n   * item 2\r\n   * item 3\r\n```\r\n\r\n# Expected behaviour\r\n\r\n```\r\n$ python3 poc.py < test1.md \r\n[{'type': 'heading', 'children': [{'type': 'text', 'text': 'test 1'}], 'level': 1}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 1'}]}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'subitem 1'}]}], 'level': 2}], 'ordered': False, 'level': 2}], 'level': 1}, {'type': 'list_item', 'children': [{'type': 'paragraph', 'children': [{'type': 'text', 'text': 'item 2'}]}], 'level': 1}, {'type': 'list_item', 'children': [{'type': 'paragraph', 'children': [{'type': 'text', 'text': 'item 3'}]}], 'level': 1}], 'ordered': False, 'level': 1}]\r\n$ python3 poc.py < test2.md \r\n[{'type': 'heading', 'children': [{'type': 'text', 'text': 'test 2'}], 'level': 1}, {'type': 'admonition', 'children': [{'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 1'}]}], 'level': 1}], 'ordered': False, 'level': 1}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'subitem 1'}]}], 'level': 2}], 'ordered': False, 'level': 1}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 2'}]}], 'level': 1}, {'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 3'}]}], 'level': 1}], 'ordered': False, 'level': 1}], 'name': 'warning', 'title': ''}]\r\n```\r\n\r\n# Observed behaviour\r\n\r\n```\r\n$ python3 poc.py < test1.md \r\n[{'type': 'heading', 'children': [{'type': 'text', 'text': 'test 1'}], 'level': 1}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 1'}]}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'subitem 1'}]}], 'level': 2}], 'ordered': False, 'level': 2}], 'level': 1}, {'type': 'list_item', 'children': [{'type': 'paragraph', 'children': [{'type': 'text', 'text': 'item 2'}]}], 'level': 1}, {'type': 'list_item', 'children': [{'type': 'paragraph', 'children': [{'type': 'text', 'text': 'item 3'}]}], 'level': 1}], 'ordered': False, 'level': 1}]\r\n$ python3 poc.py < test2.md \r\n[{'type': 'heading', 'children': [{'type': 'text', 'text': 'test 2'}], 'level': 1}, {'type': 'admonition', 'children': [{'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 1'}]}], 'level': 1}], 'ordered': False, 'level': 1}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'subitem 1'}]}], 'level': 1}], 'ordered': False, 'level': 1}, {'type': 'list', 'children': [{'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 2'}]}], 'level': 1}, {'type': 'list_item', 'children': [{'type': 'block_text', 'children': [{'type': 'text', 'text': 'item 3'}]}], 'level': 1}], 'ordered': False, 'level': 1}], 'name': 'warning', 'title': ''}]\r\n```\r\nThe `level` attribute for list item `subitem 1` in the parsing of `test2.md` is 1, but I expected it to be 2.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/231", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/231/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/231/events", "html_url": "https://github.com/lepture/mistune/issues/231", "id": 598149355, "node_id": "MDU6SXNzdWU1OTgxNDkzNTU=", "number": 231, "title": "Trailing whitespaces not stripped", "user": {"login": "satyamtg", "id": 17774888, "node_id": "MDQ6VXNlcjE3Nzc0ODg4", "avatar_url": "https://avatars1.githubusercontent.com/u/17774888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satyamtg", "html_url": "https://github.com/satyamtg", "followers_url": "https://api.github.com/users/satyamtg/followers", "following_url": "https://api.github.com/users/satyamtg/following{/other_user}", "gists_url": "https://api.github.com/users/satyamtg/gists{/gist_id}", "starred_url": "https://api.github.com/users/satyamtg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satyamtg/subscriptions", "organizations_url": "https://api.github.com/users/satyamtg/orgs", "repos_url": "https://api.github.com/users/satyamtg/repos", "events_url": "https://api.github.com/users/satyamtg/events{/privacy}", "received_events_url": "https://api.github.com/users/satyamtg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-11T00:12:21Z", "updated_at": "2020-04-11T06:16:13Z", "closed_at": "2020-04-11T06:16:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "If we run mistune with HTMLRenderer, and if the input contains trailing whitespace in some lines, then they should automatically be stripped and handled. Currently mistune crashes with list index out of bounds error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/229", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/229/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/229/events", "html_url": "https://github.com/lepture/mistune/issues/229", "id": 589641363, "node_id": "MDU6SXNzdWU1ODk2NDEzNjM=", "number": 229, "title": "Multiple pairs of __ interfere with each other", "user": {"login": "yujiri8", "id": 16864184, "node_id": "MDQ6VXNlcjE2ODY0MTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/16864184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yujiri8", "html_url": "https://github.com/yujiri8", "followers_url": "https://api.github.com/users/yujiri8/followers", "following_url": "https://api.github.com/users/yujiri8/following{/other_user}", "gists_url": "https://api.github.com/users/yujiri8/gists{/gist_id}", "starred_url": "https://api.github.com/users/yujiri8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yujiri8/subscriptions", "organizations_url": "https://api.github.com/users/yujiri8/orgs", "repos_url": "https://api.github.com/users/yujiri8/repos", "events_url": "https://api.github.com/users/yujiri8/events{/privacy}", "received_events_url": "https://api.github.com/users/yujiri8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-28T19:19:34Z", "updated_at": "2020-03-31T09:03:08Z", "closed_at": "2020-03-31T09:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Input: `__one__ and __two__`\r\n\r\nOutput: `<strong>one__ and __two</strong>`\r\n\r\nWith asterisks (or one of each) it works:\r\n\r\nInput: `**one** and **two**`\r\n\r\nOutput: `<strong>one</strong> and <strong>two</strong>`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/228", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/228/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/228/events", "html_url": "https://github.com/lepture/mistune/issues/228", "id": 588488333, "node_id": "MDU6SXNzdWU1ODg0ODgzMzM=", "number": 228, "title": "Nested fenced code blocks have an extra space", "user": {"login": "yujiri8", "id": 16864184, "node_id": "MDQ6VXNlcjE2ODY0MTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/16864184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yujiri8", "html_url": "https://github.com/yujiri8", "followers_url": "https://api.github.com/users/yujiri8/followers", "following_url": "https://api.github.com/users/yujiri8/following{/other_user}", "gists_url": "https://api.github.com/users/yujiri8/gists{/gist_id}", "starred_url": "https://api.github.com/users/yujiri8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yujiri8/subscriptions", "organizations_url": "https://api.github.com/users/yujiri8/orgs", "repos_url": "https://api.github.com/users/yujiri8/repos", "events_url": "https://api.github.com/users/yujiri8/events{/privacy}", "received_events_url": "https://api.github.com/users/yujiri8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226950, "node_id": "MDU6TGFiZWw4MTIyNjk1MA==", "url": "https://api.github.com/repos/lepture/mistune/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T15:01:31Z", "updated_at": "2020-04-20T04:21:17Z", "closed_at": "2020-04-20T04:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Input:\r\n```\r\n* test\r\n    ```\r\n    print()\r\n    ```\r\n```\r\nOutput:\r\n```\r\n<ul>\r\n<li>test<pre><code>  print()\r\n</code></pre>\r\n</li>\r\n</ul>\r\n```\r\n\r\nNote the extra two spaces inserted. It seems to work with an indented code block, but then I have to put no blank line between it and then next content after the list element (or else it shows up with a trailing blank line inside the code), which looks very ugly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/227", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/227/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/227/events", "html_url": "https://github.com/lepture/mistune/issues/227", "id": 587418820, "node_id": "MDU6SXNzdWU1ODc0MTg4MjA=", "number": 227, "title": "Custom InlineLexer doesnt work?", "user": {"login": "EmmanuelPerezP", "id": 13814630, "node_id": "MDQ6VXNlcjEzODE0NjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/13814630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmmanuelPerezP", "html_url": "https://github.com/EmmanuelPerezP", "followers_url": "https://api.github.com/users/EmmanuelPerezP/followers", "following_url": "https://api.github.com/users/EmmanuelPerezP/following{/other_user}", "gists_url": "https://api.github.com/users/EmmanuelPerezP/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmmanuelPerezP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmmanuelPerezP/subscriptions", "organizations_url": "https://api.github.com/users/EmmanuelPerezP/orgs", "repos_url": "https://api.github.com/users/EmmanuelPerezP/repos", "events_url": "https://api.github.com/users/EmmanuelPerezP/events{/privacy}", "received_events_url": "https://api.github.com/users/EmmanuelPerezP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-25T03:36:13Z", "updated_at": "2020-04-21T22:25:03Z", "closed_at": "2020-04-21T22:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "im not sure if im doing this correctly, but i was trying to implement custom emotes and my code doesnt work, im not sure what im doing wrong? some help would be appreciated, im using v0.8.4\r\n\r\n```Python\r\nimport copy\r\nimport re\r\nimport mistune\r\nfrom mistune import Renderer, InlineGrammar, InlineLexer, Markdown\r\n\r\nclass EmoteRenderer(Renderer):\r\n    def emotes(self, text):\r\n        return '<a href=\"https://emote.url\">%s</a>' % (text)\r\n\r\nclass EmoteInlineLexer(InlineLexer):\r\n\r\n    def enable_emotes(self):\r\n        # add emotes rules\r\n        self.rules.emotes = re.compile(r':(\\w+):')\r\n\r\n        # Add emotes parser to default rules\r\n        # you can insert it some place you like\r\n        # but place matters, maybe 3 is not good\r\n        self.default_rules.insert(0, 'emotes')\r\n\r\n    def output_emotes(self, m):\r\n        text = m.group(1)\r\n        # you can create an custom render\r\n        # you can also return the html if you like\r\n        return self.renderer.emotes(text)\r\n\r\nrenderer = EmoteRenderer()\r\ninline = EmoteInlineLexer(renderer)\r\n# enable the feature\r\ninline.enable_emotes()\r\nmarkdown = Markdown(renderer=renderer, inline=inline)\r\nprint(markdown('hello this should be an emote :emote:'))\r\n```\r\nthat last print prints: `<p>hello this should be an emote :emote:</p>`\r\nand it should print: `<p>hello this should be an emote <a href=\"https://emote.url\">emote</a></p>`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/225", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/225/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/225/events", "html_url": "https://github.com/lepture/mistune/issues/225", "id": 581689247, "node_id": "MDU6SXNzdWU1ODE2ODkyNDc=", "number": 225, "title": "Pip upload out of date?", "user": {"login": "yujiri8", "id": 16864184, "node_id": "MDQ6VXNlcjE2ODY0MTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/16864184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yujiri8", "html_url": "https://github.com/yujiri8", "followers_url": "https://api.github.com/users/yujiri8/followers", "following_url": "https://api.github.com/users/yujiri8/following{/other_user}", "gists_url": "https://api.github.com/users/yujiri8/gists{/gist_id}", "starred_url": "https://api.github.com/users/yujiri8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yujiri8/subscriptions", "organizations_url": "https://api.github.com/users/yujiri8/orgs", "repos_url": "https://api.github.com/users/yujiri8/repos", "events_url": "https://api.github.com/users/yujiri8/events{/privacy}", "received_events_url": "https://api.github.com/users/yujiri8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-15T14:09:33Z", "updated_at": "2020-03-21T18:15:41Z", "closed_at": "2020-03-21T18:15:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed mistune from pip and got 0.8.4. Sounds like that's pretty far out of date...?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/224", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/224/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/224/events", "html_url": "https://github.com/lepture/mistune/issues/224", "id": 578216410, "node_id": "MDU6SXNzdWU1NzgyMTY0MTA=", "number": 224, "title": "jekyll parameters ", "user": {"login": "AdamSpannbauer", "id": 16326083, "node_id": "MDQ6VXNlcjE2MzI2MDgz", "avatar_url": "https://avatars3.githubusercontent.com/u/16326083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamSpannbauer", "html_url": "https://github.com/AdamSpannbauer", "followers_url": "https://api.github.com/users/AdamSpannbauer/followers", "following_url": "https://api.github.com/users/AdamSpannbauer/following{/other_user}", "gists_url": "https://api.github.com/users/AdamSpannbauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamSpannbauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamSpannbauer/subscriptions", "organizations_url": "https://api.github.com/users/AdamSpannbauer/orgs", "repos_url": "https://api.github.com/users/AdamSpannbauer/repos", "events_url": "https://api.github.com/users/AdamSpannbauer/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamSpannbauer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T22:02:26Z", "updated_at": "2020-03-09T22:03:23Z", "closed_at": "2020-03-09T22:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/223", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/223/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/223/events", "html_url": "https://github.com/lepture/mistune/issues/223", "id": 571563312, "node_id": "MDU6SXNzdWU1NzE1NjMzMTI=", "number": 223, "title": "Nested tags not being rendered correctly.  ", "user": {"login": "Natay", "id": 16328794, "node_id": "MDQ6VXNlcjE2MzI4Nzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/16328794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natay", "html_url": "https://github.com/Natay", "followers_url": "https://api.github.com/users/Natay/followers", "following_url": "https://api.github.com/users/Natay/following{/other_user}", "gists_url": "https://api.github.com/users/Natay/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natay/subscriptions", "organizations_url": "https://api.github.com/users/Natay/orgs", "repos_url": "https://api.github.com/users/Natay/repos", "events_url": "https://api.github.com/users/Natay/events{/privacy}", "received_events_url": "https://api.github.com/users/Natay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-26T18:07:10Z", "updated_at": "2020-04-22T23:53:35Z", "closed_at": "2020-04-22T23:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello , \r\n\r\nI noticed nested bold tags,  < b > , are not rendered correctly.\r\n\r\nHere is a test case with the issue:\r\n\r\n    import mistune\r\n    test = \"<b><b>foo</b></b>\"\r\n    html = mistune.markdown(escape=False, text=test) \r\n    print(html)\r\n    >>>'<p><b><b>foo</b>&lt;/b&gt;</p>\\n'\r\n\r\nIt seems like other tags are still rendered correctly. \r\n\r\n    import mistune\r\n    test = \"<div><div>foo</div></div>\"\r\n    html = mistune.markdown(escape=False, text=test) \r\n    print(html)\r\n    >>>'<div><div>foo</div></div>'\r\n\r\nIs this expected behavior with some tags?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/221", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/221/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/221/events", "html_url": "https://github.com/lepture/mistune/issues/221", "id": 569206621, "node_id": "MDU6SXNzdWU1NjkyMDY2MjE=", "number": 221, "title": "Fix simple typo: rewritting -> rewriting", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-21T22:01:12Z", "updated_at": "2020-02-25T01:20:18Z", "closed_at": "2020-02-25T01:20:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in syntax.md.\nShould read `rewriting` rather than `rewritting`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/220", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/220/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/220/events", "html_url": "https://github.com/lepture/mistune/issues/220", "id": 567588863, "node_id": "MDU6SXNzdWU1Njc1ODg4NjM=", "number": 220, "title": "Cannot deal with combination of em and strong?", "user": {"login": "schwarzichet", "id": 15522755, "node_id": "MDQ6VXNlcjE1NTIyNzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/15522755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schwarzichet", "html_url": "https://github.com/schwarzichet", "followers_url": "https://api.github.com/users/schwarzichet/followers", "following_url": "https://api.github.com/users/schwarzichet/following{/other_user}", "gists_url": "https://api.github.com/users/schwarzichet/gists{/gist_id}", "starred_url": "https://api.github.com/users/schwarzichet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schwarzichet/subscriptions", "organizations_url": "https://api.github.com/users/schwarzichet/orgs", "repos_url": "https://api.github.com/users/schwarzichet/repos", "events_url": "https://api.github.com/users/schwarzichet/events{/privacy}", "received_events_url": "https://api.github.com/users/schwarzichet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226953, "node_id": "MDU6TGFiZWw4MTIyNjk1Mw==", "url": "https://api.github.com/repos/lepture/mistune/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T13:58:49Z", "updated_at": "2020-04-20T04:27:30Z", "closed_at": "2020-04-20T04:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport mistune\r\nprint(mistune.html(\"***aaa***\"))\r\n```\r\nit turns out to be\r\n```\r\n<p>*<strong>aaa</strong>*</p>\r\n```\r\na workaround is \r\n```\r\nimport mistune\r\nprint(mistune.html(\"**_aaa_**\"))\r\n```\r\n```\r\n<p><strong><em>aaa</em></strong></p>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/219", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/219/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/219/events", "html_url": "https://github.com/lepture/mistune/issues/219", "id": 564556093, "node_id": "MDU6SXNzdWU1NjQ1NTYwOTM=", "number": 219, "title": "Any ideas about saving and exposing state in class Markdown?", "user": {"login": "schwarzichet", "id": 15522755, "node_id": "MDQ6VXNlcjE1NTIyNzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/15522755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schwarzichet", "html_url": "https://github.com/schwarzichet", "followers_url": "https://api.github.com/users/schwarzichet/followers", "following_url": "https://api.github.com/users/schwarzichet/following{/other_user}", "gists_url": "https://api.github.com/users/schwarzichet/gists{/gist_id}", "starred_url": "https://api.github.com/users/schwarzichet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schwarzichet/subscriptions", "organizations_url": "https://api.github.com/users/schwarzichet/orgs", "repos_url": "https://api.github.com/users/schwarzichet/repos", "events_url": "https://api.github.com/users/schwarzichet/events{/privacy}", "received_events_url": "https://api.github.com/users/schwarzichet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-13T09:39:54Z", "updated_at": "2020-02-14T10:41:17Z", "closed_at": "2020-02-14T10:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing a Yaml front matter plugin for mistune. I have noticed that in #211 you suggest a way to deal with front matter. The front matter is stored in `state` , but `state` will get lost in parsing.\r\nI wonder if in the future it is possible to save `state` in `class Markdown` for future use, or you just don't want to make this change, then a plugin may be not proper for this case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/216", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/216/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/216/events", "html_url": "https://github.com/lepture/mistune/issues/216", "id": 562066756, "node_id": "MDU6SXNzdWU1NjIwNjY3NTY=", "number": 216, "title": "Can't subclass Markdown class?", "user": {"login": "cellularmitosis", "id": 223396, "node_id": "MDQ6VXNlcjIyMzM5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/223396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cellularmitosis", "html_url": "https://github.com/cellularmitosis", "followers_url": "https://api.github.com/users/cellularmitosis/followers", "following_url": "https://api.github.com/users/cellularmitosis/following{/other_user}", "gists_url": "https://api.github.com/users/cellularmitosis/gists{/gist_id}", "starred_url": "https://api.github.com/users/cellularmitosis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cellularmitosis/subscriptions", "organizations_url": "https://api.github.com/users/cellularmitosis/orgs", "repos_url": "https://api.github.com/users/cellularmitosis/repos", "events_url": "https://api.github.com/users/cellularmitosis/events{/privacy}", "received_events_url": "https://api.github.com/users/cellularmitosis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-08T19:31:29Z", "updated_at": "2020-02-08T19:48:56Z", "closed_at": "2020-02-08T19:48:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for working on mistune!\r\n\r\nI'm trying out 2.0.0a1 and I can't seem to reach `mistune.markdown.Markdown` (i.e., to subclass it) because `mistune/__init__.py` has a `markdown()` function which masks `mistune/markdown.py`:\r\n\r\n```\r\n>>> import mistune\r\n>>> mistune.__version__\r\n'2.0.0a1'\r\n>>> mistune.markdown.Markdown\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'function' object has no attribute 'Markdown'\r\n>>> mistune.markdown\r\n<function markdown at 0x7f60a495b158>\r\n```\r\n\r\nAm I doing this wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/215", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/215/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/215/events", "html_url": "https://github.com/lepture/mistune/issues/215", "id": 560946428, "node_id": "MDU6SXNzdWU1NjA5NDY0Mjg=", "number": 215, "title": "Error when used as a submodule", "user": {"login": "oleorhagen", "id": 29454137, "node_id": "MDQ6VXNlcjI5NDU0MTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29454137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oleorhagen", "html_url": "https://github.com/oleorhagen", "followers_url": "https://api.github.com/users/oleorhagen/followers", "following_url": "https://api.github.com/users/oleorhagen/following{/other_user}", "gists_url": "https://api.github.com/users/oleorhagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/oleorhagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oleorhagen/subscriptions", "organizations_url": "https://api.github.com/users/oleorhagen/orgs", "repos_url": "https://api.github.com/users/oleorhagen/repos", "events_url": "https://api.github.com/users/oleorhagen/events{/privacy}", "received_events_url": "https://api.github.com/users/oleorhagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T11:18:51Z", "updated_at": "2020-02-11T07:56:01Z", "closed_at": "2020-02-11T07:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Commands run\r\n\r\n```\r\ngit submodule add git@github.com:lepture/mistune.git mistune\r\n```\r\n```\r\npython3 -c 'from mistune import mistune\r\n```\r\n\r\n# Output\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/olepor/go/src/github.com/mendersoftware/mender-hub/mistune/mistune/__init__.py\", line 6, in <module>\r\n    from .plugins import PLUGINS\r\n  File \"/home/olepor/go/src/github.com/mendersoftware/mender-hub/mistune/mistune/plugins/__init__.py\", line 1, in <module>\r\n    from .extra import plugin_url, plugin_strikethrough\r\n  File \"/home/olepor/go/src/github.com/mendersoftware/mender-hub/mistune/mistune/plugins/extra.py\", line 1, in <module>\r\n    from mistune.scanner import escape_url\r\nModuleNotFoundError: No module named 'mistune.scanner'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/213", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/213/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/213/events", "html_url": "https://github.com/lepture/mistune/issues/213", "id": 544327820, "node_id": "MDU6SXNzdWU1NDQzMjc4MjA=", "number": 213, "title": "Infinite loop when parsing malformed/non-standard markdown", "user": {"login": "nickw444", "id": 1289759, "node_id": "MDQ6VXNlcjEyODk3NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1289759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickw444", "html_url": "https://github.com/nickw444", "followers_url": "https://api.github.com/users/nickw444/followers", "following_url": "https://api.github.com/users/nickw444/following{/other_user}", "gists_url": "https://api.github.com/users/nickw444/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickw444/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickw444/subscriptions", "organizations_url": "https://api.github.com/users/nickw444/orgs", "repos_url": "https://api.github.com/users/nickw444/repos", "events_url": "https://api.github.com/users/nickw444/events{/privacy}", "received_events_url": "https://api.github.com/users/nickw444/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-01T08:09:23Z", "updated_at": "2020-01-01T12:18:44Z", "closed_at": "2020-01-01T12:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example code:\r\n```python\r\nimport mistune\r\n\r\nmarkdown = mistune.create_markdown(renderer=mistune.HTMLRenderer())\r\nmarkdown('''\r\n. Foo \r\n. Bar\r\n. Baz\r\n''')\r\n```\r\n\r\nIt appears to be getting stuck in `scanner.py`:\r\n\r\nhttps://github.com/lepture/mistune/blob/75884268396ed6b1cb846b610facebe284eee1f3/mistune/scanner.py#L106-L120\r\n\r\n```\r\n  File \"mistune_test.py\", line 8, in <module>\r\n    ''')\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/markdown.py\", line 69, in __call__\r\n    return self.parse(s)\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/markdown.py\", line 52, in parse\r\n    tokens = self.block.parse(s, state)\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/block_parser.py\", line 240, in parse\r\n    return list(self._scan(s, state, rules))\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/scanner.py\", line 56, in _scan\r\n    for tok in sc.iter(s, state, self.parse_text):\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/scanner.py\", line 117, in iter\r\n    token = method(match, state, string)\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/block_parser.py\", line 155, in parse_list_start\r\n    items, pos = _find_list_items(string, m.start(), spaces, marker)\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/block_parser.py\", line 315, in _find_list_items\r\n    pattern = _create_list_item_pattern(spaces, marker)\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/site-packages/mistune/block_parser.py\", line 300, in _create_list_item_pattern\r\n    r'(?:\\1(?:' + s1 + '|' + s2 + ')'\r\n  File \"/Users/nickw/.local/share/virtualenvs/100-warm-tunas-pipeline-NrcgpDFS/lib/python3.7/re.py\", line 232, in compile\r\n    def compile(pattern, flags=0):\r\nKeyboardInterrupt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/211", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/211/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/211/events", "html_url": "https://github.com/lepture/mistune/issues/211", "id": 541421184, "node_id": "MDU6SXNzdWU1NDE0MjExODQ=", "number": 211, "title": "Support for Front Matter?", "user": {"login": "EmilStenstrom", "id": 224130, "node_id": "MDQ6VXNlcjIyNDEzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/224130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmilStenstrom", "html_url": "https://github.com/EmilStenstrom", "followers_url": "https://api.github.com/users/EmilStenstrom/followers", "following_url": "https://api.github.com/users/EmilStenstrom/following{/other_user}", "gists_url": "https://api.github.com/users/EmilStenstrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmilStenstrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmilStenstrom/subscriptions", "organizations_url": "https://api.github.com/users/EmilStenstrom/orgs", "repos_url": "https://api.github.com/users/EmilStenstrom/repos", "events_url": "https://api.github.com/users/EmilStenstrom/events{/privacy}", "received_events_url": "https://api.github.com/users/EmilStenstrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-12-22T08:04:57Z", "updated_at": "2020-06-28T22:32:02Z", "closed_at": "2020-01-15T07:22:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a blog with markdown files generated by Jekyll. They use Markdown files that has a metadata block on top that contains yaml. Is this something that mistune would be willing to support? Jekyll is a very common blog engine, so I think it would be useful to many!\r\n\r\n```markdown\r\n---\r\nid: 29\r\ntitle: How this website was built\r\ndate: 2005-12-20T00:00:36\r\ncategories:\r\n  - CSS\r\n---\r\nHi there early readers!\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/210", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/210/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/210/events", "html_url": "https://github.com/lepture/mistune/issues/210", "id": 539420965, "node_id": "MDU6SXNzdWU1Mzk0MjA5NjU=", "number": 210, "title": "DirectiveToc takes code comment as title", "user": {"login": "Microndgt", "id": 15599445, "node_id": "MDQ6VXNlcjE1NTk5NDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/15599445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Microndgt", "html_url": "https://github.com/Microndgt", "followers_url": "https://api.github.com/users/Microndgt/followers", "following_url": "https://api.github.com/users/Microndgt/following{/other_user}", "gists_url": "https://api.github.com/users/Microndgt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Microndgt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Microndgt/subscriptions", "organizations_url": "https://api.github.com/users/Microndgt/orgs", "repos_url": "https://api.github.com/users/Microndgt/repos", "events_url": "https://api.github.com/users/Microndgt/events{/privacy}", "received_events_url": "https://api.github.com/users/Microndgt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-18T02:54:34Z", "updated_at": "2019-12-18T05:47:19Z", "closed_at": "2019-12-18T05:47:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### version\r\n\r\n- Python: 3.5.6\r\n- mistune: 2.0.0a1\r\n\r\n### description\r\n\r\nHere is my markdown text:\r\n\r\n`````\r\n### 938. rrange-sum-of-bst\r\n\r\n```python\r\n# Definition for a binary tree node.\r\n# class TreeNode:\r\n#     def __init__(self, x):\r\n#         self.val = x\r\n#         self.left = None\r\n#         self.right = None\r\n\r\nclass Solution:\r\n    def rangeSumBST(self, root: TreeNode, L: int, R: int) -> int:\r\n        if not root:\r\n            return 0\r\n        if root.val < L:\r\n            res = self.rangeSumBST(root.right, L, R)\r\n        elif root.val > R:\r\n            res = self.rangeSumBST(root.left, L, R)\r\n        else:\r\n            left_res = self.rangeSumBST(root.left, L, root.val)\r\n            right_res = self.rangeSumBST(root.right, root.val, R)\r\n            res = left_res + right_res + root.val\r\n        return res\r\n```\r\nThen something else\r\n`````\r\n\r\nand toc generated is :\r\n\r\n![image](https://user-images.githubusercontent.com/15599445/71051885-9c4e5380-2184-11ea-9da5-85a7dcd1fba5.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/209", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/209/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/209/events", "html_url": "https://github.com/lepture/mistune/issues/209", "id": 538100799, "node_id": "MDU6SXNzdWU1MzgxMDA3OTk=", "number": 209, "title": "Use more efficient string concatenation method", "user": {"login": "sicklybeans", "id": 4105559, "node_id": "MDQ6VXNlcjQxMDU1NTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4105559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sicklybeans", "html_url": "https://github.com/sicklybeans", "followers_url": "https://api.github.com/users/sicklybeans/followers", "following_url": "https://api.github.com/users/sicklybeans/following{/other_user}", "gists_url": "https://api.github.com/users/sicklybeans/gists{/gist_id}", "starred_url": "https://api.github.com/users/sicklybeans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sicklybeans/subscriptions", "organizations_url": "https://api.github.com/users/sicklybeans/orgs", "repos_url": "https://api.github.com/users/sicklybeans/repos", "events_url": "https://api.github.com/users/sicklybeans/events{/privacy}", "received_events_url": "https://api.github.com/users/sicklybeans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-15T20:23:08Z", "updated_at": "2020-01-03T18:23:04Z", "closed_at": "2020-01-03T18:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if you accept issues from random users, but I thought this was worth mentioning.\r\n\r\nI'm using mistune 0.8.4 and I looked through the implementation and noticed that by modifying how the output is constructed, there might be a potentially massive speedup, especially for large input files.\r\n\r\nThe main problem is the string concatenation method. It seems like the general loop of this parser is to do something like:\r\n\r\n    output = ''\r\n    while something:\r\n        output += parse_next()\r\n\r\nThis means that for each block parsed, the entire output has to be recopied since python strings are  immutable. [This page](https://waymoot.org/home/python_string/) has some nice suggestions for speedups (the existing implementation roughly corresponds to their method 1)\r\n\r\nThere is a similar problem in the preprocessing loop which calls `replaceall` on the entire input. Though this might not be as trivial to fix", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/207", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/207/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/207/events", "html_url": "https://github.com/lepture/mistune/issues/207", "id": 521064472, "node_id": "MDU6SXNzdWU1MjEwNjQ0NzI=", "number": 207, "title": "update README", "user": {"login": "perrette", "id": 1402264, "node_id": "MDQ6VXNlcjE0MDIyNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1402264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perrette", "html_url": "https://github.com/perrette", "followers_url": "https://api.github.com/users/perrette/followers", "following_url": "https://api.github.com/users/perrette/following{/other_user}", "gists_url": "https://api.github.com/users/perrette/gists{/gist_id}", "starred_url": "https://api.github.com/users/perrette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perrette/subscriptions", "organizations_url": "https://api.github.com/users/perrette/orgs", "repos_url": "https://api.github.com/users/perrette/repos", "events_url": "https://api.github.com/users/perrette/events{/privacy}", "received_events_url": "https://api.github.com/users/perrette/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-11T16:35:05Z", "updated_at": "2019-11-12T08:30:19Z", "closed_at": "2019-11-12T02:53:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The only example command of the readme fails...\r\n\r\n```\r\nimport mistune       \r\nmistune.__version__ \r\n'0.8.4'\r\nmistune.html('test.md')\r\nAttributeError: module 'mistune' has no attribute 'html'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/206", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/206/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/206/events", "html_url": "https://github.com/lepture/mistune/issues/206", "id": 520664492, "node_id": "MDU6SXNzdWU1MjA2NjQ0OTI=", "number": 206, "title": "Ordered lists not starting with 1 should have start attribute set", "user": {"login": "kynan", "id": 346079, "node_id": "MDQ6VXNlcjM0NjA3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/346079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kynan", "html_url": "https://github.com/kynan", "followers_url": "https://api.github.com/users/kynan/followers", "following_url": "https://api.github.com/users/kynan/following{/other_user}", "gists_url": "https://api.github.com/users/kynan/gists{/gist_id}", "starred_url": "https://api.github.com/users/kynan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kynan/subscriptions", "organizations_url": "https://api.github.com/users/kynan/orgs", "repos_url": "https://api.github.com/users/kynan/repos", "events_url": "https://api.github.com/users/kynan/events{/privacy}", "received_events_url": "https://api.github.com/users/kynan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-10T21:59:52Z", "updated_at": "2019-11-12T02:52:46Z", "closed_at": "2019-11-12T02:52:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "An ordered list starting with an item other than 1 is not correctly translated:\r\n\r\n```markdown\r\n2. some\r\n3. item\r\n```\r\nbecomes\r\n```html\r\n<ol>\r\n  <li>some</li>\r\n  <li>item</li>\r\n</ol>\r\n```\r\nbut should become\r\n```html\r\n<ol start=\"2\">\r\n  <li>some</li>\r\n  <li>item</li>\r\n</ol>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/205", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/205/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/205/events", "html_url": "https://github.com/lepture/mistune/issues/205", "id": 506181934, "node_id": "MDU6SXNzdWU1MDYxODE5MzQ=", "number": 205, "title": "How to create custom BlockLexer rule?", "user": {"login": "f1nnix", "id": 3099788, "node_id": "MDQ6VXNlcjMwOTk3ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3099788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f1nnix", "html_url": "https://github.com/f1nnix", "followers_url": "https://api.github.com/users/f1nnix/followers", "following_url": "https://api.github.com/users/f1nnix/following{/other_user}", "gists_url": "https://api.github.com/users/f1nnix/gists{/gist_id}", "starred_url": "https://api.github.com/users/f1nnix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f1nnix/subscriptions", "organizations_url": "https://api.github.com/users/f1nnix/orgs", "repos_url": "https://api.github.com/users/f1nnix/repos", "events_url": "https://api.github.com/users/f1nnix/events{/privacy}", "received_events_url": "https://api.github.com/users/f1nnix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-12T12:38:13Z", "updated_at": "2019-10-12T14:26:02Z", "closed_at": "2019-10-12T14:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm trying to create custom block-level lexer, which should parse 'panels'. Panel is defined as:\r\n```\r\n[ Panel title\r\n\r\nPanel text string 1\r\nPanel text string 2\r\nIs a valid HTML, btw \r\n\r\n]\r\n```\r\nAs docs miss BlockLexer example, I've digged into the code and build the following example:\r\n\r\n```python\r\nimport re\r\n\r\nfrom mistune import BlockLexer\r\nfrom mistune import Renderer\r\n\r\nfrom mistune import Markdown\r\n\r\nclass PanelBlockLexer(BlockLexer):\r\n    def enable_panel_block(self):\r\n        self.rules.panel_block = re.compile(r'\\[ ?(.*?)\\n((?:.*?\\n)*)\\]')\r\n\r\n        self.default_rules.insert(3, 'panel_block')\r\n\r\n    def parse_panel_block(self, m):\r\n        title = m.group(1)\r\n        content = m.group(2)\r\n        self.tokens.append({'type': 'panel_block', 'title': title, 'content': content})\r\n\r\n    def output_panel_block(self, m):\r\n        title = m.group(1)\r\n        text = m.group(2)\r\n        return self.renderer.panel_block(title, text)\r\n\r\n\r\nclass XMDRenderer(Renderer):\r\n    def panel_block(self, title, text):\r\n        # This should be vaild HTML,\r\n        # left placeholder for demo\r\n        return '[%s] %s' % (title, text)\r\n\r\n\r\nrenderer = XMDRenderer()\r\n\r\npanels_lexer = PanelBlockLexer()\r\npanels_lexer.enable_panel_block()\r\n\r\nmarkdown = Markdown(renderer, block=panels_lexer)\r\n\r\ntest_string = \"\"\"[ Panel title\r\nPanel text\r\n]\r\n\"\"\"\r\nhtml = markdown(test_string)\r\n```\r\n\r\nAnd I'm getting:\r\n\r\n```\r\nFile \"~/.venv/mistune_test/lib/python3.7/site-packages/mistune.py\", line 1063, in tok\r\n    return getattr(self, 'output_%s' % t)()\r\nAttributeError: 'Markdown' object has no attribute 'output_panel_block'\r\n```\r\nAs I see...\r\n\r\n1. for block lexers the other `output_%s`-functions are declared in `Markdown` class, not in `PanelBlockLexer`;\r\n2. the are no tips about `parse_panel_block` function in docs. I've added it after looking into other block lexers implementation. Is it correct?\r\n\r\nThough it's still not working. How to implement it correctly?\r\n\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/204", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/204/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/204/events", "html_url": "https://github.com/lepture/mistune/issues/204", "id": 486145501, "node_id": "MDU6SXNzdWU0ODYxNDU1MDE=", "number": 204, "title": "Identifying List Level", "user": {"login": "joswr1ght", "id": 1318817, "node_id": "MDQ6VXNlcjEzMTg4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1318817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joswr1ght", "html_url": "https://github.com/joswr1ght", "followers_url": "https://api.github.com/users/joswr1ght/followers", "following_url": "https://api.github.com/users/joswr1ght/following{/other_user}", "gists_url": "https://api.github.com/users/joswr1ght/gists{/gist_id}", "starred_url": "https://api.github.com/users/joswr1ght/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joswr1ght/subscriptions", "organizations_url": "https://api.github.com/users/joswr1ght/orgs", "repos_url": "https://api.github.com/users/joswr1ght/repos", "events_url": "https://api.github.com/users/joswr1ght/events{/privacy}", "received_events_url": "https://api.github.com/users/joswr1ght/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-28T03:51:18Z", "updated_at": "2019-11-12T02:54:49Z", "closed_at": "2019-11-12T02:54:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure how to use Mistune to format list elements to render Markdown. Is there a way to identify the level for indentation of the list element?\r\n\r\nThe `MdRenderer` contribution attempts to decode list elements by flagging the `list_item` values and parsing them with `list`, but this does not preserve indentation levels for sub-list items:\r\n\r\n```\r\n$ cat Foo.md\r\n+ Head List 1\r\n    + List item 1\r\n    + List item 2\r\n\r\n$ ./listhandler.py\r\n* Head List 1* List item 1\r\n* List item 2\r\n```\r\n\r\nIs there a way to identify the indentation level for the list item, or a Mistune example where sub-list elements are processed? Thanks!\r\n[listhandler.txt](https://github.com/lepture/mistune/files/3549029/listhandler.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/203", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/203/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/203/events", "html_url": "https://github.com/lepture/mistune/issues/203", "id": 476555905, "node_id": "MDU6SXNzdWU0NzY1NTU5MDU=", "number": 203, "title": "server profrmance problem", "user": {"login": "KaitoHH", "id": 13927774, "node_id": "MDQ6VXNlcjEzOTI3Nzc0", "avatar_url": "https://avatars1.githubusercontent.com/u/13927774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaitoHH", "html_url": "https://github.com/KaitoHH", "followers_url": "https://api.github.com/users/KaitoHH/followers", "following_url": "https://api.github.com/users/KaitoHH/following{/other_user}", "gists_url": "https://api.github.com/users/KaitoHH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaitoHH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaitoHH/subscriptions", "organizations_url": "https://api.github.com/users/KaitoHH/orgs", "repos_url": "https://api.github.com/users/KaitoHH/repos", "events_url": "https://api.github.com/users/KaitoHH/events{/privacy}", "received_events_url": "https://api.github.com/users/KaitoHH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226948, "node_id": "MDU6TGFiZWw4MTIyNjk0OA==", "url": "https://api.github.com/repos/lepture/mistune/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-04T13:53:15Z", "updated_at": "2019-12-07T12:43:12Z", "closed_at": "2019-12-07T12:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code yields too long parsing time and produces no result. Shorten the length reduces the parsing time, so I guess there is some performance issue.\r\n```python\r\nimport mistune\r\ntext = \"kubelet options: \\r\\n--cgroup-driver=cgroupfs \\r\\n--cgroups-per-qos=True\\r\\n--enforce-node-allocatable=pods\\r\\n--kube-reserved cpu=200m,memory=512M\\r\\n--eviction-hard=memory.available<100Mi,nodefs.available<200Mi,imagefs.available<200Mi  \\r\\n--eviction-soft-grace-period=memory.available=30s,nodefs.available=30s,imagefs.available=30s  \\r\\n--eviction-soft=memory.available<300Mi,nodefs.available<1Gi,imagefs.available<1Gi  \\r\\n--eviction-minimum-reclaim=memory.available=100Mi,nodefs.available=1Gi,imagefs.available=1Gi  \\r\\n\"\r\nprint(mistune.markdown(text))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/202", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/202/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/202/events", "html_url": "https://github.com/lepture/mistune/issues/202", "id": 470315295, "node_id": "MDU6SXNzdWU0NzAzMTUyOTU=", "number": 202, "title": "block_code should be triggered even without language", "user": {"login": "zokrezyl", "id": 51886259, "node_id": "MDQ6VXNlcjUxODg2MjU5", "avatar_url": "https://avatars0.githubusercontent.com/u/51886259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zokrezyl", "html_url": "https://github.com/zokrezyl", "followers_url": "https://api.github.com/users/zokrezyl/followers", "following_url": "https://api.github.com/users/zokrezyl/following{/other_user}", "gists_url": "https://api.github.com/users/zokrezyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/zokrezyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zokrezyl/subscriptions", "organizations_url": "https://api.github.com/users/zokrezyl/orgs", "repos_url": "https://api.github.com/users/zokrezyl/repos", "events_url": "https://api.github.com/users/zokrezyl/events{/privacy}", "received_events_url": "https://api.github.com/users/zokrezyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-19T13:07:22Z", "updated_at": "2019-08-23T14:37:11Z", "closed_at": "2019-07-30T02:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This: ```print(\"this is source code\")```\r\n\r\nshould be rendered like here on github...\r\n\r\n\r\nThis ```python\r\nprint(\"this is something else\")```\r\n\r\nWhat about this:\r\n\r\n```for i in range(10):```\r\n\r\n\r\nWhen language is not specified the codespan is triggered.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/201", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/201/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/201/events", "html_url": "https://github.com/lepture/mistune/issues/201", "id": 468552976, "node_id": "MDU6SXNzdWU0Njg1NTI5NzY=", "number": 201, "title": "list_rules and footnote_rules in BlockLexer", "user": {"login": "idnsunset", "id": 31075263, "node_id": "MDQ6VXNlcjMxMDc1MjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/31075263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idnsunset", "html_url": "https://github.com/idnsunset", "followers_url": "https://api.github.com/users/idnsunset/followers", "following_url": "https://api.github.com/users/idnsunset/following{/other_user}", "gists_url": "https://api.github.com/users/idnsunset/gists{/gist_id}", "starred_url": "https://api.github.com/users/idnsunset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idnsunset/subscriptions", "organizations_url": "https://api.github.com/users/idnsunset/orgs", "repos_url": "https://api.github.com/users/idnsunset/repos", "events_url": "https://api.github.com/users/idnsunset/events{/privacy}", "received_events_url": "https://api.github.com/users/idnsunset/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T09:42:37Z", "updated_at": "2019-12-07T12:43:31Z", "closed_at": "2019-12-07T12:43:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's just a suggestion about using `list` instead of `tuple` for `BlockLexer.list_rules` and `BlockLexer.footnote_rules`, so that we can handle our own block markups nesting in list and footnote. For instance, an admonition block rule implemented by myself may need to be added not only to `default_rules` but also `list_rules` and `footnote_rules`.\r\nI know I could implement a subclass or simply just convert tuple to list,  but having these two block rules as list type out of box seems more reasonable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/200", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/200/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/200/events", "html_url": "https://github.com/lepture/mistune/issues/200", "id": 467965503, "node_id": "MDU6SXNzdWU0Njc5NjU1MDM=", "number": 200, "title": "autolinks at the beginning of a line", "user": {"login": "idnsunset", "id": 31075263, "node_id": "MDQ6VXNlcjMxMDc1MjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/31075263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idnsunset", "html_url": "https://github.com/idnsunset", "followers_url": "https://api.github.com/users/idnsunset/followers", "following_url": "https://api.github.com/users/idnsunset/following{/other_user}", "gists_url": "https://api.github.com/users/idnsunset/gists{/gist_id}", "starred_url": "https://api.github.com/users/idnsunset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idnsunset/subscriptions", "organizations_url": "https://api.github.com/users/idnsunset/orgs", "repos_url": "https://api.github.com/users/idnsunset/repos", "events_url": "https://api.github.com/users/idnsunset/events{/privacy}", "received_events_url": "https://api.github.com/users/idnsunset/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226951, "node_id": "MDU6TGFiZWw4MTIyNjk1MQ==", "url": "https://api.github.com/repos/lepture/mistune/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-15T06:46:56Z", "updated_at": "2019-07-30T02:49:32Z", "closed_at": "2019-07-30T02:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a paragraph like:\r\n\r\n```\r\nthis is a long sentence..., send a email to\r\n<mymailbox@gamil.com> ...\r\n```\r\n\r\nI expect the first line and the mail address to be wrapped within the same paragraph block and I think it should be rendered like this as autolink is an inline element, but mistune actually produces a separate paragraph for the mail address. Although I could simply append the mail address to the previous line without a line break to work around this issue, as for the text width limitation set in my text editor, I still expect the markdown text to be processed more correctly.\r\n\r\nThe block grammar about paragraph in mistune maybe the cause.\r\n\r\n```python\r\n    paragraph = re.compile(\r\n        r'^((?:[^\\n]+\\n?(?!'\r\n        r'%s|%s|%s|%s|%s|%s|%s|%s|%s'\r\n        r'))+)\\n*' % (\r\n            _pure_pattern(fences).replace(r'\\1', r'\\2'),\r\n            _pure_pattern(list_block).replace(r'\\1', r'\\3'),\r\n            _pure_pattern(hrule),\r\n            _pure_pattern(heading),\r\n            _pure_pattern(lheading),\r\n            _pure_pattern(block_quote),\r\n            _pure_pattern(def_links),\r\n            _pure_pattern(def_footnotes),\r\n            '<' + _block_tag,\r\n        )\r\n    )\r\n```\r\n\r\n`<mymailbox@gmail.com` matches against `'<' + _block_tag`, thus it is not counted along with the previous lines into the same paragraph.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/199", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/199/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/199/events", "html_url": "https://github.com/lepture/mistune/issues/199", "id": 464607978, "node_id": "MDU6SXNzdWU0NjQ2MDc5Nzg=", "number": 199, "title": "Missing newlines", "user": {"login": "GusBricker", "id": 5069874, "node_id": "MDQ6VXNlcjUwNjk4NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5069874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GusBricker", "html_url": "https://github.com/GusBricker", "followers_url": "https://api.github.com/users/GusBricker/followers", "following_url": "https://api.github.com/users/GusBricker/following{/other_user}", "gists_url": "https://api.github.com/users/GusBricker/gists{/gist_id}", "starred_url": "https://api.github.com/users/GusBricker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GusBricker/subscriptions", "organizations_url": "https://api.github.com/users/GusBricker/orgs", "repos_url": "https://api.github.com/users/GusBricker/repos", "events_url": "https://api.github.com/users/GusBricker/events{/privacy}", "received_events_url": "https://api.github.com/users/GusBricker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-05T12:00:04Z", "updated_at": "2019-12-07T12:43:45Z", "closed_at": "2019-12-07T12:43:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm writing a custom renderer and finding the `newline()` span level renderer never gets called. I have included a simple Renderer to reproduce the behavior.\r\n\r\n```\r\nimport mistune\r\nimport sys\r\n\r\nclass TestNewLine(mistune.Renderer):\r\n    def newline(self):\r\n        print('newline')\r\n        return ''\r\n\r\n\r\nwith open(sys.argv[1], 'r') as f:\r\n    text = f.read()\r\nrenderer = TestNewLine(hard_wrap=True)\r\nmarkdown = mistune.Markdown(renderer=renderer, hard_wrap=True)\r\nprint(markdown(text))```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/198", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/198/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/198/events", "html_url": "https://github.com/lepture/mistune/issues/198", "id": 450077095, "node_id": "MDU6SXNzdWU0NTAwNzcwOTU=", "number": 198, "title": "Can I use mistune to write markdown?", "user": {"login": "halloleo", "id": 1521852, "node_id": "MDQ6VXNlcjE1MjE4NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1521852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/halloleo", "html_url": "https://github.com/halloleo", "followers_url": "https://api.github.com/users/halloleo/followers", "following_url": "https://api.github.com/users/halloleo/following{/other_user}", "gists_url": "https://api.github.com/users/halloleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/halloleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/halloleo/subscriptions", "organizations_url": "https://api.github.com/users/halloleo/orgs", "repos_url": "https://api.github.com/users/halloleo/repos", "events_url": "https://api.github.com/users/halloleo/events{/privacy}", "received_events_url": "https://api.github.com/users/halloleo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-30T00:34:56Z", "updated_at": "2019-07-14T14:00:59Z", "closed_at": "2019-06-29T02:05:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to write a tool which takes Markdown, looks at the links and footnotes in it and writes a changed Markdown file out.\r\n\r\nCan I use mistune for this by adding my own Markdown renderer?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/197", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/197/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/197/events", "html_url": "https://github.com/lepture/mistune/issues/197", "id": 438334695, "node_id": "MDU6SXNzdWU0MzgzMzQ2OTU=", "number": 197, "title": "How do you get the parsed token tree?", "user": {"login": "swquinn", "id": 153358, "node_id": "MDQ6VXNlcjE1MzM1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/153358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swquinn", "html_url": "https://github.com/swquinn", "followers_url": "https://api.github.com/users/swquinn/followers", "following_url": "https://api.github.com/users/swquinn/following{/other_user}", "gists_url": "https://api.github.com/users/swquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/swquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swquinn/subscriptions", "organizations_url": "https://api.github.com/users/swquinn/orgs", "repos_url": "https://api.github.com/users/swquinn/repos", "events_url": "https://api.github.com/users/swquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/swquinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-29T14:08:20Z", "updated_at": "2019-06-29T02:05:55Z", "closed_at": "2019-06-29T02:05:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking at Mistune, and it appears that you can get the token tree but I can't figure out how.\r\n\r\nThere are a few issues that ask a similar question (e.g. https://github.com/lepture/mistune/issues/98, https://github.com/lepture/mistune/issues/25, and https://github.com/lepture/mistune/issues/29), and some reference PR #20. Looking at these issues, however, it isn't clear to me how you can use Mistune for getting the parse tree. I was not able to identify how to do this from the documentation either.\r\n\r\nMy guess is that I'm using Mistune incorrectly. I've provided an example from the Python REPL how I'm trying to use Mistune to get the parse tree. Could someone help me with this?\r\n\r\n```python\r\n>>> import mistune\r\n>>> md = mistune.Markdown()\r\n>>> md('# This is a test\\n[this](is-a-link)')\r\n'<h1>This is a test</h1>\\n<p><a href=\"is-a-link\">this</a></p>\\n'\r\n>>> md.tokens\r\n[]\r\n>>> md.token\r\n{'type': 'paragraph', 'text': '[this](is-a-link)'}\r\n```\r\n\r\nIn the above, observe that `md.token` is only showing the last token. Also, I would expect to see `tokens` represent the whole token tree.\r\n\r\nIt looks like as Mistune renders the output it also pops elements off of the token tree. Is there any reason that, after parsing the elements, it can't also track the tree as an immutable list (e.g. tuple) that won't be mutated as the tokens are processed for rendering?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/196", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/196/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/196/events", "html_url": "https://github.com/lepture/mistune/issues/196", "id": 430104563, "node_id": "MDU6SXNzdWU0MzAxMDQ1NjM=", "number": 196, "title": "Why these escape sequences are processed in InlineLexer?", "user": {"login": "an0", "id": 100976, "node_id": "MDQ6VXNlcjEwMDk3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/100976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/an0", "html_url": "https://github.com/an0", "followers_url": "https://api.github.com/users/an0/followers", "following_url": "https://api.github.com/users/an0/following{/other_user}", "gists_url": "https://api.github.com/users/an0/gists{/gist_id}", "starred_url": "https://api.github.com/users/an0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/an0/subscriptions", "organizations_url": "https://api.github.com/users/an0/orgs", "repos_url": "https://api.github.com/users/an0/repos", "events_url": "https://api.github.com/users/an0/events{/privacy}", "received_events_url": "https://api.github.com/users/an0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-07T04:42:35Z", "updated_at": "2019-04-07T04:57:58Z", "closed_at": "2019-04-07T04:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/lepture/mistune/blob/449c2b52961c30665ccba6a822652ec7d0e15938/mistune.py#L470\r\n\r\nIs it a rule in Markdown or HTML?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/195", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/195/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/195/events", "html_url": "https://github.com/lepture/mistune/issues/195", "id": 430051966, "node_id": "MDU6SXNzdWU0MzAwNTE5NjY=", "number": 195, "title": "Closing tags of nested html is escaped", "user": {"login": "aioobe", "id": 5994243, "node_id": "MDQ6VXNlcjU5OTQyNDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5994243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aioobe", "html_url": "https://github.com/aioobe", "followers_url": "https://api.github.com/users/aioobe/followers", "following_url": "https://api.github.com/users/aioobe/following{/other_user}", "gists_url": "https://api.github.com/users/aioobe/gists{/gist_id}", "starred_url": "https://api.github.com/users/aioobe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aioobe/subscriptions", "organizations_url": "https://api.github.com/users/aioobe/orgs", "repos_url": "https://api.github.com/users/aioobe/repos", "events_url": "https://api.github.com/users/aioobe/events{/privacy}", "received_events_url": "https://api.github.com/users/aioobe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-06T16:38:02Z", "updated_at": "2019-12-07T12:44:03Z", "closed_at": "2019-12-07T12:44:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "This:\r\n\r\n    mistune.markdown(\"a <div><div>b</div></div> c\", escape=False)\r\n\r\nproduces this:\r\n\r\n    <p>a <div><div>b</div>&lt;/div&gt; c</p>\r\n                          ^^^^^^^^^^^^\r\n\r\nI note however that this works as expected:\r\n\r\n    mistune.markdown(\"a <div><b>b</b></div> c\", escape=False)\r\n\r\nProduces:\r\n\r\n    <p>a <div><b>b</b></div> c</p>\r\n\r\nPerhaps mistune things the outer `<div>` is closed by the inner `</div>` and hops back to text mode?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/194", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/194/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/194/events", "html_url": "https://github.com/lepture/mistune/issues/194", "id": 421988854, "node_id": "MDU6SXNzdWU0MjE5ODg4NTQ=", "number": 194, "title": "Does mistune support task list?", "user": {"login": "Microndgt", "id": 15599445, "node_id": "MDQ6VXNlcjE1NTk5NDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/15599445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Microndgt", "html_url": "https://github.com/Microndgt", "followers_url": "https://api.github.com/users/Microndgt/followers", "following_url": "https://api.github.com/users/Microndgt/following{/other_user}", "gists_url": "https://api.github.com/users/Microndgt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Microndgt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Microndgt/subscriptions", "organizations_url": "https://api.github.com/users/Microndgt/orgs", "repos_url": "https://api.github.com/users/Microndgt/repos", "events_url": "https://api.github.com/users/Microndgt/events{/privacy}", "received_events_url": "https://api.github.com/users/Microndgt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-17T23:43:32Z", "updated_at": "2019-07-29T08:36:51Z", "closed_at": "2019-07-29T05:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "something like this: [about-task-lists](https://help.github.com/en/articles/about-task-lists)\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/193", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/193/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/193/events", "html_url": "https://github.com/lepture/mistune/issues/193", "id": 420366324, "node_id": "MDU6SXNzdWU0MjAzNjYzMjQ=", "number": 193, "title": "Update Copyright for 2019 in mistune.py", "user": {"login": "Tloru", "id": 17747189, "node_id": "MDQ6VXNlcjE3NzQ3MTg5", "avatar_url": "https://avatars0.githubusercontent.com/u/17747189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tloru", "html_url": "https://github.com/Tloru", "followers_url": "https://api.github.com/users/Tloru/followers", "following_url": "https://api.github.com/users/Tloru/following{/other_user}", "gists_url": "https://api.github.com/users/Tloru/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tloru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tloru/subscriptions", "organizations_url": "https://api.github.com/users/Tloru/orgs", "repos_url": "https://api.github.com/users/Tloru/repos", "events_url": "https://api.github.com/users/Tloru/events{/privacy}", "received_events_url": "https://api.github.com/users/Tloru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-13T08:09:59Z", "updated_at": "2019-06-29T02:06:17Z", "closed_at": "2019-06-29T02:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just a small heads up. (By the way, thanks for writing mistune, I use it a lot \ud83d\ude4c.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/192", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/192/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/192/events", "html_url": "https://github.com/lepture/mistune/issues/192", "id": 420080848, "node_id": "MDU6SXNzdWU0MjAwODA4NDg=", "number": 192, "title": "Mistune ignores output from custom renderer", "user": {"login": "lyinch", "id": 7294569, "node_id": "MDQ6VXNlcjcyOTQ1Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7294569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyinch", "html_url": "https://github.com/lyinch", "followers_url": "https://api.github.com/users/lyinch/followers", "following_url": "https://api.github.com/users/lyinch/following{/other_user}", "gists_url": "https://api.github.com/users/lyinch/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyinch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyinch/subscriptions", "organizations_url": "https://api.github.com/users/lyinch/orgs", "repos_url": "https://api.github.com/users/lyinch/repos", "events_url": "https://api.github.com/users/lyinch/events{/privacy}", "received_events_url": "https://api.github.com/users/lyinch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T16:22:38Z", "updated_at": "2019-03-14T23:58:08Z", "closed_at": "2019-03-14T23:58:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I tried to create my own lexer and renderer for latex math, but the custom renderer get's ignored.\r\n```python\r\nimport mistune\r\nimport re\r\nfrom mistune import InlineLexer\r\n\r\n\r\nclass CustomRenderer(mistune.Renderer):\r\n\r\n    def math(self, text):\r\n        return 'math: %s' % text\r\n\r\nclass MathInlineLexer(InlineLexer):\r\n\r\n    def enable_math(self):\r\n        self.rules.math = re.compile(r'^\\$(.+?)\\$')\r\n        self.default_rules.insert(0, 'math')\r\n\r\n    def output_math(self, m):\r\n        self.renderer.math(m.group(1))\r\n\r\n\r\nrenderer = CustomRenderer()\r\ninline = MathInlineLexer(renderer)\r\ninline.enable_math()\r\nmarkdown = mistune.Markdown(renderer=renderer, inline=inline)\r\nprint(markdown(\"$2x^2$\"))\r\n```\r\n\r\nOutput: `<p>$2x^2$</p>`. Expected output: `math: 2x^2`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/191", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/191/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/191/events", "html_url": "https://github.com/lepture/mistune/issues/191", "id": 417951604, "node_id": "MDU6SXNzdWU0MTc5NTE2MDQ=", "number": 191, "title": "O(n\u00b3) parsing slowdown on crafted input", "user": {"login": "andersk", "id": 26471, "node_id": "MDQ6VXNlcjI2NDcx", "avatar_url": "https://avatars0.githubusercontent.com/u/26471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andersk", "html_url": "https://github.com/andersk", "followers_url": "https://api.github.com/users/andersk/followers", "following_url": "https://api.github.com/users/andersk/following{/other_user}", "gists_url": "https://api.github.com/users/andersk/gists{/gist_id}", "starred_url": "https://api.github.com/users/andersk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andersk/subscriptions", "organizations_url": "https://api.github.com/users/andersk/orgs", "repos_url": "https://api.github.com/users/andersk/repos", "events_url": "https://api.github.com/users/andersk/events{/privacy}", "received_events_url": "https://api.github.com/users/andersk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-03-06T18:39:31Z", "updated_at": "2019-12-07T12:44:14Z", "closed_at": "2019-12-07T12:44:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The time it takes to parse a string of n copies of `[]( \"` explodes very quickly; it looks like O(n\u00b3). This could be a denial of service vulnerability in an application that parses user input as Markdown.\r\n\r\n```pycon\r\n>>> import mistune, timeit\r\n>>> timeit.timeit(lambda: mistune.markdown('[]( \"' * 100), number=1)\r\n0.06998804802424274\r\n>>> timeit.timeit(lambda: mistune.markdown('[]( \"' * 200), number=1)\r\n0.4860185150173493\r\n>>> timeit.timeit(lambda: mistune.markdown('[]( \"' * 400), number=1)\r\n3.5869555110111833\r\n>>> timeit.timeit(lambda: mistune.markdown('[]( \"' * 800), number=1)\r\n28.16872687000432\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/190", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/190/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/190/events", "html_url": "https://github.com/lepture/mistune/issues/190", "id": 401525178, "node_id": "MDU6SXNzdWU0MDE1MjUxNzg=", "number": 190, "title": "Combining Renderers individually defined.", "user": {"login": "karlcow", "id": 505230, "node_id": "MDQ6VXNlcjUwNTIzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/505230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlcow", "html_url": "https://github.com/karlcow", "followers_url": "https://api.github.com/users/karlcow/followers", "following_url": "https://api.github.com/users/karlcow/following{/other_user}", "gists_url": "https://api.github.com/users/karlcow/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlcow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlcow/subscriptions", "organizations_url": "https://api.github.com/users/karlcow/orgs", "repos_url": "https://api.github.com/users/karlcow/repos", "events_url": "https://api.github.com/users/karlcow/events{/privacy}", "received_events_url": "https://api.github.com/users/karlcow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-21T22:05:01Z", "updated_at": "2019-12-07T12:44:43Z", "closed_at": "2019-12-07T12:44:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "With individually defined renderers, I can call them independently and this is working:\r\n\r\n```python\r\nfrom markup_extension import Blockquote\r\nfrom markup_extension import Photo\r\n\r\nimport mistune\r\n\r\nrenderer = Photo()\r\nmarkdown = mistune.Markdown(renderer=renderer)\r\n\r\nrenderer = Blockquote()\r\nmarkdown = mistune.Markdown(renderer=renderer)\r\n```\r\n\r\nbut what if I want the two renderers being mixed? in python markdown, it is possible to do something along:\r\n\r\n```python\r\nmarkdown.markdown(text, extensions=['photo', 'blockquote', 'meta'])\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/189", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/189/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/189/events", "html_url": "https://github.com/lepture/mistune/issues/189", "id": 401157246, "node_id": "MDU6SXNzdWU0MDExNTcyNDY=", "number": 189, "title": "wrapping p on some markup constructs", "user": {"login": "karlcow", "id": 505230, "node_id": "MDQ6VXNlcjUwNTIzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/505230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlcow", "html_url": "https://github.com/karlcow", "followers_url": "https://api.github.com/users/karlcow/followers", "following_url": "https://api.github.com/users/karlcow/following{/other_user}", "gists_url": "https://api.github.com/users/karlcow/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlcow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlcow/subscriptions", "organizations_url": "https://api.github.com/users/karlcow/orgs", "repos_url": "https://api.github.com/users/karlcow/repos", "events_url": "https://api.github.com/users/karlcow/events{/privacy}", "received_events_url": "https://api.github.com/users/karlcow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-21T00:36:19Z", "updated_at": "2019-12-07T12:49:18Z", "closed_at": "2019-12-07T12:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI created a very simple extension to render another type of image markup. It was quite straightforward thanks for making it that easy.\r\n\r\n```python\r\n\"\"\"Markdown converter extensions.\"\"\"\r\n\r\nimport mistune\r\n\r\nPHOTO = \"\"\"\r\n<figure>\r\n  <img src='{src}' alt='{alt_text}'/>\r\n  <figcaption>{title}</figcaption>\r\n</figure>\r\n\"\"\"\r\n\r\n\r\nclass Photo(mistune.Renderer):\r\n    \"\"\"Markup Conversion for markdown img to figure.\r\n\r\n    Input:\r\n    ![alt_text](url \"title\")\r\n\r\n    Output:\r\n    <figure>\r\n      <img src='url' alt='alt_text'/>\r\n      <figcaption>title</figcaption>\r\n    </figure>\r\n    \"\"\"\r\n\r\n    def image(self, src, title, alt_text):\r\n        \"\"\"Create the image markup.\"\"\"\r\n        return PHOTO.format(src=src, title=title, alt_text=alt_text)\r\n```\r\n\r\nThis is mostly working. \r\n\r\nmy test is falling because (as it should per spec) mistune wraps the `img` markup with a `p` element:  `<p>image_markup</p>`.\r\n\r\n```\r\n\u2192 nosetests\r\nF.\r\n======================================================================\r\nFAIL: Specific image renderer for Koke.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/karl/code/koke/tests/unit/test_markup.py\", line 21, in test_render_image\r\n    self.assertEqual(actual, expected)\r\nAssertionError: \"<p>\\n<figure>\\n  <img src='/2019/01/01/253[111 chars]p>\\n\" != \"<figure>\\n  <img src='/2019/01/01/2535-mis[98 chars]ure>\"\r\n- <p>\r\n  <figure>\r\n    <img src='/2019/01/01/2535-misere' alt='racines de mis\u00e8re'/>\r\n    <figcaption>Tsujido, Japon, 1er janvier 2019</figcaption>\r\n- </figure>\r\n?          -\r\n+ </figure>- </p>\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.025s\r\n\r\nFAILED (failures=1)\r\n```\r\n\r\nIs there a simple way or guidance for getting rid of opening and closing `<p>` without post-processing. I wonder if an option in `markdown(md_text, block_wrap=False)` would do the job. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/186", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/186/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/186/events", "html_url": "https://github.com/lepture/mistune/issues/186", "id": 397112665, "node_id": "MDU6SXNzdWUzOTcxMTI2NjU=", "number": 186, "title": "Nested code blocks", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-08T22:13:52Z", "updated_at": "2019-01-09T03:01:05Z", "closed_at": "2019-01-09T03:01:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Basically make this work:\r\n\r\n### input\r\n\r\n```markdown\r\n    ```markdown\r\n\r\n        ```yaml\r\n         - oh: hai\r\n        ```\r\n    ```\r\n```\r\n\r\n### output\r\n\r\n```html\r\n    <pre><code lang=\"markdown\">\r\n    ```yaml\r\n    - oh hai\r\n    ```\r\n    </code></pre>\r\n```\r\n\r\n### current output\r\n\r\n```html\r\n    <pre><code lang=\"markdown\">\r\n    ```yaml\r\n    - oh hai\r\n    </code></pre>\r\n    <p>```</p>\r\n```\r\n\r\nI've managed to ~mostly make it work with [this regex](https://github.com/asottile/blacken-docs/blob/71907f3b262a40c4ca23f66b263903ad6012bd57/blacken_docs.py#L17-L22) but plugging it in to `mistune` has left me scratching my head \ud83d\ude06 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/184", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/184/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/184/events", "html_url": "https://github.com/lepture/mistune/issues/184", "id": 395907727, "node_id": "MDU6SXNzdWUzOTU5MDc3Mjc=", "number": 184, "title": "What is the time to merge wip-scanner into master?", "user": {"login": "drmingdrmer", "id": 44069, "node_id": "MDQ6VXNlcjQ0MDY5", "avatar_url": "https://avatars0.githubusercontent.com/u/44069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmingdrmer", "html_url": "https://github.com/drmingdrmer", "followers_url": "https://api.github.com/users/drmingdrmer/followers", "following_url": "https://api.github.com/users/drmingdrmer/following{/other_user}", "gists_url": "https://api.github.com/users/drmingdrmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmingdrmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmingdrmer/subscriptions", "organizations_url": "https://api.github.com/users/drmingdrmer/orgs", "repos_url": "https://api.github.com/users/drmingdrmer/repos", "events_url": "https://api.github.com/users/drmingdrmer/events{/privacy}", "received_events_url": "https://api.github.com/users/drmingdrmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T12:21:09Z", "updated_at": "2019-01-04T12:53:45Z", "closed_at": "2019-01-04T12:53:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see there are several features I want a lot in the branch `wip-scanner`. \ud83d\ude03 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/183", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/183/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/183/events", "html_url": "https://github.com/lepture/mistune/issues/183", "id": 395048960, "node_id": "MDU6SXNzdWUzOTUwNDg5NjA=", "number": 183, "title": "Recommended way to allow a CSS class notation? ", "user": {"login": "ragona", "id": 113273, "node_id": "MDQ6VXNlcjExMzI3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/113273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ragona", "html_url": "https://github.com/ragona", "followers_url": "https://api.github.com/users/ragona/followers", "following_url": "https://api.github.com/users/ragona/following{/other_user}", "gists_url": "https://api.github.com/users/ragona/gists{/gist_id}", "starred_url": "https://api.github.com/users/ragona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ragona/subscriptions", "organizations_url": "https://api.github.com/users/ragona/orgs", "repos_url": "https://api.github.com/users/ragona/repos", "events_url": "https://api.github.com/users/ragona/events{/privacy}", "received_events_url": "https://api.github.com/users/ragona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-01T02:01:48Z", "updated_at": "2019-07-31T18:43:13Z", "closed_at": "2019-07-31T18:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any thoughts on a good way to allow a custom CSS class notation? [This is the basic idea](https://digitaldrummerj.me/styling-jekyll-markdown/) of what I'm thinking about, and I'd love to hear what you think a good path is with Mistune. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/182", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/182/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/182/events", "html_url": "https://github.com/lepture/mistune/issues/182", "id": 394038258, "node_id": "MDU6SXNzdWUzOTQwMzgyNTg=", "number": 182, "title": "Rendering sub-lists for white-space sensitive output formats.", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/3", "html_url": "https://github.com/lepture/mistune/milestone/3", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/3/labels", "id": 3931674, "node_id": "MDk6TWlsZXN0b25lMzkzMTY3NA==", "number": 3, "title": "Mistune 2.0", "description": "A new redesigned Mistune", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2019-01-01T12:13:29Z", "updated_at": "2019-12-07T12:47:06Z", "due_on": "2019-02-28T08:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2018-12-25T17:07:13Z", "updated_at": "2019-12-07T12:46:27Z", "closed_at": "2019-12-07T12:46:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The input:\r\n\r\n```\r\n + list\r\n + with\r\n     + sub\r\n     + items\r\n```\r\n\r\nShould format as:\r\n\r\n + list\r\n + with\r\n     + sub\r\n     + items\r\n\r\nMistune's default renderer does the right thing by nesting `ul` tags:\r\n```\r\n<ul>\r\n<li>list</li>\r\n<li>with<ul>\r\n<li>sub</li>\r\n<li>items</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n```\r\n\r\nBut how would you make a text renderer do the right thing using the API? Unless I'm mistaken, there's no way to know what indent level any given list item should be at.\r\n\r\nHow would you make output like:\r\n```\r\n * list\r\n * with\r\n     * sub\r\n     * items\r\n```\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/181", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/181/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/181/events", "html_url": "https://github.com/lepture/mistune/issues/181", "id": 389417931, "node_id": "MDU6SXNzdWUzODk0MTc5MzE=", "number": 181, "title": "Runtime Error for sublists ", "user": {"login": "tbille", "id": 2707508, "node_id": "MDQ6VXNlcjI3MDc1MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2707508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbille", "html_url": "https://github.com/tbille", "followers_url": "https://api.github.com/users/tbille/followers", "following_url": "https://api.github.com/users/tbille/following{/other_user}", "gists_url": "https://api.github.com/users/tbille/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbille/subscriptions", "organizations_url": "https://api.github.com/users/tbille/orgs", "repos_url": "https://api.github.com/users/tbille/repos", "events_url": "https://api.github.com/users/tbille/events{/privacy}", "received_events_url": "https://api.github.com/users/tbille/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-10T17:55:57Z", "updated_at": "2018-12-11T11:13:14Z", "closed_at": "2018-12-11T11:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I have a little bug with the list parser. When having a list with sub items:\r\n```md\r\n+ list\r\n+ with\r\n  + sub\r\n  + items\r\n```\r\nI get this error: \r\n```\r\nbuiltins.RuntimeError\r\n\r\nRuntimeError: Infinite loop at: \r\n+ sub\r\n+ items\r\n```\r\n\r\nI should be able to convert this into a list with subitems :smile: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/180", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/180/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/180/events", "html_url": "https://github.com/lepture/mistune/issues/180", "id": 369334591, "node_id": "MDU6SXNzdWUzNjkzMzQ1OTE=", "number": 180, "title": "False claims in various mistune pages", "user": {"login": "Al-Caveman", "id": 8865788, "node_id": "MDQ6VXNlcjg4NjU3ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8865788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Al-Caveman", "html_url": "https://github.com/Al-Caveman", "followers_url": "https://api.github.com/users/Al-Caveman/followers", "following_url": "https://api.github.com/users/Al-Caveman/following{/other_user}", "gists_url": "https://api.github.com/users/Al-Caveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Al-Caveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Al-Caveman/subscriptions", "organizations_url": "https://api.github.com/users/Al-Caveman/orgs", "repos_url": "https://api.github.com/users/Al-Caveman/repos", "events_url": "https://api.github.com/users/Al-Caveman/events{/privacy}", "received_events_url": "https://api.github.com/users/Al-Caveman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-11T22:46:21Z", "updated_at": "2018-10-11T23:43:57Z", "closed_at": "2018-10-11T23:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following PR #179, there are other false claims, such as \r\n\r\n> The fastest markdown parser in pure Python with renderer feature. \r\n\r\nin the GitHub page of mistune, and:\r\n\r\n> It is the fastest in all pure Python markdown parsers.\r\n\r\nin http://mistune.readthedocs.io/\r\n\r\nI'd appreciate correcting those currently-false claims.  Currenty, CaveMark is the fastest pure-Python markdown parser.  More details here: https://github.com/Al-Caveman/cavemark", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/178", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/178/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/178/events", "html_url": "https://github.com/lepture/mistune/issues/178", "id": 368534474, "node_id": "MDU6SXNzdWUzNjg1MzQ0NzQ=", "number": 178, "title": "Simple to crash mistune with a RecursionError", "user": {"login": "rspeer", "id": 234227, "node_id": "MDQ6VXNlcjIzNDIyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/234227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspeer", "html_url": "https://github.com/rspeer", "followers_url": "https://api.github.com/users/rspeer/followers", "following_url": "https://api.github.com/users/rspeer/following{/other_user}", "gists_url": "https://api.github.com/users/rspeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspeer/subscriptions", "organizations_url": "https://api.github.com/users/rspeer/orgs", "repos_url": "https://api.github.com/users/rspeer/repos", "events_url": "https://api.github.com/users/rspeer/events{/privacy}", "received_events_url": "https://api.github.com/users/rspeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-10T07:47:25Z", "updated_at": "2018-10-11T07:00:08Z", "closed_at": "2018-10-11T07:00:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Input: N copies of the character `>`, with N >= 1000\r\n\r\nExpected output (what pandoc gives): N nested `<blockquote>` tags, with nothing in the innermost tag\r\n\r\nAcceptable output: maybe the blockquotes just stop after a while and contain literal `>`s or something\r\n\r\nActual behavior: Mistune crashes with a RecursionError\r\n\r\nMarkdown input is not necessarily trustworthy -- it's not up to the programmer whether a user will post 1000 greater-than signs. I don't think catching RecursionError is part of the API of Mistune, so I think it's up to Mistune to recover in this case, perhaps by limiting the depth of its parsing before it hits Python's limit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/177", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/177/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/177/events", "html_url": "https://github.com/lepture/mistune/issues/177", "id": 359302184, "node_id": "MDU6SXNzdWUzNTkzMDIxODQ=", "number": 177, "title": "Cannot use the ORIGINAL markdown parser after using a custom InlineLexer", "user": {"login": "jeicoo", "id": 24286865, "node_id": "MDQ6VXNlcjI0Mjg2ODY1", "avatar_url": "https://avatars1.githubusercontent.com/u/24286865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeicoo", "html_url": "https://github.com/jeicoo", "followers_url": "https://api.github.com/users/jeicoo/followers", "following_url": "https://api.github.com/users/jeicoo/following{/other_user}", "gists_url": "https://api.github.com/users/jeicoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeicoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeicoo/subscriptions", "organizations_url": "https://api.github.com/users/jeicoo/orgs", "repos_url": "https://api.github.com/users/jeicoo/repos", "events_url": "https://api.github.com/users/jeicoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jeicoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-12T03:30:57Z", "updated_at": "2019-12-07T12:46:03Z", "closed_at": "2019-12-07T12:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upon extending the default `InlineLexer`, I  can't parse a `markdown` using the default parser.\r\n\r\n```python\r\nclass CustomRenderer(Renderer):\r\n    # custom tags\r\n\r\nclass CustomLexer(InlineLexer):\r\n    def enable(self):\r\n        self.rules.custom_tag = re.compile(r'your custom pattern')\r\n        self.default_rules.insert(3, 'custom_tag')\r\n\r\ncustom_renderer = CustomRenderer()\r\ncustom_lexer = CustomLexer(custom_renderer)\r\ncustom_lexer.enable()\r\ncustom_markdown = Markdown(renderer=custom_renderer, inline=custom_lexer)\r\ndefault_markdown = Markdown()\r\n```\r\nUsing the `custom_markdown` should not be a problem. However, using the `default_markdown` is another story. You will get this error:\r\n```python\r\nhtml = default_markdown('#markdown')\r\n  File \"/your/path/to/mistune/mistune.py\", line 550, in manipulate\r\n    pattern = getattr(self.rules, key)\r\nAttributeError: 'InlineGrammar' object has no attribute 'custom_tag'\r\n```\r\n\r\nI found out that after inserting into the `default_rules` will update the `default_rules` of the `default_markdown` as well. \r\n\r\nThis is due to the fact that `default_rules` in `InlineLexer` class is a `class attribute`.\r\nThat means any changes in the class's `default_rules` will reflect in other instances of the said class.\r\n\r\nhttps://github.com/lepture/mistune/blob/master/mistune.py#L508\r\n\r\nLooking forward for this issue to be fixed.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/174", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/174/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/174/events", "html_url": "https://github.com/lepture/mistune/issues/174", "id": 349117681, "node_id": "MDU6SXNzdWUzNDkxMTc2ODE=", "number": 174, "title": "Is this possible to use several custom lexers?", "user": {"login": "paternal", "id": 6587757, "node_id": "MDQ6VXNlcjY1ODc3NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6587757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paternal", "html_url": "https://github.com/paternal", "followers_url": "https://api.github.com/users/paternal/followers", "following_url": "https://api.github.com/users/paternal/following{/other_user}", "gists_url": "https://api.github.com/users/paternal/gists{/gist_id}", "starred_url": "https://api.github.com/users/paternal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paternal/subscriptions", "organizations_url": "https://api.github.com/users/paternal/orgs", "repos_url": "https://api.github.com/users/paternal/repos", "events_url": "https://api.github.com/users/paternal/events{/privacy}", "received_events_url": "https://api.github.com/users/paternal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-09T13:01:59Z", "updated_at": "2019-12-07T12:46:49Z", "closed_at": "2019-12-07T12:46:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [`Markdown`](http://mistune.readthedocs.io/en/latest/#mistune.Markdown) class takes as parameter `inline`: *An inline lexer class or instance* (same for `block`).\r\n\r\nAll the examples I saw about adding new lexers use only *one* custom lexer.\r\n\r\nLet's imagine that I want to parse markdown text with both [math](https://github.com/lepture/mistune-contrib/blob/0a2409776bfa3d444d9e480136aff02057b1d8b7/mistune_contrib/math.py) and [wikilink](https://github.com/lepture/mistune#lexers) lexers enabled. How can I do that?\r\n\r\nThanks,\r\n-- Louis", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/173", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/173/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/173/events", "html_url": "https://github.com/lepture/mistune/issues/173", "id": 348227299, "node_id": "MDU6SXNzdWUzNDgyMjcyOTk=", "number": 173, "title": "Terminal Renderer", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T08:52:58Z", "updated_at": "2018-08-09T16:49:27Z", "closed_at": "2018-08-09T16:49:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been looking for a markdown renderer which can format for the terminal. I found a couple on PyPI, but they have all had one issue or another.\r\n\r\nWould there be interest in implementing this for mistune? It looks like mistune has the flexibility to implement such a feature without too much fuss.\r\n\r\nAll I'm really envisaging is a simple renderer which:\r\n\r\n * Wraps paragraphs to the terminal width (Python std lib has the `textwrap` module).\r\n * Underlines headings.\r\n * Preserves wrapping between triple quotes.\r\n * Inserts appropriate spacing between elements.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/172", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/172/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/172/events", "html_url": "https://github.com/lepture/mistune/issues/172", "id": 346783898, "node_id": "MDU6SXNzdWUzNDY3ODM4OTg=", "number": 172, "title": "Multiple XSS", "user": {"login": "ngsimon", "id": 26148566, "node_id": "MDQ6VXNlcjI2MTQ4NTY2", "avatar_url": "https://avatars1.githubusercontent.com/u/26148566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngsimon", "html_url": "https://github.com/ngsimon", "followers_url": "https://api.github.com/users/ngsimon/followers", "following_url": "https://api.github.com/users/ngsimon/following{/other_user}", "gists_url": "https://api.github.com/users/ngsimon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngsimon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngsimon/subscriptions", "organizations_url": "https://api.github.com/users/ngsimon/orgs", "repos_url": "https://api.github.com/users/ngsimon/repos", "events_url": "https://api.github.com/users/ngsimon/events{/privacy}", "received_events_url": "https://api.github.com/users/ngsimon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-01T21:54:24Z", "updated_at": "2018-08-03T13:45:17Z", "closed_at": "2018-08-03T13:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nFollowing the hack.lu CTF 2017 challenge on mistune, multiple XSS were discovered.\r\nThe link of the CTF write-up can be found here: https://ctftime.org/task/4773\r\n\r\nBest regards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/170", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/170/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/170/events", "html_url": "https://github.com/lepture/mistune/issues/170", "id": 340110219, "node_id": "MDU6SXNzdWUzNDAxMTAyMTk=", "number": 170, "title": "Markdown('Text\\n-') returns me '<h2>Text</h2>\\n',is it markdown grammar?", "user": {"login": "lwaix", "id": 18622965, "node_id": "MDQ6VXNlcjE4NjIyOTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/18622965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwaix", "html_url": "https://github.com/lwaix", "followers_url": "https://api.github.com/users/lwaix/followers", "following_url": "https://api.github.com/users/lwaix/following{/other_user}", "gists_url": "https://api.github.com/users/lwaix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwaix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwaix/subscriptions", "organizations_url": "https://api.github.com/users/lwaix/orgs", "repos_url": "https://api.github.com/users/lwaix/repos", "events_url": "https://api.github.com/users/lwaix/events{/privacy}", "received_events_url": "https://api.github.com/users/lwaix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-11T06:37:31Z", "updated_at": "2018-07-11T08:30:40Z", "closed_at": "2018-07-11T08:30:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "![1](https://user-images.githubusercontent.com/18622965/42554544-de62b834-8517-11e8-8e73-03fc9b3604c1.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/169", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/169/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/169/events", "html_url": "https://github.com/lepture/mistune/issues/169", "id": 339653158, "node_id": "MDU6SXNzdWUzMzk2NTMxNTg=", "number": 169, "title": "Why not regard html tags as ordinary text?", "user": {"login": "lwaix", "id": 18622965, "node_id": "MDQ6VXNlcjE4NjIyOTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/18622965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwaix", "html_url": "https://github.com/lwaix", "followers_url": "https://api.github.com/users/lwaix/followers", "following_url": "https://api.github.com/users/lwaix/following{/other_user}", "gists_url": "https://api.github.com/users/lwaix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwaix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwaix/subscriptions", "organizations_url": "https://api.github.com/users/lwaix/orgs", "repos_url": "https://api.github.com/users/lwaix/repos", "events_url": "https://api.github.com/users/lwaix/events{/privacy}", "received_events_url": "https://api.github.com/users/lwaix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-10T00:36:43Z", "updated_at": "2018-07-10T14:14:35Z", "closed_at": "2018-07-10T03:26:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "**When a pair of html tags appear alone in one line,this line might be converted like this:**\r\n\r\n![1](https://user-images.githubusercontent.com/18622965/42482671-7f1e2c16-841b-11e8-9f5c-de07c3eb9016.png)\r\n\r\n**The lines don't be wrapped by Html tags 'p'**\r\n\r\n**Mistune will do this as long as the html tags are legitimate,but I think if I set escape True,it should regard html tags as normal text.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/167", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/167/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/167/events", "html_url": "https://github.com/lepture/mistune/issues/167", "id": 339202245, "node_id": "MDU6SXNzdWUzMzkyMDIyNDU=", "number": 167, "title": "Some details about converting the html tags", "user": {"login": "lwaix", "id": 18622965, "node_id": "MDQ6VXNlcjE4NjIyOTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/18622965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwaix", "html_url": "https://github.com/lwaix", "followers_url": "https://api.github.com/users/lwaix/followers", "following_url": "https://api.github.com/users/lwaix/following{/other_user}", "gists_url": "https://api.github.com/users/lwaix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwaix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwaix/subscriptions", "organizations_url": "https://api.github.com/users/lwaix/orgs", "repos_url": "https://api.github.com/users/lwaix/repos", "events_url": "https://api.github.com/users/lwaix/events{/privacy}", "received_events_url": "https://api.github.com/users/lwaix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-08T06:51:33Z", "updated_at": "2018-07-10T00:50:33Z", "closed_at": "2018-07-10T00:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 0.8.3\r\n\r\n**Mistnue will converting by itself,but there is something uncomfortable on it:**\r\n\r\n### The first problem is:\r\n\r\n**Content:**\r\n\r\n![1](https://user-images.githubusercontent.com/18622965/42417450-20eaa35e-82bd-11e8-8182-9bf9b41ff77e.png)\r\n\r\n**Result:**\r\n\r\n![2](https://user-images.githubusercontent.com/18622965/42417455-259af804-82bd-11e8-8b36-9f8d84f7638e.png)\r\n\r\n**Content:**\r\n\r\n![3](https://user-images.githubusercontent.com/18622965/42417456-27fe8b10-82bd-11e8-935a-0aa1a7d34d5b.png)\r\n\r\n**Result:**\r\n\r\n![4](https://user-images.githubusercontent.com/18622965/42417457-2998080c-82bd-11e8-8d78-bedb55bc0b06.png)\r\n\r\nIt's not symmetrical,although i know nobody will do like this\r\n\r\n### And the second problem:\r\n\r\n**Content:**\r\n\r\n![5](https://user-images.githubusercontent.com/18622965/42417494-3b112ac2-82be-11e8-8b27-2df9a46c59de.png)\r\n\r\n**Result(the html tags don't be wrapped by html tag \"p\"):**\r\n\r\n![6](https://user-images.githubusercontent.com/18622965/42417497-478a5648-82be-11e8-9189-0c3efea58aa9.png)\r\n\r\nFor me, obsessive compulsive disorder, it makes me very uncomfortable.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/166", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/166/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/166/events", "html_url": "https://github.com/lepture/mistune/issues/166", "id": 339141370, "node_id": "MDU6SXNzdWUzMzkxNDEzNzA=", "number": 166, "title": "A bug on the list", "user": {"login": "lwaix", "id": 18622965, "node_id": "MDQ6VXNlcjE4NjIyOTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/18622965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwaix", "html_url": "https://github.com/lwaix", "followers_url": "https://api.github.com/users/lwaix/followers", "following_url": "https://api.github.com/users/lwaix/following{/other_user}", "gists_url": "https://api.github.com/users/lwaix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwaix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwaix/subscriptions", "organizations_url": "https://api.github.com/users/lwaix/orgs", "repos_url": "https://api.github.com/users/lwaix/repos", "events_url": "https://api.github.com/users/lwaix/events{/privacy}", "received_events_url": "https://api.github.com/users/lwaix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-07T12:08:20Z", "updated_at": "2018-07-10T00:24:24Z", "closed_at": "2018-07-10T00:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The version:0.8.3\r\n\r\n**When i edit the articles like this:**\r\n\r\n![1](https://user-images.githubusercontent.com/18622965/42410694-79a0fb8a-8220-11e8-8ada-ad71f10c9dfc.png)\r\n\r\n**It will show me:**\r\n\r\n![2](https://user-images.githubusercontent.com/18622965/42410697-9dbd4e24-8220-11e8-9a6c-563b0c73b634.png)\r\n\r\n**But as long as I write like this(add two enters),it could work well:**\r\n\r\n![3](https://user-images.githubusercontent.com/18622965/42410701-c1a42c2c-8220-11e8-8812-1d9bc692958c.png)\r\n\r\n![4](https://user-images.githubusercontent.com/18622965/42410702-c5a8fba4-8220-11e8-9267-2379f1681cbe.png)\r\n\r\n_**By the way,when a couple of html tags in one line,this line will not be wrapped by tag 'p',it is uncomfortable.**_\r\n\r\n**It looks like:**\r\n\r\n![5](https://user-images.githubusercontent.com/18622965/42415824-ba0d62c0-828f-11e8-8394-02677ebfd308.png)\r\n\r\n\r\n![6](https://user-images.githubusercontent.com/18622965/42410759-de90d2bc-8221-11e8-87dd-3ba8e73ffe17.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/165", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/165/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/165/events", "html_url": "https://github.com/lepture/mistune/issues/165", "id": 338040836, "node_id": "MDU6SXNzdWUzMzgwNDA4MzY=", "number": 165, "title": "Issue rendering consecutive oneliner code block", "user": {"login": "houqp", "id": 670302, "node_id": "MDQ6VXNlcjY3MDMwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/670302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houqp", "html_url": "https://github.com/houqp", "followers_url": "https://api.github.com/users/houqp/followers", "following_url": "https://api.github.com/users/houqp/following{/other_user}", "gists_url": "https://api.github.com/users/houqp/gists{/gist_id}", "starred_url": "https://api.github.com/users/houqp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houqp/subscriptions", "organizations_url": "https://api.github.com/users/houqp/orgs", "repos_url": "https://api.github.com/users/houqp/repos", "events_url": "https://api.github.com/users/houqp/events{/privacy}", "received_events_url": "https://api.github.com/users/houqp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/2", "html_url": "https://github.com/lepture/mistune/milestone/2", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/2/labels", "id": 3087083, "node_id": "MDk6TWlsZXN0b25lMzA4NzA4Mw==", "number": 2, "title": "Version 0.8.4", "description": "", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-02-04T11:11:22Z", "updated_at": "2019-01-01T12:12:40Z", "due_on": null, "closed_at": "2019-01-01T12:12:40Z"}, "comments": 1, "created_at": "2018-07-03T20:18:24Z", "updated_at": "2018-09-15T03:16:50Z", "closed_at": "2018-09-15T03:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following content\r\n\r\n```\r\n```Foo```\r\n\r\n```Bar```\r\n```\r\n\r\ngets picked by the parser as:\r\n\r\nlang: Foo```\r\n\r\ncontent: ```Bar", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/163", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/163/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/163/events", "html_url": "https://github.com/lepture/mistune/issues/163", "id": 336941963, "node_id": "MDU6SXNzdWUzMzY5NDE5NjM=", "number": 163, "title": "question: how to install mistune-contrib?", "user": {"login": "monperrus", "id": 803666, "node_id": "MDQ6VXNlcjgwMzY2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/803666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monperrus", "html_url": "https://github.com/monperrus", "followers_url": "https://api.github.com/users/monperrus/followers", "following_url": "https://api.github.com/users/monperrus/following{/other_user}", "gists_url": "https://api.github.com/users/monperrus/gists{/gist_id}", "starred_url": "https://api.github.com/users/monperrus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monperrus/subscriptions", "organizations_url": "https://api.github.com/users/monperrus/orgs", "repos_url": "https://api.github.com/users/monperrus/repos", "events_url": "https://api.github.com/users/monperrus/events{/privacy}", "received_events_url": "https://api.github.com/users/monperrus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-29T10:10:20Z", "updated_at": "2018-07-08T15:57:35Z", "closed_at": "2018-07-08T07:29:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just install mistune through pip. Works like a charm.\r\n\r\nNow, I need a table of content, how to install and use mistune-contrib?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/162", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/162/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/162/events", "html_url": "https://github.com/lepture/mistune/issues/162", "id": 336385699, "node_id": "MDU6SXNzdWUzMzYzODU2OTk=", "number": 162, "title": "LaTeX Math Rule Matching", "user": {"login": "jonioni", "id": 31494475, "node_id": "MDQ6VXNlcjMxNDk0NDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/31494475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonioni", "html_url": "https://github.com/jonioni", "followers_url": "https://api.github.com/users/jonioni/followers", "following_url": "https://api.github.com/users/jonioni/following{/other_user}", "gists_url": "https://api.github.com/users/jonioni/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonioni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonioni/subscriptions", "organizations_url": "https://api.github.com/users/jonioni/orgs", "repos_url": "https://api.github.com/users/jonioni/repos", "events_url": "https://api.github.com/users/jonioni/events{/privacy}", "received_events_url": "https://api.github.com/users/jonioni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T21:00:42Z", "updated_at": "2018-06-27T23:26:41Z", "closed_at": "2018-06-27T23:25:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to follow the example of adding custom rule to match LaTeX math formula (`$...$`), as in [mistune-contrib](https://github.com/lepture/mistune-contrib/blob/master/mistune_contrib/math.py). My implementation is as follow:\r\n\r\n```python\r\nclass MathInlineLexer(mistune.InlineLexer):\r\n    def __init__(self, *args, **kwargs):\r\n        super(MathInlineLexer, self).__init__(*args, **kwargs)\r\n        self.rules.inline_math = re.compile(r'^\\$(.+?)\\$(?!\\$)')  # or r'^\\$(.+?)\\$'\r\n        self.default_rules.insert(0, 'inline_math')\r\n\r\n    def output_inline_math(self, m):\r\n        return self.renderer.inline_math(m.group(1))\r\n\r\n\r\nclass MathRenderer(mistune.Renderer):\r\n    def inline_math(self, text):\r\n        return '${}$'.format(text)\r\n\r\nrenderer = MathRenderer()\r\nmathInlineLexer = MathInlineLexer(renderer)\r\nparse = mistune.Markdown(\r\n    renderer=renderer, \r\n    inline=mathInlineLexer\r\n)\r\n```\r\n\r\nHowever, for the following example:\r\n\r\n```python\r\nparse(\"by $a_{1} = b_{2}$,\")\r\n```\r\n\r\nThe output is:\r\n\r\n```python\r\n\"<p>by $a<em>{1} = b</em>{2}$, </p>\\n\"\r\n```\r\n\r\nIt seems that the custom `inline_math` rule is never matched even if it is inserted to the top of `default_rules`. The `inline_math()` method is never called.\r\n\r\nThe input string is a valid LaTeX math formula. I'm wondering if there is any thing that I've missed in implementing the custom InlineLexer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/161", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/161/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/161/events", "html_url": "https://github.com/lepture/mistune/issues/161", "id": 333095761, "node_id": "MDU6SXNzdWUzMzMwOTU3NjE=", "number": 161, "title": "spaces in html tags", "user": {"login": "bbadzioch", "id": 15268455, "node_id": "MDQ6VXNlcjE1MjY4NDU1", "avatar_url": "https://avatars3.githubusercontent.com/u/15268455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbadzioch", "html_url": "https://github.com/bbadzioch", "followers_url": "https://api.github.com/users/bbadzioch/followers", "following_url": "https://api.github.com/users/bbadzioch/following{/other_user}", "gists_url": "https://api.github.com/users/bbadzioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbadzioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbadzioch/subscriptions", "organizations_url": "https://api.github.com/users/bbadzioch/orgs", "repos_url": "https://api.github.com/users/bbadzioch/repos", "events_url": "https://api.github.com/users/bbadzioch/events{/privacy}", "received_events_url": "https://api.github.com/users/bbadzioch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/2", "html_url": "https://github.com/lepture/mistune/milestone/2", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/2/labels", "id": 3087083, "node_id": "MDk6TWlsZXN0b25lMzA4NzA4Mw==", "number": 2, "title": "Version 0.8.4", "description": "", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-02-04T11:11:22Z", "updated_at": "2019-01-01T12:12:40Z", "due_on": null, "closed_at": "2019-01-01T12:12:40Z"}, "comments": 1, "created_at": "2018-06-17T21:52:02Z", "updated_at": "2018-09-15T02:33:35Z", "closed_at": "2018-09-15T02:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following works as expected:\r\n\r\n```\r\nimport mistune\r\nmarkdown = mistune.Markdown()\r\nmarkdown('<span style=\"color:red;\">test</span>')\r\n```\r\noutput:\r\n\r\n`<p><span style=\"color:red;\">test</span></p>\\n`\r\n\r\nHowever, adding a space either before or after `=` affects parsing. Input:\r\n\r\n`markdown('<span style =\"color:red;\">test</span>')`\r\n\r\n(note a space before `=`) produces the following output:\r\n\r\n`<p>&lt;span style =\"color:red;\"&gt;test&lt;/span&gt;</p>\\n`\r\n\r\nThis does not happen with  the `parse_block_html=True` option. Input\r\n\r\n```\r\nmarkdown = mistune.Markdown(parse_block_html=True)\r\nmarkdown('<span style =\"color:red;\">test</span>') \r\n```\r\nproduces the following:\r\n\r\n`<p><span style =\"color:red;\">test</span></p>\\n`\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/160", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/160/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/160/events", "html_url": "https://github.com/lepture/mistune/issues/160", "id": 322493642, "node_id": "MDU6SXNzdWUzMjI0OTM2NDI=", "number": 160, "title": "mistune wont recognize img tag", "user": {"login": "softmarshmallow", "id": 16307013, "node_id": "MDQ6VXNlcjE2MzA3MDEz", "avatar_url": "https://avatars3.githubusercontent.com/u/16307013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/softmarshmallow", "html_url": "https://github.com/softmarshmallow", "followers_url": "https://api.github.com/users/softmarshmallow/followers", "following_url": "https://api.github.com/users/softmarshmallow/following{/other_user}", "gists_url": "https://api.github.com/users/softmarshmallow/gists{/gist_id}", "starred_url": "https://api.github.com/users/softmarshmallow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/softmarshmallow/subscriptions", "organizations_url": "https://api.github.com/users/softmarshmallow/orgs", "repos_url": "https://api.github.com/users/softmarshmallow/repos", "events_url": "https://api.github.com/users/softmarshmallow/events{/privacy}", "received_events_url": "https://api.github.com/users/softmarshmallow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-12T08:26:59Z", "updated_at": "2018-05-12T08:33:10Z", "closed_at": "2018-05-12T08:33:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nheres the thing.\r\n\r\n\r\n<img> tag from md will be converted as \r\n\"<td>&lt;img src=\"/art/FadingActionBar.png\" width=\"100%\"&gt;</td>\r\n\"\r\n\r\nhow to solve this?\r\n\r\n\r\nrendered\r\n========\r\n\r\n`ActionBar\r\n======================\r\nName | License | Demo\r\n--- | --- | ---\r\n[FadingActionBar](https://github.com/ManuelPeinado/FadingActionBar) | [Apache License V2](https://www.apache.org/licenses/LICENSE-2.0) | <img src=\"/art/FadingActionBar.png\" width=\"100%\">\r\n[GlassActionBar](https://github.com/ManuelPeinado/GlassActionBar) | [Apache License V2](https://www.apache.org/licenses/LICENSE-2.0) | <img src=\"/art/GlassActionBar.png\" width=\"100%\">\r\n[NotBoringActionBar](https://github.com/flavienlaurent/NotBoringActionBar) | [Apache License V2](https://www.apache.org/licenses/LICENSE-2.0) | <img src=\"/art/NotBoringActionBar.gif\" width=\"49%\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h1>ActionBar</h1>\r\n<table>\r\n<thead><tr>\r\n<th>Name</th>\r\n<th>License</th>\r\n<th>Demo</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><a href=\"https://github.com/ManuelPeinado/FadingActionBar\">FadingActionBar</a></td>\r\n<td><a href=\"https://www.apache.org/licenses/LICENSE-2.0\">Apache License V2</a></td>\r\n<td>&lt;img src=\"/art/FadingActionBar.png\" width=\"100%\"&gt;</td>\r\n</tr>\r\n<tr>\r\n<td><a href=\"https://github.com/ManuelPeinado/GlassActionBar\">GlassActionBar</a></td>\r\n<td><a href=\"https://www.apache.org/licenses/LICENSE-2.0\">Apache License V2</a></td>\r\n<td>&lt;img src=\"/art/GlassActionBar.png\" width=\"100%\"&gt;</td>\r\n</tr>\r\n<tr>\r\n<td><a href=\"https://github.com/flavienlaurent/NotBoringActionBar\">NotBoringActionBar</a></td>\r\n<td><a href=\"https://www.apache.org/licenses/LICENSE-2.0\">Apache License V2</a></td>\r\n<td>&lt;img src=\"/art/NotBoringActionBar.gif\" width=\"49%\"&gt;</td>\r\n</tr>\r\n</tbody>\r\n</table>`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/159", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/159/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/159/events", "html_url": "https://github.com/lepture/mistune/issues/159", "id": 322277535, "node_id": "MDU6SXNzdWUzMjIyNzc1MzU=", "number": 159, "title": "Ignore YAML Front Matter", "user": {"login": "ozzywalsh", "id": 18150509, "node_id": "MDQ6VXNlcjE4MTUwNTA5", "avatar_url": "https://avatars1.githubusercontent.com/u/18150509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozzywalsh", "html_url": "https://github.com/ozzywalsh", "followers_url": "https://api.github.com/users/ozzywalsh/followers", "following_url": "https://api.github.com/users/ozzywalsh/following{/other_user}", "gists_url": "https://api.github.com/users/ozzywalsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozzywalsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozzywalsh/subscriptions", "organizations_url": "https://api.github.com/users/ozzywalsh/orgs", "repos_url": "https://api.github.com/users/ozzywalsh/repos", "events_url": "https://api.github.com/users/ozzywalsh/events{/privacy}", "received_events_url": "https://api.github.com/users/ozzywalsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-11T12:23:28Z", "updated_at": "2018-05-11T16:03:15Z", "closed_at": "2018-05-11T16:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there anyway to have mistune ignore YAML front matter.\r\neg:\r\n```\r\n---\r\ntitle: My Post\r\npublication-date: 2018-07-10\r\nauthor: John Smith\r\n---\r\n## Part 1\r\nMy amazing post.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/158", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/158/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/158/events", "html_url": "https://github.com/lepture/mistune/issues/158", "id": 320060704, "node_id": "MDU6SXNzdWUzMjAwNjA3MDQ=", "number": 158, "title": "Markdown tables inside of ordered lists don't get parsed", "user": {"login": "supersam654", "id": 869213, "node_id": "MDQ6VXNlcjg2OTIxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/869213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supersam654", "html_url": "https://github.com/supersam654", "followers_url": "https://api.github.com/users/supersam654/followers", "following_url": "https://api.github.com/users/supersam654/following{/other_user}", "gists_url": "https://api.github.com/users/supersam654/gists{/gist_id}", "starred_url": "https://api.github.com/users/supersam654/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supersam654/subscriptions", "organizations_url": "https://api.github.com/users/supersam654/orgs", "repos_url": "https://api.github.com/users/supersam654/repos", "events_url": "https://api.github.com/users/supersam654/events{/privacy}", "received_events_url": "https://api.github.com/users/supersam654/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-03T20:04:06Z", "updated_at": "2018-11-20T10:48:05Z", "closed_at": "2018-09-15T02:31:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I nest a table inside of an ordered list (so the list numbers continue), the table doesn't get parsed into HTML.\r\n\r\n```python\r\nimport mistune\r\n\r\ncontent = \"\"\"\r\n1. List item 1\r\n\r\n    | Title |\r\n    | Value |\r\n\r\n2. List item 2\r\n\"\"\"\r\n\r\nmarkdown = mistune.Markdown()\r\nprint(markdown(content))\r\n```\r\nPrints\r\n\r\n```html\r\n<ol>\r\n<li><p>List item 1</p>\r\n<p>| Title |\r\n | Value |</p>\r\n</li>\r\n<li><p>List item 2</p>\r\n</li>\r\n</ol>\r\n```\r\n\r\neven though I was expecting an HTML table inside of the list.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/156", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/156/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/156/events", "html_url": "https://github.com/lepture/mistune/issues/156", "id": 312248152, "node_id": "MDU6SXNzdWUzMTIyNDgxNTI=", "number": 156, "title": "still no support for max_recursive_depth in latest versions", "user": {"login": "vthriller", "id": 176062, "node_id": "MDQ6VXNlcjE3NjA2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/176062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vthriller", "html_url": "https://github.com/vthriller", "followers_url": "https://api.github.com/users/vthriller/followers", "following_url": "https://api.github.com/users/vthriller/following{/other_user}", "gists_url": "https://api.github.com/users/vthriller/gists{/gist_id}", "starred_url": "https://api.github.com/users/vthriller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vthriller/subscriptions", "organizations_url": "https://api.github.com/users/vthriller/orgs", "repos_url": "https://api.github.com/users/vthriller/repos", "events_url": "https://api.github.com/users/vthriller/events{/privacy}", "received_events_url": "https://api.github.com/users/vthriller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/2", "html_url": "https://github.com/lepture/mistune/milestone/2", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/2/labels", "id": 3087083, "node_id": "MDk6TWlsZXN0b25lMzA4NzA4Mw==", "number": 2, "title": "Version 0.8.4", "description": "", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-02-04T11:11:22Z", "updated_at": "2019-01-01T12:12:40Z", "due_on": null, "closed_at": "2019-01-01T12:12:40Z"}, "comments": 1, "created_at": "2018-04-07T22:18:47Z", "updated_at": "2018-09-15T03:17:08Z", "closed_at": "2018-09-15T03:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "In particular I'm referring to the fix for #114 which never made it to the 0.8 release despite being in the `mistune-0.8` branch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/155", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/155/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/155/events", "html_url": "https://github.com/lepture/mistune/issues/155", "id": 310838044, "node_id": "MDU6SXNzdWUzMTA4MzgwNDQ=", "number": 155, "title": "What does parse_block_html and parse_inline_html mean?", "user": {"login": "dAnjou", "id": 117147, "node_id": "MDQ6VXNlcjExNzE0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/117147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dAnjou", "html_url": "https://github.com/dAnjou", "followers_url": "https://api.github.com/users/dAnjou/followers", "following_url": "https://api.github.com/users/dAnjou/following{/other_user}", "gists_url": "https://api.github.com/users/dAnjou/gists{/gist_id}", "starred_url": "https://api.github.com/users/dAnjou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dAnjou/subscriptions", "organizations_url": "https://api.github.com/users/dAnjou/orgs", "repos_url": "https://api.github.com/users/dAnjou/repos", "events_url": "https://api.github.com/users/dAnjou/events{/privacy}", "received_events_url": "https://api.github.com/users/dAnjou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-03T13:31:47Z", "updated_at": "2018-09-15T02:32:07Z", "closed_at": "2018-09-15T02:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't understand the description:\r\n\r\n> **parse_block_html**: parse text only in block level html.\r\n> **parse_inline_html**: parse text only in inline level html.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/154", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/154/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/154/events", "html_url": "https://github.com/lepture/mistune/issues/154", "id": 309093595, "node_id": "MDU6SXNzdWUzMDkwOTM1OTU=", "number": 154, "title": "Lexer missing simple tags inline", "user": {"login": "ksteinfe", "id": 2659599, "node_id": "MDQ6VXNlcjI2NTk1OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2659599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksteinfe", "html_url": "https://github.com/ksteinfe", "followers_url": "https://api.github.com/users/ksteinfe/followers", "following_url": "https://api.github.com/users/ksteinfe/following{/other_user}", "gists_url": "https://api.github.com/users/ksteinfe/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksteinfe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksteinfe/subscriptions", "organizations_url": "https://api.github.com/users/ksteinfe/orgs", "repos_url": "https://api.github.com/users/ksteinfe/repos", "events_url": "https://api.github.com/users/ksteinfe/events{/privacy}", "received_events_url": "https://api.github.com/users/ksteinfe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/3", "html_url": "https://github.com/lepture/mistune/milestone/3", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/3/labels", "id": 3931674, "node_id": "MDk6TWlsZXN0b25lMzkzMTY3NA==", "number": 3, "title": "Mistune 2.0", "description": "A new redesigned Mistune", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2019-01-01T12:13:29Z", "updated_at": "2019-12-07T12:47:06Z", "due_on": "2019-02-28T08:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2018-03-27T19:00:40Z", "updated_at": "2019-12-07T12:47:06Z", "closed_at": "2019-12-07T12:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am struggling to understand the following behavior, in which tags at the start of a line are caught, but those embedded in a larger body of text are not. \r\n\r\nHere's my basic extension, based on the Wikilinks sample. \r\n\r\n```\r\nclass CustomRenderer(Renderer):\r\n    \r\n    def aside_marker(self,content):\r\n        return '<span class=\"aside\">{}</span>'.format(content)\r\n        \r\nclass CustomInlineLexer(InlineLexer):\r\n    def enable_custom(self):\r\n        # add aside rules \r\n        self.rules.aside_marker = re.compile( r'\\(\\((.*?)\\)\\)' )\r\n        self.default_rules.insert(0, 'aside_marker')\r\n    \r\n    def output_aside_marker(self, m):\r\n        return self.renderer.aside_marker(m.group(1))                \r\n\r\nrenderer = CustomRenderer()\r\ninline = CustomInlineLexer(renderer)\r\ninline.enable_custom() # enable the feature\r\nmarkdown = Markdown(renderer, inline=inline)\r\n```\r\n\r\nHere's the behavior I'm trying to understand:\r\n\r\n```\r\nThis paragraph contains an aside. ((This is the aside.)) But markdown doesn't see it.\r\n\r\n((markdown sees this one))\r\n\r\n((and markdown sees this one))\r\n\r\nThis paragraph contains an aside. ((This is the aside.)) But markdown doesn't see it.\r\n```\r\nrenders as:\r\n```\r\n<p>This paragraph contains an aside. ((This is the aside.)) But markdown doesn't see it.</p>\r\n<p><span class=\"aside\">markdown sees this one</span></p>\r\n<p><span class=\"aside\">and markdown sees this one</span></p>\r\n<p>This paragraph contains an aside. ((This is the aside.)) But markdown doesn't see it.</p>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/149", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/149/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/149/events", "html_url": "https://github.com/lepture/mistune/issues/149", "id": 291293124, "node_id": "MDU6SXNzdWUyOTEyOTMxMjQ=", "number": 149, "title": "Markdown definitions not supported", "user": {"login": "philipaxer", "id": 1722260, "node_id": "MDQ6VXNlcjE3MjIyNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1722260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipaxer", "html_url": "https://github.com/philipaxer", "followers_url": "https://api.github.com/users/philipaxer/followers", "following_url": "https://api.github.com/users/philipaxer/following{/other_user}", "gists_url": "https://api.github.com/users/philipaxer/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipaxer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipaxer/subscriptions", "organizations_url": "https://api.github.com/users/philipaxer/orgs", "repos_url": "https://api.github.com/users/philipaxer/repos", "events_url": "https://api.github.com/users/philipaxer/events{/privacy}", "received_events_url": "https://api.github.com/users/philipaxer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-24T17:24:31Z", "updated_at": "2018-01-25T01:13:01Z", "closed_at": "2018-01-25T01:12:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I understand it correct, markdown definitions of the following form is not recognized and treated as code.\r\n\r\nTerm\r\n:       Definition ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/148", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/148/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/148/events", "html_url": "https://github.com/lepture/mistune/issues/148", "id": 287648279, "node_id": "MDU6SXNzdWUyODc2NDgyNzk=", "number": 148, "title": "bug in parsing single tag", "user": {"login": "badbye", "id": 3295865, "node_id": "MDQ6VXNlcjMyOTU4NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3295865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badbye", "html_url": "https://github.com/badbye", "followers_url": "https://api.github.com/users/badbye/followers", "following_url": "https://api.github.com/users/badbye/following{/other_user}", "gists_url": "https://api.github.com/users/badbye/gists{/gist_id}", "starred_url": "https://api.github.com/users/badbye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badbye/subscriptions", "organizations_url": "https://api.github.com/users/badbye/orgs", "repos_url": "https://api.github.com/users/badbye/repos", "events_url": "https://api.github.com/users/badbye/events{/privacy}", "received_events_url": "https://api.github.com/users/badbye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/2", "html_url": "https://github.com/lepture/mistune/milestone/2", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/2/labels", "id": 3087083, "node_id": "MDk6TWlsZXN0b25lMzA4NzA4Mw==", "number": 2, "title": "Version 0.8.4", "description": "", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 6, "state": "closed", "created_at": "2018-02-04T11:11:22Z", "updated_at": "2019-01-01T12:12:40Z", "due_on": null, "closed_at": "2019-01-01T12:12:40Z"}, "comments": 1, "created_at": "2018-01-11T03:01:07Z", "updated_at": "2018-09-15T03:07:51Z", "closed_at": "2018-09-15T03:07:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nmarkdown = mistune.Renderer(escape=False, hard_wrap=True)\r\nmarkdown('<a>\\n</a>')   # works\r\n# '<p><a>\\n</a></p>\r\nmarkdown('</br>')          # fail to escape\r\n# '<p>&lt;/br&gt;</p>\\n'\r\nmarkdown('</a>')           # fail to escape\r\n'<p>&lt;/a&gt;</p>\\n'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/147", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/147/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/147/events", "html_url": "https://github.com/lepture/mistune/issues/147", "id": 282548097, "node_id": "MDU6SXNzdWUyODI1NDgwOTc=", "number": 147, "title": "BlockLexer.parse() is not idempotent", "user": {"login": "lastcoolnameleft", "id": 686999, "node_id": "MDQ6VXNlcjY4Njk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/686999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lastcoolnameleft", "html_url": "https://github.com/lastcoolnameleft", "followers_url": "https://api.github.com/users/lastcoolnameleft/followers", "following_url": "https://api.github.com/users/lastcoolnameleft/following{/other_user}", "gists_url": "https://api.github.com/users/lastcoolnameleft/gists{/gist_id}", "starred_url": "https://api.github.com/users/lastcoolnameleft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lastcoolnameleft/subscriptions", "organizations_url": "https://api.github.com/users/lastcoolnameleft/orgs", "repos_url": "https://api.github.com/users/lastcoolnameleft/repos", "events_url": "https://api.github.com/users/lastcoolnameleft/events{/privacy}", "received_events_url": "https://api.github.com/users/lastcoolnameleft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-15T21:07:38Z", "updated_at": "2017-12-16T17:34:03Z", "closed_at": "2017-12-16T06:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would expect that calling parse two times with the same value would return the same result; however, it appears to append.  \r\n\r\n```\r\n>>> import mistune\r\n>>> lexer = mistune.BlockLexer()\r\n>>> lexer.parse('foo')\r\n[{'type': 'paragraph', 'text': 'foo'}]\r\n>>> lexer.parse('foo')\r\n[{'type': 'paragraph', 'text': 'foo'}, {'type': 'paragraph', 'text': 'foo'}]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/146", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/146/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/146/events", "html_url": "https://github.com/lepture/mistune/issues/146", "id": 281935943, "node_id": "MDU6SXNzdWUyODE5MzU5NDM=", "number": 146, "title": "Parser confused by empty triple backtick code block", "user": {"login": "matthew-brett", "id": 67612, "node_id": "MDQ6VXNlcjY3NjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/67612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-brett", "html_url": "https://github.com/matthew-brett", "followers_url": "https://api.github.com/users/matthew-brett/followers", "following_url": "https://api.github.com/users/matthew-brett/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-brett/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-brett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-brett/subscriptions", "organizations_url": "https://api.github.com/users/matthew-brett/orgs", "repos_url": "https://api.github.com/users/matthew-brett/repos", "events_url": "https://api.github.com/users/matthew-brett/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-brett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-13T23:47:18Z", "updated_at": "2019-12-07T13:03:30Z", "closed_at": "2019-12-07T12:48:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the nice library.   While I was doing some unit tests, I found this problem.\r\n\r\nFor the following code:\r\n\r\n    import mistune\r\n\r\n    in_str = \"\"\"\\\r\n    Text\r\n\r\n    ```\r\n    ```\r\n\r\n    More text\r\n\r\n    ```\r\n    # Comment\r\n    ```\r\n    \"\"\"\r\n\r\n    print(mistune.markdown(in_str))\r\n\r\nI get:\r\n\r\n```\r\n<p>Text</p>\r\n<pre><code>```\r\n\r\nMore text\r\n</code></pre>\r\n<h1>Comment</h1>\r\n<p>```</p>\r\n```\r\n\r\nThe output looks correct to me without the last backtick code block...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/145", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/145/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/145/events", "html_url": "https://github.com/lepture/mistune/issues/145", "id": 281028254, "node_id": "MDU6SXNzdWUyODEwMjgyNTQ=", "number": 145, "title": "Ability to render custom tags", "user": {"login": "codevenkat", "id": 33937389, "node_id": "MDQ6VXNlcjMzOTM3Mzg5", "avatar_url": "https://avatars2.githubusercontent.com/u/33937389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codevenkat", "html_url": "https://github.com/codevenkat", "followers_url": "https://api.github.com/users/codevenkat/followers", "following_url": "https://api.github.com/users/codevenkat/following{/other_user}", "gists_url": "https://api.github.com/users/codevenkat/gists{/gist_id}", "starred_url": "https://api.github.com/users/codevenkat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codevenkat/subscriptions", "organizations_url": "https://api.github.com/users/codevenkat/orgs", "repos_url": "https://api.github.com/users/codevenkat/repos", "events_url": "https://api.github.com/users/codevenkat/events{/privacy}", "received_events_url": "https://api.github.com/users/codevenkat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-11T14:06:01Z", "updated_at": "2017-12-12T01:59:40Z", "closed_at": "2017-12-12T01:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "So basically, I am using mistune to store my blog posts. And sometimes I have some images or iframes or other tags that I only use in that article. So I want to be able to render customly, using some syntax like : `~img-href\"link\"alt\"image\"~` and it would be parsed as `<img href=\"link\" alt=\"image\"`. It is not just for that tag but any custom tag we want to make, like `~anytag~` render as `<anytag>`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/144", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/144/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/144/events", "html_url": "https://github.com/lepture/mistune/issues/144", "id": 277944267, "node_id": "MDU6SXNzdWUyNzc5NDQyNjc=", "number": 144, "title": "Indentation stripped from first line of code", "user": {"login": "miguelbarao", "id": 6104818, "node_id": "MDQ6VXNlcjYxMDQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6104818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelbarao", "html_url": "https://github.com/miguelbarao", "followers_url": "https://api.github.com/users/miguelbarao/followers", "following_url": "https://api.github.com/users/miguelbarao/following{/other_user}", "gists_url": "https://api.github.com/users/miguelbarao/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelbarao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelbarao/subscriptions", "organizations_url": "https://api.github.com/users/miguelbarao/orgs", "repos_url": "https://api.github.com/users/miguelbarao/repos", "events_url": "https://api.github.com/users/miguelbarao/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelbarao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-29T23:22:53Z", "updated_at": "2017-12-01T12:44:55Z", "closed_at": "2017-12-01T12:44:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When rendering code, the indentation of the first line of code is removed.\r\nExamples:\r\n\r\n```\r\n    ```asm\r\n        first line, indentation stripped\r\n        second line, indentation preserved\r\n    ```\r\n```\r\nrenders as \r\n\r\n```\r\nfirst line, indentation stripped\r\n    second line, indentation preserved\r\n```\r\n\r\nIf no language is specified, indentation is well preserved.\r\nThis can be checked in the Renderer example provided in the README.md", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/142", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/142/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/142/events", "html_url": "https://github.com/lepture/mistune/issues/142", "id": 273649015, "node_id": "MDU6SXNzdWUyNzM2NDkwMTU=", "number": 142, "title": "code block with empty line within list items not generate properly", "user": {"login": "crazytroll", "id": 999034, "node_id": "MDQ6VXNlcjk5OTAzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/999034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crazytroll", "html_url": "https://github.com/crazytroll", "followers_url": "https://api.github.com/users/crazytroll/followers", "following_url": "https://api.github.com/users/crazytroll/following{/other_user}", "gists_url": "https://api.github.com/users/crazytroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/crazytroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crazytroll/subscriptions", "organizations_url": "https://api.github.com/users/crazytroll/orgs", "repos_url": "https://api.github.com/users/crazytroll/repos", "events_url": "https://api.github.com/users/crazytroll/events{/privacy}", "received_events_url": "https://api.github.com/users/crazytroll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-11-14T02:43:32Z", "updated_at": "2019-12-07T12:48:55Z", "closed_at": "2019-12-07T12:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, when i generate list item with code block inside, if the code block has empty line the generated result seems not render properly. here is the example markdown.\r\n\r\nhttps://gist.githubusercontent.com/crazytroll/2763efcfeb6c4e3afdbc72380d2afcc0/raw/b387984733bb7fe1c15c37ff663eefd6de93b7d4/markdown_with_empty_lines.md\r\n\r\nhere is the generated result, it seems some code block directive did not been parsed.\r\n\r\nhttps://gist.githubusercontent.com/crazytroll/2763efcfeb6c4e3afdbc72380d2afcc0/raw/b387984733bb7fe1c15c37ff663eefd6de93b7d4/markdown_with_empty_lines.html\r\n\r\nif i deleted these empty lines(inside the last two code block):\r\n\r\nhttps://gist.github.com/crazytroll/2763efcfeb6c4e3afdbc72380d2afcc0/raw/b387984733bb7fe1c15c37ff663eefd6de93b7d4/markdown_without_empty_lines.md\r\n\r\nthen the it works well. here is the generated result: \r\n\r\nhttps://gist.github.com/crazytroll/2763efcfeb6c4e3afdbc72380d2afcc0/raw/b387984733bb7fe1c15c37ff663eefd6de93b7d4/markdown_without_empty_lines.html\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/141", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/141/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/141/events", "html_url": "https://github.com/lepture/mistune/issues/141", "id": 273183430, "node_id": "MDU6SXNzdWUyNzMxODM0MzA=", "number": 141, "title": "Tests failing with 0.8.1", "user": {"login": "Cogitri", "id": 8766773, "node_id": "MDQ6VXNlcjg3NjY3NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8766773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cogitri", "html_url": "https://github.com/Cogitri", "followers_url": "https://api.github.com/users/Cogitri/followers", "following_url": "https://api.github.com/users/Cogitri/following{/other_user}", "gists_url": "https://api.github.com/users/Cogitri/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cogitri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cogitri/subscriptions", "organizations_url": "https://api.github.com/users/Cogitri/orgs", "repos_url": "https://api.github.com/users/Cogitri/repos", "events_url": "https://api.github.com/users/Cogitri/events{/privacy}", "received_events_url": "https://api.github.com/users/Cogitri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-11T23:09:00Z", "updated_at": "2017-12-04T05:02:58Z", "closed_at": "2017-12-04T05:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently one test is failing across multiple systems:\r\n```\r\n======================================================== test session starts ========================================================\r\nplatform linux2 -- Python 2.7.14, pytest-3.2.3, py-1.4.34, pluggy-0.4.0\r\nrootdir: /var/tmp/paludis/build/dev-python-mistune-0.8.1/work/PYTHON_ABIS/2.7/mistune-0.8.1, inifile:\r\nplugins: virtualenv-1.2.11, shutil-1.2.11, expect-1.1.0, cov-2.5.1, hypothesis-3.36.0\r\ncollected 66 items                                                                                                                   \r\n\r\ntests/test_cases.py ......................F..........................\r\ntests/test_extra.py ............\r\ntests/test_subclassing.py .....\r\n\r\n============================================================= FAILURES ==============================================================\r\n__________________________________________________________ test_extra[22] ___________________________________________________________\r\n\r\nfolder = '/var/tmp/paludis/build/dev-python-mistune-0.8.1/work/PYTHON_ABIS/2.7/mistune-0.8.1/tests/fixtures/extra'\r\nname = 'case_insensitive_refs'\r\n\r\n    def render(folder, name):\r\n        filepath = os.path.join(folder, name + '.text')\r\n        with open(filepath) as f:\r\n            content = f.read()\r\n    \r\n        html = m.parse(content)\r\n    \r\n        filepath = os.path.join(folder, name + '.html')\r\n        with open(filepath) as f:\r\n            result = f.read()\r\n    \r\n        html = re.sub(r'\\s', '', html)\r\n        result = re.sub(r'\\s', '', result)\r\n        for i, s in enumerate(html):\r\n            if s != result[i]:\r\n                begin = max(i - 30, 0)\r\n                msg = '\\n\\n%s\\n------Not Equal(%d)------\\n%s' % (\r\n                    html[begin:i+30], i, result[begin:i+30]\r\n                )\r\n>               raise ValueError(msg)\r\nE               ValueError: \r\nE               \r\nE               <p>[hi]</p>\r\nE               ------Not Equal(3)------\r\nE               <p><ahref=\"/url\">hi</a></p>\r\n\r\ntests/test_cases.py:30: ValueError\r\n========================================================= warnings summary ==========================================================\r\ntests/test_cases.py::test_extra\r\n  yield tests are deprecated, and scheduled to be removed in pytest 4.0\r\n\r\ntests/test_cases.py::test_normal\r\n  yield tests are deprecated, and scheduled to be removed in pytest 4.0\r\n\r\n-- Docs: http://doc.pytest.org/en/latest/warnings.html\r\n========================================== 1 failed, 65 passed, 2 warnings in 1.21 seconds ==========================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/138", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/138/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/138/events", "html_url": "https://github.com/lepture/mistune/issues/138", "id": 256279927, "node_id": "MDU6SXNzdWUyNTYyNzk5Mjc=", "number": 138, "title": "How to implement the picture set renderer like typlog?", "user": {"login": "frostming", "id": 16336606, "node_id": "MDQ6VXNlcjE2MzM2NjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/16336606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frostming", "html_url": "https://github.com/frostming", "followers_url": "https://api.github.com/users/frostming/followers", "following_url": "https://api.github.com/users/frostming/following{/other_user}", "gists_url": "https://api.github.com/users/frostming/gists{/gist_id}", "starred_url": "https://api.github.com/users/frostming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frostming/subscriptions", "organizations_url": "https://api.github.com/users/frostming/orgs", "repos_url": "https://api.github.com/users/frostming/repos", "events_url": "https://api.github.com/users/frostming/events{/privacy}", "received_events_url": "https://api.github.com/users/frostming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-08T14:54:49Z", "updated_at": "2017-09-09T16:27:15Z", "closed_at": "2017-09-09T16:27:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I have studied the source code of mistune for a night and didn't figure it out\r\n\r\nCan you give me any idea how to make it?\r\n\r\nElegant parser by the way ^_^", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/137", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/137/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/137/events", "html_url": "https://github.com/lepture/mistune/issues/137", "id": 255702678, "node_id": "MDU6SXNzdWUyNTU3MDI2Nzg=", "number": 137, "title": "nested html links are broken with parse_block_html ", "user": {"login": "jvanasco", "id": 204779, "node_id": "MDQ6VXNlcjIwNDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanasco", "html_url": "https://github.com/jvanasco", "followers_url": "https://api.github.com/users/jvanasco/followers", "following_url": "https://api.github.com/users/jvanasco/following{/other_user}", "gists_url": "https://api.github.com/users/jvanasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanasco/subscriptions", "organizations_url": "https://api.github.com/users/jvanasco/orgs", "repos_url": "https://api.github.com/users/jvanasco/repos", "events_url": "https://api.github.com/users/jvanasco/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanasco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-06T18:37:35Z", "updated_at": "2017-11-30T05:23:04Z", "closed_at": "2017-11-30T05:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "this is a variant of #81\r\n\r\n    example_in = '<div><a href=\"https://example.com\">Example.com</a></div>'\r\n    mistune.markdown(example_in, escape=False, parse_block_html=True)\r\n\r\nwill generate:\r\n\r\n    <div><a href=\"<a href=\"https://example.com\"&gt;Example.com\">https://example.com\"&gt;Example.com</a></a></div>\r\n\r\nif escape is toggled to True, it is also broken:\r\n\r\n   '&lt;div&gt;&lt;a href=\"&lt;a href=\"https://example.com\"&gt;Example.com\"&gt;https://example.com\"&gt;Example.com&lt;/a&gt;&lt;/a&gt;&lt;/div&gt;\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/136", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/136/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/136/events", "html_url": "https://github.com/lepture/mistune/issues/136", "id": 251582722, "node_id": "MDU6SXNzdWUyNTE1ODI3MjI=", "number": 136, "title": "markdown within html block  inside a markdown table not parsed with parse_block_html=True", "user": {"login": "idnsunset", "id": 31075263, "node_id": "MDQ6VXNlcjMxMDc1MjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/31075263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idnsunset", "html_url": "https://github.com/idnsunset", "followers_url": "https://api.github.com/users/idnsunset/followers", "following_url": "https://api.github.com/users/idnsunset/following{/other_user}", "gists_url": "https://api.github.com/users/idnsunset/gists{/gist_id}", "starred_url": "https://api.github.com/users/idnsunset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idnsunset/subscriptions", "organizations_url": "https://api.github.com/users/idnsunset/orgs", "repos_url": "https://api.github.com/users/idnsunset/repos", "events_url": "https://api.github.com/users/idnsunset/events{/privacy}", "received_events_url": "https://api.github.com/users/idnsunset/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-21T08:19:09Z", "updated_at": "2018-09-15T02:36:06Z", "closed_at": "2018-09-15T02:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a case that I need to use a list in a table cell, so I put something like `<ul><li>markdown syntax text</li></ul>` between a pair of pipe lines, but the markdown text is not parsed when I set `parse_block_html = True`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/135", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/135/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/135/events", "html_url": "https://github.com/lepture/mistune/issues/135", "id": 250272298, "node_id": "MDU6SXNzdWUyNTAyNzIyOTg=", "number": 135, "title": "Code block with 4 leading spaces", "user": {"login": "madjxatw", "id": 6035833, "node_id": "MDQ6VXNlcjYwMzU4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6035833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madjxatw", "html_url": "https://github.com/madjxatw", "followers_url": "https://api.github.com/users/madjxatw/followers", "following_url": "https://api.github.com/users/madjxatw/following{/other_user}", "gists_url": "https://api.github.com/users/madjxatw/gists{/gist_id}", "starred_url": "https://api.github.com/users/madjxatw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madjxatw/subscriptions", "organizations_url": "https://api.github.com/users/madjxatw/orgs", "repos_url": "https://api.github.com/users/madjxatw/repos", "events_url": "https://api.github.com/users/madjxatw/events{/privacy}", "received_events_url": "https://api.github.com/users/madjxatw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-08-15T09:58:41Z", "updated_at": "2017-08-16T04:48:17Z", "closed_at": "2017-08-16T04:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I put  a code block with 4 leading spaces, then a blank line below and start a new paragraph. \r\n```\r\n    4 leading spaces and my code here\r\n\r\nnew parapraph\r\n```\r\nI found  the blank line is also wrapped into `<pre><code>` tags which is not correct. \r\n```html\r\n<pre><code>4 leading spaces and my code\r\n\r\n\u00a0</code></pre><p>new paragraph</p>\r\n```\r\nAs my understanding, the blank line is intended to tell where the code block should ends but not the part of code block, isn't it? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/134", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/134/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/134/events", "html_url": "https://github.com/lepture/mistune/issues/134", "id": 249357805, "node_id": "MDU6SXNzdWUyNDkzNTc4MDU=", "number": 134, "title": "blockquote with four leading spaces", "user": {"login": "madjxatw", "id": 6035833, "node_id": "MDQ6VXNlcjYwMzU4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6035833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madjxatw", "html_url": "https://github.com/madjxatw", "followers_url": "https://api.github.com/users/madjxatw/followers", "following_url": "https://api.github.com/users/madjxatw/following{/other_user}", "gists_url": "https://api.github.com/users/madjxatw/gists{/gist_id}", "starred_url": "https://api.github.com/users/madjxatw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madjxatw/subscriptions", "organizations_url": "https://api.github.com/users/madjxatw/orgs", "repos_url": "https://api.github.com/users/madjxatw/repos", "events_url": "https://api.github.com/users/madjxatw/events{/privacy}", "received_events_url": "https://api.github.com/users/madjxatw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-10T14:05:16Z", "updated_at": "2017-08-15T09:40:47Z", "closed_at": "2017-08-15T09:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using four leading spaces  or a TAB for a blockquote content, all the following blank lines without indentation are also put into the `<blockquote>`  tag.\r\nIn the example below, I put two blank lines beneath the quotation line.\r\n\r\nInput:\r\n```\r\n    some quotation\r\n\r\n\r\nothers\r\n```\r\n\r\nOutput:\r\n```\r\n<blockquote>\r\n<p>some quotation</p>\r\n\r\n\r\n</blockquote>\r\n<p>others</p>\r\n```\r\n\r\nIt should be:\r\n```\r\n<blockquote>\r\n<p>some quotation</p>\r\n</blockquote>\r\n\r\n\r\n<p>others</p>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/133", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/133/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/133/events", "html_url": "https://github.com/lepture/mistune/issues/133", "id": 249353891, "node_id": "MDU6SXNzdWUyNDkzNTM4OTE=", "number": 133, "title": "parse_block_html with hard_wrap=True", "user": {"login": "madjxatw", "id": 6035833, "node_id": "MDQ6VXNlcjYwMzU4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6035833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madjxatw", "html_url": "https://github.com/madjxatw", "followers_url": "https://api.github.com/users/madjxatw/followers", "following_url": "https://api.github.com/users/madjxatw/following{/other_user}", "gists_url": "https://api.github.com/users/madjxatw/gists{/gist_id}", "starred_url": "https://api.github.com/users/madjxatw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madjxatw/subscriptions", "organizations_url": "https://api.github.com/users/madjxatw/orgs", "repos_url": "https://api.github.com/users/madjxatw/repos", "events_url": "https://api.github.com/users/madjxatw/events{/privacy}", "received_events_url": "https://api.github.com/users/madjxatw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-10T13:53:14Z", "updated_at": "2018-09-15T03:16:16Z", "closed_at": "2018-09-15T03:16:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When setting both `parse_blcok_html` and `hard_wrap` to True,  each html line will be appended with a `<br>` except the last line.\r\n\r\nInput:\r\n```\r\n<div class=\"test\">\r\n<p>test1</p>\r\ntest 2\r\n<p>test3</p>\r\n</div>\r\n```\r\nOutput:\r\n```\r\n<div class=\"test\"><br>\r\n<p>test 1</p><br>\r\ntest 2<br>\r\n<p>test 3</p></div>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/132", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/132/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/132/events", "html_url": "https://github.com/lepture/mistune/issues/132", "id": 234604130, "node_id": "MDU6SXNzdWUyMzQ2MDQxMzA=", "number": 132, "title": "[v0.7.4 suggestion] move `output_*` for block rules from class Markdown() into class BlockLexer()", "user": {"login": "vc12345679", "id": 9109415, "node_id": "MDQ6VXNlcjkxMDk0MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9109415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vc12345679", "html_url": "https://github.com/vc12345679", "followers_url": "https://api.github.com/users/vc12345679/followers", "following_url": "https://api.github.com/users/vc12345679/following{/other_user}", "gists_url": "https://api.github.com/users/vc12345679/gists{/gist_id}", "starred_url": "https://api.github.com/users/vc12345679/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vc12345679/subscriptions", "organizations_url": "https://api.github.com/users/vc12345679/orgs", "repos_url": "https://api.github.com/users/vc12345679/repos", "events_url": "https://api.github.com/users/vc12345679/events{/privacy}", "received_events_url": "https://api.github.com/users/vc12345679/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/mistune/milestones/3", "html_url": "https://github.com/lepture/mistune/milestone/3", "labels_url": "https://api.github.com/repos/lepture/mistune/milestones/3/labels", "id": 3931674, "node_id": "MDk6TWlsZXN0b25lMzkzMTY3NA==", "number": 3, "title": "Mistune 2.0", "description": "A new redesigned Mistune", "creator": {"login": "lepture", "id": 290496, "node_id": "MDQ6VXNlcjI5MDQ5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/290496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lepture", "html_url": "https://github.com/lepture", "followers_url": "https://api.github.com/users/lepture/followers", "following_url": "https://api.github.com/users/lepture/following{/other_user}", "gists_url": "https://api.github.com/users/lepture/gists{/gist_id}", "starred_url": "https://api.github.com/users/lepture/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lepture/subscriptions", "organizations_url": "https://api.github.com/users/lepture/orgs", "repos_url": "https://api.github.com/users/lepture/repos", "events_url": "https://api.github.com/users/lepture/events{/privacy}", "received_events_url": "https://api.github.com/users/lepture/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2019-01-01T12:13:29Z", "updated_at": "2019-12-07T12:47:06Z", "due_on": "2019-02-28T08:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2017-06-08T17:41:50Z", "updated_at": "2019-12-07T12:44:57Z", "closed_at": "2019-12-07T12:44:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to customize mistune in my blog server, I read the source code and found the implementations for inline-rules and block-rules are not unified.\r\n1. To implement a **inline extension**, I only need to wrap a **Renderer** class and a **InlineLexer** class.\r\ne.g.,\r\n```python\r\nimport re\r\nfrom mistune import InlineLexer, Renderer\r\n\r\nclass KaTeXInlineRenderer(Renderer):\r\n    def __init__(self, *args, **kwargs):\r\n        super(KaTeXRenderer, self).__init__(*args, **kwargs)\r\n\r\n    def inlinekatex(self, text):\r\n        return '<tex class=\"tex-inline\">%s</tex>' % text\r\n\r\n\r\nclass KaTeXInlineLexer(InlineLexer):\r\n    def __init__(self, *args, **kwargs):\r\n        super(KaTeXInlineLexer, self).__init__(*args, **kwargs)\r\n        self.enable_katexinline()\r\n\r\n    def enable_katexinline(self):\r\n        self.rules.inlinekatex = re.compile(r'^\\${2}([\\s\\S]*?)\\${2}(?!\\$)')  # $tex$\r\n        self.default_rules.insert(3, 'inlinekatex')\r\n        self.rules.text = re.compile(r'^[\\s\\S]+?(?=[\\\\<!\\[_*`~\\$]|https?://| {2,}\\n|$)')\r\n\r\n    def output_inlinekatex(self, m):\r\n        return self.renderer.inlinekatex(m.group(1))\r\n\r\n#----------------example----------------\r\nfrom mistune import Markdown\r\nrenderer = KaTeXInlineRenderer()\r\ninline = KaTeXInlineLexer(renderer=renderer)\r\nmarkdown = Markdown(renderer=renderer, inline=inline)\r\n```\r\n\r\n2. While for a **block extension**, **Renderer**/**BlockLexer**/**Markdown**, these three classes need to be wrapped.\r\ne.g.,\r\n```python\r\nimport re\r\nfrom mistune import Renderer, Markdown, BlockLexer\r\n\r\n\r\nclass KaTeXBlockRenderer(Renderer):\r\n    def __init__(self, *args, **kwargs):\r\n        super(KaTeXRenderer, self).__init__(*args, **kwargs)\r\n\r\n    def blockkatex(self, text):\r\n        return '<tex class=\"tex-block\">%s</tex>' % text\r\n\r\n\r\nclass KaTeXBlockLexer(BlockLexer):\r\n    def __init__(self, *args, **kwargs):\r\n        super(KaTeXBlockLexer, self).__init__(*args, **kwargs)\r\n        self.enable_katexblock()\r\n\r\n    def enable_katexblock(self):\r\n        self.rules.blockkatex = re.compile(r'^\\\\\\\\\\[(.*?)\\\\\\\\\\]', re.DOTALL)  # \\[ ... \\]\r\n        self.default_rules.insert(0, 'blockkatex')\r\n\r\n    def parse_blockkatex(self, m):\r\n        self.tokens.append({\r\n            'type': 'blockkatex',\r\n            'text': m.group(1)\r\n        })\r\n\r\n\r\nclass CustomMarkdown(Markdown):\r\n    def output_blockkatex(self):\r\n        return self.renderer.blockkatex(self.token['text'])\r\n\r\n#----------------example----------------\r\nrenderer = KaTeXBlockRenderer()\r\nblock = KaTeXBlockLexer()\r\nmarkdown = CustomMarkdown(renderer=renderer, block=block)\r\n```\r\nThe implementations are not unified, and the logic is a little bit roundabout.\r\nTherefore, it is probably a good choice to move `output_*` for block rules from **class Markdown()** into **class BlockLexer()**.\r\nMaybe I could make some efforts if it is acceptable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/127", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/127/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/127/events", "html_url": "https://github.com/lepture/mistune/issues/127", "id": 217135773, "node_id": "MDU6SXNzdWUyMTcxMzU3NzM=", "number": 127, "title": "Improvement: Use <th> for table header cells?", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T04:48:22Z", "updated_at": "2017-03-27T04:51:52Z", "closed_at": "2017-03-27T04:51:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently it outputs:\r\n\r\n```html\r\n<thead><tr><td>hi</td></tr></thead>\r\n```\r\n\r\nSuggestion:\r\n\r\n```html\r\n<thead><tr><th>hi</th></tr></thead>\r\n```\r\n\r\nLove the tool by the way! \ud83d\udc4d ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/126", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/126/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/126/events", "html_url": "https://github.com/lepture/mistune/issues/126", "id": 215460635, "node_id": "MDU6SXNzdWUyMTU0NjA2MzU=", "number": 126, "title": "Code span `<!--some thing-->` in table cell parsing failed", "user": {"login": "richardchien", "id": 5317095, "node_id": "MDQ6VXNlcjUzMTcwOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5317095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardchien", "html_url": "https://github.com/richardchien", "followers_url": "https://api.github.com/users/richardchien/followers", "following_url": "https://api.github.com/users/richardchien/following{/other_user}", "gists_url": "https://api.github.com/users/richardchien/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardchien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardchien/subscriptions", "organizations_url": "https://api.github.com/users/richardchien/orgs", "repos_url": "https://api.github.com/users/richardchien/repos", "events_url": "https://api.github.com/users/richardchien/events{/privacy}", "received_events_url": "https://api.github.com/users/richardchien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-20T15:38:08Z", "updated_at": "2017-03-20T15:58:15Z", "closed_at": "2017-03-20T15:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some markdown code like this:\r\n\r\n```md\r\n| C1 | C2 |\r\n| --- | --- |\r\n| 1   | `<!--more-->` |\r\n| 2   | `---more---`  |\r\n```\r\n\r\nand it's not parsed correctly:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/5317095/24107580/187f92b4-0dc6-11e7-8d33-e2e0d7b34197.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/125", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/125/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/125/events", "html_url": "https://github.com/lepture/mistune/issues/125", "id": 214392586, "node_id": "MDU6SXNzdWUyMTQzOTI1ODY=", "number": 125, "title": "Non-breaking spaces silently converted to regular spaces", "user": {"login": "encukou", "id": 302922, "node_id": "MDQ6VXNlcjMwMjkyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/302922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/encukou", "html_url": "https://github.com/encukou", "followers_url": "https://api.github.com/users/encukou/followers", "following_url": "https://api.github.com/users/encukou/following{/other_user}", "gists_url": "https://api.github.com/users/encukou/gists{/gist_id}", "starred_url": "https://api.github.com/users/encukou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/encukou/subscriptions", "organizations_url": "https://api.github.com/users/encukou/orgs", "repos_url": "https://api.github.com/users/encukou/repos", "events_url": "https://api.github.com/users/encukou/events{/privacy}", "received_events_url": "https://api.github.com/users/encukou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-15T13:42:54Z", "updated_at": "2017-03-17T01:06:46Z", "closed_at": "2017-03-17T01:06:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI have content with Unicode non-breaking spaces (`\\u00a0`) at the correct places.\r\nI noticed that Mistune [silently converts these to regular spaces](https://github.com/lepture/mistune/blob/master/mistune.py#L87). Neither Github nor python-markdown do this.\r\n\r\nIs this a deliberate feature?\r\nWould you accept a patch to remove it, or make it optional?\r\n\r\n\r\n(Background: In Czech, non-breaking spaces are quite common: certain one-letter prepositions bind so tightly to the following word that it's considered bad form to break the line after them. I have a lot of content with non-breaking spaces, and using `&nbsp;` instead would make it quite unreadable.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/121", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/121/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/121/events", "html_url": "https://github.com/lepture/mistune/issues/121", "id": 198066631, "node_id": "MDU6SXNzdWUxOTgwNjY2MzE=", "number": 121, "title": "Feature request - use mistune on the command line", "user": {"login": "davidwtbuxton", "id": 334087, "node_id": "MDQ6VXNlcjMzNDA4Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/334087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidwtbuxton", "html_url": "https://github.com/davidwtbuxton", "followers_url": "https://api.github.com/users/davidwtbuxton/followers", "following_url": "https://api.github.com/users/davidwtbuxton/following{/other_user}", "gists_url": "https://api.github.com/users/davidwtbuxton/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidwtbuxton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidwtbuxton/subscriptions", "organizations_url": "https://api.github.com/users/davidwtbuxton/orgs", "repos_url": "https://api.github.com/users/davidwtbuxton/repos", "events_url": "https://api.github.com/users/davidwtbuxton/events{/privacy}", "received_events_url": "https://api.github.com/users/davidwtbuxton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-29T20:49:55Z", "updated_at": "2017-01-01T14:26:08Z", "closed_at": "2017-01-01T14:26:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'd like to add support for mistune to be called on the command line to transform markdown to html.\r\n\r\nThe simplest case would be to add support for mistune to be called as a module to process markdown from stdin and emit html to stdout. Example of proposed usage:\r\n\r\n    $ python -m mistune < in.md > out.html\r\n\r\nThis would be equivalent to the following script:\r\n\r\n    import sys\r\n    import mistune\r\n\r\n    src_text = sys.stdin.read()\r\n    dest_text = mistune.markdown(src_text)\r\n    sys.stdout.write(dest_text)\r\n\r\nI am guessing we would probably assume utf-8 for input and output, and potentially we would need to decode / encode text as necessary.\r\n\r\nA more advanced feature would include support for passing flags to change the rendering behaviour, e.g. `python -m mistune --use-xhtml --hard-wrap < in.md > out.html`, and accepting positional arguments for the source / destination file names. But that can be ignored for a first attempt.\r\n\r\nGood idea? Would a pull request be considered?\r\n\r\nThanks for mistune,\r\n\r\nDavid B.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/119", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/119/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/119/events", "html_url": "https://github.com/lepture/mistune/issues/119", "id": 179779411, "node_id": "MDU6SXNzdWUxNzk3Nzk0MTE=", "number": 119, "title": "No module named 'mistune'", "user": {"login": "oskarko", "id": 4367779, "node_id": "MDQ6VXNlcjQzNjc3Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4367779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oskarko", "html_url": "https://github.com/oskarko", "followers_url": "https://api.github.com/users/oskarko/followers", "following_url": "https://api.github.com/users/oskarko/following{/other_user}", "gists_url": "https://api.github.com/users/oskarko/gists{/gist_id}", "starred_url": "https://api.github.com/users/oskarko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oskarko/subscriptions", "organizations_url": "https://api.github.com/users/oskarko/orgs", "repos_url": "https://api.github.com/users/oskarko/repos", "events_url": "https://api.github.com/users/oskarko/events{/privacy}", "received_events_url": "https://api.github.com/users/oskarko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-28T13:53:27Z", "updated_at": "2016-09-29T02:10:07Z", "closed_at": "2016-09-29T02:10:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm traying to use it in my project. I use mac osx and anaconda. I download it with \"pip install mistune\". It says v0.7.3 is downloaded and installed but when I run the server and try it... it crash! and that the message I get it: No module named 'mistune'.\n\nany good solution?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/118", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/118/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/118/events", "html_url": "https://github.com/lepture/mistune/issues/118", "id": 176396786, "node_id": "MDU6SXNzdWUxNzYzOTY3ODY=", "number": 118, "title": "Last cell of table missing if blank", "user": {"login": "JohnPickerill", "id": 4380658, "node_id": "MDQ6VXNlcjQzODA2NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4380658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnPickerill", "html_url": "https://github.com/JohnPickerill", "followers_url": "https://api.github.com/users/JohnPickerill/followers", "following_url": "https://api.github.com/users/JohnPickerill/following{/other_user}", "gists_url": "https://api.github.com/users/JohnPickerill/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnPickerill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnPickerill/subscriptions", "organizations_url": "https://api.github.com/users/JohnPickerill/orgs", "repos_url": "https://api.github.com/users/JohnPickerill/repos", "events_url": "https://api.github.com/users/JohnPickerill/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnPickerill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-12T14:53:25Z", "updated_at": "2019-12-07T12:45:52Z", "closed_at": "2019-12-07T12:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the last table of a cell is blank then it is missing in the rendered HTML.\nThis appears to be because the last pipe is removed to avoid an extra row being created if by the split function.\nA crude fix to this would look something like\n\n```\ndef parse_table(self, m):\n    item = self._process_table(m)\n    #JP fix for blank last cell in table\n    rmat = re.match(r'^(.*)(?<=\\|)(.*)\\|\\s*\\n$',m.group(3),re.S)\n    if  rmat:\n        if rmat.group(2).strip() == '':\n            cells = rmat.group(1) +'|'\n        else:               \n            cells = rmat.group(1) + rmat.group(2) \n    # original\n    #cells = re.sub(r'(?: *\\| *)?\\n$', '', m.group(3))\n    logger_m.debug(cells)\n\n    cells = cells.split('\\n')\n    for i, v in enumerate(cells):\n        v = re.sub(r'^ *\\| *| *\\| *$', '', v)\n        cells[i] = re.split(r' *\\| *', v)\n\n    item['cells'] = cells\n    self.tokens.append(item) \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/117", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/117/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/117/events", "html_url": "https://github.com/lepture/mistune/issues/117", "id": 173779939, "node_id": "MDU6SXNzdWUxNzM3Nzk5Mzk=", "number": 117, "title": "Code in quotes", "user": {"login": "Jwink3101", "id": 3073584, "node_id": "MDQ6VXNlcjMwNzM1ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3073584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jwink3101", "html_url": "https://github.com/Jwink3101", "followers_url": "https://api.github.com/users/Jwink3101/followers", "following_url": "https://api.github.com/users/Jwink3101/following{/other_user}", "gists_url": "https://api.github.com/users/Jwink3101/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jwink3101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jwink3101/subscriptions", "organizations_url": "https://api.github.com/users/Jwink3101/orgs", "repos_url": "https://api.github.com/users/Jwink3101/repos", "events_url": "https://api.github.com/users/Jwink3101/events{/privacy}", "received_events_url": "https://api.github.com/users/Jwink3101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226948, "node_id": "MDU6TGFiZWw4MTIyNjk0OA==", "url": "https://api.github.com/repos/lepture/mistune/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-29T13:53:59Z", "updated_at": "2018-09-15T03:10:12Z", "closed_at": "2018-09-15T03:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if this is covered in the original markdown \"spec\" but it seems logical (and Python Markdown supports it) to be able to combine code in quoted blocks.\n\nConsider the following MD:\n\n```\n> This is a quoted code `inline` which works but the folloing\n> \n>     Code block with 4 spaces\n>     \n> doesn't work. Note that all lines have `>_` where `_` is a space.\n```\n\nAnd the render below (with whatever github uses and supports this)\n\n> This is a quoted code `inline` which works but the folloing\n> \n> ```\n> Code block with 4 spaces\n> ```\n> \n> doesn't work. Note that all lines have `>_` where `_` is a space.\n\nmistune does not properly show this\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/116", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/116/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/116/events", "html_url": "https://github.com/lepture/mistune/issues/116", "id": 168840051, "node_id": "MDU6SXNzdWUxNjg4NDAwNTE=", "number": 116, "title": "BlockLexer.parse is persistent", "user": {"login": "aisbaa", "id": 82692, "node_id": "MDQ6VXNlcjgyNjky", "avatar_url": "https://avatars1.githubusercontent.com/u/82692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aisbaa", "html_url": "https://github.com/aisbaa", "followers_url": "https://api.github.com/users/aisbaa/followers", "following_url": "https://api.github.com/users/aisbaa/following{/other_user}", "gists_url": "https://api.github.com/users/aisbaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/aisbaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aisbaa/subscriptions", "organizations_url": "https://api.github.com/users/aisbaa/orgs", "repos_url": "https://api.github.com/users/aisbaa/repos", "events_url": "https://api.github.com/users/aisbaa/events{/privacy}", "received_events_url": "https://api.github.com/users/aisbaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T09:32:30Z", "updated_at": "2016-08-03T11:18:50Z", "closed_at": "2016-08-03T00:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thank you for sharing your work, find it really useful. One thing I've noticed playing around is that `BlockLexer.parse` method is kind of persistent. If `parse` gets called twice with same data - it returns different results. So the question - was it intentional?\n\n```\n>>> lexer = mistune.BlockLexer()\n>>> text = \"\"\"\n... # h1\n... \n... lorem ipsum\n... \"\"\"\n>>> lexer.parse(text)\n[{'text': 'h1', 'type': 'heading', 'level': 1}, {'text': 'lorem ipsum', 'type': 'paragraph'}]\n>>> lexer.parse(text)\n[{'text': 'h1', 'type': 'heading', 'level': 1}, {'text': 'lorem ipsum', 'type': 'paragraph'}, {'text': 'h1', 'type': 'heading', 'level': 1}, {'text': 'lorem ipsum', 'type': 'paragraph'}]\n>>> mistune.__version__\n'0.7.3'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/115", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/115/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/115/events", "html_url": "https://github.com/lepture/mistune/issues/115", "id": 168116353, "node_id": "MDU6SXNzdWUxNjgxMTYzNTM=", "number": 115, "title": "Tabs not properly expanded", "user": {"login": "Jwink3101", "id": 3073584, "node_id": "MDQ6VXNlcjMwNzM1ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3073584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jwink3101", "html_url": "https://github.com/Jwink3101", "followers_url": "https://api.github.com/users/Jwink3101/followers", "following_url": "https://api.github.com/users/Jwink3101/following{/other_user}", "gists_url": "https://api.github.com/users/Jwink3101/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jwink3101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jwink3101/subscriptions", "organizations_url": "https://api.github.com/users/Jwink3101/orgs", "repos_url": "https://api.github.com/users/Jwink3101/repos", "events_url": "https://api.github.com/users/Jwink3101/events{/privacy}", "received_events_url": "https://api.github.com/users/Jwink3101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-28T14:54:33Z", "updated_at": "2016-07-29T02:39:47Z", "closed_at": "2016-07-29T02:39:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Line 86 has\n\n```\ntext = text.replace('\\t', ' ' * tab)\n```\n\nThis is the **wrong** way to this. For example, consider the following:\n\n```\ntxt = 'a\\tf\\n\\tf'\n```\n\nWith the current implementation, this will result in `f` not being aligned\n\nShould instead use the `.expandtabs(tab)` command\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/114", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/114/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/114/events", "html_url": "https://github.com/lepture/mistune/issues/114", "id": 167234233, "node_id": "MDU6SXNzdWUxNjcyMzQyMzM=", "number": 114, "title": "RecursionError on nested quotes", "user": {"login": "nitely", "id": 1697267, "node_id": "MDQ6VXNlcjE2OTcyNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1697267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitely", "html_url": "https://github.com/nitely", "followers_url": "https://api.github.com/users/nitely/followers", "following_url": "https://api.github.com/users/nitely/following{/other_user}", "gists_url": "https://api.github.com/users/nitely/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitely/subscriptions", "organizations_url": "https://api.github.com/users/nitely/orgs", "repos_url": "https://api.github.com/users/nitely/repos", "events_url": "https://api.github.com/users/nitely/events{/privacy}", "received_events_url": "https://api.github.com/users/nitely/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226948, "node_id": "MDU6TGFiZWw4MTIyNjk0OA==", "url": "https://api.github.com/repos/lepture/mistune/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 81226950, "node_id": "MDU6TGFiZWw4MTIyNjk1MA==", "url": "https://api.github.com/repos/lepture/mistune/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-24T13:47:41Z", "updated_at": "2017-06-02T06:14:01Z", "closed_at": "2017-06-02T06:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not actually unique to quotes but also to lists and footnotes. The following code raises a `RecursionError`:\n\n``` python\nmistune.markdown('* ' * 1000 + ' a')\n```\n\n``` python\nmistune.markdown('> ' * 1000)\n```\n\nRelevant discussion: https://github.com/thephpleague/commonmark/issues/243\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/113", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/113/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/113/events", "html_url": "https://github.com/lepture/mistune/issues/113", "id": 167218900, "node_id": "MDU6SXNzdWUxNjcyMTg5MDA=", "number": 113, "title": "hard_wrap=False by default?", "user": {"login": "elbaro", "id": 1851290, "node_id": "MDQ6VXNlcjE4NTEyOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1851290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elbaro", "html_url": "https://github.com/elbaro", "followers_url": "https://api.github.com/users/elbaro/followers", "following_url": "https://api.github.com/users/elbaro/following{/other_user}", "gists_url": "https://api.github.com/users/elbaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/elbaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elbaro/subscriptions", "organizations_url": "https://api.github.com/users/elbaro/orgs", "repos_url": "https://api.github.com/users/elbaro/repos", "events_url": "https://api.github.com/users/elbaro/events{/privacy}", "received_events_url": "https://api.github.com/users/elbaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-24T05:50:18Z", "updated_at": "2017-06-01T01:39:14Z", "closed_at": "2017-06-01T01:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The doc says every option is turned on by default,\nBut the following code works differently if I add `hard_wrap=True`.\n\n```\nclass MyRenderer(Renderer):\n    def __init__(self):\n        super(MyRenderer, self).__init__(escape=False)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/112", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/112/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/112/events", "html_url": "https://github.com/lepture/mistune/issues/112", "id": 167106951, "node_id": "MDU6SXNzdWUxNjcxMDY5NTE=", "number": 112, "title": "Unquoted Attributes handled Incorrectly", "user": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-22T18:41:44Z", "updated_at": "2016-07-25T14:16:38Z", "closed_at": "2016-07-25T14:16:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n>>> from mistune import Markdown\n>>> Markdown()('<iframe></iframe>')\n'<p><iframe></iframe></p>\\n'\n>>> Markdown()('<iframe width=420></iframe>')\n'<p>&lt;iframe width=420&gt;&lt;/iframe&gt;</p>\\n'\n```\n\nBoth of those should be supported since both are just valid HTML. The latter example is not supposed to escape this. From what I can tell this is a regression in newer mistune versions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/110", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/110/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/110/events", "html_url": "https://github.com/lepture/mistune/issues/110", "id": 166856156, "node_id": "MDU6SXNzdWUxNjY4NTYxNTY=", "number": 110, "title": "The following string doesn't escapes improperly", "user": {"login": "jonathan-s", "id": 2124818, "node_id": "MDQ6VXNlcjIxMjQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-s", "html_url": "https://github.com/jonathan-s", "followers_url": "https://api.github.com/users/jonathan-s/followers", "following_url": "https://api.github.com/users/jonathan-s/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-s/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-s/orgs", "repos_url": "https://api.github.com/users/jonathan-s/repos", "events_url": "https://api.github.com/users/jonathan-s/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81226948, "node_id": "MDU6TGFiZWw4MTIyNjk0OA==", "url": "https://api.github.com/repos/lepture/mistune/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-21T15:59:17Z", "updated_at": "2018-09-15T03:12:34Z", "closed_at": "2018-09-15T03:12:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nquote = \"<p><blockquote>Idea evolution works much faster than human evolution.</p><p>James Altucher</blockquote>\"\nret = mistune.markdown(quote, escape=False)\nprint ret\n<p><p><blockquote>Idea evolution works much faster than human evolution.</p><p>James Altucher&lt;/blockquote&gt;</p>\n```\n\nThe last blockquote shouldn't be escaped in this case. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/109", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/109/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/109/events", "html_url": "https://github.com/lepture/mistune/issues/109", "id": 165987846, "node_id": "MDU6SXNzdWUxNjU5ODc4NDY=", "number": 109, "title": "Re-Enable HTML data URLs", "user": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-17T18:01:59Z", "updated_at": "2016-07-25T14:02:50Z", "closed_at": "2016-07-25T14:02:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current code blacklists text/html data URLs. They are very useful and there is no security problem with them because they execute in their own dom context. Can they be enabled again?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/108", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/108/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/108/events", "html_url": "https://github.com/lepture/mistune/issues/108", "id": 165784934, "node_id": "MDU6SXNzdWUxNjU3ODQ5MzQ=", "number": 108, "title": "Link to data URLs no longer possible", "user": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-15T13:19:14Z", "updated_at": "2016-07-17T02:05:41Z", "closed_at": "2016-07-17T02:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would appear you can no longer link to data URLs. This should at the very least be configurable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/107", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/107/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/107/events", "html_url": "https://github.com/lepture/mistune/issues/107", "id": 165628949, "node_id": "MDU6SXNzdWUxNjU2Mjg5NDk=", "number": 107, "title": "Render Tables with Borders", "user": {"login": "rdsalemi", "id": 3169242, "node_id": "MDQ6VXNlcjMxNjkyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3169242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdsalemi", "html_url": "https://github.com/rdsalemi", "followers_url": "https://api.github.com/users/rdsalemi/followers", "following_url": "https://api.github.com/users/rdsalemi/following{/other_user}", "gists_url": "https://api.github.com/users/rdsalemi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdsalemi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdsalemi/subscriptions", "organizations_url": "https://api.github.com/users/rdsalemi/orgs", "repos_url": "https://api.github.com/users/rdsalemi/repos", "events_url": "https://api.github.com/users/rdsalemi/events{/privacy}", "received_events_url": "https://api.github.com/users/rdsalemi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-14T18:36:41Z", "updated_at": "2016-07-17T02:09:40Z", "closed_at": "2016-07-17T02:09:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs there a simple way to render tables with borders around the cells?\n\nThanks!\nRay\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/mistune/issues/104", "repository_url": "https://api.github.com/repos/lepture/mistune", "labels_url": "https://api.github.com/repos/lepture/mistune/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/mistune/issues/104/comments", "events_url": "https://api.github.com/repos/lepture/mistune/issues/104/events", "html_url": "https://github.com/lepture/mistune/issues/104", "id": 164906753, "node_id": "MDU6SXNzdWUxNjQ5MDY3NTM=", "number": 104, "title": "parsing html can fail to close tag correctly", "user": {"login": "nsfmc", "id": 216572, "node_id": "MDQ6VXNlcjIxNjU3Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/216572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsfmc", "html_url": "https://github.com/nsfmc", "followers_url": "https://api.github.com/users/nsfmc/followers", "following_url": "https://api.github.com/users/nsfmc/following{/other_user}", "gists_url": "https://api.github.com/users/nsfmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsfmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsfmc/subscriptions", "organizations_url": "https://api.github.com/users/nsfmc/orgs", "repos_url": "https://api.github.com/users/nsfmc/repos", "events_url": "https://api.github.com/users/nsfmc/events{/privacy}", "received_events_url": "https://api.github.com/users/nsfmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-11T18:47:09Z", "updated_at": "2016-07-13T13:20:56Z", "closed_at": "2016-07-13T13:20:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "noticed while debugging an issue in https://github.com/lektor/lektor/issues/241#issuecomment-231819694 i noticed that raw html handling can be broken if there is a space before the closing `>` of the opening tag. i.e.\n\n```\nIn [38]: mistune.markdown('<iframe src=\"http://gfycat.com\" ></iframe>', escape=False)\nOut[38]: '<p><iframe src=\"http://gfycat.com\" >&lt;/iframe&gt;</p>\\n'\n```\n\nbut\n\n```\nIn [39]: mistune.markdown('<iframe src=\"http://gfycat.com\"></iframe>', escape=False)\nOut[39]: '<p><iframe src=\"http://gfycat.com\"></iframe></p>\\n'\n```\n\nin the case of the iframe, this causes the opening iframe to gobble up the rest of the page content. this seems to hold for any tag, though, e.g.\n\n```\nIn [40]: mistune.markdown('<a href=\"http://gfycat.com\" ></a>', escape=False)\nOut[40]: '<p><a href=\"http://gfycat.com\" >&lt;/a&gt;</p>\\n'\n```\n", "performed_via_github_app": null, "score": 1.0}]}