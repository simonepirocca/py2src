{"total_count": 191, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/882", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/882/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/882/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/882/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/882", "id": 651710556, "node_id": "MDU6SXNzdWU2NTE3MTA1NTY=", "number": 882, "title": "dictionary changed size during iteration", "user": {"login": "mrkiril", "id": 16266930, "node_id": "MDQ6VXNlcjE2MjY2OTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/16266930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrkiril", "html_url": "https://github.com/mrkiril", "followers_url": "https://api.github.com/users/mrkiril/followers", "following_url": "https://api.github.com/users/mrkiril/following{/other_user}", "gists_url": "https://api.github.com/users/mrkiril/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrkiril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrkiril/subscriptions", "organizations_url": "https://api.github.com/users/mrkiril/orgs", "repos_url": "https://api.github.com/users/mrkiril/repos", "events_url": "https://api.github.com/users/mrkiril/events{/privacy}", "received_events_url": "https://api.github.com/users/mrkiril/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-06T17:36:54Z", "updated_at": "2020-07-09T08:13:20Z", "closed_at": "2020-07-09T08:13:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Same problem to https://github.com/elastic/apm-agent-python/issues/717\r\n\r\n```\r\n  File \"/elasticapm/base.py\", line 180, in <lambda>\r\n    local_var,\r\n  File \"/elasticapm/utils/__init__.py\", line 64, in varmap\r\n    ret = func(name, dict((k, varmap(func, v, context, k, **kwargs)) for k, v in compat.iteritems(var)), **kwargs)\r\n  File \"/elasticapm/utils/__init__.py\", line 64, in <genexpr>\r\n    ret = func(name, dict((k, varmap(func, v, context, k, **kwargs)) for k, v in compat.iteritems(var)), **kwargs)\r\n\r\nRuntimeError: dictionary changed size during iteration\r\n```\r\n\r\nEnvironment (please complete the following information)\r\n\r\nOS: Ubuntu 20.04 stable\r\nPython version: 2.7.18\r\nFramework and version Django 1.3\r\nAPM Server version: 7.6.0\r\nAgent version: 5.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/880", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/880/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/880/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/880", "id": 650605087, "node_id": "MDU6SXNzdWU2NTA2MDUwODc=", "number": 880, "title": "ReadTimeoutErrors on 169.254.169.254 /latest/api/token", "user": {"login": "ivasic", "id": 670571, "node_id": "MDQ6VXNlcjY3MDU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/670571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivasic", "html_url": "https://github.com/ivasic", "followers_url": "https://api.github.com/users/ivasic/followers", "following_url": "https://api.github.com/users/ivasic/following{/other_user}", "gists_url": "https://api.github.com/users/ivasic/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivasic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivasic/subscriptions", "organizations_url": "https://api.github.com/users/ivasic/orgs", "repos_url": "https://api.github.com/users/ivasic/repos", "events_url": "https://api.github.com/users/ivasic/events{/privacy}", "received_events_url": "https://api.github.com/users/ivasic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-07-03T13:40:34Z", "updated_at": "2020-07-09T23:29:05Z", "closed_at": "2020-07-09T23:29:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After updating the agent to version 5.8.0 my all my Django `manage.py` commands seem to hang indefinitely and never finish and I'm first seeing: \r\n\r\n`WARNING  urllib3.connectionpool Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='169.254.169.254', port=80): Read timed out. (read timeout=3.0)\")': /latest/api/token connectionpool.py:749`\r\n\r\nand then (after some time):\r\n\r\n`ERROR    elasticapm.transport Closing the transport connection timed out. base.py:261`\r\n\r\nAfter this last error message the process just hangs indefinitely and has to be killed manually.\r\n\r\n**To Reproduce**\r\n\r\nI'm not able to reproduce this locally, it seems to happen exclusively in my staging/production environment on AWS.\r\nThere, it really only takes a Django management command to make it hang. For example:\r\n\r\n```\r\n$ python manage.py migrate\r\nOperations to perform:\r\n  Apply all migrations: admin, auth, contenttypes, sessions\r\nRunning migrations:\r\n  No migrations to apply.\r\n2020-07-03 13:17:19,256 WARNING  urllib3.connectionpool Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='169.254.169.254', port=80): Read timed out. (read timeout=3.0)\")': /latest/api/token connectionpool.py:749\r\n2020-07-03 13:17:27,164 ERROR    elasticapm.transport Closing the transport connection timed out. base.py:261\r\n```\r\n**Environment**\r\n- OS: `Linux 6094537dd0b9 4.14.181-108.257.amzn1.x86_64 #1 SMP Wed May 27 02:43:03 UTC 2020 x86_64 GNU/Linux` (Docker container - python:3.8 image, docker running on Amazon Linux/2.15.2)\r\n- Python version: 3.8.3\r\n- Framework and version: Django 3.0.8 (same thing happens with 3.0.7)\r\n- APM Server version: 7.5.2\r\n- Agent version: 5.8.0 (I can confirm this **doesn't happen with v5.7.0**)\r\n\r\n\r\n**Additional context**\r\n\r\nThe app runs on AWS ElasticBeanstalk Docker environment with python 3.8 image, pretty straight forward.\r\n\r\n- `requirements.txt`:\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n    appdirs==1.4.4\r\n    asgiref==3.2.10; python_version >= '3.5'\r\n    boto3==1.14.16\r\n    botocore==1.17.16\r\n    certifi==2020.6.20\r\n    cffi==1.14.0\r\n    chardet==3.0.4\r\n    cryptography==2.9.2; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4'\r\n    django-migration-linter==2.3.0\r\n    django-redis==4.12.1\r\n    django-sortedm2m==3.0.0\r\n    django-storages==1.9.1\r\n    django-widget-tweaks==1.4.8\r\n    django==3.0.8\r\n    djangorestframework-simplejwt==4.4.0\r\n    djangorestframework==3.11.0\r\n    docutils==0.15.2; python_version >= '2.6' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    elastic-apm==5.8.0\r\n    factory-boy==2.12.0\r\n    faker==4.1.1; python_version >= '3.4'\r\n    future==0.18.2; python_version >= '2.6' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    googlemaps==4.4.1\r\n    gunicorn==20.0.4\r\n    idna==2.10; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    jmespath==0.10.0; python_version >= '2.6' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    jwcrypto==0.7\r\n    markdown==3.2.2\r\n    oauthlib==3.1.0; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    pillow==7.2.0\r\n    psycopg2-binary==2.8.5\r\n    pycparser==2.20; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    pyjwt==1.7.1\r\n    python-dateutil==2.8.1; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    python-twitter==3.5\r\n    pytz==2020.1\r\n    pyyaml==5.3.1\r\n    redis==3.5.3; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4'\r\n    requests-oauthlib==1.3.0\r\n    requests==2.24.0\r\n    s3transfer==0.3.3\r\n    sentry-sdk==0.16.0\r\n    six==1.15.0; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    sqlparse==0.3.1; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\r\n    text-unidecode==1.3\r\n    twilio==6.43.0\r\n    ua-parser==0.10.0\r\n    uritemplate==3.0.1\r\n    urllib3==1.25.9; python_version != '3.4'\r\n    user-agents==2.1\r\n    ```\r\n  </details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/873", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/873/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/873/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/873/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/873", "id": 646692718, "node_id": "MDU6SXNzdWU2NDY2OTI3MTg=", "number": 873, "title": "Support for Django instrumentation using ASGI", "user": {"login": "HenrikOssipoff", "id": 4737224, "node_id": "MDQ6VXNlcjQ3MzcyMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4737224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenrikOssipoff", "html_url": "https://github.com/HenrikOssipoff", "followers_url": "https://api.github.com/users/HenrikOssipoff/followers", "following_url": "https://api.github.com/users/HenrikOssipoff/following{/other_user}", "gists_url": "https://api.github.com/users/HenrikOssipoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenrikOssipoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenrikOssipoff/subscriptions", "organizations_url": "https://api.github.com/users/HenrikOssipoff/orgs", "repos_url": "https://api.github.com/users/HenrikOssipoff/repos", "events_url": "https://api.github.com/users/HenrikOssipoff/events{/privacy}", "received_events_url": "https://api.github.com/users/HenrikOssipoff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-27T14:30:48Z", "updated_at": "2020-07-01T12:06:35Z", "closed_at": "2020-07-01T12:06:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nSince Django 3.0 it's been possible to run Django through ASGI. Some benchmarks are showing that running Django using ASGI over WSGI in itself is actually a gain, so it might make sense to support ASGI in this case.\r\nFurther more, starting with Django 3.1 (currently in beta), we'll be able to use async views, making it even more attractive.\r\n\r\nCurrently attempting to instrumenting Django using the normal setup-guide will result in the following exception (it seems like heades in WSGI are functioning as dicts, while they're list of lists in ASGI):\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/daphne/cli.py\", line 30, in asgi\r\n    await self.app(scope, receive, send)\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/sentry_sdk/integrations/django/asgi.py\", line 34, in sentry_patched_asgi_handler\r\n    return await middleware(scope, receive, send)\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/sentry_sdk/integrations/asgi.py\", line 106, in _run_asgi3\r\n    return await self._run_app(scope, lambda: self.app(scope, receive, send))\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/sentry_sdk/integrations/asgi.py\", line 143, in _run_app\r\n    raise exc from None\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/sentry_sdk/integrations/asgi.py\", line 140, in _run_app\r\n    return await callback()\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/django/core/handlers/asgi.py\", line 155, in __call__\r\n    await sync_to_async(signals.request_started.send)(sender=self.__class__, scope=scope)\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/asgiref/sync.py\", line 296, in __call__\r\n    ret = await asyncio.wait_for(future, timeout=None)\r\n  File \"/Users/henrik/.pyenv/versions/3.8.1/lib/python3.8/asyncio/tasks.py\", line 455, in wait_for\r\n    return await fut\r\n  File \"/Users/henrik/.pyenv/versions/3.8.1/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/asgiref/sync.py\", line 334, in thread_handler\r\n    return func(*args, **kwargs)\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/django/dispatch/dispatcher.py\", line 173, in send\r\n    return [\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/django/dispatch/dispatcher.py\", line 174, in <listcomp>\r\n    (receiver, receiver(signal=self, sender=sender, **named))\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/elasticapm/contrib/django/apps.py\", line 144, in _request_started_handler\r\n    trace_parent = TraceParent.from_headers(kwargs[\"scope\"][\"headers\"])\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/elasticapm/utils/disttracing.py\", line 96, in from_headers\r\n    tracestate = cls.merge_duplicate_headers(headers, tracestate_header_name)\r\n  File \"/Users/henrik/Downloads/.venv/lib/python3.8/site-packages/elasticapm/utils/disttracing.py\", line 121, in merge_duplicate_headers\r\n    return headers.get(key)\r\nAttributeError: 'list' object has no attribute 'get'\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI'm guessing this will require a separate Django instrumentation module in the async category. It'll be a bit hard for newcomers to know what to choose though, since they'll have two options for Django, but I suppose there's no other way?\r\n\r\n**Describe alternatives you've considered**\r\nAs far as I've seen, there's not \"base ASGI instrumentation middleware\" - they're all specific for each ASGI framework, so I've been unable to get something running.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/872", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/872/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/872/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/872", "id": 646282314, "node_id": "MDU6SXNzdWU2NDYyODIzMTQ=", "number": 872, "title": "Traces are being scrambled between transactions", "user": {"login": "HenrikOssipoff", "id": 4737224, "node_id": "MDQ6VXNlcjQ3MzcyMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4737224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HenrikOssipoff", "html_url": "https://github.com/HenrikOssipoff", "followers_url": "https://api.github.com/users/HenrikOssipoff/followers", "following_url": "https://api.github.com/users/HenrikOssipoff/following{/other_user}", "gists_url": "https://api.github.com/users/HenrikOssipoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/HenrikOssipoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HenrikOssipoff/subscriptions", "organizations_url": "https://api.github.com/users/HenrikOssipoff/orgs", "repos_url": "https://api.github.com/users/HenrikOssipoff/repos", "events_url": "https://api.github.com/users/HenrikOssipoff/events{/privacy}", "received_events_url": "https://api.github.com/users/HenrikOssipoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-26T13:57:51Z", "updated_at": "2020-06-26T21:27:45Z", "closed_at": "2020-06-26T20:54:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm not entirely sure how to go about this, since I'm not able to reproduce this bug in a specific manner.\r\n\r\nThe gist is that we're seeing traces from completely non-related transactions appear together in APM.\r\n\r\nThis is maybe best shown with an image:\r\n\r\n![apm](https://user-images.githubusercontent.com/4737224/85865167-c46adf00-b7c5-11ea-8326-ff2b91fad3bf.png)\r\n\r\nIn this case, the `TerminalViewSet` seems to be using the `refunds_refund` table. However, this code is actually from a _different_ view, and not `TerminalViewSet`.\r\n\r\nWe're seeing quite a few of these per day.\r\n\r\nI'm assume it's because there's an overlap between transaction IDs somewhere?\r\n\r\n**To Reproduce**\r\n\r\nUnknown\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Docker image `python:3.8.2-buster`\r\n- Python version: 3.8.2\r\n- Framework and version [e.g. Django 2.1]: Django 3.0.7\r\n- APM Server version: 7.6.1\r\n- Agent version: 5.7.0\r\n\r\n\r\n**Additional context**\r\nI'll be happy to provide any additional information - I'm just not sure what's relevant for you...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/868", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/868/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/868/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/868/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/868", "id": 644509718, "node_id": "MDU6SXNzdWU2NDQ1MDk3MTg=", "number": 868, "title": "Python APM agent only sends first HTTP body, rest are [REDACTED]", "user": {"login": "alexchowle", "id": 7030830, "node_id": "MDQ6VXNlcjcwMzA4MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7030830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexchowle", "html_url": "https://github.com/alexchowle", "followers_url": "https://api.github.com/users/alexchowle/followers", "following_url": "https://api.github.com/users/alexchowle/following{/other_user}", "gists_url": "https://api.github.com/users/alexchowle/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexchowle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexchowle/subscriptions", "organizations_url": "https://api.github.com/users/alexchowle/orgs", "repos_url": "https://api.github.com/users/alexchowle/repos", "events_url": "https://api.github.com/users/alexchowle/events{/privacy}", "received_events_url": "https://api.github.com/users/alexchowle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T10:38:23Z", "updated_at": "2020-06-24T14:17:43Z", "closed_at": "2020-06-24T14:17:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `elastic-apm[flask]==5.4.2`\r\n\r\nHave config item `CAPTURE_BODY` set to `all`\r\n\r\nOnly the first Transaction provides the HTTP Body to APM. All subsequent Transactions are marked as [REDACTED].", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/861", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/861/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/861/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/861/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/861", "id": 639074782, "node_id": "MDU6SXNzdWU2MzkwNzQ3ODI=", "number": 861, "title": "Disable Exception Reporting", "user": {"login": "tybritten", "id": 1933680, "node_id": "MDQ6VXNlcjE5MzM2ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1933680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tybritten", "html_url": "https://github.com/tybritten", "followers_url": "https://api.github.com/users/tybritten/followers", "following_url": "https://api.github.com/users/tybritten/following{/other_user}", "gists_url": "https://api.github.com/users/tybritten/gists{/gist_id}", "starred_url": "https://api.github.com/users/tybritten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tybritten/subscriptions", "organizations_url": "https://api.github.com/users/tybritten/orgs", "repos_url": "https://api.github.com/users/tybritten/repos", "events_url": "https://api.github.com/users/tybritten/events{/privacy}", "received_events_url": "https://api.github.com/users/tybritten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103119, "node_id": "MDU6TGFiZWw2NDYxMDMxMTk=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T19:09:19Z", "updated_at": "2020-06-16T20:17:57Z", "closed_at": "2020-06-16T20:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe're using another tool to capture errors (Sentry) and we don't exceptions to also be reported to APM.\r\n\r\n**Describe the solution you'd like**\r\nan easy configuration to disable exception handling for APM\r\n\r\n**Describe alternatives you've considered**\r\nI'm looking at how to unhook APM from the signals.got_request_exception\r\n\r\n**Additional context**\r\nin django i did it this way:\r\n```\r\nfrom django.core.signals import got_request_exception\r\n\r\n             got_request_exception.disconnect(dispatch_uid=\"elasticapm-exceptions\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/858", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/858/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/858/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/858", "id": 636015744, "node_id": "MDU6SXNzdWU2MzYwMTU3NDQ=", "number": 858, "title": "Add log level in the metadata", "user": {"login": "esseti", "id": 1928354, "node_id": "MDQ6VXNlcjE5MjgzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1928354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esseti", "html_url": "https://github.com/esseti", "followers_url": "https://api.github.com/users/esseti/followers", "following_url": "https://api.github.com/users/esseti/following{/other_user}", "gists_url": "https://api.github.com/users/esseti/gists{/gist_id}", "starred_url": "https://api.github.com/users/esseti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esseti/subscriptions", "organizations_url": "https://api.github.com/users/esseti/orgs", "repos_url": "https://api.github.com/users/esseti/repos", "events_url": "https://api.github.com/users/esseti/events{/privacy}", "received_events_url": "https://api.github.com/users/esseti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T07:47:38Z", "updated_at": "2020-06-10T11:01:17Z", "closed_at": "2020-06-10T11:01:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using the django integration with APM.\r\nit would be useful to add the log level for the messages.\r\neg log.warning -> level:warning\r\neg log.error -> level:erorr\r\n```\r\n'handlers': {\r\n\r\n    'elasticapm': {\r\n            'level': 'WARNING',\r\n            'class': 'elasticapm.contrib.django.handlers.LoggingHandler',\r\n        },\r\n}\r\n...\r\n    'loggers': {\r\n       'mylog': {\r\n            'handlers': ['console','elasticapm'],\r\n            'level': 'DEBUG',\r\n            'propagate': True\r\n        },\r\n}\r\n```\r\n\r\nright now there's no way to get if the log was a warning or an error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/841", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/841/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/841/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/841", "id": 627500511, "node_id": "MDU6SXNzdWU2Mjc1MDA1MTE=", "number": 841, "title": "Make SANITIZE_FIELD_NAMES constant configurable for custom headers", "user": {"login": "AumitLeon", "id": 8445744, "node_id": "MDQ6VXNlcjg0NDU3NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8445744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AumitLeon", "html_url": "https://github.com/AumitLeon", "followers_url": "https://api.github.com/users/AumitLeon/followers", "following_url": "https://api.github.com/users/AumitLeon/following{/other_user}", "gists_url": "https://api.github.com/users/AumitLeon/gists{/gist_id}", "starred_url": "https://api.github.com/users/AumitLeon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AumitLeon/subscriptions", "organizations_url": "https://api.github.com/users/AumitLeon/orgs", "repos_url": "https://api.github.com/users/AumitLeon/repos", "events_url": "https://api.github.com/users/AumitLeon/events{/privacy}", "received_events_url": "https://api.github.com/users/AumitLeon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-29T19:46:44Z", "updated_at": "2020-06-26T22:53:29Z", "closed_at": "2020-06-26T22:53:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nIt would be nice to have the option to extend the list of field names that are considered when sanitizing HTTP headers. This is especially useful if you have custom headers with sensitive data.\r\n\r\n**Describe the solution you'd like**\r\nA function that lets a user provide header(s) that extend the base `SANITIZE_FIELD_NAMES` set, such that using the `sanitize_http_headers` processor will also sanitize the headers passed by the user.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n1. The simplest workaround could just be to write a custom processor and sanitize custom headers yourself, but this feels like a misuse of the library. If there's a function meant to sanitize headers, makes sense to use it.\r\n2. It's also potentially possible to write a custom processor that wraps `sanitize_http_headers` and monkey patch `SANITIZE_FIELD_NAMES` to include the custom headers you want sanitized. Again, doesn't seem ideal.\r\n\r\n**Additional context**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/839", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/839/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/839/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/839/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/839", "id": 626536568, "node_id": "MDU6SXNzdWU2MjY1MzY1Njg=", "number": 839, "title": "Add ENV var to disable proxy completely", "user": {"login": "thenewguy", "id": 77731, "node_id": "MDQ6VXNlcjc3NzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/77731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thenewguy", "html_url": "https://github.com/thenewguy", "followers_url": "https://api.github.com/users/thenewguy/followers", "following_url": "https://api.github.com/users/thenewguy/following{/other_user}", "gists_url": "https://api.github.com/users/thenewguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thenewguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thenewguy/subscriptions", "organizations_url": "https://api.github.com/users/thenewguy/orgs", "repos_url": "https://api.github.com/users/thenewguy/repos", "events_url": "https://api.github.com/users/thenewguy/events{/privacy}", "received_events_url": "https://api.github.com/users/thenewguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-28T14:05:32Z", "updated_at": "2020-05-29T12:25:47Z", "closed_at": "2020-05-28T16:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very helpful for integration testing if there was an environment variable that could be set to disable the use of a proxy.  NO_PROXY='*' doesn't seem to be working.  Currently testing using docker and linking all containers together via links - however, the agent is reaching out to access via proxy set on the local workstations and making development quite difficult\r\n\r\n-- edit --\r\njust for clarification - noproxy case is set like this:\r\n    no_proxy='\\*'\r\n    NO_PROXY='\\*'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/827", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/827/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/827/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/827/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/827", "id": 620441623, "node_id": "MDU6SXNzdWU2MjA0NDE2MjM=", "number": 827, "title": "APM agent crashes if the SQL query is too large", "user": {"login": "lfrodrigues", "id": 301004, "node_id": "MDQ6VXNlcjMwMTAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfrodrigues", "html_url": "https://github.com/lfrodrigues", "followers_url": "https://api.github.com/users/lfrodrigues/followers", "following_url": "https://api.github.com/users/lfrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/lfrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/lfrodrigues/orgs", "repos_url": "https://api.github.com/users/lfrodrigues/repos", "events_url": "https://api.github.com/users/lfrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/lfrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T19:10:56Z", "updated_at": "2020-06-04T20:39:36Z", "closed_at": "2020-06-04T20:39:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: \r\n\r\nWhen running in celery (I guess it happens elsewhere also) if the query is too large APM server will reject the event. \r\n\r\n```\r\nTransportException: HTTP 400: {\"accepted\":0,\"errors\":[{\"message\":\"event exceeded the permitted size.\",\"document\":\"{\\\"span\\\": {\\\"id\\\": \\\"332c20cdb36c0b03\\\", \\\"transaction_id\\\": \\\"26dfc86436ea1c9c\\\", \\\"trace_id\\\": \\\"8b3a7bd7e830fe4800bd6ff98af24ecd\\\", \\\"parent_id\\\": \\\"26dfc86436ea1c9c\\\", \\\"name\\\": ... MY_DATABASE_FIELDS_HERE... ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::varchar(100)[], %s, %s, %s, %s, %s::integer[], %s, %s, %s, %s, %s, %s, %s, %s, %s, %s), (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s::integer[], %s::text[], %s, %s, %s, %s, %s, %s, %s, %s, %s::var...\r\n  File \"elasticapm/transport/base.py\", line 227, in _flush\r\n    self.send(data)\r\n  File \"elasticapm/transport/http.py\", line 105, in send\r\n    raise TransportException(message, data, print_trace=print_trace)\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Run a bulk_create in Django with a large list. \r\nIn our code, we're creating 450k rows in a task at night.\r\n\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Ubuntu 18.04\r\n- Python version: 3.6\r\n- Framework and version: Django 2.2\r\n- APM Server version: 5.6.0\r\n- Agent version: 7.6.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/823", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/823/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/823/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/823", "id": 614897662, "node_id": "MDU6SXNzdWU2MTQ4OTc2NjI=", "number": 823, "title": "APM agent crashes in Celery at random times during the day", "user": {"login": "lfrodrigues", "id": 301004, "node_id": "MDQ6VXNlcjMwMTAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfrodrigues", "html_url": "https://github.com/lfrodrigues", "followers_url": "https://api.github.com/users/lfrodrigues/followers", "following_url": "https://api.github.com/users/lfrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/lfrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/lfrodrigues/orgs", "repos_url": "https://api.github.com/users/lfrodrigues/repos", "events_url": "https://api.github.com/users/lfrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/lfrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-05-08T18:08:24Z", "updated_at": "2020-06-05T16:34:29Z", "closed_at": "2020-06-05T16:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure how to reproduce but I've had this issue in production for several months. The crash happens randomly during the day, 20-50 times (we run 400k+ tasks per day) \r\n\r\nThe crash is:\r\n\r\n```\r\nTransportException: HTTP 400: {\"accepted\":0,\"errors\":[{\"message\":\"gzip: invalid header\"}]}\r\n\r\n  File \"elasticapm/transport/base.py\", line 208, in _flush\r\n    self.send(data)\r\n  File \"elasticapm/transport/http.py\", line 102, in send\r\n    raise TransportException(message, data, print_trace=print_trace)\r\n```\r\n\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Ubuntu 18.04\r\n- Python version: 3.6\r\n- Framework and version: Django 2.2 Celery 4.4.2\r\n- APM Server version: 7.6.0\r\n- Agent version: 5.3.2\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/822", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/822/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/822/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/822", "id": 614816959, "node_id": "MDU6SXNzdWU2MTQ4MTY5NTk=", "number": 822, "title": "[Feature] Collect cloud metadata", "user": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/7", "html_url": "https://github.com/elastic/apm-agent-python/milestone/7", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/7/labels", "id": 5525747, "node_id": "MDk6TWlsZXN0b25lNTUyNTc0Nw==", "number": 7, "title": "7.9", "description": "", "creator": {"login": "graphaelli", "id": 83483, "node_id": "MDQ6VXNlcjgzNDgz", "avatar_url": "https://avatars3.githubusercontent.com/u/83483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graphaelli", "html_url": "https://github.com/graphaelli", "followers_url": "https://api.github.com/users/graphaelli/followers", "following_url": "https://api.github.com/users/graphaelli/following{/other_user}", "gists_url": "https://api.github.com/users/graphaelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/graphaelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graphaelli/subscriptions", "organizations_url": "https://api.github.com/users/graphaelli/orgs", "repos_url": "https://api.github.com/users/graphaelli/repos", "events_url": "https://api.github.com/users/graphaelli/events{/privacy}", "received_events_url": "https://api.github.com/users/graphaelli/received_events", "type": "User", "site_admin": false}, "open_issues": 7, "closed_issues": 1, "state": "open", "created_at": "2020-06-09T20:35:31Z", "updated_at": "2020-07-16T21:21:55Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-05-08T15:33:30Z", "updated_at": "2020-06-26T22:17:40Z", "closed_at": "2020-06-26T22:17:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add collection for cloud metadata -- see [naive example here](https://github.com/hubblestack/hubble/blob/develop/hubblestack/extmods/grains/cloud_details.py)\r\n\r\nAPM Server will support intake for cloud metadata in 7.8 (now available in nightly snapshots).\r\n\r\n**Additional context**\r\n\r\nhttps://github.com/elastic/apm/issues/256", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/819", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/819/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/819/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/819", "id": 613544035, "node_id": "MDU6SXNzdWU2MTM1NDQwMzU=", "number": 819, "title": "CI: post-cleanup build in the tag release failed", "user": {"login": "v1v", "id": 2871786, "node_id": "MDQ6VXNlcjI4NzE3ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2871786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v1v", "html_url": "https://github.com/v1v", "followers_url": "https://api.github.com/users/v1v/followers", "following_url": "https://api.github.com/users/v1v/following{/other_user}", "gists_url": "https://api.github.com/users/v1v/gists{/gist_id}", "starred_url": "https://api.github.com/users/v1v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v1v/subscriptions", "organizations_url": "https://api.github.com/users/v1v/orgs", "repos_url": "https://api.github.com/users/v1v/repos", "events_url": "https://api.github.com/users/v1v/events{/privacy}", "received_events_url": "https://api.github.com/users/v1v/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1151181517, "node_id": "MDU6TGFiZWwxMTUxMTgxNTE3", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/automation", "name": "automation", "color": "81a2ef", "default": false, "description": null}, {"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}, {"id": 681237023, "node_id": "MDU6TGFiZWw2ODEyMzcwMjM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/ci", "name": "ci", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "v1v", "id": 2871786, "node_id": "MDQ6VXNlcjI4NzE3ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2871786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v1v", "html_url": "https://github.com/v1v", "followers_url": "https://api.github.com/users/v1v/followers", "following_url": "https://api.github.com/users/v1v/following{/other_user}", "gists_url": "https://api.github.com/users/v1v/gists{/gist_id}", "starred_url": "https://api.github.com/users/v1v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v1v/subscriptions", "organizations_url": "https://api.github.com/users/v1v/orgs", "repos_url": "https://api.github.com/users/v1v/repos", "events_url": "https://api.github.com/users/v1v/events{/privacy}", "received_events_url": "https://api.github.com/users/v1v/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "v1v", "id": 2871786, "node_id": "MDQ6VXNlcjI4NzE3ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2871786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v1v", "html_url": "https://github.com/v1v", "followers_url": "https://api.github.com/users/v1v/followers", "following_url": "https://api.github.com/users/v1v/following{/other_user}", "gists_url": "https://api.github.com/users/v1v/gists{/gist_id}", "starred_url": "https://api.github.com/users/v1v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v1v/subscriptions", "organizations_url": "https://api.github.com/users/v1v/orgs", "repos_url": "https://api.github.com/users/v1v/repos", "events_url": "https://api.github.com/users/v1v/events{/privacy}", "received_events_url": "https://api.github.com/users/v1v/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-06T19:03:39Z", "updated_at": "2020-05-08T13:37:57Z", "closed_at": "2020-05-08T13:37:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n[2020-05-06T18:29:34.339Z] Error when executing cleanup post condition:\r\n[2020-05-06T18:29:34.344Z] java.io.FileNotFoundException: /var/lib/jenkins/workspace/thon_apm-agent-python-mbp_v5.6.0/src/github.com/elastic/apm-agent-python/.ci/.jenkins_windows.yml does not exist.\r\n[2020-05-06T18:29:34.345Z] \tat org.jenkinsci.plugins.pipeline.utility.steps.conf.ReadYamlStep$Execution.doRun(ReadYamlStep.java:113)\r\n[2020-05-06T18:29:34.345Z] \tat org.jenkinsci.plugins.pipeline.utility.steps.AbstractFileOrTextStepExecution.run(AbstractFileOrTextStepExecution.java:32)\r\n[2020-05-06T18:29:34.345Z] \tat org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47)\r\n[2020-05-06T18:29:34.345Z] \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n[2020-05-06T18:29:34.345Z] \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n[2020-05-06T18:29:34.345Z] \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n[2020-05-06T18:29:34.345Z] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n[2020-05-06T18:29:34.345Z] \tat java.lang.Thread.run(Thread.java:748)\r\n\r\n```\r\nBuild [1](https://apm-ci.elastic.co/job/apm-agent-python/job/apm-agent-python-mbp/view/tags/job/v5.6.0/1/)\r\n\r\nMore precisely https://github.com/elastic/apm-agent-python/blob/master/Jenkinsfile#L318\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/816", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/816/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/816/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/816", "id": 612821597, "node_id": "MDU6SXNzdWU2MTI4MjE1OTc=", "number": 816, "title": "when capture_body is false, flask capture_body should not capture body at all", "user": {"login": "dvincelli", "id": 178305, "node_id": "MDQ6VXNlcjE3ODMwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/178305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvincelli", "html_url": "https://github.com/dvincelli", "followers_url": "https://api.github.com/users/dvincelli/followers", "following_url": "https://api.github.com/users/dvincelli/following{/other_user}", "gists_url": "https://api.github.com/users/dvincelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvincelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvincelli/subscriptions", "organizations_url": "https://api.github.com/users/dvincelli/orgs", "repos_url": "https://api.github.com/users/dvincelli/repos", "events_url": "https://api.github.com/users/dvincelli/events{/privacy}", "received_events_url": "https://api.github.com/users/dvincelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-05T18:55:14Z", "updated_at": "2020-05-07T16:46:33Z", "closed_at": "2020-05-06T14:42:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "A code base I contribute to currently requires reading the `environ['wsgi.input']` stream directly before flask can get to it. When latest Elastic APM 5.5.2 is installed, this stream is empty when the app gets to it. This is because `environ['wsgi.input']` is a read once stream and does not support seek. When the Elastic APM capture_body logic runs, it first reads the stream before deciding if it will include it in the APM report. In my app, this flag is set to the default value of false.\r\n\r\nSuggested fix: guard the body capturing logic with the capture_body flag; that is do not take the branch, set the body to '[REDACTED]' right away. \r\n\r\nThe capture_body logic I'm referring to is here:\r\n\r\nhttps://github.com/elastic/apm-agent-python/blob/master/elasticapm/contrib/flask/utils.py#L48-L66\r\n\r\nFurther, I figured out that going back to version 5.2.3 does not cause the wsgi.input stream to be consumed so this change occurred in 5.3.0.\r\n\r\n**To Reproduce**\r\n\r\napp.py\r\n```\r\nimport flask\r\nfrom flask import request\r\nfrom elasticapm.contrib.flask import ElasticAPM\r\nfrom werkzeug.wsgi import get_content_length\r\n\r\n\r\napp = flask.Flask(__name__)\r\n# Prevent ElasticAPM from contacting APM Server (which is not running on my dev machine)\r\napp.config['ELASTIC_APM'] = {\r\n    'DISABLE_SEND': True,\r\n    'CENTRAL_CONFIG': False,\r\n}\r\nElasticAPM(app)\r\n\r\n\r\n@app.route('/', methods=[\"POST\"])\r\ndef empty_input():\r\n    length = get_content_length(request.environ)\r\n    if length == 0:\r\n        return \"Request Content-Length is 0, you must provide a body\", 400\r\n    foo = request.environ['wsgi.input'].read(length)\r\n    read_len = len(foo)\r\n    if read_len != length and read_len == 0:\r\n        return \"Empty environ wsgi.input body\\n\", 500\r\n    else:\r\n        return \"OK\\n\"\r\n```\r\n\r\n```\r\n$ gunicorn app:app # using gunicorn because the flask server hangs on the read call for this scenario\r\n```\r\n\r\n```\r\n$ curl -d key=foo 127.0.0.1:8000\r\nEmpty environ wsgi.input body\r\n```\r\n\r\n**Environment**\r\n\r\n- OS: Docker image python:3.7-slim\r\n- Python version: 3.7.6\r\n- Framework and version: Flask 1.1.1\r\n- APM Server version: 6.2.4\r\n- Agent version: 5.5.2\r\n\r\n\r\n**Additional context**\r\n\r\nAdd any other context about the problem here.\r\n\r\n- Agent config options: All default.\r\n- `requirements.txt`:\r\n```\r\nFlask==1.1.1\r\nelastic-apm==5.5.2\r\nblinker==1.4\r\ngunicorn==20.0.4\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/815", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/815/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/815/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/815", "id": 612080055, "node_id": "MDU6SXNzdWU2MTIwODAwNTU=", "number": 815, "title": "[Feature] Option to change key name in set_custom_context", "user": {"login": "BuSHari", "id": 1271474, "node_id": "MDQ6VXNlcjEyNzE0NzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1271474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BuSHari", "html_url": "https://github.com/BuSHari", "followers_url": "https://api.github.com/users/BuSHari/followers", "following_url": "https://api.github.com/users/BuSHari/following{/other_user}", "gists_url": "https://api.github.com/users/BuSHari/gists{/gist_id}", "starred_url": "https://api.github.com/users/BuSHari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BuSHari/subscriptions", "organizations_url": "https://api.github.com/users/BuSHari/orgs", "repos_url": "https://api.github.com/users/BuSHari/repos", "events_url": "https://api.github.com/users/BuSHari/events{/privacy}", "received_events_url": "https://api.github.com/users/BuSHari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103119, "node_id": "MDU6TGFiZWw2NDYxMDMxMTk=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-04T18:32:49Z", "updated_at": "2020-05-06T21:37:05Z", "closed_at": "2020-05-04T19:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCan you please add an option to change the key in set_custom_context?\r\nFor example:\r\n```python\r\nelasticapm.set_custom_context({'billing_amount': product.price * item_count}, key='extra_data')\r\n```\r\nand it will be under `transaction.extra_data.billing_amount`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/811", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/811/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/811/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/811", "id": 606556121, "node_id": "MDU6SXNzdWU2MDY1NTYxMjE=", "number": 811, "title": "Flower hangs from version 5.4.0.", "user": {"login": "lfrodrigues", "id": 301004, "node_id": "MDQ6VXNlcjMwMTAwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfrodrigues", "html_url": "https://github.com/lfrodrigues", "followers_url": "https://api.github.com/users/lfrodrigues/followers", "following_url": "https://api.github.com/users/lfrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/lfrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/lfrodrigues/orgs", "repos_url": "https://api.github.com/users/lfrodrigues/repos", "events_url": "https://api.github.com/users/lfrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/lfrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-04-24T20:11:40Z", "updated_at": "2020-05-04T16:53:27Z", "closed_at": "2020-05-04T16:53:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: \r\nFlower hangs (no answer from http connection to browser) when a version >= 5.4.0 is installed\r\n\r\n**To Reproduce**\r\n\r\n1. pip install elastic-apm==5.4.0\r\n2. restart flower and try to access\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Ubuntu 18.04\r\n- Python version: 3.6\r\n- Framework and version: Django 2.2\r\n- APM Server version: NA\r\n- Agent version: 5.4.0+ \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/801", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/801/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/801/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/801/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/801", "id": 601550549, "node_id": "MDU6SXNzdWU2MDE1NTA1NDk=", "number": 801, "title": "read_pem_file doesn't support certificate chains", "user": {"login": "laevilgenius", "id": 13280256, "node_id": "MDQ6VXNlcjEzMjgwMjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/13280256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laevilgenius", "html_url": "https://github.com/laevilgenius", "followers_url": "https://api.github.com/users/laevilgenius/followers", "following_url": "https://api.github.com/users/laevilgenius/following{/other_user}", "gists_url": "https://api.github.com/users/laevilgenius/gists{/gist_id}", "starred_url": "https://api.github.com/users/laevilgenius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laevilgenius/subscriptions", "organizations_url": "https://api.github.com/users/laevilgenius/orgs", "repos_url": "https://api.github.com/users/laevilgenius/repos", "events_url": "https://api.github.com/users/laevilgenius/events{/privacy}", "received_events_url": "https://api.github.com/users/laevilgenius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-16T22:30:35Z", "updated_at": "2020-04-20T16:57:20Z", "closed_at": "2020-04-20T16:57:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something like this should fix the issue:\r\n```diff\r\n def read_pem_file(file_obj):\r\n     cert = b\"\"\r\n     for line in file_obj:\r\n         if line.startswith(b\"-----BEGIN CERTIFICATE-----\"):\r\n             break\r\n     for line in file_obj:\r\n-        if not line.startswith(b\"-----END CERTIFICATE-----\"):\r\n-            cert += line.strip()\r\n+        if line.startswith(b\"-----END CERTIFICATE-----\"):\r\n+            break\r\n+        cert += line.strip()\r\n     return base64.b64decode(cert)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/798", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/798/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/798/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/798/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/798", "id": 599583557, "node_id": "MDU6SXNzdWU1OTk1ODM1NTc=", "number": 798, "title": "Docker Python no longer working as soon as elastic-apm is installed", "user": {"login": "Patralos", "id": 27063650, "node_id": "MDQ6VXNlcjI3MDYzNjUw", "avatar_url": "https://avatars0.githubusercontent.com/u/27063650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patralos", "html_url": "https://github.com/Patralos", "followers_url": "https://api.github.com/users/Patralos/followers", "following_url": "https://api.github.com/users/Patralos/following{/other_user}", "gists_url": "https://api.github.com/users/Patralos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patralos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patralos/subscriptions", "organizations_url": "https://api.github.com/users/Patralos/orgs", "repos_url": "https://api.github.com/users/Patralos/repos", "events_url": "https://api.github.com/users/Patralos/events{/privacy}", "received_events_url": "https://api.github.com/users/Patralos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T09:14:02Z", "updated_at": "2020-04-15T23:57:10Z", "closed_at": "2020-04-15T23:57:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIt seems like some patches to requests destroy the functionality of the docker python package.\r\n\r\nValueError: invalid literal for int() with base 10: 'None'\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"project\\venv\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"project\\venv\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"project\\venv\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"project\\tool\\src\\company_tool\\web\\api\\decorators.py\", line 21, in wrapper_view_func\r\n    return view_func(request, json_data=data, *args, **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\django\\views\\decorators\\csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\django\\views\\decorators\\http.py\", line 40, in inner\r\n    return func(request, *args, **kwargs)\r\n  File \"project\\tool\\src\\company_tool\\web\\api\\views.py\", line 27, in start\r\n    container_status = client.containers.run(image=container, command=arguments, detach=True, stdin_open=True, tty=True)\r\n  File \"project\\venv\\lib\\site-packages\\docker\\models\\containers.py\", line 802, in run\r\n    container = self.create(image=image, command=command,\r\n  File \"project\\venv\\lib\\site-packages\\docker\\models\\containers.py\", line 861, in create\r\n    resp = self.client.api.create_container(**create_kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\docker\\api\\container.py\", line 430, in create_container\r\n    return self.create_container_from_config(config, name)\r\n  File \"project\\venv\\lib\\site-packages\\docker\\api\\container.py\", line 440, in create_container_from_config\r\n    res = self._post_json(u, data=config, params=params)\r\n  File \"project\\venv\\lib\\site-packages\\docker\\api\\client.py\", line 289, in _post_json\r\n    return self._post(url, data=json.dumps(data2), **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\docker\\utils\\decorators.py\", line 46, in inner\r\n    return f(self, *args, **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\docker\\api\\client.py\", line 226, in _post\r\n    return self.post(url, **self._set_request_timeout(kwargs))\r\n  File \"project\\venv\\lib\\site-packages\\requests\\sessions.py\", line 578, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\requests\\sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\utils\\wrapt\\wrappers.py\", line 561, in __call__\r\n    return self._self_wrapper(self.__wrapped__, self._self_instance,\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\instrumentation\\packages\\base.py\", line 210, in call_if_sampling\r\n    return self.call(module, method, wrapped, instance, args, kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\instrumentation\\packages\\requests.py\", line 59, in call\r\n    return wrapped(*args, **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\requests\\sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\requests\\adapters.py\", line 439, in send\r\n    resp = conn.urlopen(\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\utils\\wrapt\\wrappers.py\", line 561, in __call__\r\n    return self._self_wrapper(self.__wrapped__, self._self_instance,\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\instrumentation\\packages\\base.py\", line 210, in call_if_sampling\r\n    return self.call(module, method, wrapped, instance, args, kwargs)\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\instrumentation\\packages\\urllib3.py\", line 74, in call\r\n    destination = url_to_destination(url)\r\n  File \"project\\venv\\lib\\site-packages\\elasticapm\\utils\\__init__.py\", line 146, in url_to_destination\r\n    port = parts.port\r\n  File \"C:\\Python38\\lib\\urllib\\parse.py\", line 174, in port\r\n    raise ValueError(message) from None\r\nValueError: Port could not be cast to integer value as 'None'\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install \"docker\" and \"elastic-apm\" python package within a django app\r\n2. Load APM using default django config\r\n2. Try to use docker \r\n\r\n**Expected behavior**\r\nDocker still works\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/795", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/795/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/795/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/795/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/795", "id": 596750764, "node_id": "MDU6SXNzdWU1OTY3NTA3NjQ=", "number": 795, "title": "Coerce HTTP headers to string before reporting HTTP requests to APM Server", "user": {"login": "dpaluch-rp", "id": 17312107, "node_id": "MDQ6VXNlcjE3MzEyMTA3", "avatar_url": "https://avatars1.githubusercontent.com/u/17312107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpaluch-rp", "html_url": "https://github.com/dpaluch-rp", "followers_url": "https://api.github.com/users/dpaluch-rp/followers", "following_url": "https://api.github.com/users/dpaluch-rp/following{/other_user}", "gists_url": "https://api.github.com/users/dpaluch-rp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpaluch-rp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpaluch-rp/subscriptions", "organizations_url": "https://api.github.com/users/dpaluch-rp/orgs", "repos_url": "https://api.github.com/users/dpaluch-rp/repos", "events_url": "https://api.github.com/users/dpaluch-rp/events{/privacy}", "received_events_url": "https://api.github.com/users/dpaluch-rp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-08T17:47:22Z", "updated_at": "2020-04-17T00:36:35Z", "closed_at": "2020-04-17T00:36:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI started with elastic-apm and no data is captured, in case of error\r\n\r\n`TransportException elasticapm.transport.http in send`\r\n\r\n`document against schema: I[#] S[#] doesn\\'t validate with \\\\\"transaction#\\\\\"\\\\n  I[#] S[#/allOf/3] allOf failed\\\\n    I[#/context/request/headers/last-region] S[#/allOf/3/properties/context/properties/request/properties/headers/patternProperties/%5B.%2A%5D%2A$/type] expected string or array or null, but got number\",`\r\n\r\nheader last-region have integer value, and this cause the problem\r\n\r\n**Environment (please complete the following information)**\r\n- OS: [e.g. Linux] Ubuntu 18.04\r\n- Python version: 3.6\r\n- Framework and version [e.g. Django 2.1]: Django 2.0\r\n- APM Server version: 7.6.2\r\n- Agent version: 5.5.2\r\n\r\nlooks similar to https://github.com/elastic/apm-agent-ruby/issues/672\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/792", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/792/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/792/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/792", "id": 595679157, "node_id": "MDU6SXNzdWU1OTU2NzkxNTc=", "number": 792, "title": "Process pid get master pid ", "user": {"login": "zhouguangming", "id": 1201049, "node_id": "MDQ6VXNlcjEyMDEwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1201049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhouguangming", "html_url": "https://github.com/zhouguangming", "followers_url": "https://api.github.com/users/zhouguangming/followers", "following_url": "https://api.github.com/users/zhouguangming/following{/other_user}", "gists_url": "https://api.github.com/users/zhouguangming/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhouguangming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhouguangming/subscriptions", "organizations_url": "https://api.github.com/users/zhouguangming/orgs", "repos_url": "https://api.github.com/users/zhouguangming/repos", "events_url": "https://api.github.com/users/zhouguangming/events{/privacy}", "received_events_url": "https://api.github.com/users/zhouguangming/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-07T08:12:25Z", "updated_at": "2020-06-05T15:17:10Z", "closed_at": "2020-06-05T15:17:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Process pid get master pid**\r\n\r\n**Environment**\r\n- OS:  Linux\r\n- Python version: All versions\r\n- Framework and version : All Versons\r\n- APM Server version: All Versions\r\n- Agent version: All Versions\r\n\r\n\r\nhttps://github.com/elastic/apm-agent-python/blob/master/elasticapm/base.py#134\r\n```python\r\n        transport_kwargs = {\r\n            \"metadata\": self._build_metadata(),\r\n            \"headers\": headers,\r\n            \"verify_server_cert\": self.config.verify_server_cert,\r\n            \"server_cert\": self.config.server_cert,\r\n            \"timeout\": self.config.server_timeout,\r\n            \"processors\": self.load_processors(),\r\n        }\r\n```\r\n\r\nBecause we get pid in master process but not in workers after fork\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/780", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/780/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/780/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/780", "id": 588974647, "node_id": "MDU6SXNzdWU1ODg5NzQ2NDc=", "number": 780, "title": "Sending data even with Django DEBUG=True", "user": {"login": "xavier-lr", "id": 60396707, "node_id": "MDQ6VXNlcjYwMzk2NzA3", "avatar_url": "https://avatars1.githubusercontent.com/u/60396707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xavier-lr", "html_url": "https://github.com/xavier-lr", "followers_url": "https://api.github.com/users/xavier-lr/followers", "following_url": "https://api.github.com/users/xavier-lr/following{/other_user}", "gists_url": "https://api.github.com/users/xavier-lr/gists{/gist_id}", "starred_url": "https://api.github.com/users/xavier-lr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xavier-lr/subscriptions", "organizations_url": "https://api.github.com/users/xavier-lr/orgs", "repos_url": "https://api.github.com/users/xavier-lr/repos", "events_url": "https://api.github.com/users/xavier-lr/events{/privacy}", "received_events_url": "https://api.github.com/users/xavier-lr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-27T08:38:13Z", "updated_at": "2020-04-14T08:48:18Z", "closed_at": "2020-03-27T16:30:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Setting Django DEBUG to True does not stop elastic agent from sending data to APM.\r\n\r\n```\r\ndjango.VERSION = (2, 2, 10, 'final', 0)\r\nelastic-apm==5.4.3\r\nThis all runs in a docker image python:3.8.2\r\n```\r\n\r\nAPM server is hosted at Elastic Cloud (they pointed me here), I don't see where to check version, but since it was deployed 2 weeks ago, it should be the latest version (at least there is no option to update right now).\r\n\r\n\r\nMy tests:\r\n\r\n```\r\nlr@lr-local:~/app/kernelratings$ ./manage.py elasticapm check\r\n[2020-03-26 14:58:51,341|INFO|customers.apps] Loading all registries...\r\n[2020-03-26 14:58:55,294|INFO|customers.apps] Loaded all registries in 3.95 seconds!\r\nService name is set, good job!\r\n\r\nSERVER_URL https://************************.apm.eu-west-1.aws.cloud.es.io looks fine\r\n\r\nLooks like you're running in DEBUG mode. ElasticAPM will NOT gather any data while DEBUG is set to True.\r\n\r\nIf you want to test ElasticAPM while DEBUG is set to True, you can force ElasticAPM to gather data by setting ELASTIC_APM[\"DEBUG\"] to True, like this\r\n\r\n   ELASTIC_APM = {\r\n       \"DEBUG\": True,\r\n       # your other ELASTIC_APM settings\r\n   }\r\n\r\nTracing middleware is configured! Awesome!\r\n\r\nPlease fix the above errors.\r\n```\r\n\r\nThen, I go to Kibana --> APM and I can see there is data sent from that container. I check the container-id reported in APM and it is the id of the container that reported the message pasted above (checked with \"docker ps\")\r\n\r\nIf I totally remove the ELASTIC_APM setting (whiwle keeping Django DEBUG=True) and re-run Django, it shows errors (elastic-apm is then trying to connect to localhost..) all the time like these:\r\n\r\n```\r\n[2020-03-24 11:03:51,771|WARNING|urllib3.connectionpool] Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f3afa00fa30>: Failed to establish a new connection: [Errno 111] Connection refused')': /intake/v2/events\r\n\r\n[2020-03-24 11:03:39,133|WARNING|urllib3.connectionpool] Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f3afa110940>: Failed to establish a new connection: [Errno 111] Connection refused')': /config/v1/agents\r\n```\r\n\r\n- requirements.txt:\r\n\r\n```\r\nnumpy==1.18.1\r\nscipy==1.4.1\r\nscikit-learn==0.22.1\r\npandas==1.0.1\r\nsklearn-pandas==1.8.0\r\nxgboost==0.81\r\namqp==2.5.2\r\nargparse==1.4.0\r\nbilliard==3.6.3.0\r\nboto==2.49.0\r\nboto3==1.12.7\r\ncelery==4.4.1\r\ncertifi==2019.11.28\r\ncffi==1.14.0\r\ncryptography==2.8\r\ncython==0.29.15\r\nelastic-apm==5.4.3\r\nDjango==2.2.10\r\ndjango-ace-overlay==0.8.0\r\ndjango-appconf==1.0.3\r\ndjango-bootstrap-toolkit==2.15.0\r\ndjango-celery-beat==2.0.0\r\ndjango-celery-results==1.2.1\r\ndjango-compressor==2.4\r\ndjango-extensions==2.2.8\r\ndjango-health-check==3.12.1\r\ndjango-mysql==3.3.0\r\ndjango-redis==4.11.0\r\ndjango-statsd-mozilla==0.4.0\r\ndjango-storages==1.9.1\r\ndjango-timezone-field==4.0\r\ndjango-tracking2==0.5.0\r\ndocopt==0.6.2\r\ngender-guesser==0.4.0\r\ngoogle-api-python-client==1.7.8\r\ngoogle-measurement-protocol==1.0.0\r\ngunicorn==19.9.0\r\nipython==7.13.0\r\njinja2==2.10.1\r\njoblib==0.14.1\r\njsonschema==3.0.2\r\nkombu==4.6.8\r\nlibsaas==0.4\r\nmaxminddb==1.4.1\r\nmeld3==2.0.0\r\nmysqlclient==1.4.6\r\nndg-httpsclient==0.5.1\r\nnltk==3.4.4\r\nopenpyxl==3.0.3\r\nPillow==6.1.0\r\npsutil==5.6.3\r\npycparser==2.19\r\npycurl==7.43.0.3\r\nPygments==2.4.2\r\npymailcheck==1.0.0\r\npyOpenSSL==19.0.0\r\npython-dateutil==2.8.1\r\npytz==2019.3\r\npyzmq==18.1.0\r\nredis==3.4.1\r\nrequests==2.23.0\r\nrollbar==0.14.7\r\nsetproctitle==1.1.10\r\nsimple-salesforce==0.74.2\r\nsix==1.12.0\r\nSouth==1.0.2\r\nstatsd==3.3.0\r\ntornado==6.0.3\r\nua-parser==0.7.1\r\nUnidecode==1.1.1\r\nurllib3==1.25.6\r\nuser_agents==1.1.0\r\nxlrd==1.2.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/774", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/774/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/774/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/774", "id": 587797113, "node_id": "MDU6SXNzdWU1ODc3OTcxMTM=", "number": 774, "title": "FastAPI/Starlette: Unexpected argument app", "user": {"login": "arocketman", "id": 3056077, "node_id": "MDQ6VXNlcjMwNTYwNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3056077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arocketman", "html_url": "https://github.com/arocketman", "followers_url": "https://api.github.com/users/arocketman/followers", "following_url": "https://api.github.com/users/arocketman/following{/other_user}", "gists_url": "https://api.github.com/users/arocketman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arocketman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arocketman/subscriptions", "organizations_url": "https://api.github.com/users/arocketman/orgs", "repos_url": "https://api.github.com/users/arocketman/repos", "events_url": "https://api.github.com/users/arocketman/events{/privacy}", "received_events_url": "https://api.github.com/users/arocketman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-25T15:49:43Z", "updated_at": "2020-03-25T19:16:16Z", "closed_at": "2020-03-25T19:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\n\r\nHi, I cannot seem to add ElasticAPM as middleware for the following versions:\r\n\r\nstarlette==0.13.2\r\nfastapi==0.52.0\r\nelastic-apm==5.5.2\r\n\r\nThe error is:\r\n\r\n```\r\nProcess SpawnProcess-1:\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/multiprocessing/process.py\", line 315, in _bootstrap\r\n    self.run()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/uvicorn/subprocess.py\", line 61, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/uvicorn/main.py\", line 382, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"uvloop/loop.pyx\", line 1456, in uvloop.loop.Loop.run_until_complete\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/uvicorn/main.py\", line 389, in serve\r\n    config.load()\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/uvicorn/config.py\", line 288, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/uvicorn/importer.py\", line 20, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"./app.py\", line 20, in <module>\r\n    app.add_middleware(ElasticAPM, client=elasticapm)\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/starlette/applications.py\", line 117, in add_middleware\r\n    self.middleware_stack = self.build_middleware_stack()\r\n  File \"/Users/xxx/.../venv/lib/python3.8/site-packages/starlette/applications.py\", line 81, in build_middleware_stack\r\n    app = cls(app=app, **options)\r\nTypeError: __init__() got an unexpected keyword argument 'app'\r\n```\r\n\r\nIf you deep dive into the code for starlette you will notice that at some point it does the following as clearly stated by the applications.py code in starlette:\r\n\r\n`app = cls(app=app, **options)`\r\n\r\nhowever in ElasticApm we have:\r\n\r\n\r\n    def __init__(self, application, client):\r\n        self.application = application\r\n        self.client = client\r\n\r\nso in the init it would be required to call application -> app\r\n\r\n\r\n**To Reproduce**\r\n\r\nInstall python 3.8 and versions as mentioned above. Then:\r\n\r\n```\r\napp = FastAPI()\r\nelasticapm = make_apm_client(config={\r\n    'SERVICE_NAME': 'foo',\r\n    'SECRET_TOKEN': ''\r\n})\r\napp.add_middleware(ElasticAPM, client=elasticapm)\r\n```\r\n\r\n**Environment (please complete the following information)**\r\n- OS: MAC OS Catalina 10.15.3\r\n- Python version: Python 3.8\r\n- Framework and version [e.g. Django 2.1]: Starlette/FastAPI\r\n\r\n    starlette==0.13.2\r\n    fastapi==0.52.0\r\n    elastic-apm==5.5.2\r\n\r\n- APM Server version: apm-server-7.6.1\r\n- Agent version: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/765", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/765/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/765/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/765", "id": 584956204, "node_id": "MDU6SXNzdWU1ODQ5NTYyMDQ=", "number": 765, "title": "'UnixDomainSocketConnection' object has no attribute 'port'", "user": {"login": "kvspb", "id": 1138253, "node_id": "MDQ6VXNlcjExMzgyNTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1138253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvspb", "html_url": "https://github.com/kvspb", "followers_url": "https://api.github.com/users/kvspb/followers", "following_url": "https://api.github.com/users/kvspb/following{/other_user}", "gists_url": "https://api.github.com/users/kvspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvspb/subscriptions", "organizations_url": "https://api.github.com/users/kvspb/orgs", "repos_url": "https://api.github.com/users/kvspb/repos", "events_url": "https://api.github.com/users/kvspb/events{/privacy}", "received_events_url": "https://api.github.com/users/kvspb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-20T09:54:34Z", "updated_at": "2020-03-23T10:15:14Z", "closed_at": "2020-03-20T17:10:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "AttributeError: 'UnixDomainSocketConnection' object has no attribute 'port'\r\nelastic-apm==5.5.1\r\n\r\n```\r\n  File \"django_redis/cache.py\", line 32, in _decorator\r\n    return method(self, *args, **kwargs)\r\n  File \"django_redis/cache.py\", line 80, in get\r\n    return self.client.get(key, default=default, version=version,\r\n  File \"django_redis/client/default.py\", line 203, in get\r\n    value = client.get(key)\r\n  File \"redis/client.py\", line 976, in get\r\n    return self.execute_command('GET', name)\r\n  File \"elasticapm/instrumentation/packages/base.py\", line 210, in call_if_sampling\r\n    return self.call(module, method, wrapped, instance, args, kwargs)\r\n  File \"elasticapm/instrumentation/packages/redis.py\", line 66, in call\r\n    return wrapped(*args, **kwargs)\r\n  File \"redis/client.py\", line 667, in execute_command\r\n    connection.send_command(*args)\r\n  File \"redis/connection.py\", line 610, in send_command\r\n    self.send_packed_command(self.pack_command(*args))\r\n  File \"elasticapm/instrumentation/packages/base.py\", line 210, in call_if_sampling\r\n    return self.call(module, method, wrapped, instance, args, kwargs)\r\n  File \"elasticapm/instrumentation/packages/redis.py\", line 90, in call\r\n    port = int(instance.port) if instance.port else None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/762", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/762/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/762/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/762", "id": 584427284, "node_id": "MDU6SXNzdWU1ODQ0MjcyODQ=", "number": 762, "title": "[CI] Enable launch full matrix test on PRs", "user": {"login": "kuisathaverat", "id": 5400788, "node_id": "MDQ6VXNlcjU0MDA3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5400788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuisathaverat", "html_url": "https://github.com/kuisathaverat", "followers_url": "https://api.github.com/users/kuisathaverat/followers", "following_url": "https://api.github.com/users/kuisathaverat/following{/other_user}", "gists_url": "https://api.github.com/users/kuisathaverat/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuisathaverat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuisathaverat/subscriptions", "organizations_url": "https://api.github.com/users/kuisathaverat/orgs", "repos_url": "https://api.github.com/users/kuisathaverat/repos", "events_url": "https://api.github.com/users/kuisathaverat/events{/privacy}", "received_events_url": "https://api.github.com/users/kuisathaverat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1151181517, "node_id": "MDU6TGFiZWwxMTUxMTgxNTE3", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/automation", "name": "automation", "color": "81a2ef", "default": false, "description": null}, {"id": 681237023, "node_id": "MDU6TGFiZWw2ODEyMzcwMjM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/ci", "name": "ci", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T13:50:32Z", "updated_at": "2020-03-25T13:39:04Z", "closed_at": "2020-03-25T13:39:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We have a job that runs a really long list of frameworks and versions, we run it on a daily basis. In some cases, we need to launch those tests on a PR.\r\nThe proposal is to trigger those builds with a GitHub comment (\"jenkins run the full test matrix\" )\r\n\r\nhttps://apm-ci.elastic.co/job/apm-agent-python/job/apm-agent-python-nightly-mbp/job/master/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/758", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/758/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/758/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/758", "id": 582124797, "node_id": "MDU6SXNzdWU1ODIxMjQ3OTc=", "number": 758, "title": "SSL/TLS is not working when client_authentication was not setup in APM Server", "user": {"login": "insukcho", "id": 3095667, "node_id": "MDQ6VXNlcjMwOTU2Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3095667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/insukcho", "html_url": "https://github.com/insukcho", "followers_url": "https://api.github.com/users/insukcho/followers", "following_url": "https://api.github.com/users/insukcho/following{/other_user}", "gists_url": "https://api.github.com/users/insukcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/insukcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/insukcho/subscriptions", "organizations_url": "https://api.github.com/users/insukcho/orgs", "repos_url": "https://api.github.com/users/insukcho/repos", "events_url": "https://api.github.com/users/insukcho/events{/privacy}", "received_events_url": "https://api.github.com/users/insukcho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-16T09:10:57Z", "updated_at": "2020-03-23T10:14:32Z", "closed_at": "2020-03-23T10:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: \r\nI'm trying to set up TLS/SSL between Django/Flask Agents and self-managed APM Server in the same local machine.\r\n\r\nWhen I checked the `apm-server.yml` configuration, it seems `client_authentication` default value is `optional` but when I didn't set up this, I keep seeing SSL handshaking exceptions.\r\n\r\nAfter comment out `client_authentication: 'optional'` in `apm-server.yml` and restart APM Server, it was working.\r\n\r\n**To Reproduce**\r\n\r\n1. Set APM Server with below configuration in `apm-server.yml`. (FYI, I've generated self-signed certificates with elasticsearch-certutil.)\r\n```\r\napm-server.ssl.enabled: true\r\napm-server.ssl.key: \"./certs/localhost/localhost.key\"\r\napm-server.ssl.certificate: \"./certs/localhost/localhost.crt\"\r\napm-server.ssl.certificate_authorities: ['./certs/ca/ca.crt']\r\napm-server.ssl.secret_token: ${SECRET_TOKEN}\r\n```\r\n2. Set Django and Flask with below.\r\n\r\n*Django(settings.py)*\r\n```\r\nELASTIC_APM = {\r\n  'DEBUG': True,\r\n  # Set required service name. Allowed characters:\r\n  # a-z, A-Z, 0-9, -, _, and space\r\n  'SERVICE_NAME': 'amazing_django_service',\r\n\r\n  # Use if APM Server requires a token\r\n  'SECRET_TOKEN': '6AC5BF896C915',\r\n\r\n  # Set custom APM Server URL (default: http://localhost:8200)\r\n  'SERVER_URL': 'https://127.0.0.1:8200',\r\n\r\n  #'SERVER_CERT': './certs/localhost/localhost.crt',\r\n  \r\n  'VERIFY_SERVER_CERT': False,\r\n\r\n}\r\n```\r\n\r\n*Flask(hello-flask.py)*\r\n```\r\napp.config['ELASTIC_APM'] = {\r\n  'DEBUG': True,\r\n  # Set required service name. Allowed characters:\r\n  # a-z, A-Z, 0-9, -, _, and space\r\n  'SERVICE_NAME': 'flask-hello-service',\r\n\r\n  # Use if APM Server requires a token\r\n  'SECRET_TOKEN': '6AC5BF896C915',\r\n\r\n  # Set custom APM Server URL (default: http://localhost:8200)\r\n  'SERVER_URL': 'https://localhost:8200',\r\n\r\n  #'SERVER_CERT': './certs/localhost/localhost.crt',\r\n  \r\n  'VERIFY_SERVER_CERT': False,\r\n}\r\n```\r\n3. When you run Django or Flask, below error messages was printed periodically.\r\n\r\n*Django & Flask*\r\n```\r\nelasticapm.transport.base.TransportException: Unable to reach APM Server: HTTPSConnectionPool(host='127.0.0.1', port=8200): Max retries exceeded with url: /intake/v2/events (Caused by SSLError(SSLError(1, '[SSL: SSLV3_ALERT_BAD_CERTIFICATE] sslv3 alert bad certificate (_ssl.c:1056)'))) (url: https://127.0.0.1:8200/intake/v2/events)\r\n```\r\n\r\n*APM-Server*\r\n```\r\n2020/03/16 17:28:43 http: TLS handshake error from 127.0.0.1:53345: tls: client didn't provide a certificate\r\n2020/03/16 17:28:43 http: TLS handshake error from 127.0.0.1:53347: tls: client didn't provide a certificate\r\n2020/03/16 17:28:43 http: TLS handshake error from 127.0.0.1:53349: tls: client didn't provide a certificate\r\n2020/03/16 17:28:43 http: TLS handshake error from 127.0.0.1:53351: tls: client didn't provide a certificate\r\n```\r\n4. After comment out `client_authentication: 'optional'`, it was working properly.\r\n\r\n```\r\n    # Configure which type of client authentication is supported.\r\n    # Options are `none`, `optional`, and `required`. Default is `optional`.\r\n    client_authentication: 'optional'\r\n```\r\n\r\n**Expected behavior**: `client_authentication` default setting is `optional` but it has different behavior when explicitly set it up as `optional`. The behavior should be the same as the comment's description and [reference doc's content](https://www.elastic.co/guide/en/apm/server/current/agent-server-ssl.html#_client_authentication).\r\n\r\n**Environment (please complete the following information)**\r\n- OS: macOS Mojave 10.14.6(18G3020)\r\n- Python version: Python 3.7.3\r\n- Framework and version: Django (3.0.2), Flask (1.1.1)\r\n- APM Server version: apm-server version 7.6.1 (amd64), libbeat 7.6.1 [3b7823bb329e0e5bfe25e106a3b93e8f61d0451f built 2020-02-28 22:16:31 +0000 UTC]\r\n- Agent version: elastic-apm 5.3.2\r\n\r\n\r\n**Additional context**\r\nThe current setup of `APM Server` w/o issues is described step by step here: https://wiki.elastic.co/display/CC/How+to+setup+the+self-managed+APM+Server\r\n\r\nI have long discussion with @beniwohli in [slack](https://elastic.slack.com/archives/C5M04AVJA/p1584088422200100), and he recommended to create this issue on `apm-agent-python` rather than `apm-server` repo! Thank you for your help @beniwohli  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/748", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/748/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/748/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/748", "id": 578843642, "node_id": "MDU6SXNzdWU1Nzg4NDM2NDI=", "number": 748, "title": "[CI][windows] tests.metrics.breakdown_tests failed with python 3.7 in Windows ", "user": {"login": "v1v", "id": 2871786, "node_id": "MDQ6VXNlcjI4NzE3ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2871786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v1v", "html_url": "https://github.com/v1v", "followers_url": "https://api.github.com/users/v1v/followers", "following_url": "https://api.github.com/users/v1v/following{/other_user}", "gists_url": "https://api.github.com/users/v1v/gists{/gist_id}", "starred_url": "https://api.github.com/users/v1v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v1v/subscriptions", "organizations_url": "https://api.github.com/users/v1v/orgs", "repos_url": "https://api.github.com/users/v1v/repos", "events_url": "https://api.github.com/users/v1v/events{/privacy}", "received_events_url": "https://api.github.com/users/v1v/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-10T20:31:41Z", "updated_at": "2020-03-13T12:23:16Z", "closed_at": "2020-03-13T12:23:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`windows-3.7-none / test_multiple_transactions \u2013 tests.metrics.breakdown_tests` failed with the below stacktrace\r\n\r\n```\r\nError\r\nassert 9999999 == 10000000\r\nStacktrace\r\nelasticapm_client = <tests.fixtures.TempStoreClient object at 0x000001FF75350E08>\r\n    def test_multiple_transactions(elasticapm_client):\r\n        for i in (1, 2):\r\n            elasticapm_client.begin_transaction(\"request\")\r\n            with elasticapm.capture_span(\"test\", duration=5):\r\n                pass\r\n            elasticapm_client.end_transaction(\"test\", \"OK\", duration=10)\r\n    \r\n        breakdown = elasticapm_client._metrics.get_metricset(\"elasticapm.metrics.sets.breakdown.BreakdownMetricSet\")\r\n        data = list(breakdown.collect())\r\n        asserts = 0\r\n        for elem in data:\r\n            if \"transaction.breakdown.count\" in elem[\"samples\"]:\r\n                assert elem[\"samples\"][\"transaction.breakdown.count\"][\"value\"] == 2\r\n                assert elem[\"transaction\"] == {\"name\": \"test\", \"type\": \"request\"}\r\n                asserts += 1\r\n            elif \"span.self_time.sum.us\" in elem[\"samples\"]:\r\n                if elem[\"span\"] == {\"type\": \"app\", \"subtype\": \"\"}:\r\n                    assert elem[\"transaction\"] == {\"name\": \"test\", \"type\": \"request\"}\r\n                    # precision lost due to float arithmetic\r\n>                   assert elem[\"samples\"][\"span.self_time.sum.us\"][\"value\"] == 10000000\r\nE                   assert 9999999 == 10000000\r\ntests\\metrics\\breakdown_tests.py:231: AssertionError\r\n```\r\n\r\nSee [here](https://apm-ci.elastic.co/blue/organizations/jenkins/apm-agent-python%2Fapm-agent-python-mbp/detail/PR-746/24/tests)\r\n\r\nAlready discussed with @beniwohli and suggested to use some assertion a bit less strict ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/740", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/740/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/740/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/740", "id": 572282266, "node_id": "MDU6SXNzdWU1NzIyODIyNjY=", "number": 740, "title": "[Feature] encode/databases support", "user": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-27T18:48:33Z", "updated_at": "2020-03-12T17:14:49Z", "closed_at": "2020-03-12T17:14:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A friend and I were chatting recently about async libraries in python. He had nothing but good things to say about the tools in https://github.com/encode\r\n\r\n`databases` seems like a good candidate for upping our async game: https://github.com/encode/databases", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/738", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/738/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/738/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/738", "id": 572277949, "node_id": "MDU6SXNzdWU1NzIyNzc5NDk=", "number": 738, "title": "[Feature] asyncpg instrumentation support", "user": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T18:41:05Z", "updated_at": "2020-04-22T14:39:36Z", "closed_at": "2020-04-22T14:39:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Have a friend who is working at a company using an async tornado stack, and this is one of the libraries he requested that we support.\r\n\r\nhttps://github.com/MagicStack/asyncpg", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/737", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/737/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/737/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/737", "id": 570821040, "node_id": "MDU6SXNzdWU1NzA4MjEwNDA=", "number": 737, "title": "Running Django 3 with asgi fails", "user": {"login": "blakerouse", "id": 3869671, "node_id": "MDQ6VXNlcjM4Njk2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3869671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blakerouse", "html_url": "https://github.com/blakerouse", "followers_url": "https://api.github.com/users/blakerouse/followers", "following_url": "https://api.github.com/users/blakerouse/following{/other_user}", "gists_url": "https://api.github.com/users/blakerouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/blakerouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blakerouse/subscriptions", "organizations_url": "https://api.github.com/users/blakerouse/orgs", "repos_url": "https://api.github.com/users/blakerouse/repos", "events_url": "https://api.github.com/users/blakerouse/events{/privacy}", "received_events_url": "https://api.github.com/users/blakerouse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2020-02-25T20:44:52Z", "updated_at": "2020-03-10T20:06:17Z", "closed_at": "2020-03-10T20:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**:\r\n\r\nDjango 3 supports running with asgi. APM does not work when using asgi because an issue with the format of headers in the ASGI. In ASGI the headers are a list where APM current expect it to be a dictionary.\r\n\r\n**To Reproduce**\r\n\r\n1. Create a new Django 3 project.\r\n2. Run uvicorn pointing at `newapp.asgi`\r\n3. Get stacktrace:\r\n\r\n```\r\n[2020-02-25 19:16:15 +0000] [255] [ERROR] Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/uvicorn/protocols/http/httptools_impl.py\", line 385, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/usr/local/lib/python3.6/dist-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.6/dist-packages/myproject/asyncio.py\", line 56, in __call__\r\n    return await self.application(scope, receive, send)\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/core/handlers/asgi.py\", line 155, in __call__\r\n    await sync_to_async(signals.request_started.send)(sender=self.__class__, scope=scope)\r\n  File \"/usr/local/lib/python3.6/dist-packages/asgiref/sync.py\", line 244, in __call__\r\n    return await asyncio.wait_for(future, timeout=None)\r\n  File \"/usr/lib/python3.6/asyncio/tasks.py\", line 339, in wait_for\r\n    return (yield from fut)\r\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/asgiref/sync.py\", line 277, in thread_handler\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/contextvars/__init__.py\", line 38, in run\r\n    return callable(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/dispatch/dispatcher.py\", line 175, in send\r\n    for receiver in self._live_receivers(sender)\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/dispatch/dispatcher.py\", line 175, in <listcomp>\r\n    for receiver in self._live_receivers(sender)\r\n  File \"/usr/local/lib/python3.6/dist-packages/elasticapm/contrib/django/apps.py\", line 144, in _request_started_handler\r\n    trace_parent = TraceParent.from_headers(kwargs[\"scope\"][\"headers\"])\r\n  File \"/usr/local/lib/python3.6/dist-packages/elasticapm/utils/disttracing.py\", line 96, in from_headers\r\n    tracestate = cls.merge_duplicate_headers(headers, tracestate_header_name)\r\n  File \"/usr/local/lib/python3.6/dist-packages/elasticapm/utils/disttracing.py\", line 121, in merge_duplicate_headers\r\n    return headers.get(key)\r\nAttributeError: 'list' object has no attribute 'get'\r\n127.0.0.1:52032 - \"GET /healthz HTTP/1.0\" 500\r\n```\r\n\r\n\r\n**Expected behavior**:\r\n\r\nSpans are sent to APM server.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Ubuntu 18.04 (Docker)\r\n- Python version: 3.6\r\n- Framework and version: Django  3.0.1\r\n- APM Server version: 7.6.0\r\n- Agent version: 5.4.2\r\n\r\n\r\n**Additional context**\r\n\r\nCurrently running under gunicorn in production but running locally with uvicorn gets the same result:\r\n\r\n```\r\n\"\"\"Settings for running gunicorn.\"\"\"\r\n\r\nbind = \"0.0.0.0:8001\"\r\nworkers = 4\r\nworker_class = \"uvicorn.workers.UvicornWorker\"\r\n\r\naccesslog = \"-\"\r\nerrorlog = \"-\"\r\nloglevel = \"info\"\r\n\r\nuser = \"www-data\"\r\ngroup = \"www-data\"\r\n\r\nsecure_scheme_headers = {\"X-FORWARDED-PROTOCOL\": \"ssl\", \"X-FORWARDED-PROTO\": \"https\"}\r\nforwarded_allow_ips = \"*\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/723", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/723/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/723/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/723", "id": 566983135, "node_id": "MDU6SXNzdWU1NjY5ODMxMzU=", "number": 723, "title": "'AsyncTransport' has no attribute '_start_event_processor'", "user": {"login": "jaap3", "id": 48517, "node_id": "MDQ6VXNlcjQ4NTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/48517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaap3", "html_url": "https://github.com/jaap3", "followers_url": "https://api.github.com/users/jaap3/followers", "following_url": "https://api.github.com/users/jaap3/following{/other_user}", "gists_url": "https://api.github.com/users/jaap3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaap3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaap3/subscriptions", "organizations_url": "https://api.github.com/users/jaap3/orgs", "repos_url": "https://api.github.com/users/jaap3/repos", "events_url": "https://api.github.com/users/jaap3/events{/privacy}", "received_events_url": "https://api.github.com/users/jaap3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-18T15:46:41Z", "updated_at": "2020-02-19T08:50:57Z", "closed_at": "2020-02-18T16:18:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\n\r\nAfter upgrading to `elastic-apm==5.4.1` I now get an error when Celery starts:\r\n\r\n```\r\n<function _register_worker_signals.<locals>.worker_startup at 0x7feae4beb620> raised: AttributeError(\"'AsyncTransport' object has no attribute '_start_event_processor'\",)\r\nTraceback (most recent call last):\r\n  File \"/venv/lib/python3.6/site-packages/celery/utils/dispatch/signal.py\", line 288, in send\r\n    response = receiver(signal=self, sender=sender, **named)\r\n  File \"/venv/1.37.1/lib/python3.6/site-packages/elasticapm/contrib/celery/__init__.py\", line 80, in worker_startup\r\n    client._transport._start_event_processor()\r\nAttributeError: 'AsyncTransport' object has no attribute '_start_event_processor' \r\n```\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux-3.10.0-1062.9.1.el7.x86_64-x86_64-with-centos-7.7.1908-Core 2020-02-18 16:24:31\r\n- Python version: Python 3.6.8\r\n- Framework and version: \r\n  celery 4.4.0\r\n  Django 3.0.3\r\n- APM Server version: ?\r\n- Agent version: 5.4.1\r\n\r\nI see the same error mentioned in issue #704, but I don't seem to have an issue with restarting Celery workers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/718", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/718/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/718/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/718", "id": 566186389, "node_id": "MDU6SXNzdWU1NjYxODYzODk=", "number": 718, "title": "psycopg2 tests are failing in CI", "user": {"login": "kuisathaverat", "id": 5400788, "node_id": "MDQ6VXNlcjU0MDA3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5400788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuisathaverat", "html_url": "https://github.com/kuisathaverat", "followers_url": "https://api.github.com/users/kuisathaverat/followers", "following_url": "https://api.github.com/users/kuisathaverat/following{/other_user}", "gists_url": "https://api.github.com/users/kuisathaverat/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuisathaverat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuisathaverat/subscriptions", "organizations_url": "https://api.github.com/users/kuisathaverat/orgs", "repos_url": "https://api.github.com/users/kuisathaverat/repos", "events_url": "https://api.github.com/users/kuisathaverat/events{/privacy}", "received_events_url": "https://api.github.com/users/kuisathaverat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1151181517, "node_id": "MDU6TGFiZWwxMTUxMTgxNTE3", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/automation", "name": "automation", "color": "81a2ef", "default": false, "description": null}, {"id": 681237023, "node_id": "MDU6TGFiZWw2ODEyMzcwMjM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/ci", "name": "ci", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "kuisathaverat", "id": 5400788, "node_id": "MDQ6VXNlcjU0MDA3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5400788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuisathaverat", "html_url": "https://github.com/kuisathaverat", "followers_url": "https://api.github.com/users/kuisathaverat/followers", "following_url": "https://api.github.com/users/kuisathaverat/following{/other_user}", "gists_url": "https://api.github.com/users/kuisathaverat/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuisathaverat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuisathaverat/subscriptions", "organizations_url": "https://api.github.com/users/kuisathaverat/orgs", "repos_url": "https://api.github.com/users/kuisathaverat/repos", "events_url": "https://api.github.com/users/kuisathaverat/events{/privacy}", "received_events_url": "https://api.github.com/users/kuisathaverat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kuisathaverat", "id": 5400788, "node_id": "MDQ6VXNlcjU0MDA3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5400788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuisathaverat", "html_url": "https://github.com/kuisathaverat", "followers_url": "https://api.github.com/users/kuisathaverat/followers", "following_url": "https://api.github.com/users/kuisathaverat/following{/other_user}", "gists_url": "https://api.github.com/users/kuisathaverat/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuisathaverat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuisathaverat/subscriptions", "organizations_url": "https://api.github.com/users/kuisathaverat/orgs", "repos_url": "https://api.github.com/users/kuisathaverat/repos", "events_url": "https://api.github.com/users/kuisathaverat/events{/privacy}", "received_events_url": "https://api.github.com/users/kuisathaverat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-17T10:03:02Z", "updated_at": "2020-03-09T15:26:29Z", "closed_at": "2020-02-17T13:39:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Today a bunch of psycopg and psycopg2 start failing, There are no changes since The lastest successful build so I am not sure what it is the cause, I check psycopg2 just in case there is a new version but is not.\r\n\r\n```\r\n[2020-02-17T09:01:05.498Z] self = <elasticapm.instrumentation.packages.pyodbc.PyODBCInstrumentation object at 0x7efc8c001950>\r\n[2020-02-17T09:01:05.498Z] module = 'pyodbc', method = 'connect', wrapped = <built-in function connect>\r\n[2020-02-17T09:01:05.498Z] instance = None\r\n[2020-02-17T09:01:05.498Z] args = ('DRIVER={PostgreSQL Unicode};DATABASE=elasticapm_test;UID=postgres;SERVER=postgres;PORT=5432;',)\r\n[2020-02-17T09:01:05.498Z] kwargs = {}\r\n[2020-02-17T09:01:05.498Z] \r\n[2020-02-17T09:01:05.498Z]     def call(self, module, method, wrapped, instance, args, kwargs):\r\n[2020-02-17T09:01:05.498Z] >       return PyODBCConnectionProxy(wrapped(*args, **kwargs))\r\n[2020-02-17T09:01:05.498Z] E       OperationalError: ('08001', u'[08001] could not translate host name \"postgres\" to address: Name or service not known\\n (101) (SQLDriverConnect)')\r\n[2020-02-17T09:01:05.498Z] \r\n[2020-02-17T09:01:05.498Z] elasticapm/instrumentation/packages/pyodbc.py:56: OperationalError\r\n[2020-02-17T09:01:05.498Z] =============================== warnings summary ===============================\r\n[2020-02-17T09:01:05.498Z] /usr/local/lib/python2.7/site-packages/_pytest/mark/structures.py:334\r\n[2020-02-17T09:01:05.498Z]   /usr/local/lib/python2.7/site-packages/_pytest/mark/structures.py:334: PytestUnknownMarkWarning: Unknown pytest.mark.pyodbc - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/latest/mark.html\r\n[2020-02-17T09:01:05.498Z]     PytestUnknownMarkWarning,\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/717", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/717/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/717/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/717", "id": 565225801, "node_id": "MDU6SXNzdWU1NjUyMjU4MDE=", "number": 717, "title": "dictionary changed size during iteration", "user": {"login": "starenka", "id": 228248, "node_id": "MDQ6VXNlcjIyODI0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/228248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/starenka", "html_url": "https://github.com/starenka", "followers_url": "https://api.github.com/users/starenka/followers", "following_url": "https://api.github.com/users/starenka/following{/other_user}", "gists_url": "https://api.github.com/users/starenka/gists{/gist_id}", "starred_url": "https://api.github.com/users/starenka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/starenka/subscriptions", "organizations_url": "https://api.github.com/users/starenka/orgs", "repos_url": "https://api.github.com/users/starenka/repos", "events_url": "https://api.github.com/users/starenka/events{/privacy}", "received_events_url": "https://api.github.com/users/starenka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-14T10:07:04Z", "updated_at": "2020-04-20T17:05:14Z", "closed_at": "2020-04-20T17:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error pretty often in `TransactionsMetricSet`:\r\n\r\n```\r\nRuntimeError: dictionary changed size during iteration\r\n  File \"elasticapm/utils/threading.py\", line 79, in run\r\n    rval = self._function(*self._args, **self._kwargs)\r\n  File \"elasticapm/metrics/base_metrics.py\", line 97, in collect\r\n    for data in metricset.collect():\r\n  File \"elasticapm/metrics/base_metrics.py\", line 215, in collect\r\n    for (name, labels), t in compat.iteritems(self._timers):\r\n```\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Debian stable\r\n- Python version: 2.7.13\r\n- Framework and version [e.g. Django 2.1]: 1.11.20\r\n- APM Server version: 7.6.0\r\n- Agent version: 5.3.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/713", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/713/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/713/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/713", "id": 561809599, "node_id": "MDU6SXNzdWU1NjE4MDk1OTk=", "number": 713, "title": "Django 3.0 Support", "user": {"login": "Palisand", "id": 4138177, "node_id": "MDQ6VXNlcjQxMzgxNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4138177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Palisand", "html_url": "https://github.com/Palisand", "followers_url": "https://api.github.com/users/Palisand/followers", "following_url": "https://api.github.com/users/Palisand/following{/other_user}", "gists_url": "https://api.github.com/users/Palisand/gists{/gist_id}", "starred_url": "https://api.github.com/users/Palisand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Palisand/subscriptions", "organizations_url": "https://api.github.com/users/Palisand/orgs", "repos_url": "https://api.github.com/users/Palisand/repos", "events_url": "https://api.github.com/users/Palisand/events{/privacy}", "received_events_url": "https://api.github.com/users/Palisand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-07T18:49:20Z", "updated_at": "2020-04-27T17:00:11Z", "closed_at": "2020-02-18T10:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [this](https://www.elastic.co/guide/en/apm/agent/python/current/supported-technologies.html#supported-django), `elastic-apm` supports up to Django 2.2.\r\n\r\nHas anyone tested this with Django 3.0?\r\nIs there an ETA on when Django 3.0 will be officially supported (e.g. on the next release)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/712", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/712/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/712/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/712", "id": 559912581, "node_id": "MDU6SXNzdWU1NTk5MTI1ODE=", "number": 712, "title": "Distributed Tracing with APM server; with Python", "user": {"login": "nerusnayleinad", "id": 19745725, "node_id": "MDQ6VXNlcjE5NzQ1NzI1", "avatar_url": "https://avatars2.githubusercontent.com/u/19745725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerusnayleinad", "html_url": "https://github.com/nerusnayleinad", "followers_url": "https://api.github.com/users/nerusnayleinad/followers", "following_url": "https://api.github.com/users/nerusnayleinad/following{/other_user}", "gists_url": "https://api.github.com/users/nerusnayleinad/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerusnayleinad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerusnayleinad/subscriptions", "organizations_url": "https://api.github.com/users/nerusnayleinad/orgs", "repos_url": "https://api.github.com/users/nerusnayleinad/repos", "events_url": "https://api.github.com/users/nerusnayleinad/events{/privacy}", "received_events_url": "https://api.github.com/users/nerusnayleinad/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103118, "node_id": "MDU6TGFiZWw2NDYxMDMxMTg=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/question", "name": "question", "color": "d876e3", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-02-04T18:44:51Z", "updated_at": "2020-04-22T14:31:53Z", "closed_at": "2020-04-22T14:31:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been doing POC tests on different Tracing technologies (Jaeger, Zipkin, Stackdriver trace, Istio (still Jaeger or Zipkin. Different concepts though)), and now I am with Elasticsearch APM module, and I see it is more or less the same concept. You start counting a trace when you start a request, and end it when you get a response.\r\n\r\nI've generated some traces, and am able to see them on Kibana, but I see the traces separately, which makes sense, as every time; in each service I initialize a new Tracer object, and this gets a new ID.\r\n\r\nNow, when I want to see the cascade view of several service spans, or several spans of the same service, I pass the Trace ID to the next service, so this one will initialize the tracer with this ID, and will generate a new Span ID, and attach to the same trace.\r\n\r\nI've been reading the docs, for Python, and the only method that suits this is `elasticapm.set_context()`, but everything I found in the docs is this:\r\n\r\n> def set_context(data, key=\"custom\"):\r\n>     \"\"\"\r\n>     Attach contextual data to the current transaction and errors that happen during the current transaction.\r\n>     If the transaction is not sampled, this function becomes a no-op.\r\n>     :param data: a dictionary, or a callable that returns a dictionary\r\n>     :param key: the namespace for this data\r\n>     \"\"\"\r\n> ...\r\n\r\nI would like to know if this is the right way of doing this, or I am completely off the track.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/710", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/710/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/710/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/710", "id": 558508806, "node_id": "MDU6SXNzdWU1NTg1MDg4MDY=", "number": 710, "title": "No module named 'elasticapm.contrib.aiohttp'", "user": {"login": "meysam81", "id": 30233243, "node_id": "MDQ6VXNlcjMwMjMzMjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/30233243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meysam81", "html_url": "https://github.com/meysam81", "followers_url": "https://api.github.com/users/meysam81/followers", "following_url": "https://api.github.com/users/meysam81/following{/other_user}", "gists_url": "https://api.github.com/users/meysam81/gists{/gist_id}", "starred_url": "https://api.github.com/users/meysam81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meysam81/subscriptions", "organizations_url": "https://api.github.com/users/meysam81/orgs", "repos_url": "https://api.github.com/users/meysam81/repos", "events_url": "https://api.github.com/users/meysam81/events{/privacy}", "received_events_url": "https://api.github.com/users/meysam81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-01T08:48:03Z", "updated_at": "2020-02-05T08:44:40Z", "closed_at": "2020-02-04T16:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I install the package using `pip install elastic-apm`, the `aiohttp` module is not found in the library. I tried installing via cloning the repository and using `pip install .` on the project's root directory and the `aiohttp` module was there. My best guess is that the [PyPi](https://pypi.org/project/elastic-apm/) of the project is not up-to-date. But then again I may be wrong and I may have to do something that I'm not aware of. By the way I read the [docs](https://www.elastic.co/guide/en/apm/agent/python/master/aiohttp-server-support.html) as well but no luck there too.\r\n\r\n**To Reproduce**\r\n\r\n1. install the package using `pip install elastic-apm`\r\n2. try importing like this `from elasticapm.contrib.aiohttp import ElasticAPM`\r\n3. you would encounter something like this: `No module named 'elasticapm.contrib.aiohttp'`\r\n4. try cloning the repository and installing via `pip install .` in the project's root directory and then `from elasticapm.contrib.aiohttp import ElasticAPM` would work just find.\r\n\r\n**Expected behavior**: ...\r\nI was expecting that it would work just find using the simple installation of `pip install elastic-apm`\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux\r\n- Python version: 3.8.1\r\n- Framework and version [e.g. Django 2.1]: Aiohttp 3.6.2\r\n- APM Server version: 5.3.3\r\n- Agent version: doesn't matter but 7.5.0\r\n\r\n\r\n**Additional context**\r\n\r\n\r\n- `setup.py`:\r\n```\r\nfrom setuptools import setup, find_packages\r\n...\r\nREQUIRES = [\r\n...\r\n    'elastic-apm==5.3.3',\r\n...\r\n]\r\n...\r\nsetup(\r\n...\r\n    install_requires=REQUIRES,\r\n    python_requires='>=3.8.1',\r\n...\r\n)\r\n\r\n```\r\n- elasticapm library\r\n```\r\n/app # tail -2 /usr/local/lib/python3.8/site-packages/elasticapm/version.py \r\n__version__ = (5, 3, 3)\r\nVERSION = \".\".join(map(str, __version__))\r\n/app # ls -l /usr/local/lib/python3.8/site-packages/elasticapm/contrib/\r\ntotal 52\r\n-rw-r--r--    1 root     root          1591 Feb  1 07:54 __init__.py\r\ndrwxr-xr-x    2 root     root          4096 Feb  1 07:54 __pycache__\r\n-rw-r--r--    1 root     root          5982 Feb  1 07:54 async_worker.py\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 celery\r\ndrwxr-xr-x    6 root     root          4096 Feb  1 07:54 django\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 flask\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 opentracing\r\n-rw-r--r--    1 root     root          1788 Feb  1 07:54 paste.py\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 pylons\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 rq\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 twisted\r\ndrwxr-xr-x    3 root     root          4096 Feb  1 07:54 zerorpc\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/706", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/706/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/706/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/706", "id": 556268805, "node_id": "MDU6SXNzdWU1NTYyNjg4MDU=", "number": 706, "title": "Add instrumentation for pymemcache (memcache)", "user": {"login": "ciarancourtney", "id": 6096029, "node_id": "MDQ6VXNlcjYwOTYwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6096029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ciarancourtney", "html_url": "https://github.com/ciarancourtney", "followers_url": "https://api.github.com/users/ciarancourtney/followers", "following_url": "https://api.github.com/users/ciarancourtney/following{/other_user}", "gists_url": "https://api.github.com/users/ciarancourtney/gists{/gist_id}", "starred_url": "https://api.github.com/users/ciarancourtney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ciarancourtney/subscriptions", "organizations_url": "https://api.github.com/users/ciarancourtney/orgs", "repos_url": "https://api.github.com/users/ciarancourtney/repos", "events_url": "https://api.github.com/users/ciarancourtney/events{/privacy}", "received_events_url": "https://api.github.com/users/ciarancourtney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/6", "html_url": "https://github.com/elastic/apm-agent-python/milestone/6", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/6/labels", "id": 5337651, "node_id": "MDk6TWlsZXN0b25lNTMzNzY1MQ==", "number": 6, "title": "7.8", "description": null, "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2020-04-22T14:45:03Z", "updated_at": "2020-06-23T21:14:45Z", "due_on": null, "closed_at": "2020-06-23T21:14:45Z"}, "comments": 1, "created_at": "2020-01-28T15:03:29Z", "updated_at": "2020-04-29T19:20:44Z", "closed_at": "2020-04-29T19:20:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently released v3.0 https://github.com/pinterest/pymemcache\r\n\r\nSimilar to python-memcached in that its pure python, but with more features and, apparently, better perf.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/702", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/702/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/702/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/702", "id": 555541309, "node_id": "MDU6SXNzdWU1NTU1NDEzMDk=", "number": 702, "title": "Error while application is shutdown and long delay", "user": {"login": "amalpadmanabhan", "id": 52442009, "node_id": "MDQ6VXNlcjUyNDQyMDA5", "avatar_url": "https://avatars3.githubusercontent.com/u/52442009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amalpadmanabhan", "html_url": "https://github.com/amalpadmanabhan", "followers_url": "https://api.github.com/users/amalpadmanabhan/followers", "following_url": "https://api.github.com/users/amalpadmanabhan/following{/other_user}", "gists_url": "https://api.github.com/users/amalpadmanabhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/amalpadmanabhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amalpadmanabhan/subscriptions", "organizations_url": "https://api.github.com/users/amalpadmanabhan/orgs", "repos_url": "https://api.github.com/users/amalpadmanabhan/repos", "events_url": "https://api.github.com/users/amalpadmanabhan/events{/privacy}", "received_events_url": "https://api.github.com/users/amalpadmanabhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T12:26:17Z", "updated_at": "2020-02-18T10:46:20Z", "closed_at": "2020-02-18T10:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pip freeze version for elastic-apm\r\nelastic-apm==5.3.3\r\n\r\nUsing Flask Elastic APM to monitor an application that is loaded using UWSGI.\r\n\r\nWhile stopping the application I am getting the error,\r\n\r\nTraceback (most recent call last):\r\n  File \"*lib/python3.6/site-packages/elasticapm/utils/compat.py\", line 65, in uwsgi_atexit\r\n    func()\r\n  File \"*lib/python3.6/site-packages/elasticapm/base.py\", line 293, in close\r\n    self._transport.close()\r\n  File \"*lib/python3.6/site-packages/elasticapm/transport/base.py\", line 293, in close\r\n    super(AsyncTransport, self).close()\r\n  File \"*lib/python3.6/site-packages/elasticapm/transport/base.py\", line 241, in close\r\n    raise ValueError(\"close timed out\")\r\nValueError: close timed out\r\nworker 5 buried after 11 seconds\r\ngoodbye to uWSGI.\r\n\r\nThe only code that I have added for instrumentation of my app is,\r\n\r\nimport elasticapm\r\nfrom elasticapm.contrib.flask import ElasticAPM\r\nelasticapm.instrument()\r\napplication.config['ELASTIC_APM'] = {\r\n  'SERVICE_NAME': servicename,\r\n\r\n  'SECRET_TOKEN': '',\r\n\r\n  'SERVER_URL': 'url:8200',\r\n}\r\n\r\n\r\nNow when I shutdown it takes a while.\r\n\r\nI also tried both lazy-app and default preforking mechanism on USWGI. \r\n\r\nuwsgi.ini\r\n[uwsgi]\r\nmodule = wsgi\r\n\r\nmaster = true\r\nprocesses = 5\r\nthreads = 4\r\n\r\nsocket = locatest.sock\r\nchmod-socket = 660\r\nvacuum = true\r\nenable-threads = true\r\nlazy-apps = true\r\nsingle-interpreter = true\r\nlogto = uwsgi_log/%n.log\r\n\r\ndie-on-term = true", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/695", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/695/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/695/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/695", "id": 552615806, "node_id": "MDU6SXNzdWU1NTI2MTU4MDY=", "number": 695, "title": "database trace show twice", "user": {"login": "Ackerr", "id": 35414361, "node_id": "MDQ6VXNlcjM1NDE0MzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/35414361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ackerr", "html_url": "https://github.com/Ackerr", "followers_url": "https://api.github.com/users/Ackerr/followers", "following_url": "https://api.github.com/users/Ackerr/following{/other_user}", "gists_url": "https://api.github.com/users/Ackerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ackerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ackerr/subscriptions", "organizations_url": "https://api.github.com/users/Ackerr/orgs", "repos_url": "https://api.github.com/users/Ackerr/repos", "events_url": "https://api.github.com/users/Ackerr/events{/privacy}", "received_events_url": "https://api.github.com/users/Ackerr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-01-21T04:21:21Z", "updated_at": "2020-02-06T10:05:27Z", "closed_at": "2020-02-06T10:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "maybe this is not a bug\r\nkibana show every database trace will show twice\r\n![image](https://user-images.githubusercontent.com/35414361/72774905-5a16a700-3c47-11ea-878c-3b05a671ec4f.png)\r\n\r\nbut in 4.2.2 version,  it show this \r\n![image](https://user-images.githubusercontent.com/35414361/72774972-964a0780-3c47-11ea-9d0d-19269d9259f2.png)\r\n\r\ni think its related to span? in 4.2.2 agent won't upload span log,   please tell me how to resovle it \ud83d\ude22\r\n(forgive my poor English)\r\n\r\n**Environment (please complete the following information)**\r\n- OS: [e.g. Linux] linux\r\n- Python version: 3.7.\r\n- Framework and version [e.g. Django 2.1]: Django 3.0\r\n- APM Server version:  7.4.2\r\n- Agent version: 5.3.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/691", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/691/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/691/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/691", "id": 550122101, "node_id": "MDU6SXNzdWU1NTAxMjIxMDE=", "number": 691, "title": "Django Project integration", "user": {"login": "vclaudic", "id": 5931249, "node_id": "MDQ6VXNlcjU5MzEyNDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5931249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vclaudic", "html_url": "https://github.com/vclaudic", "followers_url": "https://api.github.com/users/vclaudic/followers", "following_url": "https://api.github.com/users/vclaudic/following{/other_user}", "gists_url": "https://api.github.com/users/vclaudic/gists{/gist_id}", "starred_url": "https://api.github.com/users/vclaudic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vclaudic/subscriptions", "organizations_url": "https://api.github.com/users/vclaudic/orgs", "repos_url": "https://api.github.com/users/vclaudic/repos", "events_url": "https://api.github.com/users/vclaudic/events{/privacy}", "received_events_url": "https://api.github.com/users/vclaudic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-15T11:13:39Z", "updated_at": "2020-01-16T14:11:04Z", "closed_at": "2020-01-16T14:11:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all, please receive my best wishes for these new Year and decade for you and your relatives ! :-)\r\n\r\nYet, let's talk about my mistake. I've started, few weeks ago, a new Django project based on Django 2.2.9, Python 3.7.6, PostgreSQL 12.1, Apache 2.4.41, mod_wsgi 4.7 and the Django modules elasticsearch 7.1, elasticsearch-dsl 7.1 and elastic_apm 5.3.3.\r\n\r\n\r\nWith \"'elasticapm.contrib.django'\" declared in installed-apps, as long as DEBUG is set to True, I've no mistake, i.e. every thing works fine, but as soon as I'm setting it to False, both Apache or the runserver are sadly crashing. Here is a short extract from Apache error_log file:\r\n\u2014\u2014\u2014\r\n\u2026\r\n[Mon Jan 13 11:56:39.486822 2020] [core:notice] [pid 21292:tid 139720174155584] AH00052: child pid 21298 exit signal Aborted (6)\r\n[Mon Jan 13 11:56:39.662442 2020] [mpm_event:notice] [pid 22765:tid 139947965765440] AH00489: Apache/2.4.41 (Unix) OpenSSL/1.1.1d mod_wsgi/4.7.0 Python/3.7 configured -- resuming normal operations\r\n[Mon Jan 13 11:56:39.662634 2020] [core:notice] [pid 22765:tid 139947965765440] AH00094: Command line: '/ecq/run/apache/bin/httpd'\r\n[Tue Jan 14 11:43:55.293070 2020] [mpm_event:notice] [pid 22765:tid 139947965765440] AH00492: caught SIGWINCH, shutting down gracefully\r\n*** Error in `/ecq/run/apache/bin/httpd': double free or corruption (out): 0x00007f47d400c460 ***\r\n======= Backtrace: =========\r\n/lib64/libc.so.6(+0x81679)[0x7f482b62f679]\r\n/ecq/run/lib/libpython3.7m.so.1.0(PyThreadState_DeleteCurrent+0x1e)[0x7f48257f3a0e]\r\n/ecq/run/lib/libpython3.7m.so.1.0(+0x24a472)[0x7f482580c472]\r\n/ecq/run/lib/libpython3.7m.so.1.0(+0x236224)[0x7f48257f8224]\r\n/lib64/libpthread.so.0(+0x7e65)[0x7f482bb87e65]\r\n/lib64/libc.so.6(clone+0x6d)[0x7f482b6ac88d]\r\n\u2026\r\n\u2014\u2014\u2014\r\n\r\nThe mistake was the same with the 5.3.2 version of APM and here are some additional trace:\r\n\u2014\u2014\u2014\r\n\u2026\r\n[Tue Jan 14 15:01:39.460247 2020] [core:notice] [pid 20504:tid 140590202570560] AH00052: child pid 24941 exit signal Aborted (6)\r\n[Tue Jan 14 15:01:39.460391 2020] [core:notice] [pid 20504:tid 140590202570560] AH00052: child pid 20866 exit signal Aborted (6)\r\n[Tue Jan 14 15:01:39.628508 2020] [mpm_event:notice] [pid 27255:tid 140545858905920] AH00489: Apache/2.4.41 (Unix) OpenSSL/1.1.1d mod_wsgi/4.7.0 Python/3.7 configured -- resuming normal operations\r\n[Tue Jan 14 15:01:39.628688 2020] [core:notice] [pid 27255:tid 140545858905920] AH00094: Command line: '/ecq/run/apache/bin/httpd'\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007fd361fea740 (most recent call first):\r\n[Tue Jan 14 15:01:57.663265 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 27259 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007fd361fea740 (most recent call first):\r\n[Tue Jan 14 15:02:00.675209 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 27261 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nCurrent thread 0x00007fd34dffb700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 58 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 68 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 68 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 68 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  ...\r\n\r\nThread 0x00007fd355ca4700 (most recent call first):\r\n\r\nThread 0x00007fd3477ee700 (most recent call first):\r\n\r\nThread 0x00007fd347fef700 (most recent call first):\r\n\r\nThread 0x00007fd349ff3700 (most recent call first):\r\n\r\nThread 0x00007fd30a09f700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 300 in wait\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 552 in wait\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/threading.py\", line 74 in run\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007fd30a8a0700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 300 in wait\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 552 in wait\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/threading.py\", line 74 in run\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007fd30b0a1700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 300 in wait\r\n  File \"/ecq/run/lib/python3.7/queue.py\", line 179 in get\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/transport/base.py\", line 126 in _process_queue\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 870 in run\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007fd34a7f4700 (most recent call first):\r\n[Tue Jan 14 15:04:04.937796 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 27378 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nCurrent thread 0x00007fd354ca2700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 58 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 68 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 68 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/__init__.py\", line 68 in varmap\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 177 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in <dictcomp>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/stacks.py\", line 299 in get_frame_info\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/utils.py\", line 84 in iterate_with_template_sources\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/contrib/django/client.py\", line 207 in _get_stack_info_for_trace\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 170 in <lambda>\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 432 in end\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 275 in end_span\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/traces.py\", line 599 in __exit__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/psycopg2.py\", line 87 in call\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/instrumentation/packages/dbapi2.py\", line 257 in call_if_sampling\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/postgresql/base.py\", line 178 in get_new_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 195 in connect\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 217 in ensure_connection\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 233 in _cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/backends/base/base.py\", line 256 in cursor\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/sql/compiler.py\", line 1131 in execute_sql\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 55 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 1242 in _fetch_all\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 274 in __iter__\r\n  File \"/ecq/run/lib/python3.7/site-packages/Django-2.2.9-py3.7.egg/django/db/models/query.py\", line 250 in __repr__\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 151 in transform\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/encoding.py\", line 205 in shorten\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/base.py\", line 175 in <lambda>\r\n  ...\r\n\r\nThread 0x00007fd3574a7700 (most recent call first):\r\n\r\nThread 0x00007fd3564a5700 (most recent call first):\r\n\r\nThread 0x00007fd33a09f700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 300 in wait\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 552 in wait\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/threading.py\", line 74 in run\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007fd33a8a0700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 300 in wait\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 552 in wait\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/utils/threading.py\", line 74 in run\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007fd33b0a1700 (most recent call first):\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 300 in wait\r\n  File \"/ecq/run/lib/python3.7/queue.py\", line 179 in get\r\n  File \"/ecq/run/lib/python3.7/site-packages/elastic_apm-5.3.2-py3.7-linux-x86_64.egg/elasticapm/transport/base.py\", line 126 in _process_queue\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 870 in run\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 926 in _bootstrap_inner\r\n  File \"/ecq/run/lib/python3.7/threading.py\", line 890 in _bootstrap\r\n\r\nThread 0x00007fd356ca6700 (most recent call first):\r\n[Tue Jan 14 15:10:06.693626 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 27260 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007fd361fea740 (most recent call first):\r\n[Tue Jan 14 15:13:34.142416 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 28067 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007fd361fea740 (most recent call first):\r\n[Tue Jan 14 15:13:37.147387 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 28960 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007fd361fea740 (most recent call first):\r\n[Tue Jan 14 15:35:19.435248 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 29382 exit signal Aborted (6)\r\nFatal Python error: Cannot recover from stack overflow.\r\n\r\nThread 0x00007fd361fea740 (most recent call first):\r\n[Tue Jan 14 15:35:22.438910 2020] [core:notice] [pid 27255:tid 140545858905920] AH00052: child pid 27463 exit signal Aborted (6)\r\n\u2026\r\n\u2014\u2014\u2014\r\n\r\nRegarding the mod_wsgi apache module, here is how it's called in Apache configuration:\r\n\u2014\u2014\u2014\r\n\u2026\r\nWSGIDaemonProcess calliope.ecqualis.lan processes=2 threads=15 display-name=%{GROUP}\r\n\u2026\r\n\u2014\u2014\u2014\r\n\r\nI've the same mistake when increasing the processes to 8 and threads to 25.\r\n\r\nHere is the way Apache was built:\r\n\u2014\u2014\u2014\r\n\u2026\r\n# /ecq/run/apache/bin/httpd -V\r\nServer version: Apache/2.4.41 (Unix)\r\nServer built:   Nov 21 2019 08:11:04\r\nServer's Module Magic Number: 20120211:88\r\nServer loaded:  APR 1.7.0, APR-UTIL 1.6.1\r\nCompiled using: APR 1.7.0, APR-UTIL 1.6.1\r\nArchitecture:   64-bit\r\nServer MPM:     event\r\n  threaded:     yes (fixed thread count)\r\n    forked:     yes (variable process count)\r\nServer compiled with....\r\n -D APR_HAS_SENDFILE\r\n -D APR_HAS_MMAP\r\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\r\n -D APR_USE_PROC_PTHREAD_SERIALIZE\r\n -D APR_USE_PTHREAD_SERIALIZE\r\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\r\n -D APR_HAS_OTHER_CHILD\r\n -D AP_HAVE_RELIABLE_PIPED_LOGS\r\n -D DYNAMIC_MODULE_LIMIT=256\r\n -D HTTPD_ROOT=\"/ecq/run/apache\"\r\n -D SUEXEC_BIN=\"/ecq/run/apache/bin/suexec\"\r\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\r\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\r\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\r\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\r\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\r\n\r\n\u2026\r\n\u2014\u2014\u2014\r\n\r\nAs I've deployed an internal ELK instance (7.5.1 versions) for that project, I'll be pleased to also use it with APM.\r\n\r\nSo for any additional information allowing you to provide some help, please just drop me a line.\r\n\r\nI thank you in advance for the time you'll spent on this and wish you a good day.\r\n\r\nAll the best,\r\n\r\nVincent", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/688", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/688/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/688/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/688", "id": 548998508, "node_id": "MDU6SXNzdWU1NDg5OTg1MDg=", "number": 688, "title": "HOSTNAME value ignored and socket.gethostname() sent", "user": {"login": "esseti", "id": 1928354, "node_id": "MDQ6VXNlcjE5MjgzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1928354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esseti", "html_url": "https://github.com/esseti", "followers_url": "https://api.github.com/users/esseti/followers", "following_url": "https://api.github.com/users/esseti/following{/other_user}", "gists_url": "https://api.github.com/users/esseti/gists{/gist_id}", "starred_url": "https://api.github.com/users/esseti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esseti/subscriptions", "organizations_url": "https://api.github.com/users/esseti/orgs", "repos_url": "https://api.github.com/users/esseti/repos", "events_url": "https://api.github.com/users/esseti/events{/privacy}", "received_events_url": "https://api.github.com/users/esseti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T15:19:02Z", "updated_at": "2020-01-14T08:23:28Z", "closed_at": "2020-01-14T08:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've trouble in configuring the HOSTNAME, If I set it in the django settings or in the enviorment nothing changes. the `socket.gethostname()` is always the value sent.\r\n\r\n**To Reproduce**\r\n- setup project with APM\r\n- add \r\n```\r\nELASTIC_APM = {\r\n  ..\r\n    'HOSTNAME': 'myhostname'\r\n...\r\n}\r\n```\r\n\r\n\r\n**Expected behavior**: \r\nTo see `myhostname` in the host list in kibana\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux/Mac\r\n- Python version: 3.7\r\n- Framework and version Django 2.2\r\n- APM Server version: 7.5\r\n- Agent version: elastic-apm==5.3.2\r\n\r\n\r\n\r\n**Additional context**\r\n\r\nDebugging the code, in the `config` the correct value is there, however the \r\nsocket.gethostname() value is sent\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/686", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/686/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/686/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/686", "id": 547404131, "node_id": "MDU6SXNzdWU1NDc0MDQxMzE=", "number": 686, "title": "Add support for FastAPI", "user": {"login": "kicmultimedia", "id": 16596042, "node_id": "MDQ6VXNlcjE2NTk2MDQy", "avatar_url": "https://avatars2.githubusercontent.com/u/16596042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kicmultimedia", "html_url": "https://github.com/kicmultimedia", "followers_url": "https://api.github.com/users/kicmultimedia/followers", "following_url": "https://api.github.com/users/kicmultimedia/following{/other_user}", "gists_url": "https://api.github.com/users/kicmultimedia/gists{/gist_id}", "starred_url": "https://api.github.com/users/kicmultimedia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kicmultimedia/subscriptions", "organizations_url": "https://api.github.com/users/kicmultimedia/orgs", "repos_url": "https://api.github.com/users/kicmultimedia/repos", "events_url": "https://api.github.com/users/kicmultimedia/events{/privacy}", "received_events_url": "https://api.github.com/users/kicmultimedia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T10:56:24Z", "updated_at": "2020-01-23T19:10:29Z", "closed_at": "2020-01-23T19:10:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, it seems FastAPI is unsupported. Would be great to add the Python Framework to the list of those supported.\r\n\r\nAm I correct in assuming we could write our own middleware for this Framework using this library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/683", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/683/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/683/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/683", "id": 545949418, "node_id": "MDU6SXNzdWU1NDU5NDk0MTg=", "number": 683, "title": "Opentracing contrib: `DroppedSpan has no attribute transaction`", "user": {"login": "JeckyTian", "id": 41301133, "node_id": "MDQ6VXNlcjQxMzAxMTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/41301133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeckyTian", "html_url": "https://github.com/JeckyTian", "followers_url": "https://api.github.com/users/JeckyTian/followers", "following_url": "https://api.github.com/users/JeckyTian/following{/other_user}", "gists_url": "https://api.github.com/users/JeckyTian/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeckyTian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeckyTian/subscriptions", "organizations_url": "https://api.github.com/users/JeckyTian/orgs", "repos_url": "https://api.github.com/users/JeckyTian/repos", "events_url": "https://api.github.com/users/JeckyTian/events{/privacy}", "received_events_url": "https://api.github.com/users/JeckyTian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-06T21:29:27Z", "updated_at": "2020-01-14T09:47:49Z", "closed_at": "2020-01-13T20:59:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\nWhen using Elastic APM with Opentracing, the program crashes on `AttributeError: DroppedSpan object has no attribute transaction` exception if `span.finish()` is called. \r\n It turns out to be this line:\r\nhttps://github.com/elastic/apm-agent-python/blob/74cd1fa56f15a3149b367bd65ea4721a6fd95615/elasticapm/contrib/opentracing/span.py#L129\r\nIt will access `transaction` attribute which does NOT exist for `DroppedSpan`.\r\n\r\n**Expected behavior**: ...\r\nIt should be expected to behave normally even if it's `DroppedSpan`.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: [e.g. Linux] Linux\r\n- Python version: 2.7\r\n- Framework and version [e.g. Django 2.1]: N/A\r\n- APM Server version: 7.4.0\r\n- Agent version: 5.3.2\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/671", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/671/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/671/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/671", "id": 537531495, "node_id": "MDU6SXNzdWU1Mzc1MzE0OTU=", "number": 671, "title": "Implement API Key authentication", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1506150657, "node_id": "MDU6TGFiZWwxNTA2MTUwNjU3", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/elastic-7.6", "name": "elastic-7.6", "color": "44c8fc", "default": false, "description": ""}, {"id": 646103115, "node_id": "MDU6TGFiZWw2NDYxMDMxMTU=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/4", "html_url": "https://github.com/elastic/apm-agent-python/milestone/4", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/4/labels", "id": 4853011, "node_id": "MDk6TWlsZXN0b25lNDg1MzAxMQ==", "number": 4, "title": "7.6", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2019-11-17T10:05:48Z", "updated_at": "2020-06-23T21:14:47Z", "due_on": null, "closed_at": "2020-06-23T21:14:47Z"}, "comments": 3, "created_at": "2019-12-13T12:45:42Z", "updated_at": "2020-02-26T15:40:01Z", "closed_at": "2020-02-26T15:39:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/elastic/apm/issues/183 for a specification.\r\n\r\nIt might make sense to use this as a test case for [pytest-bdd](https://github.com/pytest-dev/pytest-bdd)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/662", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/662/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/662/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/662", "id": 535588496, "node_id": "MDU6SXNzdWU1MzU1ODg0OTY=", "number": 662, "title": "APM adding query params causing 400 bad request error during ES query", "user": {"login": "Thematrixme", "id": 6068279, "node_id": "MDQ6VXNlcjYwNjgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6068279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thematrixme", "html_url": "https://github.com/Thematrixme", "followers_url": "https://api.github.com/users/Thematrixme/followers", "following_url": "https://api.github.com/users/Thematrixme/following{/other_user}", "gists_url": "https://api.github.com/users/Thematrixme/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thematrixme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thematrixme/subscriptions", "organizations_url": "https://api.github.com/users/Thematrixme/orgs", "repos_url": "https://api.github.com/users/Thematrixme/repos", "events_url": "https://api.github.com/users/Thematrixme/events{/privacy}", "received_events_url": "https://api.github.com/users/Thematrixme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-10T09:05:16Z", "updated_at": "2020-02-03T14:38:52Z", "closed_at": "2020-02-03T14:38:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Bug description**\r\n\r\nI have an API that queries ElasticSearch and that I'm trying to monitor thanks to APM. Somehow I have the exact same problem described in this (quite old) discussion:\r\nhttps://discuss.elastic.co/t/apm-adding-query-params-causing-400-bad-request-error-during-es-query/186749\r\n```\r\nelasticsearch.exceptions.RequestError: RequestError(400, 'illegal_argument_exception', 'request [/my_index/_search] contains unrecognized parameters: [__elastic_apm_api_method_name], [__elastic_apm_body_ref]')\r\n```\r\nThe workaround described in this discussion (putting `SKIP_INSTRUMENT_ELASTICSEARCH=true` in my environment variables) does work, but I would still like to instrument my ElasticSearch calls.\r\n\r\n**Context**\r\nI have the latest version of everything:\r\n* a docker container with Elastic 7.4.2\r\n* my Python code runs APM 5.3.2. \r\n\r\nTo be noted that I use the Async Python Client for Elastic, whose latest version is only 6.2.0, maybe this could lead to some inconsistencies. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/648", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/648/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/648/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/648", "id": 527681659, "node_id": "MDU6SXNzdWU1Mjc2ODE2NTk=", "number": 648, "title": "Support for ipv6 address format", "user": {"login": "mariodev", "id": 546130, "node_id": "MDQ6VXNlcjU0NjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/546130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariodev", "html_url": "https://github.com/mariodev", "followers_url": "https://api.github.com/users/mariodev/followers", "following_url": "https://api.github.com/users/mariodev/following{/other_user}", "gists_url": "https://api.github.com/users/mariodev/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariodev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariodev/subscriptions", "organizations_url": "https://api.github.com/users/mariodev/orgs", "repos_url": "https://api.github.com/users/mariodev/repos", "events_url": "https://api.github.com/users/mariodev/events{/privacy}", "received_events_url": "https://api.github.com/users/mariodev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-24T11:02:15Z", "updated_at": "2019-11-25T07:53:53Z", "closed_at": "2019-11-25T07:53:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**: \r\n\r\nException is thrown when python agent is trying to parse url, that contains ipv6 address.\r\n```\r\nValueError: too many values to unpack (expected 2)\r\n  File \"elasticapm/contrib/django/middleware/__init__.py\", line 162, in process_response\r\n    \"request\",\r\n  File \"elasticapm/traces.py\", line 333, in set_context\r\n    data = data()\r\n  File \"elasticapm/contrib/django/middleware/__init__.py\", line 160, in <lambda>\r\n    request, capture_body=self.client.config.capture_body in (\"all\", \"transactions\")\r\n  File \"elasticapm/contrib/django/client.py\", line 137, in get_data_from_request\r\n    result[\"url\"] = get_url_dict(url)\r\n  File \"elasticapm/utils/__init__.py\", line 84, in get_url_dict\r\n    hostname, port = netloc.split(\":\")\r\n```\r\n\r\n**To Reproduce**\r\n\r\nNot sure how can I manually replicate it, but below is the request details that is send to our webapp.\r\n\r\n```\r\ncurl \\\r\n --compressed \\\r\n -H \"Accept: */*\" \\\r\n -H \"Accept-Encoding: gzip, deflate\" \\\r\n -H \"Connection: close\" \\\r\n -H \"Host: [::ffff:a9fe:a9fe]:80\" \\\r\n -H \"User-Agent: AWS Security Scanner\" \\\r\n -H \"X-Forwarded-For: 44.224.22.196, 10.255.0.2\" \\\r\n -H \"X-Forwarded-Port: 443\" \\\r\n -H \"X-Forwarded-Proto: https\" \\\r\n -H \"X-Real-Ip: 10.255.0.2\" \\\r\n \"http://[::ffff:a9fe:a9fe]/latest/dynamic/instance-identity/document\"\r\n``` \r\n\r\n**Expected behavior**:\r\n\r\nThe url containing hostname in ipv6 address, should be parsed correctly and python agent should  successfully process request.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux\r\n- Python version: 3.5\r\n- Framework and version [e.g. Django 2.1]: 2.1\r\n- APM Server version: 6.7.1\r\n- Agent version: 5.3.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/646", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/646/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/646/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/646", "id": 527137837, "node_id": "MDU6SXNzdWU1MjcxMzc4Mzc=", "number": 646, "title": "Too many requests to agent config endpoint", "user": {"login": "jalvz", "id": 3432712, "node_id": "MDQ6VXNlcjM0MzI3MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3432712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jalvz", "html_url": "https://github.com/jalvz", "followers_url": "https://api.github.com/users/jalvz/followers", "following_url": "https://api.github.com/users/jalvz/following{/other_user}", "gists_url": "https://api.github.com/users/jalvz/gists{/gist_id}", "starred_url": "https://api.github.com/users/jalvz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jalvz/subscriptions", "organizations_url": "https://api.github.com/users/jalvz/orgs", "repos_url": "https://api.github.com/users/jalvz/repos", "events_url": "https://api.github.com/users/jalvz/events{/privacy}", "received_events_url": "https://api.github.com/users/jalvz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-22T11:17:39Z", "updated_at": "2019-11-22T11:32:40Z", "closed_at": "2019-11-22T11:28:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that the Python agent is trying to respect the `max-age` attribute, but it sends several requests about the same time. For some reason, with Flask seems to be worse than with Django.\r\n\r\nTo reproduce with `apm-integration-testing`: \r\n\r\n1. - Apply\r\n\r\n```diff --git a/Makefile b/Makefile\r\nindex 1aee99b..c437004 100644\r\n--- a/Makefile\r\n+++ b/Makefile\r\n@@ -49,7 +49,7 @@ start-env: venv\r\n        docker-compose up -d\r\n \r\n stop-env: venv\r\n-       docker-compose down -v --remove-orphans || true\r\n+       # docker-compose down -v --remove-orphans || true\r\n \r\n destroy-env: venv\r\n        [ -n \"$(docker ps -aqf network=apm-integration-testing)\" ] && (docker ps -aqf network=apm-integration-testing | xargs -t docker rm -f && docker network rm apm-integration-testing) || true\r\ndiff --git a/scripts/modules/elastic_stack.py b/scripts/modules/elastic_stack.py\r\nindex 3d39be5..0be4e6e 100644\r\n--- a/scripts/modules/elastic_stack.py\r\n+++ b/scripts/modules/elastic_stack.py\r\n@@ -68,7 +68,7 @@ class ApmServer(StackService, Service):\r\n         elif self.at_least_version(\"7.3\"):\r\n             self.apm_server_command_args.extend([\r\n                 (\"apm-server.kibana.enabled\", \"true\"),\r\n-                (\"apm-server.agent.config.cache.expiration\", \"1s\"),\r\n+                (\"apm-server.agent.config.cache.expiration\", \"10s\"),\r\n                 (\"apm-server.kibana.host\", self.DEFAULT_KIBANA_HOST)])\r\n             if self.options.get(\"xpack_secure\"):\r\n                 for cfg in (\"username\", \"password\"):\r\n```\r\n\r\n2. - Run `source venv/bin/activate && ELASTIC_STACK_VERSION=master .ci/scripts/python.sh`\r\n\r\n3. - Wait for services to start and inspect server logs. `docker-compose logs apm-server | grep /config/v1/agents | awk -F ',' '{print $2, $11, $10}'` spits out something like:\r\n\r\n```\r\n\"timestamp\":\"2019-11-22T11:13:35.682Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.9\"\r\n\"timestamp\":\"2019-11-22T11:13:36.514Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.9\"\r\n\"timestamp\":\"2019-11-22T11:13:37.678Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:37.718Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:37.808Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:37.871Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:45.674Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.9\"\r\n\"timestamp\":\"2019-11-22T11:13:46.520Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.9\"\r\n\"timestamp\":\"2019-11-22T11:13:47.669Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:47.728Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:47.808Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n\"timestamp\":\"2019-11-22T11:13:47.871Z\" \"user-agent\":\"elasticapm-python/5.3.1\" \"remote_address\":\"172.25.0.6\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/637", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/637/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/637/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/637", "id": 523024767, "node_id": "MDU6SXNzdWU1MjMwMjQ3Njc=", "number": 637, "title": "Python RQ support", "user": {"login": "stlk", "id": 450975, "node_id": "MDQ6VXNlcjQ1MDk3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/450975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stlk", "html_url": "https://github.com/stlk", "followers_url": "https://api.github.com/users/stlk/followers", "following_url": "https://api.github.com/users/stlk/following{/other_user}", "gists_url": "https://api.github.com/users/stlk/gists{/gist_id}", "starred_url": "https://api.github.com/users/stlk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stlk/subscriptions", "organizations_url": "https://api.github.com/users/stlk/orgs", "repos_url": "https://api.github.com/users/stlk/repos", "events_url": "https://api.github.com/users/stlk/events{/privacy}", "received_events_url": "https://api.github.com/users/stlk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-11-14T18:17:17Z", "updated_at": "2020-04-16T00:04:16Z", "closed_at": "2019-11-21T22:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having hard time setting up APM with [Python RQ](http://python-rq.org/). I tried following old solution [Python agent only recording some background tasks](https://discuss.elastic.co/t/python-agent-only-recording-some-background-tasks/149707), which led me to creating custom rq.job. But this solution no longer works. I tried setting `API_REQUEST_SIZE` to `1b` instead of `MAX_QUEUE_SIZE` but that didn't make a change.\r\n\r\nI tried to debug where the things go wrong but the code is just advanced for me. I created [minimal Django app](https://github.com/stlk/elastic-rq-demo) with Elastic APM working on the view and my attempt to implement `TracingJob`.\r\n\r\nReadme describes how to setup the app and how to replicate my issue. It would be great if someone with understanding of the queue and the transport layer could take a look at it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/632", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/632/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/632/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/632", "id": 522040066, "node_id": "MDU6SXNzdWU1MjIwNDAwNjY=", "number": 632, "title": "Truncate large dictionaries is local vars", "user": {"login": "paulinus", "id": 841954, "node_id": "MDQ6VXNlcjg0MTk1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/841954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulinus", "html_url": "https://github.com/paulinus", "followers_url": "https://api.github.com/users/paulinus/followers", "following_url": "https://api.github.com/users/paulinus/following{/other_user}", "gists_url": "https://api.github.com/users/paulinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulinus/subscriptions", "organizations_url": "https://api.github.com/users/paulinus/orgs", "repos_url": "https://api.github.com/users/paulinus/repos", "events_url": "https://api.github.com/users/paulinus/events{/privacy}", "received_events_url": "https://api.github.com/users/paulinus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-13T08:34:13Z", "updated_at": "2019-11-18T18:00:27Z", "closed_at": "2019-11-18T18:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Summary**\r\nIf you have large dicts in local vars, the messages to be sent to the server can be too large for the server to accept.\r\n\r\nThere should be an option to truncate dicts to a maximum length.\r\n\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhen capturing exceptions using `client.capture_exception()` the stack trace, including local variables, is sent to the server. The size of the message sent to the server depends on the size of the local variables. When the message is larger than a configurable limit, the server rejects it with a 400 error. This can lead to errors being silent for weeks (we learned this the hard way).\r\n\r\nWhen a local variable is a list or a string, it is truncated https://github.com/elastic/apm-agent-python/blob/6113dc2c7683ca64c4677991f7dec91d2fb1caa3/elasticapm/utils/encoding.py#L185-L189\r\nThis prevents large lists from being sent and reduces the message size.\r\n\r\nWhen a local var is a dict, it is not truncated. There is a `TODO` comment about it in the `shorten` function above. But that function never gets a dict as input. Instead, dicts are recursively scanned before even calling the `shorten` function.\r\n\r\nThe recursive scanning seems to happen in the `varmap` function here\r\nhttps://github.com/elastic/apm-agent-python/blob/6113dc2c7683ca64c4677991f7dec91d2fb1caa3/elasticapm/utils/__init__.py#L63-L64\r\n\r\nThis leads to huge messages being sent to server when there's an exception in a function with huge dicts.\r\n\r\n\r\n**Describe the solution you'd like**\r\nIdeally, for our use case at least, dicts would be shortened as it happens with lists or strings.\r\n\r\nWe have achieved this by monkey patching the var map function like this\r\n```python\r\nimport elasticapm.utils\r\n\r\n\r\n# Monkey patch APM to only report the 20 first items of dicts\r\ndef first_dict_elements(var, max_length):\r\n    stop = max_length if len(var) <= max_length else max_length - 1\r\n    ret = {}\r\n    length = 0\r\n    for k, v in elasticapm.utils.compat.iteritems(var):\r\n        ret[k] = v\r\n        length += 1\r\n        if length >= stop:\r\n            if len(var) > length:\r\n                ret['...'] = \"(%d more elements)\" % (len(var) - length,)\r\n            break\r\n    return ret\r\n\r\n\r\ndef varmap(func, var, context=None, name=None):\r\n    \"\"\"\r\n    Executes ``func(key_name, value)`` on all values,\r\n    recursively discovering dict and list scoped\r\n    values.\r\n    \"\"\"\r\n    if context is None:\r\n        context = set()\r\n    objid = id(var)\r\n    if objid in context:\r\n        return func(name, \"<...>\")\r\n    context.add(objid)\r\n    if isinstance(var, dict):\r\n        cropped = first_dict_elements(var, 20)\r\n        ret = dict((k, varmap(func, v, context, k)) for k, v in elasticapm.utils.compat.iteritems(cropped))\r\n    elif isinstance(var, (list, tuple)):\r\n        ret = func(name, [varmap(func, f, context, name) for f in var])\r\n    else:\r\n        ret = func(name, var)\r\n    context.remove(objid)\r\n    return ret\r\n\r\n\r\nelasticapm.utils.varmap = varmap\r\n```\r\n\r\nThis truncates all dicts to 20 elements and adds a last element with the number of skipped elements.\r\nNote that there is some ugly length counting needed because the `varmap` function is called twice for each dict so we sometimes process dicts that have already been truncated and getting the number of skipped elements becomes tricky.\r\n\r\nWould a solution like this be implementable by the library?\r\n\r\n\r\n**Describe alternatives you've considered**\r\nThere might be config options available to achieve this that we did not see. Or maybe is possible to provide some pre- or post-processor of the stack trace to achieve the same. We did not investigate that route.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/629", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/629/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/629/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/629", "id": 521460971, "node_id": "MDU6SXNzdWU1MjE0NjA5NzE=", "number": 629, "title": "Flask integration doesn't send transaction for unhandled errors", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 2, "created_at": "2019-11-12T10:26:37Z", "updated_at": "2019-11-17T10:00:39Z", "closed_at": "2019-11-14T20:17:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**: When an unhandled error occurs, the transaction is not ended correctly, and no transaction data is captured\r\n\r\n**To Reproduce**\r\n\r\n1. Access a flask endpoint that triggers an error\r\n2. Error is captured, transaction is not\r\n\r\n**Expected behavior**: Both error and transaction events should be captured\r\n\r\nThis is due to the fact that we listen to the `flask.signals.request_finished` signal, which is not sent when an error occurs. So far, I haven't found a better candidate\r\n\r\n * `request_teardown` is sent even if an error occurs, but it isn't provided the `response` object, which we need\r\n * similarly, `got_request_exception` also doesn't have the `response` object\r\n * functions decorated with `after_request` are also not called if an unhandled exception is triggered\r\n\r\nWe can move some of the work we do currently do in the `request_finished` handler to the `request_started` handler. But for setting the transaction result (based on the HTTP status code), we *need* the response object. I currently don't see a way to do this without taking out the big monkeypatching guns :( \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/628", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/628/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/628/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/628", "id": 521064973, "node_id": "MDU6SXNzdWU1MjEwNjQ5NzM=", "number": 628, "title": "Support tracecontext W3C header", "user": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T16:36:02Z", "updated_at": "2020-01-06T17:14:55Z", "closed_at": "2019-12-06T10:10:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See elastic/apm#71\r\n\r\n- [x] implement `tracecontext`\r\n- [x] forward `tracestate` header", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/624", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/624/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/624/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/624", "id": 516987754, "node_id": "MDU6SXNzdWU1MTY5ODc3NTQ=", "number": 624, "title": "APM agent not sending event requests to the APM server with gunicorn wsgi.", "user": {"login": "umarriqbal", "id": 15857279, "node_id": "MDQ6VXNlcjE1ODU3Mjc5", "avatar_url": "https://avatars3.githubusercontent.com/u/15857279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umarriqbal", "html_url": "https://github.com/umarriqbal", "followers_url": "https://api.github.com/users/umarriqbal/followers", "following_url": "https://api.github.com/users/umarriqbal/following{/other_user}", "gists_url": "https://api.github.com/users/umarriqbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/umarriqbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umarriqbal/subscriptions", "organizations_url": "https://api.github.com/users/umarriqbal/orgs", "repos_url": "https://api.github.com/users/umarriqbal/repos", "events_url": "https://api.github.com/users/umarriqbal/events{/privacy}", "received_events_url": "https://api.github.com/users/umarriqbal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-11-04T07:13:34Z", "updated_at": "2020-02-18T10:47:59Z", "closed_at": "2020-02-18T10:47:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running a flask application and everything works fine if I'm running the application in dev environment i.e. directly from command line or my IDE aka Pycharm.\r\n\r\nBut when I run the same app on production via gunicorn, it only sends `agents` requests and no `events` requests so in APM in kibana, no service shows up.\r\n\r\n**Reproduction steps:**\r\n1. Create a basic flask app and call `client.begin_transaction` and `client.end_transaction` before and after each request so as to log time of each request.\r\n2. Run the app via `gunicorn`.\r\n3. Make a request to the app via browser or postman.\r\n\r\n**Expected behavior**: \r\n\r\nThe apm server logs show `/intake/v2/events` requests as well as `/config/v1/agents` request.\r\n\r\n**Environment/**\r\n- OS: macOS\r\n- Python version: 3.5\r\n- Framework and version: Flask 1.0.2 \r\n- Elasticsearch version: 7.4.1\r\n- Kibana version: 7.4.1\r\n- APM Server version: 7.4.1\r\n- Agent version: 5.2.2\r\n\r\n**Additional context**\r\n\r\nI'm running Elasticsearch on 0.0.0.0:9200, Kibana on 0.0.0.0:5601, and APM on 0.0.0.0.8200.\r\n\r\nA `curl` request to all these shows the desired result.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/620", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/620/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/620/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/620", "id": 512830448, "node_id": "MDU6SXNzdWU1MTI4MzA0NDg=", "number": 620, "title": "Exception when using `quote_ident` in psycopg2", "user": {"login": "HUSSTECH", "id": 5672889, "node_id": "MDQ6VXNlcjU2NzI4ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5672889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HUSSTECH", "html_url": "https://github.com/HUSSTECH", "followers_url": "https://api.github.com/users/HUSSTECH/followers", "following_url": "https://api.github.com/users/HUSSTECH/following{/other_user}", "gists_url": "https://api.github.com/users/HUSSTECH/gists{/gist_id}", "starred_url": "https://api.github.com/users/HUSSTECH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HUSSTECH/subscriptions", "organizations_url": "https://api.github.com/users/HUSSTECH/orgs", "repos_url": "https://api.github.com/users/HUSSTECH/repos", "events_url": "https://api.github.com/users/HUSSTECH/events{/privacy}", "received_events_url": "https://api.github.com/users/HUSSTECH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 6, "created_at": "2019-10-26T12:35:19Z", "updated_at": "2019-11-17T10:02:01Z", "closed_at": "2019-11-12T13:27:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**:\r\nIf you make use of the function `psycopg2.extensions.quote_ident` [docs](http://initd.org/psycopg/docs/extensions.html#psycopg2.extensions.quote_ident), a `TypeError` exception is thrown. This is because the cursor object, when under instrumentation from ES-APM, is an instance of `PGCursorProxy`, not the actual cursor, and `quote_ident` does not allow this because the type is checked in the C code [link](https://github.com/psycopg/psycopg2/blob/2_7_6_1/psycopg/psycopgmodule.c#L181). With the error message saying `TypeError: argument 2 must be a connection or a cursor`. Inspecting the cur object at a debug breakpoint we can see it is the proxy object:\r\n\r\n```\r\n>>> cur\r\n<PGCursorProxy at 0x7fd7f70f9a88 for NamedTupleCursor at 0x7fd7f70f0148>\r\n>>> type(cur)\r\n<class 'elasticapm.instrumentation.packages.psycopg2.PGCursorProxy'>\r\n>>> type(cur.__wrapped__)\r\n<class 'psycopg2.extras.NamedTupleCursor'>\r\n```\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nfrom psycopg2.extensions import quote_ident\r\n....\r\n....\r\nwith psycopg2.connect(DSN) as conn:\r\n    with conn.cursor() as curs:\r\n        ident = quote_ident(\"column_name\", cur)\r\n        curs.execute(f\"SELECT {column_name} FROM data.table;\")\r\n        data = curs.fetchall()\r\n```\r\npassing the underlying wrapped cursor works:\r\n```python\r\nfrom psycopg2.extensions import quote_ident\r\n....\r\n....\r\nwith psycopg2.connect(DSN) as conn:\r\n    with conn.cursor() as curs:\r\n        ident = quote_ident(\"column_name\", cur.__wrapped__)\r\n        curs.execute(f\"SELECT {column_name} FROM data.table;\")\r\n        data = curs.fetchall()\r\n```\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux\r\n- Python version: 3.6.4\r\n- Agent version: 5.2.2\r\n\r\n\r\n**Additional context**\r\nLooks like the same problem was encountered here https://github.com/DataDog/dd-trace-py/issues/474, and was fixed by also patching quote_ident to pass the `__wrapped__` object. Testing this out with a basic in-module proxy function worked, but obviously a patch right at the top level from the apm module would sort it out.\r\n\r\n```python\r\ndef quote_ident(string, cursor):\r\n    return psycopg2.extensions.quote_ident(string, cursor.__wrapped__)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/616", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/616/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/616/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/616", "id": 510360520, "node_id": "MDU6SXNzdWU1MTAzNjA1MjA=", "number": 616, "title": "[meta][docs] Documentation restructure", "user": {"login": "bmorelli25", "id": 5618806, "node_id": "MDQ6VXNlcjU2MTg4MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5618806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmorelli25", "html_url": "https://github.com/bmorelli25", "followers_url": "https://api.github.com/users/bmorelli25/followers", "following_url": "https://api.github.com/users/bmorelli25/following{/other_user}", "gists_url": "https://api.github.com/users/bmorelli25/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmorelli25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmorelli25/subscriptions", "organizations_url": "https://api.github.com/users/bmorelli25/orgs", "repos_url": "https://api.github.com/users/bmorelli25/repos", "events_url": "https://api.github.com/users/bmorelli25/events{/privacy}", "received_events_url": "https://api.github.com/users/bmorelli25/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 680533788, "node_id": "MDU6TGFiZWw2ODA1MzM3ODg=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "bmorelli25", "id": 5618806, "node_id": "MDQ6VXNlcjU2MTg4MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5618806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmorelli25", "html_url": "https://github.com/bmorelli25", "followers_url": "https://api.github.com/users/bmorelli25/followers", "following_url": "https://api.github.com/users/bmorelli25/following{/other_user}", "gists_url": "https://api.github.com/users/bmorelli25/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmorelli25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmorelli25/subscriptions", "organizations_url": "https://api.github.com/users/bmorelli25/orgs", "repos_url": "https://api.github.com/users/bmorelli25/repos", "events_url": "https://api.github.com/users/bmorelli25/events{/privacy}", "received_events_url": "https://api.github.com/users/bmorelli25/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bmorelli25", "id": 5618806, "node_id": "MDQ6VXNlcjU2MTg4MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5618806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmorelli25", "html_url": "https://github.com/bmorelli25", "followers_url": "https://api.github.com/users/bmorelli25/followers", "following_url": "https://api.github.com/users/bmorelli25/following{/other_user}", "gists_url": "https://api.github.com/users/bmorelli25/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmorelli25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmorelli25/subscriptions", "organizations_url": "https://api.github.com/users/bmorelli25/orgs", "repos_url": "https://api.github.com/users/bmorelli25/repos", "events_url": "https://api.github.com/users/bmorelli25/events{/privacy}", "received_events_url": "https://api.github.com/users/bmorelli25/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-10-22T00:03:24Z", "updated_at": "2019-11-15T19:20:34Z", "closed_at": "2019-11-15T19:19:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A meta issue for tracking documentation improvements outlined in https://github.com/elastic/apm-dev/issues/425.\r\n\r\n### Doc restructure\r\n- [x] master - https://github.com/elastic/apm-agent-python/pull/617\r\n\r\n### Build release notes to docs: \r\nMore details: https://github.com/elastic/apm/issues/132.\r\nThe PRs in each group must be merged at the same time to prevent breaking the doc build.\r\n\r\n#### `master`\r\n- [x] apm-agent-python - https://github.com/elastic/apm-agent-python/pull/619\r\n- [x] docs - https://github.com/elastic/docs/pull/1350\r\n\r\n#### `5.x`\r\n- [x] docs pr - https://github.com/elastic/docs/pull/1351\r\n- [x] doc changes made the 5.3.2 release. Release not changes will make he next release", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/613", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/613/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/613/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/613", "id": 509858459, "node_id": "MDU6SXNzdWU1MDk4NTg0NTk=", "number": 613, "title": "Capture `rows_affected` in DB-API2 integrations", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103115, "node_id": "MDU6TGFiZWw2NDYxMDMxMTU=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": null}, {"id": 680534044, "node_id": "MDU6TGFiZWw2ODA1MzQwNDQ=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/feature", "name": "feature", "color": "e99695", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-21T09:58:53Z", "updated_at": "2020-05-07T14:50:50Z", "closed_at": "2020-05-07T14:50:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/elastic/apm/issues/112", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/610", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/610/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/610/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/610", "id": 506641770, "node_id": "MDU6SXNzdWU1MDY2NDE3NzA=", "number": 610, "title": "ZeroDivisionError in cpu_linux.py", "user": {"login": "ivasic", "id": 670571, "node_id": "MDQ6VXNlcjY3MDU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/670571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivasic", "html_url": "https://github.com/ivasic", "followers_url": "https://api.github.com/users/ivasic/followers", "following_url": "https://api.github.com/users/ivasic/following{/other_user}", "gists_url": "https://api.github.com/users/ivasic/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivasic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivasic/subscriptions", "organizations_url": "https://api.github.com/users/ivasic/orgs", "repos_url": "https://api.github.com/users/ivasic/repos", "events_url": "https://api.github.com/users/ivasic/events{/privacy}", "received_events_url": "https://api.github.com/users/ivasic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 2, "created_at": "2019-10-14T13:06:19Z", "updated_at": "2019-11-17T10:03:30Z", "closed_at": "2019-10-16T21:07:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**:\r\n\r\nWhen deploying my Django app on AWS Beanstalk  the APM agent throws `ZeroDivisionError` with the trace: \r\n``` python\r\nZeroDivisionError: float division by zero\r\n  File \"elasticapm/utils/threading.py\", line 79, in run\r\n    rval = self._function(*self._args, **self._kwargs)\r\n  File \"elasticapm/metrics/base_metrics.py\", line 97, in collect\r\n    for data in metricset.collect():\r\n  File \"elasticapm/metrics/base_metrics.py\", line 195, in collect\r\n    self.before_collect()\r\n  File \"elasticapm/metrics/sets/cpu_linux.py\", line 72, in before_collect\r\n    cpu_usage_ratio = delta[\"cpu_usage\"] / delta[\"cpu_total\"]\r\n```\r\n\r\n**To Reproduce**\r\n\r\nI'm not able to consistently reproduce this behavior but the problem obviously seems that the `cpu_total` read from the stats file is zero. It may be due to the newly launched docker container that has just started up.\r\n\r\nOne way to reproduce this (although in my local tests it rarely happens):\r\n- Launch a new `python:3.7` container\r\n- Run any django `manage.py` command as `CMD` via Dockerfile \r\n\r\n**Expected behavior**:\r\n\r\nNo `ZeroDivisionError` exception is thrown\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux\r\n- Python version: 3.7.4 (happens on 3.7.3 as well)\r\n- Framework and version [e.g. Django 2.1]:  Django 2.2.6\r\n- APM Server version: v7.4.0\r\n- Agent version: 5.2.1\r\n\r\n\r\n**Additional context**\r\n\r\nI managed to fix this by catching this exception and setting the ration to 0 which I think makes sense. \r\n\r\n``` python\r\ntry:\r\n    cpu_usage_ratio = delta[\"cpu_usage\"] / delta[\"cpu_total\"]\r\nexcept ZeroDivisionError:\r\n    cpu_usage_ratio = 0\r\n```\r\n\r\nSimilar problem happens with `cpu_process_percent` which I solved the same way.\r\nI can open up a pull request (with a corresponding test case in `cpu_linux_test.py`?) if that makes it easier.\r\n\r\nThanks,\r\nIvan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/608", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/608/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/608/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/608", "id": 505465395, "node_id": "MDU6SXNzdWU1MDU0NjUzOTU=", "number": 608, "title": "SQL Alchemy DB Calls APM logging ", "user": {"login": "soumithx", "id": 5679826, "node_id": "MDQ6VXNlcjU2Nzk4MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5679826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumithx", "html_url": "https://github.com/soumithx", "followers_url": "https://api.github.com/users/soumithx/followers", "following_url": "https://api.github.com/users/soumithx/following{/other_user}", "gists_url": "https://api.github.com/users/soumithx/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumithx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumithx/subscriptions", "organizations_url": "https://api.github.com/users/soumithx/orgs", "repos_url": "https://api.github.com/users/soumithx/repos", "events_url": "https://api.github.com/users/soumithx/events{/privacy}", "received_events_url": "https://api.github.com/users/soumithx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 6, "created_at": "2019-10-10T19:28:01Z", "updated_at": "2019-11-17T10:02:58Z", "closed_at": "2019-10-10T20:20:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/599", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/599/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/599/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/599", "id": 498898805, "node_id": "MDU6SXNzdWU0OTg4OTg4MDU=", "number": 599, "title": "Python agent errors on using capture exception in decorator function", "user": {"login": "codeninja55", "id": 24749967, "node_id": "MDQ6VXNlcjI0NzQ5OTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/24749967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeninja55", "html_url": "https://github.com/codeninja55", "followers_url": "https://api.github.com/users/codeninja55/followers", "following_url": "https://api.github.com/users/codeninja55/following{/other_user}", "gists_url": "https://api.github.com/users/codeninja55/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeninja55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeninja55/subscriptions", "organizations_url": "https://api.github.com/users/codeninja55/orgs", "repos_url": "https://api.github.com/users/codeninja55/repos", "events_url": "https://api.github.com/users/codeninja55/events{/privacy}", "received_events_url": "https://api.github.com/users/codeninja55/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-26T13:51:23Z", "updated_at": "2019-09-26T20:38:31Z", "closed_at": "2019-09-26T15:03:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\nWhen trying to capture an exception in a decorator function, APM produces the following error.\r\n\r\n```\r\nFile \"/opt/conda/lib/python3.7/site-packages/flask_restful/__init__.py\", line 573, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"/usr/src/app/sim_api/middleware.py\", line 343, in decorated_func\r\n    apm.capture_exception()\r\n  File \"/opt/conda/lib/python3.7/site-packages/elasticapm/contrib/flask/__init__.py\", line 214, in capture_exception\r\n    return self.client.capture_exception(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/elasticapm/base.py\", line 224, in capture_exception\r\n    return self.capture(\"Exception\", exc_info=exc_info, handled=handled, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/elasticapm/base.py\", line 194, in capture\r\n    event_type, date=date, context=context, custom=custom, stack=stack, handled=handled, **kwargs\r\n  File \"/opt/conda/lib/python3.7/site-packages/elasticapm/base.py\", line 377, in _build_msg_for_logging\r\n    result = handler.capture(self, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/elasticapm/events.py\", line 119, in capture\r\n    exc_type = exc_type.__name__\r\nAttributeError: 'NoneType' object has no attribute '__name__'\r\n```\r\n\r\n**To Reproduce**\r\n\r\nTake this function:\r\n\r\n```\r\ndef auth_restful(f)\r\n    @wraps(f)\r\n    def decorated_func(*args, **kwargs):\r\n        resp = User.decode_auth_token(auth_token=auth_token)\r\n       \r\n        if not user.is_admin:\r\n            response['message'] = 'Not authorized.'\r\n           # Error occurs HERE\r\n            apm.capture_exception()\r\n            return response, 403\r\n        return f(user, *args, **kwargs)\r\n    return decorated_func\r\n```\r\n\r\nThe Flask-RESTful library and code to do this is as follows:\r\n\r\n```\r\nclass UserList(Resource):\r\n    \"\"\"Return all users (admin only)\"\"\"\r\n\r\n    method_decorators = {'get': [auth_restful]}\r\n\r\n    def get(self, _) -> Tuple[dict, int]:\r\n        \"\"\"Get all users only available to admins.\"\"\"\r\n        user_list = User.as_dict\r\n        response = {'status': 'success', 'data': {'users': user_list}}\r\n        return response, 200\r\n```\r\n\r\n**Expected behavior**: ...\r\n\r\n**Environment (please complete the following information)**\r\n- OS: [e.g. Linux]: Docker base continuumio/miniconda3:4.6.14\r\n- Python version: 3.7.3\r\n- Framework and version [e.g. Django 2.1]:  Flask-RESTful\r\n- APM Server version: 5.1.2\r\n- Agent version: 5.1.2\r\n\r\n\r\n**Additional context**\r\n\r\nAdd any other context about the problem here.\r\n\r\n\r\n- `requirements.txt`:\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n    Flask==1.0.2\r\n    elastic-apm[flask]==5.1.2\r\n    fluent-logger==0.9.3\r\n    Flask-RESTful==0.3.7\r\n    Flask-Testing==0.7.1\r\n    ```\r\n  </details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/598", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/598/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/598/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/598", "id": 498802832, "node_id": "MDU6SXNzdWU0OTg4MDI4MzI=", "number": 598, "title": "Add support to asyncio \u2014 Asynchronous I/O", "user": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 1, "created_at": "2019-09-26T10:35:30Z", "updated_at": "2020-06-18T14:30:55Z", "closed_at": "2020-06-18T14:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add support to asyncio \u2014 Asynchronous I/O\r\n\r\n- [x] Move blocking code to background thread (#607)\r\n- [x] Add async `capture_span` variant (#657)\r\n- [x] Add support for aiohttp client/web (#659)\r\n- [x] Add support for tornado (#661)\r\n- [x] Investigate support for starlette, FastAPI, sanic\r\n- [x] Investigate async support for Django 3.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/590", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/590/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/590/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/590", "id": 494611616, "node_id": "MDU6SXNzdWU0OTQ2MTE2MTY=", "number": 590, "title": "Add ELASTIC_APM_SERVICE_NODE_NAME config", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 0, "created_at": "2019-09-17T13:05:05Z", "updated_at": "2020-04-21T18:53:19Z", "closed_at": "2020-04-21T18:53:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/elastic/apm/issues/141 for implementation details\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/577", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/577/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/577/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/577", "id": 487137879, "node_id": "MDU6SXNzdWU0ODcxMzc4Nzk=", "number": 577, "title": "DB interactions not traced when using context manager with psycopg2 connections or cursors", "user": {"login": "robbietotten", "id": 696565, "node_id": "MDQ6VXNlcjY5NjU2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/696565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbietotten", "html_url": "https://github.com/robbietotten", "followers_url": "https://api.github.com/users/robbietotten/followers", "following_url": "https://api.github.com/users/robbietotten/following{/other_user}", "gists_url": "https://api.github.com/users/robbietotten/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbietotten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbietotten/subscriptions", "organizations_url": "https://api.github.com/users/robbietotten/orgs", "repos_url": "https://api.github.com/users/robbietotten/repos", "events_url": "https://api.github.com/users/robbietotten/events{/privacy}", "received_events_url": "https://api.github.com/users/robbietotten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-29T19:32:23Z", "updated_at": "2019-09-03T10:59:31Z", "closed_at": "2019-09-03T10:59:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a context manager with psycopg2 connections or cursors, db interactions are not captured in spans.\r\n\r\nThe code below generates a span for `psycopg2.connect`, but not the query:\r\n```\r\nwith psycopg2.connect(DSN) as conn:\r\n    with conn.cursor() as curs:\r\n        curs.execute(\"SELECT * FROM data.portfolio;\")\r\n        portfolios = curs.fetchall()\r\n```\r\n\r\nwhereas the following captures both spans as expected:\r\n```\r\nconn = psycopg2.connect(DSN)\r\ncurs = conn.cursor()\r\ncurs.execute(\"SELECT * FROM data.portfolio;\")\r\nportfolios = curs.fetchall()\r\ncurs.close()\r\nconn.close()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/575", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/575/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/575/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/575", "id": 486236912, "node_id": "MDU6SXNzdWU0ODYyMzY5MTI=", "number": 575, "title": "Pause Elastic APM monitoring.", "user": {"login": "umarriqbal", "id": 15857279, "node_id": "MDQ6VXNlcjE1ODU3Mjc5", "avatar_url": "https://avatars3.githubusercontent.com/u/15857279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umarriqbal", "html_url": "https://github.com/umarriqbal", "followers_url": "https://api.github.com/users/umarriqbal/followers", "following_url": "https://api.github.com/users/umarriqbal/following{/other_user}", "gists_url": "https://api.github.com/users/umarriqbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/umarriqbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umarriqbal/subscriptions", "organizations_url": "https://api.github.com/users/umarriqbal/orgs", "repos_url": "https://api.github.com/users/umarriqbal/repos", "events_url": "https://api.github.com/users/umarriqbal/events{/privacy}", "received_events_url": "https://api.github.com/users/umarriqbal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-28T08:38:39Z", "updated_at": "2020-07-09T17:24:35Z", "closed_at": "2020-07-09T17:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't think this is already a feature or if there is a viable workaround around it.\r\nI'm looking to dynamically pause/resume APM monitoring. \r\nI'm using:\r\n\r\n`Python 3.5`\r\n`Flask 1.0.2`\r\n`Elastic APM 6.6.2`\r\n\r\nDetail:\r\nI'm trying to monitor logs or transactions only when a particular type/URL of request comes in. One way that I can achieve that is to reject/sanitise my transactions but that still includes the overhead of monitoring by Elastic APM. I want to get rid of the overhead completely since I deal in super realtime responses.\r\n\r\n/edit:\r\n\r\n### Spec\r\n\r\nTo align with the other agents and to provide greater flexibility, we're introducing two new config options: `enabled` and `recording`, while deprecating `active`.\r\n\r\nHere's the expected behavior as described in https://github.com/elastic/apm/issues/92#issuecomment-519752096:\r\n\r\n- `enabled` - Should behave identically to `active`, which in turn should be deprecated (this is essentially a rename to get a more meaningful name)\r\n- `recording` - Should default to `true`. Setting to `false` will completely disable the recording and sending of data (transactions, spans, errors, and metrics). It must be possible to toggle `recording` dynamically, either locally or via remote config. Setting `recording` to `false` will therefore not disable remote config polling, config file watching, etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/574", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/574/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/574/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/574", "id": 486130941, "node_id": "MDU6SXNzdWU0ODYxMzA5NDE=", "number": 574, "title": "Agent can't monitor oracle sql in Python project", "user": {"login": "Jruing", "id": 31944565, "node_id": "MDQ6VXNlcjMxOTQ0NTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/31944565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jruing", "html_url": "https://github.com/Jruing", "followers_url": "https://api.github.com/users/Jruing/followers", "following_url": "https://api.github.com/users/Jruing/following{/other_user}", "gists_url": "https://api.github.com/users/Jruing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jruing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jruing/subscriptions", "organizations_url": "https://api.github.com/users/Jruing/orgs", "repos_url": "https://api.github.com/users/Jruing/repos", "events_url": "https://api.github.com/users/Jruing/events{/privacy}", "received_events_url": "https://api.github.com/users/Jruing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-28T02:48:59Z", "updated_at": "2019-10-25T06:27:12Z", "closed_at": "2019-10-25T06:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to monitor the Pythonweb project, using the elastic-apm-5.0 version of the agent, it does not monitor oracle sql, see the relevant documentation on github(https://github.com/elastic/apm-agent-nodejs/issues/531), but it is for nodejs, in that document I saw nodejs support Custom span, I tried to use Python to customize the span, but Python has no informatio\r\nagent version\uff1aelastic-apm-5.0\r\ndjango version: 1.11.10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/573", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/573/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/573/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/573", "id": 485749486, "node_id": "MDU6SXNzdWU0ODU3NDk0ODY=", "number": 573, "title": "value too long for type character varying", "user": {"login": "chripede", "id": 406836, "node_id": "MDQ6VXNlcjQwNjgzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-27T11:21:07Z", "updated_at": "2019-08-27T15:13:03Z", "closed_at": "2019-08-27T15:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: When one of the parameters to a psycopg2 query is longer than 255 characters an exception is thrown `value too long for type character varying`\r\n\r\n```\r\nStringDataRightTruncation: value too long for type character varying(255)\r\n\r\n  File \"django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"elasticapm/instrumentation/packages/dbapi2.py\", line 204, in execute\r\n    return self._trace_sql(self.__wrapped__.execute, sql, params)\r\n  File \"elasticapm/instrumentation/packages/dbapi2.py\", line 233, in _trace_sql\r\n    return method(sql, params)\r\n```\r\n\r\n**Expected behavior**: Maybe just cut all params off `[:255]`\r\n\r\n**Environment (please complete the following information)**\r\n- Python version: 3.6\r\n- Framework and version [e.g. Django 2.1]: Django 2.0\r\n- Agent version: 5.1.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/570", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/570/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/570/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/570", "id": 484469459, "node_id": "MDU6SXNzdWU0ODQ0Njk0NTk=", "number": 570, "title": "__init__() got an unexpected keyword argument 'assert_hostname'", "user": {"login": "kh2901", "id": 33087045, "node_id": "MDQ6VXNlcjMzMDg3MDQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/33087045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kh2901", "html_url": "https://github.com/kh2901", "followers_url": "https://api.github.com/users/kh2901/followers", "following_url": "https://api.github.com/users/kh2901/following{/other_user}", "gists_url": "https://api.github.com/users/kh2901/gists{/gist_id}", "starred_url": "https://api.github.com/users/kh2901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kh2901/subscriptions", "organizations_url": "https://api.github.com/users/kh2901/orgs", "repos_url": "https://api.github.com/users/kh2901/repos", "events_url": "https://api.github.com/users/kh2901/events{/privacy}", "received_events_url": "https://api.github.com/users/kh2901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 882569431, "node_id": "MDU6TGFiZWw4ODI1Njk0MzE=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/[zube]:%20Done", "name": "[zube]: Done", "color": "ffffff", "default": false, "description": null}, {"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-08-23T10:59:42Z", "updated_at": "2019-08-30T14:50:51Z", "closed_at": "2019-08-30T09:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading to Version 5.1.1 (recent version 4.2.1) the flask app running on below error:\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"\\elasticapm\\transport\\http.py\", line 79, in send\r\n    \"POST\", url, body=data, headers=self._headers, timeout=self._timeout, preload_content=False\r\n  File \"\\urllib3\\poolmanager.py\", line 324, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"\\elasticapm\\instrumentation\\packages\\base.py\", line 136, in call_if_sampling\r\n    return wrapped(*args, **kwargs)\r\n  File \"\\elasticapm\\instrumentation\\packages\\base.py\", line 136, in call_if_sampling\r\n    return wrapped(*args, **kwargs)\r\n  File \"\\urllib3\\connectionpool.py\", line 588, in urlopen\r\n    conn = self._get_conn(timeout=pool_timeout)\r\n  File \"\\urllib3\\connectionpool.py\", line 248, in _get_conn\r\n    return conn or self._new_conn()\r\n  File \"\\urllib3\\connectionpool.py\", line 209, in _new_conn\r\n    strict=self.strict, **self.conn_kw)\r\n  File \"\\urllib3\\connection.py\", line 114, in __init__\r\n    _HTTPConnection.__init__(self, *args, **kw)\r\nTypeError: __init__() got an unexpected keyword argument 'assert_hostname'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"\\elasticapm\\transport\\base.py\", line 208, in _flush\r\n    self.send(data)\r\n  File \"\\elasticapm\\transport\\http.py\", line 92, in send\r\n    raise TransportException(message, data, print_trace=print_trace)\r\nelasticapm.transport.base.TransportException: Unable to reach APM Server: __init__() got an unexpected keyword argument 'assert_hostname' (url: http://<apm-server url>:8200/intake/v2/events)\r\n```\r\n\r\nThe NO_PROXY env variable is used.\r\n\r\n\r\n**To Reproduce**\r\n\r\n1. apm.init_app()\r\n2. Running on TransportException\r\n\r\n**Expected behavior**: \r\nConnect to apm-server host and add apm data.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Windows/Linux (Conda environment)\r\n- Python version: 3.6.8\r\n- Framework and version: Flask 1.1.1\r\n- APM Server version: 7.3.0\r\n- Agent version: 5.1.1\r\n\r\n\r\n**Additional context**\r\n\r\nAdd any other context about the problem here.\r\n\r\n- Agent config options \r\n    ELASTIC_APM = {\r\n        'SERVICE_NAME': '<name>',\r\n        'SERVER_URL': 'http://%s:8200' % ELASTIC_HOST,\r\n        'SECRET_TOKEN': '',\r\n        'DEBUG': True,\r\n        'ENVIRONMENT': 'development',\r\n        'VERIFY_SERVER_CERT': False,\r\n        'SERVICE_VERSION': app_version\r\n    }\r\n- `requirements.txt`:\r\naniso8601==6.0.0\r\napispec==2.0.2\r\nasn1crypto==0.24.0\r\natomicwrites==1.3.0\r\nattrs==19.1.0\r\nblinker==1.4\r\nblueprint==3.4.2\r\ncertifi==2019.3.9\r\ncffi==1.12.2\r\nchardet==3.0.4\r\nClick==7.0\r\ncolorama==0.4.1\r\ncryptography==2.6.1\r\necdsa==0.13\r\nelastic-apm==4.2.1\r\nelasticsearch==7.0.2\r\nFlask==1.1.1\r\nflask-apispec==0.8.1\r\nFlask-JWT==0.3.2\r\nFlask-PyMongo==2.2.0\r\nflask-restplus==0.12.1\r\nfuture==0.17.1\r\nhvac==0.7.2\r\nidna==2.8\r\nitsdangerous==1.1.0\r\nJinja2==2.10.1\r\njsonschema==3.0.1\r\nMarkupSafe==1.1.1\r\nmarshmallow==2.19.2\r\nmore-itertools==7.0.0\r\npluggy==0.9.0\r\npsutil==5.6.1\r\npy==1.8.0\r\npyasn1==0.4.5\r\npycparser==2.19\r\nPyJWT==1.4.2\r\npymongo==3.7.2\r\npyOpenSSL==19.0.0\r\npyrsistent==0.14.11\r\npytest==4.4.0\r\npytest-flask==0.14.0\r\npytest-mock==1.10.3\r\npython-dateutil==2.8.0\r\npython3-logstash==0.4.80\r\npytz==2018.9\r\nPyYAML==5.1.1\r\nrequests==2.21.0\r\nrsa==4.0\r\nsix==1.12.0\r\nurllib3==1.24.1\r\nwebargs==5.2.0\r\nWerkzeug==0.15.1\r\nwincertstore==0.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/562", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/562/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/562/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/562", "id": 482098350, "node_id": "MDU6SXNzdWU0ODIwOTgzNTA=", "number": 562, "title": "Exception json.decoder.JSONDecodeError with empty payload", "user": {"login": "trancee", "id": 1520623, "node_id": "MDQ6VXNlcjE1MjA2MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1520623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trancee", "html_url": "https://github.com/trancee", "followers_url": "https://api.github.com/users/trancee/followers", "following_url": "https://api.github.com/users/trancee/following{/other_user}", "gists_url": "https://api.github.com/users/trancee/gists{/gist_id}", "starred_url": "https://api.github.com/users/trancee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trancee/subscriptions", "organizations_url": "https://api.github.com/users/trancee/orgs", "repos_url": "https://api.github.com/users/trancee/repos", "events_url": "https://api.github.com/users/trancee/events{/privacy}", "received_events_url": "https://api.github.com/users/trancee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-19T04:24:08Z", "updated_at": "2019-08-22T13:21:34Z", "closed_at": "2019-08-19T13:40:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**:\r\nIt seems that ElasticAPM causes an exception if the payload in the body is empty:\r\n```\r\nException in thread eapm conf updater:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"/home/hidio/git/api/env/lib/python3.7/site-packages/elasticapm/utils/threading.py\", line 79, in run\r\n    rval = self._function(*self._args, **self._kwargs)\r\n  File \"/home/hidio/git/api/env/lib/python3.7/site-packages/elasticapm/conf/__init__.py\", line 402, in update_config\r\n    new_version, new_config, next_run = transport.get_config(agent.config.config_version, keys)\r\n  File \"/home/hidio/git/api/env/lib/python3.7/site-packages/elasticapm/transport/http.py\", line 135, in get_config\r\n    return response.headers.get(\"Etag\"), json_encoder.loads(body.decode(\"utf-8\")), max_age\r\n  File \"/home/hidio/git/api/env/lib/python3.7/site-packages/elasticapm/utils/json_encoder.py\", line 67, in loads\r\n    return json.loads(value, object_hook=better_decoder)\r\n  File \"/usr/local/lib/python3.7/json/__init__.py\", line 361, in loads\r\n    return cls(**kw).decode(s)\r\n  File \"/usr/local/lib/python3.7/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/usr/local/lib/python3.7/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Not sure where the payload actually comes from but if you make it empty (b'') this will cause the issue.\r\n\r\n**Expected behavior**:\r\nDo not run json_encoder.loads() on an empty body and continue successfully without raising an exception.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: CentOS 7\r\n- Python version: 3.7.4\r\n- Framework and version: Flask\r\n- APM Server version: 7.3.0\r\n- Agent version: 5.1.0\r\n\r\n\r\n**Additional context**\r\nAn easy fix would be to check if the body is empty and either skip it completely, or continue parsing a valid JSON string instead:\r\n```\r\nreturn response.headers.get(\"Etag\"), json_encoder.loads(body.decode(\"utf-8\") or \"{}\"), max_age\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/555", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/555/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/555/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/555", "id": 479712467, "node_id": "MDU6SXNzdWU0Nzk3MTI0Njc=", "number": 555, "title": "TypeError in elasticapm urllib", "user": {"login": "src-pwd", "id": 22596739, "node_id": "MDQ6VXNlcjIyNTk2NzM5", "avatar_url": "https://avatars3.githubusercontent.com/u/22596739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/src-pwd", "html_url": "https://github.com/src-pwd", "followers_url": "https://api.github.com/users/src-pwd/followers", "following_url": "https://api.github.com/users/src-pwd/following{/other_user}", "gists_url": "https://api.github.com/users/src-pwd/gists{/gist_id}", "starred_url": "https://api.github.com/users/src-pwd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/src-pwd/subscriptions", "organizations_url": "https://api.github.com/users/src-pwd/orgs", "repos_url": "https://api.github.com/users/src-pwd/repos", "events_url": "https://api.github.com/users/src-pwd/events{/privacy}", "received_events_url": "https://api.github.com/users/src-pwd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-12T15:32:44Z", "updated_at": "2019-08-20T11:59:41Z", "closed_at": "2019-08-13T07:22:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django app, when `elasticapm.contrib.django.middleware.TracingMiddleware` is enabled, HTTP requests fail with:\r\n```\r\nFile \".env/lib/python3.6/site-packages/elasticapm/instrumentation/packages/urllib.py\", line 51, in request_host\r\n    port = int(port)\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'\r\n```\r\n\r\nFull trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \".env/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \".env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \".env/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \".env/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \".env/lib/python3.6/site-packages/django/utils/decorators.py\", line 67, in _wrapper\r\n    return bound_func(*args, **kwargs)\r\n  File \".env/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \".env/lib/python3.6/site-packages/django/utils/decorators.py\", line 63, in bound_func\r\n    return func.__get__(self, type(self))(*args2, **kwargs2)\r\n  File \"spa_api/endpoint.py\", line 28, in dispatch\r\n    response = super(APIEndpoint, self).dispatch(request, *args, **kwargs)\r\n  File \".env/lib/python3.6/site-packages/django/views/generic/base.py\", line 88, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"spa_api/endpoint.py\", line 65, in authorized_function\r\n    return original_function(*args, **kwargs)\r\n  File \"spa_api/endpoint.py\", line 94, in resolve_shop_func\r\n    return original_function(*args, **kwargs)\r\n  File \"spa_api/endpoints/shop_shopify_recurring_charge.py\", line 34, in get\r\n    real_charge = recurring_charge.sync()\r\n  File \"core/shopify/recurring_charge.py\", line 77, in sync\r\n    self._recurring_charge.shopify_id\r\n  File \"main/providers/utils/shopify/handle_common_errors.py\", line 13, in new_function\r\n    return fn(*args, **kwargs)\r\n  File \"main/providers/shopify/recurring_charge.py\", line 35, in get_by_id\r\n    return shopify.RecurringApplicationCharge.find(id_=charge_id)\r\n  File \".env/lib/python3.6/site-packages/pyactiveresource/activeresource.py\", line 383, in find\r\n    return cls._find_single(id_, **kwargs)\r\n  File \".env/lib/python3.6/site-packages/pyactiveresource/activeresource.py\", line 486, in _find_single\r\n    return cls._build_object(cls.connection.get(path, cls.headers),\r\n  File \".env/lib/python3.6/site-packages/pyactiveresource/connection.py\", line 329, in get\r\n    return self.format.decode(self._open('GET', path, headers=headers).body)\r\n  File \".env/lib/python3.6/site-packages/shopify/base.py\", line 23, in _open\r\n    self.response = super(ShopifyConnection, self)._open(*args, **kwargs)\r\n  File \".env/lib/python3.6/site-packages/pyactiveresource/connection.py\", line 286, in _open\r\n    http_response = self._handle_error(self._urlopen(request))\r\n  File \".env/lib/python3.6/site-packages/pyactiveresource/connection.py\", line 316, in _urlopen\r\n    return urllib.request.urlopen(request, timeout=self.timeout)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 223, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 526, in open\r\n    response = self._open(req, data)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 544, in _open\r\n    '_open', req)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 504, in _call_chain\r\n    result = func(*args)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 1361, in https_open\r\n    context=self._context, check_hostname=self._check_hostname)\r\n  File \".env/lib/python3.6/site-packages/elasticapm/instrumentation/packages/base.py\", line 141, in call_if_sampling\r\n    return self.call(module, method, wrapped, instance, args, kwargs)\r\n  File \".env/lib/python3.6/site-packages/elasticapm/instrumentation/packages/urllib.py\", line 74, in call\r\n    host = request_host(request_object)\r\n  File \".env/lib/python3.6/site-packages/elasticapm/instrumentation/packages/urllib.py\", line 51, in request_host\r\n    port = int(port)\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/546", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/546/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/546/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/546", "id": 476785535, "node_id": "MDU6SXNzdWU0NzY3ODU1MzU=", "number": 546, "title": "Cant' disable instrumentation of code", "user": {"login": "Azd325", "id": 426541, "node_id": "MDQ6VXNlcjQyNjU0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/426541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Azd325", "html_url": "https://github.com/Azd325", "followers_url": "https://api.github.com/users/Azd325/followers", "following_url": "https://api.github.com/users/Azd325/following{/other_user}", "gists_url": "https://api.github.com/users/Azd325/gists{/gist_id}", "starred_url": "https://api.github.com/users/Azd325/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Azd325/subscriptions", "organizations_url": "https://api.github.com/users/Azd325/orgs", "repos_url": "https://api.github.com/users/Azd325/repos", "events_url": "https://api.github.com/users/Azd325/events{/privacy}", "received_events_url": "https://api.github.com/users/Azd325/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-05T10:35:15Z", "updated_at": "2019-08-06T07:38:06Z", "closed_at": "2019-08-05T13:52:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**: \r\n\r\n[Docs ](https://www.elastic.co/guide/en/apm/agent/python/current/configuration.html#config-instrument)\r\n\r\n`INSTRUMENT` Settings Variable does not work. It seems that it still looks for `DISABLE_INSTRUMENTATION`\r\n\r\nhttps://github.com/elastic/apm-agent-python/blob/d495c27284ce62c5b39ecc3d0866eb9965caf098/elasticapm/conf/__init__.py#L311\r\n\r\n**To Reproduce**\r\n\r\nInstall elasticapm in Version 5.0.0 and set up a django Project and try to disable instrumentation with `INSTRUMENT`\r\n\r\n**Expected behavior**: \r\n\r\nInstrumentation ist disable with `INSTRUMENT` and not `DISABLE_INSTRUMENTATION`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/541", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/541/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/541/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/541", "id": 475982209, "node_id": "MDU6SXNzdWU0NzU5ODIyMDk=", "number": 541, "title": "Exception raised in `set_context()`", "user": {"login": "zry656565", "id": 1888508, "node_id": "MDQ6VXNlcjE4ODg1MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1888508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zry656565", "html_url": "https://github.com/zry656565", "followers_url": "https://api.github.com/users/zry656565/followers", "following_url": "https://api.github.com/users/zry656565/following{/other_user}", "gists_url": "https://api.github.com/users/zry656565/gists{/gist_id}", "starred_url": "https://api.github.com/users/zry656565/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zry656565/subscriptions", "organizations_url": "https://api.github.com/users/zry656565/orgs", "repos_url": "https://api.github.com/users/zry656565/repos", "events_url": "https://api.github.com/users/zry656565/events{/privacy}", "received_events_url": "https://api.github.com/users/zry656565/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-02T03:45:14Z", "updated_at": "2019-08-06T07:38:05Z", "closed_at": "2019-08-05T12:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\n\r\n```\r\n[host: noj-59dfd94498-45jdw|pid: 24294|timestamp: 1564716068.956608] [ERROR|elasticapm.errors:188] Exception during timing of request\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/elasticapm/contrib/django/middleware/__init__.py\", line 185, in process_response\r\n    elasticapm.set_context(lambda: self.client.get_user_info(request), \"user\")\r\n  File \"/usr/local/lib/python3.7/dist-packages/elasticapm/traces.py\", line 410, in set_context\r\n    transaction.context[key].update(data)\r\nTypeError: 'function' object is not iterable\r\n```\r\n\r\nRelated codes:\r\n\r\nhttps://github.com/elastic/apm-agent-python/blob/ae1c777a975c02f02eb12fe8aa9e3a9077168ef1/elasticapm/traces.py#L615-L631\r\n\r\nAnd when I print `data` when meeting exception, the output is:\r\n\r\n```\r\n<function TracingMiddleware.process_response.<locals>.<lambda> at 0x7f39e36a00e0>\r\n```\r\n\r\nI guess maybe we have to deal with the situation that `data` is callable and `transaction.is_sampled == False`.\r\n\r\n**Expected behavior**:\r\n\r\n`set_context()` should handle `data` in lambda type well.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux\r\n- Python version: 3.7.4\r\n- Framework and version:  Django 2.1.9\r\n- APM Server version: -\r\n- Agent version: 4.2.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/540", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/540/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/540/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/540", "id": 474882666, "node_id": "MDU6SXNzdWU0NzQ4ODI2NjY=", "number": 540, "title": "Limit the max amount of timer metrics", "user": {"login": "axw", "id": 843579, "node_id": "MDQ6VXNlcjg0MzU3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/843579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axw", "html_url": "https://github.com/axw", "followers_url": "https://api.github.com/users/axw/followers", "following_url": "https://api.github.com/users/axw/following{/other_user}", "gists_url": "https://api.github.com/users/axw/gists{/gist_id}", "starred_url": "https://api.github.com/users/axw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axw/subscriptions", "organizations_url": "https://api.github.com/users/axw/orgs", "repos_url": "https://api.github.com/users/axw/repos", "events_url": "https://api.github.com/users/axw/events{/privacy}", "received_events_url": "https://api.github.com/users/axw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-31T00:43:19Z", "updated_at": "2019-08-20T11:59:39Z", "closed_at": "2019-08-13T07:28:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We missed a bullet point from elastic/apm-agent-python#479 in the implementation (https://github.com/elastic/apm-agent-python/pull/535):\r\n\r\n- [ ] [Limit the max amount of timers](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.tzyh7loxf2is)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/537", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/537/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/537/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/537", "id": 474462275, "node_id": "MDU6SXNzdWU0NzQ0NjIyNzU=", "number": 537, "title": "Add `duration` argument to `end_transaction` and `capture_span`", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103115, "node_id": "MDU6TGFiZWw2NDYxMDMxMTU=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-30T09:02:46Z", "updated_at": "2019-08-20T11:59:38Z", "closed_at": "2019-08-20T09:48:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This should help with testing, where we currently rely on `time.sleep(x)` and fuzzy duration comparisons (which tend to fail on CI).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/528", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/528/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/528/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/528", "id": 469296303, "node_id": "MDU6SXNzdWU0NjkyOTYzMDM=", "number": 528, "title": "Use `span.type: external` instead of `span.type: ext` ", "user": {"login": "roncohen", "id": 744, "node_id": "MDQ6VXNlcjc0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roncohen", "html_url": "https://github.com/roncohen", "followers_url": "https://api.github.com/users/roncohen/followers", "following_url": "https://api.github.com/users/roncohen/following{/other_user}", "gists_url": "https://api.github.com/users/roncohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/roncohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roncohen/subscriptions", "organizations_url": "https://api.github.com/users/roncohen/orgs", "repos_url": "https://api.github.com/users/roncohen/repos", "events_url": "https://api.github.com/users/roncohen/events{/privacy}", "received_events_url": "https://api.github.com/users/roncohen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T15:43:22Z", "updated_at": "2019-08-06T07:38:01Z", "closed_at": "2019-07-24T12:10:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should be using `span.type: external` instead of `span.type: ext` to align with the other agents in accordance with https://github.com/elastic/apm/issues/117", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/527", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/527/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/527/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/527", "id": 468868894, "node_id": "MDU6SXNzdWU0Njg4Njg4OTQ=", "number": 527, "title": "elasticapm.transport.http spams logs with INFO level 'Sent request, url=...' message", "user": {"login": "zleroy", "id": 10562842, "node_id": "MDQ6VXNlcjEwNTYyODQy", "avatar_url": "https://avatars1.githubusercontent.com/u/10562842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zleroy", "html_url": "https://github.com/zleroy", "followers_url": "https://api.github.com/users/zleroy/followers", "following_url": "https://api.github.com/users/zleroy/following{/other_user}", "gists_url": "https://api.github.com/users/zleroy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zleroy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zleroy/subscriptions", "organizations_url": "https://api.github.com/users/zleroy/orgs", "repos_url": "https://api.github.com/users/zleroy/repos", "events_url": "https://api.github.com/users/zleroy/events{/privacy}", "received_events_url": "https://api.github.com/users/zleroy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-16T21:19:11Z", "updated_at": "2019-08-06T07:38:01Z", "closed_at": "2019-07-24T08:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following message is repeated in application logs over and over.  It pollutes the logs with what should be a TRACE or DEBUG level message at the INFO level.\r\n\r\n2019-07-16T21:08:03.508Z INFO [logger={elasticapm.transport.http}] Sent request, url= size=1.06kb status=202\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/526", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/526/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/526/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/526", "id": 468485630, "node_id": "MDU6SXNzdWU0Njg0ODU2MzA=", "number": 526, "title": "Implement support for chained exceptions", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3", "html_url": "https://github.com/elastic/apm-agent-python/milestone/3", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/milestones/3/labels", "id": 4694534, "node_id": "MDk6TWlsZXN0b25lNDY5NDUzNA==", "number": 3, "title": "7.5", "description": "", "creator": {"login": "lreuven", "id": 1647423, "node_id": "MDQ6VXNlcjE2NDc0MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1647423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lreuven", "html_url": "https://github.com/lreuven", "followers_url": "https://api.github.com/users/lreuven/followers", "following_url": "https://api.github.com/users/lreuven/following{/other_user}", "gists_url": "https://api.github.com/users/lreuven/gists{/gist_id}", "starred_url": "https://api.github.com/users/lreuven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lreuven/subscriptions", "organizations_url": "https://api.github.com/users/lreuven/orgs", "repos_url": "https://api.github.com/users/lreuven/repos", "events_url": "https://api.github.com/users/lreuven/events{/privacy}", "received_events_url": "https://api.github.com/users/lreuven/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2019-09-26T10:30:22Z", "updated_at": "2020-06-23T21:14:43Z", "due_on": null, "closed_at": "2020-06-23T21:14:43Z"}, "comments": 0, "created_at": "2019-07-16T07:08:49Z", "updated_at": "2019-09-27T12:23:33Z", "closed_at": "2019-09-27T12:23:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3 supports chained exceptions. Its purpose is to handle cases like this:\r\n\r\n    try:\r\n        something_that_breaks()\r\n    except BreakingException:\r\n        do_something_else_that_breaks()  # raises KaboomException\r\n\r\nWithout chained exceptions, only the `KaboomException` is recorded, the exception information of the `BreakingException` is lost. Python 3 stores the original exception in the `__context__` attribute of the exception value.\r\n\r\nPython 3 also introduced an explicit way to raise a chained exception:\r\n\r\n    try:\r\n        something_that_breaks()\r\n    except BreakingException as exc:\r\n        raise RetryException('Retry later') from exc\r\n\r\nIn this case, the `BreakingException` is stored as `__cause__`.\r\n\r\nAn implementation has been [proposed](https://github.com/elastic/apm/issues/40#issuecomment-508619451) by @axw. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/523", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/523/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/523/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/523", "id": 465633543, "node_id": "MDU6SXNzdWU0NjU2MzM1NDM=", "number": 523, "title": "Implement support for Cloud Foundry Garden container IDs", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-09T08:07:38Z", "updated_at": "2019-08-20T11:59:38Z", "closed_at": "2019-08-20T11:18:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "see https://github.com/elastic/apm/issues/105", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/520", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/520/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/520/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/520", "id": 464541960, "node_id": "MDU6SXNzdWU0NjQ1NDE5NjA=", "number": 520, "title": "Integration with log libraries to be able to tag log messages with trace/transaction", "user": {"login": "alvarolobato", "id": 17157380, "node_id": "MDQ6VXNlcjE3MTU3Mzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/17157380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolobato", "html_url": "https://github.com/alvarolobato", "followers_url": "https://api.github.com/users/alvarolobato/followers", "following_url": "https://api.github.com/users/alvarolobato/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolobato/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolobato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolobato/subscriptions", "organizations_url": "https://api.github.com/users/alvarolobato/orgs", "repos_url": "https://api.github.com/users/alvarolobato/repos", "events_url": "https://api.github.com/users/alvarolobato/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolobato/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 882569431, "node_id": "MDU6TGFiZWw4ODI1Njk0MzE=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/[zube]:%20Done", "name": "[zube]: Done", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "basepi", "id": 702318, "node_id": "MDQ6VXNlcjcwMjMxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basepi", "html_url": "https://github.com/basepi", "followers_url": "https://api.github.com/users/basepi/followers", "following_url": "https://api.github.com/users/basepi/following{/other_user}", "gists_url": "https://api.github.com/users/basepi/gists{/gist_id}", "starred_url": "https://api.github.com/users/basepi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basepi/subscriptions", "organizations_url": "https://api.github.com/users/basepi/orgs", "repos_url": "https://api.github.com/users/basepi/repos", "events_url": "https://api.github.com/users/basepi/events{/privacy}", "received_events_url": "https://api.github.com/users/basepi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-07-05T09:09:29Z", "updated_at": "2019-09-17T15:15:20Z", "closed_at": "2019-09-17T15:15:09Z", "author_association": "NONE", "active_lock_reason": null, "body": null, "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/519", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/519/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/519/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/519", "id": 464487707, "node_id": "MDU6SXNzdWU0NjQ0ODc3MDc=", "number": 519, "title": "Change elasticsearch indices", "user": {"login": "JonasKs", "id": 5310116, "node_id": "MDQ6VXNlcjUzMTAxMTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5310116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonasKs", "html_url": "https://github.com/JonasKs", "followers_url": "https://api.github.com/users/JonasKs/followers", "following_url": "https://api.github.com/users/JonasKs/following{/other_user}", "gists_url": "https://api.github.com/users/JonasKs/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonasKs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonasKs/subscriptions", "organizations_url": "https://api.github.com/users/JonasKs/orgs", "repos_url": "https://api.github.com/users/JonasKs/repos", "events_url": "https://api.github.com/users/JonasKs/events{/privacy}", "received_events_url": "https://api.github.com/users/JonasKs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-05T06:44:17Z", "updated_at": "2019-08-06T07:38:00Z", "closed_at": "2019-07-05T06:53:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make the APM indicies less frequent. I've tried looking for some settings, but unable to find any. I've also tried to send the APM logs through my Logstash, but I can't seem to make it work. Is there support for either of these options? If so, any documentation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/517", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/517/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/517/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/517", "id": 464335182, "node_id": "MDU6SXNzdWU0NjQzMzUxODI=", "number": 517, "title": "Rename tag to label", "user": {"login": "alvarolobato", "id": 17157380, "node_id": "MDQ6VXNlcjE3MTU3Mzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/17157380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvarolobato", "html_url": "https://github.com/alvarolobato", "followers_url": "https://api.github.com/users/alvarolobato/followers", "following_url": "https://api.github.com/users/alvarolobato/following{/other_user}", "gists_url": "https://api.github.com/users/alvarolobato/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvarolobato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvarolobato/subscriptions", "organizations_url": "https://api.github.com/users/alvarolobato/orgs", "repos_url": "https://api.github.com/users/alvarolobato/repos", "events_url": "https://api.github.com/users/alvarolobato/events{/privacy}", "received_events_url": "https://api.github.com/users/alvarolobato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-04T16:09:15Z", "updated_at": "2019-08-06T07:37:59Z", "closed_at": "2019-07-31T09:58:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://github.com/elastic/apm/issues/42", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/503", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/503/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/503/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/503", "id": 460938383, "node_id": "MDU6SXNzdWU0NjA5MzgzODM=", "number": 503, "title": "use of django/flask apm", "user": {"login": "suyog1pathak", "id": 19921494, "node_id": "MDQ6VXNlcjE5OTIxNDk0", "avatar_url": "https://avatars3.githubusercontent.com/u/19921494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suyog1pathak", "html_url": "https://github.com/suyog1pathak", "followers_url": "https://api.github.com/users/suyog1pathak/followers", "following_url": "https://api.github.com/users/suyog1pathak/following{/other_user}", "gists_url": "https://api.github.com/users/suyog1pathak/gists{/gist_id}", "starred_url": "https://api.github.com/users/suyog1pathak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suyog1pathak/subscriptions", "organizations_url": "https://api.github.com/users/suyog1pathak/orgs", "repos_url": "https://api.github.com/users/suyog1pathak/repos", "events_url": "https://api.github.com/users/suyog1pathak/events{/privacy}", "received_events_url": "https://api.github.com/users/suyog1pathak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-26T12:21:54Z", "updated_at": "2019-08-06T07:37:58Z", "closed_at": "2019-06-26T12:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have one opensource python code from github which gives you TUI on terminal (it is not django or flask). Can I use Flask or Django APM in the same to get metrics?\r\n\r\nPlease help. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/500", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/500/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/500/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/500", "id": 459763227, "node_id": "MDU6SXNzdWU0NTk3NjMyMjc=", "number": 500, "title": "System metrics not available on linux host with kernel < 3.14", "user": {"login": "NielkS", "id": 10175203, "node_id": "MDQ6VXNlcjEwMTc1MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/10175203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NielkS", "html_url": "https://github.com/NielkS", "followers_url": "https://api.github.com/users/NielkS/followers", "following_url": "https://api.github.com/users/NielkS/following{/other_user}", "gists_url": "https://api.github.com/users/NielkS/gists{/gist_id}", "starred_url": "https://api.github.com/users/NielkS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NielkS/subscriptions", "organizations_url": "https://api.github.com/users/NielkS/orgs", "repos_url": "https://api.github.com/users/NielkS/repos", "events_url": "https://api.github.com/users/NielkS/events{/privacy}", "received_events_url": "https://api.github.com/users/NielkS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-24T08:39:18Z", "updated_at": "2019-08-06T07:37:58Z", "closed_at": "2019-07-02T19:18:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Bug description**\r\nI see the following exception twice whenever I start a (django) application and execute a transaction for the first time.\r\n\r\n> Exception in thread eapm metrics collect timer:\r\n> Traceback (most recent call last):\r\n>   File \"/opt/pack/PYT/envs/pyt-3.6.6.1/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n>     self.run()\r\n>   File \"/data/nielks/virtualenv/lib/python3.6/site-packages/elasticapm/utils/threading.py\", line 64, in run\r\n>     self._function(*self._args, **self._kwargs)\r\n>   File \"/data/nielks/virtualenv/lib/python3.6/site-packages/elasticapm/metrics/base_metrics.py\", line 86, in collect\r\n>     data = metricset.collect()\r\n>   File \"/data/nielks/virtualenv/lib/python3.6/site-packages/elasticapm/metrics/sets/cpu_linux.py\", line 73, in collect\r\n>     self.gauge(\"system.memory.actual.free\").val = new[\"mem_available\"]\r\n> KeyError: 'mem_available'\r\n\r\nAs a result, no information related to CPU & memory usage is collected.\r\n\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux, kernel 3.0.101-108.18-default \r\n- Python version: 3.6.6\r\n- Framework and version  Django 2.1.4 \r\n- APM Server version: 7.1.0\r\n- Agent version: 4.2.2\r\n\r\n\r\n**Additional context**\r\nLooking at the implementation of elasticapm/metrics/sets/cpu_linux.py, I see that the \"mem_available\" gauge is evaluated from the \"MemAvailable\" line of /proc/meminfo.\r\nThat info was added in https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=34e431b0a, release in 2014 in kernel 3.14.\r\nMy host machine has a kernel older than this, hence the exception.\r\n\r\nI managed to implement a simple fix, that works fine on my machine:\r\n\r\n```\r\n    def collect(self):\r\n        new = self.read_process_stats()\r\n        new.update(self.read_system_stats())\r\n        with self._read_data_lock:\r\n             # ...\r\n            mem_available = new[\"mem_available\"] if \"mem_available\" in new else new[\"mem_free\"]\r\n            self.gauge(\"system.memory.actual.free\").val = mem_available\r\n            # ...\r\n\r\n    def read_system_stats(self):\r\n        stats = {}\r\n        # ...\r\n        with open(self.memory_stats_file, \"r\") as memfile:\r\n            for line in memfile:\r\n                if line.startswith(\"MemTotal:\"):\r\n                    stats[\"mem_total\"] = int(whitespace_re.split(line)[1]) * 1024\r\n                elif line.startswith(\"MemAvailable:\"):\r\n                    stats[\"mem_available\"] = int(whitespace_re.split(line)[1]) * 1024\r\n                elif line.startswith(\"MemFree:\"):\r\n                    stats[\"mem_free\"] = int(whitespace_re.split(line)[1]) * 1024\r\n\r\n        return stats\r\n\r\n```\r\nThis will silently fallback to the value of \"MemFree\", if \"MemAvailable\" is not present.\r\nI can create a PR for that, if the behavior is fine for you. (would you rather log a warning ? not provide the metric ?)\r\n\r\nBest regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/498", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/498/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/498/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/498", "id": 457305017, "node_id": "MDU6SXNzdWU0NTczMDUwMTc=", "number": 498, "title": "Implement remote configuration ", "user": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-18T07:25:04Z", "updated_at": "2019-08-06T07:37:58Z", "closed_at": "2019-08-05T13:11:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- [x] Implement API\r\n- [x] Implement regular update call\r\n- [x] Implement hot-reloading of configuration\r\n\r\nsee https://github.com/elastic/apm/issues/76", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/496", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/496/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/496/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/496", "id": 456142057, "node_id": "MDU6SXNzdWU0NTYxNDIwNTc=", "number": 496, "title": "[python] agent throws error when self signed server certificate is set", "user": {"login": "simitt", "id": 5555349, "node_id": "MDQ6VXNlcjU1NTUzNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5555349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simitt", "html_url": "https://github.com/simitt", "followers_url": "https://api.github.com/users/simitt/followers", "following_url": "https://api.github.com/users/simitt/following{/other_user}", "gists_url": "https://api.github.com/users/simitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/simitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simitt/subscriptions", "organizations_url": "https://api.github.com/users/simitt/orgs", "repos_url": "https://api.github.com/users/simitt/repos", "events_url": "https://api.github.com/users/simitt/events{/privacy}", "received_events_url": "https://api.github.com/users/simitt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-14T09:10:02Z", "updated_at": "2019-08-06T07:37:56Z", "closed_at": "2019-06-14T12:53:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Setting `SERVER_CERT` to the according self signed APM Server certification fails with:\r\n```\r\nelasticapm.transport.base.TransportException: Unable to reach APM Server: HTTPSConnectionPool(host='localhost', port=8200): Max retries exceeded with url: /intake/v2/events (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:719)'),)) (url: https://localhost:8200/intake/v2/events)\r\n```\r\n\r\nThe server certificate is created by [this script](https://github.com/elastic/apm-server/blob/master/tests/system/config/create_certs.sh#L29)\r\n\r\n**Environment (please complete the following information)**\r\n- OS: darwin\r\n- Python version: 3.5.5\r\n- Framework and version:  Flask 1.0.2\r\n- APM Server version: >= 7.0\r\n- Agent version: 4.2.2\r\n\r\n\r\n**Example App used**\r\n```\r\nfrom flask import Flask\r\nfrom elasticapm.contrib.flask import ElasticAPM\r\napp = Flask(__name__)\r\n\r\napp.config['ELASTIC_APM'] = {\r\n    'SERVICE_NAME': '70python',\r\n    'SERVER_URL': 'https://localhost:8200',\r\n    'API_REQUEST_TIME': '2s',\r\n    'SERVER_CERT': 'path-to-server-cert'\r\n}\r\n\r\napm = ElasticAPM(app)\r\n\r\n@app.route('/')\r\ndef hello_world():\r\n    return 'Hello, World!'\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/495", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/495/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/495/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/495", "id": 456118068, "node_id": "MDU6SXNzdWU0NTYxMTgwNjg=", "number": 495, "title": "SSL option `VERIFY_SERVER_CERT:False` overrules `SERVER_CERT` option", "user": {"login": "simitt", "id": 5555349, "node_id": "MDQ6VXNlcjU1NTUzNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5555349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simitt", "html_url": "https://github.com/simitt", "followers_url": "https://api.github.com/users/simitt/followers", "following_url": "https://api.github.com/users/simitt/following{/other_user}", "gists_url": "https://api.github.com/users/simitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/simitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simitt/subscriptions", "organizations_url": "https://api.github.com/users/simitt/orgs", "repos_url": "https://api.github.com/users/simitt/repos", "events_url": "https://api.github.com/users/simitt/events{/privacy}", "received_events_url": "https://api.github.com/users/simitt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103113, "node_id": "MDU6TGFiZWw2NDYxMDMxMTM=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T08:12:50Z", "updated_at": "2019-08-06T07:37:55Z", "closed_at": "2019-06-14T12:53:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to the [docs](https://www.elastic.co/guide/en/apm/agent/python/current/configuration.html#config-verify-server-cert) the config option `VERIFY_SERVER_CERT` is ignored whenever `SERVER_CERT` is set. \r\n\r\nHaving both options set still logs following warning, indicating that no server cert is used:\r\n```\r\nInsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning)\r\n```\r\n\r\n**Environment (please complete the following information)**\r\n- OS: darwin\r\n- Python version: 3.5.5\r\n- Framework and version:  Flask 1.0.2\r\n- APM Server version: >= 7.0\r\n- Agent version: 4.2.2\r\n\r\n\r\n**Example App used**\r\n```\r\nfrom flask import Flask\r\nfrom elasticapm.contrib.flask import ElasticAPM\r\napp = Flask(__name__)\r\n\r\napp.config['ELASTIC_APM'] = {\r\n    'SERVICE_NAME': 'testapp',\r\n    'SERVER_URL': 'https://localhost:8200',\r\n    'API_REQUEST_TIME': '2s',\r\n    'VERIFY_SERVER_CERT': False,\r\n    'SERVER_CERT': '/path-to-server.crt.pem'\r\n}\r\n\r\napm = ElasticAPM(app)\r\n\r\n@app.route('/')\r\ndef hello_world():\r\n    return 'Hello, World!'\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/491", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/491/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/491/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/491", "id": 454613905, "node_id": "MDU6SXNzdWU0NTQ2MTM5MDU=", "number": 491, "title": "Truncate error.culprit at 1024 chars", "user": {"login": "axw", "id": 843579, "node_id": "MDQ6VXNlcjg0MzU3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/843579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axw", "html_url": "https://github.com/axw", "followers_url": "https://api.github.com/users/axw/followers", "following_url": "https://api.github.com/users/axw/following{/other_user}", "gists_url": "https://api.github.com/users/axw/gists{/gist_id}", "starred_url": "https://api.github.com/users/axw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axw/subscriptions", "organizations_url": "https://api.github.com/users/axw/orgs", "repos_url": "https://api.github.com/users/axw/repos", "events_url": "https://api.github.com/users/axw/events{/privacy}", "received_events_url": "https://api.github.com/users/axw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-11T10:41:11Z", "updated_at": "2019-08-06T07:37:55Z", "closed_at": "2019-08-05T12:03:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/elastic/apm/issues/43", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/484", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/484/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/484/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/484", "id": 450449199, "node_id": "MDU6SXNzdWU0NTA0NDkxOTk=", "number": 484, "title": "Transactions with Celery aren't sent in 4.2.2", "user": {"login": "boundless-thread", "id": 29227206, "node_id": "MDQ6VXNlcjI5MjI3MjA2", "avatar_url": "https://avatars1.githubusercontent.com/u/29227206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boundless-thread", "html_url": "https://github.com/boundless-thread", "followers_url": "https://api.github.com/users/boundless-thread/followers", "following_url": "https://api.github.com/users/boundless-thread/following{/other_user}", "gists_url": "https://api.github.com/users/boundless-thread/gists{/gist_id}", "starred_url": "https://api.github.com/users/boundless-thread/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boundless-thread/subscriptions", "organizations_url": "https://api.github.com/users/boundless-thread/orgs", "repos_url": "https://api.github.com/users/boundless-thread/repos", "events_url": "https://api.github.com/users/boundless-thread/events{/privacy}", "received_events_url": "https://api.github.com/users/boundless-thread/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-30T18:40:44Z", "updated_at": "2019-08-06T07:37:54Z", "closed_at": "2019-05-31T14:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "All my Celery tasks use a custom class that is based on `celery.Task`.   Basically its\r\n\r\n```\r\nclass Base(celery.Task):\r\n  def __call__(self, *args, **kwargs):\r\n    try:\r\n      APM.begin_transaction('celery')\r\n      return super().__call__(*args, **kwargs)\r\n    finally:\r\n      APM.end_transaction(name=self.name)\r\n```\r\n\r\nThis worked on version 4.10.  This does not work on 4.2.2.   Since there is no documentation about elastic-apm and Celery, is this the preferred way to do this or not?  I'm not sure if transactions breaking is due to a bug in 4.2.2 or the way i am doing these transactions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/482", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/482/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/482/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/482", "id": 446962385, "node_id": "MDU6SXNzdWU0NDY5NjIzODU=", "number": 482, "title": "Support for Elasticsearch Version 7", "user": {"login": "Patralos", "id": 27063650, "node_id": "MDQ6VXNlcjI3MDYzNjUw", "avatar_url": "https://avatars0.githubusercontent.com/u/27063650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patralos", "html_url": "https://github.com/Patralos", "followers_url": "https://api.github.com/users/Patralos/followers", "following_url": "https://api.github.com/users/Patralos/following{/other_user}", "gists_url": "https://api.github.com/users/Patralos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patralos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patralos/subscriptions", "organizations_url": "https://api.github.com/users/Patralos/orgs", "repos_url": "https://api.github.com/users/Patralos/repos", "events_url": "https://api.github.com/users/Patralos/events{/privacy}", "received_events_url": "https://api.github.com/users/Patralos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "beniwohli", "id": 93675, "node_id": "MDQ6VXNlcjkzNjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/93675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniwohli", "html_url": "https://github.com/beniwohli", "followers_url": "https://api.github.com/users/beniwohli/followers", "following_url": "https://api.github.com/users/beniwohli/following{/other_user}", "gists_url": "https://api.github.com/users/beniwohli/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniwohli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniwohli/subscriptions", "organizations_url": "https://api.github.com/users/beniwohli/orgs", "repos_url": "https://api.github.com/users/beniwohli/repos", "events_url": "https://api.github.com/users/beniwohli/events{/privacy}", "received_events_url": "https://api.github.com/users/beniwohli/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-05-22T06:53:09Z", "updated_at": "2019-08-06T07:37:53Z", "closed_at": "2019-05-29T12:19:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nis there a plan to support elasticsearch version 7?\r\n\r\n> \r\n\r\nInstrumenting version 7 of Elasticsearch is not supported by Elastic APM\r\n--\r\n\u00a0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/479", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/479/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/479/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/479", "id": 442654628, "node_id": "MDU6SXNzdWU0NDI2NTQ2Mjg=", "number": 479, "title": "Agent breakdown metrics", "user": {"login": "felixbarny", "id": 2163464, "node_id": "MDQ6VXNlcjIxNjM0NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2163464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixbarny", "html_url": "https://github.com/felixbarny", "followers_url": "https://api.github.com/users/felixbarny/followers", "following_url": "https://api.github.com/users/felixbarny/following{/other_user}", "gists_url": "https://api.github.com/users/felixbarny/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixbarny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixbarny/subscriptions", "organizations_url": "https://api.github.com/users/felixbarny/orgs", "repos_url": "https://api.github.com/users/felixbarny/repos", "events_url": "https://api.github.com/users/felixbarny/events{/privacy}", "received_events_url": "https://api.github.com/users/felixbarny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-10T10:41:07Z", "updated_at": "2019-08-06T07:37:53Z", "closed_at": "2019-07-30T10:00:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Implementation of agent breakdown metrics (https://github.com/elastic/apm/issues/78)\r\n\r\nChecklist/TL;DR version of the design:\r\n\r\n- [x] [Calculate self-time of transactions and spans](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.ondan294nbpt)\r\n  - [x] Prerequisite: Spans have a reference to their parent\r\n  - [x] Add a child duration reentrant timer to transactions and spans\r\n- [x] Add [feature flag](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.12wulrccoi9k)\r\n- Metrics registry enhancements\r\n  - [x] Add support for [timers](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.qk36t41ikda3)\r\n  - [ ] [Limit the max amount of timers](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.tzyh7loxf2is)\r\n  - [x] Add support for counters\r\n  - [x] Optional: [guard against concurrent reads/writes](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.aler9ixddp0e)\r\n- [x] [Track span self-times on the transaction](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.g5pdtefj3ag)\r\n  - [x] Prerequisite: Spans have a reference to their transaction\r\n  - On span end:\r\n    - [x] track the span self-time on the corresponding transaction\r\n  - On transaction end\r\n    - [x] track all self-times on the metric registry\r\n    - [x] track the transaction's self time with the `span.type` `app`\r\n    - [x] track the transaction's duration on the metrics registry\r\n- [Reporting metrics](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.gkxkryn9w02s)\r\n  - [x] Add support for top-level labels for `transaction.name`, `transaction.type`, `span.type` and `span.subtype`\r\n  - [x] Reset counters for Timers and the `transaction.breakdown.count` counter every time the metrics are reported\r\n- [x] [Acceptance tests](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.7m6qydtkxod4)\r\n- [ ] [Evaluate the performance impact](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.68ixudlgfzac)\r\n- [x] [Document metrics](https://docs.google.com/document/d/1-_LuC9zhmva0VvLgtI0KcHuLzNztPHbcM0ZdlcPUl64#heading=h.68ixudlgfzac)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/476", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/476/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/476/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/476", "id": 440523841, "node_id": "MDU6SXNzdWU0NDA1MjM4NDE=", "number": 476, "title": "Transport.queue spams log when queue is full", "user": {"login": "axw", "id": 843579, "node_id": "MDQ6VXNlcjg0MzU3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/843579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axw", "html_url": "https://github.com/axw", "followers_url": "https://api.github.com/users/axw/followers", "following_url": "https://api.github.com/users/axw/following{/other_user}", "gists_url": "https://api.github.com/users/axw/gists{/gist_id}", "starred_url": "https://api.github.com/users/axw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axw/subscriptions", "organizations_url": "https://api.github.com/users/axw/orgs", "repos_url": "https://api.github.com/users/axw/repos", "events_url": "https://api.github.com/users/axw/events{/privacy}", "received_events_url": "https://api.github.com/users/axw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 882569431, "node_id": "MDU6TGFiZWw4ODI1Njk0MzE=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/[zube]:%20Done", "name": "[zube]: Done", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-06T02:56:00Z", "updated_at": "2019-08-29T13:15:38Z", "closed_at": "2019-08-29T13:15:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a busy application, the agent-internal event queue may fill up frequently, which will lead to events being dropped. We currently log a warning every time this occurs, which may lead to spamming the logs.\r\n\r\nIdeally, the agent would keep a record of the number of events dropped, and periodically report this as a metric to the server, and logging would no longer be needed. In the meantime, we should at least throttle this log message to prevent filling up the logs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/462", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/462/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/462/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/462", "id": 436086790, "node_id": "MDU6SXNzdWU0MzYwODY3OTA=", "number": 462, "title": "Capture Python  request.urlopen runtime metrics", "user": {"login": "EricYqd", "id": 18207117, "node_id": "MDQ6VXNlcjE4MjA3MTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/18207117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricYqd", "html_url": "https://github.com/EricYqd", "followers_url": "https://api.github.com/users/EricYqd/followers", "following_url": "https://api.github.com/users/EricYqd/following{/other_user}", "gists_url": "https://api.github.com/users/EricYqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricYqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricYqd/subscriptions", "organizations_url": "https://api.github.com/users/EricYqd/orgs", "repos_url": "https://api.github.com/users/EricYqd/repos", "events_url": "https://api.github.com/users/EricYqd/events{/privacy}", "received_events_url": "https://api.github.com/users/EricYqd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-23T09:25:26Z", "updated_at": "2019-04-25T17:02:35Z", "closed_at": "2019-04-24T12:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python agent can capture  requests.get /  requests.post runtime metrics . but  request.urlopen can not capture  runtime metrics\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/460", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/460/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/460/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/460", "id": 433772123, "node_id": "MDU6SXNzdWU0MzM3NzIxMjM=", "number": 460, "title": "Capture Python runtime metrics ", "user": {"login": "nehaduggal-zz", "id": 4449694, "node_id": "MDQ6VXNlcjQ0NDk2OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4449694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaduggal-zz", "html_url": "https://github.com/nehaduggal-zz", "followers_url": "https://api.github.com/users/nehaduggal-zz/followers", "following_url": "https://api.github.com/users/nehaduggal-zz/following{/other_user}", "gists_url": "https://api.github.com/users/nehaduggal-zz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaduggal-zz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaduggal-zz/subscriptions", "organizations_url": "https://api.github.com/users/nehaduggal-zz/orgs", "repos_url": "https://api.github.com/users/nehaduggal-zz/repos", "events_url": "https://api.github.com/users/nehaduggal-zz/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaduggal-zz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 882569431, "node_id": "MDU6TGFiZWw4ODI1Njk0MzE=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/[zube]:%20Done", "name": "[zube]: Done", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-16T13:11:35Z", "updated_at": "2019-11-18T00:39:59Z", "closed_at": "2019-11-18T00:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python agent to capture runtime metrics to help visualize the impact of underlying infrastructure in context of the application.\r\n\r\nMetrics to be captured by the Python agent:\r\n- Garbage collection\r\n- Memory usage(existing memory usage graph on the apm-contrib dashboard)\r\n- I/O\r\n- Thread count (Gauge)\r\n- Context switches (Counter)\r\n       - Voluntary\r\n       - Involuntary\r\n- Open file handles (Gauge)\r\n\r\n\r\nAPM Meta issue: elastic/apm#73\r\n\r\nA dashboard should be created in apm-contrib for these metrics", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/459", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/459/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/459/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/459", "id": 433162569, "node_id": "MDU6SXNzdWU0MzMxNjI1Njk=", "number": 459, "title": "Add support for global labels", "user": {"login": "axw", "id": 843579, "node_id": "MDQ6VXNlcjg0MzU3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/843579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axw", "html_url": "https://github.com/axw", "followers_url": "https://api.github.com/users/axw/followers", "following_url": "https://api.github.com/users/axw/following{/other_user}", "gists_url": "https://api.github.com/users/axw/gists{/gist_id}", "starred_url": "https://api.github.com/users/axw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axw/subscriptions", "organizations_url": "https://api.github.com/users/axw/orgs", "repos_url": "https://api.github.com/users/axw/repos", "events_url": "https://api.github.com/users/axw/events{/privacy}", "received_events_url": "https://api.github.com/users/axw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-15T08:43:39Z", "updated_at": "2019-08-20T11:59:37Z", "closed_at": "2019-08-06T11:35:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See https://github.com/elastic/apm-agent-go/issues/507", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/458", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/458/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/458/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/458", "id": 433121901, "node_id": "MDU6SXNzdWU0MzMxMjE5MDE=", "number": 458, "title": "NO_PROXY not passed", "user": {"login": "kh2901", "id": 33087045, "node_id": "MDQ6VXNlcjMzMDg3MDQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/33087045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kh2901", "html_url": "https://github.com/kh2901", "followers_url": "https://api.github.com/users/kh2901/followers", "following_url": "https://api.github.com/users/kh2901/following{/other_user}", "gists_url": "https://api.github.com/users/kh2901/gists{/gist_id}", "starred_url": "https://api.github.com/users/kh2901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kh2901/subscriptions", "organizations_url": "https://api.github.com/users/kh2901/orgs", "repos_url": "https://api.github.com/users/kh2901/repos", "events_url": "https://api.github.com/users/kh2901/events{/privacy}", "received_events_url": "https://api.github.com/users/kh2901/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 646103115, "node_id": "MDU6TGFiZWw2NDYxMDMxMTU=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-15T06:54:53Z", "updated_at": "2019-08-20T11:59:36Z", "closed_at": "2019-08-14T14:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The environment variable NO_PROXY is not processed. An APM server in front of a proxy is therefore not found, after a while you get http connection error. Only the environment variables HTTP_PROXY and HTTPS_PROXY are processed.  I`m using flask and the environment variables HTTP & HTTPS_PROXY are needed for oauth.\r\n\r\n**To Reproduce**\r\n\r\n1. Define APM Server in front of a Proxy\r\n2. Define HTTP_PROXY and HTTPS_PROXY environment variable\r\n3. Define NO_PROXY\r\n4. Try to initiate app\r\n5. Seconds after initate you get an HTTP Connection error.\r\n\r\n**Expected behavior**: \r\nCheck if IP or URL is defined in NO_PROXY, maybe part of an URL for wildcard usage.\r\n\r\nChange this [line](https://github.com/elastic/apm-agent-python/blob/b3b0ba42c260935b1d3c3a1db244c1ebc14d40ad/elasticapm/transport/http.py#L62) and add a second condition.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: [e.g. Linux]\r\n- Python version: 3.6.8\r\n- Framework and version [e.g. Django 2.1]: Flask 1.0.2\r\n- APM Server version: 7.0.0\r\n- Agent version: 4.2.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/451", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/451/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/451/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/451", "id": 430274147, "node_id": "MDU6SXNzdWU0MzAyNzQxNDc=", "number": 451, "title": "Allow config for switching between thread locals and contextvars for execution_context", "user": {"login": "ramshaw888", "id": 7675097, "node_id": "MDQ6VXNlcjc2NzUwOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7675097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramshaw888", "html_url": "https://github.com/ramshaw888", "followers_url": "https://api.github.com/users/ramshaw888/followers", "following_url": "https://api.github.com/users/ramshaw888/following{/other_user}", "gists_url": "https://api.github.com/users/ramshaw888/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramshaw888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramshaw888/subscriptions", "organizations_url": "https://api.github.com/users/ramshaw888/orgs", "repos_url": "https://api.github.com/users/ramshaw888/repos", "events_url": "https://api.github.com/users/ramshaw888/events{/privacy}", "received_events_url": "https://api.github.com/users/ramshaw888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-08T06:21:34Z", "updated_at": "2019-04-16T13:19:57Z", "closed_at": "2019-04-10T09:01:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm trying to get some preliminary support working for apps that use `gevent`.\r\n\r\nIn Python<3.7 the agent uses thread locals to back the `execution_context` object, while in Python>=3.7 it uses context vars. The functionality to switch between the two was introduced in elastic/apm-agent-python#291 which was 'a partial \"import\" of the asyncio work done in #252\"'.\r\n\r\nI've had some success in using the agent with Python<3.7 project because `gevent` monkey patches thread locals to be \"greenlet-safe\" ([see here](http://www.gevent.org/api/gevent.monkey.html#gevent.monkey.patch_thread)). In >=3.7 however the agent defaults to using contextvars which are not monkey patched by gevent, resulting in race conditions where multiple flask request transactions share the same contextvars.\r\n\r\n**Describe the solution you'd like**\r\nMy proposed solution is to have an optional config value which determines whether to use thread locals, or contextvars as the \"backing\" for the `execution_context` object. If the config value is not present, then it should fall back to the existing logic.\r\n\r\n**Describe alternatives you've considered**\r\nAnother option is to check whether or not thread locals has been monkey patched by gevent, and then assuming use of thread locals instead of contextvars. I understand that elastic has not fully committed to gevent support which is why I think an optional config might be a better solution to begin with.\r\n\r\n**Additional context**\r\nAdditionally, as suggested by @bhodorog (https://github.com/elastic/apm-agent-python/issues/16#issuecomment-467289559) this would pave the way for alternative \"thread\" storage options like werkzeug locals.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/450", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/450/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/450/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/450", "id": 429683341, "node_id": "MDU6SXNzdWU0Mjk2ODMzNDE=", "number": 450, "title": "RuntimeError: can't start new thread", "user": {"login": "rvanlaar", "id": 710771, "node_id": "MDQ6VXNlcjcxMDc3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvanlaar", "html_url": "https://github.com/rvanlaar", "followers_url": "https://api.github.com/users/rvanlaar/followers", "following_url": "https://api.github.com/users/rvanlaar/following{/other_user}", "gists_url": "https://api.github.com/users/rvanlaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvanlaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvanlaar/subscriptions", "organizations_url": "https://api.github.com/users/rvanlaar/orgs", "repos_url": "https://api.github.com/users/rvanlaar/repos", "events_url": "https://api.github.com/users/rvanlaar/events{/privacy}", "received_events_url": "https://api.github.com/users/rvanlaar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-05T10:17:42Z", "updated_at": "2020-01-22T19:43:47Z", "closed_at": "2019-04-11T17:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: We're getting errors \"RuntimeError: can't start new thread\".\r\nThe only change we've introduced is turning Elastic on. \r\nSince than we're getting these errors. When running long enough, this\r\nexhausts the thread pool on the server. \r\n\r\n**To Reproduce**\r\n\r\n1. Use APM with Django\r\n\r\n**Expected behavior**: To not run out of threads.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Ubuntu 16.04.5 LTS\r\n- Python version: 3.5.2\r\n- Framework and version [e.g. Django 2.1]: Django 1.11.20\r\n- APM Server version: elastic cloud\r\n- Agent version: elastic-apm 4.2.1\r\n\r\n**Additional context**\r\n\r\nRuntimeError: can't start new thread\r\n  File \"threading.py\", line 1180, in run\r\n    self.function(*self.args, **self.kwargs)\r\n  File \"elasticapm/transport/base.py\", line 124, in flush\r\n    self._start_flush_timer()\r\n  File \"elasticapm/transport/base.py\", line 160, in _start_flush_timer\r\n    self._flush_timer.start()\r\n  File \"threading.py\", line 844, in start\r\n    _start_new_thread(self._bootstrap, ())\r\n\r\nWe're running with celery and sentry. \r\n\r\n- Agent config options <!-- be careful not to post sensitive information -->\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n   if env('ELASTIC_APM'):\r\n    ELASTIC_APM = {\r\n        # Set required service name. Allowed characters:\r\n        # a-z, A-Z, 0-9, -, _, and space\r\n        'SERVICE_NAME': 'CLIENT PRODUCTION',\r\n        # Use if APM Server requires a token\r\n        'SECRET_TOKEN': env('ELASTIC_APM_SECRET_TOKEN'),\r\n        # Set custom APM Server URL (default: http://localhost:8200)\r\n        'SERVER_URL': env('ELASTIC_APM_SERVER_URL)\r\n    }\r\n\r\n    INSTALLED_APPS += ('elasticapm.contrib.django',)\r\n    # The Elastic APM tracing middleware needs to be first.\r\n    MIDDLEWARE_CLASSES = (\r\n        'elasticapm.contrib.django.middleware.TracingMiddleware',\r\n        ) + MIDDLEWARE_CLASSES\r\n    ```\r\n  </details>\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/447", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/447/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/447/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/447", "id": 428622452, "node_id": "MDU6SXNzdWU0Mjg2MjI0NTI=", "number": 447, "title": "uwsgi error", "user": {"login": "mkloveyy", "id": 19920146, "node_id": "MDQ6VXNlcjE5OTIwMTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/19920146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkloveyy", "html_url": "https://github.com/mkloveyy", "followers_url": "https://api.github.com/users/mkloveyy/followers", "following_url": "https://api.github.com/users/mkloveyy/following{/other_user}", "gists_url": "https://api.github.com/users/mkloveyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkloveyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkloveyy/subscriptions", "organizations_url": "https://api.github.com/users/mkloveyy/orgs", "repos_url": "https://api.github.com/users/mkloveyy/repos", "events_url": "https://api.github.com/users/mkloveyy/events{/privacy}", "received_events_url": "https://api.github.com/users/mkloveyy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-03T08:08:58Z", "updated_at": "2019-05-03T09:13:35Z", "closed_at": "2019-05-03T08:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\n```\r\n[pid: 32738|app: 0|req: 9507/17121] 10.15.203.202 () {38 vars in 644 bytes} [Wed Apr  3 16:02:05 2019] GET /api/v2/redisservice/isdocker?ip=10.14.132.95&port=6379 => generated 179 bytes in 536 msecs (HTTP/1.1 200) 2 headers in 88 bytes (1 switches on core 11)\r\nERROR 2019-04-03 16:02:06,163 __init__ 32738 139774123824896 Exception during timing of request\r\nTraceback (most recent call last):\r\n  File \"/var/www/cdportal/shared/venv/lib/python2.7/site-packages/elasticapm/contrib/django/middleware/__init__.py\", line 170, in process_response\r\n    if self.client.config.django_transaction_name_from_route and hasattr(request.resolver_match, \"route\"):\r\nAttributeError: 'Config' object has no attribute 'django_transaction_name_from_route'\r\n```\r\n\r\n**Environment (please complete the following information)**\r\n- OS: [e.g. Linux]\r\n- Python version: 2.7.5\r\n- Framework and version [e.g. Django 2.1]: Django 1.9\r\n- APM Server version: 4.1.0\r\n- Agent version:\r\nLinux version 3.10.0-327.36.3.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) ) elastic/apm-agent-python#1 SMP Mon Oct 24 16:09:20 UTC 2016\r\n\r\n**Additional context**\r\n\r\nHere is my `uwsgi.ini`\r\n```\r\n[uwsgi]\r\nuid = cdportal\r\ngid = cdportal\r\npidfile = /var/run/uwsgi/uwsgi.pid\r\n# stats = /var/run/uwsgi/stats.sock\r\ncap = setgid, setuid\r\nchdir = /var/www/cdportal/current/backend\r\nmodule = cdportal.wsgi:application\r\nmaster = True\r\nvacuum = True\r\nmax-requests = 1000\r\ndaemonize = /var/log/uwsgi/cdportal.log\r\nsocket = 127.0.0.1:49152\r\nworkers = 8\r\nthreads = 30\r\nlisten = 1024\r\nenable-threads = True\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/441", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/441/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/441/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/441", "id": 426226604, "node_id": "MDU6SXNzdWU0MjYyMjY2MDQ=", "number": 441, "title": "Unable to run on uwsgi", "user": {"login": "cdvv7788", "id": 5531776, "node_id": "MDQ6VXNlcjU1MzE3NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5531776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdvv7788", "html_url": "https://github.com/cdvv7788", "followers_url": "https://api.github.com/users/cdvv7788/followers", "following_url": "https://api.github.com/users/cdvv7788/following{/other_user}", "gists_url": "https://api.github.com/users/cdvv7788/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdvv7788/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdvv7788/subscriptions", "organizations_url": "https://api.github.com/users/cdvv7788/orgs", "repos_url": "https://api.github.com/users/cdvv7788/repos", "events_url": "https://api.github.com/users/cdvv7788/events{/privacy}", "received_events_url": "https://api.github.com/users/cdvv7788/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 882569431, "node_id": "MDU6TGFiZWw4ODI1Njk0MzE=", "url": "https://api.github.com/repos/elastic/apm-agent-python/labels/[zube]:%20Done", "name": "[zube]: Done", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-27T23:27:26Z", "updated_at": "2020-02-18T11:37:50Z", "closed_at": "2020-02-18T10:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: Middleware not sending data to the server\r\n\r\n**To Reproduce**\r\n1. Setup a django project (2.0) with python 3.5\r\n2. Configure elastic-apm:\r\nService name is set, good job!\r\n  * optional SECRET_TOKEN not set\r\n\r\nSERVER_URL http://blablabla.com looks fine\r\n\r\nDEBUG mode is disabled! Looking good!\r\n\r\nTracing middleware is configured! Awesome!\r\n\r\nLooks like everything should be ready!\r\n\r\n**Expected behavior**: Metrics and transactions should be recorded in kibana dashboard. The test (python manage.py test) error is recorded successfully.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Ubuntu 16.04\r\n- Python version: 3.5\r\n- Framework and version [e.g. Django 2.1]: 2.0\r\n- APM Server version: 6.7.0\r\n- Agent version: 4.2.1\r\n\r\n\r\n**Additional context**\r\n\r\nAdd any other context about the problem here.\r\n\r\n- Agent config options <!-- be careful not to post sensitive information -->\r\n  <details>\r\nNothing out of the ordinary. In my settings, a dictionary with SERVER_URL (http) and SERVICE_NAME\r\n  </details>\r\n- `requirements.txt`:\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\namqp==2.4.2\r\nargon2-cffi==19.1.0\r\nBabel==2.6.0\r\nbilliard==3.5.0.5\r\nboto3==1.9.114\r\nbotocore==1.12.114\r\ncelery==4.2.2\r\ncertifi==2019.3.9\r\ncffi==1.12.2\r\nchardet==3.0.4\r\nCollectfast==0.6.2\r\ncoreapi==2.3.3\r\ncoreschema==0.0.4\r\ndefusedxml==0.5.0\r\nDjango==2.0.13\r\ndjango-allauth==0.38.0\r\ndjango-anymail==5.0\r\ndjango-crispy-forms==1.7.2\r\ndjango-environ==0.4.5\r\ndjango-model-utils==3.1.2\r\ndjango-redis==4.10.0\r\ndjango-storages==1.7.1\r\ndjangorestframework==3.9.1\r\ndocutils==0.14\r\nelastic-apm==4.2.1\r\nflower==0.9.2\r\ngunicorn==19.9.0\r\nidna==2.8\r\nitypes==1.1.0\r\nJinja2==2.10\r\njmespath==0.9.4\r\nkombu==4.3.0\r\nMarkupSafe==1.1.1\r\noauthlib==3.0.1\r\nPillow==5.4.1\r\npkg-resources==0.0.0\r\npsutil==5.6.1\r\npsycopg2==2.7.4\r\npycparser==2.19\r\npython-dateutil==2.8.0\r\npython-slugify==2.0.1\r\npython3-openid==3.1.0\r\npytz==2018.9\r\npyzmq==16.0.4\r\nredis==2.10.6\r\nrequests==2.21.0\r\nrequests-oauthlib==1.2.0\r\ns3transfer==0.2.0\r\nsix==1.12.0\r\ntornado==4.5.3\r\nUnidecode==1.0.23\r\nuritemplate==3.0.0\r\nurllib3==1.24.1\r\nvine==1.3.0\r\n    ```\r\n  </details>\r\n\r\nEdit:\r\nI was able to send data to the apm-server using django's dev server, so the issue is not there. I am trying to check if there is an issue with uwsgi. I enabled threads, as mentioned in the docs, but still no luck:\r\nThu Mar 28 02:16:41 2019 - Python main interpreter initialized at 0x1f7f750\r\nThu Mar 28 02:16:41 2019 - python threads support enabled\r\nThu Mar 28 02:16:41 2019 - your server socket listen backlog is limited to 100 connections\r\nThu Mar 28 02:16:41 2019 - your mercy for graceful operations on workers is 60 seconds\r\nThu Mar 28 02:16:41 2019 - mapped 166144 bytes (162 KB) for 2 cores\r\nThu Mar 28 02:16:41 2019 - *** Operational MODE: threaded ***", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/440", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/440/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/440/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/440", "id": 426130407, "node_id": "MDU6SXNzdWU0MjYxMzA0MDc=", "number": 440, "title": "apm agent v. 4.2.1 only collects metrics, not transactions, for flask >= 1.x", "user": {"login": "digressionary", "id": 30506653, "node_id": "MDQ6VXNlcjMwNTA2NjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/30506653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digressionary", "html_url": "https://github.com/digressionary", "followers_url": "https://api.github.com/users/digressionary/followers", "following_url": "https://api.github.com/users/digressionary/following{/other_user}", "gists_url": "https://api.github.com/users/digressionary/gists{/gist_id}", "starred_url": "https://api.github.com/users/digressionary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digressionary/subscriptions", "organizations_url": "https://api.github.com/users/digressionary/orgs", "repos_url": "https://api.github.com/users/digressionary/repos", "events_url": "https://api.github.com/users/digressionary/events{/privacy}", "received_events_url": "https://api.github.com/users/digressionary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-27T18:53:52Z", "updated_at": "2019-10-23T14:20:27Z", "closed_at": "2019-04-08T14:27:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\n\r\nThe APM agent for python + flask reports only metrics, not transactions or spans or errors, for flask >= 1.x\r\n\r\nSetup:\r\nAPM Server: v 6.6.0\r\npython v 3.7.2\r\nflask v 1.0.2\r\npython apm agent v 4.2.1 (latest)\r\n\r\n**To Reproduce**\r\n\r\n1. follow the docs here: https://www.elastic.co/guide/en/apm/agent/python/3.x/configuration.html\r\n\r\n2. set up app as follows:\r\n`app.config['ELASTIC_APM'] = {\r\n    'SERVICE_NAME' : os.getenv('ELASTIC_APM_SERVICE_NAME'),\r\n    'SECRET_TOKEN' : os.getenv('ELASTIC_APM_TOKEN'),\r\n    'SERVER_URL' : os.getenv('ELASTIC_APM_SERVER_URL'),\r\n    'CAPTURE_BODY' : 'all',\r\n    'TRANSACTION_SAMPLE_RATE' : os.getenv('ELASTIC_APM_TRANSACTION_SAMPLE_RATE')\r\n}\r\napm = ElasticAPM(app)`\r\n\r\n3. make a request to the app and look in the apm-* index for new records\r\n\r\n**Expected behavior**: ...\r\nMetrics, transactions, spans and errors all received and logged\r\n\r\n**Environment (please complete the following information)**\r\n- OS: mac osx Sierra / docker desktop with k8s v 1.13.0\r\n- Python version: 3.7.2\r\n- Framework and version Flask 1.0.2\r\n- APM Server version: 6.6.x\r\n- Agent version: 4.2.1\r\n\r\n\r\n**Additional context**\r\n\r\nIt works fine if I downgrade my Flask to < 1.x (e.g. 0.11)\r\nHere is an example of the type of document that IS created:\r\n[bug_report_example_doc.txt](https://github.com/elastic/apm-agent-python/files/3014824/bug_report_example_doc.txt)\r\n\r\n- Agent config options <!-- be careful not to post sensitive information -->\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n    config as above\r\n    ```\r\n  </details>\r\n- `requirements.txt`:\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n    Flask flask-cors nose -e git+https://github.com/vemba/m3u8.git@ad-marker-support#egg=m3u8 redis gunicorn>=19,<20 Flask-PyMongo boto3 requests elastic-apm[flask]\r\n    ```\r\n  </details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/439", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/439/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/439/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/439", "id": 426120447, "node_id": "MDU6SXNzdWU0MjYxMjA0NDc=", "number": 439, "title": "support flask > 1.x", "user": {"login": "digressionary", "id": 30506653, "node_id": "MDQ6VXNlcjMwNTA2NjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/30506653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digressionary", "html_url": "https://github.com/digressionary", "followers_url": "https://api.github.com/users/digressionary/followers", "following_url": "https://api.github.com/users/digressionary/following{/other_user}", "gists_url": "https://api.github.com/users/digressionary/gists{/gist_id}", "starred_url": "https://api.github.com/users/digressionary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digressionary/subscriptions", "organizations_url": "https://api.github.com/users/digressionary/orgs", "repos_url": "https://api.github.com/users/digressionary/repos", "events_url": "https://api.github.com/users/digressionary/events{/privacy}", "received_events_url": "https://api.github.com/users/digressionary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-27T18:30:51Z", "updated_at": "2019-04-09T13:32:57Z", "closed_at": "2019-04-08T14:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nElastic APM agent for python does not report data when flask >= 1.x\r\n(as the documentation indicates, it should not work, so this is not a bug)\r\n\r\n**Describe the solution you'd like**\r\nAdd support for flask >= 1.x\r\n\r\n**Additional context**\r\nI could not find any reference to this in open issues, wanted to know if it is scheduled on the roadmap and if so, how soon?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/437", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/437/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/437/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/437", "id": 424610783, "node_id": "MDU6SXNzdWU0MjQ2MTA3ODM=", "number": 437, "title": "Random Connection reset error After upgrading agent from 3.x to 4.x", "user": {"login": "naveen-tenmiles", "id": 26060626, "node_id": "MDQ6VXNlcjI2MDYwNjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/26060626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naveen-tenmiles", "html_url": "https://github.com/naveen-tenmiles", "followers_url": "https://api.github.com/users/naveen-tenmiles/followers", "following_url": "https://api.github.com/users/naveen-tenmiles/following{/other_user}", "gists_url": "https://api.github.com/users/naveen-tenmiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/naveen-tenmiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naveen-tenmiles/subscriptions", "organizations_url": "https://api.github.com/users/naveen-tenmiles/orgs", "repos_url": "https://api.github.com/users/naveen-tenmiles/repos", "events_url": "https://api.github.com/users/naveen-tenmiles/events{/privacy}", "received_events_url": "https://api.github.com/users/naveen-tenmiles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-24T13:04:52Z", "updated_at": "2019-05-03T09:13:34Z", "closed_at": "2019-05-03T08:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: ...\r\n\r\nServer timeout from django wsgi api, This issue happens once i upgraded the python client from \r\n\r\n**To Reproduce**\r\n\r\n1. APM server 6.6.2\r\n2. Apm client versions (4.1.0, 4.2.0,4.2.1)\r\n\r\n**Expected behavior**: No errors\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Linux ubuntu 18.04\r\n- Python version: 2.7.15\r\n- Framework and version [e.g. Django 2.1]: Django 1.11\r\n- APM Server version: 6.6.2\r\n- Agent version: 4.1.0, 4.2.0,4.2.1\r\n\r\n\r\n**Additional context**\r\n\r\n```\r\nValueError: close timed out\r\n  File \"elasticapm/utils/compat.py\", line 65, in uwsgi_atexit\r\n    func()\r\n  File \"elasticapm/base.py\", line 236, in close\r\n    self._transport.close()\r\n  File \"elasticapm/transport/base.py\", line 290, in close\r\n    super(AsyncTransport, self).close()\r\n  File \"elasticapm/transport/base.py\", line 238, in close\r\n    raise ValueError(\"close timed out\")\r\n```\r\n\r\nAfter upgrading agent to v4.2.1 below error also occurs.\r\n\r\n```\r\nRuntimeError: cannot join thread before it is started\r\n  File \"django/http/response.py\", line 264, in close\r\n    signals.request_finished.send(sender=self._handler_class)\r\n  File \"django/dispatch/dispatcher.py\", line 193, in send\r\n    for receiver in self._live_receivers(sender)\r\n  File \"elasticapm/contrib/django/apps.py\", line 50, in <lambda>\r\n    lambda sender, **kwargs: client.end_transaction() if _should_start_transaction(client) else None,\r\n  File \"elasticapm/base.py\", line 260, in end_transaction\r\n    self._collect_transactions()\r\n  File \"elasticapm/base.py\", line 298, in _collect_transactions\r\n    self._stop_send_timer()\r\n  File \"elasticapm/base.py\", line 323, in _stop_send_timer\r\n    self._send_timer.join()\r\n  File \"python2.7/threading.py\", line 929, in join\r\n    raise RuntimeError(\"cannot join thread before it is started\")\r\n```\r\n\r\n**Note:** I tried increasing read/write timeout to 45s but doesn't help.\r\n\r\n```\r\n  # Maximum permitted duration for reading an entire request.\r\n  read_timeout: 45s\r\n  # Maximum permitted duration for writing a response.\r\n  write_timeout: 45s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/436", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/436/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/436/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/436", "id": 423781295, "node_id": "MDU6SXNzdWU0MjM3ODEyOTU=", "number": 436, "title": "AttributeError: 'ChilledQueue' object has no attribute 'not_full'", "user": {"login": "ddemid", "id": 1083413, "node_id": "MDQ6VXNlcjEwODM0MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1083413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddemid", "html_url": "https://github.com/ddemid", "followers_url": "https://api.github.com/users/ddemid/followers", "following_url": "https://api.github.com/users/ddemid/following{/other_user}", "gists_url": "https://api.github.com/users/ddemid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddemid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddemid/subscriptions", "organizations_url": "https://api.github.com/users/ddemid/orgs", "repos_url": "https://api.github.com/users/ddemid/repos", "events_url": "https://api.github.com/users/ddemid/events{/privacy}", "received_events_url": "https://api.github.com/users/ddemid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-21T15:09:47Z", "updated_at": "2019-03-26T14:31:42Z", "closed_at": "2019-03-22T06:50:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Client v.4.2.0 fails in celery 4.0 with `AttributeError: 'ChilledQueue' object has no attribute 'not_full'`\r\n\r\n`File \"/usr/local/lib/python3.5/site-packages/elasticapm/transport/base.py\", line 331, in put`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/elastic/apm-agent-python/issues/433", "repository_url": "https://api.github.com/repos/elastic/apm-agent-python", "labels_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/433/comments", "events_url": "https://api.github.com/repos/elastic/apm-agent-python/issues/433/events", "html_url": "https://github.com/elastic/apm-agent-python/issues/433", "id": 423312982, "node_id": "MDU6SXNzdWU0MjMzMTI5ODI=", "number": 433, "title": "os.access required argument error checking if pinned cert is readable", "user": {"login": "chrisrink10", "id": 5423242, "node_id": "MDQ6VXNlcjU0MjMyNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5423242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrink10", "html_url": "https://github.com/chrisrink10", "followers_url": "https://api.github.com/users/chrisrink10/followers", "following_url": "https://api.github.com/users/chrisrink10/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrink10/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrink10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrink10/subscriptions", "organizations_url": "https://api.github.com/users/chrisrink10/orgs", "repos_url": "https://api.github.com/users/chrisrink10/repos", "events_url": "https://api.github.com/users/chrisrink10/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrink10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-20T15:21:27Z", "updated_at": "2019-03-26T14:31:41Z", "closed_at": "2019-03-21T13:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**: \r\n\r\nI just started trying to deploying the certificate pinning feature released in 4.2.0 (#405) which I was super excited about (!). However, I found that there is a bug in [the validation for the supplied CA bundle](https://github.com/elastic/apm-agent-python/blob/master/elasticapm/conf/__init__.py#L175). Specifically, [`os.access`](https://docs.python.org/3.6/library/os.html#os.access) requires a `mode` argument (and it appears to have required this argument all the way back to [2.7](https://docs.python.org/2.7/library/os.html#os.access)), but one is not supplied.\r\n\r\n**To Reproduce**\r\n\r\n1. Start Python service (mine is Django) instrumented with Elastic APM and specify a custom CA certificate via `SERVER_CERT` config.\r\n2. See error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/celery\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/__main__.py\", line 16, in main\r\n    _main()\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/celery.py\", line 322, in main\r\n    cmd.execute_from_commandline(argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/celery.py\", line 496, in execute_from_commandline\r\n    super(CeleryCommand, self).execute_from_commandline(argv)))\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/base.py\", line 294, in execute_from_commandline\r\n    return self.handle_argv(self.prog_name, argv[1:])\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/celery.py\", line 488, in handle_argv\r\n    return self.execute(command, argv)\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/celery.py\", line 420, in execute\r\n    ).run_from_argv(self.prog_name, argv[1:], command=argv[0])\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/worker.py\", line 223, in run_from_argv\r\n    return self(*args, **options)\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/base.py\", line 248, in __call__\r\n    ret = self.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/bin/worker.py\", line 257, in run\r\n    **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/worker/worker.py\", line 96, in __init__\r\n    self.app.loader.init_worker()\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/loaders/base.py\", line 114, in init_worker\r\n    self.import_default_modules()\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/loaders/base.py\", line 108, in import_default_modules\r\n    raise response\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/utils/dispatch/signal.py\", line 288, in send\r\n    response = receiver(signal=self, sender=sender, **named)\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/fixups/django.py\", line 84, in on_import_modules\r\n    self.worker_fixup.validate_models()\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/fixups/django.py\", line 122, in validate_models\r\n    self.django_setup()\r\n  File \"/usr/local/lib/python3.6/site-packages/celery/fixups/django.py\", line 118, in django_setup\r\n    django.setup()\r\n  File \"/usr/local/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/apps/registry.py\", line 120, in populate\r\n    app_config.ready()\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/contrib/django/apps.py\", line 60, in ready\r\n    self.client = get_client()\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/contrib/django/client.py\", line 73, in get_client\r\n    instance = client_class()\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/contrib/django/client.py\", line 89, in __init__\r\n    super(DjangoClient, self).__init__(config, **inline)\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/base.py\", line 98, in __init__\r\n    self.config = Config(config, inline_dict=inline)\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/conf/__init__.py\", line 208, in __init__\r\n    setattr(self, field, new_value)\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/conf/__init__.py\", line 66, in __set__\r\n    value = self._validate(instance, value)\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/conf/__init__.py\", line 78, in _validate\r\n    value = validator(value, self.dict_key)\r\n  File \"/usr/local/lib/python3.6/site-packages/elasticapm/conf/__init__.py\", line 175, in __call__\r\n    elif not os.access(value):\r\nTypeError: Required argument 'mode' (pos 2) not found\r\n```\r\n\r\n**Expected behavior**: App starts up.\r\n\r\n**Environment (please complete the following information)**\r\n- OS: Amazon Linux (using Docker image `python:3.6-slim-stretch`)\r\n- Python version: 3.6.x\r\n- Framework and version: Django 2.1.7\r\n- APM Server version: n/a\r\n- Agent version: 4.2.0\r\n\r\n**Additional context**\r\n\r\n- Agent config options (these env vars are set into the corresponding settings in a Django `settings.py`)\r\n  <details>\r\n\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n      AZ_ELASTIC_APM_SERVER_URL:    https://apm-server:8200\r\n      AZ_ELASTIC_APM_SERVER_CA:     /etc/ssl/certs/staging.ca.pem\r\n      AZ_ELASTIC_APM_SECRET_TOKEN:  ...\r\n      AZ_ELASTIC_APM_ENVIRONMENT:   staging\r\n      AZ_ELASTIC_APM_SERVICE_NAME:  ...\r\n    ```\r\n  </details>\r\n- `requirements.txt`:\r\n  <details>\r\n    <summary>Click to expand</summary>\r\n\r\n    ```\r\n    n/a\r\n    ```\r\n  </details>\r\n", "performed_via_github_app": null, "score": 1.0}]}