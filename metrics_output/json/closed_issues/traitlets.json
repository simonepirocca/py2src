{"total_count": 130, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ipython/traitlets/issues/620", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/620/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/620/events", "html_url": "https://github.com/ipython/traitlets/issues/620", "id": 693861386, "node_id": "MDU6SXNzdWU2OTM4NjEzODY=", "number": 620, "title": "Traitlets 5 uses f-strings in code, not compatible with Python 3.5", "user": {"login": "haosong-didi", "id": 70783598, "node_id": "MDQ6VXNlcjcwNzgzNTk4", "avatar_url": "https://avatars3.githubusercontent.com/u/70783598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haosong-didi", "html_url": "https://github.com/haosong-didi", "followers_url": "https://api.github.com/users/haosong-didi/followers", "following_url": "https://api.github.com/users/haosong-didi/following{/other_user}", "gists_url": "https://api.github.com/users/haosong-didi/gists{/gist_id}", "starred_url": "https://api.github.com/users/haosong-didi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haosong-didi/subscriptions", "organizations_url": "https://api.github.com/users/haosong-didi/orgs", "repos_url": "https://api.github.com/users/haosong-didi/repos", "events_url": "https://api.github.com/users/haosong-didi/events{/privacy}", "received_events_url": "https://api.github.com/users/haosong-didi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-09-05T00:41:16Z", "updated_at": "2020-09-07T07:51:25Z", "closed_at": "2020-09-07T07:51:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Issue Description\r\nI use Python 3.5, and when I \"pip3 install notebook\" for Jupyter notebooks, latest version traitlets (5.0.3) got installed, which uses f-string syntax in some code, resulting in a failure when I try to launch a Jupyter notebook server.\r\n```\r\n$ jupyter notebook\r\nTraceback (most recent call last):\r\n  File \"/home/luban/.local/bin/jupyter-notebook\", line 7, in <module>\r\n    from notebook.notebookapp import main\r\n  File \"/home/luban/.local/lib/python3.5/site-packages/notebook/__init__.py\", line 27, in <module>\r\n    from .nbextensions import install_nbextension\r\n  File \"/home/luban/.local/lib/python3.5/site-packages/notebook/nbextensions.py\", line 26, in <module>\r\n    from .config_manager import BaseJSONConfigManager\r\n  File \"/home/luban/.local/lib/python3.5/site-packages/notebook/config_manager.py\", line 14, in <module>\r\n    from traitlets.config import LoggingConfigurable\r\n  File \"/home/luban/.local/lib/python3.5/site-packages/traitlets/__init__.py\", line 3, in <module>\r\n    from . import traitlets\r\n  File \"/home/luban/.local/lib/python3.5/site-packages/traitlets/traitlets.py\", line 1781\r\n    return repr(f'{value.__module__}.{value.__name__}')\r\n                                                     ^\r\nSyntaxError: invalid syntax\r\n```\r\nI had to manually uninstall the traitlets 5.0.3 version, and install 4.3.3 version to resolve this issue.\r\n\r\n### Proposed Solution\r\nMark version 5.x as incompatible with Python 3.5 in PyPI registry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/614", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/614/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/614/events", "html_url": "https://github.com/ipython/traitlets/issues/614", "id": 692740486, "node_id": "MDU6SXNzdWU2OTI3NDA0ODY=", "number": 614, "title": "Can't pass multiple ipython extensions via command line arguments", "user": {"login": "ashkop", "id": 809148, "node_id": "MDQ6VXNlcjgwOTE0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/809148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashkop", "html_url": "https://github.com/ashkop", "followers_url": "https://api.github.com/users/ashkop/followers", "following_url": "https://api.github.com/users/ashkop/following{/other_user}", "gists_url": "https://api.github.com/users/ashkop/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashkop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashkop/subscriptions", "organizations_url": "https://api.github.com/users/ashkop/orgs", "repos_url": "https://api.github.com/users/ashkop/repos", "events_url": "https://api.github.com/users/ashkop/events{/privacy}", "received_events_url": "https://api.github.com/users/ashkop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-09-04T05:33:41Z", "updated_at": "2020-09-04T08:49:21Z", "closed_at": "2020-09-04T08:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since traitlets upgrade to 5.0.0 when I try to launch ipython with these command line options:\r\n```\r\nipython --ext django_extensions.management.notebook_extension --ext my.custom.extension\r\n```\r\nIt fails with error:\r\n```\r\n[TerminalIPythonApp] CRITICAL | Bad config encountered during initialization: Invalid argument: 'TerminalIPythonApp.extra_extension=DeferredConfigList(['django_extensions.management.notebook_extension', 'my.custom.extension\r\n`'])'\r\n```\r\n\r\nIt works fine on version 4.3.3. I'm not sure if that's a regression or new expected behavior. As you can see here https://django-extensions.readthedocs.io/en/latest/shell_plus.html#ipython-notebook `django-extensions` library expected it to work when you specify two `--ext` options.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/612", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/612/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/612/events", "html_url": "https://github.com/ipython/traitlets/issues/612", "id": 691311103, "node_id": "MDU6SXNzdWU2OTEzMTExMDM=", "number": 612, "title": "Passing None on the command line", "user": {"login": "maartenbreddels", "id": 1765949, "node_id": "MDQ6VXNlcjE3NjU5NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1765949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maartenbreddels", "html_url": "https://github.com/maartenbreddels", "followers_url": "https://api.github.com/users/maartenbreddels/followers", "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}", "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}", "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions", "organizations_url": "https://api.github.com/users/maartenbreddels/orgs", "repos_url": "https://api.github.com/users/maartenbreddels/repos", "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}", "received_events_url": "https://api.github.com/users/maartenbreddels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-09-02T18:36:41Z", "updated_at": "2020-09-03T16:20:59Z", "closed_at": "2020-09-03T16:20:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "cc @SylvainCorlay \r\n\r\nHi all,\r\n\r\ncongrats with the 5.0 release! But with all big releases come bugs :)\r\n\r\nIn voila we used to pass to a Unicode config a None value by using\r\n```\r\n$ voila --template=None\r\n```\r\nWith traitlets 5, this becomes the string 'None'. Any falsy would work for us, but it also does not seem possible to pass an empty string.\r\n\r\nAny ideas for workaround, or would this require a fix?\r\n\r\ncheers,\r\n\r\nMaarten\r\n\r\n\r\nRelated voila PR: https://github.com/voila-dashboards/voila/pull/691\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/610", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/610/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/610/events", "html_url": "https://github.com/ipython/traitlets/issues/610", "id": 690854527, "node_id": "MDU6SXNzdWU2OTA4NTQ1Mjc=", "number": 610, "title": "Please tag 5.0.0 on GitHub", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-02T09:10:25Z", "updated_at": "2020-09-02T18:25:37Z", "closed_at": "2020-09-02T18:25:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I see 5.0.0 on PyPI but not tagged here on GitHub. Could you please do that? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/609", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/609/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/609/events", "html_url": "https://github.com/ipython/traitlets/issues/609", "id": 690327875, "node_id": "MDU6SXNzdWU2OTAzMjc4NzU=", "number": 609, "title": "`ValueError: Multiply defined option: hist_file` when running jupyter nbconvert on 5.0.0", "user": {"login": "csala", "id": 6129283, "node_id": "MDQ6VXNlcjYxMjkyODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6129283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csala", "html_url": "https://github.com/csala", "followers_url": "https://api.github.com/users/csala/followers", "following_url": "https://api.github.com/users/csala/following{/other_user}", "gists_url": "https://api.github.com/users/csala/gists{/gist_id}", "starred_url": "https://api.github.com/users/csala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csala/subscriptions", "organizations_url": "https://api.github.com/users/csala/orgs", "repos_url": "https://api.github.com/users/csala/repos", "events_url": "https://api.github.com/users/csala/events{/privacy}", "received_events_url": "https://api.github.com/users/csala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-09-01T17:41:54Z", "updated_at": "2020-09-06T08:35:14Z", "closed_at": "2020-09-06T08:35:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Problem Description\r\n\r\nAfter the `traitlets==5.0.0` release, `jupyter nbconvert --execute` crashes with the error `ValueError: Multiply defined option: hist_file` when passing multiple `.ipynb` files as input.\r\n\r\nIf `traitlets` is downgraded to 4.3.3, everything works fine.\r\n\r\n## Steps to reproduce\r\n\r\n1. Install `jupyter` and `traitlets==5.0.0`.\r\n2. Create two notebooks. They can be two empty notebooks.\r\n3. Run `jupyter nbconvert --execute` passing the two notebooks or more.\r\n4. The first notebook will run without issues and the second one will crash, no matter the order in which they are run.\r\n\r\n```\r\n$ python --version\r\nPython 3.7.8\r\n$ pip freeze | egrep 'traitlets|jupyter'\r\njupyter==1.0.0\r\njupyter-client==6.1.7\r\njupyter-console==6.2.0\r\njupyter-core==4.6.3\r\ntraitlets==5.0.0\r\n$ jupyter nbconvert --execute Untitled.ipynb Untitled2.ipynb \r\n[NbConvertApp] Converting notebook Untitled.ipynb to html\r\n[NbConvertApp] Executing notebook with kernel: python3\r\n[NbConvertApp] Writing 271690 bytes to Untitled.html\r\n[NbConvertApp] Converting notebook Untitled2.ipynb to html\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/application.py\", line 837, in launch_instance\r\n    app.initialize(argv)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/application.py\", line 86, in inner\r\n    return method(app, *args, **kwargs)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/ipykernel/kernelapp.py\", line 582, in initialize\r\n    self.init_kernel()\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/ipykernel/kernelapp.py\", line 452, in init_kernel\r\n    user_ns=self.user_ns,\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/configurable.py\", line 510, in instance\r\n    inst = cls(*args, **kwargs)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/ipykernel/ipkernel.py\", line 68, in __init__\r\n    kernel      = self,\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/configurable.py\", line 510, in instance\r\n    inst = cls(*args, **kwargs)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 661, in __init__\r\n    self.init_history()\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 1802, in init_history\r\n    self.history_manager = HistoryManager(shell=self, parent=self)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/IPython/core/history.py\", line 537, in __init__\r\n    **traits)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/IPython/core/history.py\", line 214, in __init__\r\n    super(HistoryAccessor, self).__init__(**traits)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/configurable.py\", line 101, in __init__\r\n    self.config = config\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/traitlets.py\", line 602, in __set__\r\n    self.set(obj, value)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/traitlets.py\", line 591, in set\r\n    obj._notify_trait(self.name, old_value, new_value)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/traitlets.py\", line 1220, in _notify_trait\r\n    type='change',\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/traitlets.py\", line 1225, in notify_change\r\n    return self._notify_observers(change)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/traitlets.py\", line 1262, in _notify_observers\r\n    c(event)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/traitlets.py\", line 886, in compatible_observer\r\n    return func(self, change)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/configurable.py\", line 205, in _config_changed\r\n    self._load_config(change.new, traits=traits, section_names=section_names)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/configurable.py\", line 168, in _load_config\r\n    config_value = config_value.get_value(traits[name])\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/loader.py\", line 426, in get_value\r\n    raise ValueError(\"Multiply defined option: %s\" % trait.name)\r\nValueError: Multiply defined option: hist_file\r\nTraceback (most recent call last):\r\n  File \"/home/xals/.virtualenvs/test-traitlets/bin/jupyter-nbconvert\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/jupyter_core/application.py\", line 270, in launch_instance\r\n    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/traitlets/config/application.py\", line 838, in launch_instance\r\n    app.start()\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/nbconvertapp.py\", line 340, in start\r\n    self.convert_notebooks()\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/nbconvertapp.py\", line 510, in convert_notebooks\r\n    self.convert_single_notebook(notebook_filename)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/nbconvertapp.py\", line 481, in convert_single_notebook\r\n    output, resources = self.export_single_notebook(notebook_filename, resources, input_buffer=input_buffer)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/nbconvertapp.py\", line 410, in export_single_notebook\r\n    output, resources = self.exporter.from_filename(notebook_filename, resources=resources)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/exporters/exporter.py\", line 179, in from_filename\r\n    return self.from_file(f, resources=resources, **kw)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/exporters/exporter.py\", line 197, in from_file\r\n    return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/exporters/html.py\", line 95, in from_notebook_node\r\n    return super(HTMLExporter, self).from_notebook_node(nb, resources, **kw)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/exporters/templateexporter.py\", line 307, in from_notebook_node\r\n    nb_copy, resources = super(TemplateExporter, self).from_notebook_node(nb, resources, **kw)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/exporters/exporter.py\", line 139, in from_notebook_node\r\n    nb_copy, resources = self._preprocess(nb_copy, resources)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/exporters/exporter.py\", line 316, in _preprocess\r\n    nbc, resc = preprocessor(nbc, resc)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/preprocessors/base.py\", line 47, in __call__\r\n    return self.preprocess(nb, resources)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py\", line 403, in preprocess\r\n    with self.setup_preprocessor(nb, resources, km=km):\r\n  File \"/usr/lib/python3.7/contextlib.py\", line 112, in __enter__\r\n    return next(self.gen)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py\", line 345, in setup_preprocessor\r\n    self.km, self.kc = self.start_new_kernel(**kwargs)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/nbconvert/preprocessors/execute.py\", line 296, in start_new_kernel\r\n    kc.wait_for_ready(timeout=self.startup_timeout)\r\n  File \"/home/xals/.virtualenvs/test-traitlets/lib/python3.7/site-packages/jupyter_client/blocking/client.py\", line 104, in wait_for_ready\r\n    raise RuntimeError('Kernel died before replying to kernel_info')\r\nRuntimeError: Kernel died before replying to kernel_info\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/608", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/608/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/608/events", "html_url": "https://github.com/ipython/traitlets/issues/608", "id": 690278375, "node_id": "MDU6SXNzdWU2OTAyNzgzNzU=", "number": 608, "title": "5.0.0 fails to parse args", "user": {"login": "POD666", "id": 5798108, "node_id": "MDQ6VXNlcjU3OTgxMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5798108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/POD666", "html_url": "https://github.com/POD666", "followers_url": "https://api.github.com/users/POD666/followers", "following_url": "https://api.github.com/users/POD666/following{/other_user}", "gists_url": "https://api.github.com/users/POD666/gists{/gist_id}", "starred_url": "https://api.github.com/users/POD666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/POD666/subscriptions", "organizations_url": "https://api.github.com/users/POD666/orgs", "repos_url": "https://api.github.com/users/POD666/repos", "events_url": "https://api.github.com/users/POD666/events{/privacy}", "received_events_url": "https://api.github.com/users/POD666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-09-01T16:19:23Z", "updated_at": "2020-09-07T07:19:56Z", "closed_at": "2020-09-07T07:19:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nLooks like you are about to release `5.0.0` but it already gets fetched by `jupyter` :\r\n```shell\r\ndocker run --rm -it python:3.7 bash\r\n$ pip install jupyter\r\n...\r\nCollecting traitlets>=4.2\r\n  Downloading traitlets-5.0.0-py3-none-any.whl (97 kB)\r\n...\r\n```\r\nAnd leads to an exception in my tests, you may try to reproduce with:\r\n```\r\n$ python\r\n>> from nbconvert import nbconvertapp\r\n>> nbconvertapp.main([\"nbconvert\", \"--output\", \"/tmp/qwe.txt\", \"simple-py36.ipynb\"])\r\n...\r\n: error: unrecognized arguments: simple-py36.ipynb\r\n...\r\n```\r\nI have fixed it by pinning to `traitlets>=4.2,<5.0.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/606", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/606/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/606/events", "html_url": "https://github.com/ipython/traitlets/issues/606", "id": 688712216, "node_id": "MDU6SXNzdWU2ODg3MTIyMTY=", "number": 606, "title": "consider allowing logging.LoggingAdapter to be a LoggingConfigurable.log", "user": {"login": "akhmerov", "id": 2069677, "node_id": "MDQ6VXNlcjIwNjk2Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2069677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhmerov", "html_url": "https://github.com/akhmerov", "followers_url": "https://api.github.com/users/akhmerov/followers", "following_url": "https://api.github.com/users/akhmerov/following{/other_user}", "gists_url": "https://api.github.com/users/akhmerov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhmerov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhmerov/subscriptions", "organizations_url": "https://api.github.com/users/akhmerov/orgs", "repos_url": "https://api.github.com/users/akhmerov/repos", "events_url": "https://api.github.com/users/akhmerov/events{/privacy}", "received_events_url": "https://api.github.com/users/akhmerov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/11", "html_url": "https://github.com/ipython/traitlets/milestone/11", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/11/labels", "id": 1992998, "node_id": "MDk6TWlsZXN0b25lMTk5Mjk5OA==", "number": 11, "title": "5.1", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 7, "closed_issues": 7, "state": "open", "created_at": "2016-09-09T09:37:32Z", "updated_at": "2020-09-07T22:26:05Z", "due_on": null, "closed_at": null}, "comments": 4, "created_at": "2020-08-30T12:42:04Z", "updated_at": "2020-09-07T22:26:05Z", "closed_at": "2020-09-07T22:26:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Sphinx uses `logging.LoggingAdapter` as its own logger, while nbconvert classes all inherit from traitlets `LoggingConfigurable`, and require the `log` trait to be a `logging.Logger`. This prevents passing sphinx logger to nbconvert classes. At the same time, docs [state](https://docs.python.org/3/library/logging.html#logging.LoggerAdapter):\r\n\r\n> ...These methods have the same signatures as their counterparts in Logger, so you can use the two types of instances interchangeably.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/595", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/595/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/595/events", "html_url": "https://github.com/ipython/traitlets/issues/595", "id": 678532689, "node_id": "MDU6SXNzdWU2Nzg1MzI2ODk=", "number": 595, "title": "update the long description in setup.py", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2020-08-13T15:34:04Z", "updated_at": "2020-08-18T16:12:42Z", "closed_at": "2020-08-18T16:12:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/591", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/591/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/591/events", "html_url": "https://github.com/ipython/traitlets/issues/591", "id": 675529919, "node_id": "MDU6SXNzdWU2NzU1Mjk5MTk=", "number": 591, "title": "Warnings when running IPython", "user": {"login": "evandrix", "id": 169669, "node_id": "MDQ6VXNlcjE2OTY2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/169669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandrix", "html_url": "https://github.com/evandrix", "followers_url": "https://api.github.com/users/evandrix/followers", "following_url": "https://api.github.com/users/evandrix/following{/other_user}", "gists_url": "https://api.github.com/users/evandrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandrix/subscriptions", "organizations_url": "https://api.github.com/users/evandrix/orgs", "repos_url": "https://api.github.com/users/evandrix/repos", "events_url": "https://api.github.com/users/evandrix/events{/privacy}", "received_events_url": "https://api.github.com/users/evandrix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2020-08-08T14:01:06Z", "updated_at": "2020-08-11T18:21:14Z", "closed_at": "2020-08-11T18:21:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/usr/local/lib/python3.8/site-packages/traitlets/config/loader.py:795: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if len(key) is 1:\r\n/usr/local/lib/python3.8/site-packages/traitlets/config/loader.py:804: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if len(key) is 1:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/585", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/585/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/585/events", "html_url": "https://github.com/ipython/traitlets/issues/585", "id": 651207109, "node_id": "MDU6SXNzdWU2NTEyMDcxMDk=", "number": 585, "title": "Removing traits", "user": {"login": "jvail", "id": 6503378, "node_id": "MDQ6VXNlcjY1MDMzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6503378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvail", "html_url": "https://github.com/jvail", "followers_url": "https://api.github.com/users/jvail/followers", "following_url": "https://api.github.com/users/jvail/following{/other_user}", "gists_url": "https://api.github.com/users/jvail/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvail/subscriptions", "organizations_url": "https://api.github.com/users/jvail/orgs", "repos_url": "https://api.github.com/users/jvail/repos", "events_url": "https://api.github.com/users/jvail/events{/privacy}", "received_events_url": "https://api.github.com/users/jvail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T02:38:56Z", "updated_at": "2020-07-06T12:33:53Z", "closed_at": "2020-07-06T08:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using \"add_traits\" to dynamically add traits to my class. I was wondering what the recommended way of removing a trait is. A \"remove_trait\" method does not exist, it seems.\r\n\r\nThank you\r\nJan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/583", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/583/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/583/events", "html_url": "https://github.com/ipython/traitlets/issues/583", "id": 646277643, "node_id": "MDU6SXNzdWU2NDYyNzc2NDM=", "number": 583, "title": "Setting Byte image data from TypeScript", "user": {"login": "cabreraalex", "id": 4563691, "node_id": "MDQ6VXNlcjQ1NjM2OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4563691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cabreraalex", "html_url": "https://github.com/cabreraalex", "followers_url": "https://api.github.com/users/cabreraalex/followers", "following_url": "https://api.github.com/users/cabreraalex/following{/other_user}", "gists_url": "https://api.github.com/users/cabreraalex/gists{/gist_id}", "starred_url": "https://api.github.com/users/cabreraalex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cabreraalex/subscriptions", "organizations_url": "https://api.github.com/users/cabreraalex/orgs", "repos_url": "https://api.github.com/users/cabreraalex/repos", "events_url": "https://api.github.com/users/cabreraalex/events{/privacy}", "received_events_url": "https://api.github.com/users/cabreraalex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T13:50:33Z", "updated_at": "2020-07-03T14:06:30Z", "closed_at": "2020-07-02T20:16:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing a ipywidget that sends image data back and forth between the kernel and javascript frontend.\r\n\r\nWhile sending data to the frontend works, setting the model from the front-end fails silently. This is the call:\r\n\r\n```typescript\r\n        blb.arrayBuffer().then((arr: ArrayBuffer) => {\r\n          this.model.set(\"counterData\", Array.from(new Uint8Array(arr)));\r\n          this.model.save_changes();\r\n```\r\n\r\nIn contrast when I set the array to be a simple array it works perfectly:\r\n```typescript\r\n        blb.arrayBuffer().then((arr: ArrayBuffer) => {\r\n          this.model.set(\"counterData\", [1, 2, 3]);\r\n          this.model.save_changes();\r\n```\r\n\r\nAny thoughts on this issue or how to debug it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/581", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/581/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/581/events", "html_url": "https://github.com/ipython/traitlets/issues/581", "id": 644448841, "node_id": "MDU6SXNzdWU2NDQ0NDg4NDE=", "number": 581, "title": "Priority in notifications?", "user": {"login": "zerline", "id": 3509281, "node_id": "MDQ6VXNlcjM1MDkyODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3509281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerline", "html_url": "https://github.com/zerline", "followers_url": "https://api.github.com/users/zerline/followers", "following_url": "https://api.github.com/users/zerline/following{/other_user}", "gists_url": "https://api.github.com/users/zerline/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerline/subscriptions", "organizations_url": "https://api.github.com/users/zerline/orgs", "repos_url": "https://api.github.com/users/zerline/repos", "events_url": "https://api.github.com/users/zerline/events{/privacy}", "received_events_url": "https://api.github.com/users/zerline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-24T09:06:34Z", "updated_at": "2020-09-06T08:48:09Z", "closed_at": "2020-09-06T08:48:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is their a way to set priorities between notifications, for example a link and an observer?**\r\n\r\n----\r\nHi\r\n\r\nsage_combinat_widgets is a set of widgets to represent mathematical objects graphically and interactively. Until now, all the widgets are grid-like, with individual elements, or `cells`, as buttons or text inputs.\r\n\r\nHere is one of the example notebooks. Set up `dominos` on a graph, then implement an algorithm to flip all the dominos. This is what you can see on:\r\n\r\nhttps://mybinder.org/v2/gh/sagemath/sage-combinat-widgets/develop?filepath=examples/FlippingDominos.ipynb\r\n\r\nYet to be able to reproduce this algorithm manually is the way mathematicians would like to explore things on widgets. And this task has been tough.\r\n\r\nIn the python code (https://github.com/sagemath/sage-combinat-widgets/blob/develop/examples/dominos/flipping_dominos.py), there's a method called `set_cell()` with an observer on it. This method is called whenever a cell is  pressed on the notebook. A flip happens when 2 neighboring dominos are pressed. The difficult issue is a conflict between the domino link (that links 2 cells to each other to make up a domino) and the notifications made by the observer, leading to infinite loops. Things would be easier if the domino link could take effect _before_ the observed method is called. But the domino link only does its job after the observed method is done entirely.\r\n\r\nHow priorities are they dealt with? Is there a way for users to decide on their own priorities?\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/580", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/580/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/580/events", "html_url": "https://github.com/ipython/traitlets/issues/580", "id": 644017387, "node_id": "MDU6SXNzdWU2NDQwMTczODc=", "number": 580, "title": "5.0 Blocker", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T17:29:04Z", "updated_at": "2020-09-03T21:14:53Z", "closed_at": "2020-09-03T21:14:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See \r\n\r\n- [x] https://github.com/ipython/traitlets/pull/441#issuecomment-323811638 (CLI parsing).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/579", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/579/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/579/events", "html_url": "https://github.com/ipython/traitlets/issues/579", "id": 643503565, "node_id": "MDU6SXNzdWU2NDM1MDM1NjU=", "number": 579, "title": "Dict does not set .default_value", "user": {"login": "DeepHorizons", "id": 5551273, "node_id": "MDQ6VXNlcjU1NTEyNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5551273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeepHorizons", "html_url": "https://github.com/DeepHorizons", "followers_url": "https://api.github.com/users/DeepHorizons/followers", "following_url": "https://api.github.com/users/DeepHorizons/following{/other_user}", "gists_url": "https://api.github.com/users/DeepHorizons/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeepHorizons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeepHorizons/subscriptions", "organizations_url": "https://api.github.com/users/DeepHorizons/orgs", "repos_url": "https://api.github.com/users/DeepHorizons/repos", "events_url": "https://api.github.com/users/DeepHorizons/events{/privacy}", "received_events_url": "https://api.github.com/users/DeepHorizons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-23T03:34:24Z", "updated_at": "2020-06-24T20:25:38Z", "closed_at": "2020-06-24T20:25:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ran into a problem where I was getting `traitlets.Undefined` popping up. Debugging it `.default_value` is never being set. It is being passed as an argument to the init of the super class `Instance`. There is a note in the docstring that talks about making a copy of `default_value`, but oddly enough looking at when the docstring was added (eb6deb41efa5ecac05617ed3c344f4dc50c4b883) it doesn't seem to update `.default_value` either.\r\n\r\n```\r\nclass Test(traitlets.HasTraits):\r\n    a = traitlets.Dict(default_value={'a':1}).tag(config=True)\r\n    b = traitlets.Int(default_value=5).tag(config=True)\r\n\r\nTest.a.default_value\r\nTest.b.default_value\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/564", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/564/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/564/events", "html_url": "https://github.com/ipython/traitlets/issues/564", "id": 632102709, "node_id": "MDU6SXNzdWU2MzIxMDI3MDk=", "number": 564, "title": "Downstream testing of 5.x/master", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-06T00:54:08Z", "updated_at": "2020-09-03T21:16:51Z", "closed_at": "2020-09-03T21:16:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In order to have some confidence that tratilets master does nto break too many things it would be great to have it tested in a couple  of downstream projects. \r\n\r\nHere is a list of issues/PRs that do so: \r\n\r\n- https://github.com/jupyterhub/jupyterhub/pull/3076\r\n- https://github.com/ipython/ipython/pull/12370\r\n- https://github.com/jupyter-widgets/ipywidgets/issues/2898\r\n\r\nAre you users of traitlets ? Are you hoping for a 5.x release ? If so please test with traitlets master on your project and past a link to your project below. Thanks !\r\n\r\nYou do not maintain a project that uses traitlets ? Please install master on your local environement if you can and let us know if you encounter any issues. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/557", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/557/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/557/events", "html_url": "https://github.com/ipython/traitlets/issues/557", "id": 622865226, "node_id": "MDU6SXNzdWU2MjI4NjUyMjY=", "number": 557, "title": "The Dict value update cannot trigger any event", "user": {"login": "dou-du", "id": 56022756, "node_id": "MDQ6VXNlcjU2MDIyNzU2", "avatar_url": "https://avatars1.githubusercontent.com/u/56022756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dou-du", "html_url": "https://github.com/dou-du", "followers_url": "https://api.github.com/users/dou-du/followers", "following_url": "https://api.github.com/users/dou-du/following{/other_user}", "gists_url": "https://api.github.com/users/dou-du/gists{/gist_id}", "starred_url": "https://api.github.com/users/dou-du/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dou-du/subscriptions", "organizations_url": "https://api.github.com/users/dou-du/orgs", "repos_url": "https://api.github.com/users/dou-du/repos", "events_url": "https://api.github.com/users/dou-du/events{/privacy}", "received_events_url": "https://api.github.com/users/dou-du/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-22T00:14:39Z", "updated_at": "2020-06-24T20:03:09Z", "closed_at": "2020-06-24T20:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the traitlets for the development of Jupyter widgets. \r\n\r\nI find update the value in the Dict cannot trigger any backbone.js event. Besides, the @observe \r\ncannot observe anything also. \r\n\r\nFor example, \r\n\r\n```python \r\nelements = Dict().tag(sync=True)\r\n\r\n@observe('elements')\r\ndef _elements_changed(change):\r\n    print(\"some changes\")\r\n\r\n#This will give the printing info\r\nelements = [\"a\":1, \"b\":2, \"c\":3]\r\n\r\n#This not not work\r\nelements[\"a\"] = 2\r\n```\r\nI have checked this issue #466 . But it do not help. \r\nCould you give some suggestions? Thanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/554", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/554/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/554/events", "html_url": "https://github.com/ipython/traitlets/issues/554", "id": 618975607, "node_id": "MDU6SXNzdWU2MTg5NzU2MDc=", "number": 554, "title": "Release including \"Callable\"", "user": {"login": "timkpaine", "id": 3105306, "node_id": "MDQ6VXNlcjMxMDUzMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3105306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timkpaine", "html_url": "https://github.com/timkpaine", "followers_url": "https://api.github.com/users/timkpaine/followers", "following_url": "https://api.github.com/users/timkpaine/following{/other_user}", "gists_url": "https://api.github.com/users/timkpaine/gists{/gist_id}", "starred_url": "https://api.github.com/users/timkpaine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timkpaine/subscriptions", "organizations_url": "https://api.github.com/users/timkpaine/orgs", "repos_url": "https://api.github.com/users/timkpaine/repos", "events_url": "https://api.github.com/users/timkpaine/events{/privacy}", "received_events_url": "https://api.github.com/users/timkpaine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-15T13:40:02Z", "updated_at": "2020-06-24T20:26:47Z", "closed_at": "2020-06-24T20:26:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to do a new release to include the \"Callable\" Traitlet", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/553", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/553/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/553/events", "html_url": "https://github.com/ipython/traitlets/issues/553", "id": 613118508, "node_id": "MDU6SXNzdWU2MTMxMTg1MDg=", "number": 553, "title": "SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?", "user": {"login": "bh2smith", "id": 11778116, "node_id": "MDQ6VXNlcjExNzc4MTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/11778116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bh2smith", "html_url": "https://github.com/bh2smith", "followers_url": "https://api.github.com/users/bh2smith/followers", "following_url": "https://api.github.com/users/bh2smith/following{/other_user}", "gists_url": "https://api.github.com/users/bh2smith/gists{/gist_id}", "starred_url": "https://api.github.com/users/bh2smith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bh2smith/subscriptions", "organizations_url": "https://api.github.com/users/bh2smith/orgs", "repos_url": "https://api.github.com/users/bh2smith/repos", "events_url": "https://api.github.com/users/bh2smith/events{/privacy}", "received_events_url": "https://api.github.com/users/bh2smith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-06T07:48:12Z", "updated_at": "2020-05-18T07:40:00Z", "closed_at": "2020-05-18T07:40:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been getting the following error when opening `ipython`\r\n\r\n```\r\n/usr/local/Cellar/ipython/7.14.0/libexec/vendor/lib/python3.8/site-packages/traitlets/config/loader.py:795: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if len(key) is 1:\r\n```\r\n\r\nI attempted to link the exact line of code from `traitlets/config/loader.py:795:` on but it doesn't appear to be there. Perhaps this has already been addressed, but I tried upgrading and, at least, ipython is already \"latest\" according to brew. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/530", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/530/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/530/events", "html_url": "https://github.com/ipython/traitlets/issues/530", "id": 479485330, "node_id": "MDU6SXNzdWU0Nzk0ODUzMzA=", "number": 530, "title": "New 4.3.3 Release", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/14", "html_url": "https://github.com/ipython/traitlets/milestone/14", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/14/labels", "id": 4717666, "node_id": "MDk6TWlsZXN0b25lNDcxNzY2Ng==", "number": 14, "title": "4.3.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2019-10-03T11:26:46Z", "updated_at": "2020-06-04T21:51:02Z", "due_on": null, "closed_at": "2019-10-03T12:52:51Z"}, "comments": 11, "created_at": "2019-08-12T06:26:59Z", "updated_at": "2019-10-04T21:16:06Z", "closed_at": "2019-10-03T12:52:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "An issue for tracking the progress to a 4.3.3 release.\r\n\r\nI have created a 4.3.x branch. In order to get a release, make a PR against this branch with changes that you would like to see included. Be sure to link to the commits your are cherry picking when you make a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/527", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/527/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/527/events", "html_url": "https://github.com/ipython/traitlets/issues/527", "id": 467837037, "node_id": "MDU6SXNzdWU0Njc4MzcwMzc=", "number": 527, "title": "Can't build voila, voila.js is missing", "user": {"login": "leogout", "id": 9843962, "node_id": "MDQ6VXNlcjk4NDM5NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9843962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leogout", "html_url": "https://github.com/leogout", "followers_url": "https://api.github.com/users/leogout/followers", "following_url": "https://api.github.com/users/leogout/following{/other_user}", "gists_url": "https://api.github.com/users/leogout/gists{/gist_id}", "starred_url": "https://api.github.com/users/leogout/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leogout/subscriptions", "organizations_url": "https://api.github.com/users/leogout/orgs", "repos_url": "https://api.github.com/users/leogout/repos", "events_url": "https://api.github.com/users/leogout/events{/privacy}", "received_events_url": "https://api.github.com/users/leogout/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-14T13:21:00Z", "updated_at": "2019-07-14T13:23:38Z", "closed_at": "2019-07-14T13:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I followed the instructions from the CONTRIBUTING.md but the setup.py [is pointing to voila.js](https://github.com/QuantStack/voila/blob/c399d66a2fb74364c5d7336ed615b153c21a3452/setup.py#L84) which [does not exist](https://github.com/QuantStack/voila/tree/master/share/jupyter/voila/templates/default/static)... \r\n\r\n### Command line output:\r\n```\r\nERROR: Complete output from command python setup.py egg_info:\r\n    ERROR: running egg_info\r\n    running css\r\n    running jsdeps\r\n    rebuilding js and css failed\r\n    missing files: ['C:\\\\Users\\\\leogout\\\\projects\\\\python\\\\voila\\\\share\\\\jupyter\\\\voila\\\\templates\\\\default\\\\static\\\\voila.js']\r\n    error: [WinError 2] The specified file could not be found\r\n```\r\nAm I missing something ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/518", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/518/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/518/events", "html_url": "https://github.com/ipython/traitlets/issues/518", "id": 428450831, "node_id": "MDU6SXNzdWU0Mjg0NTA4MzE=", "number": 518, "title": "Allow default_value to Instance", "user": {"login": "krey", "id": 223908, "node_id": "MDQ6VXNlcjIyMzkwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/223908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krey", "html_url": "https://github.com/krey", "followers_url": "https://api.github.com/users/krey/followers", "following_url": "https://api.github.com/users/krey/following{/other_user}", "gists_url": "https://api.github.com/users/krey/gists{/gist_id}", "starred_url": "https://api.github.com/users/krey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krey/subscriptions", "organizations_url": "https://api.github.com/users/krey/orgs", "repos_url": "https://api.github.com/users/krey/repos", "events_url": "https://api.github.com/users/krey/events{/privacy}", "received_events_url": "https://api.github.com/users/krey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-02T21:22:44Z", "updated_at": "2019-04-05T14:30:45Z", "closed_at": "2019-04-02T23:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to have a trait that is a pandas dataframe:\r\n\r\n```python\r\nfrom traitlets import HasTraits, Instance\r\nimport pandas as pd\r\n\r\nclass Test(HasTraits):\r\n    foo = Instance(pd.DataFrame, kw={'columns': ['int_col', 'float_col'], 'dtype': float})\r\n\r\ntest = Test()\r\n```\r\n\r\nUnfortunately, the constructor `pd.DataFrame` does not have a dtypes argument where I could specify the datatypes by column. (This issue is old enough to go to school now https://github.com/pandas-dev/pandas/issues/4464)\r\n\r\n```python\r\n>> print(test.foo.dtypes)\r\nint_col      float64\r\nfloat_col    float64\r\ndtype: object\r\n```\r\n\r\nAnd the only way to initialize it properly is:\r\n```python\r\n>> test.foo = pd.DataFrame(columns=['int_col', 'float_col']).astype({'int_col': int, 'float_col': float})\r\n>> print(test.foo.dtypes)\r\nint_col        int64\r\nfloat_col    float64\r\ndtype: object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/514", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/514/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/514/events", "html_url": "https://github.com/ipython/traitlets/issues/514", "id": 424555198, "node_id": "MDU6SXNzdWU0MjQ1NTUxOTg=", "number": 514, "title": "Use Parent Log If Exists", "user": {"login": "travigd", "id": 773453, "node_id": "MDQ6VXNlcjc3MzQ1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/773453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/travigd", "html_url": "https://github.com/travigd", "followers_url": "https://api.github.com/users/travigd/followers", "following_url": "https://api.github.com/users/travigd/following{/other_user}", "gists_url": "https://api.github.com/users/travigd/gists{/gist_id}", "starred_url": "https://api.github.com/users/travigd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/travigd/subscriptions", "organizations_url": "https://api.github.com/users/travigd/orgs", "repos_url": "https://api.github.com/users/travigd/repos", "events_url": "https://api.github.com/users/travigd/events{/privacy}", "received_events_url": "https://api.github.com/users/travigd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-23T23:15:35Z", "updated_at": "2019-04-01T11:23:30Z", "closed_at": "2019-04-01T11:23:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to see the default `log` attribute of a `LoggingConfigurable` be the parent log, rather than the global traitlets log, if the parent is also a LoggingConfigurable.\r\n\r\n```python\r\nclass LoggingConfigurable(...):\r\n    ...\r\n\r\n    log = Instance('logging.Logger')\r\n    @default('log')\r\n    def _log_default(self):\r\n        # (vvv) new behavior (vvv)\r\n        if isinstance(self.parent, LoggingConfigurable):\r\n            return self.parent.log\r\n        # (^^^) new behavior (^^^)\r\n        from traitlets import log\r\n        return log.get_logger()\r\n```\r\n\r\nIf that sounds okay I can open a merge request with those two lines added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/511", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/511/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/511/events", "html_url": "https://github.com/ipython/traitlets/issues/511", "id": 419027474, "node_id": "MDU6SXNzdWU0MTkwMjc0NzQ=", "number": 511, "title": "ipython_genutils has been dropped - do not use it", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/1", "html_url": "https://github.com/ipython/traitlets/milestone/1", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/1/labels", "id": 1063942, "node_id": "MDk6TWlsZXN0b25lMTA2Mzk0Mg==", "number": 1, "title": "no action", "description": null, "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 48, "state": "open", "created_at": "2015-04-12T18:44:36Z", "updated_at": "2019-06-23T07:10:01Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-03-09T03:17:30Z", "updated_at": "2019-06-23T07:10:01Z", "closed_at": "2019-06-23T07:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pypi.org/project/ipython_genutils/ states:\r\n\r\nPretend this doesn\u2019t exist. Nobody should use it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/508", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/508/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/508/events", "html_url": "https://github.com/ipython/traitlets/issues/508", "id": 400843335, "node_id": "MDU6SXNzdWU0MDA4NDMzMzU=", "number": 508, "title": "Correct exceptions for nested types", "user": {"login": "krey", "id": 223908, "node_id": "MDQ6VXNlcjIyMzkwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/223908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krey", "html_url": "https://github.com/krey", "followers_url": "https://api.github.com/users/krey/followers", "following_url": "https://api.github.com/users/krey/following{/other_user}", "gists_url": "https://api.github.com/users/krey/gists{/gist_id}", "starred_url": "https://api.github.com/users/krey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krey/subscriptions", "organizations_url": "https://api.github.com/users/krey/orgs", "repos_url": "https://api.github.com/users/krey/repos", "events_url": "https://api.github.com/users/krey/events{/privacy}", "received_events_url": "https://api.github.com/users/krey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-18T18:42:29Z", "updated_at": "2019-01-20T01:59:12Z", "closed_at": "2019-01-20T01:59:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom traitlets import HasTraits, Union, Unicode, Bool\r\n\r\nclass Foo(HasTraits):\r\n    bar = Union([Bool(), List(Unicode())])\r\n\r\nFoo(bar=[1, 2, 3])\r\n```\r\n\r\n```\r\nTraitError: The 'bar' trait of a Foo instance must be a boolean or a list, but a value of [1, 2, 3] <type 'list'> was specified.\r\n```\r\n\r\nIf you're not looking at the code for `Foo`, the error message isn't gonna tell you what's wrong\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/507", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/507/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/507/events", "html_url": "https://github.com/ipython/traitlets/issues/507", "id": 391504202, "node_id": "MDU6SXNzdWUzOTE1MDQyMDI=", "number": 507, "title": "globally disable validation", "user": {"login": "satra", "id": 184063, "node_id": "MDQ6VXNlcjE4NDA2Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/184063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satra", "html_url": "https://github.com/satra", "followers_url": "https://api.github.com/users/satra/followers", "following_url": "https://api.github.com/users/satra/following{/other_user}", "gists_url": "https://api.github.com/users/satra/gists{/gist_id}", "starred_url": "https://api.github.com/users/satra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satra/subscriptions", "organizations_url": "https://api.github.com/users/satra/orgs", "repos_url": "https://api.github.com/users/satra/repos", "events_url": "https://api.github.com/users/satra/events{/privacy}", "received_events_url": "https://api.github.com/users/satra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-16T20:55:51Z", "updated_at": "2018-12-17T20:21:42Z", "closed_at": "2018-12-17T20:21:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "is there a way to globally disable validation? this is not necessary to implement. i'm just checking if this is possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/506", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/506/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/506/events", "html_url": "https://github.com/ipython/traitlets/issues/506", "id": 384631891, "node_id": "MDU6SXNzdWUzODQ2MzE4OTE=", "number": 506, "title": "PYPI metadata requires_dist", "user": {"login": "fizwit", "id": 5123531, "node_id": "MDQ6VXNlcjUxMjM1MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5123531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fizwit", "html_url": "https://github.com/fizwit", "followers_url": "https://api.github.com/users/fizwit/followers", "following_url": "https://api.github.com/users/fizwit/following{/other_user}", "gists_url": "https://api.github.com/users/fizwit/gists{/gist_id}", "starred_url": "https://api.github.com/users/fizwit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fizwit/subscriptions", "organizations_url": "https://api.github.com/users/fizwit/orgs", "repos_url": "https://api.github.com/users/fizwit/repos", "events_url": "https://api.github.com/users/fizwit/events{/privacy}", "received_events_url": "https://api.github.com/users/fizwit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-27T05:37:14Z", "updated_at": "2019-04-04T01:05:07Z", "closed_at": "2019-04-04T01:04:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "please update requieres_dist metadata on Pypi. The package name ipython-genutils should use an underscore.  change to ipython_genutils", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/504", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/504/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/504/events", "html_url": "https://github.com/ipython/traitlets/issues/504", "id": 370720837, "node_id": "MDU6SXNzdWUzNzA3MjA4Mzc=", "number": 504, "title": "bug in setting default_value in subclasses of Instance ", "user": {"login": "lurgyman63", "id": 12059787, "node_id": "MDQ6VXNlcjEyMDU5Nzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/12059787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lurgyman63", "html_url": "https://github.com/lurgyman63", "followers_url": "https://api.github.com/users/lurgyman63/followers", "following_url": "https://api.github.com/users/lurgyman63/following{/other_user}", "gists_url": "https://api.github.com/users/lurgyman63/gists{/gist_id}", "starred_url": "https://api.github.com/users/lurgyman63/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lurgyman63/subscriptions", "organizations_url": "https://api.github.com/users/lurgyman63/orgs", "repos_url": "https://api.github.com/users/lurgyman63/repos", "events_url": "https://api.github.com/users/lurgyman63/events{/privacy}", "received_events_url": "https://api.github.com/users/lurgyman63/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-16T17:33:32Z", "updated_at": "2018-11-15T00:55:54Z", "closed_at": "2018-11-15T00:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following snippet gives unexpected behavior:\r\n\r\n```python\r\n>>> import traitlets as tl\r\n>>> tr = tl.List(trait=tl.Unicode(), default_value=['hi'])\r\n>>> print('tr default is ', tr.default_value)\r\ntr default is  traitlets.Undefined\r\n```\r\nI'd expect the output to be `tr default is ['hi']`, since that was the requested default_value.\r\n\r\nIt looks to me like the error is in traitlets.py in `Instance.__init__`. A fix could be changing\r\n\r\n`super(Instance, self).__init__(**kwargs)`\r\n\r\nto\r\n\r\n`super(Instance, self).__init__(*args, **kwargs)`\r\n\r\n(or alternately its subclasses could set `kwargs['default_value'] = default_value` instead of passing via `args`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/500", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/500/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/500/events", "html_url": "https://github.com/ipython/traitlets/issues/500", "id": 356802973, "node_id": "MDU6SXNzdWUzNTY4MDI5NzM=", "number": 500, "title": "Why a new class?", "user": {"login": "zerline", "id": 3509281, "node_id": "MDQ6VXNlcjM1MDkyODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3509281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerline", "html_url": "https://github.com/zerline", "followers_url": "https://api.github.com/users/zerline/followers", "following_url": "https://api.github.com/users/zerline/following{/other_user}", "gists_url": "https://api.github.com/users/zerline/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerline/subscriptions", "organizations_url": "https://api.github.com/users/zerline/orgs", "repos_url": "https://api.github.com/users/zerline/repos", "events_url": "https://api.github.com/users/zerline/events{/privacy}", "received_events_url": "https://api.github.com/users/zerline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-09-04T13:10:11Z", "updated_at": "2019-04-05T08:04:14Z", "closed_at": "2019-04-05T08:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nCould you explain the logic behind this code:\r\n(in traitlets.HasTraits)\r\n``\r\ndef add_traits(self, **traits):\r\n        \"\"\"Dynamically add trait attributes to the HasTraits instance.\"\"\"\r\n        self.__class__ = type(self.__class__.__name__, (self.__class__,),\r\n                              traits)\r\n``\r\n\r\nWhy do you need to change the object class?\r\n\r\n> from ipywidgets import Box\r\n> import traitlets\r\n> b = Box()\r\n> b.__class__\r\n<class 'ipywidgets.widgets.widget_box.Box'>\r\n> b.add_traits(**{'mytrait':traitlets.Unicode()})\r\n> b.__class__\r\n<class 'traitlets.traitlets.Box'>\r\n\r\nMany thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/497", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/497/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/497/events", "html_url": "https://github.com/ipython/traitlets/issues/497", "id": 348611516, "node_id": "MDU6SXNzdWUzNDg2MTE1MTY=", "number": 497, "title": "Build on Master is Failing", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-08T07:44:23Z", "updated_at": "2020-09-03T21:21:42Z", "closed_at": "2020-09-03T21:21:42Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@minrk the build is currently failing:\r\n\r\n[![Build Status](https://travis-ci.org/ipython/traitlets.svg?branch=master)](https://travis-ci.org/ipython/traitlets)\r\n\r\nIt seems like the most recent versions of `jupyter/notebook` and `jupyter-widgets/traittypes` haven't been released yet. The former is missing a test dependency for `selenium` and the latter is attempting to import `Sentinel` from `traitlets` which is no longer included in `__all__`. Both of these  issues appear to have been fixed in their respective master branches.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/496", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/496/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/496/events", "html_url": "https://github.com/ipython/traitlets/issues/496", "id": 343575065, "node_id": "MDU6SXNzdWUzNDM1NzUwNjU=", "number": 496, "title": "Dict update/copying is not correctly observed", "user": {"login": "DGothrek", "id": 35027141, "node_id": "MDQ6VXNlcjM1MDI3MTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/35027141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DGothrek", "html_url": "https://github.com/DGothrek", "followers_url": "https://api.github.com/users/DGothrek/followers", "following_url": "https://api.github.com/users/DGothrek/following{/other_user}", "gists_url": "https://api.github.com/users/DGothrek/gists{/gist_id}", "starred_url": "https://api.github.com/users/DGothrek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DGothrek/subscriptions", "organizations_url": "https://api.github.com/users/DGothrek/orgs", "repos_url": "https://api.github.com/users/DGothrek/repos", "events_url": "https://api.github.com/users/DGothrek/events{/privacy}", "received_events_url": "https://api.github.com/users/DGothrek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T10:26:09Z", "updated_at": "2018-08-07T20:32:50Z", "closed_at": "2018-08-07T20:32:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The behavior of the copy function is not the ideal one (already reported), but copying it by hand doesn't work either.\r\n\r\n```python\r\nclass Foo(HasTraits):\r\n    bar = Dict()\r\n\r\n    @observe('bar')\r\n    def _observe_bar(self, change):\r\n        print(change['new'])\r\n\r\nfoo = Foo()\r\n\r\nfoo.bar = {}  # prints {}\r\nfoo.bar['foo'] = 'foo'  # does not observe that change\r\nfoo.bar = copy(foo.bar) # both changes are not observed either.\r\nfoo.bar = deepcopy(foo.bar)\r\nfoo.bar = {'foo': 'foo'} # not observed !\r\nfoo.bar = {'foo':'bar'} # observed\r\nfoo.bar = {'bar':'bar'} # observed\r\n```\r\n\r\noutputs :\r\n\r\n```\r\n{}\r\n{'foo': 'bar'}\r\n{'bar': 'bar'}\r\n```\r\n\r\nIs it a normal behavior ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/495", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/495/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/495/events", "html_url": "https://github.com/ipython/traitlets/issues/495", "id": 342873784, "node_id": "MDU6SXNzdWUzNDI4NzM3ODQ=", "number": 495, "title": "Observe Dict change", "user": {"login": "fitoprincipe", "id": 10751505, "node_id": "MDQ6VXNlcjEwNzUxNTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/10751505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fitoprincipe", "html_url": "https://github.com/fitoprincipe", "followers_url": "https://api.github.com/users/fitoprincipe/followers", "following_url": "https://api.github.com/users/fitoprincipe/following{/other_user}", "gists_url": "https://api.github.com/users/fitoprincipe/gists{/gist_id}", "starred_url": "https://api.github.com/users/fitoprincipe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fitoprincipe/subscriptions", "organizations_url": "https://api.github.com/users/fitoprincipe/orgs", "repos_url": "https://api.github.com/users/fitoprincipe/repos", "events_url": "https://api.github.com/users/fitoprincipe/events{/privacy}", "received_events_url": "https://api.github.com/users/fitoprincipe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-19T20:16:41Z", "updated_at": "2019-04-04T01:07:11Z", "closed_at": "2019-04-04T01:06:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to observe when a dict has changes?\r\n\r\n``` python\r\nclass Foo(HasTraits):\r\n    bar = Dict()\r\n\r\n    @observe('bar')\r\n    def _observe_bar(self, change):\r\n        print(change['new'])\r\n\r\nfoo = Foo()\r\n\r\nfoo.bar = {}  # prints {}\r\nfoo.bar['test'] = 'test'  # does not observe that change\r\n```\r\nI have made a workaround with `copy`, cloning the old value of the dict, setting the new pair, and reassigning `bar` to the clone.. works, but I though it should be easier.\r\n\r\nto follow the rules..\r\n\r\n> python -c \"import IPython; print(IPython.sys_info())\"\r\n> {'commit_hash': u'64a584802',\r\n>  'commit_source': 'installation',\r\n>  'default_encoding': 'UTF-8',\r\n>  'ipython_path': '/usr/local/lib/python2.7/dist-packages/IPython',\r\n>  'ipython_version': '5.6.0',\r\n>  'os_name': 'posix',\r\n>  'platform': 'Linux-4.4.0-98-generic-x86_64-with-LinuxMint-18-sarah',\r\n>  'sys_executable': '/usr/bin/python',\r\n>  'sys_platform': 'linux2',\r\n>  'sys_version': '2.7.14 (default, Sep 18 2017, 11:31:52) \\n[GCC 5.4.0 20160609]'}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/490", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/490/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/490/events", "html_url": "https://github.com/ipython/traitlets/issues/490", "id": 329050669, "node_id": "MDU6SXNzdWUzMjkwNTA2Njk=", "number": 490, "title": "Flag attribute as required / mandatory", "user": {"login": "elgalu", "id": 111569, "node_id": "MDQ6VXNlcjExMTU2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/111569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elgalu", "html_url": "https://github.com/elgalu", "followers_url": "https://api.github.com/users/elgalu/followers", "following_url": "https://api.github.com/users/elgalu/following{/other_user}", "gists_url": "https://api.github.com/users/elgalu/gists{/gist_id}", "starred_url": "https://api.github.com/users/elgalu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elgalu/subscriptions", "organizations_url": "https://api.github.com/users/elgalu/orgs", "repos_url": "https://api.github.com/users/elgalu/repos", "events_url": "https://api.github.com/users/elgalu/events{/privacy}", "received_events_url": "https://api.github.com/users/elgalu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-04T13:15:03Z", "updated_at": "2019-04-04T01:33:32Z", "closed_at": "2019-04-04T01:33:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, thanks for this very useful library!\r\n\r\nHow do I flag attribute as required / mandatory?\r\n\r\nI have this:\r\n\r\n```python\r\nfrom traitlets import HasTraits, Unicode, TraitError, validate\r\n\r\nclass MyS3Class(HasTraits):\r\n    s3_bucket_name = Unicode()\r\n\r\n    @validate('s3_bucket_name')\r\n    def _check(self, proposal):\r\n        raise TraitError(\"this doesn't trigger unless explicit non empty string is set\")\r\n```\r\n\r\nBut `@validate('s3_bucket_name')` doesn't get triggered if the user doesn't pass a value.\r\n\r\n```python\r\nobject = MyS3Class()\r\n# FAIL: doesn't trigger _check()\r\n\r\nobject = MyS3Class(s3_bucket_name='')\r\n# FAIL: doesn't trigger _check()\r\n\r\nobject = MyS3Class(s3_bucket_name=' ')\r\n# OK: properly triggers _check()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/476", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/476/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/476/events", "html_url": "https://github.com/ipython/traitlets/issues/476", "id": 300098443, "node_id": "MDU6SXNzdWUzMDAwOTg0NDM=", "number": 476, "title": "A proper way to do embeded HasTrait?", "user": {"login": "zsluedem", "id": 13496262, "node_id": "MDQ6VXNlcjEzNDk2MjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/13496262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zsluedem", "html_url": "https://github.com/zsluedem", "followers_url": "https://api.github.com/users/zsluedem/followers", "following_url": "https://api.github.com/users/zsluedem/following{/other_user}", "gists_url": "https://api.github.com/users/zsluedem/gists{/gist_id}", "starred_url": "https://api.github.com/users/zsluedem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zsluedem/subscriptions", "organizations_url": "https://api.github.com/users/zsluedem/orgs", "repos_url": "https://api.github.com/users/zsluedem/repos", "events_url": "https://api.github.com/users/zsluedem/events{/privacy}", "received_events_url": "https://api.github.com/users/zsluedem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-26T03:29:54Z", "updated_at": "2018-02-26T13:55:50Z", "closed_at": "2018-02-26T10:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a proper way to do the embeded Hastrait. Here is what I think\r\n\r\nHere is one object has-traits.\r\n```python\r\nclass Foo(HasTraits):\r\n    value = Int()\r\n```\r\n\r\nI want to implement another object that has a trait 'Foo'\r\n\r\n```python\r\nclass Foo2(HasTraits):\r\n    value2 = Foo()\r\n```\r\n\r\nBut it doesn't check the type at all.\r\n\r\nSo I have to do a middle TraitType like that\r\n\r\n```python\r\nclass FooTrait(TraitType):\r\n        def validate(self, obj, value):\r\n        if not isinstance(value, Foo):\r\n            raise TypeError\r\n        return value\r\n```\r\n\r\nIs it the proper way to implement the embeded traitlets?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/463", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/463/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/463/events", "html_url": "https://github.com/ipython/traitlets/issues/463", "id": 286354713, "node_id": "MDU6SXNzdWUyODYzNTQ3MTM=", "number": 463, "title": "Profiling and optimizations", "user": {"login": "vidartf", "id": 510760, "node_id": "MDQ6VXNlcjUxMDc2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/510760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vidartf", "html_url": "https://github.com/vidartf", "followers_url": "https://api.github.com/users/vidartf/followers", "following_url": "https://api.github.com/users/vidartf/following{/other_user}", "gists_url": "https://api.github.com/users/vidartf/gists{/gist_id}", "starred_url": "https://api.github.com/users/vidartf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vidartf/subscriptions", "organizations_url": "https://api.github.com/users/vidartf/orgs", "repos_url": "https://api.github.com/users/vidartf/repos", "events_url": "https://api.github.com/users/vidartf/events{/privacy}", "received_events_url": "https://api.github.com/users/vidartf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-05T17:34:07Z", "updated_at": "2018-01-15T09:53:18Z", "closed_at": "2018-01-15T09:53:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've recently been profiling initialization of widgets in ipywidgets, and discovered that most of the time was spent in traitlets. As such, I figured I would share the profiling results, and the results of some optimizations (caching).\r\n\r\n### Profiling\r\nHere's the content of a basic script file that I ran through cProfile (traitlets 4.3.2):\r\n```python\r\nfrom ipywidgets.widgets.widget import Widget\r\n\r\nfor i in range(20000):\r\n    w = Widget()\r\n```\r\n\r\n(the number 20'000 was chosen as it gave a reasonable execution time of around ~25 seconds.)\r\n\r\nHere's a summary of the profiling results:\r\n\r\nTotal time: 25.87\r\n\r\nNumber of `HasTraits` instances: 40'000 (20k Widget, 20k Comm instances)\r\n\r\nMost of the time is spent in initialization (`HasDescriptors.setup_instance`) or querying `HasTraits.traits` (with and without metadata filter).\r\n\r\n\r\nInitialization:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|40000   \t| 1.487 \t| 3.718e-05\t| 10.27 \t| 0.0002568\t| traitlets.py:961(setup_instance)\r\n|560000  \t| 1.119 \t| 1.997e-06\t| 5.388 \t| 9.622e-06\t| traitlets.py:516(instance_init)\r\n|260000  \t| 0.2687\t| 1.033e-06\t| 2.706 \t| 1.041e-05\t| traitlets.py:1690(instance_init)\r\n|680000  \t| 1.797 \t| 2.642e-06\t| 2.786 \t| 4.097e-06\t| traitlets.py:486(_dynamic_default_callable)\r\n\r\nQuery:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|60000   \t| 1.095 \t| 1.826e-05\t| 8.536 \t| 0.0001423\t| traitlets.py:1407(traits)\r\n|60048   \t| 1.783 \t| 2.970e-05\t| 5.566 \t| 9.269e-05\t| traitlets.py:224(getmembers)\r\n|60000   \t| 0.9321\t| 1.554e-05\t| 1.581 \t| 2.635e-05\t| traitlets.py:1421(< listcomp>)\r\n\r\nCommon:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|100059  \t| 3.082 \t| 3.081e-05\t| 3.082 \t| 3.081e-05\t| <builtins.dir>\r\n|11417761\t| 2.344 \t| 2.053e-07\t| 2.655 \t| 2.325e-07\t| <builtins.getattr>\r\n|11142909\t| 1.306 \t| 1.172e-07\t| 1.306 \t| 1.172e-07\t| <builtins.isinstance>\r\n\r\n\r\n### Optimiation\r\n\r\nI'll start with the profiling results after optimization, for ease of comparison (proximity in post):\r\n\r\n\r\n\r\nTotal time: 13.2\r\n\r\nInitialization:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|40000   \t| 0.0734\t| 1.835e-06\t| 6.655 \t| 0.0001664\t| traitlets.py:982(setup_instance)\r\n|560000  \t| 1.033\t\t| 1.845e-06\t| 4.918 \t| 8.782e-06\t| traitlets.py:516(instance_init)\r\n|260000  \t| 0.252 \t| 9.692e-07\t| 2.494 \t| 9.594e-06\t| traitlets.py:1690(instance_init)\r\n|680000  \t| 1.57  \t| 2.309e-06\t| 2.479 \t| 3.646e-06\t| traitlets.py:486(_dynamic_default_callable)\r\n\r\nQuery:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|60000   \t| 0.05958\t| 9.93e-07\t| 0.06941\t| 1.157e-06\t| profile.py:68(quick_traits)\r\n|50      \t| 0.00173\t| 3.476e-05\t| 0.00731\t| 0.0001463\t| traitlets.py:224(getmembers)\r\n|48      \t| 0.00085\t| 1.78e-05\t| 0.00141\t| 2.943e-05\t| traitlets.py:1371(< listcomp>)\r\n\r\nCommon:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|63      \t| 0.0030\t| 4.813e-05\t| 0.0030\t| 4.813e-05\t| <builtins.dir>\r\n|1558177 \t| 0.4486\t| 2.879e-07\t| 0.5848\t| 3.753e-07\t| <builtins.getattr>\r\n|1283301 \t| 0.2074\t| 1.616e-07\t| 0.2077\t| 1.619e-07\t| <builtins.isinstance>\r\n\r\nCaching:\r\n\r\n| ncalls  \t| tottime\t| percall \t| cumtime\t| percall \t| file:lineno(function)\r\n| --------- | --------- | --------- | --------- | --------- | --------- \r\n|104     \t| 0.0003282\t| 3.156e-06\t| 0.0007341\t| 7.059e-06\t| functools.py:44(update_wrapper)\r\n|50      \t| 3.319e-05\t| 6.637e-07\t| 4.303e-05\t| 8.606e-07\t| <builtins.hash>)\r\n\r\n\r\nHere are the optimizations done (in monkey-patch form):\r\n\r\n```python\r\nimport types\r\nfrom functools import lru_cache\r\nfrom traitlets import traitlets\r\n\r\nCACHE_SIZE = 2048\r\n\r\n@lru_cache(CACHE_SIZE)\r\ndef cache_cls_dir(cls):\r\n    return dir(cls)\r\n\r\n@lru_cache(CACHE_SIZE)\r\ndef cache_trait_cls(cls, key):\r\n    # Some descriptors raise AttributeError like zope.interface's\r\n    # __provides__ attributes even though they exist.  This causes\r\n    # AttributeErrors even though they are listed in dir(cls).\r\n    try:\r\n        value = getattr(cls, key)\r\n    except AttributeError:\r\n        pass\r\n    else:\r\n        if isinstance(value, traitlets.BaseDescriptor):\r\n            return value\r\n\r\n\r\ndef quick_setup_instance(self, *args, **kwargs):\r\n    self._cross_validation_lock = False\r\n    cls = self.__class__\r\n    for key in cache_cls_dir(cls):\r\n        value = cache_trait_cls(cls, key)\r\n        if value:\r\n            value.instance_init(self)\r\n\r\n\r\ntraitlets.HasDescriptors.setup_instance = quick_setup_instance\r\n\r\n\r\n@lru_cache(CACHE_SIZE)\r\ndef cache_gen_traits(cls):\r\n    return dict([memb for memb in traitlets.getmembers(cls) if\r\n                isinstance(memb[1], traitlets.TraitType)])\r\n\r\n@lru_cache(CACHE_SIZE)\r\ndef cache_filter_traits(cls, **metadata):\r\n    traits = cache_gen_traits(cls)\r\n    result = {}\r\n    for name, trait in traits.items():\r\n        for meta_name, meta_eval in metadata.items():\r\n            if type(meta_eval) is not types.FunctionType:\r\n                meta_eval = traitlets._SimpleTest(meta_eval)\r\n            if not meta_eval(trait.metadata.get(meta_name, None)):\r\n                break\r\n        else:\r\n            result[name] = trait\r\n\r\n    return result\r\n\r\ndef quick_traits(self, **metadata):\r\n    if len(metadata) == 0:\r\n        return cache_gen_traits(self.__class__)\r\n    return cache_filter_traits(self.__class__, **metadata)\r\n\r\ntraitlets.HasTraits.traits = quick_traits\r\n```\r\n\r\nNotes:\r\n - The most time was save by caching `HasTraits.traits`.\r\n - There is much code in the initialization that is non-trivial to optimize, so it is where most of the time in traitlets is spent after optimization.\r\n - The cache checks are fast, since most of them just use `cls`.\r\n - The caching is robust against `add_trait` calls, since that changes the `__class__`.\r\n - FIXME: The cache should not be used in `cache_filter_traits` when one of the values are function types.\r\n - The caches can of course become invalid (this is Python after all).\r\n\r\nI'm not sure if this should result in any patches to master, but at least I hope this can be informative.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/457", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/457/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/457/events", "html_url": "https://github.com/ipython/traitlets/issues/457", "id": 268601066, "node_id": "MDU6SXNzdWUyNjg2MDEwNjY=", "number": 457, "title": "Declaring traittypes in Containers as uninstantiated classes", "user": {"login": "mpacer", "id": 2482408, "node_id": "MDQ6VXNlcjI0ODI0MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2482408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpacer", "html_url": "https://github.com/mpacer", "followers_url": "https://api.github.com/users/mpacer/followers", "following_url": "https://api.github.com/users/mpacer/following{/other_user}", "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions", "organizations_url": "https://api.github.com/users/mpacer/orgs", "repos_url": "https://api.github.com/users/mpacer/repos", "events_url": "https://api.github.com/users/mpacer/events{/privacy}", "received_events_url": "https://api.github.com/users/mpacer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 258748750, "node_id": "MDU6TGFiZWwyNTg3NDg3NTA=", "url": "https://api.github.com/repos/ipython/traitlets/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-26T01:30:14Z", "updated_at": "2019-04-04T01:26:30Z", "closed_at": "2019-04-04T01:26:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Feel free to ignore this, but I wasn't around when #51 was discussed\u2026 and this just came up in jupyter/nbconvert#695. So I wanted to weigh in on the question around deprecating a particular way of using uninstantiated traitlets.\r\n\r\nThere are two ways of using traitlets that were deprecated in 4.1 that were not documented in the migration docs http://traitlets.readthedocs.io/en/stable/migration.html. These use cases involve traitlets being used in slightly different ways. I think we should revisit the decision to deprecate one of them. \r\n\r\nRegardless of whether we continue to deprecate that case, the deprecations should be mentioned in the migration docs.\r\n\r\n<details>\r\n<summary>Click for more details about these two cases and why I think they are different.<br/><br/></summary>\r\n\r\n1. traitlets that are actually instantiated on a class.\r\n    ```python\r\n    class MyClass():\r\n    foo = Unicode() # \u2713\r\n    foo = Unicode # deprecated\r\n    ```\r\n2. traitlets defining which types are valid inside traitlets subclassed from `Container` (e.g., `List`).\r\n    ```python\r\n    class MyClass():\r\n    foo = List(Unicode()) # \u2713\r\n    foo = List(Unicode) # deprecated\r\n    ```\r\n\r\nDeprecating 1. was absolutely the right call.  \r\n\r\nI think that we should revisit the idea of deprecating 2.. \r\n\r\n<details>\r\n<summary> Click here for my argument as to why we shouldn't deprecate use case 2. <br/><br/>\r\n</summary>\r\n\r\nIn case 2, the actual use of a traitlet instance is somewhat strange from a type checking perspective. What you are effectively doing is declaring that the elements of this container need to be of the same _type_ as element that is listed. The only way I've ever seen type checking work involves declaring the _type_s that should be allowed, in python that would be the _class_es that should be allowed.\r\n\r\nTo follow the requirement that we only allow traitlet instances there would be analogous to a type checking syntax that declared that something should be a string by using literal strings. \r\n\r\nFor example, the analogous case from the python type [annotations PEP][pytypes] was:\r\n\r\n```python\r\ndef greeting(name: str) -> str:\r\n    return 'Hello ' + name\r\n```\r\n\r\nbut if using our convention it would be \r\n\r\n```python\r\ndef greeting(name: str()) -> str():\r\n    return 'Hello ' + name\r\n```\r\n\r\nor equivalently:\r\n\r\n```python\r\ndef greeting(name: '') -> '':\r\n    return 'Hello ' + name\r\n```\r\n\r\nI realise that from an implementation point of view this introduces overhead because we also need to be able to put constraints on particular values, which means we can't only work on classes.\r\n</details> \r\n     \r\n**tldr**:; \r\nThe use case in 2. is similar to type checking, and declaring types as uninstantiated classes is  a standard way of specifying types in signatures (including in [python type annotations][pytypes]).\r\n</details>\r\n\r\n[pytypes]: https://www.python.org/dev/peps/pep-0484/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/454", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/454/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/454/events", "html_url": "https://github.com/ipython/traitlets/issues/454", "id": 261026239, "node_id": "MDU6SXNzdWUyNjEwMjYyMzk=", "number": 454, "title": "Reference to HasTraits object inside the contained Trait object?", "user": {"login": "vigji", "id": 10400212, "node_id": "MDQ6VXNlcjEwNDAwMjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/10400212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vigji", "html_url": "https://github.com/vigji", "followers_url": "https://api.github.com/users/vigji/followers", "following_url": "https://api.github.com/users/vigji/following{/other_user}", "gists_url": "https://api.github.com/users/vigji/gists{/gist_id}", "starred_url": "https://api.github.com/users/vigji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vigji/subscriptions", "organizations_url": "https://api.github.com/users/vigji/orgs", "repos_url": "https://api.github.com/users/vigji/repos", "events_url": "https://api.github.com/users/vigji/events{/privacy}", "received_events_url": "https://api.github.com/users/vigji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-27T15:50:54Z", "updated_at": "2017-09-28T15:44:16Z", "closed_at": "2017-09-28T15:44:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not really an issue, more like a general question.\r\nI am creating a small module for generating Qt controllers to control traits corresponding to parameters in an interface. I would have a new trait inside the controller object linked to the original one, something like:\r\n\r\n```python\r\nimport traitlets as tr\r\n\r\nclass FirstClass(tr.HasTraits):\r\n    i = tr.Integer(5, min=3, max=5)\r\n\r\n\r\nclass SecondClass(tr.HasTraits):\r\n    j = tr.Integer()\r\n\r\n    def __init__(self, has_traits_obj, name):\r\n        tr_obj =  has_traits_obj.traits()[name]\r\n\r\n        for k in tr_obj.metadata.keys():\r\n            self.traits()['j'].set_metadata(k, tr_obj.metadata[k])\r\n        tr.link((has_traits_obj, name), (self, 'j'))\r\n        \r\n        \r\nfirst_obj = FirstClass()\r\nsecond_obj = SecondClass(first_obj, 'i')\r\n```\r\n\r\n\r\nIn doing this, I realized that I cannot instantiate the controller from the Trait object alone because there is no reference to its HasTraits object container, only to the class. \r\n\r\n```python\r\n# I would like to have instead\r\nsecond_obj = SecondClass(first_obj.traits()['i'])\r\n# But I don't find reference to first_obj in first_obj.traits()['i']\r\n```\r\n\r\nObviously I can work around it passing the (HasTraits, 'name') tuple, but the point is: why not allowing to link from the Trait object alone by having in it a reference to the HasTraits object which contains it? This may be a naive question - is there some general conceptual error I am making here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/444", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/444/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/444/events", "html_url": "https://github.com/ipython/traitlets/issues/444", "id": 250759949, "node_id": "MDU6SXNzdWUyNTA3NTk5NDk=", "number": 444, "title": "Traitful class attribute?", "user": {"login": "OliverEvans96", "id": 15915043, "node_id": "MDQ6VXNlcjE1OTE1MDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/15915043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OliverEvans96", "html_url": "https://github.com/OliverEvans96", "followers_url": "https://api.github.com/users/OliverEvans96/followers", "following_url": "https://api.github.com/users/OliverEvans96/following{/other_user}", "gists_url": "https://api.github.com/users/OliverEvans96/gists{/gist_id}", "starred_url": "https://api.github.com/users/OliverEvans96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OliverEvans96/subscriptions", "organizations_url": "https://api.github.com/users/OliverEvans96/orgs", "repos_url": "https://api.github.com/users/OliverEvans96/repos", "events_url": "https://api.github.com/users/OliverEvans96/events{/privacy}", "received_events_url": "https://api.github.com/users/OliverEvans96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-16T21:05:41Z", "updated_at": "2017-11-08T21:44:20Z", "closed_at": "2017-11-08T21:44:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nTraitlets is great for instance attributes which can notify on value changes. Can anyone think of a way to have a class attribute with the same behavior? i.e., a traitlet which is shared among all members of a class, and the class type itself.\r\n\r\nThanks,\r\nOliver", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/443", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/443/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/443/events", "html_url": "https://github.com/ipython/traitlets/issues/443", "id": 250391053, "node_id": "MDU6SXNzdWUyNTAzOTEwNTM=", "number": 443, "title": "Linking list with tuple: Appending list does not update tuple.", "user": {"login": "OliverEvans96", "id": 15915043, "node_id": "MDQ6VXNlcjE1OTE1MDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/15915043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OliverEvans96", "html_url": "https://github.com/OliverEvans96", "followers_url": "https://api.github.com/users/OliverEvans96/followers", "following_url": "https://api.github.com/users/OliverEvans96/following{/other_user}", "gists_url": "https://api.github.com/users/OliverEvans96/gists{/gist_id}", "starred_url": "https://api.github.com/users/OliverEvans96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OliverEvans96/subscriptions", "organizations_url": "https://api.github.com/users/OliverEvans96/orgs", "repos_url": "https://api.github.com/users/OliverEvans96/repos", "events_url": "https://api.github.com/users/OliverEvans96/events{/privacy}", "received_events_url": "https://api.github.com/users/OliverEvans96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-15T18:05:08Z", "updated_at": "2019-04-04T01:41:56Z", "closed_at": "2019-04-04T01:41:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a list is linked to a tuple, then appending the list does not update the tuple. However, redefining the list does.\r\n\r\n```python\r\nIn [1]: from traitlets import *\r\n   ...: from ipywidgets import *\r\n   ...: \r\n   ...: class MyTrait(HasTraits):\r\n   ...:     l = List()\r\n   ...:     t = Tuple()\r\n   ...: \r\n   ...: m1 = MyTrait()\r\n   ...: m2 = MyTrait()\r\n   ...: \r\n   ...: link1 = link((m1, 'l'), (m2, 'l'))\r\n   ...: link2 = link((m1, 'l'), (m2, 't'))\r\n   ...: m1.l.append('test')\r\n   ...: \r\n\r\nIn [2]: m2.l\r\nOut[2]: ['test']\r\n\r\nIn [3]: m2.t\r\nOut[3]: ()\r\n\r\nIn [4]: m1.l = ['Totally new list']\r\n\r\nIn [5]: m2.l\r\nOut[5]: ['Totally new list']\r\n\r\nIn [6]: m2.t\r\nOut[6]: ('Totally new list',)\r\n```\r\n\r\nIt would be nice for appending the list to update the tuple. Is there a way to manually trigger this?\r\n\r\nThanks,\r\nOliver", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/442", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/442/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/442/events", "html_url": "https://github.com/ipython/traitlets/issues/442", "id": 250383376, "node_id": "MDU6SXNzdWUyNTAzODMzNzY=", "number": 442, "title": "Links don't update when Lists are appended", "user": {"login": "OliverEvans96", "id": 15915043, "node_id": "MDQ6VXNlcjE1OTE1MDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/15915043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OliverEvans96", "html_url": "https://github.com/OliverEvans96", "followers_url": "https://api.github.com/users/OliverEvans96/followers", "following_url": "https://api.github.com/users/OliverEvans96/following{/other_user}", "gists_url": "https://api.github.com/users/OliverEvans96/gists{/gist_id}", "starred_url": "https://api.github.com/users/OliverEvans96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OliverEvans96/subscriptions", "organizations_url": "https://api.github.com/users/OliverEvans96/orgs", "repos_url": "https://api.github.com/users/OliverEvans96/repos", "events_url": "https://api.github.com/users/OliverEvans96/events{/privacy}", "received_events_url": "https://api.github.com/users/OliverEvans96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-15T17:35:42Z", "updated_at": "2017-08-15T18:05:38Z", "closed_at": "2017-08-15T17:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "e.g.\r\n```python\r\nfrom traitlets import *\r\n\r\nclass MyTrait(HasTraits):\r\n    l = List()\r\n\r\nm1 = MyTrait()\r\nm2 = MyTrait()\r\n\r\nlink((m1, 'l'), (m2, 'l'))\r\nm1.l.append('test')\r\n```\r\n\r\nI would expect this to update `m2`, but it does not. Is there a workaround or a way to manually trigger a link update?\r\n\r\nThanks,\r\nOliver", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/432", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/432/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/432/events", "html_url": "https://github.com/ipython/traitlets/issues/432", "id": 246159431, "node_id": "MDU6SXNzdWUyNDYxNTk0MzE=", "number": 432, "title": "Feature: Can help(HasTraitsClass) display help text for traits? ", "user": {"login": "mpu-creare", "id": 12446685, "node_id": "MDQ6VXNlcjEyNDQ2Njg1", "avatar_url": "https://avatars0.githubusercontent.com/u/12446685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpu-creare", "html_url": "https://github.com/mpu-creare", "followers_url": "https://api.github.com/users/mpu-creare/followers", "following_url": "https://api.github.com/users/mpu-creare/following{/other_user}", "gists_url": "https://api.github.com/users/mpu-creare/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpu-creare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpu-creare/subscriptions", "organizations_url": "https://api.github.com/users/mpu-creare/orgs", "repos_url": "https://api.github.com/users/mpu-creare/repos", "events_url": "https://api.github.com/users/mpu-creare/events{/privacy}", "received_events_url": "https://api.github.com/users/mpu-creare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-27T20:28:27Z", "updated_at": "2017-08-01T19:34:46Z", "closed_at": "2017-08-01T19:34:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just a feature request: I'd like help text to get to my users in a nicer way.\r\n\r\nIs this possible? Some code: \r\n\r\n```python\r\n>>> import traitlets as tl\r\n>>> tl.__version__\r\n'4.3.2'\r\n>>>class HasTraitsClass(tl.HasTraits):\r\n>>>    a = tl.Float(0.0, help=\"This describes variable 'a'\")\r\n\r\n>>> help(HasTraitsClass)\r\nHelp on class HasTraitsClass in module __main__:\r\n\r\nclass HasTraitsClass(traitlets.traitlets.HasTraits)\r\n |  Method resolution order:\r\n |      HasTraitsClass\r\n |      traitlets.traitlets.HasTraits\r\n |      traitlets.traitlets.HasDescriptors\r\n |      __builtin__.object\r\n |  \r\n |  Data descriptors defined here:\r\n |  \r\n |  a\r\n |      A float trait.\r\n<SNIP>\r\n```\r\n\r\nIdeally the it would be:\r\n\r\n```python \r\n |  Data descriptors defined here:\r\n |  \r\n |  a : A float trait.\r\n |      This describes  variable 'a'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/428", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/428/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/428/events", "html_url": "https://github.com/ipython/traitlets/issues/428", "id": 243586342, "node_id": "MDU6SXNzdWUyNDM1ODYzNDI=", "number": 428, "title": "Any() trait not validated", "user": {"login": "jasongrout", "id": 192614, "node_id": "MDQ6VXNlcjE5MjYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasongrout", "html_url": "https://github.com/jasongrout", "followers_url": "https://api.github.com/users/jasongrout/followers", "following_url": "https://api.github.com/users/jasongrout/following{/other_user}", "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions", "organizations_url": "https://api.github.com/users/jasongrout/orgs", "repos_url": "https://api.github.com/users/jasongrout/repos", "events_url": "https://api.github.com/users/jasongrout/events{/privacy}", "received_events_url": "https://api.github.com/users/jasongrout/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-18T03:03:38Z", "updated_at": "2017-08-09T10:53:29Z", "closed_at": "2017-08-09T10:53:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm seeing the following in traitlets 4.3.2. It appears that the validation for `x` is not getting called. If I change `x = Any(())` to `x = Tuple( () )`, the validator is called.\r\n\r\n```\r\nIn [2]: from traitlets import HasTraits, Unicode, Any, validate, Tuple\r\n   ...: class A(HasTraits):\r\n   ...:     x = Any(())\r\n   ...:     \r\n   ...:     @validate('x')\r\n   ...:     def f(self, proposal):\r\n   ...:         print(proposal)\r\n   ...:         return (1,2)\r\n   ...: A().x\r\n   ...: \r\nOut[2]: ()\r\n\r\nIn [3]: import traitlets\r\n   ...: traitlets.__version__\r\n   ...: \r\nOut[3]: '4.3.2'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/425", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/425/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/425/events", "html_url": "https://github.com/ipython/traitlets/issues/425", "id": 240377341, "node_id": "MDU6SXNzdWUyNDAzNzczNDE=", "number": 425, "title": "KeyError: 'prompts'", "user": {"login": "flrgsr", "id": 10788640, "node_id": "MDQ6VXNlcjEwNzg4NjQw", "avatar_url": "https://avatars3.githubusercontent.com/u/10788640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flrgsr", "html_url": "https://github.com/flrgsr", "followers_url": "https://api.github.com/users/flrgsr/followers", "following_url": "https://api.github.com/users/flrgsr/following{/other_user}", "gists_url": "https://api.github.com/users/flrgsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/flrgsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flrgsr/subscriptions", "organizations_url": "https://api.github.com/users/flrgsr/orgs", "repos_url": "https://api.github.com/users/flrgsr/repos", "events_url": "https://api.github.com/users/flrgsr/events{/privacy}", "received_events_url": "https://api.github.com/users/flrgsr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-04T10:18:06Z", "updated_at": "2017-08-08T13:12:20Z", "closed_at": "2017-08-08T13:12:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wanted to start ipython3 this morning and was greeted with this nasty welcome:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/traitlets.py\", line 490, in get\r\n    value = obj._trait_values[self.name]\r\nKeyError: 'prompts'\r\n```\r\n\r\n```\r\nipython3 --version                                                                                                                                              \r\n6.1.0\r\npython3 --version\r\nPython 3.6.1\r\n```\r\n\r\nfull traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/traitlets.py\", line 490, in get\r\n    value = obj._trait_values[self.name]\r\nKeyError: 'prompts'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/ipython3\", line 11, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/__init__.py\", line 125, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/config/application.py\", line 830, in launch_instance\r\n    app.initialize(argv)\r\n  File \"<decorator-gen-112>\", line 2, in initialize\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/config/application.py\", line 88, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/terminal/ipapp.py\", line 317, in initialize\r\n    self.init_shell()\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/terminal/ipapp.py\", line 333, in init_shell\r\n    ipython_dir=self.ipython_dir, user_ns=self.user_ns)\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/config/configurable.py\", line 508, in instance\r\n    inst = cls(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 426, in __init__\r\n    self.init_prompt_toolkit_cli()\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 275, in init_prompt_toolkit_cli\r\n    **self._layout_options()\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 353, in _layout_options\r\n    'get_prompt_tokens':self.prompts.in_prompt_tokens,\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/traitlets.py\", line 525, in __get__\r\n    return self.get(obj, cls)\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/traitlets.py\", line 493, in get\r\n    default = obj.trait_defaults(self.name)\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/traitlets.py\", line 1477, in trait_defaults\r\n    return self._get_trait_default_generator(names[0])(self)\r\n  File \"/usr/local/lib/python3.6/site-packages/traitlets/traitlets/traitlets/traitlets.py\", line 928, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 168, in _prompts_default\r\n    return self.prompts_class(self)\r\n  File \"/usr/local/lib/python3.6/site-packages/powerline/bindings/ipython/since_5.py\", line 62, in __init__\r\n    powerline.do_setup(shell, self, shutdown_hook)\r\n  File \"/usr/local/lib/python3.6/site-packages/powerline/bindings/ipython/since_5.py\", line 26, in do_setup\r\n    saved_msfn = ip._make_style_from_name\r\nAttributeError: 'TerminalInteractiveShell' object has no attribute '_make_style_from_name'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/423", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/423/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/423/events", "html_url": "https://github.com/ipython/traitlets/issues/423", "id": 238408819, "node_id": "MDU6SXNzdWUyMzg0MDg4MTk=", "number": 423, "title": "ProxyTrait", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-25T21:46:34Z", "updated_at": "2018-01-30T18:36:29Z", "closed_at": "2017-11-08T21:43:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "*I don't have time to make a complete PR right now*\r\n\r\n# Summary\r\n\r\nA simple class, whose subclasses can wrap an arbitrary trait with extra logic.\r\n\r\n# Use Case\r\n\r\nImagine if you needed to run certain logic after all the observers of a given trait have fully propagated their changes. This is not possible through observance in traitlets because the order in which callbacks are gathered and fired is not publically known. However, you could accomplish this with a proxy that calls a trait's `TraitType.set` method before its own.\r\n\r\n# Implementation\r\n\r\n```python\r\nclass TraitProxy(TraitType):\r\n\r\n    def __init__(self, trait):\r\n        self.__trait = trait\r\n\r\n    def instance_init(self, obj):\r\n        self.__trait.instance_init(obj)\r\n\r\n    def class_init(self, cls, name):\r\n        self.__trait.class_init(cls, name)\r\n\r\n    def set(self, obj, val):\r\n        self.__trait.set(obj, val)\r\n\r\n    def get(self, obj, cls):\r\n        return self.__trait.get(obj, cls)\r\n\r\n    def __getattr__(self, name):\r\n        return getattr(self.__trait, name)\r\n```\r\n\r\n# Example\r\n\r\n```python\r\nclass Perishable(TraitProxy):\r\n\r\n    def set(self, obj, cls):\r\n        super(Perishable, self).set(obj, cls)\r\n        obj.mark_as_stale()\r\n\r\nclass MyClass(HasTraits):\r\n\r\n    i = Perishable(Int())\r\n    j = Int()\r\n    \r\n    @observe(\"i\")\r\n    def _i_changed(self, change):\r\n        self.j = change.new\r\n    \r\n    def mark_as_stale(self):\r\n        # do something after the object has been fully updated.\r\n        assert self.i == self.j\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/419", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/419/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/419/events", "html_url": "https://github.com/ipython/traitlets/issues/419", "id": 236919271, "node_id": "MDU6SXNzdWUyMzY5MTkyNzE=", "number": 419, "title": "support for Python2.7", "user": {"login": "djarecka", "id": 1662746, "node_id": "MDQ6VXNlcjE2NjI3NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1662746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djarecka", "html_url": "https://github.com/djarecka", "followers_url": "https://api.github.com/users/djarecka/followers", "following_url": "https://api.github.com/users/djarecka/following{/other_user}", "gists_url": "https://api.github.com/users/djarecka/gists{/gist_id}", "starred_url": "https://api.github.com/users/djarecka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djarecka/subscriptions", "organizations_url": "https://api.github.com/users/djarecka/orgs", "repos_url": "https://api.github.com/users/djarecka/repos", "events_url": "https://api.github.com/users/djarecka/events{/privacy}", "received_events_url": "https://api.github.com/users/djarecka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69459211, "node_id": "MDU6TGFiZWw2OTQ1OTIxMQ==", "url": "https://api.github.com/repos/ipython/traitlets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T14:56:43Z", "updated_at": "2017-08-09T10:53:51Z", "closed_at": "2017-08-09T10:53:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a general question, not an issue, let me know if you have better place to ask it.\r\n\r\nAre you planning to drop support for Python 2.7 anytime soon?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/417", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/417/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/417/events", "html_url": "https://github.com/ipython/traitlets/issues/417", "id": 234008366, "node_id": "MDU6SXNzdWUyMzQwMDgzNjY=", "number": 417, "title": "buggy recommendation for version param in json config traitlets/docs/source/config.rst", "user": {"login": "GaryHendrick", "id": 252046, "node_id": "MDQ6VXNlcjI1MjA0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/252046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaryHendrick", "html_url": "https://github.com/GaryHendrick", "followers_url": "https://api.github.com/users/GaryHendrick/followers", "following_url": "https://api.github.com/users/GaryHendrick/following{/other_user}", "gists_url": "https://api.github.com/users/GaryHendrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaryHendrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaryHendrick/subscriptions", "organizations_url": "https://api.github.com/users/GaryHendrick/orgs", "repos_url": "https://api.github.com/users/GaryHendrick/repos", "events_url": "https://api.github.com/users/GaryHendrick/events{/privacy}", "received_events_url": "https://api.github.com/users/GaryHendrick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2017-06-06T20:06:19Z", "updated_at": "2017-06-08T09:26:16Z", "closed_at": "2017-06-08T09:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "in reading the doc traitlets/docs/source/config.rst the json configuration example includes the following,\r\nwhich will result in a ValueError raised within `JSONFileConfigLoader._convert_to_config(self, dictionary)`, because of the version parameter value \"1.0\"\r\n```{\r\n  \"version\": \"1.0\",\r\n  \"MyClass\": {\r\n    \"name\": \"coolname\",\r\n    \"ranking\": 10\r\n  }\r\n}\r\n```\r\nThe `ValueError` is raised because \"1.0\" is not equal to 1, as checked in _convert_to_config\r\nThis can be recreated by creating the example's json config file and `load_config_file` for that file, on\r\nan `Application` from the module `traitlets.config.application`\r\n\r\nYou should see\r\n```\r\n...\r\n  File \"<decorator-gen-5>\", line 2, in load_config_file\r\n  File \"D:\\usr\\local\\Anaconda3\\envs\\opencv_tutorials\\lib\\site-packages\\traitlets\\config\\application.py\", line 87, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"D:\\usr\\local\\Anaconda3\\envs\\opencv_tutorials\\lib\\site-packages\\traitlets\\config\\application.py\", line 598, in load_config_file\r\n    raise_config_file_errors=self.raise_config_file_errors,\r\n  File \"D:\\usr\\local\\Anaconda3\\envs\\opencv_tutorials\\lib\\site-packages\\traitlets\\config\\application.py\", line 562, in _load_config_files\r\n    config = loader.load_config()\r\n  File \"D:\\usr\\local\\Anaconda3\\envs\\opencv_tutorials\\lib\\site-packages\\traitlets\\config\\loader.py\", line 407, in load_config\r\n    self.config = self._convert_to_config(dct)\r\n  File \"D:\\usr\\local\\Anaconda3\\envs\\opencv_tutorials\\lib\\site-packages\\traitlets\\config\\loader.py\", line 423, in _convert_to_config\r\n    raise ValueError('Unknown version of JSON config file: {version}'.format(version=version))\r\nValueError: Unknown version of JSON config file: 1.0\r\n```\r\n```\r\n{'commit_hash': '51ce9d73b',\r\n 'commit_source': 'installation',\r\n 'default_encoding': 'utf-8',\r\n 'ipython_path': 'D:\\\\usr\\\\local\\\\Anaconda3\\\\envs\\\\opencv_tutorials\\\\lib\\\\site-packages\\\\IPython',\r\n 'ipython_version': '6.0.0',\r\n 'os_name': 'nt',\r\n 'platform': 'Windows-10-10.0.15063-SP0',\r\n 'sys_executable': 'D:\\\\usr\\\\local\\\\Anaconda3\\\\envs\\\\opencv_tutorials\\\\python.exe',\r\n 'sys_platform': 'win32',\r\n 'sys_version': '3.6.1 | packaged by conda-forge | (default, May 11 2017, '\r\n                '19:39:41) [MSC v.1900 64 bit (AMD64)]'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/408", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/408/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/408/events", "html_url": "https://github.com/ipython/traitlets/issues/408", "id": 231366887, "node_id": "MDU6SXNzdWUyMzEzNjY4ODc=", "number": 408, "title": "Traitlets event for \"get\"", "user": {"login": "kdheepak", "id": 1813121, "node_id": "MDQ6VXNlcjE4MTMxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1813121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdheepak", "html_url": "https://github.com/kdheepak", "followers_url": "https://api.github.com/users/kdheepak/followers", "following_url": "https://api.github.com/users/kdheepak/following{/other_user}", "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions", "organizations_url": "https://api.github.com/users/kdheepak/orgs", "repos_url": "https://api.github.com/users/kdheepak/repos", "events_url": "https://api.github.com/users/kdheepak/events{/privacy}", "received_events_url": "https://api.github.com/users/kdheepak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-05-25T15:07:30Z", "updated_at": "2017-05-30T16:22:48Z", "closed_at": "2017-05-25T22:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nIs it possible to add a traitlets event for \"get\" as opposed to only responding to \"change\"? I'd like to hook into the `__get__` call for the descriptor, instead of only the `__set__`. Any suggestions on how I can go about doing this / if this would be possible would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/401", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/401/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/401/events", "html_url": "https://github.com/ipython/traitlets/issues/401", "id": 226346444, "node_id": "MDU6SXNzdWUyMjYzNDY0NDQ=", "number": 401, "title": "Traitlets 5.0", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-05-04T17:01:45Z", "updated_at": "2020-09-03T21:14:17Z", "closed_at": "2020-09-03T21:14:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Thread for discussing the prerequisites for a 5.0 pre-release.\r\n\r\ncc: @ankostis @minrk @SylvainCorlay", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/400", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/400/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/400/events", "html_url": "https://github.com/ipython/traitlets/issues/400", "id": 226340313, "node_id": "MDU6SXNzdWUyMjYzNDAzMTM=", "number": 400, "title": "Warn if HasTraits Constructor Causes setting of Non-Traits", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-04T16:37:57Z", "updated_at": "2017-10-09T14:38:55Z", "closed_at": "2017-05-05T15:13:18Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "# Summary\r\n\r\nCloses #397, which suggests the inclusion of the `Disallow` wildcard from `traits`. There's no plausible way to fully implement `Disallow` in `traitlets` however, as a compromise, we could warn (or raise) when `HasTraits`' `**kwargs` constructor would set non-traited attributes.\r\n\r\n# Background\r\n\r\n[`Disallow`](http://docs.enthought.com/traits/traits_user_manual/advanced.html#disallow-object) is a wildcard trait that prevents the getting and setting of attributes on `HasTraits` instance which have not been explicitely defined as Traits on the class. For example:\r\n\r\n```python\r\n\r\nclass MyClass(HasTraits):\r\n    _ = Disallow()\r\n\r\nmc = MyClass()\r\nmc.j = 1 # raises\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/390", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/390/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/390/events", "html_url": "https://github.com/ipython/traitlets/issues/390", "id": 220029720, "node_id": "MDU6SXNzdWUyMjAwMjk3MjA=", "number": 390, "title": "Configurable validates too often", "user": {"login": "jasongrout", "id": 192614, "node_id": "MDQ6VXNlcjE5MjYxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/192614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasongrout", "html_url": "https://github.com/jasongrout", "followers_url": "https://api.github.com/users/jasongrout/followers", "following_url": "https://api.github.com/users/jasongrout/following{/other_user}", "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions", "organizations_url": "https://api.github.com/users/jasongrout/orgs", "repos_url": "https://api.github.com/users/jasongrout/repos", "events_url": "https://api.github.com/users/jasongrout/events{/privacy}", "received_events_url": "https://api.github.com/users/jasongrout/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T20:53:13Z", "updated_at": "2017-05-04T12:08:44Z", "closed_at": "2017-05-04T12:08:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Consider this:\r\n\r\n```python\r\nfrom traitlets.config import Configurable\r\nclass A(Configurable):\r\n    x = Int(1)\r\n    \r\n    @validate('x')\r\n    def f(self, proposal):\r\n        print('validate x')\r\n        return proposal.value\r\nA(x=5)\r\n``` \r\nprints:\r\n```\r\nvalidate x\r\nvalidate x\r\n```\r\n\r\nwhile this:\r\n\r\n```python\r\nfrom traitlets import HasTraits\r\nclass A(HasTraits):\r\n    x = Int(1)\r\n\r\n    @validate('x')\r\n    def f(self, proposal):\r\n        print('validate x')\r\n        return proposal.value\r\nA(x=5)\r\n```\r\nonly validates x once:\r\n```\r\nvalidate x\r\n```\r\nFor some reason, Configurable is validating x twice, but HasTraits is only validating once.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/388", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/388/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/388/events", "html_url": "https://github.com/ipython/traitlets/issues/388", "id": 218697051, "node_id": "MDU6SXNzdWUyMTg2OTcwNTE=", "number": 388, "title": "cannot import name 'default'", "user": {"login": "arvindkanda", "id": 26143960, "node_id": "MDQ6VXNlcjI2MTQzOTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/26143960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arvindkanda", "html_url": "https://github.com/arvindkanda", "followers_url": "https://api.github.com/users/arvindkanda/followers", "following_url": "https://api.github.com/users/arvindkanda/following{/other_user}", "gists_url": "https://api.github.com/users/arvindkanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/arvindkanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arvindkanda/subscriptions", "organizations_url": "https://api.github.com/users/arvindkanda/orgs", "repos_url": "https://api.github.com/users/arvindkanda/repos", "events_url": "https://api.github.com/users/arvindkanda/events{/privacy}", "received_events_url": "https://api.github.com/users/arvindkanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-01T13:50:25Z", "updated_at": "2017-04-03T00:40:59Z", "closed_at": "2017-04-03T00:40:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following error while loading jupyter.\r\n\r\nFile \"/anaconda/bin/jupyter-notebook\", line 4, in <module>\r\nimport notebook.notebookapp\r\nFile \"/anaconda/lib/python3.6/site-packages/notebook/notebookapp.py\", \r\nline 63, in <module>\r\nfrom .services.contents.manager import ContentsManager\r\nFile \"/anaconda/lib/python3.6/site-\r\npackages/notebook/services/contents/manager.py\", line 16, in <module>\r\nfrom nbformat import sign, validate, ValidationError\r\nFile \"/anaconda/lib/python3.6/site-packages/nbformat/sign.py\", line 24, \r\nin <module>\r\nfrom traitlets import (\r\nImportError: cannot import name 'default'\r\n\r\nIt was working fine until yesterday and not sure what broke. I uninstalled and reinstalled traitlets but still no luck.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/382", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/382/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/382/events", "html_url": "https://github.com/ipython/traitlets/issues/382", "id": 215917248, "node_id": "MDU6SXNzdWUyMTU5MTcyNDg=", "number": 382, "title": "`notify` instead of `notify_change`?", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-22T00:17:38Z", "updated_at": "2017-03-31T22:14:52Z", "closed_at": "2017-03-31T22:14:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Should we `notify` or `notify_change`?\r\n\r\nIt seems like `notify_change` might be confusing as the types of notifications being used start to diversify. For instance, I can imagine passing a simple `Bunch(name='something', type='ping')` that doesn't signify a \"change\".\r\n\r\nOf course, this wouldn't be backward compatible, but a simple regex pattern would suffice to account for this change downstream. If this change is deemed reasonable, one should not that `traitlets` still uses `_notify_change` internally, and that people may not have migrated to `notify_change` yet, so now would be the best time to make this change. Not later.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/375", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/375/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/375/events", "html_url": "https://github.com/ipython/traitlets/issues/375", "id": 205049777, "node_id": "MDU6SXNzdWUyMDUwNDk3Nzc=", "number": 375, "title": "Async Trait Observers", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-03T01:38:53Z", "updated_at": "2017-02-03T22:02:25Z", "closed_at": "2017-02-03T22:02:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm really just throwing this idea out there to see if there's any demand for it. Perhaps this would be useful for changes that result in a network request? I haven't really thought about it too deeply though.\r\n\r\ncc: @rgbkrk @SylvainCorlay @ellisonbg @minrk @tacaswell \r\n\r\n```python\r\nimport asyncio\r\nimport random\r\n\r\n\r\nclass AsyncTrait(object):\r\n    \r\n    def __set__(self, obj, value):\r\n        task = asyncio.ensure_future(obj.handle(value))\r\n        obj._tasks.append(task)\r\n    \r\n    def __get__(self, obj, cls):\r\n        loop = asyncio.get_event_loop()\r\n        loop.run_until_complete(asyncio.gather(*obj._tasks))\r\n        return obj._x\r\n\r\n\r\nclass HasAsyncTraits(object):\r\n    \r\n    a = AsyncTrait()\r\n    \r\n    def __init__(self):\r\n        self._tasks = []\r\n        self._x = 0\r\n    \r\n    async def handle(self, value):\r\n        await asyncio.sleep(random.random())\r\n        self._x = value\r\n\r\n        \r\nobj = HasAsyncTraits()\r\n\r\nfor i in range(10):\r\n    obj.a = i\r\n\r\n# computation occurs now\r\nprint(obj.a)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/363", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/363/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/363/events", "html_url": "https://github.com/ipython/traitlets/issues/363", "id": 202119599, "node_id": "MDU6SXNzdWUyMDIxMTk1OTk=", "number": 363, "title": "Traitlets master breaks ipywidgets", "user": {"login": "SylvainCorlay", "id": 2397974, "node_id": "MDQ6VXNlcjIzOTc5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SylvainCorlay", "html_url": "https://github.com/SylvainCorlay", "followers_url": "https://api.github.com/users/SylvainCorlay/followers", "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}", "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions", "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs", "repos_url": "https://api.github.com/users/SylvainCorlay/repos", "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}", "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 12, "created_at": "2017-01-20T11:36:43Z", "updated_at": "2017-08-09T10:49:03Z", "closed_at": "2017-08-09T10:49:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have not investigated yet, but we cannot make a release before we figure that one out.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/358", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/358/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/358/events", "html_url": "https://github.com/ipython/traitlets/issues/358", "id": 199388260, "node_id": "MDU6SXNzdWUxOTkzODgyNjA=", "number": 358, "title": "Change notifications not working for Bytes traitlet", "user": {"login": "hannorein", "id": 53376, "node_id": "MDQ6VXNlcjUzMzc2", "avatar_url": "https://avatars3.githubusercontent.com/u/53376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hannorein", "html_url": "https://github.com/hannorein", "followers_url": "https://api.github.com/users/hannorein/followers", "following_url": "https://api.github.com/users/hannorein/following{/other_user}", "gists_url": "https://api.github.com/users/hannorein/gists{/gist_id}", "starred_url": "https://api.github.com/users/hannorein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hannorein/subscriptions", "organizations_url": "https://api.github.com/users/hannorein/orgs", "repos_url": "https://api.github.com/users/hannorein/repos", "events_url": "https://api.github.com/users/hannorein/events{/privacy}", "received_events_url": "https://api.github.com/users/hannorein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-07T22:11:30Z", "updated_at": "2019-04-04T02:03:46Z", "closed_at": "2019-04-04T02:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've registered to get notifications for changes in a Bytes traitlet via something like\r\n\r\n    this.model.on('change:particle_data', this.particle_data_changed, this);\r\n\r\nBut I never receive any callback. It works for other types of traitlets. Is that expected behaviour or a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/352", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/352/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/352/events", "html_url": "https://github.com/ipython/traitlets/issues/352", "id": 191367297, "node_id": "MDU6SXNzdWUxOTEzNjcyOTc=", "number": 352, "title": "Move Eventful Traits to IPyWidgets", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-23T19:59:13Z", "updated_at": "2017-02-03T22:06:14Z", "closed_at": "2017-02-03T22:06:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@minrk @SylvainCorlay - I'm not sure how much use eventful traits will see in standard traitlets applications. Would it be more reasonable to move discussions for eventful traits to [ipywidgets](https://github.com/ipython/ipywidgets)?\r\n\r\n#327 #278", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/351", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/351/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/351/events", "html_url": "https://github.com/ipython/traitlets/issues/351", "id": 191043232, "node_id": "MDU6SXNzdWUxOTEwNDMyMzI=", "number": 351, "title": "Behaviour of HasTraits.observe(<handler>, <trait>, type=All)", "user": {"login": "ajwdewit", "id": 5472566, "node_id": "MDQ6VXNlcjU0NzI1NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5472566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajwdewit", "html_url": "https://github.com/ajwdewit", "followers_url": "https://api.github.com/users/ajwdewit/followers", "following_url": "https://api.github.com/users/ajwdewit/following{/other_user}", "gists_url": "https://api.github.com/users/ajwdewit/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajwdewit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajwdewit/subscriptions", "organizations_url": "https://api.github.com/users/ajwdewit/orgs", "repos_url": "https://api.github.com/users/ajwdewit/repos", "events_url": "https://api.github.com/users/ajwdewit/events{/privacy}", "received_events_url": "https://api.github.com/users/ajwdewit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-22T15:47:11Z", "updated_at": "2016-11-29T20:13:23Z", "closed_at": "2016-11-29T20:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tested the dynamic observe on HasTraits attributes with the following example:\r\n\r\n```python\r\nfrom traitlets import HasTraits, Float, All\r\n\r\nclass TestTraitlets(HasTraits):\r\n    a = Float()\r\n\r\n    def __init__(self):\r\n        HasTraits.__init__(self)\r\n        self.observe(self._a_notified, \"a\", type=All)\r\n\r\n    def _a_notified(self, d):\r\n        print(\"'{name}' Changed: {old} to {new}\".format(**d))\r\n\r\nt = TestTraitlets()\r\nprint(\"Initial value of a: \", t.a)\r\nprint(\"Changing a to 2:\")\r\nt.a = 2\r\nprint(\"reassigning a to 2:\")\r\nt.a = 2\r\nprint(\"Changing a to 3:\")\r\nt.a = 3\r\n```\r\nWhen running it provides the following output:\r\n```\r\nInitial value of a:  0.0\r\nChanging a to 2:\r\n'a' Changed: 0.0 to 2.0\r\nreassigning a to 2:\r\nChanging a to 3:\r\n'a' Changed: 2.0 to 3.0\r\n```\r\n\r\nAlthough the handler gets notified when `a` changes, it is not notified when the same value (2) is reassigned to the trait. Despite that the trait is observed with ```type=All```. Is this the intended behaviour? I would expect that with ```type=All``` all events to a trait are reported to the handler.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/348", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/348/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/348/events", "html_url": "https://github.com/ipython/traitlets/issues/348", "id": 189650155, "node_id": "MDU6SXNzdWUxODk2NTAxNTU=", "number": 348, "title": "\"Edit on Github\" link on docs broken for stable", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-16T09:55:13Z", "updated_at": "2019-04-04T02:13:26Z", "closed_at": "2019-04-04T02:13:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that the \"edit on Github\" link at\r\nhttp://traitlets.readthedocs.io/en/stable/\r\npoints to\r\nhttps://github.com/ipython/traitlets/blob/186518a091d1ca05af0039cd4f147f1c2a649cd6/docs/source/index.rst\r\nwhich doesn't exist.\r\n\r\nI tried to have a quick look if this is a known issue and found:\r\nhttps://github.com/rtfd/readthedocs.org/issues/1637\r\nNot sure if it's related.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/344", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/344/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/344/events", "html_url": "https://github.com/ipython/traitlets/issues/344", "id": 188379119, "node_id": "MDU6SXNzdWUxODgzNzkxMTk=", "number": 344, "title": "Default value of Union is not respected", "user": {"login": "jakevdp", "id": 781659, "node_id": "MDQ6VXNlcjc4MTY1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/781659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevdp", "html_url": "https://github.com/jakevdp", "followers_url": "https://api.github.com/users/jakevdp/followers", "following_url": "https://api.github.com/users/jakevdp/following{/other_user}", "gists_url": "https://api.github.com/users/jakevdp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevdp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevdp/subscriptions", "organizations_url": "https://api.github.com/users/jakevdp/orgs", "repos_url": "https://api.github.com/users/jakevdp/repos", "events_url": "https://api.github.com/users/jakevdp/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevdp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-09T23:24:01Z", "updated_at": "2016-11-21T11:48:14Z", "closed_at": "2016-11-21T11:48:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ran into this today: it seems the specified default value for ``traitlets.Union`` is not respected.\r\n\r\n```python\r\nimport traitlets as T\r\n\r\nclass Foo(T.HasTraits):\r\n    unicode = T.Unicode(allow_none=True, default_value=None)\r\n    unicode_or_list = T.Union([T.Unicode(), T.List(T.Unicode())],\r\n                              allow_none=True, default_value=None)\r\n    \r\nf = Foo()\r\nprint(f.unicode)  # This is None as expected\r\nprint(f.unicode_or_list)  # This is an empty string, should be None?\r\n```\r\n\r\nThe workaround is to specify the default value within the first entry of the Union's list, but I found this behavior surprising. Is it a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/342", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/342/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/342/events", "html_url": "https://github.com/ipython/traitlets/issues/342", "id": 186882259, "node_id": "MDU6SXNzdWUxODY4ODIyNTk=", "number": 342, "title": "Test failures in jack-of-none", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2016-11-02T18:23:59Z", "updated_at": "2016-11-03T15:46:33Z", "closed_at": "2016-11-02T20:11:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Notebook tests are failing, but I think #332 in this repo is a more likely culprit than any recent changes in the notebook. Here's the [full log](https://jenkins.jupyter.org/job/jack-of-none/471/console), and the bit that looks most likely to be relevant:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 505, in get\r\n    value = obj._trait_values[self.name]\r\nKeyError: 'pre_save_hook'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/base/handlers.py\", line 459, in wrapper\r\n    result = yield gen.maybe_future(method(self, *args, **kwargs))\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/tornado/gen.py\", line 1015, in run\r\n    value = future.result()\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"<string>\", line 3, in raise_exc_info\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/tornado/gen.py\", line 1021, in run\r\n    yielded = self.gen.throw(*exc_info)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/services/contents/handlers.py\", line 214, in post\r\n    yield self._copy(copy_from, path)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/tornado/gen.py\", line 1015, in run\r\n    value = future.result()\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/tornado/concurrent.py\", line 237, in result\r\n    raise_exc_info(self._exc_info)\r\n  File \"<string>\", line 3, in raise_exc_info\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/tornado/gen.py\", line 285, in wrapper\r\n    yielded = next(result)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/services/contents/handlers.py\", line 153, in _copy\r\n    model = yield gen.maybe_future(self.contents_manager.copy(copy_from, copy_to))\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/services/contents/manager.py\", line 405, in copy\r\n    model = self.save(model, to_path)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/services/contents/filemanager.py\", line 414, in save\r\n    self.run_pre_save_hook(model=model, path=path)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/services/contents/manager.py\", line 108, in run_pre_save_hook\r\n    if self.pre_save_hook:\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 535, in __get__\r\n    return self.get(obj, cls)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 514, in get\r\n    value = self._validate(obj, dgen(obj))\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 572, in _validate\r\n    value = self._cross_validate(obj, value)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 578, in _cross_validate\r\n    value = obj._trait_validators[self.name](obj, proposal)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 897, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/notebook/services/contents/manager.py\", line 103, in _validate_pre_save_hook\r\n    raise TraitError(\"pre_save_hook must be callable\")\r\ntraitlets.traitlets.TraitError: pre_save_hook must be callable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/328", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/328/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/328/events", "html_url": "https://github.com/ipython/traitlets/issues/328", "id": 180541869, "node_id": "MDU6SXNzdWUxODA1NDE4Njk=", "number": 328, "title": "No tests are run", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/1", "html_url": "https://github.com/ipython/traitlets/milestone/1", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/1/labels", "id": 1063942, "node_id": "MDk6TWlsZXN0b25lMTA2Mzk0Mg==", "number": 1, "title": "no action", "description": null, "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 48, "state": "open", "created_at": "2015-04-12T18:44:36Z", "updated_at": "2019-06-23T07:10:01Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2016-10-02T23:12:11Z", "updated_at": "2016-10-03T15:36:02Z", "closed_at": "2016-10-03T15:36:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When run from the FreeBSD port, it never runs any tests:\n\n```\nrunning test\nrunning egg_info\nwriting requirements to traitlets.egg-info/requires.txt\nwriting traitlets.egg-info/PKG-INFO\nwriting top-level names to traitlets.egg-info/top_level.txt\nwriting dependency_links to traitlets.egg-info/dependency_links.txt\nreading manifest file 'traitlets.egg-info/SOURCES.txt'\nwriting manifest file 'traitlets.egg-info/SOURCES.txt'\nrunning build_ext\n\n----------------------------------------------------------------------\nRan 0 tests in 0.000s\n```\n\nNot sure if this is OS-specific, or a generic problem, but tests should run when setup.py suggests there are tests.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/321", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/321/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/321/events", "html_url": "https://github.com/ipython/traitlets/issues/321", "id": 178508150, "node_id": "MDU6SXNzdWUxNzg1MDgxNTA=", "number": 321, "title": "Add a callable traitlet type", "user": {"login": "yuvipanda", "id": 30430, "node_id": "MDQ6VXNlcjMwNDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/30430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvipanda", "html_url": "https://github.com/yuvipanda", "followers_url": "https://api.github.com/users/yuvipanda/followers", "following_url": "https://api.github.com/users/yuvipanda/following{/other_user}", "gists_url": "https://api.github.com/users/yuvipanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvipanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvipanda/subscriptions", "organizations_url": "https://api.github.com/users/yuvipanda/orgs", "repos_url": "https://api.github.com/users/yuvipanda/repos", "events_url": "https://api.github.com/users/yuvipanda/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvipanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-22T02:51:15Z", "updated_at": "2019-05-22T11:58:38Z", "closed_at": "2016-10-25T13:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This would be useful when you need to pass in a function. I've run into this several times when writing JupyterHub spawners. Environment variables can be specified as a dict whose value can be callable in JupyterHub, for example. I'm implementing this in one of my spawners just now, and think it'll be useful in the core library too.\n\nWould people be open to a patch that added a callable traitlet type? if so, should it support further validation? The only one I could think of that'll make sense in Python would be an arity check...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/312", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/312/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/312/events", "html_url": "https://github.com/ipython/traitlets/issues/312", "id": 176523643, "node_id": "MDU6SXNzdWUxNzY1MjM2NDM=", "number": 312, "title": "Did change['old'] cease to exist?", "user": {"login": "mpacer", "id": 2482408, "node_id": "MDQ6VXNlcjI0ODI0MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2482408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpacer", "html_url": "https://github.com/mpacer", "followers_url": "https://api.github.com/users/mpacer/followers", "following_url": "https://api.github.com/users/mpacer/following{/other_user}", "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions", "organizations_url": "https://api.github.com/users/mpacer/orgs", "repos_url": "https://api.github.com/users/mpacer/repos", "events_url": "https://api.github.com/users/mpacer/events{/privacy}", "received_events_url": "https://api.github.com/users/mpacer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-13T01:10:27Z", "updated_at": "2016-12-13T21:34:46Z", "closed_at": "2016-12-13T21:34:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I was trying to work through the examples of `@observe` in order to debug some nbconvert stuff. And all the examples involve printing `change['old']`, but when I try to do this, I run into errors. When I look at the `traitlets.py` file I see places where new gets defined, but I'm having difficulty finding where `old` is. Are the documentation examples simply out of date?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/304", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/304/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/304/events", "html_url": "https://github.com/ipython/traitlets/issues/304", "id": 175136586, "node_id": "MDU6SXNzdWUxNzUxMzY1ODY=", "number": 304, "title": "`Dict` trait is lacking a way to constrain all keys with a single trait", "user": {"login": "burnpanck", "id": 1310437, "node_id": "MDQ6VXNlcjEzMTA0Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1310437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burnpanck", "html_url": "https://github.com/burnpanck", "followers_url": "https://api.github.com/users/burnpanck/followers", "following_url": "https://api.github.com/users/burnpanck/following{/other_user}", "gists_url": "https://api.github.com/users/burnpanck/gists{/gist_id}", "starred_url": "https://api.github.com/users/burnpanck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burnpanck/subscriptions", "organizations_url": "https://api.github.com/users/burnpanck/orgs", "repos_url": "https://api.github.com/users/burnpanck/repos", "events_url": "https://api.github.com/users/burnpanck/events{/privacy}", "received_events_url": "https://api.github.com/users/burnpanck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-05T23:32:49Z", "updated_at": "2017-05-06T21:35:13Z", "closed_at": "2016-11-28T15:41:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Coming from the original traits, I am used to `tr.Dict(TraitAppliedToKeys,TraitAppliedToValues)`. This functionality is lacking in traitlets. When describing a mathematical map, the two trait specifications would specify the domain and image of the map.\nObviously, this trait instead offers the functionality of something that I'd call _lightweight object specification_, where the keys are essentially fixed values. To me, that describes less of a mapping, but really more of a set of (typically named?) properties. Maaybe we should have two aliases `Mapping` and `PropertySet`, both describing instances of dict?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/303", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/303/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/303/events", "html_url": "https://github.com/ipython/traitlets/issues/303", "id": 174915251, "node_id": "MDU6SXNzdWUxNzQ5MTUyNTE=", "number": 303, "title": "`traitlets.link` is not documented", "user": {"login": "pkch", "id": 1593648, "node_id": "MDQ6VXNlcjE1OTM2NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1593648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkch", "html_url": "https://github.com/pkch", "followers_url": "https://api.github.com/users/pkch/followers", "following_url": "https://api.github.com/users/pkch/following{/other_user}", "gists_url": "https://api.github.com/users/pkch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkch/subscriptions", "organizations_url": "https://api.github.com/users/pkch/orgs", "repos_url": "https://api.github.com/users/pkch/repos", "events_url": "https://api.github.com/users/pkch/events{/privacy}", "received_events_url": "https://api.github.com/users/pkch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 0, "created_at": "2016-09-03T20:16:18Z", "updated_at": "2016-09-07T07:46:55Z", "closed_at": "2016-09-07T06:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I could not find any mention of `link` function or the object it creates anywhere in the docs (apart from a brief mention in the changelog).\n\nThere is a docstring:\n\n```\nDocstring:     \nLink traits from different objects together so they remain in sync.\n\nParameters\n----------\nsource : (object / attribute name) pair\ntarget : (object / attribute name) pair\n\nExamples\n--------\n\n>>> c = link((src, 'value'), (tgt, 'value'))\n>>> src.value = 5  # updates other objects as well\n```\n\nHowever, it's not really sufficient for documentation (for example, it's unclear what else besides `'value'` can be used in the call; whether it's possible to link three objects; etc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/296", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/296/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/296/events", "html_url": "https://github.com/ipython/traitlets/issues/296", "id": 173608103, "node_id": "MDU6SXNzdWUxNzM2MDgxMDM=", "number": 296, "title": "Enhance `--help-all` to print all relevant  configurables, along with their relations", "user": {"login": "ankostis", "id": 501585, "node_id": "MDQ6VXNlcjUwMTU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/501585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankostis", "html_url": "https://github.com/ankostis", "followers_url": "https://api.github.com/users/ankostis/followers", "following_url": "https://api.github.com/users/ankostis/following{/other_user}", "gists_url": "https://api.github.com/users/ankostis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankostis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankostis/subscriptions", "organizations_url": "https://api.github.com/users/ankostis/orgs", "repos_url": "https://api.github.com/users/ankostis/repos", "events_url": "https://api.github.com/users/ankostis/events{/privacy}", "received_events_url": "https://api.github.com/users/ankostis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-27T18:10:40Z", "updated_at": "2016-09-26T08:27:35Z", "closed_at": "2016-09-26T08:27:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now that an elaborate traversal of **\"Configurable-inheritance\"**  got merged (#289) for when generating the sample config-file (hopefully everything works all right),\nis there a reason why the same logic is not used when printing the `--help-all`  message?\n(i.e. to reduce the clutter in the terminal?)\n\nSpecifically in [traitlets/config/application.py#L384](https://github.com/ipython/traitlets/blob/master/traitlets/config/application.py#L384) where the classes to examine gets decided, there is this line:\n\n```\nhelp_classes = self.classes\n```\n\nI would expect to find:\n\n```\nhelp_classes =  = self._classes_inc_parents(self)  \n```\n\nbut I've tested with even with the new `self._classes_in_config_sample()` method and it works fine.\n\nA PR for this would be trivial, but now that `parent` is appropriately set on sub-commands (#292),\n~~we can~~ _it may be possible to_  traverse the **\"commands-chain\"**, to provide also hints about them on the help & sample-config-file sections, like that:  \n\n```\n[root-cmd  previous-sub-cmd]  *sub-cmd(parent1, parent2)\n```\n\n[*] It is the `sub-cmd` that is documented above.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/294", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/294/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/294/events", "html_url": "https://github.com/ipython/traitlets/issues/294", "id": 173585249, "node_id": "MDU6SXNzdWUxNzM1ODUyNDk=", "number": 294, "title": "Documentation for `Dict.__init__()` constructor arguments is not clear", "user": {"login": "ankostis", "id": 501585, "node_id": "MDQ6VXNlcjUwMTU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/501585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankostis", "html_url": "https://github.com/ankostis", "followers_url": "https://api.github.com/users/ankostis/followers", "following_url": "https://api.github.com/users/ankostis/following{/other_user}", "gists_url": "https://api.github.com/users/ankostis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankostis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankostis/subscriptions", "organizations_url": "https://api.github.com/users/ankostis/orgs", "repos_url": "https://api.github.com/users/ankostis/repos", "events_url": "https://api.github.com/users/ankostis/events{/privacy}", "received_events_url": "https://api.github.com/users/ankostis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 4, "created_at": "2016-08-27T08:19:05Z", "updated_at": "2016-11-22T13:40:15Z", "closed_at": "2016-09-07T06:44:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the documentation of the `Dict.__init__()` constructor explains its arguments with the following wording:\n\n```\n    trait : TraitType [ optional ]\n        The type for restricting the contents of the Container. If\n        unspecified, types are not checked.\n\n    traits : Dictionary of trait types [optional]\n        The type for restricting the content of the Dictionary for certain\n        keys.\n\n    default_value : SequenceType [ optional ]\n        The default value for the Dict.  Must be dict, tuple, or None, and\n        will be cast to a dict if not None. If `trait` is specified, the\n        `default_value` must conform to the constraints it specifies.\n```\n\nFrom that, I cannot understand what is the `trait` and the `traits` keywords.\n\nParticularly confusing is the term \"Container\"; a `dict` contains both keys and values.\nIs one of the referring to the type of the dictionary keys and the other to the dictionary values?\nCan it be improved to clarify this distinction?  Or maybe add a usage example?\n\nMy apologies for this \"support\" thread, \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/287", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/287/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/287/events", "html_url": "https://github.com/ipython/traitlets/issues/287", "id": 172894823, "node_id": "MDU6SXNzdWUxNzI4OTQ4MjM=", "number": 287, "title": "Default values are not cross-validated with `@validation`", "user": {"login": "ankostis", "id": 501585, "node_id": "MDQ6VXNlcjUwMTU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/501585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankostis", "html_url": "https://github.com/ankostis", "followers_url": "https://api.github.com/users/ankostis/followers", "following_url": "https://api.github.com/users/ankostis/following{/other_user}", "gists_url": "https://api.github.com/users/ankostis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankostis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankostis/subscriptions", "organizations_url": "https://api.github.com/users/ankostis/orgs", "repos_url": "https://api.github.com/users/ankostis/repos", "events_url": "https://api.github.com/users/ankostis/events{/privacy}", "received_events_url": "https://api.github.com/users/ankostis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2016-08-24T08:33:37Z", "updated_at": "2018-02-06T18:30:22Z", "closed_at": "2017-08-14T22:57:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While the defaults values are validated against the type of their trait, they are not cross-validated against any `@validate` rules.\n\nThis may lead to conflicting behavior in `HasTraits` subclasses when they contain invalid defaults, as exemplified in #263, and copied here for clarity:\n\n``` python\nclass A1(HasTraits):\n   virtue = Unicode('BAD')\n\n   @validate('virtue')\n   def _no_evil(self, proposal):\n       if proposal['value'] == 'BAD':\n           raise TraitError()\n       return proposal['value']\n\nclass A2(HasTraits):\n   virtue = Unicode('GOOD')\n\n   @validate('virtue')\n   def _no_evil(self, proposal):\n       if proposal['value'] == 'BAD':\n           raise TraitError()\n\n>>> A1('virtue='BAD')  ## Pass\n>>> A2('virtue='BAD')  ## Screams!\ntraitlets.traitlets.TraitError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/286", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/286/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/286/events", "html_url": "https://github.com/ipython/traitlets/issues/286", "id": 172686365, "node_id": "MDU6SXNzdWUxNzI2ODYzNjU=", "number": 286, "title": "How can a subcommand refer to its parent command?", "user": {"login": "ankostis", "id": 501585, "node_id": "MDQ6VXNlcjUwMTU4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/501585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankostis", "html_url": "https://github.com/ankostis", "followers_url": "https://api.github.com/users/ankostis/followers", "following_url": "https://api.github.com/users/ankostis/following{/other_user}", "gists_url": "https://api.github.com/users/ankostis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankostis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankostis/subscriptions", "organizations_url": "https://api.github.com/users/ankostis/orgs", "repos_url": "https://api.github.com/users/ankostis/repos", "events_url": "https://api.github.com/users/ankostis/events{/privacy}", "received_events_url": "https://api.github.com/users/ankostis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 3, "created_at": "2016-08-23T12:29:57Z", "updated_at": "2016-08-27T16:40:57Z", "closed_at": "2016-08-27T16:40:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What is the right way for a sub-command to refer to the parent command?\nI note that sub-commands, unlike a sub-configurable, have not their `parent` property set to point the parent command when initialized.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/281", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/281/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/281/events", "html_url": "https://github.com/ipython/traitlets/issues/281", "id": 172298450, "node_id": "MDU6SXNzdWUxNzIyOTg0NTA=", "number": 281, "title": "Provisional Warnings - Addressing the Pace of Developement", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-08-21T00:48:51Z", "updated_at": "2017-08-14T22:52:20Z", "closed_at": "2017-08-14T22:52:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "With the pace of `traitlets` development in recent months, there's been a lot of concern over ease of adoption, and the ability of those who already have, to keep up with the each new release. To reduce this unease, It's been suggested that we implement \"provisional warnings\" which will raise an exception explaining the instability of various features by default, but that can be manually silenced with a context manager. \n\nThe purpose of these warnings would be to create a space where `traitlets` can develop at a natural rate (fast or slow), but do so behind bold warning tape. A provisional warning will explain to any developer so bold as to bypass it, that the feature they are accessing is not guaranteed to exist over any period of time in the future, whether that be in the same form, or at all.\n\nI hope to determine:\n1. Whether provisional warnings are reasonable\n2. What features ought to have provisional warnings\n3. How provisional warnings should be implemented.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/279", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/279/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/279/events", "html_url": "https://github.com/ipython/traitlets/issues/279", "id": 171979813, "node_id": "MDU6SXNzdWUxNzE5Nzk4MTM=", "number": 279, "title": "Use absolute filename when configuration file conflict", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 1, "created_at": "2016-08-18T19:22:05Z", "updated_at": "2016-09-01T09:38:49Z", "closed_at": "2016-09-01T09:38:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Cf this issue:\n\nhttps://github.com/jupyter/notebook/issues/1690\n\nit is hard to figure out which files are conflicting, getting the absolute path woudl help a lot. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/271", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/271/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/271/events", "html_url": "https://github.com/ipython/traitlets/issues/271", "id": 170579093, "node_id": "MDU6SXNzdWUxNzA1NzkwOTM=", "number": 271, "title": "Default value for Union?", "user": {"login": "pbugnion", "id": 1392879, "node_id": "MDQ6VXNlcjEzOTI4Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1392879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbugnion", "html_url": "https://github.com/pbugnion", "followers_url": "https://api.github.com/users/pbugnion/followers", "following_url": "https://api.github.com/users/pbugnion/following{/other_user}", "gists_url": "https://api.github.com/users/pbugnion/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbugnion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbugnion/subscriptions", "organizations_url": "https://api.github.com/users/pbugnion/orgs", "repos_url": "https://api.github.com/users/pbugnion/repos", "events_url": "https://api.github.com/users/pbugnion/events{/privacy}", "received_events_url": "https://api.github.com/users/pbugnion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 3, "created_at": "2016-08-11T06:35:44Z", "updated_at": "2016-08-23T11:04:02Z", "closed_at": "2016-08-23T11:03:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `Union` trait does not support setting a default value explicitly:\n\n``` python\nclass A(HasTraits):\n    trait = Union([Int(), Float()], default_value=20)\n\nprint(A().trait) #\u00a0=> 0\n```\n\nThe workaround is to specify the appropriate default value for the first trait in the union:\n\n``` python\nclass A(HasTraits):\n    trait = Union([Int(default_value=20), Float()])\n\nprint(A().trait) # => 20\n```\n\nIs this intentional? Unless I'm missing something, a possible workaround would be to replace this line (currently line 1789) in the source code:\n\n``` python\nself.default_value = self.trait_types[0].default_value\n```\n\n... with something that checks whether a default value was passed in through the constructor. \n\nI'll happily put in a PR if that's the case.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/270", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/270/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/270/events", "html_url": "https://github.com/ipython/traitlets/issues/270", "id": 170488150, "node_id": "MDU6SXNzdWUxNzA0ODgxNTA=", "number": 270, "title": "Tutorial?", "user": {"login": "gvanrossum", "id": 2894642, "node_id": "MDQ6VXNlcjI4OTQ2NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvanrossum", "html_url": "https://github.com/gvanrossum", "followers_url": "https://api.github.com/users/gvanrossum/followers", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "repos_url": "https://api.github.com/users/gvanrossum/repos", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-10T18:39:19Z", "updated_at": "2016-12-01T00:16:27Z", "closed_at": "2016-12-01T00:16:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to understand what this library does but all docs pointers seem to focus on advanced usages, and the README focuses on installation. What does simple use of this library actually look like? If the answer is \"it's just like traits\" that doesn't help me at all, I have no idea what that does either. (Or at least today I'm wearing the hat where I'm pretending not to. ;-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/268", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/268/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/268/events", "html_url": "https://github.com/ipython/traitlets/issues/268", "id": 170121814, "node_id": "MDU6SXNzdWUxNzAxMjE4MTQ=", "number": 268, "title": "Set c.Application.log_format will be error", "user": {"login": "Anne623", "id": 10845504, "node_id": "MDQ6VXNlcjEwODQ1NTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/10845504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anne623", "html_url": "https://github.com/Anne623", "followers_url": "https://api.github.com/users/Anne623/followers", "following_url": "https://api.github.com/users/Anne623/following{/other_user}", "gists_url": "https://api.github.com/users/Anne623/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anne623/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anne623/subscriptions", "organizations_url": "https://api.github.com/users/Anne623/orgs", "repos_url": "https://api.github.com/users/Anne623/repos", "events_url": "https://api.github.com/users/Anne623/events{/privacy}", "received_events_url": "https://api.github.com/users/Anne623/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-09T09:32:03Z", "updated_at": "2017-06-07T11:09:54Z", "closed_at": "2017-06-07T11:09:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I remove the comment in `jupyter_notebook_config.py`,\n\n```\nc.Application.log_format = '[%(name)s]%(highlevel)s %(message)s'\n```\n\nwhile when i run notebook ,it will be error, the error log is\n\n```\nLogged from file notebookapp.py, line 1138\nTraceback (most recent call last):\n  File \"E:\\Program Files (x86)\\Anaconda\\lib\\logging\\__init__.py\", line 859, in emit\n    msg = self.format(record)\n  File \"E:\\Program Files (x86)\\Anaconda\\lib\\logging\\__init__.py\", line 732, in format\n    return fmt.format(record)\n  File \"E:\\Program Files (x86)\\Anaconda\\lib\\site-packages\\tornado-4.2-py2.7-win-amd64.egg\\tornado\\log.py\", line 164, in format\n    formatted = self._fmt % record.__dict__\nKeyError: u'highlevel'\nLogged from file notebookapp.py, line 1138\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/263", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/263/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/263/events", "html_url": "https://github.com/ipython/traitlets/issues/263", "id": 168926560, "node_id": "MDU6SXNzdWUxNjg5MjY1NjA=", "number": 263, "title": "no immediate default_value validation", "user": {"login": "fwkoch", "id": 9453731, "node_id": "MDQ6VXNlcjk0NTM3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9453731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fwkoch", "html_url": "https://github.com/fwkoch", "followers_url": "https://api.github.com/users/fwkoch/followers", "following_url": "https://api.github.com/users/fwkoch/following{/other_user}", "gists_url": "https://api.github.com/users/fwkoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/fwkoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fwkoch/subscriptions", "organizations_url": "https://api.github.com/users/fwkoch/orgs", "repos_url": "https://api.github.com/users/fwkoch/repos", "events_url": "https://api.github.com/users/fwkoch/events{/privacy}", "received_events_url": "https://api.github.com/users/fwkoch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/2", "html_url": "https://github.com/ipython/traitlets/milestone/2", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/2/labels", "id": 1063943, "node_id": "MDk6TWlsZXN0b25lMTA2Mzk0Mw==", "number": 2, "title": "wishlist", "description": null, "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 4, "closed_issues": 5, "state": "open", "created_at": "2015-04-12T18:44:36Z", "updated_at": "2020-05-31T05:24:06Z", "due_on": null, "closed_at": null}, "comments": 19, "created_at": "2016-08-02T16:13:16Z", "updated_at": "2016-08-31T06:16:13Z", "closed_at": "2016-08-24T08:41:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Regarding validating default values, I'm curious why this is allowed at all:\n\n<img width=\"512\" alt=\"screen shot 2016-07-29 at 12 44 45 pm\" src=\"https://cloud.githubusercontent.com/assets/9453731/17260011/46ec3af6-558b-11e6-8b69-0792cb7500ef.png\">\n\nThis seems to go against the emphasis on validating default values in the module description.\n\n> There are also some important difference in our design:\n> - enthought.traits does not validate default values.  We do.\n\nI recognize that this default value is validated eventually if the traitlet is part of a HasTraits class; it just happens on instantiation rather than class definition. Of course, dynamic defaults can only be validated at this point, but it seems like static defaults could be validated sooner.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/260", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/260/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/260/events", "html_url": "https://github.com/ipython/traitlets/issues/260", "id": 168520265, "node_id": "MDU6SXNzdWUxNjg1MjAyNjU=", "number": 260, "title": "Uninformative error for union of two enums", "user": {"login": "jakevdp", "id": 781659, "node_id": "MDQ6VXNlcjc4MTY1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/781659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevdp", "html_url": "https://github.com/jakevdp", "followers_url": "https://api.github.com/users/jakevdp/followers", "following_url": "https://api.github.com/users/jakevdp/following{/other_user}", "gists_url": "https://api.github.com/users/jakevdp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevdp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevdp/subscriptions", "organizations_url": "https://api.github.com/users/jakevdp/orgs", "repos_url": "https://api.github.com/users/jakevdp/repos", "events_url": "https://api.github.com/users/jakevdp/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevdp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 3, "created_at": "2016-07-31T14:26:51Z", "updated_at": "2016-08-23T11:04:07Z", "closed_at": "2016-08-23T11:03:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When you have a union of two Enums and pass an invalid value, the error message is not particularly informative:\n\n> TraitError: The 'val' trait of a Foo instance must be any value or any value, but a value of 'AB' <class 'str'> was specified.\n\nThis came up in the programmatically-generated pieces of the Altair API (see https://github.com/ellisonbg/altair/issues/168), so it's not as easy as simply re-writing the expression as a single Enum.\n\nHow difficult would it be to improve this error message?\n\nExample:\n\n``` python\nimport traitlets as T\n\nclass Foo(T.HasTraits):\n    val = T.Union([T.Enum(['a', 'b', 'c']), T.Enum(['A', 'B', 'C'])])\n\nFoo(val='AB')\n```\n\n```\n<snip>\n/Users/jakevdp/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py in error(self, obj, value)\n    596             e = \"The '%s' trait must be %s, but a value of %r was specified.\" \\\n    597                 % (self.name, self.info(), repr_type(value))\n--> 598         raise TraitError(e)\n    599 \n    600     def get_metadata(self, key, default=None):\n\nTraitError: The 'val' trait of a Foo instance must be any value or any value, but a value of 'AB' <class 'str'> was specified.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/259", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/259/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/259/events", "html_url": "https://github.com/ipython/traitlets/issues/259", "id": 168455471, "node_id": "MDU6SXNzdWUxNjg0NTU0NzE=", "number": 259, "title": "Bounded Integer", "user": {"login": "pbugnion", "id": 1392879, "node_id": "MDQ6VXNlcjEzOTI4Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1392879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbugnion", "html_url": "https://github.com/pbugnion", "followers_url": "https://api.github.com/users/pbugnion/followers", "following_url": "https://api.github.com/users/pbugnion/following{/other_user}", "gists_url": "https://api.github.com/users/pbugnion/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbugnion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbugnion/subscriptions", "organizations_url": "https://api.github.com/users/pbugnion/orgs", "repos_url": "https://api.github.com/users/pbugnion/repos", "events_url": "https://api.github.com/users/pbugnion/events{/privacy}", "received_events_url": "https://api.github.com/users/pbugnion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 3, "created_at": "2016-07-30T07:48:26Z", "updated_at": "2016-08-04T13:42:09Z", "closed_at": "2016-08-03T17:27:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `Int` traitlet supports bounds, but not the `Integer` traitlet:\n\n``` python\nimport traitlets\n\nclass A(traitlets.HasTraits):\n    bounded_integer = traitlets.Integer(default_value=traitlets.Undefined, min=5, max=100)\n\nclass B(traitlets.HasTraits):\n    bounded_int = traitlets.Int(default_value=traitlets.Undefined, min=5, max=100)\n\na = A(bounded_integer=200) # raises a TraitError, as expected\na = B(bounded_int=200) #\u00a0does not raise\n```\n\nThis behaviour is a little confusing, since the docs recommend using the Integer traitlet rather than Int.\n\nIs there any reason this was implemented this way (see PR #33)?\n\nI'm happy to put in a PR for a bounded Integer if this would be useful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/256", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/256/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/256/events", "html_url": "https://github.com/ipython/traitlets/issues/256", "id": 164662701, "node_id": "MDU6SXNzdWUxNjQ2NjI3MDE=", "number": 256, "title": "how to extend dynamic defaults with super", "user": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/5", "html_url": "https://github.com/ipython/traitlets/milestone/5", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/5/labels", "id": 1185702, "node_id": "MDk6TWlsZXN0b25lMTE4NTcwMg==", "number": 5, "title": "5.0", "description": "", "creator": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 141, "state": "open", "created_at": "2015-06-29T17:18:20Z", "updated_at": "2020-09-09T15:01:01Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2016-07-09T11:16:03Z", "updated_at": "2020-06-17T16:22:50Z", "closed_at": "2016-11-01T12:58:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With traitlets 4.0, it's easy to extend dynamic defaults of parent classes, because the name of the default generator is part of the public API:\n\n``` python\nclass SubClass(Parent):\n    def _some_trait_default(self):\n        previous_default = super()._trait_default()\n        return modified(previous_default)\n```\n\nNow that the name of the method that happens to implement the default generator is no longer a public API, what's the best way to determine what the dynamic default _would have been_ in the parent class, and then extend it in a subclass?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/248", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/248/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/248/events", "html_url": "https://github.com/ipython/traitlets/issues/248", "id": 162024931, "node_id": "MDU6SXNzdWUxNjIwMjQ5MzE=", "number": 248, "title": "Command line flag do not take precedence over config. ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69459207, "node_id": "MDU6TGFiZWw2OTQ1OTIwNw==", "url": "https://api.github.com/repos/ipython/traitlets/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 258745041, "node_id": "MDU6TGFiZWwyNTg3NDUwNDE=", "url": "https://api.github.com/repos/ipython/traitlets/labels/regression", "name": "regression", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/9", "html_url": "https://github.com/ipython/traitlets/milestone/9", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/9/labels", "id": 1644071, "node_id": "MDk6TWlsZXN0b25lMTY0NDA3MQ==", "number": 9, "title": "4.2.2", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2016-03-14T19:40:16Z", "updated_at": "2016-07-01T09:21:07Z", "due_on": null, "closed_at": "2016-07-01T09:21:07Z"}, "comments": 22, "created_at": "2016-06-23T21:14:58Z", "updated_at": "2016-07-01T16:24:17Z", "closed_at": "2016-06-29T08:56:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Cf https://github.com/ipython/ipython/pull/9655#issuecomment-228182348\n\nMarking as critical as this was release in 4.1.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/247", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/247/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/247/events", "html_url": "https://github.com/ipython/traitlets/issues/247", "id": 161987871, "node_id": "MDU6SXNzdWUxNjE5ODc4NzE=", "number": 247, "title": "Union trait does not produce correct info_text for Instance traits", "user": {"login": "penenkel", "id": 7736404, "node_id": "MDQ6VXNlcjc3MzY0MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7736404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penenkel", "html_url": "https://github.com/penenkel", "followers_url": "https://api.github.com/users/penenkel/followers", "following_url": "https://api.github.com/users/penenkel/following{/other_user}", "gists_url": "https://api.github.com/users/penenkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/penenkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penenkel/subscriptions", "organizations_url": "https://api.github.com/users/penenkel/orgs", "repos_url": "https://api.github.com/users/penenkel/repos", "events_url": "https://api.github.com/users/penenkel/events{/privacy}", "received_events_url": "https://api.github.com/users/penenkel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/1", "html_url": "https://github.com/ipython/traitlets/milestone/1", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/1/labels", "id": 1063942, "node_id": "MDk6TWlsZXN0b25lMTA2Mzk0Mg==", "number": 1, "title": "no action", "description": null, "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 48, "state": "open", "created_at": "2015-04-12T18:44:36Z", "updated_at": "2019-06-23T07:10:01Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2016-06-23T18:13:51Z", "updated_at": "2016-08-04T13:57:50Z", "closed_at": "2016-08-04T13:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using Instance traits within a Union trait their info_text seems to get lost:\n\n``` python\nimport traitlets as tr\n\ntr.Union([tr.Instance(int)]).info()\n# returns 'any value'\n\ntr.Instance(int).info()\n# returns 'an int'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/244", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/244/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/244/events", "html_url": "https://github.com/ipython/traitlets/issues/244", "id": 160777888, "node_id": "MDU6SXNzdWUxNjA3Nzc4ODg=", "number": 244, "title": "Union trait does not handle trait metadata correctly", "user": {"login": "rmenegaux", "id": 9288961, "node_id": "MDQ6VXNlcjkyODg5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9288961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmenegaux", "html_url": "https://github.com/rmenegaux", "followers_url": "https://api.github.com/users/rmenegaux/followers", "following_url": "https://api.github.com/users/rmenegaux/following{/other_user}", "gists_url": "https://api.github.com/users/rmenegaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmenegaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmenegaux/subscriptions", "organizations_url": "https://api.github.com/users/rmenegaux/orgs", "repos_url": "https://api.github.com/users/rmenegaux/repos", "events_url": "https://api.github.com/users/rmenegaux/events{/privacy}", "received_events_url": "https://api.github.com/users/rmenegaux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 5, "created_at": "2016-06-16T22:46:20Z", "updated_at": "2016-08-23T11:02:55Z", "closed_at": "2016-08-23T11:02:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a `HasTraits` class, called `Mix`, that has a `Union` trait, called `union`, then since the trait metadata of `union` is a class attribute, all `Mix` instances will have the same metadata for `union`, regardless of the actual trait type of `union`.\n\nThis can be harmful if you have a `Union` of traits with different `to_json` for example.\n\nI hope this will be clearer with an example:\n\n``` python\nfrom traitlets import Float, Unicode, HasTraits\n\nclass Mix(HasTraits):\n    union = Float().tag(metadata=\"I'm a float\") | Unicode().tag(metadata=\"I'm still a float, but with unicode metadata\")\n\nmix1 = Mix(union=0)\nprint mix1.union, mix1.trait_metadata('union', 'metadata')\nmix2 = Mix(union='')\nprint mix1.union, mix1.trait_metadata('union', 'metadata')\n```\n\noutputs\n\n``` python\n0.0 I'm a float\n0.0 I'm still a float, but with unicode metadata\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/240", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/240/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/240/events", "html_url": "https://github.com/ipython/traitlets/issues/240", "id": 158468866, "node_id": "MDU6SXNzdWUxNTg0Njg4NjY=", "number": 240, "title": "should `trait_names` return iterator or list? [P3 Compat]", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 8, "created_at": "2016-06-03T22:49:19Z", "updated_at": "2016-07-01T10:47:38Z", "closed_at": "2016-07-01T10:47:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`HasTraits.trait_names` and `HasTraits.class_own_trait_names` return a `dict_keys` iterator in Python 3, but a `list` in Python 2. Should this remain true, or should we be returning lists in both versions?\n- It would be in the style of Python 3 to keep the iterators\n- However, we could return lists for the sake of uniformity\n\nAs a side note, returning a `dict_keys` iterator prevents the actual dict object it refers to (which is never made available to the user) from being garbage collected. So if we want to keep iterators, that might be something to consider changing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/232", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/232/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/232/events", "html_url": "https://github.com/ipython/traitlets/issues/232", "id": 156378996, "node_id": "MDU6SXNzdWUxNTYzNzg5OTY=", "number": 232, "title": "Please add version to deprecation warnings. ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 0, "created_at": "2016-05-23T22:16:11Z", "updated_at": "2016-08-05T18:38:37Z", "closed_at": "2016-08-05T18:38:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "At least the  version where things are introduced, it's a pain to bisect each time to know whether you can use a feature. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/231", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/231/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/231/events", "html_url": "https://github.com/ipython/traitlets/issues/231", "id": 156378750, "node_id": "MDU6SXNzdWUxNTYzNzg3NTA=", "number": 231, "title": "4.3 Api breakage. ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 28, "created_at": "2016-05-23T22:14:22Z", "updated_at": "2016-05-30T09:23:10Z", "closed_at": "2016-05-27T17:12:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#209 changed `HasTraits.traits` from an instance method to a class method. You can't do that it breaks stuff.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/227", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/227/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/227/events", "html_url": "https://github.com/ipython/traitlets/issues/227", "id": 155530688, "node_id": "MDU6SXNzdWUxNTU1MzA2ODg=", "number": 227, "title": "observe handler must have an argument", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 1, "created_at": "2016-05-18T15:24:34Z", "updated_at": "2016-05-20T13:22:42Z", "closed_at": "2016-05-20T13:22:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The docstring of observe says:\n\n>  The handler passed to the decorator can have no argument or one `change` dict argument.\n\nBut when I try it with a method that takes no arguments, it fails:\n\n```\n  File \"/home/takluyver/.local/lib/python3.5/site-packages/traitlets/traitlets.py\", line 567, in __set__\n    self.set(obj, value)\n  File \"/home/takluyver/.local/lib/python3.5/site-packages/traitlets/traitlets.py\", line 556, in set\n    obj._notify_trait(self.name, old_value, new_value)\n  File \"/home/takluyver/.local/lib/python3.5/site-packages/traitlets/traitlets.py\", line 1102, in _notify_trait\n    'type': 'change',\n  File \"/home/takluyver/.local/lib/python3.5/site-packages/traitlets/traitlets.py\", line 1136, in notify_change\n    c(change)\nTypeError: _() takes 1 positional argument but 2 were given\n```\n\nPossibly because it's a method, so inspecting it before it's bound will show that it requires one argument.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/225", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/225/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/225/events", "html_url": "https://github.com/ipython/traitlets/issues/225", "id": 155322732, "node_id": "MDU6SXNzdWUxNTUzMjI3MzI=", "number": 225, "title": "[question] Could `@observe` take a traitlets instance ? ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/1", "html_url": "https://github.com/ipython/traitlets/milestone/1", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/1/labels", "id": 1063942, "node_id": "MDk6TWlsZXN0b25lMTA2Mzk0Mg==", "number": 1, "title": "no action", "description": null, "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 48, "state": "open", "created_at": "2015-04-12T18:44:36Z", "updated_at": "2019-06-23T07:10:01Z", "due_on": null, "closed_at": null}, "comments": 6, "created_at": "2016-05-17T17:59:19Z", "updated_at": "2016-08-04T13:42:20Z", "closed_at": "2016-05-23T22:42:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now it takes a name, but could we do:\n\n```\nclass C(HasTrait):\n\n   foo = FooTrait():\n\n   @observe(foo):\n   def _(...):\n         ...\n```\n\nand extract the name from the foo instance instead of requiring a string ? \n\nThere is probably a reason **not** to do that, but just wondering why. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/224", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/224/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/224/events", "html_url": "https://github.com/ipython/traitlets/issues/224", "id": 155293238, "node_id": "MDU6SXNzdWUxNTUyOTMyMzg=", "number": 224, "title": "tag should raise warning if `allow_none` passed as kwarg.", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 1, "created_at": "2016-05-17T15:43:34Z", "updated_at": "2016-08-04T13:42:33Z", "closed_at": "2016-05-20T11:54:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Cf #223 , not an exception, just a warning, as it is likely a mistake. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/223", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/223/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/223/events", "html_url": "https://github.com/ipython/traitlets/issues/223", "id": 155159440, "node_id": "MDU6SXNzdWUxNTUxNTk0NDA=", "number": 223, "title": "Cannot use `default_value=None` with `allow_none=true`", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 5, "created_at": "2016-05-17T01:43:52Z", "updated_at": "2016-08-04T13:42:54Z", "closed_at": "2016-05-17T12:33:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Obviously, because `allow_none` is set after. Still feel ugly to use a `@default` function just for that. \nMaybe a hint somewhere in the docs about a better way to do that ? \nOf if `None` is passed as construction, assume `allow_none=True`, as most of the default values are `traitlets.Undefined` ?\n\nThoughts ?  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/221", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/221/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/221/events", "html_url": "https://github.com/ipython/traitlets/issues/221", "id": 155151458, "node_id": "MDU6SXNzdWUxNTUxNTE0NTg=", "number": 221, "title": "observe should raise with better error if wrong argument passed. ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 1, "created_at": "2016-05-17T00:24:21Z", "updated_at": "2016-08-04T13:43:04Z", "closed_at": "2016-08-04T13:26:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Do you see the mistake : \n\n``` python\n    readline_parse_and_bind = List(default_value=[\n            'tab: complete',\n            '\"\\C-l\": clear-screen',\n            'set show-all-if-ambiguous on',\n            '\"\\C-o\": tab-insert',\n            '\"\\C-r\": reverse-search-history',\n            '\"\\C-s\": forward-search-history',\n            '\"\\C-p\": history-search-backward',\n            '\"\\C-n\": history-search-forward',\n            '\"\\e[A\": history-search-backward',\n            '\"\\e[B\": history-search-forward',\n            '\"\\C-k\": kill-line',\n            '\"\\C-u\": unix-line-discard',\n        ]).tag(config=True)\n\n    _custom_readline_config = False\n\n    @observe(readline_parse_and_bind)\n    def _readline_parse_and_bind_changed(self, change):\n        # notice that readline config is customized\n        # indicates that it should have higher priority than inputrc\n        self._custom_readline_config = True\n```\n\nit took me 1/2 an hour to figure out I was missing a quote, because it took me 1/2 an hour to figure out which observe was wrong:\n\n``` python\nTraceback (most recent call last):\n  File \"/Users/bussonniermatthias/anaconda/bin/ipython\", line 9, in <module>\n    load_entry_point('ipython', 'console_scripts', 'ipython')()\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/__init__.py\", line 119, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/config/application.py\", line 595, in launch_instance\n    app.initialize(argv)\n  File \"<decorator-gen-111>\", line 2, in initialize\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/config/application.py\", line 74, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/terminal/ipapp.py\", line 305, in initialize\n    self.init_shell()\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/terminal/ipapp.py\", line 321, in init_shell\n    ipython_dir=self.ipython_dir, user_ns=self.user_ns)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/config/configurable.py\", line 405, in instance\n    inst = cls(*args, **kwargs)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py\", line 912, in __new__\n    inst.setup_instance(*args, **kwargs)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py\", line 940, in setup_instance\n    super(HasTraits, self).setup_instance(*args, **kwargs)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py\", line 931, in setup_instance\n    value.instance_init(self)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py\", line 878, in instance_init\n    inst.observe(self, self.trait_names, type=self.type)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py\", line 1216, in observe\n    names = parse_notifier_name(names)\n  File \"/Users/bussonniermatthias/anaconda/lib/python3.5/site-packages/traitlets/traitlets.py\", line 179, in parse_notifier_name\n    raise ValueError(\"names must be strings\")\nValueError: names must be strings\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n\nCould we add the name of the trait to the error message at least ? \n\nNote that the file of the error does not even appear in the stack. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/219", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/219/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/219/events", "html_url": "https://github.com/ipython/traitlets/issues/219", "id": 155148197, "node_id": "MDU6SXNzdWUxNTUxNDgxOTc=", "number": 219, "title": "don't use `assert`.", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 2, "created_at": "2016-05-16T23:53:54Z", "updated_at": "2016-08-04T13:26:39Z", "closed_at": "2016-08-04T13:26:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Assert is meant optimised out by `-O` Python, which means that it is not equivalent to raise. \nShould be replaced by actual exceptions raising. \n\nWas introduced in #200, slipped through review. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/218", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/218/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/218/events", "html_url": "https://github.com/ipython/traitlets/issues/218", "id": 155143103, "node_id": "MDU6SXNzdWUxNTUxNDMxMDM=", "number": 218, "title": "`@observe` documentation says `type` is a kwarg, while it is a kwarg **only**.", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 1, "created_at": "2016-05-16T23:12:57Z", "updated_at": "2016-05-27T16:08:01Z", "closed_at": "2016-05-27T12:00:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "http://traitlets.readthedocs.io/en/stable/migration.html#the-new-observe-decorator\n\nIt also refers to the `In addition to the names argument,` while `names` is not an argument, its a vararg, \nan argument would be usable with `names=` while this is not.  Seem a bit inconsistent with the `observe` methods that **does** have a `names=` kwarg. \n\nNot sure what the reasoning was. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/217", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/217/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/217/events", "html_url": "https://github.com/ipython/traitlets/issues/217", "id": 155141738, "node_id": "MDU6SXNzdWUxNTUxNDE3Mzg=", "number": 217, "title": "observe's handler change should likely be an object.", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 5, "created_at": "2016-05-16T23:03:22Z", "updated_at": "2016-05-31T17:18:46Z", "closed_at": "2016-05-30T12:53:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It always have the same field, and is annoying to access through keys.\nMaybe a NameTuple for immutability ? not sure if you can access a named tuple with square brackets.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/215", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/215/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/215/events", "html_url": "https://github.com/ipython/traitlets/issues/215", "id": 155076888, "node_id": "MDU6SXNzdWUxNTUwNzY4ODg=", "number": 215, "title": "`observe` should allow any iterable containers. ", "user": {"login": "Carreau", "id": 335567, "node_id": "MDQ6VXNlcjMzNTU2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/335567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carreau", "html_url": "https://github.com/Carreau", "followers_url": "https://api.github.com/users/Carreau/followers", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "organizations_url": "https://api.github.com/users/Carreau/orgs", "repos_url": "https://api.github.com/users/Carreau/repos", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "received_events_url": "https://api.github.com/users/Carreau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 0, "created_at": "2016-05-16T17:20:36Z", "updated_at": "2016-08-04T13:26:39Z", "closed_at": "2016-08-04T13:26:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Not just `list`, and `tuple`,  thinks like `set`... should work. \n\nMore generally you should fix `parse_notifier_name`. \n\nAnd technically it should allow any container  that implement [`__contains__`](https://docs.python.org/3.6/reference/datamodel.html#object.__contains__) I guess. And `parse_notifier_name` should not blindly return nothing (ie `None`) if the type of argument is not one of the accepted argument. It shoudl raise a **meaningful** error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/212", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/212/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/212/events", "html_url": "https://github.com/ipython/traitlets/issues/212", "id": 151503967, "node_id": "MDU6SXNzdWUxNTE1MDM5Njc=", "number": 212, "title": "ironpython - absolute_import", "user": {"login": "swn1", "id": 6485263, "node_id": "MDQ6VXNlcjY0ODUyNjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6485263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swn1", "html_url": "https://github.com/swn1", "followers_url": "https://api.github.com/users/swn1/followers", "following_url": "https://api.github.com/users/swn1/following{/other_user}", "gists_url": "https://api.github.com/users/swn1/gists{/gist_id}", "starred_url": "https://api.github.com/users/swn1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swn1/subscriptions", "organizations_url": "https://api.github.com/users/swn1/orgs", "repos_url": "https://api.github.com/users/swn1/repos", "events_url": "https://api.github.com/users/swn1/events{/privacy}", "received_events_url": "https://api.github.com/users/swn1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 4, "created_at": "2016-04-27T22:11:53Z", "updated_at": "2016-04-28T14:45:32Z", "closed_at": "2016-04-28T14:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "The import from **future** in config/configurable.py needs to add , absolute_import\n\nIt's causing an error when loading from jupyter_client under IronPython (2.7.5).  I think this may be the only change needed in this lib, somebody want to add it for me and save me making a one-word pull request?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/211", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/211/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/211/events", "html_url": "https://github.com/ipython/traitlets/issues/211", "id": 151478790, "node_id": "MDU6SXNzdWUxNTE0Nzg3OTA=", "number": 211, "title": "Tracking Element Changes", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-27T20:08:20Z", "updated_at": "2017-06-08T17:29:39Z", "closed_at": "2016-09-29T22:09:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I did a bit of thinking on how to track element changes in things like lists and dicts. I came up with [spectate](https://github.com/rmorshea/spectate). It has a few limitations, and might be a bit hacky, but it allows you to create classes whose instances have tracked methods.\n\nThe instances of a `WatchedList` (as in this [example](https://github.com/rmorshea/spectate/blob/master/examples/basic.ipynb)) would tell you when their items are changed:\n\n``` python\nWatchedList = WatchedType('WatchedList', list, ListSpectator, '__setitem__')\nwl = WatchedList([1, 2, 3])\n\n# will notify when\n# an item changes\nwl[0] = 2\n```\n\n``` python\n# the spectator will print this\n'__setitem__ : {0: 1} -> {0: 2}'\n```\n- alternative approach: #278 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/207", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/207/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/207/events", "html_url": "https://github.com/ipython/traitlets/issues/207", "id": 147938878, "node_id": "MDU6SXNzdWUxNDc5Mzg4Nzg=", "number": 207, "title": "DOC: migration for on_trait_change docs", "user": {"login": "michaelaye", "id": 69774, "node_id": "MDQ6VXNlcjY5Nzc0", "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelaye", "html_url": "https://github.com/michaelaye", "followers_url": "https://api.github.com/users/michaelaye/followers", "following_url": "https://api.github.com/users/michaelaye/following{/other_user}", "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions", "organizations_url": "https://api.github.com/users/michaelaye/orgs", "repos_url": "https://api.github.com/users/michaelaye/repos", "events_url": "https://api.github.com/users/michaelaye/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelaye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 0, "created_at": "2016-04-13T03:47:37Z", "updated_at": "2016-04-18T13:32:15Z", "closed_at": "2016-04-13T04:00:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "IIUC, in this code from [here](http://traitlets.readthedocs.org/en/stable/migration.html):\n\n``` python\nfrom traitlets import HasTraits, Int, Unicode\n\nclass Foo(HasTraits):\n\n    bar = Int()\n    baz = Unicode()\n\ndef handle_change(change):\n    print(\"{name} changed from {old} to {new}\".format(**change))\n\nfoo = Foo()\nfoo.observe(bar_changed, names='bar')\n```\n\n`bar_changed` should have been `handle_change`, right? But then to have the print working it should either be `..{names}` in the print formatting statement or the `observe` parameter should be `name='bar'`? \n\nEdit: No, the print still works, guess I don't understand it yet. But the function in the docs should be `handle_change` still.\n\nEdit2: I get it now, the `name` key is always in the change kw dic that comes into the handler. But `names` defines the list of traits the handler is responsible for and will automatically update `name` depending on which one is changing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/205", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/205/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/205/events", "html_url": "https://github.com/ipython/traitlets/issues/205", "id": 147149216, "node_id": "MDU6SXNzdWUxNDcxNDkyMTY=", "number": 205, "title": "py3compat is still used in traitlets.traitlets, but not imported", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 69459207, "node_id": "MDU6TGFiZWw2OTQ1OTIwNw==", "url": "https://api.github.com/repos/ipython/traitlets/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 258745041, "node_id": "MDU6TGFiZWwyNTg3NDUwNDE=", "url": "https://api.github.com/repos/ipython/traitlets/labels/regression", "name": "regression", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 1, "created_at": "2016-04-09T18:15:02Z", "updated_at": "2016-04-09T20:29:44Z", "closed_at": "2016-04-09T20:29:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#204 removed the import of `py3compat` from `traitlets.traitlets`, but that is still used, and Jenkins tests are failing:\n\n```\nTraceback (most recent call last):\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/bin/iptest\", line 9, in <module>\n    load_entry_point('ipython==5.0.0.dev0', 'console_scripts', 'iptest')()\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 542, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2542, in load_entry_point\n    return ep.load()\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2202, in load\n    return self.resolve()\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2208, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/__init__.py\", line 49, in <module>\n    from .terminal.embed import embed\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/terminal/embed.py\", line 16, in <module>\n    from IPython.core.interactiveshell import DummyMod\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 171, in <module>\n    class InteractiveShell(SingletonConfigurable):\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 232, in InteractiveShell\n    help=\"Set the color scheme (NoColor, Linux, or LightBG).\"\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 2034, in __init__\n    values = [py3compat.cast_unicode_py2(value) for value in values]\n  File \"/var/lib/jenkins/shiningpanda/jobs/92f5a430/virtualenvs/d41d8cd9/lib/python3.4/site-packages/traitlets/traitlets.py\", line 2034, in <listcomp>\n    values = [py3compat.cast_unicode_py2(value) for value in values]\nNameError: name 'py3compat' is not defined\n```\n\nPing @Carreau \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/202", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/202/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/202/events", "html_url": "https://github.com/ipython/traitlets/issues/202", "id": 144715749, "node_id": "MDU6SXNzdWUxNDQ3MTU3NDk=", "number": 202, "title": "alias warnings after switching to nose2", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-30T20:47:28Z", "updated_at": "2017-02-03T22:24:47Z", "closed_at": "2017-02-03T22:24:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "After switching to nose2, I'm getting a series of warnings while testing the `KVArgParseConfigLoader`:\n\n```\ntest_basic (traitlets.config.tests.test_loader.TestArgParseKVCL) ... ['--a=10', '--b=20', '--Foo.Bar.value=10', '--Foo.Bam.value=list(range(10))', \"--D.C.value='hi there'\"]\nWARNING:devnull:Unrecognized alias: '--a=10', it will probably have no effect.\nWARNING:devnull:Unrecognized alias: '--b=20', it will probably have no effect.\n```\n\nThere are others, but they're all of the same form.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/201", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/201/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/201/events", "html_url": "https://github.com/ipython/traitlets/issues/201", "id": 143685873, "node_id": "MDU6SXNzdWUxNDM2ODU4NzM=", "number": 201, "title": "setup.py minor issues related to test", "user": {"login": "jenisys", "id": 371945, "node_id": "MDQ6VXNlcjM3MTk0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/371945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jenisys", "html_url": "https://github.com/jenisys", "followers_url": "https://api.github.com/users/jenisys/followers", "following_url": "https://api.github.com/users/jenisys/following{/other_user}", "gists_url": "https://api.github.com/users/jenisys/gists{/gist_id}", "starred_url": "https://api.github.com/users/jenisys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jenisys/subscriptions", "organizations_url": "https://api.github.com/users/jenisys/orgs", "repos_url": "https://api.github.com/users/jenisys/repos", "events_url": "https://api.github.com/users/jenisys/events{/privacy}", "received_events_url": "https://api.github.com/users/jenisys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 0, "created_at": "2016-03-26T10:14:27Z", "updated_at": "2016-08-08T09:48:21Z", "closed_at": "2016-08-08T09:48:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The \"setup.py\" lacks the requirement/dependency to \"mock\", only \"nose2\" is specified. In addition, may be \"test_requires\" keyword should be specified.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/199", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/199/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/199/events", "html_url": "https://github.com/ipython/traitlets/issues/199", "id": 143339021, "node_id": "MDU6SXNzdWUxNDMzMzkwMjE=", "number": 199, "title": "DeprecationWarning in traitlets", "user": {"login": "hiamandeep", "id": 12613292, "node_id": "MDQ6VXNlcjEyNjEzMjky", "avatar_url": "https://avatars0.githubusercontent.com/u/12613292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiamandeep", "html_url": "https://github.com/hiamandeep", "followers_url": "https://api.github.com/users/hiamandeep/followers", "following_url": "https://api.github.com/users/hiamandeep/following{/other_user}", "gists_url": "https://api.github.com/users/hiamandeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiamandeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiamandeep/subscriptions", "organizations_url": "https://api.github.com/users/hiamandeep/orgs", "repos_url": "https://api.github.com/users/hiamandeep/repos", "events_url": "https://api.github.com/users/hiamandeep/events{/privacy}", "received_events_url": "https://api.github.com/users/hiamandeep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/1", "html_url": "https://github.com/ipython/traitlets/milestone/1", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/1/labels", "id": 1063942, "node_id": "MDk6TWlsZXN0b25lMTA2Mzk0Mg==", "number": 1, "title": "no action", "description": null, "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 48, "state": "open", "created_at": "2015-04-12T18:44:36Z", "updated_at": "2019-06-23T07:10:01Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2016-03-24T19:35:19Z", "updated_at": "2016-04-18T13:32:09Z", "closed_at": "2016-03-24T20:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "executing this in Jupyter notebook,     \n\n```\nclass MyWidget(widgets.DOMWidget):\n    _view_name = Unicode('MyView', sync=True)\n    value = Unicode(input_form+javascript, sync=True)\n```\n\ngives warning:   \n\nhome/aman/mylatex/lib/python2.7/site-packages/ipykernel/**main**.py:2: DeprecationWarning: metadata {'sync': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  from ipykernel import kernelapp as app\n/home/aman/mylatex/lib/python2.7/site-packages/ipykernel/**main**.py:3: DeprecationWarning: metadata {'sync': True} was set from the constructor.  Metadata should be set using the .tag() method, e.g., Int().tag(key1='value1', key2='value2')\n  app.launch_new_instance()\n\nCan't figure out how to solve this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ipython/traitlets/issues/191", "repository_url": "https://api.github.com/repos/ipython/traitlets", "labels_url": "https://api.github.com/repos/ipython/traitlets/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/ipython/traitlets/issues/191/comments", "events_url": "https://api.github.com/repos/ipython/traitlets/issues/191/events", "html_url": "https://github.com/ipython/traitlets/issues/191", "id": 142281343, "node_id": "MDU6SXNzdWUxNDIyODEzNDM=", "number": 191, "title": "Dict.validate_elements bug", "user": {"login": "fyrestone", "id": 6308809, "node_id": "MDQ6VXNlcjYzMDg4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6308809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fyrestone", "html_url": "https://github.com/fyrestone", "followers_url": "https://api.github.com/users/fyrestone/followers", "following_url": "https://api.github.com/users/fyrestone/following{/other_user}", "gists_url": "https://api.github.com/users/fyrestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/fyrestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fyrestone/subscriptions", "organizations_url": "https://api.github.com/users/fyrestone/orgs", "repos_url": "https://api.github.com/users/fyrestone/repos", "events_url": "https://api.github.com/users/fyrestone/events{/privacy}", "received_events_url": "https://api.github.com/users/fyrestone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/ipython/traitlets/milestones/8", "html_url": "https://github.com/ipython/traitlets/milestone/8", "labels_url": "https://api.github.com/repos/ipython/traitlets/milestones/8/labels", "id": 1643397, "node_id": "MDk6TWlsZXN0b25lMTY0MzM5Nw==", "number": 8, "title": "4.3", "description": "", "creator": {"login": "minrk", "id": 151929, "node_id": "MDQ6VXNlcjE1MTkyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/151929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minrk", "html_url": "https://github.com/minrk", "followers_url": "https://api.github.com/users/minrk/followers", "following_url": "https://api.github.com/users/minrk/following{/other_user}", "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minrk/subscriptions", "organizations_url": "https://api.github.com/users/minrk/orgs", "repos_url": "https://api.github.com/users/minrk/repos", "events_url": "https://api.github.com/users/minrk/events{/privacy}", "received_events_url": "https://api.github.com/users/minrk/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 81, "state": "closed", "created_at": "2016-03-14T15:23:40Z", "updated_at": "2016-09-09T09:37:27Z", "due_on": null, "closed_at": "2016-09-09T09:37:27Z"}, "comments": 0, "created_at": "2016-03-21T08:08:46Z", "updated_at": "2016-04-18T13:31:59Z", "closed_at": "2016-03-27T17:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \"D:\\Python27\\python-2.7.10\\lib\\site-packages\\traitlets\\traitlets.py\", line 2400, in validate\n    value = self.validate_elements(obj, value)\n  File \"D:\\Python27\\python-2.7.10\\lib\\site-packages\\traitlets\\traitlets.py\", line 2421, in validate_elements\n    self.element_error(obj, v, self._trait)\n  File \"D:\\Python27\\python-2.7.10\\lib\\site-packages\\traitlets\\traitlets.py\", line 2393, in element_error\n    % (self.name, class_of(obj), validator.info(), repr_type(element))\nAttributeError: 'NoneType' object has no attribute 'info'\n\n```\n    def validate_elements(self, obj, value):\n        if self._traits is not None:\n            for key in self._traits:\n                if key not in value:\n                    raise TraitError(\"Missing required '%s' key for the '%s' trait of %s instance\"\n                                     % (key, self.name, class_of(obj)))\n        if self._traits is None and (self._trait is None or\n                                     isinstance(self._trait, Any)):\n            return value\n        validated = {}\n        for key in value:\n            v = value[key]\n            try:\n                if self._traits is not None and key in self._traits:\n                    v = self._traits[key]._validate(obj, v)\n                else:\n                    v = self._trait._validate(obj, v)\n            except TraitError:\n                # ---> If self._traits is not None and self._traits is None,\n                # when self._traits[key] _validate raise a TraitError will cause the traceback.\n                # And self.element_error should pass the key as arg, to print clear message\n                # which key's trait raise an error.\n                self.element_error(obj, v, self._trait)\n            else:\n                validated[key] = v\n        return self.klass(validated)\n```\n", "performed_via_github_app": null, "score": 1.0}]}