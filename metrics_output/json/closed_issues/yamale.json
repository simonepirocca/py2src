{"total_count": 53, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/23andMe/Yamale/issues/124", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/124/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/124/events", "html_url": "https://github.com/23andMe/Yamale/issues/124", "id": 678744763, "node_id": "MDU6SXNzdWU2Nzg3NDQ3NjM=", "number": 124, "title": "[Enhancement] : \"union-like\" collection to enforce one of an \"all-optional\" set", "user": {"login": "PeterWhittaker", "id": 150474, "node_id": "MDQ6VXNlcjE1MDQ3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/150474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterWhittaker", "html_url": "https://github.com/PeterWhittaker", "followers_url": "https://api.github.com/users/PeterWhittaker/followers", "following_url": "https://api.github.com/users/PeterWhittaker/following{/other_user}", "gists_url": "https://api.github.com/users/PeterWhittaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterWhittaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterWhittaker/subscriptions", "organizations_url": "https://api.github.com/users/PeterWhittaker/orgs", "repos_url": "https://api.github.com/users/PeterWhittaker/repos", "events_url": "https://api.github.com/users/PeterWhittaker/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterWhittaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-13T21:28:06Z", "updated_at": "2020-08-14T17:34:02Z", "closed_at": "2020-08-14T17:34:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using Yamale to define schema for a linear pipeline; [refer to this example](https://github.com/PeterWhittaker/SELinuxLinearAssuredPipeline/blob/master/_schema.yml): Essentially, every pipeline consists of an entry, zero or more filters, and an exit.\r\n\r\nThe *entry\" element can be one of two things:\r\n - a *receiver*, that listens for connection requests, or\r\n - a *getter*, that reaches out data\r\n\r\nMy definition of entry is\r\n```\r\nentry: # one of these is required, how to enforce?\r\n  custom: include('receiver', required=False)\r\n  custom: include('getter', required=False))\r\n```\r\nMy enhancement request is to have a way of specifying that *entry* must have one and exactly one of those potential values. For example,\r\n\r\n```entry: union(include('receiver'), include('getter'))```\r\n\r\nI would use that same technique to force each *process* to be one and only one of the all-optional elements defined therein (refer to the same URL, above).\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/123", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/123/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/123/events", "html_url": "https://github.com/23andMe/Yamale/issues/123", "id": 676541846, "node_id": "MDU6SXNzdWU2NzY1NDE4NDY=", "number": 123, "title": "support for home brew version on mac ", "user": {"login": "chukka", "id": 1331672, "node_id": "MDQ6VXNlcjEzMzE2NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1331672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chukka", "html_url": "https://github.com/chukka", "followers_url": "https://api.github.com/users/chukka/followers", "following_url": "https://api.github.com/users/chukka/following{/other_user}", "gists_url": "https://api.github.com/users/chukka/gists{/gist_id}", "starred_url": "https://api.github.com/users/chukka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chukka/subscriptions", "organizations_url": "https://api.github.com/users/chukka/orgs", "repos_url": "https://api.github.com/users/chukka/repos", "events_url": "https://api.github.com/users/chukka/events{/privacy}", "received_events_url": "https://api.github.com/users/chukka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T03:00:32Z", "updated_at": "2020-08-14T00:35:01Z", "closed_at": "2020-08-11T03:24:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nIs there any plan to support homebrew support  on mac - `brew install yamale`\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/121", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/121/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/121/events", "html_url": "https://github.com/23andMe/Yamale/issues/121", "id": 673257071, "node_id": "MDU6SXNzdWU2NzMyNTcwNzE=", "number": 121, "title": "Usage Help: arbitrary keys with include as values.", "user": {"login": "vaibhavparnalia", "id": 7274550, "node_id": "MDQ6VXNlcjcyNzQ1NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7274550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhavparnalia", "html_url": "https://github.com/vaibhavparnalia", "followers_url": "https://api.github.com/users/vaibhavparnalia/followers", "following_url": "https://api.github.com/users/vaibhavparnalia/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhavparnalia/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhavparnalia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhavparnalia/subscriptions", "organizations_url": "https://api.github.com/users/vaibhavparnalia/orgs", "repos_url": "https://api.github.com/users/vaibhavparnalia/repos", "events_url": "https://api.github.com/users/vaibhavparnalia/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhavparnalia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-05T05:07:54Z", "updated_at": "2020-08-05T15:35:40Z", "closed_at": "2020-08-05T05:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need some help with a use case.\r\nI have a below Schema and Data. Data has key _target_tracking_scaling_policies_ which has arbitrary custom keys and their values are `include('TargetTrackingScalingPolicy')`. \r\n\r\nI was able to implement similar solution with _list()_ validator, but I am not able to implement validation of below data structure. I tried _map()_ but seems like that is not the right validator. Appreciate some help. Thanks!\r\n\r\nSchema:\r\n```\r\ntarget_tracking_scaling_policies: dict(str(), include('TargetTrackingScalingPolicy'))  # this is incorrect\r\n---\r\nTargetTrackingScalingPolicy:\r\n  target_value: int()\r\n  predefined_metric: enum(\r\n    'ASG_AVERAGE_CPU_UTILIZATION',\r\n    'ASG_AVERAGE_NETWORK_IN',\r\n    'ASG_AVERAGE_NETWORK_OUT',\r\n    'ALB_REQUEST_COUNT_PER_TARGET'\r\n    )\r\n  cooldown: include('Duration')\r\n  disable_scale_in: bool(required=False)\r\n  estimated_instance_warmup: include('Duration')\r\n```\r\n\r\nData\r\n```\r\ntarget_tracking_scaling_policies:\r\n  asg_average_cpu_utilization:  # arbitrary key\r\n    target_value: 70\r\n    predefined_metric: ASG_AVERAGE_CPU_UTILIZATION\r\n    estimated_instance_warmup:\r\n      minutes: 5\r\n    cooldown:\r\n      seconds: 30\r\n  alb_request_count_per_target:  # arbitrary key\r\n    target_value: 10000\r\n    predefined_metric: ALB_REQUEST_COUNT_PER_TARGET\r\n    estimated_instance_warmup:\r\n      minutes: 7\r\n    cooldown:\r\n      minutes: 1\r\n  # add more TargetTrackingScalingPolicy types here\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/119", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/119/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/119/events", "html_url": "https://github.com/23andMe/Yamale/issues/119", "id": 672395730, "node_id": "MDU6SXNzdWU2NzIzOTU3MzA=", "number": 119, "title": "strict mode is not set by default", "user": {"login": "mildebrandt", "id": 7386305, "node_id": "MDQ6VXNlcjczODYzMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7386305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mildebrandt", "html_url": "https://github.com/mildebrandt", "followers_url": "https://api.github.com/users/mildebrandt/followers", "following_url": "https://api.github.com/users/mildebrandt/following{/other_user}", "gists_url": "https://api.github.com/users/mildebrandt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mildebrandt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mildebrandt/subscriptions", "organizations_url": "https://api.github.com/users/mildebrandt/orgs", "repos_url": "https://api.github.com/users/mildebrandt/repos", "events_url": "https://api.github.com/users/mildebrandt/events{/privacy}", "received_events_url": "https://api.github.com/users/mildebrandt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186418, "node_id": "MDU6TGFiZWw3NzE4NjQxOA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mildebrandt", "id": 7386305, "node_id": "MDQ6VXNlcjczODYzMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7386305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mildebrandt", "html_url": "https://github.com/mildebrandt", "followers_url": "https://api.github.com/users/mildebrandt/followers", "following_url": "https://api.github.com/users/mildebrandt/following{/other_user}", "gists_url": "https://api.github.com/users/mildebrandt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mildebrandt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mildebrandt/subscriptions", "organizations_url": "https://api.github.com/users/mildebrandt/orgs", "repos_url": "https://api.github.com/users/mildebrandt/repos", "events_url": "https://api.github.com/users/mildebrandt/events{/privacy}", "received_events_url": "https://api.github.com/users/mildebrandt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mildebrandt", "id": 7386305, "node_id": "MDQ6VXNlcjczODYzMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7386305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mildebrandt", "html_url": "https://github.com/mildebrandt", "followers_url": "https://api.github.com/users/mildebrandt/followers", "following_url": "https://api.github.com/users/mildebrandt/following{/other_user}", "gists_url": "https://api.github.com/users/mildebrandt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mildebrandt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mildebrandt/subscriptions", "organizations_url": "https://api.github.com/users/mildebrandt/orgs", "repos_url": "https://api.github.com/users/mildebrandt/repos", "events_url": "https://api.github.com/users/mildebrandt/events{/privacy}", "received_events_url": "https://api.github.com/users/mildebrandt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-03T23:13:51Z", "updated_at": "2020-08-04T00:03:31Z", "closed_at": "2020-08-04T00:03:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The logic for the `--no-strict` command line option is reversed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/118", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/118/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/118/events", "html_url": "https://github.com/23andMe/Yamale/issues/118", "id": 672385436, "node_id": "MDU6SXNzdWU2NzIzODU0MzY=", "number": 118, "title": "conditions for keys", "user": {"login": "vaibhavparnalia", "id": 7274550, "node_id": "MDQ6VXNlcjcyNzQ1NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7274550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhavparnalia", "html_url": "https://github.com/vaibhavparnalia", "followers_url": "https://api.github.com/users/vaibhavparnalia/followers", "following_url": "https://api.github.com/users/vaibhavparnalia/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhavparnalia/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhavparnalia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhavparnalia/subscriptions", "organizations_url": "https://api.github.com/users/vaibhavparnalia/orgs", "repos_url": "https://api.github.com/users/vaibhavparnalia/repos", "events_url": "https://api.github.com/users/vaibhavparnalia/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhavparnalia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T22:43:31Z", "updated_at": "2020-08-05T05:38:30Z", "closed_at": "2020-08-05T05:38:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to have a condition where either of _expression_ or _cron_ must be present?\r\n\r\n```\r\nSchedule:\r\n  expression: str()\r\n  cron:\r\n    day: str()\r\n    hour: str()\r\n    minute: str()\r\n    month: str()\r\n    week_day: str()\r\n```\r\n\r\nCurrently I have it set as\r\n\r\n```\r\nSchedule:\r\n  expression: str(required=False)\r\n  cron:\r\n    day: str(required=False)\r\n    hour: str(required=False)\r\n    minute: str(required=False)\r\n    month: str(required=False)\r\n    week_day: str(required=False)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/116", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/116/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/116/events", "html_url": "https://github.com/23andMe/Yamale/issues/116", "id": 666130990, "node_id": "MDU6SXNzdWU2NjYxMzA5OTA=", "number": 116, "title": "regex match for [0-9] does not work", "user": {"login": "JeanMarieCalmel", "id": 68846971, "node_id": "MDQ6VXNlcjY4ODQ2OTcx", "avatar_url": "https://avatars1.githubusercontent.com/u/68846971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanMarieCalmel", "html_url": "https://github.com/JeanMarieCalmel", "followers_url": "https://api.github.com/users/JeanMarieCalmel/followers", "following_url": "https://api.github.com/users/JeanMarieCalmel/following{/other_user}", "gists_url": "https://api.github.com/users/JeanMarieCalmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanMarieCalmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanMarieCalmel/subscriptions", "organizations_url": "https://api.github.com/users/JeanMarieCalmel/orgs", "repos_url": "https://api.github.com/users/JeanMarieCalmel/repos", "events_url": "https://api.github.com/users/JeanMarieCalmel/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanMarieCalmel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-27T09:24:21Z", "updated_at": "2020-07-29T13:41:01Z", "closed_at": "2020-07-27T13:53:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "the following schema shows a bug in the regex validator in Yamale:\r\n**yamale_schema_regex_bug.yaml**\r\n> buggy: regex('[0-9]', name=\"match for [0-9]???? This is the Bug\")\r\n> working: regex ('[0-9]foo')\r\n\r\nwhen submitting the following yaml for validation: \r\n**yamale_regex_bug_valid_yaml.yaml**\r\n> buggy: 3\r\n> working: 3foo\r\n\r\nit fails while it should not (the first line fails while the second succeeds) as shown below:\r\n\r\n> $ yamale -s yamale_schema_regex_bug.yaml yamale_regex_bug_valid_yaml.yaml \r\n> Validating /<path hidden>/yamale_regex_bug_valid_yaml.yaml...\r\n> Validation failed!\r\n> Error validating data '/<path hidden>/yamale_regex_bug_valid_yaml.yaml' with schema 'yamale_schema_regex_bug.yaml'\r\n>         buggy: '3' is not a match for [0-9]???? This is the Bug.\r\n\r\nThe same Regular Expression works correctly on python 3.8.3 as per the following:\r\n> \\>>> import re\r\n> \\>>> print(re.search('[0-9]', '3'))\r\n> <re.Match object; span=(0, 1), match='3'>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/110", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/110/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/110/events", "html_url": "https://github.com/23andMe/Yamale/issues/110", "id": 650960777, "node_id": "MDU6SXNzdWU2NTA5NjA3Nzc=", "number": 110, "title": "Schema for mapping dynamic input data", "user": {"login": "SuperSajuuk", "id": 8324490, "node_id": "MDQ6VXNlcjgzMjQ0OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8324490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SuperSajuuk", "html_url": "https://github.com/SuperSajuuk", "followers_url": "https://api.github.com/users/SuperSajuuk/followers", "following_url": "https://api.github.com/users/SuperSajuuk/following{/other_user}", "gists_url": "https://api.github.com/users/SuperSajuuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/SuperSajuuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SuperSajuuk/subscriptions", "organizations_url": "https://api.github.com/users/SuperSajuuk/orgs", "repos_url": "https://api.github.com/users/SuperSajuuk/repos", "events_url": "https://api.github.com/users/SuperSajuuk/events{/privacy}", "received_events_url": "https://api.github.com/users/SuperSajuuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-04T21:45:06Z", "updated_at": "2020-07-06T17:31:37Z", "closed_at": "2020-07-06T17:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I'm using this module to help in creating a validator for my YAML configurations but running into an issue.\r\n\r\nIn one of the keys, there is a setting called \"extra\". Under that setting, can be an unlimited number of keys which have their own settings which relate to that specific key (the keys are always integers).\r\n\r\nFor each key under \"extra\", it can have the following keys:\r\n- enabled (which is a boolean)\r\n- events (a list containing strings)\r\n- options (another dictionary containing two booleans: hide issuer and timestamp)\r\n\r\nFrom the documentation provided, I am struggling to find a way of creating a validator that will allow these to be tested for and every method I've tried has been an error. The docs on includes are pretty confusing and seem to cause a validation error about \"required key missing\" even when that isn't the case.\r\n\r\nThanks in advance for any advice you can provide for resolving this! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/108", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/108/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/108/events", "html_url": "https://github.com/23andMe/Yamale/issues/108", "id": 646523067, "node_id": "MDU6SXNzdWU2NDY1MjMwNjc=", "number": 108, "title": "Add an example for describing a list in a schema.", "user": {"login": "theklopex", "id": 37821672, "node_id": "MDQ6VXNlcjM3ODIxNjcy", "avatar_url": "https://avatars1.githubusercontent.com/u/37821672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theklopex", "html_url": "https://github.com/theklopex", "followers_url": "https://api.github.com/users/theklopex/followers", "following_url": "https://api.github.com/users/theklopex/following{/other_user}", "gists_url": "https://api.github.com/users/theklopex/gists{/gist_id}", "starred_url": "https://api.github.com/users/theklopex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theklopex/subscriptions", "organizations_url": "https://api.github.com/users/theklopex/orgs", "repos_url": "https://api.github.com/users/theklopex/repos", "events_url": "https://api.github.com/users/theklopex/events{/privacy}", "received_events_url": "https://api.github.com/users/theklopex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T21:32:54Z", "updated_at": "2020-07-20T16:29:59Z", "closed_at": "2020-07-20T16:29:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add the following to README.md after the section on Recursion:\r\n\r\n##### List\r\nYou can specify a list using the Include validator.\r\n\r\nThis schema:\r\n```yaml\r\nperson: list(min=1, include='human')\r\n---\r\nhuman:\r\n    name: str()\r\n    age: int()\r\n```\r\nWill validate this data:\r\n```yaml\r\nperson:\r\n  - name: Bill\r\n    age: 50\r\n  - name: Jill\r\n    age: 20\r\n  - name: Will\r\n    age: 10\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/106", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/106/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/106/events", "html_url": "https://github.com/23andMe/Yamale/issues/106", "id": 645843200, "node_id": "MDU6SXNzdWU2NDU4NDMyMDA=", "number": 106, "title": "Remove Python 2 support", "user": {"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-25T20:51:08Z", "updated_at": "2020-07-01T19:39:17Z", "closed_at": "2020-07-01T19:39:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 2 has been EOL for a few months now and we don't use it internally any more. Let's remove support for Python 2 and cut a new major version of Yamale. We can also enable strict mode be default at the same time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/104", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/104/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/104/events", "html_url": "https://github.com/23andMe/Yamale/issues/104", "id": 645070695, "node_id": "MDU6SXNzdWU2NDUwNzA2OTU=", "number": 104, "title": "Ability to specify schema and data without a filename", "user": {"login": "simonw", "id": 9599, "node_id": "MDQ6VXNlcjk1OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonw", "html_url": "https://github.com/simonw", "followers_url": "https://api.github.com/users/simonw/followers", "following_url": "https://api.github.com/users/simonw/following{/other_user}", "gists_url": "https://api.github.com/users/simonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonw/subscriptions", "organizations_url": "https://api.github.com/users/simonw/orgs", "repos_url": "https://api.github.com/users/simonw/repos", "events_url": "https://api.github.com/users/simonw/events{/privacy}", "received_events_url": "https://api.github.com/users/simonw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-25T01:04:05Z", "updated_at": "2020-06-26T17:16:16Z", "closed_at": "2020-06-26T17:16:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently you use the library like this:\r\n```python\r\nimport yamale\r\nschema = yamale.make_schema('./schema.yaml')\r\n\r\n# Create a Data object\r\ndata = yamale.make_data('./data.yaml')\r\n\r\n# Validate data against the schema. Throws a ValueError if data is invalid.\r\nyamale.validate(schema, data)\r\n```\r\nIt would be really useful if there was an option to provide the schema and data as Python strings instead - that way the could be loaded from a database or from an incoming HTTP request.\r\n\r\nSomething like this could work\r\n\r\n```python\r\nimport yamale\r\n\r\nschema = yamale.make_schema(content=\"\"\"\r\nname: str()\r\nage: int(max=200)\r\nheight: num()\r\nawesome: bool()\r\n\"\"\")\r\n\r\ndata = yamale.make_data(content=\"\"\"\r\nname: Bill\r\nage: 26\r\nheight: 6.2\r\nawesome: True\r\n\"\"\")\r\n\r\nyamale.validate(schema, data)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/102", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/102/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/102/events", "html_url": "https://github.com/23andMe/Yamale/issues/102", "id": 636050129, "node_id": "MDU6SXNzdWU2MzYwNTAxMjk=", "number": 102, "title": "GitHub action", "user": {"login": "stigok", "id": 952936, "node_id": "MDQ6VXNlcjk1MjkzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/952936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stigok", "html_url": "https://github.com/stigok", "followers_url": "https://api.github.com/users/stigok/followers", "following_url": "https://api.github.com/users/stigok/following{/other_user}", "gists_url": "https://api.github.com/users/stigok/gists{/gist_id}", "starred_url": "https://api.github.com/users/stigok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stigok/subscriptions", "organizations_url": "https://api.github.com/users/stigok/orgs", "repos_url": "https://api.github.com/users/stigok/repos", "events_url": "https://api.github.com/users/stigok/events{/privacy}", "received_events_url": "https://api.github.com/users/stigok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2128055775, "node_id": "MDU6TGFiZWwyMTI4MDU1Nzc1", "url": "https://api.github.com/repos/23andMe/Yamale/labels/tips%20and%20tricks", "name": "tips and tricks", "color": "0e8a16", "default": false, "description": "Not a bug or issue, but a cool way to use the library."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T08:36:04Z", "updated_at": "2020-06-10T15:31:40Z", "closed_at": "2020-06-10T15:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a GitHub action for Yamale in the company I work for, but we're unable to publish it due to issues with the GitHub Marketplace ToS. It's licensed under MIT, so feel free to adapt and import it here if you'd like to publish your own action. Thanks for a great project :)\r\n\r\nhttps://github.com/nrkno/yaml-schema-validator-github-action", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/100", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/100/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/100/events", "html_url": "https://github.com/23andMe/Yamale/issues/100", "id": 627637415, "node_id": "MDU6SXNzdWU2Mjc2Mzc0MTU=", "number": 100, "title": "Bug:map( key=validator ) dont work at all, it just say true", "user": {"login": "adelin-b", "id": 23508913, "node_id": "MDQ6VXNlcjIzNTA4OTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/23508913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adelin-b", "html_url": "https://github.com/adelin-b", "followers_url": "https://api.github.com/users/adelin-b/followers", "following_url": "https://api.github.com/users/adelin-b/following{/other_user}", "gists_url": "https://api.github.com/users/adelin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/adelin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adelin-b/subscriptions", "organizations_url": "https://api.github.com/users/adelin-b/orgs", "repos_url": "https://api.github.com/users/adelin-b/repos", "events_url": "https://api.github.com/users/adelin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/adelin-b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-30T02:52:06Z", "updated_at": "2020-06-03T16:15:00Z", "closed_at": "2020-06-03T16:14:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce paste this in terminal\r\n```bash\r\necho \"\r\nmap1: include('test1')\r\nmap2: include('test2')\r\n---\r\ntest1: map(str(), key=int())\r\ntest2: map(str(), key=regex('a*'))\r\n\" > test-schema.yaml;\r\n\r\n# Actually anything passed into the key validator doesnt do anything\r\necho \"\r\nmap1:\r\n  key: <- this key isnt an integer,\r\nmap2:\r\n  key: <- this key is not a valid regex match\r\n\" > test.yaml;\r\nyamale -s test-schema.yaml test.yaml --strict\r\n```\r\n\r\nThis command should fail because the key validator should not validate, but it is always passing.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/98", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/98/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/98/events", "html_url": "https://github.com/23andMe/Yamale/issues/98", "id": 615111795, "node_id": "MDU6SXNzdWU2MTUxMTE3OTU=", "number": 98, "title": "Python validation versions", "user": {"login": "abourree", "id": 380719, "node_id": "MDQ6VXNlcjM4MDcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/380719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abourree", "html_url": "https://github.com/abourree", "followers_url": "https://api.github.com/users/abourree/followers", "following_url": "https://api.github.com/users/abourree/following{/other_user}", "gists_url": "https://api.github.com/users/abourree/gists{/gist_id}", "starred_url": "https://api.github.com/users/abourree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abourree/subscriptions", "organizations_url": "https://api.github.com/users/abourree/orgs", "repos_url": "https://api.github.com/users/abourree/repos", "events_url": "https://api.github.com/users/abourree/events{/privacy}", "received_events_url": "https://api.github.com/users/abourree/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-09T07:09:03Z", "updated_at": "2020-06-26T17:20:14Z", "closed_at": "2020-06-26T17:20:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In README, we said that Yamale is validated with Python 2.7 and 3.4.\r\nBefore PR #81, tox.ini said Python 2.7 and 3.6\r\nSince PR #81, tox.ini said Pythng 2.7 and lastest Python 3\r\n\r\nDo we need to validate Yamale on Python 3 older than latest ?\r\nIf yes, should we validate from 3.4 to latest ? Or only 3.4 and latest ? Or only 3.4 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/97", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/97/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/97/events", "html_url": "https://github.com/23andMe/Yamale/issues/97", "id": 609098321, "node_id": "MDU6SXNzdWU2MDkwOTgzMjE=", "number": 97, "title": "Validate List of maps", "user": {"login": "eXpire163", "id": 16032218, "node_id": "MDQ6VXNlcjE2MDMyMjE4", "avatar_url": "https://avatars1.githubusercontent.com/u/16032218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eXpire163", "html_url": "https://github.com/eXpire163", "followers_url": "https://api.github.com/users/eXpire163/followers", "following_url": "https://api.github.com/users/eXpire163/following{/other_user}", "gists_url": "https://api.github.com/users/eXpire163/gists{/gist_id}", "starred_url": "https://api.github.com/users/eXpire163/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eXpire163/subscriptions", "organizations_url": "https://api.github.com/users/eXpire163/orgs", "repos_url": "https://api.github.com/users/eXpire163/repos", "events_url": "https://api.github.com/users/eXpire163/events{/privacy}", "received_events_url": "https://api.github.com/users/eXpire163/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T14:22:27Z", "updated_at": "2020-04-29T16:07:27Z", "closed_at": "2020-04-29T16:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "No way to validate a list of maps\r\n\r\nyaml:\r\n\r\n```yaml\r\nchilds:\r\n  - name: foo\r\n    age: 3\r\n  - name: bar\r\n    age: 5\r\n```\r\n\r\nnot working schema\r\n```\r\nchilds: list(map())\r\n```\r\n\r\n```\r\nchilds: list(include(childs))\r\n---\r\nchilds:\r\n  name: str()\r\n  age: int()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/96", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/96/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/96/events", "html_url": "https://github.com/23andMe/Yamale/issues/96", "id": 608913117, "node_id": "MDU6SXNzdWU2MDg5MTMxMTc=", "number": 96, "title": "Possibility to export to standard json schema", "user": {"login": "AAraKKe", "id": 2953658, "node_id": "MDQ6VXNlcjI5NTM2NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2953658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AAraKKe", "html_url": "https://github.com/AAraKKe", "followers_url": "https://api.github.com/users/AAraKKe/followers", "following_url": "https://api.github.com/users/AAraKKe/following{/other_user}", "gists_url": "https://api.github.com/users/AAraKKe/gists{/gist_id}", "starred_url": "https://api.github.com/users/AAraKKe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AAraKKe/subscriptions", "organizations_url": "https://api.github.com/users/AAraKKe/orgs", "repos_url": "https://api.github.com/users/AAraKKe/repos", "events_url": "https://api.github.com/users/AAraKKe/events{/privacy}", "received_events_url": "https://api.github.com/users/AAraKKe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-29T09:35:06Z", "updated_at": "2020-05-04T22:22:52Z", "closed_at": "2020-05-04T22:22:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nwe are considering using this tool for our yaml schemas validation but we rely on being able to produce a standard json schema from a yamale schema for different extensions we use that needs the schema to be supplied in json.\r\n\r\nWould it be possible to do this? From YAML to JSON we have no issue at all, but given than yamale introduces new semantics we cannot do it easily ourselves.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/92", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/92/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/92/events", "html_url": "https://github.com/23andMe/Yamale/issues/92", "id": 592905661, "node_id": "MDU6SXNzdWU1OTI5MDU2NjE=", "number": 92, "title": "Conditional with strict", "user": {"login": "devlucasc", "id": 12387194, "node_id": "MDQ6VXNlcjEyMzg3MTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/12387194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devlucasc", "html_url": "https://github.com/devlucasc", "followers_url": "https://api.github.com/users/devlucasc/followers", "following_url": "https://api.github.com/users/devlucasc/following{/other_user}", "gists_url": "https://api.github.com/users/devlucasc/gists{/gist_id}", "starred_url": "https://api.github.com/users/devlucasc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devlucasc/subscriptions", "organizations_url": "https://api.github.com/users/devlucasc/orgs", "repos_url": "https://api.github.com/users/devlucasc/repos", "events_url": "https://api.github.com/users/devlucasc/events{/privacy}", "received_events_url": "https://api.github.com/users/devlucasc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T20:37:50Z", "updated_at": "2020-04-02T21:58:04Z", "closed_at": "2020-04-02T21:57:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't validate a schema like this:\r\nData 1:\r\n```\r\nid: example\r\ntype: type1\r\nvalue: 10\r\n```\r\nData 2:\r\n```\r\nid: example\r\ntype: type2\r\nvalue: value\r\n```\r\nSchema:\r\n```\r\nany(include('v1'), include('v2), include('v3'))\r\n---\r\nv1:\r\n  id: str()\r\n---\r\nv2:\r\n type: regex('^type1')\r\n value: int()\r\n---\r\nv3:\r\n type: regex('^type2')\r\n value: str()\r\n```\r\n\r\nI was only able to do that when I duplicated schema like this:\r\n```\r\nany(include('v2), include('v3'))\r\n---\r\nv2:\r\n id: str()\r\n type: regex('^type1')\r\n value: int()\r\n---\r\nv3:\r\n id: str()\r\n type: regex('^type2')\r\n value: str()\r\n```\r\n\r\nThis occurs because validator in any operator are validated separatedely.\r\nI would like to make a conditional schema validator, defined by the type field", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/91", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/91/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/91/events", "html_url": "https://github.com/23andMe/Yamale/issues/91", "id": 592905588, "node_id": "MDU6SXNzdWU1OTI5MDU1ODg=", "number": 91, "title": "Conditional with strict", "user": {"login": "devlucasc", "id": 12387194, "node_id": "MDQ6VXNlcjEyMzg3MTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/12387194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devlucasc", "html_url": "https://github.com/devlucasc", "followers_url": "https://api.github.com/users/devlucasc/followers", "following_url": "https://api.github.com/users/devlucasc/following{/other_user}", "gists_url": "https://api.github.com/users/devlucasc/gists{/gist_id}", "starred_url": "https://api.github.com/users/devlucasc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devlucasc/subscriptions", "organizations_url": "https://api.github.com/users/devlucasc/orgs", "repos_url": "https://api.github.com/users/devlucasc/repos", "events_url": "https://api.github.com/users/devlucasc/events{/privacy}", "received_events_url": "https://api.github.com/users/devlucasc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T20:37:33Z", "updated_at": "2020-04-02T21:57:32Z", "closed_at": "2020-04-02T21:57:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't validate a schema like this:\r\nData 1:\r\n```\r\nid: example\r\ntype: type1\r\nvalue: 10\r\n```\r\nData 2:\r\n```\r\nid: example\r\ntype: type2\r\nvalue: value\r\n```\r\nSchema:\r\n```\r\nany(include('v1'), include('v2), include('v3'))\r\n---\r\nv1:\r\n  id: str()\r\n---\r\nv2:\r\n type: regex('^type1$')\r\n value: int()\r\n---\r\nv3:\r\n type: regex('^type2$')\r\n value: str()\r\n```\r\n\r\nI was only able to do that when I duplicated schema like this:\r\n```\r\nany(include('v2'), include('v3'))\r\n---\r\nv2:\r\n id: str()\r\n type: regex('^type1$')\r\n value: int()\r\n---\r\nv3:\r\n id: str()\r\n type: regex('^type2$')\r\n value: str()\r\n```\r\n\r\nThis occurs because validator in any operator are validated separately.\r\nI would like to make a conditional schema validator, defined by the type field", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/90", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/90/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/90/events", "html_url": "https://github.com/23andMe/Yamale/issues/90", "id": 592530082, "node_id": "MDU6SXNzdWU1OTI1MzAwODI=", "number": 90, "title": "Typo in lists example in README", "user": {"login": "ImmanuelHaffner", "id": 2580506, "node_id": "MDQ6VXNlcjI1ODA1MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2580506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ImmanuelHaffner", "html_url": "https://github.com/ImmanuelHaffner", "followers_url": "https://api.github.com/users/ImmanuelHaffner/followers", "following_url": "https://api.github.com/users/ImmanuelHaffner/following{/other_user}", "gists_url": "https://api.github.com/users/ImmanuelHaffner/gists{/gist_id}", "starred_url": "https://api.github.com/users/ImmanuelHaffner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ImmanuelHaffner/subscriptions", "organizations_url": "https://api.github.com/users/ImmanuelHaffner/orgs", "repos_url": "https://api.github.com/users/ImmanuelHaffner/repos", "events_url": "https://api.github.com/users/ImmanuelHaffner/events{/privacy}", "received_events_url": "https://api.github.com/users/ImmanuelHaffner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T10:38:52Z", "updated_at": "2020-04-02T16:22:01Z", "closed_at": "2020-04-02T15:53:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the README example on lists, the schema has\r\n```\r\nquestion:\r\n  choices: list(include('choices'))\r\n  questions: list(include('question'), required=False)\r\n```\r\n\r\nand the example data has\r\n```\r\nquestions:\r\n  - choices:\r\n      - id: 'id_str'\r\n      - id: 'id_str1'\r\n    questions:\r\n      - choices:\r\n        - id: 'id_str'\r\n        - id: 'id_str1'\r\n```\r\n\r\nI'm not very familiar with YAML syntax, but i think there is a typo (singular vs plural). Either `question:` in the schema should be `questions:` or the outer `questions:` in the data should be `question:`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/89", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/89/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/89/events", "html_url": "https://github.com/23andMe/Yamale/issues/89", "id": 589185699, "node_id": "MDU6SXNzdWU1ODkxODU2OTk=", "number": 89, "title": "Validate struct of dict", "user": {"login": "mflage", "id": 837316, "node_id": "MDQ6VXNlcjgzNzMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/837316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mflage", "html_url": "https://github.com/mflage", "followers_url": "https://api.github.com/users/mflage/followers", "following_url": "https://api.github.com/users/mflage/following{/other_user}", "gists_url": "https://api.github.com/users/mflage/gists{/gist_id}", "starred_url": "https://api.github.com/users/mflage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mflage/subscriptions", "organizations_url": "https://api.github.com/users/mflage/orgs", "repos_url": "https://api.github.com/users/mflage/repos", "events_url": "https://api.github.com/users/mflage/events{/privacy}", "received_events_url": "https://api.github.com/users/mflage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-27T14:47:56Z", "updated_at": "2020-04-01T16:57:06Z", "closed_at": "2020-03-27T16:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "How dow I validate this yaml structure:\r\n\r\n```\r\npeople:\r\n  personA:\r\n    name: Some Name\r\n    age: Some Age\r\n  personB:\r\n    name: Some Other Name\r\n    age: Some Other Age\r\n```\r\n\r\nThe problem is that this is not a list, it will be parsed into a dict structure. In python this would then be [\"people\"][\"personA\"][\"age\"] for instance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/88", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/88/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/88/events", "html_url": "https://github.com/23andMe/Yamale/issues/88", "id": 586547854, "node_id": "MDU6SXNzdWU1ODY1NDc4NTQ=", "number": 88, "title": "Custom validators require `eval`", "user": {"login": "McCroden", "id": 4575239, "node_id": "MDQ6VXNlcjQ1NzUyMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4575239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McCroden", "html_url": "https://github.com/McCroden", "followers_url": "https://api.github.com/users/McCroden/followers", "following_url": "https://api.github.com/users/McCroden/following{/other_user}", "gists_url": "https://api.github.com/users/McCroden/gists{/gist_id}", "starred_url": "https://api.github.com/users/McCroden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McCroden/subscriptions", "organizations_url": "https://api.github.com/users/McCroden/orgs", "repos_url": "https://api.github.com/users/McCroden/repos", "events_url": "https://api.github.com/users/McCroden/events{/privacy}", "received_events_url": "https://api.github.com/users/McCroden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-23T22:06:57Z", "updated_at": "2020-03-24T20:41:43Z", "closed_at": "2020-03-24T20:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 2.0.1\r\nOS: Windows 10\r\nPython: 3.8.1\r\n\r\nI was having issues making a [Custom Validator](https://github.com/23andMe/Yamale#custom-validators). I tried to implement the Date example and noticed that the error was a string. This was the important part of the error:\r\n\r\n```\r\ndate: 'datetime.date(2020,3,20)' is not a date.\r\n```\r\n\r\nWhen I used `eval` it worked correctly. Such as:\r\n\r\n```python\r\nclass Date(Validator):\r\n    # ...\r\n    \r\n    def _is_valid(self, value):\r\n        #  here\r\n        return isinstance(eval(value), datetime.date)\r\n```\r\n\r\n**I can make a PR to update the docs.  But, is this (using `eval`) the intended behavior?**\r\n\r\nOther than `eval`, the user could instead extract the components of and apply them. \r\n\r\n```python\r\nclass Date(Validator):\r\n    # ...\r\n    \r\n    def _is_valid(self, value):\r\n        val = value.replace('datetime.date(', '').replace(')', '').split(',')\r\n        return isinstance(datetime.date(val[0], val[1], val[2]), datetime.date)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/87", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/87/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/87/events", "html_url": "https://github.com/23andMe/Yamale/issues/87", "id": 579843626, "node_id": "MDU6SXNzdWU1Nzk4NDM2MjY=", "number": 87, "title": "Implement set() validator", "user": {"login": "slonokot", "id": 12779105, "node_id": "MDQ6VXNlcjEyNzc5MTA1", "avatar_url": "https://avatars1.githubusercontent.com/u/12779105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slonokot", "html_url": "https://github.com/slonokot", "followers_url": "https://api.github.com/users/slonokot/followers", "following_url": "https://api.github.com/users/slonokot/following{/other_user}", "gists_url": "https://api.github.com/users/slonokot/gists{/gist_id}", "starred_url": "https://api.github.com/users/slonokot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slonokot/subscriptions", "organizations_url": "https://api.github.com/users/slonokot/orgs", "repos_url": "https://api.github.com/users/slonokot/repos", "events_url": "https://api.github.com/users/slonokot/events{/privacy}", "received_events_url": "https://api.github.com/users/slonokot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-12T10:36:11Z", "updated_at": "2020-03-12T12:32:56Z", "closed_at": "2020-03-12T12:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I want to have a list of unique strings like this:\r\n```\r\nlist:\r\n  - test\r\n  - test\r\n```\r\n\r\nthere's no way to validate the list entries are unique. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/79", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/79/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/79/events", "html_url": "https://github.com/23andMe/Yamale/issues/79", "id": 544223189, "node_id": "MDU6SXNzdWU1NDQyMjMxODk=", "number": 79, "title": "include schema if a reference is valid", "user": {"login": "abourree", "id": 380719, "node_id": "MDQ6VXNlcjM4MDcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/380719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abourree", "html_url": "https://github.com/abourree", "followers_url": "https://api.github.com/users/abourree/followers", "following_url": "https://api.github.com/users/abourree/following{/other_user}", "gists_url": "https://api.github.com/users/abourree/gists{/gist_id}", "starred_url": "https://api.github.com/users/abourree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abourree/subscriptions", "organizations_url": "https://api.github.com/users/abourree/orgs", "repos_url": "https://api.github.com/users/abourree/repos", "events_url": "https://api.github.com/users/abourree/events{/privacy}", "received_events_url": "https://api.github.com/users/abourree/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-31T16:19:50Z", "updated_at": "2020-07-20T16:33:41Z", "closed_at": "2020-07-20T16:33:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello\r\n\r\nI'd like include sub schema if a field is set to true.\r\n\r\nDoes custom validator can walk into full data tree?\r\nIf yes, how to?\r\n\r\nmy data\r\n```yaml\r\na: true\r\nb:\r\n  c: 10\r\n```\r\n\r\nexpecting schema\r\n```yaml\r\na: bool()\r\nb: includeIf('a', 'isTrue', 'b')\r\n---\r\nisTrue: enum(True)\r\n---\r\nb:\r\n  c: int()\r\n```\r\nRegards,\r\n\r\nArnaud", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/77", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/77/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/77/events", "html_url": "https://github.com/23andMe/Yamale/issues/77", "id": 527510774, "node_id": "MDU6SXNzdWU1Mjc1MTA3NzQ=", "number": 77, "title": "Add support for 'rec' core type", "user": {"login": "slw07g", "id": 8406059, "node_id": "MDQ6VXNlcjg0MDYwNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8406059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slw07g", "html_url": "https://github.com/slw07g", "followers_url": "https://api.github.com/users/slw07g/followers", "following_url": "https://api.github.com/users/slw07g/following{/other_user}", "gists_url": "https://api.github.com/users/slw07g/gists{/gist_id}", "starred_url": "https://api.github.com/users/slw07g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slw07g/subscriptions", "organizations_url": "https://api.github.com/users/slw07g/orgs", "repos_url": "https://api.github.com/users/slw07g/repos", "events_url": "https://api.github.com/users/slw07g/events{/privacy}", "received_events_url": "https://api.github.com/users/slw07g/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-23T04:58:20Z", "updated_at": "2019-11-25T13:37:38Z", "closed_at": "2019-11-25T13:37:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add support for the `rec` core type.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/71", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/71/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/71/events", "html_url": "https://github.com/23andMe/Yamale/issues/71", "id": 517794885, "node_id": "MDU6SXNzdWU1MTc3OTQ4ODU=", "number": 71, "title": "[Feature request] \"in\" validator", "user": {"login": "LoveIsGrief", "id": 2829538, "node_id": "MDQ6VXNlcjI4Mjk1Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2829538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoveIsGrief", "html_url": "https://github.com/LoveIsGrief", "followers_url": "https://api.github.com/users/LoveIsGrief/followers", "following_url": "https://api.github.com/users/LoveIsGrief/following{/other_user}", "gists_url": "https://api.github.com/users/LoveIsGrief/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoveIsGrief/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoveIsGrief/subscriptions", "organizations_url": "https://api.github.com/users/LoveIsGrief/orgs", "repos_url": "https://api.github.com/users/LoveIsGrief/repos", "events_url": "https://api.github.com/users/LoveIsGrief/events{/privacy}", "received_events_url": "https://api.github.com/users/LoveIsGrief/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-05T14:07:49Z", "updated_at": "2019-11-07T16:35:46Z", "closed_at": "2019-11-07T16:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nfirst of all thanks for the work on this. It's very easy to use. I do have a feature request though.\r\n\r\nIt would be great if it were possible to add a validator that checks if a value is within a list provided by the user.\r\n\r\nA simple example to illustrate what I'm talking about:\r\n\r\n**Schema**\r\n```yaml\r\nmap(include('category'))\r\n---\r\ncategory:\r\n  default: in('category.tags')\r\n  tags: list(str(), int())\r\n```\r\n\r\n**Data**\r\n```yaml\r\nrating:\r\n  default: Unrated\r\n  # default: must be within the user-defined tags\r\n  # default: \"LMAO\" would be invalid for example\r\n  tags:\r\n    - Unrated\r\n    - 1\r\n    - 2\r\n    - 3\r\n    - 4\r\n    - 5\r\n```\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/66", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/66/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/66/events", "html_url": "https://github.com/23andMe/Yamale/issues/66", "id": 491344010, "node_id": "MDU6SXNzdWU0OTEzNDQwMTA=", "number": 66, "title": "IndexError when validating list with missing element", "user": {"login": "drmull", "id": 23558757, "node_id": "MDQ6VXNlcjIzNTU4NzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/23558757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmull", "html_url": "https://github.com/drmull", "followers_url": "https://api.github.com/users/drmull/followers", "following_url": "https://api.github.com/users/drmull/following{/other_user}", "gists_url": "https://api.github.com/users/drmull/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmull/subscriptions", "organizations_url": "https://api.github.com/users/drmull/orgs", "repos_url": "https://api.github.com/users/drmull/repos", "events_url": "https://api.github.com/users/drmull/events{/privacy}", "received_events_url": "https://api.github.com/users/drmull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-09T21:49:33Z", "updated_at": "2019-09-10T00:39:53Z", "closed_at": "2019-09-10T00:39:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using a schema with a static list and trying to validate a list with a missing element there is an uncaught IndexError exception.\r\n\r\nSchema:\r\n`[int()]`\r\n\r\nData:\r\n`[]`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/65", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/65/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/65/events", "html_url": "https://github.com/23andMe/Yamale/issues/65", "id": 490273063, "node_id": "MDU6SXNzdWU0OTAyNzMwNjM=", "number": 65, "title": "map/list with all optional fields", "user": {"login": "drmull", "id": 23558757, "node_id": "MDQ6VXNlcjIzNTU4NzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/23558757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmull", "html_url": "https://github.com/drmull", "followers_url": "https://api.github.com/users/drmull/followers", "following_url": "https://api.github.com/users/drmull/following{/other_user}", "gists_url": "https://api.github.com/users/drmull/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmull/subscriptions", "organizations_url": "https://api.github.com/users/drmull/orgs", "repos_url": "https://api.github.com/users/drmull/repos", "events_url": "https://api.github.com/users/drmull/events{/privacy}", "received_events_url": "https://api.github.com/users/drmull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-06T11:18:39Z", "updated_at": "2019-09-09T21:51:45Z", "closed_at": "2019-09-09T21:51:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nWhen introducing 2.0 I changed the behavior of maps/lists with all optional keys as discussed in https://github.com/23andMe/Yamale/pull/60#issuecomment-521364154 . Now I stumbled on a project having a problem with this new behavior: https://github.com/canada-ca/ore-ero/issues/702\r\n\r\nThis gave me a bit of a bad feeling so I took another look at the issue and now I think I can fix it so it works like in pre 2.0 without too much trouble.\r\n\r\nIts a bit of a mess since if we do this we make another backwards incompatible change in regards with 2.0 but since 2.0 haven't been out long maybe it could be viewed as an regression. Otherwise I suppose we have to bump the version again...\r\n\r\nI don't know, what do you think @mildebrandt? Do you want a PR for this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/64", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/64/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/64/events", "html_url": "https://github.com/23andMe/Yamale/issues/64", "id": 490020726, "node_id": "MDU6SXNzdWU0OTAwMjA3MjY=", "number": 64, "title": "Cleaner command line error output", "user": {"login": "televi", "id": 3333248, "node_id": "MDQ6VXNlcjMzMzMyNDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3333248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/televi", "html_url": "https://github.com/televi", "followers_url": "https://api.github.com/users/televi/followers", "following_url": "https://api.github.com/users/televi/following{/other_user}", "gists_url": "https://api.github.com/users/televi/gists{/gist_id}", "starred_url": "https://api.github.com/users/televi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/televi/subscriptions", "organizations_url": "https://api.github.com/users/televi/orgs", "repos_url": "https://api.github.com/users/televi/repos", "events_url": "https://api.github.com/users/televi/events{/privacy}", "received_events_url": "https://api.github.com/users/televi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-05T21:33:57Z", "updated_at": "2020-05-09T21:28:29Z", "closed_at": "2020-05-09T21:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, when yamale is used from the command line and an error is found the output is difficult to parse since schema.validate() will raise and then command_line.main() will also raise.  The raise() from command_line.main() doesn't actually add anything new and the raise() from validate() includes the python stack it makes it hard to find the actual problem - I'm only really interested in what yamale found, not the methods it called to find them.\r\n\r\nTo deal with this locally, I made some very simple changes that I'd be happy to contribute back if you're interested.  In command_line.main(), I simply wrapped the call to _router():\r\n```python\r\ntry:\r\n    _router(args.path, args.schema, args.cpu_num, args.parser, args.strict)\r\nexcept ValueError:\r\n    # Already processed\r\n    pass\r\nelse:\r\n    print('Validation success! \ud83d\udc4d')\r\n```\r\nTo get rid of the python stack from the output, I changed one line in command_line._validate() from\r\n```error += traceback.format_exc()``` to ```error += str(e)```.\r\n\r\nWith those changes, I was able to change this output\r\n```\r\nValidating /Users/televi/foo.yaml...\r\n\r\nError!\r\nSchema: bar.yaml\r\nData file: /Users/televi/foo.yaml\r\nTraceback (most recent call last):\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/command_line.py\", line 29, in _validate\r\n    yamale.validate(schema, data, strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/yamale.py\", line 38, in validate\r\n    schema.validate(d, path, strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/schema/schema.py\", line 65, in validate\r\n    raise ValueError(error_str)\r\nValueError:\r\nError validating data /Users/televi/foo.yaml with schema bar.yaml\r\n\tborg: 'None' is not a str.\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/command_line.py\", line 29, in _validate\r\n    yamale.validate(schema, data, strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/yamale.py\", line 38, in validate\r\n    schema.validate(d, path, strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/schema/schema.py\", line 65, in validate\r\n    raise ValueError(error_str)\r\nValueError:\r\nError validating data /Users/televi/foo.yaml with schema bar.yaml\r\n\tborg: 'None' is not a str.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/televi/.venv/bin/yamale\", line 11, in <module>\r\n    load_entry_point('yamale==2.0', 'console_scripts', 'yamale')()\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/command_line.py\", line 115, in main\r\n    _router(args.path, args.schema, args.cpu_num, args.parser, args.strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/command_line.py\", line 97, in _router\r\n    _validate_single(root, schema_name, parser, strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/command_line.py\", line 68, in _validate_single\r\n    _validate(s, yaml_path, parser, strict)\r\n  File \"/Users/televi/.venv/lib/python3.6/site-packages/yamale/command_line.py\", line 36, in _validate\r\n    raise ValueError('Validation failed!')\r\nValueError: Validation failed!\r\n```\r\nto this output\r\n```\r\nValidating /Users/televi/foo.yaml...\r\n\r\nError!\r\nSchema: bar.yaml\r\nData file: /Users/televi/foo.yaml\r\n\r\nError validating data /Users/televi/foo.yaml with schema bar.yaml\r\n\tborg: 'None' is not a str.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/63", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/63/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/63/events", "html_url": "https://github.com/23andMe/Yamale/issues/63", "id": 472101789, "node_id": "MDU6SXNzdWU0NzIxMDE3ODk=", "number": 63, "title": "ValueError when attempting to validate list of validator and validator", "user": {"login": "rHorsey", "id": 9537073, "node_id": "MDQ6VXNlcjk1MzcwNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9537073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rHorsey", "html_url": "https://github.com/rHorsey", "followers_url": "https://api.github.com/users/rHorsey/followers", "following_url": "https://api.github.com/users/rHorsey/following{/other_user}", "gists_url": "https://api.github.com/users/rHorsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/rHorsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rHorsey/subscriptions", "organizations_url": "https://api.github.com/users/rHorsey/orgs", "repos_url": "https://api.github.com/users/rHorsey/repos", "events_url": "https://api.github.com/users/rHorsey/events{/privacy}", "received_events_url": "https://api.github.com/users/rHorsey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-24T06:26:11Z", "updated_at": "2019-08-20T03:50:20Z", "closed_at": "2019-08-20T03:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all;\r\n\r\nIn an issue similar (I think) to #22 we're running into situations where we have schemas with optional lists - i.e. \r\n```yml\r\nexample1:\r\n  logic:\r\n    or:\r\n      - thing1\r\n      - thing2\r\nexample2:\r\n  logic:\r\n    - or:\r\n      - thing3\r\n      - thing4\r\n      - thing5\r\n```\r\nvalidating against:\r\n```yml\r\nexample1: include('spec-1', required=False)\r\nexample2: include('spec-2', required=False)\r\n---\r\nspec-1:\r\n  logic: >\r\n    any(\r\n      include('or-spec', required=False),\r\n      required=False\r\n    )\r\nspec-2:\r\n  logic: >\r\n    any(\r\n      list(\r\n        include('or-spec', required=False),\r\n        required=False\r\n      ),\r\n      required=False\r\n    )\r\nblended-spec:\r\n  logic: >\r\n    any(\r\n      list(\r\n        include('or-spec', required=False),\r\n        required=False\r\n      ),\r\n      include('or-spec', required=False),\r\n      required=False\r\n    )\r\nor-spec:\r\n  or: any(list(str(required=True)), str(required=False))\r\n```\r\n\r\nI can create validators for either `example1` or `example2` (`spec-1` and `spec-2` respectively) but when I try to combine those together (`blended-spec`) I end up with the below stack trace. I'm starting to convince myself that it's not me, but I'd say it's still 50/50 - my YAML comprehension is really truly bad. Any advice would be greatly appreciated!\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/util.py\", line 81, in get_value\r\n    return reduce(getitem, path, dic)[last_key]\r\nTypeError: list indices must be integers or slices, not str\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/hhorsey/repos/tracked/buildstockbatch-dev/buildstockbatch/base.py\", line 294, in validate_project_schema\r\n    return yamale.validate(schema, data)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/yamale.py\", line 39, in validate\r\n    schema.validate(d)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 49, in validate\r\n    errors += self._validate(validator, data, key=key, includes=self.includes)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 83, in _validate\r\n    return self._validate_item(validator, data_item, position, includes)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 104, in _validate_item\r\n    includes, position)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 150, in _validate_include\r\n    errors += include_schema._validate(validator, data, includes=includes, key=key, position=pos)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 83, in _validate\r\n    return self._validate_item(validator, data_item, position, includes)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 112, in _validate_item\r\n    includes, position)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 163, in _validate_any\r\n    err = self._validate_item(v, data, pos, includes)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 104, in _validate_item\r\n    includes, position)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 150, in _validate_include\r\n    errors += include_schema._validate(validator, data, includes=includes, key=key, position=pos)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/schema/schema.py\", line 75, in _validate\r\n    data_item = util.get_value(data, key)\r\n  File \"/Users/hhorsey/.pyenv/versions/idsm3/lib/python3.7/site-packages/yamale/util.py\", line 83, in get_value\r\n    return reduce(getitem, path, dic)[int(last_key)]\r\nValueError: invalid literal for int() with base 10: 'or'\r\n```\r\n\r\nI'm testing against [1.10.0](https://github.com/23andMe/Yamale/releases/tag/1.10.0). Thanks so much!\r\n\r\nRy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/62", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/62/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/62/events", "html_url": "https://github.com/23andMe/Yamale/issues/62", "id": 469078350, "node_id": "MDU6SXNzdWU0NjkwNzgzNTA=", "number": 62, "title": "Custom key validation", "user": {"login": "Dejv456", "id": 43398879, "node_id": "MDQ6VXNlcjQzMzk4ODc5", "avatar_url": "https://avatars1.githubusercontent.com/u/43398879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dejv456", "html_url": "https://github.com/Dejv456", "followers_url": "https://api.github.com/users/Dejv456/followers", "following_url": "https://api.github.com/users/Dejv456/following{/other_user}", "gists_url": "https://api.github.com/users/Dejv456/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dejv456/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dejv456/subscriptions", "organizations_url": "https://api.github.com/users/Dejv456/orgs", "repos_url": "https://api.github.com/users/Dejv456/repos", "events_url": "https://api.github.com/users/Dejv456/events{/privacy}", "received_events_url": "https://api.github.com/users/Dejv456/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-17T09:14:49Z", "updated_at": "2020-04-24T14:08:32Z", "closed_at": "2019-08-20T03:49:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nis it possible to validate custom key (**'abc'** or **'bcd'** or whatever **str()**) as below:\r\n\r\n**Data:**\r\n```\r\nabc:\r\n  type: 1\r\n  option: a\r\nbcd:\r\n  type: 2\r\n  option: b\r\n```\r\n\r\n**Schema:**\r\n```\r\n???: include('profile')\r\n---\r\nprofile:\r\n  type: int()\r\n  option: str()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/61", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/61/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/61/events", "html_url": "https://github.com/23andMe/Yamale/issues/61", "id": 466099673, "node_id": "MDU6SXNzdWU0NjYwOTk2NzM=", "number": 61, "title": "Root level constraint.", "user": {"login": "chennupushkar", "id": 26375467, "node_id": "MDQ6VXNlcjI2Mzc1NDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/26375467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chennupushkar", "html_url": "https://github.com/chennupushkar", "followers_url": "https://api.github.com/users/chennupushkar/followers", "following_url": "https://api.github.com/users/chennupushkar/following{/other_user}", "gists_url": "https://api.github.com/users/chennupushkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/chennupushkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chennupushkar/subscriptions", "organizations_url": "https://api.github.com/users/chennupushkar/orgs", "repos_url": "https://api.github.com/users/chennupushkar/repos", "events_url": "https://api.github.com/users/chennupushkar/events{/privacy}", "received_events_url": "https://api.github.com/users/chennupushkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-10T04:58:10Z", "updated_at": "2019-07-11T17:54:20Z", "closed_at": "2019-07-11T17:54:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do we express this in yamale? I want the constraints on topic-1 and topic-2 to be enforced only when yaml file has target-1.\r\n```\r\ntarget-1: \r\n  topic-1:\r\n     a: str()\r\n     b: str()\r\n  topic-2:\r\n     c: int()\r\n     d: int() \r\n\r\ntarget-2: \r\n  topic-3:\r\n     a: str()\r\n     b: str()\r\n  topic-4:\r\n     c: int()\r\n     d: int()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/56", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/56/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/56/events", "html_url": "https://github.com/23andMe/Yamale/issues/56", "id": 446543231, "node_id": "MDU6SXNzdWU0NDY1NDMyMzE=", "number": 56, "title": "Unable to validate list of values", "user": {"login": "sunilkum84", "id": 36337706, "node_id": "MDQ6VXNlcjM2MzM3NzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/36337706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunilkum84", "html_url": "https://github.com/sunilkum84", "followers_url": "https://api.github.com/users/sunilkum84/followers", "following_url": "https://api.github.com/users/sunilkum84/following{/other_user}", "gists_url": "https://api.github.com/users/sunilkum84/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunilkum84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunilkum84/subscriptions", "organizations_url": "https://api.github.com/users/sunilkum84/orgs", "repos_url": "https://api.github.com/users/sunilkum84/repos", "events_url": "https://api.github.com/users/sunilkum84/events{/privacy}", "received_events_url": "https://api.github.com/users/sunilkum84/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186418, "node_id": "MDU6TGFiZWw3NzE4NjQxOA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-21T10:34:09Z", "updated_at": "2019-08-20T03:34:15Z", "closed_at": "2019-08-20T03:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe trying to validate list of values of spec.initContainers.resources but we are getting following error while validating list of values\r\n\r\n**Error:**\r\n```\r\nroot@devenv:/media/sf_test_devenv# yamale -s schema.yaml data.yaml\r\nValidating /media/sf_test_devenv/data.yaml...\r\n\r\nError!\r\nSchema: schema.yaml\r\nData file: /media/sf_test_devenv/data.yaml\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/command_line.py\", line 29, in _validate\r\n    yamale.validate(schema, data)\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/yamale.py\", line 39, in validate\r\n    schema.validate(d)\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/schema/schema.py\", line 56, in validate\r\n    raise ValueError(error_str)\r\nValueError:\r\nError validating data /media/sf_test_devenv/data.yaml with schema schema.yaml\r\n        spec.template.spec.initContainers.0.resources.requests.cpu: Required field missing\r\n        spec.template.spec.initContainers.0.resources.requests.memory: Required field missing\r\n        spec.template.spec.initContainers.0.resources.limits.memory: Required field missing\r\n        spec.template.spec.initContainers.0.resources.limits.cpu: Required field missing\r\n        spec.template.spec.initContainers.1.resources.requests.cpu: Required field missing\r\n        spec.template.spec.initContainers.1.resources.requests.memory: Required field missing\r\n        spec.template.spec.initContainers.1.resources.limits.memory: Required field missing\r\n        spec.template.spec.initContainers.1.resources.limits.cpu: Required field missing\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/yamale\", line 11, in <module>\r\n    load_entry_point('yamale==1.10.0', 'console_scripts', 'yamale')()\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/command_line.py\", line 112, in main\r\n    _router(args.path, args.schema, args.cpu_num, args.parser)\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/command_line.py\", line 96, in _router\r\n    _validate_single(root, schema_name, parser)\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/command_line.py\", line 68, in _validate_single\r\n    _validate(s, yaml_path, parser)\r\n  File \"/usr/local/lib/python2.7/dist-packages/yamale/command_line.py\", line 36, in _validate\r\n    raise ValueError('Validation failed!')\r\nValueError: Validation failed!\r\nroot@devenv:/media/sf_test_devenv#\r\n```\r\n\r\n-------------------------\r\n**Data.yaml**\r\n--------------------------\r\n```\r\n\r\n##---\r\n# Source: SampleApp/templates/deployment.yaml\r\napiVersion: extensions/v1beta1\r\nkind: Deployment\r\nmetadata:\r\n  name: SampleApp\r\n  labels:\r\n    app: SampleApp\r\n    chart: SampleApp-0.0.0-snapshot\r\nspec:\r\n  replicas: 2\r\n  selector:\r\n    matchLabels:\r\n      app: SampleApp\r\n      release: RELEASE-NAME\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: SampleApp\r\n        release: RELEASE-NAME\r\n    spec:\r\n      initContainers:\r\n      - name: SampleApp-create-db\r\n        image: \"${DOCKER_NAME}/service-db-maria:0.0.18\"\r\n        imagePullPolicy: IfNotPresent\r\n        resources:\r\n            limits:\r\n              cpu: 1\r\n              memory: 512Mi\r\n            requests:\r\n              cpu: 50m\r\n              memory: 128Mi\r\n            \r\n      - name: SampleApp-migrate-db\r\n        image: \"${DOCKER_REGISTRY}/SampleApp-migrate:${BUILD_VERSION}\"\r\n        resources:\r\n            limits:\r\n              cpu: 1\r\n              memory: 512Mi\r\n            requests:\r\n              cpu: 50m\r\n              memory: 128Mi\r\n      containers:\r\n        - name: SampleApp\r\n          image: \"${DOCKER_REGISTRY}/SampleApp:0.0.0-snapshot\"\r\n          imagePullPolicy: IfNotPresent\r\n          env:\r\n          - name: LOGGING_LEVEL\r\n            value: \"info\"\r\n          ports:\r\n            - containerPort: 80\r\n            - containerPort: 6060\r\n          resources:\r\n            limits:\r\n              cpu: 1\r\n              memory: 512Mi\r\n            requests:\r\n              cpu: 50m\r\n              memory: 128Mi\r\n```\r\n            \r\n----------------\r\n**Schema.yaml**\r\n----------------\r\n```\r\nspec: \r\n  template:\r\n    spec: \r\n      initContainers: list(include('resourcesDefinition'))\r\n---\r\nresourcesDefinition:\r\n  resources: \r\n    limits:\r\n      memory: any(str(), int())\r\n      cpu: any(str(), int())\r\n    requests:\r\n      cpu: any(str(), int())\r\n      memory: any(str(), int())\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/55", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/55/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/55/events", "html_url": "https://github.com/23andMe/Yamale/issues/55", "id": 443539281, "node_id": "MDU6SXNzdWU0NDM1MzkyODE=", "number": 55, "title": "empty schema generated IndexError exception", "user": {"login": "mancusoa74", "id": 2828449, "node_id": "MDQ6VXNlcjI4Mjg0NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2828449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mancusoa74", "html_url": "https://github.com/mancusoa74", "followers_url": "https://api.github.com/users/mancusoa74/followers", "following_url": "https://api.github.com/users/mancusoa74/following{/other_user}", "gists_url": "https://api.github.com/users/mancusoa74/gists{/gist_id}", "starred_url": "https://api.github.com/users/mancusoa74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mancusoa74/subscriptions", "organizations_url": "https://api.github.com/users/mancusoa74/orgs", "repos_url": "https://api.github.com/users/mancusoa74/repos", "events_url": "https://api.github.com/users/mancusoa74/events{/privacy}", "received_events_url": "https://api.github.com/users/mancusoa74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186418, "node_id": "MDU6TGFiZWw3NzE4NjQxOA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-13T18:27:11Z", "updated_at": "2019-11-06T17:26:23Z", "closed_at": "2019-11-06T17:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\r\nassume the simple block of code below:\r\n\r\n    schema = yamale.make_schema('schema.yml')\r\n\r\nwhere: \r\nschema.yml is an empty file\r\n\r\nthis generates the following exception\r\n\r\nFile \"....../lib/python3.7/site-packages/yamale/yamale.py\", line 17, in make_schema\r\n    s = Schema(raw_schemas[0], path, validators=validators)\r\nIndexError: list index out of range\r\n\r\nI think would make sense to add a simple check to a non-empty yml schema.\r\n\r\nif you think this make sense, let me know if you will accept a pull request for it. I can help to fix it.\r\n\r\nThe tool is great and I enjoy it\r\n\r\nthnx\r\nAntonio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/54", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/54/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/54/events", "html_url": "https://github.com/23andMe/Yamale/issues/54", "id": 443523106, "node_id": "MDU6SXNzdWU0NDM1MjMxMDY=", "number": 54, "title": "empty yml to validate not detected", "user": {"login": "mancusoa74", "id": 2828449, "node_id": "MDQ6VXNlcjI4Mjg0NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2828449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mancusoa74", "html_url": "https://github.com/mancusoa74", "followers_url": "https://api.github.com/users/mancusoa74/followers", "following_url": "https://api.github.com/users/mancusoa74/following{/other_user}", "gists_url": "https://api.github.com/users/mancusoa74/gists{/gist_id}", "starred_url": "https://api.github.com/users/mancusoa74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mancusoa74/subscriptions", "organizations_url": "https://api.github.com/users/mancusoa74/orgs", "repos_url": "https://api.github.com/users/mancusoa74/repos", "events_url": "https://api.github.com/users/mancusoa74/events{/privacy}", "received_events_url": "https://api.github.com/users/mancusoa74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186418, "node_id": "MDU6TGFiZWw3NzE4NjQxOA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T17:45:46Z", "updated_at": "2020-01-06T17:08:25Z", "closed_at": "2020-01-06T17:08:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello,\r\nassume the simple block of code below (may be not a bug)\r\n\r\n    schema = yamale.make_schema('schema.yml')\r\n    cfg = yamale.make_data('config.yml')\r\n\r\n    try:\r\n        yamale.validate(schema, cfg)\r\n    except ValueError as e:\r\n        log.critical(e)\r\n        sys.exit(1)\r\n\r\nwhere: \r\nschema.yml is the yaml schema used to validate a config.yml file\r\n\r\nNow let's assume in the schema.yml there a line like:\r\nlog_file: str(required=True)\r\n\r\nNow if I provide an empty config.yml file, the validation succeed with no exception.\r\nSo in this way any config.yml is considered valid.\r\n\r\nI think would make sense to add a simple check to a non-empty yml file to validate.\r\n\r\nif you think this make sense, let me know if you will accept a pull request for it. I can help to fix it.\r\n\r\nThe tool is great and I enjoy it\r\n\r\nthnx\r\nAntonio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/53", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/53/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/53/events", "html_url": "https://github.com/23andMe/Yamale/issues/53", "id": 440539389, "node_id": "MDU6SXNzdWU0NDA1MzkzODk=", "number": 53, "title": "dict key type validation", "user": {"login": "milos-korenciak", "id": 3031629, "node_id": "MDQ6VXNlcjMwMzE2Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3031629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milos-korenciak", "html_url": "https://github.com/milos-korenciak", "followers_url": "https://api.github.com/users/milos-korenciak/followers", "following_url": "https://api.github.com/users/milos-korenciak/following{/other_user}", "gists_url": "https://api.github.com/users/milos-korenciak/gists{/gist_id}", "starred_url": "https://api.github.com/users/milos-korenciak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milos-korenciak/subscriptions", "organizations_url": "https://api.github.com/users/milos-korenciak/orgs", "repos_url": "https://api.github.com/users/milos-korenciak/repos", "events_url": "https://api.github.com/users/milos-korenciak/events{/privacy}", "received_events_url": "https://api.github.com/users/milos-korenciak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-06T04:51:17Z", "updated_at": "2019-08-02T03:26:51Z", "closed_at": "2019-08-02T01:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to also add validation of key type in dict (={key:val}), please?\r\n\r\nI am missing this functionality as almost all validators work along jsonschema principles. There (by definition) is every key string. But not so in YAML (https://yaml.org/spec/1.2/spec.html#id2764196)... The key itself could be almost everything (unique).\r\n\r\n(If I am missing something obvious in yamale docs, excuse me in advance.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/50", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/50/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/50/events", "html_url": "https://github.com/23andMe/Yamale/issues/50", "id": 421598791, "node_id": "MDU6SXNzdWU0MjE1OTg3OTE=", "number": 50, "title": "Can't Validate Keys with Dots in Them", "user": {"login": "supertylerc", "id": 4076147, "node_id": "MDQ6VXNlcjQwNzYxNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4076147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supertylerc", "html_url": "https://github.com/supertylerc", "followers_url": "https://api.github.com/users/supertylerc/followers", "following_url": "https://api.github.com/users/supertylerc/following{/other_user}", "gists_url": "https://api.github.com/users/supertylerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/supertylerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supertylerc/subscriptions", "organizations_url": "https://api.github.com/users/supertylerc/orgs", "repos_url": "https://api.github.com/users/supertylerc/repos", "events_url": "https://api.github.com/users/supertylerc/events{/privacy}", "received_events_url": "https://api.github.com/users/supertylerc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-15T16:18:50Z", "updated_at": "2019-07-02T18:05:22Z", "closed_at": "2019-07-02T18:05:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that I can't validate a YAML file if it has dots (`.`) in the key.  Looks like it's because of the flattening of keys later on, but interestingly you _can_ specify a key with dots in the schema, and Yamale will translate the schema keys with dots in them to underscores.\r\n\r\nI worked around this in a _super_ hacky way locally with the following:\r\n\r\n```python\r\nfrom yamale import util\r\n\r\ndef sub(dic):\r\n    new = {}\r\n    for k, v in util.get_iter(dic):\r\n        if util.is_iter(v):\r\n            v = sub(v)\r\n        if util.isstr(k):\r\n            new[k.replace('.', '_')] = v\r\n    return new\r\n\r\n\r\ndef parse_file(file_name, parser):\r\n    try:\r\n        parse = _parsers[parser.lower()]\r\n    except KeyError:\r\n        raise NameError('Parser \"' + parser + '\" is not supported\\nAvailable parsers are listed below:\\nPyYAML\\nruamel')\r\n    parsed = parse(file_name)\r\n    new = []\r\n    for x in parsed:\r\n        new.append(sub(x))\r\n    return new\r\n```\r\n\r\nThis pretty much just replaces `.` with `_` in parsed YAML files, which is being done elsewhere anyway when things get flattened out.  I'm not sure if the flattening functionality that does the dot replacement could be removed with this patch, but maybe it could be.\r\n\r\nWould you be open to a cleaned up and tested version of this in a PR?  If so, I can work on it and submit it.\r\n\r\nMy primary focus is networking, so this is useful when I need to validate a document with IP addresses or MAC addresses as a key.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/48", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/48/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/48/events", "html_url": "https://github.com/23andMe/Yamale/issues/48", "id": 418841905, "node_id": "MDU6SXNzdWU0MTg4NDE5MDU=", "number": 48, "title": "Validate multiple alternative schemas", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-08T15:46:55Z", "updated_at": "2019-08-20T03:51:59Z", "closed_at": "2019-08-20T03:51:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build a validator for a configuration file format that has multiple mutually incompatible versions (similar to docker-compose files for example). \r\n\r\nExample of how I had hoped to express this:\r\n```yaml\r\n# The following line does *not* work\r\nany(include('v1_config'), include('v2_config'))\r\n---\r\nv1_config:\r\n  version: int(min=1, max=1, required=False)\r\n  settings:\r\n    v1_setting_a: str()\r\n    v1_setting_b: str(required=False)\r\n---\r\nv2_config:\r\n  version: int(min=2, max=2)\r\n  settings:\r\n    v2_setting_c: str()\r\n    v2_setting_d: int()\r\n```\r\n\r\nIs there any way to express what I'm trying to do here, or is that simply not supported (yet)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/45", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/45/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/45/events", "html_url": "https://github.com/23andMe/Yamale/issues/45", "id": 405238341, "node_id": "MDU6SXNzdWU0MDUyMzgzNDE=", "number": 45, "title": "IP and MAC type validation", "user": {"login": "ryanmerolle", "id": 9010275, "node_id": "MDQ6VXNlcjkwMTAyNzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9010275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanmerolle", "html_url": "https://github.com/ryanmerolle", "followers_url": "https://api.github.com/users/ryanmerolle/followers", "following_url": "https://api.github.com/users/ryanmerolle/following{/other_user}", "gists_url": "https://api.github.com/users/ryanmerolle/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanmerolle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanmerolle/subscriptions", "organizations_url": "https://api.github.com/users/ryanmerolle/orgs", "repos_url": "https://api.github.com/users/ryanmerolle/repos", "events_url": "https://api.github.com/users/ryanmerolle/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanmerolle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-31T13:09:50Z", "updated_at": "2019-05-13T00:26:15Z", "closed_at": "2019-05-13T00:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think leveraging the netaddress module for IP and MAC address validation would be useful.  I get that you do not have time for anything but bugs, so I figured I post this feature request and possibly get to it when I have time myself.  Maybe even someone else might want to take a stab at this  as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/43", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/43/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/43/events", "html_url": "https://github.com/23andMe/Yamale/issues/43", "id": 381635165, "node_id": "MDU6SXNzdWUzODE2MzUxNjU=", "number": 43, "title": "What versions of Python 3 should be supported?", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-16T15:02:45Z", "updated_at": "2018-11-18T21:41:43Z", "closed_at": "2018-11-18T21:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "README and setup.py state Python 3.4+ but only 3.6 is tested on Travis. Is 3.4 supposed to be supported? Would you accept a PR to add 3.4 and 3.5 testing to Travis CI build?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/41", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/41/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/41/events", "html_url": "https://github.com/23andMe/Yamale/issues/41", "id": 280100304, "node_id": "MDU6SXNzdWUyODAxMDAzMDQ=", "number": 41, "title": "working on a windows OS ", "user": {"login": "itamarlev", "id": 8093028, "node_id": "MDQ6VXNlcjgwOTMwMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8093028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itamarlev", "html_url": "https://github.com/itamarlev", "followers_url": "https://api.github.com/users/itamarlev/followers", "following_url": "https://api.github.com/users/itamarlev/following{/other_user}", "gists_url": "https://api.github.com/users/itamarlev/gists{/gist_id}", "starred_url": "https://api.github.com/users/itamarlev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itamarlev/subscriptions", "organizations_url": "https://api.github.com/users/itamarlev/orgs", "repos_url": "https://api.github.com/users/itamarlev/repos", "events_url": "https://api.github.com/users/itamarlev/events{/privacy}", "received_events_url": "https://api.github.com/users/itamarlev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186422, "node_id": "MDU6TGFiZWw3NzE4NjQyMg==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-07T11:46:18Z", "updated_at": "2019-02-19T09:13:57Z", "closed_at": "2019-02-19T09:13:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\nis there a way to run YAMALE on windows?\r\nI tried it but it did not work.\r\n\r\nThanks,\r\nItamar", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/40", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/40/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/40/events", "html_url": "https://github.com/23andMe/Yamale/issues/40", "id": 276327258, "node_id": "MDU6SXNzdWUyNzYzMjcyNTg=", "number": 40, "title": "Any plan to add regular expression or pattern validation?", "user": {"login": "manishabardiya", "id": 18046070, "node_id": "MDQ6VXNlcjE4MDQ2MDcw", "avatar_url": "https://avatars1.githubusercontent.com/u/18046070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manishabardiya", "html_url": "https://github.com/manishabardiya", "followers_url": "https://api.github.com/users/manishabardiya/followers", "following_url": "https://api.github.com/users/manishabardiya/following{/other_user}", "gists_url": "https://api.github.com/users/manishabardiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/manishabardiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manishabardiya/subscriptions", "organizations_url": "https://api.github.com/users/manishabardiya/orgs", "repos_url": "https://api.github.com/users/manishabardiya/repos", "events_url": "https://api.github.com/users/manishabardiya/events{/privacy}", "received_events_url": "https://api.github.com/users/manishabardiya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-23T10:34:57Z", "updated_at": "2019-07-02T17:55:54Z", "closed_at": "2019-07-02T17:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nDo you have any plan to add regular expression or pattern validation?\r\n\r\nThanks,\r\nManisha", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/37", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/37/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/37/events", "html_url": "https://github.com/23andMe/Yamale/issues/37", "id": 247094934, "node_id": "MDU6SXNzdWUyNDcwOTQ5MzQ=", "number": 37, "title": "Adding possibility to include validators", "user": {"login": "rigal-m", "id": 30345598, "node_id": "MDQ6VXNlcjMwMzQ1NTk4", "avatar_url": "https://avatars1.githubusercontent.com/u/30345598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rigal-m", "html_url": "https://github.com/rigal-m", "followers_url": "https://api.github.com/users/rigal-m/followers", "following_url": "https://api.github.com/users/rigal-m/following{/other_user}", "gists_url": "https://api.github.com/users/rigal-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/rigal-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rigal-m/subscriptions", "organizations_url": "https://api.github.com/users/rigal-m/orgs", "repos_url": "https://api.github.com/users/rigal-m/repos", "events_url": "https://api.github.com/users/rigal-m/events{/privacy}", "received_events_url": "https://api.github.com/users/rigal-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-01T14:47:53Z", "updated_at": "2019-08-20T04:10:27Z", "closed_at": "2019-08-20T04:10:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI think it could be interesting to be able to include not only nodes but also validators in Yamale. For example:\r\n\r\n```yaml\r\n# [schema.yaml]\r\n\r\nkey1: include('freq_val_1')\r\nkey2: include('freq_val_2')\r\n\r\n--- # Frequently used validators\r\nfreq_val_1: enum('str_1', 'str_2', 'str_3', 'str_4', 'str_5')\r\nfreq_val_2: map(include('a_node_with_some_very_long_name_1'), include('a_node_with_some_very_long_name_2'))\r\n# etc...\r\n\r\n--- # Included nodes\r\na_node_with_some_very_long_name_1:\r\n  n: int()\r\na_node_with_some_very_long_name_2:\r\n  x: num()\r\n```\r\n\r\nI can do a PR if you are interested. In this case all suggestions are welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/34", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/34/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/34/events", "html_url": "https://github.com/23andMe/Yamale/issues/34", "id": 244661010, "node_id": "MDU6SXNzdWUyNDQ2NjEwMTA=", "number": 34, "title": "Bug validating scientific notation", "user": {"login": "rigal-m", "id": 30345598, "node_id": "MDQ6VXNlcjMwMzQ1NTk4", "avatar_url": "https://avatars1.githubusercontent.com/u/30345598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rigal-m", "html_url": "https://github.com/rigal-m", "followers_url": "https://api.github.com/users/rigal-m/followers", "following_url": "https://api.github.com/users/rigal-m/following{/other_user}", "gists_url": "https://api.github.com/users/rigal-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/rigal-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rigal-m/subscriptions", "organizations_url": "https://api.github.com/users/rigal-m/orgs", "repos_url": "https://api.github.com/users/rigal-m/repos", "events_url": "https://api.github.com/users/rigal-m/events{/privacy}", "received_events_url": "https://api.github.com/users/rigal-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-21T12:57:15Z", "updated_at": "2017-07-25T20:18:16Z", "closed_at": "2017-07-25T20:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI am encountering an issue when I have a float written in the scientific notation. For example, under python3:\r\n\r\n```yaml\r\n# [data.yaml]\r\nkey1: 1.0e-6\r\nkey2: 1e-6\r\n```\r\n\r\n```yaml\r\n# [schema.yaml]\r\nkey1: num()\r\nkey2: num()\r\n```\r\n\r\nWhen I try to validate with the command `yamale data.yaml`, I get the error:\r\n```\r\nValueError: \r\nError validating data /local/home/mrigal/Work/parsing_yaml/issues/issue1/data.yaml with schema schema.yaml\r\n\tkey2: '1e-6' is not a num.\r\n```\r\n\r\nFor some reason it seems that PyYAML converts 1e-6 to a string (but not 1.0e-6). If I modify the source file yamale/readers/yaml_reader.py to load the module ruamel.yaml instead of yaml, it works fine:\r\n\r\n```python\r\nfrom __future__ import absolute_import\r\nfrom ruamel.yaml import YAML\r\n\r\nyaml=YAML(typ=\"safe\")\r\n\r\ndef parse_file(file_name):\r\n    with open(file_name) as f:\r\n        return list(yaml.load_all(f))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/28", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/28/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/28/events", "html_url": "https://github.com/23andMe/Yamale/issues/28", "id": 178639977, "node_id": "MDU6SXNzdWUxNzg2Mzk5Nzc=", "number": 28, "title": "any() inside included element causes error", "user": {"login": "Shplorf", "id": 7115665, "node_id": "MDQ6VXNlcjcxMTU2NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7115665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shplorf", "html_url": "https://github.com/Shplorf", "followers_url": "https://api.github.com/users/Shplorf/followers", "following_url": "https://api.github.com/users/Shplorf/following{/other_user}", "gists_url": "https://api.github.com/users/Shplorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shplorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shplorf/subscriptions", "organizations_url": "https://api.github.com/users/Shplorf/orgs", "repos_url": "https://api.github.com/users/Shplorf/repos", "events_url": "https://api.github.com/users/Shplorf/events{/privacy}", "received_events_url": "https://api.github.com/users/Shplorf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-22T15:20:48Z", "updated_at": "2016-09-22T19:30:11Z", "closed_at": "2016-09-22T19:13:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following schema results in an error while parsing the schema:\n\n```\ntest_1: include('test_2')\n\n---\ntest_2: any(str(), int())\n```\n\nRelevant part of stack trace:\n\n> File \"/usr/local/lib/python2.7/site-packages/yamale/yamale.py\", line 17, in make_schema\n>     s.add_include(raw_schema)\n>   File \"/usr/local/lib/python2.7/site-packages/yamale/schema/schema.py\", line 20, in add_include\n>     validators=self.validators)\n>   File \"/usr/local/lib/python2.7/site-packages/yamale/schema/schema.py\", line 14, in **init**\n>     self._schema = self._process_schema(schema_dict, self.validators)\n>   File \"/usr/local/lib/python2.7/site-packages/yamale/schema/schema.py\", line 36, in _process_schema\n>     raise SyntaxError(str(e) + ' at node \\'%s\\' in file %s' % (key, self.name))\n> SyntaxError: Invalid schema expression: 'i'. name 'i' is not defined at node '11' in file test_2\n\nThis is with Python 2.7 if that matters\n\nSo, if I want an element to contain one of two possible types of value, I need to do something like this instead and do some additional validation in the code that at least one of them is present:\n\n```\ntest_1: include('test_2')\n\n---\ntest_2:\n  test_3: str(required=False)\n  test_4: int(required=False)\n```\n\nNot sure if this is intended. Am I missing something or is there no neater way to do this?\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/27", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/27/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/27/events", "html_url": "https://github.com/23andMe/Yamale/issues/27", "id": 142507669, "node_id": "MDU6SXNzdWUxNDI1MDc2Njk=", "number": 27, "title": "strict mode?", "user": {"login": "robinpatricksmith", "id": 7757484, "node_id": "MDQ6VXNlcjc3NTc0ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7757484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinpatricksmith", "html_url": "https://github.com/robinpatricksmith", "followers_url": "https://api.github.com/users/robinpatricksmith/followers", "following_url": "https://api.github.com/users/robinpatricksmith/following{/other_user}", "gists_url": "https://api.github.com/users/robinpatricksmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinpatricksmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinpatricksmith/subscriptions", "organizations_url": "https://api.github.com/users/robinpatricksmith/orgs", "repos_url": "https://api.github.com/users/robinpatricksmith/repos", "events_url": "https://api.github.com/users/robinpatricksmith/events{/privacy}", "received_events_url": "https://api.github.com/users/robinpatricksmith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-22T00:12:50Z", "updated_at": "2019-08-20T03:47:58Z", "closed_at": "2019-08-20T03:47:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Keys that do not fit the schema are ignored - so I could have a typo in an optional key and never know about it. It would be nice to have a strict mode where you get a warning that keys were found that are not in the schema. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/22", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/22/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/22/events", "html_url": "https://github.com/23andMe/Yamale/issues/22", "id": 111986911, "node_id": "MDU6SXNzdWUxMTE5ODY5MTE=", "number": 22, "title": "Regression in v1.5.2", "user": {"login": "SchnWalter", "id": 2186426, "node_id": "MDQ6VXNlcjIxODY0MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2186426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SchnWalter", "html_url": "https://github.com/SchnWalter", "followers_url": "https://api.github.com/users/SchnWalter/followers", "following_url": "https://api.github.com/users/SchnWalter/following{/other_user}", "gists_url": "https://api.github.com/users/SchnWalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/SchnWalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SchnWalter/subscriptions", "organizations_url": "https://api.github.com/users/SchnWalter/orgs", "repos_url": "https://api.github.com/users/SchnWalter/repos", "events_url": "https://api.github.com/users/SchnWalter/events{/privacy}", "received_events_url": "https://api.github.com/users/SchnWalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-17T21:52:30Z", "updated_at": "2015-10-19T04:08:50Z", "closed_at": "2015-10-19T03:51:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nIt looks like there was a regression in v1.5.2. Could you please look over it.\n\n```\n# Clean\n$ pip uninstall yamale\n\n# Test is OK with Yamale v1.5.0\n$ pip install yamale==1.5.0\n$ python regression_test.py\nDONE!\n\n\n# Test fails with Yamale v1.5.2\n$ pip install --upgrade yamale==1.5.2\n$ python regression_test.py\nTraceback (most recent call last):\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/util.py\", line 65, in get_value\n    return reduce(getitem, path, dic)[last_key]\nTypeError: string indices must be integers\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"regression_test.py\", line 12, in <module>\n    yamale.validate(schema, data)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/yamale.py\", line 30, in validate\n    schema.validate(d)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 44, in validate\n    errors += self._validate(validator, data, key=key, includes=self.includes)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 76, in _validate\n    return self._validate_item(validator, data_item, position, includes)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 100, in _validate_item\n    includes, position)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 122, in _validate_map_list\n    err = self._validate(v, data, key, pos, includes)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 76, in _validate\n    return self._validate_item(validator, data_item, position, includes)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 96, in _validate_item\n    includes, position)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 142, in _validate_include\n    errors += include_schema._validate(validator, data, includes=includes, key=key, position=pos)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/schema.py\", line 68, in _validate\n    data_item = util.get_value(data, key)\n  File \"/workspace/android/mission-impossible-android/.venv/lib/python3.4/site-packages/yamale/schema/util.py\", line 67, in get_value\n    return reduce(getitem, path, dic)[int(last_key)]\nValueError: invalid literal for int() with base 10: 'id'\n```\n\nThis is the schema that is no longer working.\n\n```\napps: >\n  list(\n    str(),\n    include('app_fdroid_latest'),\n  )\n\n---\n\napp_fdroid_latest:\n  id: str()\n  repository: str(required=False)\n  app_type: enum('system', 'privileged', 'user', required=False)\n```\n\nI have uploaded the tests here: https://www.mission.li/regression_test.tar.gz\n\nThank you,\nWalter S.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/17", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/17/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/17/events", "html_url": "https://github.com/23andMe/Yamale/issues/17", "id": 69980328, "node_id": "MDU6SXNzdWU2OTk4MDMyOA==", "number": 17, "title": "Sample of multi-line YAML", "user": {"login": "patcon", "id": 305339, "node_id": "MDQ6VXNlcjMwNTMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/305339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patcon", "html_url": "https://github.com/patcon", "followers_url": "https://api.github.com/users/patcon/followers", "following_url": "https://api.github.com/users/patcon/following{/other_user}", "gists_url": "https://api.github.com/users/patcon/gists{/gist_id}", "starred_url": "https://api.github.com/users/patcon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patcon/subscriptions", "organizations_url": "https://api.github.com/users/patcon/orgs", "repos_url": "https://api.github.com/users/patcon/repos", "events_url": "https://api.github.com/users/patcon/events{/privacy}", "received_events_url": "https://api.github.com/users/patcon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-21T23:44:59Z", "updated_at": "2015-04-22T00:00:21Z", "closed_at": "2015-04-22T00:00:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yes, it's a yaml thing, but users who don't know the YAML spec very well might appreciate a heads-up (by way of example) that this is OK :)\n\nhttps://github.com/mission-impossible-android/mission-impossible-android/blob/feature/yaml-spec/docs/schema.yaml#L11-L18\n\n```\napps: >\n  list(\n    str(),\n    include('app_fdroid_latest'),\n    include('app_fdroid_version'),\n    include('app_fdroid_versioncode'),\n    include('app_direct_download'),\n  )\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/16", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/16/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/16/events", "html_url": "https://github.com/23andMe/Yamale/issues/16", "id": 68262501, "node_id": "MDU6SXNzdWU2ODI2MjUwMQ==", "number": 16, "title": "Document `key: list(include('custom'), str())` format", "user": {"login": "patcon", "id": 305339, "node_id": "MDQ6VXNlcjMwNTMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/305339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patcon", "html_url": "https://github.com/patcon", "followers_url": "https://api.github.com/users/patcon/followers", "following_url": "https://api.github.com/users/patcon/following{/other_user}", "gists_url": "https://api.github.com/users/patcon/gists{/gist_id}", "starred_url": "https://api.github.com/users/patcon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patcon/subscriptions", "organizations_url": "https://api.github.com/users/patcon/orgs", "repos_url": "https://api.github.com/users/patcon/repos", "events_url": "https://api.github.com/users/patcon/events{/privacy}", "received_events_url": "https://api.github.com/users/patcon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-04-14T05:05:15Z", "updated_at": "2015-04-14T19:43:31Z", "closed_at": "2015-04-14T19:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would this be something you'd be willing to accept functionality to be able to validate?\n\n``` yaml\n# config.yaml\napps:\n  - id: com.android.foo\n    url: http://example.com/com.android.foo.apk\n  - id: com.android.bar\n    versioncode: 123\n  - com.android.baz\n```\n\nwith this:\n\n``` yaml\n# schema.yaml\napps: list(include('app'), str())\n\n---\napp:\n  id: str()\n  versioncode: int(required=False)\n  url: str(required=False)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/13", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/13/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/13/events", "html_url": "https://github.com/23andMe/Yamale/issues/13", "id": 60778057, "node_id": "MDU6SXNzdWU2MDc3ODA1Nw==", "number": 13, "title": "Validating unamed list", "user": {"login": "goodwillcoding", "id": 582074, "node_id": "MDQ6VXNlcjU4MjA3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/582074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodwillcoding", "html_url": "https://github.com/goodwillcoding", "followers_url": "https://api.github.com/users/goodwillcoding/followers", "following_url": "https://api.github.com/users/goodwillcoding/following{/other_user}", "gists_url": "https://api.github.com/users/goodwillcoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodwillcoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodwillcoding/subscriptions", "organizations_url": "https://api.github.com/users/goodwillcoding/orgs", "repos_url": "https://api.github.com/users/goodwillcoding/repos", "events_url": "https://api.github.com/users/goodwillcoding/events{/privacy}", "received_events_url": "https://api.github.com/users/goodwillcoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-12T06:41:54Z", "updated_at": "2019-07-02T17:48:43Z", "closed_at": "2019-07-02T17:48:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Esteemed maintainer,\n\nI am not sure how one would validate an unamed list:of maps\n- id: 1\n- id: 2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/8", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/8/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/8/events", "html_url": "https://github.com/23andMe/Yamale/issues/8", "id": 43979944, "node_id": "MDU6SXNzdWU0Mzk3OTk0NA==", "number": 8, "title": "feature suggestions", "user": {"login": "q10", "id": 255046, "node_id": "MDQ6VXNlcjI1NTA0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/255046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/q10", "html_url": "https://github.com/q10", "followers_url": "https://api.github.com/users/q10/followers", "following_url": "https://api.github.com/users/q10/following{/other_user}", "gists_url": "https://api.github.com/users/q10/gists{/gist_id}", "starred_url": "https://api.github.com/users/q10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/q10/subscriptions", "organizations_url": "https://api.github.com/users/q10/orgs", "repos_url": "https://api.github.com/users/q10/repos", "events_url": "https://api.github.com/users/q10/events{/privacy}", "received_events_url": "https://api.github.com/users/q10/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-25T23:26:17Z", "updated_at": "2019-02-19T02:32:00Z", "closed_at": "2019-02-19T02:31:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello:\n\nIf possible, please add the following features to yamale:\n\n1) Unions.  Usage should look like this:\n\nkey: union(int(), include('my_type'), string(), ... )\n\n2) min/max length specifications in list()\n\n3) An exclude=True option in map() so that keys that are not in the required or optional keyset of the schema will be rejected\n\n4) Schema Extensions/Merges - this is different from includes in that it does not add an included schema as a _subschema_, but _extends_ a current schema.  For example:\n\nFoo:\n   a: int()\n   b: str()\n   d: list(str())\nBar(Foo):\n   b: map()\n   c: num()\n\nBar's full schema when Foo is resolved will be (b is overriden in Bar)\n\nBar(Foo):\n   a: int()\n   d: list(str())\n   b: map()\n   c: num()\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/6", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/6/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/6/events", "html_url": "https://github.com/23andMe/Yamale/issues/6", "id": 32174280, "node_id": "MDU6SXNzdWUzMjE3NDI4MA==", "number": 6, "title": "Add interface to support shared type definitions.", "user": {"login": "cblakkan", "id": 554748, "node_id": "MDQ6VXNlcjU1NDc0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/554748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblakkan", "html_url": "https://github.com/cblakkan", "followers_url": "https://api.github.com/users/cblakkan/followers", "following_url": "https://api.github.com/users/cblakkan/following{/other_user}", "gists_url": "https://api.github.com/users/cblakkan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblakkan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblakkan/subscriptions", "organizations_url": "https://api.github.com/users/cblakkan/orgs", "repos_url": "https://api.github.com/users/cblakkan/repos", "events_url": "https://api.github.com/users/cblakkan/events{/privacy}", "received_events_url": "https://api.github.com/users/cblakkan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-04-24T18:38:13Z", "updated_at": "2014-05-01T02:32:33Z", "closed_at": "2014-05-01T02:32:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Redefining a shared type in many different schemas could be improved by allowing a shared type definition yaml file. It would be nice to have an interface for specifying a shared type definition file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/5", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/5/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/5/events", "html_url": "https://github.com/23andMe/Yamale/issues/5", "id": 32173879, "node_id": "MDU6SXNzdWUzMjE3Mzg3OQ==", "number": 5, "title": "Allow values of a map() to be validated.", "user": {"login": "cblakkan", "id": 554748, "node_id": "MDQ6VXNlcjU1NDc0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/554748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cblakkan", "html_url": "https://github.com/cblakkan", "followers_url": "https://api.github.com/users/cblakkan/followers", "following_url": "https://api.github.com/users/cblakkan/following{/other_user}", "gists_url": "https://api.github.com/users/cblakkan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cblakkan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cblakkan/subscriptions", "organizations_url": "https://api.github.com/users/cblakkan/orgs", "repos_url": "https://api.github.com/users/cblakkan/repos", "events_url": "https://api.github.com/users/cblakkan/events{/privacy}", "received_events_url": "https://api.github.com/users/cblakkan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-04-24T18:34:10Z", "updated_at": "2014-05-01T02:21:36Z", "closed_at": "2014-05-01T02:21:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Example: \ncountries: map(str())\n\nwould enforce every value within the countries map is a string.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/2", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/2/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/2/events", "html_url": "https://github.com/23andMe/Yamale/issues/2", "id": 27234322, "node_id": "MDU6SXNzdWUyNzIzNDMyMg==", "number": 2, "title": "Remove #NeverGrowUp before open sourcing", "user": {"login": "aostiles", "id": 942957, "node_id": "MDQ6VXNlcjk0Mjk1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/942957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aostiles", "html_url": "https://github.com/aostiles", "followers_url": "https://api.github.com/users/aostiles/followers", "following_url": "https://api.github.com/users/aostiles/following{/other_user}", "gists_url": "https://api.github.com/users/aostiles/gists{/gist_id}", "starred_url": "https://api.github.com/users/aostiles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aostiles/subscriptions", "organizations_url": "https://api.github.com/users/aostiles/orgs", "repos_url": "https://api.github.com/users/aostiles/repos", "events_url": "https://api.github.com/users/aostiles/events{/privacy}", "received_events_url": "https://api.github.com/users/aostiles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186418, "node_id": "MDU6TGFiZWw3NzE4NjQxOA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-09T23:23:08Z", "updated_at": "2014-02-10T03:27:50Z", "closed_at": "2014-02-10T03:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The phrase \"#NeverGrowUp\" should be removed from the following lines before open-sourcing the project.\n\nschemata/schema/data.py:7\nschemata/schema/schema.py:9\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/23andMe/Yamale/issues/1", "repository_url": "https://api.github.com/repos/23andMe/Yamale", "labels_url": "https://api.github.com/repos/23andMe/Yamale/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/23andMe/Yamale/issues/1/comments", "events_url": "https://api.github.com/repos/23andMe/Yamale/issues/1/events", "html_url": "https://github.com/23andMe/Yamale/issues/1", "id": 26990229, "node_id": "MDU6SXNzdWUyNjk5MDIyOQ==", "number": 1, "title": "Open source this library", "user": {"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77186420, "node_id": "MDU6TGFiZWw3NzE4NjQyMA==", "url": "https://api.github.com/repos/23andMe/Yamale/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-05T19:34:36Z", "updated_at": "2014-02-11T19:48:23Z", "closed_at": "2014-02-11T19:48:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Freedom!\n", "performed_via_github_app": null, "score": 1.0}]}