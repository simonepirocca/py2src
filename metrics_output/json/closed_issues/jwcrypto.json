{"total_count": 79, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/latchset/jwcrypto/issues/186", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/186/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/186/events", "html_url": "https://github.com/latchset/jwcrypto/issues/186", "id": 675800030, "node_id": "MDU6SXNzdWU2NzU4MDAwMzA=", "number": 186, "title": "New Release?", "user": {"login": "daBrado", "id": 383026, "node_id": "MDQ6VXNlcjM4MzAyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/383026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daBrado", "html_url": "https://github.com/daBrado", "followers_url": "https://api.github.com/users/daBrado/followers", "following_url": "https://api.github.com/users/daBrado/following{/other_user}", "gists_url": "https://api.github.com/users/daBrado/gists{/gist_id}", "starred_url": "https://api.github.com/users/daBrado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daBrado/subscriptions", "organizations_url": "https://api.github.com/users/daBrado/orgs", "repos_url": "https://api.github.com/users/daBrado/repos", "events_url": "https://api.github.com/users/daBrado/events{/privacy}", "received_events_url": "https://api.github.com/users/daBrado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-10T00:14:29Z", "updated_at": "2020-08-21T15:42:03Z", "closed_at": "2020-08-17T20:02:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs a new release coming soon?  I ran into the issue fixed by 9e29ac7b1be410e683b85fe36e2ab6271d03d100, and so currently need to install from the repo.\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/185", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/185/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/185/events", "html_url": "https://github.com/latchset/jwcrypto/issues/185", "id": 668115544, "node_id": "MDU6SXNzdWU2NjgxMTU1NDQ=", "number": 185, "title": "Unclear how to use JWKSet", "user": {"login": "gward", "id": 51437, "node_id": "MDQ6VXNlcjUxNDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/51437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gward", "html_url": "https://github.com/gward", "followers_url": "https://api.github.com/users/gward/followers", "following_url": "https://api.github.com/users/gward/following{/other_user}", "gists_url": "https://api.github.com/users/gward/gists{/gist_id}", "starred_url": "https://api.github.com/users/gward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gward/subscriptions", "organizations_url": "https://api.github.com/users/gward/orgs", "repos_url": "https://api.github.com/users/gward/repos", "events_url": "https://api.github.com/users/gward/events{/privacy}", "received_events_url": "https://api.github.com/users/gward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-29T20:03:47Z", "updated_at": "2020-08-17T20:03:33Z", "closed_at": "2020-08-17T20:03:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem: I'm writing an API that signs and returns JWTs. So I have to maintain private and public keys. And I want to do things right, by rotating keys periodically. So I need to add an API endpoint where my clients can download my public keys in order to verify the JWTs that they have received from my API.\r\n\r\nSo I thought, I know, I'll do like the big commercial providers do and make that endpoint return a JWK set. I nearly coded it manually and then I realized everything I need is in jwcrypto already. Awesome!\r\n\r\nExcept... I can't figure out how to use jwcrypto.jwk.JWKSet. I've read the docs (https://jwcrypto.readthedocs.io/en/stable/jwk.html#jwcrypto.jwk.JWKSet), and the docstrings, and the source code. It's completely opaque.\r\n\r\nHere's what I've got so far:\r\n```\r\n    # build a dict mapping key to JWK\r\n    key_map: Dict[str, jwk.JWK] = {}\r\n    for key_id in key_ids:\r\n        with open(os.path.join(key_dir, key_id, \"public.pem\"), \"rb\") as keyfile:\r\n            key = jwk.JWK.from_pem(keyfile.read())\r\n            key_map[key_id] = key\r\n\r\n    # turn that into a JWKSet for the API response\r\n    key_set = jwk.JWKSet(key_map)\r\n    output = key_set.export(private_keys=False)\r\n    return flask.make_response(output, content_type=\"application/json\")\r\n```\r\nThat fails with\r\n```\r\n[2020-07-29 16:00:38,538 E 8745 fn.flasknoir.errorhandlers] GET /oidc/keys?: internal error handling request\r\nTraceback (most recent call last):\r\n  File \"/home/gward/src/fns-auth/venv/lib/python3.7/site-packages/flask/app.py\", line 1950, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/gward/src/fns-auth/venv/lib/python3.7/site-packages/flask/app.py\", line 1936, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/gward/src/fns-auth/fn/auth/api.py\", line 159, in oidc_keys\r\n    output = key_set.export(private_keys=False)\r\n  File \"/home/gward/src/fns-auth/venv/lib/python3.7/site-packages/jwcrypto/jwk.py\", line 981, in export\r\n    return json_encode(exp_dict)\r\n  File \"/home/gward/src/fns-auth/venv/lib/python3.7/site-packages/jwcrypto/common.py\", line 39, in json_encode\r\n    return json.dumps(string, separators=(',', ':'), sort_keys=True)\r\n  File \"/usr/local/python-3.7/lib/python3.7/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/local/python-3.7/lib/python3.7/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/local/python-3.7/lib/python3.7/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/usr/local/python-3.7/lib/python3.7/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type JWK is not JSON serializable\r\n```\r\n\r\nI'm happy to submit doc patches, but I need a bit of help. How exactly am I supposed to create a JWKSet that can then be serialized to JSON?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/182", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/182/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/182/events", "html_url": "https://github.com/latchset/jwcrypto/issues/182", "id": 621586431, "node_id": "MDU6SXNzdWU2MjE1ODY0MzE=", "number": 182, "title": "Loading ED25519 key from file throws KeyError", "user": {"login": "alexfrostdesu", "id": 42890657, "node_id": "MDQ6VXNlcjQyODkwNjU3", "avatar_url": "https://avatars0.githubusercontent.com/u/42890657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexfrostdesu", "html_url": "https://github.com/alexfrostdesu", "followers_url": "https://api.github.com/users/alexfrostdesu/followers", "following_url": "https://api.github.com/users/alexfrostdesu/following{/other_user}", "gists_url": "https://api.github.com/users/alexfrostdesu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexfrostdesu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexfrostdesu/subscriptions", "organizations_url": "https://api.github.com/users/alexfrostdesu/orgs", "repos_url": "https://api.github.com/users/alexfrostdesu/repos", "events_url": "https://api.github.com/users/alexfrostdesu/events{/privacy}", "received_events_url": "https://api.github.com/users/alexfrostdesu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T08:57:21Z", "updated_at": "2020-05-20T17:39:13Z", "closed_at": "2020-05-20T17:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I want to use EdDSA for my JWT and getting an error after trying to load key from file.\r\n\r\nHere is the error:\r\n```\r\nFile \"/Users/matveyloshakov/project/apiuser/views.py\", line 300, in post\r\n    key = jwk.JWK.from_pem(SECRET_KEY)\r\n  File \"/Users/matveyloshakov/project/backend.env/lib/python3.6/site-packages/jwcrypto/jwk.py\", line 904, in from_pem\r\n    obj.import_from_pem(data, password)\r\n  File \"/Users/matveyloshakov/project/backend.env/lib/python3.6/site-packages/jwcrypto/jwk.py\", line 851, in import_from_pem\r\n    self.import_from_pyca(key)\r\n  File \"/Users/matveyloshakov/project/backend.env/lib/python3.6/site-packages/jwcrypto/jwk.py\", line 818, in import_from_pyca\r\n    self._import_pyca_pri_okp(key)\r\n  File \"/Users/matveyloshakov/project/backend.env/lib/python3.6/site-packages/jwcrypto/jwk.py\", line 456, in _import_pyca_pri_okp\r\n    crv=params['crv'],\r\nKeyError: 'crv'\r\n```\r\n\r\nHere is how I generate the SECRET_KEY:\r\n```\r\nopenssl genpkey -algorithm ED25519 -out secret_key.pem\r\n```\r\n\r\nHere is how I load the key:\r\n```\r\nSECRET_KEY = open(os.path.join(script_dir, 'secret_key.pem'), 'rb').read()\r\nkey = jwk.JWK.from_pem(SECRET_KEY)\r\n```\r\n\r\nWhat I am doing wrong or what is the reason this does not work? I can perfectly generate and use ECDSA/RSA keys using the same method, but not EdDSA.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/179", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/179/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/179/events", "html_url": "https://github.com/latchset/jwcrypto/issues/179", "id": 604659477, "node_id": "MDU6SXNzdWU2MDQ2NTk0Nzc=", "number": 179, "title": "make leeway and validitity configurable", "user": {"login": "jonas-weismueller-by", "id": 57355417, "node_id": "MDQ6VXNlcjU3MzU1NDE3", "avatar_url": "https://avatars1.githubusercontent.com/u/57355417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-weismueller-by", "html_url": "https://github.com/jonas-weismueller-by", "followers_url": "https://api.github.com/users/jonas-weismueller-by/followers", "following_url": "https://api.github.com/users/jonas-weismueller-by/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-weismueller-by/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-weismueller-by/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-weismueller-by/subscriptions", "organizations_url": "https://api.github.com/users/jonas-weismueller-by/orgs", "repos_url": "https://api.github.com/users/jonas-weismueller-by/repos", "events_url": "https://api.github.com/users/jonas-weismueller-by/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-weismueller-by/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-22T10:53:28Z", "updated_at": "2020-04-22T15:53:10Z", "closed_at": "2020-04-22T15:46:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nwould it be possible to make leeway and validity configurable in the constructor https://github.com/latchset/jwcrypto/blob/master/jwcrypto/jwt.py#L154 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/176", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/176/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/176/events", "html_url": "https://github.com/latchset/jwcrypto/issues/176", "id": 602649509, "node_id": "MDU6SXNzdWU2MDI2NDk1MDk=", "number": 176, "title": "Error importing OKP private key", "user": {"login": "davedoesdev", "id": 2329683, "node_id": "MDQ6VXNlcjIzMjk2ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2329683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davedoesdev", "html_url": "https://github.com/davedoesdev", "followers_url": "https://api.github.com/users/davedoesdev/followers", "following_url": "https://api.github.com/users/davedoesdev/following{/other_user}", "gists_url": "https://api.github.com/users/davedoesdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/davedoesdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davedoesdev/subscriptions", "organizations_url": "https://api.github.com/users/davedoesdev/orgs", "repos_url": "https://api.github.com/users/davedoesdev/repos", "events_url": "https://api.github.com/users/davedoesdev/events{/privacy}", "received_events_url": "https://api.github.com/users/davedoesdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-19T07:49:18Z", "updated_at": "2020-04-30T13:25:12Z", "closed_at": "2020-04-22T12:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "You can see the problem in this stack trace:\r\n\r\n```\r\n  File \"/home/david/python-jwt/test/fixtures.py\", line 136, in <module>\r\n    okp_ed25519_priv_key = JWK.from_pem(to_bytes_2and3(okp_ed25519_priv_pem))\r\n  File \"/home/david/.local/lib/python2.7/site-packages/jwcrypto/jwk.py\", line 904, in from_pem\r\n    obj.import_from_pem(data, password)\r\n  File \"/home/david/.local/lib/python2.7/site-packages/jwcrypto/jwk.py\", line 851, in import_from_pem\r\n    self.import_from_pyca(key)\r\n  File \"/home/david/.local/lib/python2.7/site-packages/jwcrypto/jwk.py\", line 818, in import_from_pyca\r\n    self._import_pyca_pri_okp(key)\r\n  File \"/home/david/.local/lib/python2.7/site-packages/jwcrypto/jwk.py\", line 456, in _import_pyca_pri_okp\r\n    crv=params['crv'],\r\nKeyError: 'crv'\r\n```\r\n`_import_pyca_pri_okp` expects `params` to contain `crv`: https://github.com/latchset/jwcrypto/blob/master/jwcrypto/jwk.py#L461\r\n\r\nHowever, when importing, no `params` are passed down: https://github.com/latchset/jwcrypto/blob/master/jwcrypto/jwk.py#L823", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/174", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/174/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/174/events", "html_url": "https://github.com/latchset/jwcrypto/issues/174", "id": 590880248, "node_id": "MDU6SXNzdWU1OTA4ODAyNDg=", "number": 174, "title": "Commercial Usage", "user": {"login": "hi2rashid", "id": 10250923, "node_id": "MDQ6VXNlcjEwMjUwOTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/10250923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi2rashid", "html_url": "https://github.com/hi2rashid", "followers_url": "https://api.github.com/users/hi2rashid/followers", "following_url": "https://api.github.com/users/hi2rashid/following{/other_user}", "gists_url": "https://api.github.com/users/hi2rashid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi2rashid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi2rashid/subscriptions", "organizations_url": "https://api.github.com/users/hi2rashid/orgs", "repos_url": "https://api.github.com/users/hi2rashid/repos", "events_url": "https://api.github.com/users/hi2rashid/events{/privacy}", "received_events_url": "https://api.github.com/users/hi2rashid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T07:52:56Z", "updated_at": "2020-03-31T15:07:02Z", "closed_at": "2020-03-31T13:37:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using this module  in our internal application with Django.\r\n\r\nCan you please confirm if its okay to be used commercially.\r\n\r\nThank you in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/172", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/172/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/172/events", "html_url": "https://github.com/latchset/jwcrypto/issues/172", "id": 575313839, "node_id": "MDU6SXNzdWU1NzUzMTM4Mzk=", "number": 172, "title": "Bad JWT signature", "user": {"login": "slavkoja", "id": 5506544, "node_id": "MDQ6VXNlcjU1MDY1NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5506544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slavkoja", "html_url": "https://github.com/slavkoja", "followers_url": "https://api.github.com/users/slavkoja/followers", "following_url": "https://api.github.com/users/slavkoja/following{/other_user}", "gists_url": "https://api.github.com/users/slavkoja/gists{/gist_id}", "starred_url": "https://api.github.com/users/slavkoja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slavkoja/subscriptions", "organizations_url": "https://api.github.com/users/slavkoja/orgs", "repos_url": "https://api.github.com/users/slavkoja/repos", "events_url": "https://api.github.com/users/slavkoja/events{/privacy}", "received_events_url": "https://api.github.com/users/slavkoja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-04T11:03:39Z", "updated_at": "2020-03-04T18:57:09Z", "closed_at": "2020-03-04T18:48:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure, if i did all right, but when i follow provided examples to generate signed JWT (0.6.0), the verification fails with `pyjwt` (1.7.1) and on https://jwt.io/ too.\r\n\r\nHere is what i did:\r\n```python\r\nimport jwt as jjwt\r\nfrom jwcrypto import jwt, jwk, jws\r\n\r\nk = \"123456\"\r\n\r\nkey = jwk.JWK(kty=\"oct\",k=k)\r\nalgo = \"HS256\"\r\npayload = {\"info\": \"I'm a signed token\"}\r\n\r\nj = jjwt.encode(payload, k, algorithm=algo).decode()\r\n\r\nt = jwt.JWT(header={\"alg\": algo, \"typ\":\"JWT\"},\r\n            claims=payload)\r\nt.make_signed_token(key)\r\n\r\nprint(\"JWTs:\")\r\nprint(\"   jwt:     \", j)\r\nprint(\"   jwcrypto:\", t.serialize())\r\n\r\nprint(\"\\nDecode by jwt\")\r\ntry:\r\n    jjwt.decode(j, k, algorithms=algo)\r\n    print(\"   ok  jwt -> jwt\")\r\nexcept jjwt.exceptions.InvalidSignatureError:\r\n    print(\"   err jwt -> jwt\")\r\n\r\ntry:\r\n    jjwt.decode(t.serialize(), k, algorithms=algo)\r\n    print(\"   ok  jwt -> jwt\")\r\nexcept jjwt.exceptions.InvalidSignatureError:\r\n    print(\"   err jwcrypto -> jwt\")\r\n\r\nprint(\"\\nDecode by jwcrypto\")\r\ntry:\r\n    jwt.JWT(key=key, jwt=j)\r\n    print(\"   err jwt -> jwcrypto\")\r\nexcept jws.InvalidJWSSignature:\r\n    print(\"   err jwt -> jwcrypto\")\r\n\r\ntry:\r\n    jwt.JWT(key=key, jwt=t.serialize())\r\n    print(\"   ok  jwcrypto -> jwcrypto\")\r\nexcept jws.InvalidJWSSignature:\r\n    print(\"   err jwcrypto -> jwcrypto\")\r\n```\r\nThe output is:\r\n```\r\nJWTs:\r\n   jwt:      eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbmZvIjoiSSdtIGEgc2lnbmVkIHRva2VuIn0.6GKQC7tu4wzOdArW5KttM-vSNhSj69jYB6blldvsaIc\r\n   jwcrypto: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbmZvIjoiSSdtIGEgc2lnbmVkIHRva2VuIn0.J0LizeVgrQwBYCCLIot3lXdkYxxFGl2VqOP6fM0t60o\r\n\r\nDecode by jwt\r\n   ok  jwt -> jwt\r\n   err jwcrypto -> jwt\r\n\r\nDecode by jwcrypto\r\n   err jwt -> jwcrypto\r\n   ok  jwcrypto -> jwcrypto\r\n```\r\nFor now, i am not sure, which library does bad signature, but token from `pyjwt` can be verified on https://jwt.io/, the one from `jwcrypto` cannot.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/171", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/171/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/171/events", "html_url": "https://github.com/latchset/jwcrypto/issues/171", "id": 567794875, "node_id": "MDU6SXNzdWU1Njc3OTQ4NzU=", "number": 171, "title": "Please add a changelog", "user": {"login": "twosigmajab", "id": 40300730, "node_id": "MDQ6VXNlcjQwMzAwNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/40300730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twosigmajab", "html_url": "https://github.com/twosigmajab", "followers_url": "https://api.github.com/users/twosigmajab/followers", "following_url": "https://api.github.com/users/twosigmajab/following{/other_user}", "gists_url": "https://api.github.com/users/twosigmajab/gists{/gist_id}", "starred_url": "https://api.github.com/users/twosigmajab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twosigmajab/subscriptions", "organizations_url": "https://api.github.com/users/twosigmajab/orgs", "repos_url": "https://api.github.com/users/twosigmajab/repos", "events_url": "https://api.github.com/users/twosigmajab/events{/privacy}", "received_events_url": "https://api.github.com/users/twosigmajab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T19:32:33Z", "updated_at": "2020-04-22T17:52:17Z", "closed_at": "2020-04-22T17:52:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/167", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/167/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/167/events", "html_url": "https://github.com/latchset/jwcrypto/issues/167", "id": 558580056, "node_id": "MDU6SXNzdWU1NTg1ODAwNTY=", "number": 167, "title": "Importing ABC directly from collections was removed in Python 3.9", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-01T18:43:35Z", "updated_at": "2020-02-03T20:39:43Z", "closed_at": "2020-02-03T20:39:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/latchset/jwcrypto/blob/58c1099e531546feb473ad6bd34f9cbba7040d0d/jwcrypto/common.py#L6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/166", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/166/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/166/events", "html_url": "https://github.com/latchset/jwcrypto/issues/166", "id": 512394552, "node_id": "MDU6SXNzdWU1MTIzOTQ1NTI=", "number": 166, "title": "JWE accept dictionary as payload", "user": {"login": "aaeronn", "id": 6998159, "node_id": "MDQ6VXNlcjY5OTgxNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6998159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaeronn", "html_url": "https://github.com/aaeronn", "followers_url": "https://api.github.com/users/aaeronn/followers", "following_url": "https://api.github.com/users/aaeronn/following{/other_user}", "gists_url": "https://api.github.com/users/aaeronn/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaeronn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaeronn/subscriptions", "organizations_url": "https://api.github.com/users/aaeronn/orgs", "repos_url": "https://api.github.com/users/aaeronn/repos", "events_url": "https://api.github.com/users/aaeronn/events{/privacy}", "received_events_url": "https://api.github.com/users/aaeronn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T09:04:39Z", "updated_at": "2019-10-25T17:31:44Z", "closed_at": "2019-10-25T17:31:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently only plaintext is used as payload but what if I want to encrypt dictionary data as a payload", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/165", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/165/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/165/events", "html_url": "https://github.com/latchset/jwcrypto/issues/165", "id": 505740059, "node_id": "MDU6SXNzdWU1MDU3NDAwNTk=", "number": 165, "title": "New release", "user": {"login": "tpazderka", "id": 7734753, "node_id": "MDQ6VXNlcjc3MzQ3NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7734753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpazderka", "html_url": "https://github.com/tpazderka", "followers_url": "https://api.github.com/users/tpazderka/followers", "following_url": "https://api.github.com/users/tpazderka/following{/other_user}", "gists_url": "https://api.github.com/users/tpazderka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpazderka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpazderka/subscriptions", "organizations_url": "https://api.github.com/users/tpazderka/orgs", "repos_url": "https://api.github.com/users/tpazderka/repos", "events_url": "https://api.github.com/users/tpazderka/events{/privacy}", "received_events_url": "https://api.github.com/users/tpazderka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-11T09:24:15Z", "updated_at": "2020-02-19T19:00:16Z", "closed_at": "2020-02-19T19:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "There has been quite some time from the last release. Would you please consider making a 0.7 version available on PyPi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/163", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/163/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/163/events", "html_url": "https://github.com/latchset/jwcrypto/issues/163", "id": 499411361, "node_id": "MDU6SXNzdWU0OTk0MTEzNjE=", "number": 163, "title": "Support for plaintext JWT", "user": {"login": "tpazderka", "id": 7734753, "node_id": "MDQ6VXNlcjc3MzQ3NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7734753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpazderka", "html_url": "https://github.com/tpazderka", "followers_url": "https://api.github.com/users/tpazderka/followers", "following_url": "https://api.github.com/users/tpazderka/following{/other_user}", "gists_url": "https://api.github.com/users/tpazderka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpazderka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpazderka/subscriptions", "organizations_url": "https://api.github.com/users/tpazderka/orgs", "repos_url": "https://api.github.com/users/tpazderka/repos", "events_url": "https://api.github.com/users/tpazderka/events{/privacy}", "received_events_url": "https://api.github.com/users/tpazderka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-09-27T12:15:49Z", "updated_at": "2019-10-01T12:23:22Z", "closed_at": "2019-10-01T12:23:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a plan to support unpacking of [plaintext JWTs](https://openid.net/specs/draft-jones-json-web-token-07.html#Plaintext)?\r\n\r\nCurrently, I have to handle them manually, since it is not possible to access token data before calling verify, and `verify` fails when no signature is present, although `alg` is specified to be `none`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/161", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/161/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/161/events", "html_url": "https://github.com/latchset/jwcrypto/issues/161", "id": 488305409, "node_id": "MDU6SXNzdWU0ODgzMDU0MDk=", "number": 161, "title": "Annoying output in jwcrypto/jwk.py", "user": {"login": "pieterb", "id": 158029, "node_id": "MDQ6VXNlcjE1ODAyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/158029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pieterb", "html_url": "https://github.com/pieterb", "followers_url": "https://api.github.com/users/pieterb/followers", "following_url": "https://api.github.com/users/pieterb/following{/other_user}", "gists_url": "https://api.github.com/users/pieterb/gists{/gist_id}", "starred_url": "https://api.github.com/users/pieterb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pieterb/subscriptions", "organizations_url": "https://api.github.com/users/pieterb/orgs", "repos_url": "https://api.github.com/users/pieterb/repos", "events_url": "https://api.github.com/users/pieterb/events{/privacy}", "received_events_url": "https://api.github.com/users/pieterb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-02T19:58:18Z", "updated_at": "2019-09-03T14:49:12Z", "closed_at": "2019-09-03T14:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "`from jwcrypto import jwk`\r\n\r\nprints (unnecessary?) output to stdout. I wrote [this comment](https://github.com/latchset/jwcrypto/commit/559747af9f61a1645b3bf56d5028fe5e0d362eaa#r34923401) in commit 559747af9f61a1645b3bf56d5028fe5e0d362eaa.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/158", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/158/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/158/events", "html_url": "https://github.com/latchset/jwcrypto/issues/158", "id": 452903384, "node_id": "MDU6SXNzdWU0NTI5MDMzODQ=", "number": 158, "title": "Elliptic curve coordinates with wrong length", "user": {"login": "Veschgini", "id": 38187305, "node_id": "MDQ6VXNlcjM4MTg3MzA1", "avatar_url": "https://avatars3.githubusercontent.com/u/38187305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veschgini", "html_url": "https://github.com/Veschgini", "followers_url": "https://api.github.com/users/Veschgini/followers", "following_url": "https://api.github.com/users/Veschgini/following{/other_user}", "gists_url": "https://api.github.com/users/Veschgini/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veschgini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veschgini/subscriptions", "organizations_url": "https://api.github.com/users/Veschgini/orgs", "repos_url": "https://api.github.com/users/Veschgini/repos", "events_url": "https://api.github.com/users/Veschgini/events{/privacy}", "received_events_url": "https://api.github.com/users/Veschgini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183243999, "node_id": "MDU6TGFiZWwxODMyNDM5OTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-06T08:40:50Z", "updated_at": "2019-06-07T17:50:35Z", "closed_at": "2019-06-07T17:50:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using ECDH-ES for JWEs and sometimes I obtain tokens with wrong \"x\", \"y\" lengths.\r\n[rfc7518#section-6.2.1.2](https://tools.ietf.org/html/rfc7518#section-6.2.1.2) specifies that for \"x\" and \"y\",  The length of the octet string MUST be the full size of a coordinate for the curve specified in the \"crv\" parameter. In the current implementation of jwcrypto this is not the case. For testing, the following script usually generages few such examples:\r\n```python\r\nfrom jwcrypto import jwk, jwe\r\nimport json\r\n\r\ndkey_pem = b'''-----BEGIN EC PRIVATE KEY-----\r\nMHcCAQEEIMsTnf71dRcmxlePvTwtIFaGCHpmdAa4THG6Wbe0hBpGoAoGCCqGSM49\r\nAwEHoUQDQgAEhn0ez+6/EwDUEl46oZ//tvwLSLUShzCU/8suNrrrbBUqncX2sXCb\r\nxgqAGz5Ar9tct81m5Q9NIoDEf3qKgsYqVg==\r\n-----END EC PRIVATE KEY-----'''\r\n\r\nekey_pem = b'''-----BEGIN PUBLIC KEY-----\r\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEhn0ez+6/EwDUEl46oZ//tvwLSLUS\r\nhzCU/8suNrrrbBUqncX2sXCbxgqAGz5Ar9tct81m5Q9NIoDEf3qKgsYqVg==\r\n-----END PUBLIC KEY-----'''\r\n\r\n\r\ndkey = jwk.JWK.from_pem(dkey_pem)\r\nekey = jwk.JWK.from_pem(ekey_pem)\r\n\r\ndef enc(s):\r\n    global ekey\r\n    protected_header = {\r\n        \"alg\": \"ECDH-ES\",\r\n        \"enc\": \"A128GCM\",\r\n        \"typ\": \"JWE\",\r\n        \"kid\": ekey.thumbprint(),\r\n        \"client_id\": \"bplus_agent\"\r\n    }\r\n    jwetoken = jwe.JWE(s, recipient=ekey, protected=protected_header)\r\n    enc = jwetoken.serialize()\r\n    return enc\r\n\r\nn = 1000\r\nfail = 0\r\n\r\nfor i in range(n):\r\n    t = json.loads(enc('Hello!'))\r\n    x = t['header']['epk']['x']\r\n    y = t['header']['epk']['y']\r\n\r\n    if len(x) != 43 or len(y) != 43:\r\n        fail += 1\r\n\r\nprint(f'Test failed {fail} times.')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/157", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/157/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/157/events", "html_url": "https://github.com/latchset/jwcrypto/issues/157", "id": 451897401, "node_id": "MDU6SXNzdWU0NTE4OTc0MDE=", "number": 157, "title": "For EC encryption: Expected key type oct, got EC", "user": {"login": "CanD42", "id": 2034786, "node_id": "MDQ6VXNlcjIwMzQ3ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2034786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CanD42", "html_url": "https://github.com/CanD42", "followers_url": "https://api.github.com/users/CanD42/followers", "following_url": "https://api.github.com/users/CanD42/following{/other_user}", "gists_url": "https://api.github.com/users/CanD42/gists{/gist_id}", "starred_url": "https://api.github.com/users/CanD42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CanD42/subscriptions", "organizations_url": "https://api.github.com/users/CanD42/orgs", "repos_url": "https://api.github.com/users/CanD42/repos", "events_url": "https://api.github.com/users/CanD42/events{/privacy}", "received_events_url": "https://api.github.com/users/CanD42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-04T09:42:40Z", "updated_at": "2019-06-06T17:25:37Z", "closed_at": "2019-06-06T17:25:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use a signed and EC encrypted JWT generated by a java process which I can verify without problems with jwcrypto. However, when I try to generate such a token I run into the following problem:\r\n\r\n```\r\n    def _get_key(self, key, op):\r\n        if not isinstance(key, JWK):\r\n            raise ValueError('key is not a JWK object')\r\n        if key.key_type != 'oct':\r\n>           raise InvalidJWEKeyType('oct', key.key_type)\r\nE           jwcrypto.common.InvalidJWEKeyType: Expected key type oct, got EC\r\n```\r\n\r\nIs this a bug or am I doing something wrong with following code:\r\n\r\n```\r\nprivate_idp_key_dict = {\"kty\": \"EC\", \"crv\": \"P-256\", \"x\": \"...\", \"y\": \"...\", \"d\": \"...\", \"kid\": \"idp\"}\r\npublic_sp_key_dict = {\"kty\": \"EC\", \"crv\": \"P-256\", \"x\": \"...\", \"y\": \"...\", \"use\": \"enc\", \"kid\": \"sp\"}\r\nprivate_idp_key = jwk.JWK(**private_idp_key_dict)\r\npublic_sp_key = jwk.JWK(**public_sp_key_dict)\r\n\r\nclaims = {\r\n\t\"sub\": uid,\r\n}\r\nsigned_token = jwt.JWT(header = {'alg': 'ES256'}, claims = claims)\r\nsigned_token.make_signed_token(private_idp_key)\r\n\r\nencrypted_token = jwt.JWT(header = {'alg': 'A256KW', 'enc': 'A128CBC-HS256'}, claims = signed_token.serialize())\r\nencrypted_token.make_encrypted_token(public_sp_key)\r\ntoken = encrypted_token.serialize()\r\n```\r\n\r\nThanks,\r\nDaniel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/146", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/146/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/146/events", "html_url": "https://github.com/latchset/jwcrypto/issues/146", "id": 418522107, "node_id": "MDU6SXNzdWU0MTg1MjIxMDc=", "number": 146, "title": "Populating x5u/x5c fields", "user": {"login": "lumjjb", "id": 3060102, "node_id": "MDQ6VXNlcjMwNjAxMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3060102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumjjb", "html_url": "https://github.com/lumjjb", "followers_url": "https://api.github.com/users/lumjjb/followers", "following_url": "https://api.github.com/users/lumjjb/following{/other_user}", "gists_url": "https://api.github.com/users/lumjjb/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumjjb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumjjb/subscriptions", "organizations_url": "https://api.github.com/users/lumjjb/orgs", "repos_url": "https://api.github.com/users/lumjjb/repos", "events_url": "https://api.github.com/users/lumjjb/events{/privacy}", "received_events_url": "https://api.github.com/users/lumjjb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183244001, "node_id": "MDU6TGFiZWwxODMyNDQwMDE=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-07T21:30:27Z", "updated_at": "2019-03-25T13:15:30Z", "closed_at": "2019-03-25T13:15:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there currently a way to populate `x5u/x5c` fields? \r\n\r\nWould there be interest if we could provide a PR for the feature if not currently possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/143", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/143/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/143/events", "html_url": "https://github.com/latchset/jwcrypto/issues/143", "id": 389324980, "node_id": "MDU6SXNzdWUzODkzMjQ5ODA=", "number": 143, "title": "Cannot validate JWT with no kid in its header", "user": {"login": "ivansenin", "id": 2856213, "node_id": "MDQ6VXNlcjI4NTYyMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2856213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivansenin", "html_url": "https://github.com/ivansenin", "followers_url": "https://api.github.com/users/ivansenin/followers", "following_url": "https://api.github.com/users/ivansenin/following{/other_user}", "gists_url": "https://api.github.com/users/ivansenin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivansenin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivansenin/subscriptions", "organizations_url": "https://api.github.com/users/ivansenin/orgs", "repos_url": "https://api.github.com/users/ivansenin/repos", "events_url": "https://api.github.com/users/ivansenin/events{/privacy}", "received_events_url": "https://api.github.com/users/ivansenin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-10T14:26:04Z", "updated_at": "2018-12-12T16:11:33Z", "closed_at": "2018-12-12T16:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks! First of all, I appreciate your library a lot. \r\n\r\nRecently, I ran into the following issue. A 3rd party system provides us a JWT which we want to verify. We have no means of changing implementation on the provider side. \r\nThey send us a token which does not contain a _kid_ in its header. According to my understanding of RFC 7515, 7517 that field is optional. \r\n\r\nHowever, I got an exception on `jwt = JWT(jwt=token, key=jwks)`\r\n\r\n```\r\n  File \"<...>/python3.6/site-packages/jwcrypto/jwt.py\", line 474, in deserialize\r\n    raise JWTMissingKeyID('No key ID in JWT header')\r\n\r\njwcrypto.jwt.JWTMissingKeyID: No key ID in JWT header\r\n```\r\n\r\nAs I checked the code it's quite obvious that it does not work without \"kid\" in a header:\r\n`./eggs/jwcrypto-0.6.0-py2.7.egg/jwcrypto/jwt.py:`  **in** `def deserialize(self, jwt, key=None):`\r\n```python\r\n        if key is None:\r\n            self.token.deserialize(jwt, None)\r\n        elif isinstance(key, JWK):\r\n            self.token.deserialize(jwt, key)  # <-- Also why it's only deserialized here but not validated? \r\n        elif isinstance(key, JWKSet):\r\n            self.token.deserialize(jwt, None)\r\n            if 'kid' not in self.token.jose_header:\r\n                raise JWTMissingKeyID('No key ID in JWT header')\r\n\r\n            token_key = key.get_key(self.token.jose_header['kid'])\r\n            if not token_key:\r\n                raise JWTMissingKey('Key ID %s not in key set'\r\n                                    % self.token.jose_header['kid'])\r\n\r\n            if isinstance(self.token, JWE):\r\n                self.token.decrypt(token_key)\r\n            elif isinstance(self.token, JWS):\r\n                self.token.verify(token_key)\r\n            else:\r\n                raise RuntimeError(\"Unknown Token Type\")\r\n```\r\n\r\nHow we can deal with it? In case if there is no certain \"kid\" in a token's header could we perhaps iterate over all available `jwk.JWK` in a `jwk.JWKSet` until for one of them the signature matches. And if neither have worked out then throw an exception. I propose to add this kind of logic in the library. What do you think? \r\n\r\nCurrently, a workaround is possible. E.g.\r\n```python\r\nfor i, k in enumerate(jwks):\r\n    try:\r\n        jwt = JWT(jwt=token, key=k)\r\n    except Exception as e:\r\n        if (i == len(jwks) - 1):\r\n            raise\r\n        jwt = None\r\n\r\n```\r\nBut it's not very nice because\r\n1. from the code snippet above-above you can see that if key is just a JWK then no verification happens. I don't quite understand why.\r\n2.  it breaks a nice encapsulation we used to have here. In general our use case looks like the following.\r\n```python\r\n# our use case \r\nresponse = requests.get(url)\r\njwks = JWKSet.from_json(response.text)\r\njwt = JWT(jwt=token, key=jwks)\r\nclaims = json.loads(jwt.claims)\r\n...\r\n```\r\n\r\n```cpp\r\n/* It might be that I misunderstood smth, I'm new to the JWT stuff overall */\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/142", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/142/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/142/events", "html_url": "https://github.com/latchset/jwcrypto/issues/142", "id": 388073521, "node_id": "MDU6SXNzdWUzODgwNzM1MjE=", "number": 142, "title": "Help parsing nested jwt, jws+jwe", "user": {"login": "williame-uah", "id": 38042524, "node_id": "MDQ6VXNlcjM4MDQyNTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/38042524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williame-uah", "html_url": "https://github.com/williame-uah", "followers_url": "https://api.github.com/users/williame-uah/followers", "following_url": "https://api.github.com/users/williame-uah/following{/other_user}", "gists_url": "https://api.github.com/users/williame-uah/gists{/gist_id}", "starred_url": "https://api.github.com/users/williame-uah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williame-uah/subscriptions", "organizations_url": "https://api.github.com/users/williame-uah/orgs", "repos_url": "https://api.github.com/users/williame-uah/repos", "events_url": "https://api.github.com/users/williame-uah/events{/privacy}", "received_events_url": "https://api.github.com/users/williame-uah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-12-06T06:24:50Z", "updated_at": "2018-12-31T13:23:36Z", "closed_at": "2018-12-31T13:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, greatly appreciate you taking your time to write this module.\r\n\r\nI am working with a JWT generated from an SSO product called CAS.  I can't seem to decrypt the payload correctly and would very much appreciate your advice on using your library to do so.  The example of parsing and decrypting in java is given on their website: \r\n https://apereo.github.io/cas/development/installation/Configure-ServiceTicket-JWT.html#jwt-validation---aes\r\n\r\ncas.authn.token.crypto.signing.keySize=512\r\ncas.authn.token.crypto.encryption.keySize=256\r\ncas.authn.token.crypto.alg=AES\r\n\r\nI think it's trying to be parsed as json but was built with compact serialization that not being revered first.  I keep getting:\r\n\r\n  File \"/usr/local/Cellar/python/3.7.1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nimport base64\r\nfrom jwcrypto import jwk, jwe, jws, jwt\r\nfrom jwcrypto.common import json_encode, json_decode\r\ntoken = 'eyJhbGciOiJIUzUxMiJ9.ZXlKNm...........'\r\npayloadBytes = b'eyJ6aXA..........'\r\nsignKey = jwk.JWK(kty='oct', k=signkeyStr)\r\nencKey = jwk.JWK(kty='oct', k=enckeyStr)\r\n\r\nE = jwe.JWE()\r\nE.deserialize(payloadBytes)\r\nE.decrypt(encKey)\r\nraw_payload = E.payload\r\n\r\n\r\nAdvice?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/140", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/140/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/140/events", "html_url": "https://github.com/latchset/jwcrypto/issues/140", "id": 379816382, "node_id": "MDU6SXNzdWUzNzk4MTYzODI=", "number": 140, "title": "Using python-gnutls for pkcs11", "user": {"login": "stefanberger", "id": 1873348, "node_id": "MDQ6VXNlcjE4NzMzNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1873348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanberger", "html_url": "https://github.com/stefanberger", "followers_url": "https://api.github.com/users/stefanberger/followers", "following_url": "https://api.github.com/users/stefanberger/following{/other_user}", "gists_url": "https://api.github.com/users/stefanberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanberger/subscriptions", "organizations_url": "https://api.github.com/users/stefanberger/orgs", "repos_url": "https://api.github.com/users/stefanberger/repos", "events_url": "https://api.github.com/users/stefanberger/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-12T15:02:57Z", "updated_at": "2018-11-12T16:20:16Z", "closed_at": "2018-11-12T16:20:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to be able to use the TPM for signing or JWTs. For this I have wrapped a few private key related gnutls functions to be able to access a TPM key that can then be used for signing. Is python-gnutls an acceptable path for you?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/137", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/137/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/137/events", "html_url": "https://github.com/latchset/jwcrypto/issues/137", "id": 375671597, "node_id": "MDU6SXNzdWUzNzU2NzE1OTc=", "number": 137, "title": "Use python-cryptography AES Keywrap implementation", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}, {"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-30T20:09:22Z", "updated_at": "2018-10-31T19:43:22Z", "closed_at": "2018-10-31T19:43:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "They are available for a while so we should use them in jwcrypto now", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/136", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/136/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/136/events", "html_url": "https://github.com/latchset/jwcrypto/issues/136", "id": 374252606, "node_id": "MDU6SXNzdWUzNzQyNTI2MDY=", "number": 136, "title": "ECDH-ES+A128KW doesn't work when CEK size is not 128 bits", "user": {"login": "ParisMeuleman", "id": 762012, "node_id": "MDQ6VXNlcjc2MjAxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/762012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ParisMeuleman", "html_url": "https://github.com/ParisMeuleman", "followers_url": "https://api.github.com/users/ParisMeuleman/followers", "following_url": "https://api.github.com/users/ParisMeuleman/following{/other_user}", "gists_url": "https://api.github.com/users/ParisMeuleman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ParisMeuleman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ParisMeuleman/subscriptions", "organizations_url": "https://api.github.com/users/ParisMeuleman/orgs", "repos_url": "https://api.github.com/users/ParisMeuleman/repos", "events_url": "https://api.github.com/users/ParisMeuleman/events{/privacy}", "received_events_url": "https://api.github.com/users/ParisMeuleman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-26T07:02:38Z", "updated_at": "2018-10-31T19:59:39Z", "closed_at": "2018-10-31T19:59:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI have failures when I am trying to encrypt or decrypt a JWE with key wrapped ECDH-ES when the key wrapping key size is different from the content encryption key size, for instance with ECDH-ES+128KW and A128CBC-HS256 (CEK size 256):\r\n```python\r\n# encrypt using ECDH-ES+A128KW and A128CBC-HS256\r\nkey=jwk.JWK.generate(kty='EC', crv='P-256')\r\npayload = \"My Encrypted message\"\r\njwetoken = jwe.JWE(payload.encode('utf-8'),\r\n                       json_encode({\"alg\": \"ECDH-ES+A128KW\",\r\n                                    \"enc\": \"A128CBC-HS256\"}))\r\njwetoken.add_recipient(key)\r\nenc = jwetoken.serialize()\r\n```\r\n\r\nThis leads to the following error:\r\n```\r\nFile \"<stdin>\", line 1, in <module>\r\n  File \"[...]/jwcrypto/jwe.py\", line 239, in add_recipient\r\n    self._encrypt(alg, enc, jh)\r\n  File \"[...]/jwcrypto/jwe.py\", line 195, in _encrypt\r\n    iv, ciphertext, tag = enc.encrypt(self.cek, aad, data)\r\n  File \"[...]/jwcrypto/jwa.py\", line 882, in encrypt\r\n    cipher = Cipher(algorithms.AES(ekey), modes.CBC(iv),\r\n  File \"[...]/cryptography/hazmat/primitives/ciphers/algorithms.py\", line 35, in __init__\r\n    self.key = _verify_key_size(self, key)\r\n  File \"[...]/cryptography/hazmat/primitives/ciphers/algorithms.py\", line 21, in _verify_key_size\r\n    len(key) * 8, algorithm.name\r\nValueError: Invalid key size (0) for AES.\r\n```\r\nlikewise, when decrypting. \r\n\r\nIt looks like the key agreement algorithm overrides the content encryption key size with the key wrapping key size when calling the key wrapping/unwrapping.\r\n\r\nThere's no issue with the key wrapping or key agreement algorithms when not combined (ECDH-ES and A\\*KW are working perfectly fine with any of the A\\*CBC-HS\\* algorithms)\r\n\r\ncheers\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/135", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/135/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/135/events", "html_url": "https://github.com/latchset/jwcrypto/issues/135", "id": 366523881, "node_id": "MDU6SXNzdWUzNjY1MjM4ODE=", "number": 135, "title": "Wrong condition for checking claims?", "user": {"login": "papayuca", "id": 37576489, "node_id": "MDQ6VXNlcjM3NTc2NDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/37576489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papayuca", "html_url": "https://github.com/papayuca", "followers_url": "https://api.github.com/users/papayuca/followers", "following_url": "https://api.github.com/users/papayuca/following{/other_user}", "gists_url": "https://api.github.com/users/papayuca/gists{/gist_id}", "starred_url": "https://api.github.com/users/papayuca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papayuca/subscriptions", "organizations_url": "https://api.github.com/users/papayuca/orgs", "repos_url": "https://api.github.com/users/papayuca/repos", "events_url": "https://api.github.com/users/papayuca/events{/privacy}", "received_events_url": "https://api.github.com/users/papayuca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-03T20:53:33Z", "updated_at": "2018-10-03T21:43:16Z", "closed_at": "2018-10-03T21:43:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/latchset/jwcrypto/blob/d0c3ee2797d1321304a423a46dac620e238f98f3/jwcrypto/jwt.py#L343\r\n\r\nShould it not be:\r\n`if self._check_claims is not None:`\r\n\r\nOtherwise if exp claim is in the past, no error whil be raised.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/130", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/130/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/130/events", "html_url": "https://github.com/latchset/jwcrypto/issues/130", "id": 359318286, "node_id": "MDU6SXNzdWUzNTkzMTgyODY=", "number": 130, "title": "JWK.from_json returns None", "user": {"login": "adnanshussain", "id": 562248, "node_id": "MDQ6VXNlcjU2MjI0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/562248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adnanshussain", "html_url": "https://github.com/adnanshussain", "followers_url": "https://api.github.com/users/adnanshussain/followers", "following_url": "https://api.github.com/users/adnanshussain/following{/other_user}", "gists_url": "https://api.github.com/users/adnanshussain/gists{/gist_id}", "starred_url": "https://api.github.com/users/adnanshussain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adnanshussain/subscriptions", "organizations_url": "https://api.github.com/users/adnanshussain/orgs", "repos_url": "https://api.github.com/users/adnanshussain/repos", "events_url": "https://api.github.com/users/adnanshussain/events{/privacy}", "received_events_url": "https://api.github.com/users/adnanshussain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}, {"id": 183243999, "node_id": "MDU6TGFiZWwxODMyNDM5OTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}, {"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-12T05:11:58Z", "updated_at": "2018-10-31T20:18:00Z", "closed_at": "2018-10-31T20:18:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it's because you are doing \r\n\r\n`return obj.import_key(**jkey)`\r\n\r\ninstead of \r\n\r\n`return obj`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/127", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/127/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/127/events", "html_url": "https://github.com/latchset/jwcrypto/issues/127", "id": 348460172, "node_id": "MDU6SXNzdWUzNDg0NjAxNzI=", "number": 127, "title": "Implement support for CFRG Curves (Ed/X-25519/448)", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631962, "node_id": "MDU6TGFiZWw0MzE2MzE5NjI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Priority", "name": "Priority", "color": "fbca04", "default": false, "description": null}, {"id": 183244001, "node_id": "MDU6TGFiZWwxODMyNDQwMDE=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-08-07T19:41:34Z", "updated_at": "2019-06-06T19:21:11Z", "closed_at": "2019-06-06T19:21:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "RFC 8037 defines how to use CRFG curves Ed25519 and Ed448 for EdDSA digital signatures and X25519 and X448 for ECDH key exchange.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/125", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/125/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/125/events", "html_url": "https://github.com/latchset/jwcrypto/issues/125", "id": 338539031, "node_id": "MDU6SXNzdWUzMzg1MzkwMzE=", "number": 125, "title": "[Question] Could JWS infer the `alg` from the key type?", "user": {"login": "rdrey", "id": 347977, "node_id": "MDQ6VXNlcjM0Nzk3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/347977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdrey", "html_url": "https://github.com/rdrey", "followers_url": "https://api.github.com/users/rdrey/followers", "following_url": "https://api.github.com/users/rdrey/following{/other_user}", "gists_url": "https://api.github.com/users/rdrey/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdrey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdrey/subscriptions", "organizations_url": "https://api.github.com/users/rdrey/orgs", "repos_url": "https://api.github.com/users/rdrey/repos", "events_url": "https://api.github.com/users/rdrey/events{/privacy}", "received_events_url": "https://api.github.com/users/rdrey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-05T11:41:47Z", "updated_at": "2018-07-09T09:56:26Z", "closed_at": "2018-07-09T09:56:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! Great project, thanks! Question in the subject :P\r\n\r\nIf I send an RSA key as the argument, we can definitely use RS256 (probably has the widest support), for example, right?\r\n\r\nI haven't tried EC keys or HMACs yet, but would this idea be bad for some reason? Or could I start working on a PR?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/120", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/120/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/120/events", "html_url": "https://github.com/latchset/jwcrypto/issues/120", "id": 326720860, "node_id": "MDU6SXNzdWUzMjY3MjA4NjA=", "number": 120, "title": "Attempting to use a bytestring as a secret breaks JWK", "user": {"login": "freyley", "id": 69550, "node_id": "MDQ6VXNlcjY5NTUw", "avatar_url": "https://avatars3.githubusercontent.com/u/69550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freyley", "html_url": "https://github.com/freyley", "followers_url": "https://api.github.com/users/freyley/followers", "following_url": "https://api.github.com/users/freyley/following{/other_user}", "gists_url": "https://api.github.com/users/freyley/gists{/gist_id}", "starred_url": "https://api.github.com/users/freyley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freyley/subscriptions", "organizations_url": "https://api.github.com/users/freyley/orgs", "repos_url": "https://api.github.com/users/freyley/repos", "events_url": "https://api.github.com/users/freyley/events{/privacy}", "received_events_url": "https://api.github.com/users/freyley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-26T08:22:22Z", "updated_at": "2018-06-19T14:47:13Z", "closed_at": "2018-06-19T14:47:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm attempting to decrypt a JWE token generated by someone else using the Ruby JOSE library, and they chose to encrypt it not with their secret, but with the SHA256 digest of their secret. \r\n\r\nIn Ruby, this works fine, and can be used to generate a payload.\r\n\r\nIn Python, with jwcrypto, taking the secret and generating a SHA256 digest generates a bytestring. Handing a bytestring to JWK does not error, but handing that JWK object to JWE.decrypt() blows up with a UnicodeDecodeError.\r\n\r\nPull request with a test showing the issue and a bad solution to discuss shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/117", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/117/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/117/events", "html_url": "https://github.com/latchset/jwcrypto/issues/117", "id": 321823531, "node_id": "MDU6SXNzdWUzMjE4MjM1MzE=", "number": 117, "title": "no way to get keys from JWKSet with no kid", "user": {"login": "hmoffatt", "id": 7577172, "node_id": "MDQ6VXNlcjc1NzcxNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7577172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmoffatt", "html_url": "https://github.com/hmoffatt", "followers_url": "https://api.github.com/users/hmoffatt/followers", "following_url": "https://api.github.com/users/hmoffatt/following{/other_user}", "gists_url": "https://api.github.com/users/hmoffatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmoffatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmoffatt/subscriptions", "organizations_url": "https://api.github.com/users/hmoffatt/orgs", "repos_url": "https://api.github.com/users/hmoffatt/repos", "events_url": "https://api.github.com/users/hmoffatt/events{/privacy}", "received_events_url": "https://api.github.com/users/hmoffatt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}, {"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-10T06:24:52Z", "updated_at": "2018-05-16T14:20:41Z", "closed_at": "2018-05-16T14:20:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "You can add keys to a JWKSet which have no kid, but there is no way to get them out again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/116", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/116/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/116/events", "html_url": "https://github.com/latchset/jwcrypto/issues/116", "id": 321821657, "node_id": "MDU6SXNzdWUzMjE4MjE2NTc=", "number": 116, "title": "no simple way to import symmetric key", "user": {"login": "hmoffatt", "id": 7577172, "node_id": "MDQ6VXNlcjc1NzcxNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7577172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hmoffatt", "html_url": "https://github.com/hmoffatt", "followers_url": "https://api.github.com/users/hmoffatt/followers", "following_url": "https://api.github.com/users/hmoffatt/following{/other_user}", "gists_url": "https://api.github.com/users/hmoffatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hmoffatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hmoffatt/subscriptions", "organizations_url": "https://api.github.com/users/hmoffatt/orgs", "repos_url": "https://api.github.com/users/hmoffatt/repos", "events_url": "https://api.github.com/users/hmoffatt/events{/privacy}", "received_events_url": "https://api.github.com/users/hmoffatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-10T06:13:56Z", "updated_at": "2018-05-16T14:20:20Z", "closed_at": "2018-05-16T14:20:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "jwk.JWK has an export_key() method which returns a string containing the JSON, but there doesn't seem to be a way to import that format back.\r\n\r\nimport_key() seems to expect a dict. I got this to work with\r\n\r\nk2 = import_key(**json.loads(key.export()))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/113", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/113/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/113/events", "html_url": "https://github.com/latchset/jwcrypto/issues/113", "id": 310522810, "node_id": "MDU6SXNzdWUzMTA1MjI4MTA=", "number": 113, "title": "CryptographyDeprecationWarning in jwa.py", "user": {"login": "julb", "id": 502505, "node_id": "MDQ6VXNlcjUwMjUwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/502505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julb", "html_url": "https://github.com/julb", "followers_url": "https://api.github.com/users/julb/followers", "following_url": "https://api.github.com/users/julb/following{/other_user}", "gists_url": "https://api.github.com/users/julb/gists{/gist_id}", "starred_url": "https://api.github.com/users/julb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julb/subscriptions", "organizations_url": "https://api.github.com/users/julb/orgs", "repos_url": "https://api.github.com/users/julb/repos", "events_url": "https://api.github.com/users/julb/events{/privacy}", "received_events_url": "https://api.github.com/users/julb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-02T15:53:28Z", "updated_at": "2018-04-11T17:33:25Z", "closed_at": "2018-04-11T17:33:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using JWCrypto methods on my Python 3.6.4 installation, the process raises CryptographyDeprecationWarnings due to deprecated methods :\r\n\r\n/usr/local/lib/python3.6/dist-packages/jwcrypto/jwa.py:153: CryptographyDeprecationWarning: encode_rfc6979_signature is deprecated and will be removed in a future version, use encode_dss_signature instead.\r\n  int(hexlify(r), 16), int(hexlify(s), 16))\r\n\r\n/usr/local/lib/python3.6/dist-packages/jwcrypto/jwa.py:144: CryptographyDeprecationWarning: decode_rfc6979_signature is deprecated and will be removed in a future version, use decode_dss_signature instead.\r\n  r, s = ec_utils.decode_rfc6979_signature(signature)\r\n\r\nFor future releases, it would be interesting to fix this so the library will work with future Python releases.\r\n\r\nBtw, your library is very awesome :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/110", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/110/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/110/events", "html_url": "https://github.com/latchset/jwcrypto/issues/110", "id": 298015067, "node_id": "MDU6SXNzdWUyOTgwMTUwNjc=", "number": 110, "title": "MemoryError", "user": {"login": "FilimonovAP81", "id": 32813125, "node_id": "MDQ6VXNlcjMyODEzMTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/32813125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FilimonovAP81", "html_url": "https://github.com/FilimonovAP81", "followers_url": "https://api.github.com/users/FilimonovAP81/followers", "following_url": "https://api.github.com/users/FilimonovAP81/following{/other_user}", "gists_url": "https://api.github.com/users/FilimonovAP81/gists{/gist_id}", "starred_url": "https://api.github.com/users/FilimonovAP81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FilimonovAP81/subscriptions", "organizations_url": "https://api.github.com/users/FilimonovAP81/orgs", "repos_url": "https://api.github.com/users/FilimonovAP81/repos", "events_url": "https://api.github.com/users/FilimonovAP81/events{/privacy}", "received_events_url": "https://api.github.com/users/FilimonovAP81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-17T16:04:35Z", "updated_at": "2018-02-24T14:32:30Z", "closed_at": "2018-02-24T14:32:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have MemoryError message then I try to import your lib.\r\n\r\nDo you know potential problem places? \r\n\r\nI use python 2.7.10 and djangorestframework 3.3.2 and last release of your library.\r\nResult is:\r\n```\r\nException Type: |MemoryError\r\n/usr/lib64/python2.7/ctypes/__init__.py in _reset_cache, line 279\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/105", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/105/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/105/events", "html_url": "https://github.com/latchset/jwcrypto/issues/105", "id": 282140178, "node_id": "MDU6SXNzdWUyODIxNDAxNzg=", "number": 105, "title": "Possible error in JWS.jose_header", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-14T15:32:14Z", "updated_at": "2017-12-14T17:49:58Z", "closed_at": "2017-12-14T17:49:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Static code analysis is complaining about some unusual code. I'm not familiar enough with JWS standard to triage the issue. Is `` if 'protected' in obj:`` correct or should it rather be `` if 'protected' in o:``?\r\n\r\n```\r\n1. jwcrypto-0.4.2/jwcrypto/jws.py:489: original: \"\"protected\" in obj\" looks like the original copy.\r\n2. jwcrypto-0.4.2/jwcrypto/jws.py:498: copy_paste_error: \"obj\" in \"\"protected\" in obj\" looks like a copy-paste error.\r\n3. jwcrypto-0.4.2/jwcrypto/jws.py:498: remediation: Should it say \"o\" instead?\r\n#   496|               for o in obj['signatures']:\r\n#   497|                   jh = dict()\r\n#   498|->                 if 'protected' in obj:\r\n#   499|                       p = json_decode(o['protected'])\r\n#   500|                       jh = self._merge_headers(jh, p)\r\n```\r\n\r\nhttps://github.com/latchset/jwcrypto/blob/ccee40277c1eb46a6ca3d4e92d8267ae68bd05fc/jwcrypto/jws.py#L494-L501\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/99", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/99/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/99/events", "html_url": "https://github.com/latchset/jwcrypto/issues/99", "id": 278117482, "node_id": "MDU6SXNzdWUyNzgxMTc0ODI=", "number": 99, "title": "Extracting a public JWK from a private one", "user": {"login": "michaelboulton", "id": 3809868, "node_id": "MDQ6VXNlcjM4MDk4Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3809868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelboulton", "html_url": "https://github.com/michaelboulton", "followers_url": "https://api.github.com/users/michaelboulton/followers", "following_url": "https://api.github.com/users/michaelboulton/following{/other_user}", "gists_url": "https://api.github.com/users/michaelboulton/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelboulton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelboulton/subscriptions", "organizations_url": "https://api.github.com/users/michaelboulton/orgs", "repos_url": "https://api.github.com/users/michaelboulton/repos", "events_url": "https://api.github.com/users/michaelboulton/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelboulton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-30T13:20:41Z", "updated_at": "2017-12-05T18:04:16Z", "closed_at": "2017-12-05T18:04:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Assuming I generate a private key:\r\n```python\r\nprivate_key = JWK.generate(kty='RSA', size=4096)\r\n```\r\nIt seems like the quickest way to get just a public version at the moment is to do this:\r\n```python\r\npublic_key = JWK()\r\npublic_key.import_key(**json_decode(private_key.export_public()))\r\n```\r\nIt would be good if there was a method called something like `extract_public` that had this behaviour:\r\n```python\r\npublic_key = private_key.extract_public()\r\n```\r\nTo make this simpler", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/96", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/96/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/96/events", "html_url": "https://github.com/latchset/jwcrypto/issues/96", "id": 274231802, "node_id": "MDU6SXNzdWUyNzQyMzE4MDI=", "number": 96, "title": "No tests for header or claims as string", "user": {"login": "ajmaddaford", "id": 1754822, "node_id": "MDQ6VXNlcjE3NTQ4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1754822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajmaddaford", "html_url": "https://github.com/ajmaddaford", "followers_url": "https://api.github.com/users/ajmaddaford/followers", "following_url": "https://api.github.com/users/ajmaddaford/following{/other_user}", "gists_url": "https://api.github.com/users/ajmaddaford/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajmaddaford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajmaddaford/subscriptions", "organizations_url": "https://api.github.com/users/ajmaddaford/orgs", "repos_url": "https://api.github.com/users/ajmaddaford/repos", "events_url": "https://api.github.com/users/ajmaddaford/events{/privacy}", "received_events_url": "https://api.github.com/users/ajmaddaford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-15T17:02:12Z", "updated_at": "2017-12-14T16:59:55Z", "closed_at": "2017-12-14T16:59:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating a JWT `header` and `claims` can be passed as a string, but there don't seem to be any tests that test this. \r\n\r\nAlso, when `claims` is passed as a string, any `default_claims` are not used (https://github.com/latchset/jwcrypto/blob/master/jwcrypto/jwt.py#L228). Should an exception be raised when rather than silently ignoring the default_claims?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/93", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/93/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/93/events", "html_url": "https://github.com/latchset/jwcrypto/issues/93", "id": 273239282, "node_id": "MDU6SXNzdWUyNzMyMzkyODI=", "number": 93, "title": "Making all the exceptions inherit from JWException", "user": {"login": "michaelboulton", "id": 3809868, "node_id": "MDQ6VXNlcjM4MDk4Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3809868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelboulton", "html_url": "https://github.com/michaelboulton", "followers_url": "https://api.github.com/users/michaelboulton/followers", "following_url": "https://api.github.com/users/michaelboulton/following{/other_user}", "gists_url": "https://api.github.com/users/michaelboulton/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelboulton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelboulton/subscriptions", "organizations_url": "https://api.github.com/users/michaelboulton/orgs", "repos_url": "https://api.github.com/users/michaelboulton/repos", "events_url": "https://api.github.com/users/michaelboulton/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelboulton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-12T15:35:18Z", "updated_at": "2017-11-14T15:41:43Z", "closed_at": "2017-11-14T15:41:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems like this is just something that was missed out by accident? It would be nice if all the exceptions for JWE/JWT/etc. inherited from `JWException` in common.py so they could be caught in one except block.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/92", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/92/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/92/events", "html_url": "https://github.com/latchset/jwcrypto/issues/92", "id": 273238366, "node_id": "MDU6SXNzdWUyNzMyMzgzNjY=", "number": 92, "title": "Not passing a protected header when creating a compact JWE causes KeyError", "user": {"login": "michaelboulton", "id": 3809868, "node_id": "MDQ6VXNlcjM4MDk4Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3809868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelboulton", "html_url": "https://github.com/michaelboulton", "followers_url": "https://api.github.com/users/michaelboulton/followers", "following_url": "https://api.github.com/users/michaelboulton/following{/other_user}", "gists_url": "https://api.github.com/users/michaelboulton/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelboulton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelboulton/subscriptions", "organizations_url": "https://api.github.com/users/michaelboulton/orgs", "repos_url": "https://api.github.com/users/michaelboulton/repos", "events_url": "https://api.github.com/users/michaelboulton/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelboulton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-12T15:22:20Z", "updated_at": "2017-12-13T20:31:02Z", "closed_at": "2017-12-13T20:31:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minimal test case:\r\n\r\n```python\r\n# testcase.py\r\nfrom jwcrypto.jwe import JWE\r\nfrom jwcrypto.jwk import JWK\r\n\r\npayload = \"some payload text\"\r\n\r\njwe = JWE(payload)\r\n\r\nkey = JWK.generate(kty='RSA', size=4096)\r\n\r\nheader = {\r\n    \"alg\": \"RSA-OAEP-256\",\r\n    \"enc\": \"A256CBC-HS512\",\r\n    \"typ\": \"JWE\",\r\n}\r\n\r\njwe.add_recipient(key, header)\r\n\r\nserialised = jwe.serialize(compact=True)\r\n```\r\n\r\n```\r\n$ python testcase.py\r\nTraceback (most recent call last):\r\n  File \"testcase.py\", line 18, in <module>\r\n    serialised = jwe.serialize(compact=True)\r\n  File \"/home/michael/code/jwcrypto/jwcrypto/jwe.py\", line 285, in serialize\r\n    ph = json_decode(self.objects['protected'])\r\nKeyError: 'protected'\r\n```\r\n\r\nIt seems like this is a fairly easy fix to initialise the 'protected' key in 'objects' to `{}`, but I'm not sure if this is allowed by the JWE spec?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/91", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/91/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/91/events", "html_url": "https://github.com/latchset/jwcrypto/issues/91", "id": 266846445, "node_id": "MDU6SXNzdWUyNjY4NDY0NDU=", "number": 91, "title": "Verification not working against WebCrypto keys", "user": {"login": "ondras", "id": 192172, "node_id": "MDQ6VXNlcjE5MjE3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/192172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ondras", "html_url": "https://github.com/ondras", "followers_url": "https://api.github.com/users/ondras/followers", "following_url": "https://api.github.com/users/ondras/following{/other_user}", "gists_url": "https://api.github.com/users/ondras/gists{/gist_id}", "starred_url": "https://api.github.com/users/ondras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ondras/subscriptions", "organizations_url": "https://api.github.com/users/ondras/orgs", "repos_url": "https://api.github.com/users/ondras/repos", "events_url": "https://api.github.com/users/ondras/events{/privacy}", "received_events_url": "https://api.github.com/users/ondras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-19T13:40:56Z", "updated_at": "2017-10-20T16:33:14Z", "closed_at": "2017-10-20T16:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "This might as well be some large fuckup of mine.\r\n\r\nWhat I did:\r\n\r\n1) used WebCrypto to generate a keypair.\r\n```\r\nconst keyOptions = {name: \"ECDSA\", namedCurve: \"P-256\"}\r\nconst signOptions = {name: \"ECDSA\", hash: {name: \"SHA-256\"}}\r\n```\r\n\r\n2) exported the public key as JWK:\r\n```\r\n{\"crv\":\"P-256\",\"ext\":true,\"key_ops\":[\"verify\"],\"kty\":\"EC\",\"x\":\"kudpCZSQcYKDOVlYAxfVyZc6NhPFKB2I6-3-Q14leqE\",\"y\":\"MTynqg8ZTf2eKZ-YKsgGFg35S88De5wz5Tol4YMujHc\"}\r\n```\r\n\r\n3) took a trivial challenge, `\"a\"`, converted it to a `new Uint8Array([ 97 ])` and signed with the private key. Got the following signature:\r\n```\r\ntOdwela6LqWd6S3acKgLKAX6VXNb3NcDN1v6RR0/nGa1t/eF6OZTSU6puq2px9r815kA4XrW5oOZDYxNL+VdAQ==\r\n```\r\n\r\n4) loaded the exported public key in Python:\r\n```\r\nkey = jwk.JWK(**decoded_public_key)\r\n```\r\n\r\n5) created a JWS token:\r\n```\r\nsig = jws.JWS()\r\n```\r\n\r\n6) tried to verify the signature:\r\n```\r\n>>> sig.deserialize('{\"payload\":\"YQ==\", \"signature\":\"tOdwela6LqWd6S3acKgLKAX6VXNb3NcDN1v6RR0/nGa1t/eF6OZTSU6puq2px9r815kA4XrW5oOZDYxNL+VdAQ==\"}', key, \"ES256\")\r\n```\r\n\r\n7) got the `InvalidSignature()` exception.\r\n\r\nIs there something I am doing fundamentally incorrect?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/88", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/88/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/88/events", "html_url": "https://github.com/latchset/jwcrypto/issues/88", "id": 248694080, "node_id": "MDU6SXNzdWUyNDg2OTQwODA=", "number": 88, "title": "Is there a way to use custom key for encryption/decryption?", "user": {"login": "inikolaev", "id": 7585750, "node_id": "MDQ6VXNlcjc1ODU3NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7585750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inikolaev", "html_url": "https://github.com/inikolaev", "followers_url": "https://api.github.com/users/inikolaev/followers", "following_url": "https://api.github.com/users/inikolaev/following{/other_user}", "gists_url": "https://api.github.com/users/inikolaev/gists{/gist_id}", "starred_url": "https://api.github.com/users/inikolaev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inikolaev/subscriptions", "organizations_url": "https://api.github.com/users/inikolaev/orgs", "repos_url": "https://api.github.com/users/inikolaev/repos", "events_url": "https://api.github.com/users/inikolaev/events{/privacy}", "received_events_url": "https://api.github.com/users/inikolaev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-08T12:10:53Z", "updated_at": "2017-08-08T13:47:52Z", "closed_at": "2017-08-08T13:47:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use this library but in my use case we load keys from our own key store. \r\n\r\nThe problem is how would I create a JWK object to represent a key? I can see that I can generate a new key, o load it from PEM file, but that doesn't work for me. I would like to pass a string/byte array containing the key. Is that possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/87", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/87/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/87/events", "html_url": "https://github.com/latchset/jwcrypto/issues/87", "id": 247705131, "node_id": "MDU6SXNzdWUyNDc3MDUxMzE=", "number": 87, "title": "consider re-license or dual Apache v2.0", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-03T13:24:04Z", "updated_at": "2017-08-03T16:44:07Z", "closed_at": "2017-08-03T16:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "LGPLv3 may be incompatible with Apache v2.0. See:\r\n\r\nhttps://github.com/rubychan/coderay/issues/25\r\nhttps://softwareengineering.stackexchange.com/questions/81947/why-is-jquery-released-under-mit-and-not-lgpl\r\n\r\nMaybe even do dual Apache v2.0/MIT like the Rust community https://github.com/sfackler/rust-postgres-macros/issues/19\r\n\r\nAlso just fyi to give you scope, jwcrypto was downloaded via pip 3473 times in the last 30 days.\r\n\r\nbigquery\r\n```\r\nSELECT                                            \r\n  details.installer.name as installer_name,       \r\n  COUNT(*) as download_count,                     \r\nFROM                                              \r\n  TABLE_DATE_RANGE(                               \r\n    [the-psf:pypi.downloads],                     \r\n    DATE_ADD(CURRENT_TIMESTAMP(), -31, \"day\"),    \r\n    DATE_ADD(CURRENT_TIMESTAMP(), -1, \"day\")      \r\n  )                                               \r\nWHERE                                             \r\n  file.project = \"jwcrypto\"                       \r\nGROUP BY                                          \r\n  installer_name,                                 \r\nORDER BY                                          \r\n  download_count DESC                             \r\nLIMIT 20                                          \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/86", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/86/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/86/events", "html_url": "https://github.com/latchset/jwcrypto/issues/86", "id": 247149070, "node_id": "MDU6SXNzdWUyNDcxNDkwNzA=", "number": 86, "title": "add sha512sum file to release scripts", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-01T17:49:26Z", "updated_at": "2019-03-25T13:18:19Z", "closed_at": "2019-03-25T13:18:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/78", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/78/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/78/events", "html_url": "https://github.com/latchset/jwcrypto/issues/78", "id": 231749446, "node_id": "MDU6SXNzdWUyMzE3NDk0NDY=", "number": 78, "title": "Documentation broken since 4.0", "user": {"login": "carlos-jenkins", "id": 1628587, "node_id": "MDQ6VXNlcjE2Mjg1ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1628587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlos-jenkins", "html_url": "https://github.com/carlos-jenkins", "followers_url": "https://api.github.com/users/carlos-jenkins/followers", "following_url": "https://api.github.com/users/carlos-jenkins/following{/other_user}", "gists_url": "https://api.github.com/users/carlos-jenkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlos-jenkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlos-jenkins/subscriptions", "organizations_url": "https://api.github.com/users/carlos-jenkins/orgs", "repos_url": "https://api.github.com/users/carlos-jenkins/repos", "events_url": "https://api.github.com/users/carlos-jenkins/events{/privacy}", "received_events_url": "https://api.github.com/users/carlos-jenkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-26T22:37:45Z", "updated_at": "2017-05-30T10:41:59Z", "closed_at": "2017-05-30T10:06:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, since 4.0 documentation about classes seams to be broken:\r\n\r\nCompare (0.3.1):\r\n\r\nhttp://jwcrypto.readthedocs.io/en/v0.3.1/jwt.html\r\n\r\nVersus:\r\n\r\nhttp://jwcrypto.readthedocs.io/en/v0.4.0/jwt.html\r\n\r\nAs you can see documentation of the class is missing.\r\n\r\nRegards and thanks for the great project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/77", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/77/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/77/events", "html_url": "https://github.com/latchset/jwcrypto/issues/77", "id": 226649013, "node_id": "MDU6SXNzdWUyMjY2NDkwMTM=", "number": 77, "title": "'JWK' has no attribute 'generate'", "user": {"login": "ssonow", "id": 3630791, "node_id": "MDQ6VXNlcjM2MzA3OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3630791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssonow", "html_url": "https://github.com/ssonow", "followers_url": "https://api.github.com/users/ssonow/followers", "following_url": "https://api.github.com/users/ssonow/following{/other_user}", "gists_url": "https://api.github.com/users/ssonow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssonow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssonow/subscriptions", "organizations_url": "https://api.github.com/users/ssonow/orgs", "repos_url": "https://api.github.com/users/ssonow/repos", "events_url": "https://api.github.com/users/ssonow/events{/privacy}", "received_events_url": "https://api.github.com/users/ssonow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-05T18:05:25Z", "updated_at": "2017-05-07T09:26:40Z", "closed_at": "2017-05-07T09:26:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried as example, both python 2 and 3, and it throws:\r\n\r\n>>> key = jwk.JWK.generate(kty='oct', size=256)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: type object 'JWK' has no attribute 'generate'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/76", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/76/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/76/events", "html_url": "https://github.com/latchset/jwcrypto/issues/76", "id": 226647814, "node_id": "MDU6SXNzdWUyMjY2NDc4MTQ=", "number": 76, "title": "Lack of doc to install it under python3", "user": {"login": "ssonow", "id": 3630791, "node_id": "MDQ6VXNlcjM2MzA3OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3630791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssonow", "html_url": "https://github.com/ssonow", "followers_url": "https://api.github.com/users/ssonow/followers", "following_url": "https://api.github.com/users/ssonow/following{/other_user}", "gists_url": "https://api.github.com/users/ssonow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssonow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssonow/subscriptions", "organizations_url": "https://api.github.com/users/ssonow/orgs", "repos_url": "https://api.github.com/users/ssonow/repos", "events_url": "https://api.github.com/users/ssonow/events{/privacy}", "received_events_url": "https://api.github.com/users/ssonow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-05T18:00:44Z", "updated_at": "2017-05-30T10:40:38Z", "closed_at": "2017-05-30T09:15:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seem default is python2, you need to run : sudo apt-get install python3-jwcrypto instead\r\n\r\notherwise, in python3:\r\n\r\n>>> from jwcrypto import jwk, jws\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: No module named 'jwcrypto'\r\n>>> \r\nKeyboardInterrupt\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/75", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/75/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/75/events", "html_url": "https://github.com/latchset/jwcrypto/issues/75", "id": 224130057, "node_id": "MDU6SXNzdWUyMjQxMzAwNTc=", "number": 75, "title": "[ Example Needed ] Creation of JWK from existing key string", "user": {"login": "krdeepak", "id": 315647, "node_id": "MDQ6VXNlcjMxNTY0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/315647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krdeepak", "html_url": "https://github.com/krdeepak", "followers_url": "https://api.github.com/users/krdeepak/followers", "following_url": "https://api.github.com/users/krdeepak/following{/other_user}", "gists_url": "https://api.github.com/users/krdeepak/gists{/gist_id}", "starred_url": "https://api.github.com/users/krdeepak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krdeepak/subscriptions", "organizations_url": "https://api.github.com/users/krdeepak/orgs", "repos_url": "https://api.github.com/users/krdeepak/repos", "events_url": "https://api.github.com/users/krdeepak/events{/privacy}", "received_events_url": "https://api.github.com/users/krdeepak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-25T13:03:03Z", "updated_at": "2017-04-25T18:19:50Z", "closed_at": "2017-04-25T18:18:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are examples of creating keys e.g.\r\n`key = jwk.JWK.generate(kty='oct', size=256)`\r\n\r\nHow can I create a JWK object if the key is specified, which can then be used to decrypt a JWE. I am using AES_128_GCM for encryption.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/74", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/74/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/74/events", "html_url": "https://github.com/latchset/jwcrypto/issues/74", "id": 218011317, "node_id": "MDU6SXNzdWUyMTgwMTEzMTc=", "number": 74, "title": "Broken link from documentation", "user": {"login": "sumitb", "id": 1455135, "node_id": "MDQ6VXNlcjE0NTUxMzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1455135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumitb", "html_url": "https://github.com/sumitb", "followers_url": "https://api.github.com/users/sumitb/followers", "following_url": "https://api.github.com/users/sumitb/following{/other_user}", "gists_url": "https://api.github.com/users/sumitb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumitb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumitb/subscriptions", "organizations_url": "https://api.github.com/users/sumitb/orgs", "repos_url": "https://api.github.com/users/sumitb/repos", "events_url": "https://api.github.com/users/sumitb/events{/privacy}", "received_events_url": "https://api.github.com/users/sumitb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-29T21:14:31Z", "updated_at": "2017-05-30T09:18:35Z", "closed_at": "2017-05-30T09:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/latchset/jwcrypto/blob/1ad432d8b5dbdc8c35707c52c4503cb729577c60/docs/source/index.rst ends up as a 404", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/71", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/71/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/71/events", "html_url": "https://github.com/latchset/jwcrypto/issues/71", "id": 192067887, "node_id": "MDU6SXNzdWUxOTIwNjc4ODc=", "number": 71, "title": "JWT bad check for the nbf claim", "user": {"login": "carlos-jenkins", "id": 1628587, "node_id": "MDQ6VXNlcjE2Mjg1ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1628587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlos-jenkins", "html_url": "https://github.com/carlos-jenkins", "followers_url": "https://api.github.com/users/carlos-jenkins/followers", "following_url": "https://api.github.com/users/carlos-jenkins/following{/other_user}", "gists_url": "https://api.github.com/users/carlos-jenkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlos-jenkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlos-jenkins/subscriptions", "organizations_url": "https://api.github.com/users/carlos-jenkins/orgs", "repos_url": "https://api.github.com/users/carlos-jenkins/repos", "events_url": "https://api.github.com/users/carlos-jenkins/events{/privacy}", "received_events_url": "https://api.github.com/users/carlos-jenkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183243999, "node_id": "MDU6TGFiZWwxODMyNDM5OTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-28T17:32:31Z", "updated_at": "2016-11-29T20:22:39Z", "closed_at": "2016-11-28T21:37:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When decoding a token that has the nbf claim set the library fails to decode it with:\r\n\r\n    (...)\r\n    File \"(...)/.tox/env/lib/python2.7/site-packages/jwcrypto/jwt.py\", line 343, in _check_default_claims\r\n        self._check_exp(claims['nbf'], time.time(), self._leeway)\r\n    File \"(...)/.tox/env/lib/python2.7/site-packages/jwcrypto/jwt.py\", line 323, in _check_exp\r\n    claim, limit, leeway))\r\n    JWTExpired: Expired at 1480353842, time: 1480353902(leeway: 60)\r\n\r\nWhich refers to this line:\r\n\r\n    self._check_exp(claims['nbf'], time.time(), self._leeway)\r\n\r\nhttps://github.com/latchset/jwcrypto/blob/b81d7ea6459b2ec42da519ba19f983e2f4416fbb/jwcrypto/jwt.py#L343\r\n\r\nAs you can see, the nbf is checked using the _check_exp(), I think it should be checked using the _check_nbf():\r\n\r\nhttps://github.com/latchset/jwcrypto/blob/b81d7ea6459b2ec42da519ba19f983e2f4416fbb/jwcrypto/jwt.py#L325\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/69", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/69/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/69/events", "html_url": "https://github.com/latchset/jwcrypto/issues/69", "id": 191770247, "node_id": "MDU6SXNzdWUxOTE3NzAyNDc=", "number": 69, "title": "setup.py doesn't mention cryptography as a requirement", "user": {"login": "ashb", "id": 34150, "node_id": "MDQ6VXNlcjM0MTUw", "avatar_url": "https://avatars2.githubusercontent.com/u/34150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashb", "html_url": "https://github.com/ashb", "followers_url": "https://api.github.com/users/ashb/followers", "following_url": "https://api.github.com/users/ashb/following{/other_user}", "gists_url": "https://api.github.com/users/ashb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashb/subscriptions", "organizations_url": "https://api.github.com/users/ashb/orgs", "repos_url": "https://api.github.com/users/ashb/repos", "events_url": "https://api.github.com/users/ashb/events{/privacy}", "received_events_url": "https://api.github.com/users/ashb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183243999, "node_id": "MDU6TGFiZWwxODMyNDM5OTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-25T22:18:20Z", "updated_at": "2016-11-28T11:29:27Z", "closed_at": "2016-11-28T11:29:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I notice that you have cryptography in requirements.txt but not in setup.py, so when installing this module JWK related function won't work.\r\n\r\nWas this a concious decision so that people could use the JWT functions without needing a harder-to-install module or is there some other reason? If it's this I'll happily open a small PR to add a comment in the docs, or otherwise open one to add `install_requires` to setup.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/68", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/68/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/68/events", "html_url": "https://github.com/latchset/jwcrypto/issues/68", "id": 175746746, "node_id": "MDU6SXNzdWUxNzU3NDY3NDY=", "number": 68, "title": "Add effective key size to asymmetric algorithms?", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-08T12:57:45Z", "updated_at": "2016-09-08T18:15:54Z", "closed_at": "2016-09-08T18:15:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Should JWAAlgorithm have an API to get the effective key size of RSA and EC? For example RSA 2024 has the equivalent security of a 112bit symmetric cipher. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/65", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/65/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/65/events", "html_url": "https://github.com/latchset/jwcrypto/issues/65", "id": 174170727, "node_id": "MDU6SXNzdWUxNzQxNzA3Mjc=", "number": 65, "title": "CVE-2016-6298: Million Messages Attack vulnerability", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 433793705, "node_id": "MDU6TGFiZWw0MzM3OTM3MDU=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/CVE", "name": "CVE", "color": "b60205", "default": false, "description": null}, {"id": 433793662, "node_id": "MDU6TGFiZWw0MzM3OTM2NjI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Security%20Issue", "name": "Security Issue", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-31T02:34:07Z", "updated_at": "2016-08-31T19:38:42Z", "closed_at": "2016-08-31T19:38:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The jwcrypto implementation of the RSA1_5 algorithm is vulnerable to the Million Message Attack described in [RFC 3128](https://www.ietf.org/rfc/rfc3218.txt).\n\nA timing attack can be leveraged against the implementation to detect when a chosed ciphertext generates a valid header and padding because invalid headr/padding generates a code exception and cryptographic operations are terminated earlier resulting in measurably faster processing over the network.\n\nMany thanks to Dennis Detering dennis.detering@rub.de for discovering and reporting this vulnerability.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/63", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/63/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/63/events", "html_url": "https://github.com/latchset/jwcrypto/issues/63", "id": 173271575, "node_id": "MDU6SXNzdWUxNzMyNzE1NzU=", "number": 63, "title": "Improve _encode_int in jwa.py", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-25T18:05:15Z", "updated_at": "2016-08-26T17:50:11Z", "closed_at": "2016-08-26T17:50:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As referenced in comments on #59, use:\n'{:x}'.format(n) and e.rjust(ilen, '0')[:ilen] and use a better variable name for l\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/62", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/62/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/62/events", "html_url": "https://github.com/latchset/jwcrypto/issues/62", "id": 173270718, "node_id": "MDU6SXNzdWUxNzMyNzA3MTg=", "number": 62, "title": "Fix dict antipattern in jwk.py", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-25T18:01:30Z", "updated_at": "2016-08-26T17:50:11Z", "closed_at": "2016-08-26T17:50:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Replace the antipattern:\n\n```\na = d['b']\ndel ['b']\n```\n\nwith:\n\n```\na = d.pop('b')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/61", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/61/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/61/events", "html_url": "https://github.com/latchset/jwcrypto/issues/61", "id": 173213417, "node_id": "MDU6SXNzdWUxNzMyMTM0MTc=", "number": 61, "title": "Use common base class for exceptions", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 431631919, "node_id": "MDU6TGFiZWw0MzE2MzE5MTk=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/Easy%20Fix", "name": "Easy Fix", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-25T14:09:32Z", "updated_at": "2016-08-26T17:50:11Z", "closed_at": "2016-08-26T17:50:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "All jwcrypto exceptions should have a common base class. It makes it easier to except and handle all jwcrypto exceptions in application code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/57", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/57/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/57/events", "html_url": "https://github.com/latchset/jwcrypto/issues/57", "id": 172767610, "node_id": "MDU6SXNzdWUxNzI3Njc2MTA=", "number": 57, "title": "Crypto should be moved to its own module", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-23T18:09:18Z", "updated_at": "2016-08-25T17:21:44Z", "closed_at": "2016-08-25T17:21:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "JWA algorithms are defined in their own RFC file, it may make sense to move their implementation in a separate module too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/53", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/53/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/53/events", "html_url": "https://github.com/latchset/jwcrypto/issues/53", "id": 172266387, "node_id": "MDU6SXNzdWUxNzIyNjYzODc=", "number": 53, "title": "JWE API feedback", "user": {"login": "hannosch", "id": 483109, "node_id": "MDQ6VXNlcjQ4MzEwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/483109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hannosch", "html_url": "https://github.com/hannosch", "followers_url": "https://api.github.com/users/hannosch/followers", "following_url": "https://api.github.com/users/hannosch/following{/other_user}", "gists_url": "https://api.github.com/users/hannosch/gists{/gist_id}", "starred_url": "https://api.github.com/users/hannosch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hannosch/subscriptions", "organizations_url": "https://api.github.com/users/hannosch/orgs", "repos_url": "https://api.github.com/users/hannosch/repos", "events_url": "https://api.github.com/users/hannosch/events{/privacy}", "received_events_url": "https://api.github.com/users/hannosch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-20T11:16:04Z", "updated_at": "2016-08-23T14:04:15Z", "closed_at": "2016-08-23T14:04:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all thanks for an excellent library. I'm using the library for JWE de/encryption in combination with square/js-jose.\n\nIt took me a while to figure out the API and what I ended up with is:\n\n```\ndef encrypt(plaintext, public_jwk)\n    protected = '{\"alg\":\"RSA-OAEP\",\"enc\":\"A256GCM\"}'\n    jwe = JWE(plaintext=plaintext, protected=protected)\n    jwe.add_recipient(public_jwk)\n    ciphertext = jwe.serialize(compact=True)\n    return ciphertext\n\ndef decrypt(ciphertext, private_jwk):\n    jwe = JWE()\n    jwe.deserialize(ciphertext, key=private_jwk)\n    plaintext = jwe.payload.decode('utf-8')\n    return plaintext\n```\n\nUnfortunately those two functions look very different and aren't at all symmetric. If this is at all reasonable code, I found a couple of things non-obvious:\n- The protected header could use an example in the docs. Otherwise you have to read large parts of the RFC to understand what it means.\n- The protected argument to JWE is a string, I'd expected it to be a Python dict and assumed the API would take care of the conversion internally.\n- It would be nice if there would be a key argument to `JWE.__init__` adding a default recipient. Since I use compact encoding, there can only be a single recipient and this would avoid the extra call to add_recipient.\n- The JWE.deserialize function notes that it destroys the entire JWE state. Wouldn't it make more sense to change this into a class or staticmethod which internally creates a new JWE instance?\n- JWE.deserialize has no return value. I expected it to return the plaintext and not get it from the payload property.\n\nThis is all well meant feedback after I used the library for a single purpose, so I might very well be missing larger implications or context.\n\nThanks! Hanno\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/50", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/50/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/50/events", "html_url": "https://github.com/latchset/jwcrypto/issues/50", "id": 171893793, "node_id": "MDU6SXNzdWUxNzE4OTM3OTM=", "number": 50, "title": "JWK(generate='oct') should support algorithm argument", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-18T12:53:53Z", "updated_at": "2016-08-26T17:01:23Z", "closed_at": "2016-08-26T17:01:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "jwcrypto should support generating symmetric keys by algorithm name and auto-detect the required key size.\n\n```\nJWK(generate='oct', algorithm='A128CBC-HS256')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/49", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/49/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/49/events", "html_url": "https://github.com/latchset/jwcrypto/issues/49", "id": 171893118, "node_id": "MDU6SXNzdWUxNzE4OTMxMTg=", "number": 49, "title": "size type confusion", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-18T12:50:19Z", "updated_at": "2016-08-26T17:18:28Z", "closed_at": "2016-08-26T17:18:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "jwcrypto sometimes uses bits and sometimes bytes for key size, e.g. JWK(generate='oct') takes size in bits, jwe._direct.wrap() reports InvalidCEKeyLength in bytes. Please stick to either bits or bytes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/47", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/47/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/47/events", "html_url": "https://github.com/latchset/jwcrypto/issues/47", "id": 171215309, "node_id": "MDU6SXNzdWUxNzEyMTUzMDk=", "number": 47, "title": "jwcrypto 0.3.0 breaks FreeIPA", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-15T17:11:08Z", "updated_at": "2016-08-19T14:03:22Z", "closed_at": "2016-08-16T11:07:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The latest release of jwcrypto breaks FreeIPA's ipa-replica-install. ipareplica-install log on the new replica:\n\n```\n2016-08-15T16:28:04Z DEBUG Traceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/ipaserver/install/service.py\", line 447, in start_creation\n    run_step(full_msg, method)\n  File \"/usr/lib/python2.7/site-packages/ipaserver/install/service.py\", line 437, in run_step\n    method()\n  File \"/usr/lib/python2.7/site-packages/ipaserver/install/custodiainstance.py\", line 98, in __import_ra_key\n    cli.fetch_key('ra/ipaCert')\n  File \"/usr/lib/python2.7/site-packages/ipapython/secrets/client.py\", line 92, in fetch_key\n    r.raise_for_status()\n  File \"/usr/lib/python2.7/site-packages/requests/models.py\", line 844, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nHTTPError: 406 Client Error: Failed to validate message: Key ID is None, should be a SPN for url: https://master.ipa.example/ipa/keys/ra/ipaCert?type=kem&va\nlue=eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwia2lkIjpudWxsfQ.ijUrXfBZulqVjDRlpkgIWUuWnLQfXDQzo2vx1kRFd1M_EejwPAOptONv9hgVVWs1tvuUt4Ix3MIi1ZF-lB1g0\nMSaHcE65gWciJlQDC5PcihRIT3YQMVaW2AnYh7RCQIpOM3Rz_GH08NCjguIk1Q4tHKq_Yqo6XjhcrxuTSdOBCA_9eAfvyj6GBH1oy_2z54ZkPd1G5ztCZh1C2BPRHRlpBxxQj4ooVvX7RWPHmq_lri2NWzU2\n8_B5mybcvOKkegu-w6thsPb0Pg4AeY_rxPlD5hjBmN_S5dCMkM4IVjtLn_nZkCi9NbN_Y8hONaJ7ljeR8e2Mo0ypXxGqYRPnYt3XQ.9zYMjMvDk0QGfiPAFU5bGQ.Hjof2y5DysgzhHRK4xad26yuDJx5LBD\nuWgdd79yxPtbUqRCyYZR-rfkzJqk2iTalgNbw-f3BhNqBwptBIHxYirCFzh-ndN_ooOQEeAVRfPBOS6Z5M5ALgEt8VK6_1IEYd5SsS7EF_ZT7kHniKJozBhzpGchciQ4aMoskZdNX_2BYvyDgg_pVo54hB-B\ny2XOJ0kZJbHiZ_VoKDmkqvUmjvvVSemoYJw2tytC7ygze_c76O2vs-EKv8nivLlxQDuhQ65rZl89_QZR4rFhhs9A6WlakBgUszBUUS5MdRvCQPEJEIGuXZKF_nxFZkcicz_RxGB5jmJK61UuXNTQJ9SgG5HI\nZ7oG5yW5-4ZX_rVun71q1ZvBNN_zmlVCl8YSx0xGxbaGINkbCH7dXOYOXLiYLurUFcAMAE7DQjiO3GFhoTSd6EFq9EpM5MKUDzRGtuqLUJqemrrzSxZQ3CBo0aLqQlkfe0LeZ9vrx2-zXv-0cxpDA-csFqNb\nC5HxFzGJl4LVlF-kUe7wbBbrlHHx7qQ1m7QqhuUPbjTNsoUIsx0hCILXKHEmER6ftuG6ARJo47EAZ.r-coYU-7udAB-YdOoZWg-flLDOwlo0SCSkk6dTburJY\n```\n\nI added a couple of print statements to custodia on the master and ran\n\n```\n$ sudo -u apache curl -H 'GSS_NAME: admin' --unix /run/httpd/ipa-custodia.sock 'http://localhost/keys/ra/ipaCert?...\n...\nAug 15 17:07:16 master.ipa.example custodia[11695]: <jwcrypto.jwe.JWE object at 0x7f8d49482890> {u'alg': u'RSA1_5', u'enc': u'A256CBC-HS512', u'kid': None}\nAug 15 17:07:16 master.ipa.example custodia[11695]: <jwcrypto.jws.JWS object at 0x7f8d4fe83410> {u'alg': u'RS256', u'kid': None}\n```\n\nkid is both None for the inner and outer object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/46", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/46/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/46/events", "html_url": "https://github.com/latchset/jwcrypto/issues/46", "id": 169981391, "node_id": "MDU6SXNzdWUxNjk5ODEzOTE=", "number": 46, "title": "Encrypt with RSA-OAEP-256 public key", "user": {"login": "xxblx", "id": 3307358, "node_id": "MDQ6VXNlcjMzMDczNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3307358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xxblx", "html_url": "https://github.com/xxblx", "followers_url": "https://api.github.com/users/xxblx/followers", "following_url": "https://api.github.com/users/xxblx/following{/other_user}", "gists_url": "https://api.github.com/users/xxblx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xxblx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xxblx/subscriptions", "organizations_url": "https://api.github.com/users/xxblx/orgs", "repos_url": "https://api.github.com/users/xxblx/repos", "events_url": "https://api.github.com/users/xxblx/events{/privacy}", "received_events_url": "https://api.github.com/users/xxblx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-08T17:40:08Z", "updated_at": "2016-08-11T05:18:34Z", "closed_at": "2016-08-11T05:18:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \nSorry about question in issues. I am not sure does it a bug or my mistake. \n\nFedora 24, python 3.5, jwcrypto 0.3 from pip\n\nI generated RSA with WebCrypto \n\n``` javascript\nvar rsaKey;\n\nwindow.crypto.subtle.generateKey(\n    {\n        name: \"RSA-OAEP\",\n        modulusLength: 2048, //can be 1024, 2048, or 4096\n        publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        hash: {name: \"SHA-256\"}, //can be \"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n    },\n    true, //whether the key is extractable (i.e. can be used in exportKey)\n    [\"encrypt\", \"decrypt\"] //must be [\"encrypt\", \"decrypt\"] or [\"wrapKey\", \"unwrapKey\"]\n)\n.then(function(key){\n    rsaKey = key;\n})\n.catch(function(err){\n    console.error(err);\n});\n```\n\nand exported public key to Python\n\n``` python\nrsa_pub = {'kty': 'RSA', 'key_ops': ['encrypt'], 'e': 'AQAB', 'ext': True, \n           'alg': 'RSA-OAEP-256', \n           'n': '3buQYV0Ba82vbi0tbzAxG50WzSqZkOiUc7mKb6wyxwebg_laPYN04umK4a2hVgi318kp_ItQiZaBpqmxOXmVLnn62bWDuHdCeEaFBpy8oFzNRwhVPMw-c97t3Xj-m6sEHSAuTKxjsj429gjHF0cHFpxUe1HQ6Z61Ubz9v1lFEBKAcY33e_p-odH86k0NdnnG6L0wQKyyf6XJcATehwGbiXk5KxgSZIKdh_2WfsNEN5FArr_JLevo9gDu87RH8uJxoqct5s99iNK2AdjW83eqzlBlLX4491oJdMwZwRSeyllqqJvSEoM3_vgXES9ylHJsbYzqMYHeC1B2QOtzcUH85Q'}\n```\n\nI trying to use it with jwcrypto for encryption some data\n\n``` python\nkey = jwk.JWK(**rsa_pub)\nheader = json.dumps({'enc': 'A256GCM', 'alg': 'RSA-OAEP-256'})\n\nj = jwe.JWE(b'some_data')\nj.add_recipient(key, header)\n```\n\nI got and exception\n\n``` python\nTraceback (most recent call last):\n  File \"/home/kozlov-o/SOURCES/Python/Projects/Python3/LFR/lfr_root/crypto.py\", line 37, in <module>\n    j.add_recipient(key, header)\n  File \"/home/kozlov-o/SOURCES/Python/Projects/Python3/LFR/venv/lib/python3.5/site-packages/jwcrypto/jwe.py\", line 978, in add_recipient\n    wrapped = alg.wrap(key, enc.key_size, self.cek, jh)\n  File \"/home/kozlov-o/SOURCES/Python/Projects/Python3/LFR/venv/lib/python3.5/site-packages/jwcrypto/jwe.py\", line 169, in wrap\n    rk = key.get_op_key('wrapKey')\n  File \"/home/kozlov-o/SOURCES/Python/Projects/Python3/LFR/venv/lib/python3.5/site-packages/jwcrypto/jwk.py\", line 532, in get_op_key\n    self._check_constraints('enc', operation)\n  File \"/home/kozlov-o/SOURCES/Python/Projects/Python3/LFR/venv/lib/python3.5/site-packages/jwcrypto/jwk.py\", line 453, in _check_constraints\n    raise InvalidJWKOperation(operation, ops)\njwcrypto.jwk.InvalidJWKOperation: Invalid operation requested: \"Encrypt key\". Valid for: \"['Encrypt content']\"\n```\n\nI tried to create header with every value from jwe.default_allowed_algs in for 'enc' key. Always exception. \n\nWhat I do wrong? Target is to generate private and public keys on client and encrypt some data with client's public key on server. \n\nBest Regards,\nOleg\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/44", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/44/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/44/events", "html_url": "https://github.com/latchset/jwcrypto/issues/44", "id": 168769540, "node_id": "MDU6SXNzdWUxNjg3Njk1NDA=", "number": 44, "title": "Current PyPy package has broken serialize() routine", "user": {"login": "wrouesnel", "id": 772445, "node_id": "MDQ6VXNlcjc3MjQ0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/772445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrouesnel", "html_url": "https://github.com/wrouesnel", "followers_url": "https://api.github.com/users/wrouesnel/followers", "following_url": "https://api.github.com/users/wrouesnel/following{/other_user}", "gists_url": "https://api.github.com/users/wrouesnel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrouesnel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrouesnel/subscriptions", "organizations_url": "https://api.github.com/users/wrouesnel/orgs", "repos_url": "https://api.github.com/users/wrouesnel/repos", "events_url": "https://api.github.com/users/wrouesnel/events{/privacy}", "received_events_url": "https://api.github.com/users/wrouesnel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-01T23:58:35Z", "updated_at": "2016-08-02T14:28:13Z", "closed_at": "2016-08-02T14:28:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current _git_ version is fine, but the version on PyPi is broken.\n\nSpecifically there's a typo in line 619 of `jwe.py`:\n`if 'recipiens' in self.objects:`\n\n`serialize()` appears to work fine, but the resulting key cannot be decrypted.\n\nEDIT: Actually it's found in the tagged release too - \nhttps://github.com/latchset/jwcrypto/blob/v0.2.1/jwcrypto/jwe.py#L619\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/43", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/43/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/43/events", "html_url": "https://github.com/latchset/jwcrypto/issues/43", "id": 167890479, "node_id": "MDU6SXNzdWUxNjc4OTA0Nzk=", "number": 43, "title": "Utility functions for importing key files on disk?", "user": {"login": "wrouesnel", "id": 772445, "node_id": "MDQ6VXNlcjc3MjQ0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/772445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrouesnel", "html_url": "https://github.com/wrouesnel", "followers_url": "https://api.github.com/users/wrouesnel/followers", "following_url": "https://api.github.com/users/wrouesnel/following{/other_user}", "gists_url": "https://api.github.com/users/wrouesnel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrouesnel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrouesnel/subscriptions", "organizations_url": "https://api.github.com/users/wrouesnel/orgs", "repos_url": "https://api.github.com/users/wrouesnel/repos", "events_url": "https://api.github.com/users/wrouesnel/events{/privacy}", "received_events_url": "https://api.github.com/users/wrouesnel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-27T15:57:00Z", "updated_at": "2016-08-02T14:41:20Z", "closed_at": "2016-08-02T14:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "A pretty standard use of this library is dealing with key files which need to be serialized/deserialized to disk. The JWK objects should either expose a constructor which can initialize them from on-disk PEM files, or else maybe some utility functionality should be provided to make this available?\n\nA good middle-ground would be allowing directly initializing JWK's from rsa.Cryptography objects, since internally this is done anyway with functions like `JWK._rsa_pri`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/42", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/42/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/42/events", "html_url": "https://github.com/latchset/jwcrypto/issues/42", "id": 166700041, "node_id": "MDU6SXNzdWUxNjY3MDAwNDE=", "number": 42, "title": "base64url_encode() should return \"bytes\"", "user": {"login": "franks42", "id": 181214, "node_id": "MDQ6VXNlcjE4MTIxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franks42", "html_url": "https://github.com/franks42", "followers_url": "https://api.github.com/users/franks42/followers", "following_url": "https://api.github.com/users/franks42/following{/other_user}", "gists_url": "https://api.github.com/users/franks42/gists{/gist_id}", "starred_url": "https://api.github.com/users/franks42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franks42/subscriptions", "organizations_url": "https://api.github.com/users/franks42/orgs", "repos_url": "https://api.github.com/users/franks42/repos", "events_url": "https://api.github.com/users/franks42/events{/privacy}", "received_events_url": "https://api.github.com/users/franks42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-20T22:46:04Z", "updated_at": "2016-07-21T21:14:11Z", "closed_at": "2016-07-21T21:14:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In common.py, the function base64url_encode() seems to be a convenience function that accepts both bytes and unicode-strings, utf8-encodes the latter, base64URLsafe encodes the bytes, strips any padding of trailing \"=\", and utf8-decodes the result to a unicode-string, which is returned.\n\nHowever, base64 encoding should return bytes...\n\nI can understand that you want a convenience function that returns a unicode-string such that you can easily assign it to a python object or attribute for json encoding later, but maybe rename the function to base64url_encode2ustr() or something like that to differentiate it from pure base64 encoding.\n\n(sorry to be pedantic about this, but all this bytes vs str vs unicode in python2 vs python3 with all the inconsistent unicode/b64/json-encoding is so f#$%^ed up that keeping it clear seems to be the only way to keep ones sanity ;-) )\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/39", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/39/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/39/events", "html_url": "https://github.com/latchset/jwcrypto/issues/39", "id": 165690075, "node_id": "MDU6SXNzdWUxNjU2OTAwNzU=", "number": 39, "title": "Implement JWK Thumbprinting", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-15T00:54:15Z", "updated_at": "2016-07-15T15:15:32Z", "closed_at": "2016-07-15T15:15:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://tools.ietf.org/html/rfc7638 \"JSON Web Key (JWK) Thumbprint\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/34", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/34/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/34/events", "html_url": "https://github.com/latchset/jwcrypto/issues/34", "id": 157758533, "node_id": "MDU6SXNzdWUxNTc3NTg1MzM=", "number": 34, "title": "JWK from a pyca (RSA|EllipticCurve)(Public|Private)Key", "user": {"login": "npmccallum", "id": 288304, "node_id": "MDQ6VXNlcjI4ODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/288304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npmccallum", "html_url": "https://github.com/npmccallum", "followers_url": "https://api.github.com/users/npmccallum/followers", "following_url": "https://api.github.com/users/npmccallum/following{/other_user}", "gists_url": "https://api.github.com/users/npmccallum/gists{/gist_id}", "starred_url": "https://api.github.com/users/npmccallum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npmccallum/subscriptions", "organizations_url": "https://api.github.com/users/npmccallum/orgs", "repos_url": "https://api.github.com/users/npmccallum/repos", "events_url": "https://api.github.com/users/npmccallum/events{/privacy}", "received_events_url": "https://api.github.com/users/npmccallum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-05-31T20:07:55Z", "updated_at": "2016-07-01T20:25:23Z", "closed_at": "2016-07-01T20:25:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "You provide code to go from the JWK to the key object, but not vice versa.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/31", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/31/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/31/events", "html_url": "https://github.com/latchset/jwcrypto/issues/31", "id": 157542013, "node_id": "MDU6SXNzdWUxNTc1NDIwMTM=", "number": 31, "title": "JWKSet doesn't allow for other keys", "user": {"login": "npmccallum", "id": 288304, "node_id": "MDQ6VXNlcjI4ODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/288304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npmccallum", "html_url": "https://github.com/npmccallum", "followers_url": "https://api.github.com/users/npmccallum/followers", "following_url": "https://api.github.com/users/npmccallum/following{/other_user}", "gists_url": "https://api.github.com/users/npmccallum/gists{/gist_id}", "starred_url": "https://api.github.com/users/npmccallum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npmccallum/subscriptions", "organizations_url": "https://api.github.com/users/npmccallum/orgs", "repos_url": "https://api.github.com/users/npmccallum/repos", "events_url": "https://api.github.com/users/npmccallum/events{/privacy}", "received_events_url": "https://api.github.com/users/npmccallum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-30T18:23:18Z", "updated_at": "2016-07-01T19:15:27Z", "closed_at": "2016-07-01T19:15:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The RFC explicitly allows the use of other key/value pairs in the JWKSet object. However, the library doesn't allow this. JWKSet should probably just implement the dict interface instead of the set interface.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/30", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/30/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/30/events", "html_url": "https://github.com/latchset/jwcrypto/issues/30", "id": 157539866, "node_id": "MDU6SXNzdWUxNTc1Mzk4NjY=", "number": 30, "title": "Generating keys should be a classmethod", "user": {"login": "npmccallum", "id": 288304, "node_id": "MDQ6VXNlcjI4ODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/288304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npmccallum", "html_url": "https://github.com/npmccallum", "followers_url": "https://api.github.com/users/npmccallum/followers", "following_url": "https://api.github.com/users/npmccallum/following{/other_user}", "gists_url": "https://api.github.com/users/npmccallum/gists{/gist_id}", "starred_url": "https://api.github.com/users/npmccallum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npmccallum/subscriptions", "organizations_url": "https://api.github.com/users/npmccallum/orgs", "repos_url": "https://api.github.com/users/npmccallum/repos", "events_url": "https://api.github.com/users/npmccallum/events{/privacy}", "received_events_url": "https://api.github.com/users/npmccallum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-30T17:59:26Z", "updated_at": "2016-07-01T19:13:59Z", "closed_at": "2016-07-01T19:13:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Having a special key value for generating a key is awkward. A JWK.generate() class method is much more obvious.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/29", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/29/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/29/events", "html_url": "https://github.com/latchset/jwcrypto/issues/29", "id": 157539741, "node_id": "MDU6SXNzdWUxNTc1Mzk3NDE=", "number": 29, "title": "The import() method should be a class method", "user": {"login": "npmccallum", "id": 288304, "node_id": "MDQ6VXNlcjI4ODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/288304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npmccallum", "html_url": "https://github.com/npmccallum", "followers_url": "https://api.github.com/users/npmccallum/followers", "following_url": "https://api.github.com/users/npmccallum/following{/other_user}", "gists_url": "https://api.github.com/users/npmccallum/gists{/gist_id}", "starred_url": "https://api.github.com/users/npmccallum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npmccallum/subscriptions", "organizations_url": "https://api.github.com/users/npmccallum/orgs", "repos_url": "https://api.github.com/users/npmccallum/repos", "events_url": "https://api.github.com/users/npmccallum/events{/privacy}", "received_events_url": "https://api.github.com/users/npmccallum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-30T17:58:07Z", "updated_at": "2016-08-21T19:52:14Z", "closed_at": "2016-08-21T19:52:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The import() method is a kind of constructor. Please make it a class method.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/28", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/28/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/28/events", "html_url": "https://github.com/latchset/jwcrypto/issues/28", "id": 157539670, "node_id": "MDU6SXNzdWUxNTc1Mzk2NzA=", "number": 28, "title": "Import/Export consistency", "user": {"login": "npmccallum", "id": 288304, "node_id": "MDQ6VXNlcjI4ODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/288304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npmccallum", "html_url": "https://github.com/npmccallum", "followers_url": "https://api.github.com/users/npmccallum/followers", "following_url": "https://api.github.com/users/npmccallum/following{/other_user}", "gists_url": "https://api.github.com/users/npmccallum/gists{/gist_id}", "starred_url": "https://api.github.com/users/npmccallum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npmccallum/subscriptions", "organizations_url": "https://api.github.com/users/npmccallum/orgs", "repos_url": "https://api.github.com/users/npmccallum/repos", "events_url": "https://api.github.com/users/npmccallum/events{/privacy}", "received_events_url": "https://api.github.com/users/npmccallum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-30T17:57:27Z", "updated_at": "2020-04-23T12:38:03Z", "closed_at": "2020-04-23T12:38:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The export() methods should return a python dictionary that can be passed to json.dumpf(). Likewise, the import() methods should take a python dictionary as returned from json.loadf(). Please don't do the encoding internal to the API.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/25", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/25/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/25/events", "html_url": "https://github.com/latchset/jwcrypto/issues/25", "id": 154222289, "node_id": "MDU6SXNzdWUxNTQyMjIyODk=", "number": 25, "title": "Load private / public key from PEM files", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183244001, "node_id": "MDU6TGFiZWwxODMyNDQwMDE=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-11T11:37:58Z", "updated_at": "2016-08-26T18:34:52Z", "closed_at": "2016-08-26T18:34:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PEM-encoded private key and X.509 cert files are common file formats for key material. jwcrypto should support loading private and public keys from these formats. With cryptography it is trivial, too.\n\nI have a working implementation for Python 3, https://fedorapeople.org/cgit/cheimes/public_git/doregau.git/tree/authserver.py#n44\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/22", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/22/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/22/events", "html_url": "https://github.com/latchset/jwcrypto/issues/22", "id": 152620949, "node_id": "MDU6SXNzdWUxNTI2MjA5NDk=", "number": 22, "title": "Version API", "user": {"login": "puiterwijk", "id": 967561, "node_id": "MDQ6VXNlcjk2NzU2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/967561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puiterwijk", "html_url": "https://github.com/puiterwijk", "followers_url": "https://api.github.com/users/puiterwijk/followers", "following_url": "https://api.github.com/users/puiterwijk/following{/other_user}", "gists_url": "https://api.github.com/users/puiterwijk/gists{/gist_id}", "starred_url": "https://api.github.com/users/puiterwijk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puiterwijk/subscriptions", "organizations_url": "https://api.github.com/users/puiterwijk/orgs", "repos_url": "https://api.github.com/users/puiterwijk/repos", "events_url": "https://api.github.com/users/puiterwijk/events{/privacy}", "received_events_url": "https://api.github.com/users/puiterwijk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-02T19:05:34Z", "updated_at": "2020-04-23T12:39:30Z", "closed_at": "2020-04-23T12:39:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would probably be very useful to have a public version number (either API version or the normal package version, although API version might be more useful).\nThis is mostly because when new arguments are added to existing function (example: private_only for JWKSet.export), it would be good to be able to find out if one can use it with the currently installed version.\nNormally you would say \"I need at least version X\", but I don't think that the convenience this once function gives is worth the requirement in my opinion.\n\nSo an (API) version would be useful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/19", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/19/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/19/events", "html_url": "https://github.com/latchset/jwcrypto/issues/19", "id": 133142141, "node_id": "MDU6SXNzdWUxMzMxNDIxNDE=", "number": 19, "title": "JWK import error and patch.", "user": {"login": "nicfit", "id": 903850, "node_id": "MDQ6VXNlcjkwMzg1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/903850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicfit", "html_url": "https://github.com/nicfit", "followers_url": "https://api.github.com/users/nicfit/followers", "following_url": "https://api.github.com/users/nicfit/following{/other_user}", "gists_url": "https://api.github.com/users/nicfit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicfit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicfit/subscriptions", "organizations_url": "https://api.github.com/users/nicfit/orgs", "repos_url": "https://api.github.com/users/nicfit/repos", "events_url": "https://api.github.com/users/nicfit/events{/privacy}", "received_events_url": "https://api.github.com/users/nicfit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-12T02:27:02Z", "updated_at": "2016-02-18T02:17:13Z", "closed_at": "2016-02-18T02:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I ran into the following....\n\n``` python\njwk = JWK(**{\n   ...:       \"cmt\": \"Some comment.....\",\n   ...:       \"crv\": \"P-256\",\n   ...:       \"d\": \"M6GNqEwYbrdlsOd1H0oP9YrzHdpUXPzZ83x5s3FCp_Y\",\n   ...:       \"kid\": \"fRI11S2Z1-rp_8Y-4HBAgbH2tTVFUhPE1WWShaxkvxg\",\n   ...:       \"kty\": \"EC\",\n   ...:       \"size\": 256,\n   ...:       \"x\": \"ZTYFLm2Z7f3OM6sMNaXPlKksj6l8bv92fJwO253HVys\",\n   ...:       \"y\": \"vqHIwT8kcCG4-4vkgYTWd5rLqfEtXeRdUVAEyg-LZKk\"\n   ...:     })\n\nInvalidJWKValue: Unknown key parameters: ['size']\n```\n\nsize is valid, cmt is \"unknown\". Removing cmt or size succeeds but the real problem is removing from a list while iterating it. The following patch allows unknown names, like 'cmt'.  The assert is \nthere to test.\n\n``` diff\ndiff --git a/jwcrypto/jwk.py b/jwcrypto/jwk.py\n--- a/jwcrypto/jwk.py\n+++ b/jwcrypto/jwk.py\n@@ -286,13 +286,12 @@ class JWK(object):\n\n         # Unknown key parameters are allowed\n         # Let's just store them out of the way\n-        for name in names:\n+        for name in list(names):\n             self._unknown[name] = kwargs[name]\n             while name in names:\n                 names.remove(name)\n\n-        if len(names) != 0:\n-            raise InvalidJWKValue('Unknown key parameters: %s' % names)\n+        assert(len(names) == 0)\n\n         if len(self._key) == 0:\n             raise InvalidJWKValue('No Key Values found')\n\n```\n\n-travis\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/18", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/18/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/18/events", "html_url": "https://github.com/latchset/jwcrypto/issues/18", "id": 132096471, "node_id": "MDU6SXNzdWUxMzIwOTY0NzE=", "number": 18, "title": "Using my own Keys ", "user": {"login": "Odel93", "id": 16849682, "node_id": "MDQ6VXNlcjE2ODQ5Njgy", "avatar_url": "https://avatars0.githubusercontent.com/u/16849682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Odel93", "html_url": "https://github.com/Odel93", "followers_url": "https://api.github.com/users/Odel93/followers", "following_url": "https://api.github.com/users/Odel93/following{/other_user}", "gists_url": "https://api.github.com/users/Odel93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Odel93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Odel93/subscriptions", "organizations_url": "https://api.github.com/users/Odel93/orgs", "repos_url": "https://api.github.com/users/Odel93/repos", "events_url": "https://api.github.com/users/Odel93/events{/privacy}", "received_events_url": "https://api.github.com/users/Odel93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-08T09:56:41Z", "updated_at": "2016-02-18T02:18:23Z", "closed_at": "2016-02-18T02:18:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/17", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/17/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/17/events", "html_url": "https://github.com/latchset/jwcrypto/issues/17", "id": 127547186, "node_id": "MDU6SXNzdWUxMjc1NDcxODY=", "number": 17, "title": "JWS signature header type mismatch", "user": {"login": "nicfit", "id": 903850, "node_id": "MDQ6VXNlcjkwMzg1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/903850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicfit", "html_url": "https://github.com/nicfit", "followers_url": "https://api.github.com/users/nicfit/followers", "following_url": "https://api.github.com/users/nicfit/following{/other_user}", "gists_url": "https://api.github.com/users/nicfit/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicfit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicfit/subscriptions", "organizations_url": "https://api.github.com/users/nicfit/orgs", "repos_url": "https://api.github.com/users/nicfit/repos", "events_url": "https://api.github.com/users/nicfit/events{/privacy}", "received_events_url": "https://api.github.com/users/nicfit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-19T21:50:41Z", "updated_at": "2016-01-30T07:33:52Z", "closed_at": "2016-01-20T21:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "To pass a header to JWS.add_signature I need to encode it has a string otherwise an exception it raised:\n\n```\nheader = {..}\njws.add_signature(key, header=header)\n# Raises TypeError\njws.add_signature(key, header=json_encode(header))\n# Sucess\n```\n\nThis results in the signature contain the decoding header with in the JSM object.\n\nWhen a 'verify' is performed the header is passed as is to _verify where json_decode(header) is called and the following error occurs:\n\n```\nInvalidJWSSignature: Verification failed for all signatures['Failed: [TypeError(\"the JSON object must be str, not \\'dict\\'\",)]'] \n```\n\nIf I skip the decode in ``_verify` the verify succeeds.  Should the string'ified header be added to the signature object?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/16", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/16/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/16/events", "html_url": "https://github.com/latchset/jwcrypto/issues/16", "id": 119000253, "node_id": "MDU6SXNzdWUxMTkwMDAyNTM=", "number": 16, "title": "Registered claim names check", "user": {"login": "r2qokk", "id": 14918698, "node_id": "MDQ6VXNlcjE0OTE4Njk4", "avatar_url": "https://avatars2.githubusercontent.com/u/14918698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r2qokk", "html_url": "https://github.com/r2qokk", "followers_url": "https://api.github.com/users/r2qokk/followers", "following_url": "https://api.github.com/users/r2qokk/following{/other_user}", "gists_url": "https://api.github.com/users/r2qokk/gists{/gist_id}", "starred_url": "https://api.github.com/users/r2qokk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r2qokk/subscriptions", "organizations_url": "https://api.github.com/users/r2qokk/orgs", "repos_url": "https://api.github.com/users/r2qokk/repos", "events_url": "https://api.github.com/users/r2qokk/events{/privacy}", "received_events_url": "https://api.github.com/users/r2qokk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-26T09:01:02Z", "updated_at": "2015-12-23T21:38:24Z", "closed_at": "2015-12-23T21:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Saw what you did here\nhttps://github.com/simo5/custodia/blob/master/custodia/message/kem.py#L103\n\nI make a simple code to check every reserved claim mentioned in RFC7519.\n\n``` python\ndef check_claims(claims, audience, issuer, issue_time, subject, jti, leeway=int()):\n    try:\n        if claims['aud'] != audience:\n            return 'audience does not match'\n    except KeyError:\n        return 'missing intended audience in payload'\n\n    try:\n        if claims['nbf'] > time.time():\n            return 'message is not activated yet'\n    except KeyError:\n        return 'missing activation time in payload'\n\n    try:\n        if claims['exp'] < time.time() + leeway:\n            return 'message has expired'\n    except KeyError:\n        return 'missing expiration time in payload'\n\n    try:\n        if claims['iss'] != issuer:\n            return 'issuer does not match'\n    except KeyError:\n        return 'missing issuer in payload'\n\n    try:\n        if claims['sub'] != subject:\n            return 'subject does not match'\n    except KeyError:\n        return 'missing subject description in payload'\n\n    try:\n        if claims['iat'] != int(issue_time):\n            return 'issue time does not match'\n    except KeyError:\n        return 'missing issue time in payload'\n\n    try:\n        if claims['jti'] != int(jti):\n            return 'token id does not match'\n    except KeyError:\n        return 'missing token in payload'\n\n    return True\n```\n\nanother version based on what is in the claim\n\n``` python\ndef check_claims(claims, audience=str(), issuer=str(),\n                 issue_time=int(), subject=str(),\n                 token_id=int(), leeway=int()):\n    if 'aud' in claims and claims['aud'] != audience:\n        return 'audience does not match'\n    elif 'nbf' in claims and claims['nbf'] > time.time():\n        return 'message is not activated yet'\n    elif 'exp' in claims and claims['exp'] < time.time() + leeway:\n        return 'message has expired'\n    elif 'iss' in claims and claims['iss'] != issuer:\n        return 'issuer does not match'\n    elif 'sub' in claims and claims['sub'] != subject:\n        return 'subject does not match'\n    elif 'iat' in claims and claims['iat'] != int(issue_time):\n        return 'issue time does not match'\n    elif 'jti' in claims and claims['jti'] != int(token_id):\n        return 'token id does not match'\n    else:\n        return True\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/14", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/14/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/14/events", "html_url": "https://github.com/latchset/jwcrypto/issues/14", "id": 118555700, "node_id": "MDU6SXNzdWUxMTg1NTU3MDA=", "number": 14, "title": "Give some examples", "user": {"login": "r2qokk", "id": 14918698, "node_id": "MDQ6VXNlcjE0OTE4Njk4", "avatar_url": "https://avatars2.githubusercontent.com/u/14918698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r2qokk", "html_url": "https://github.com/r2qokk", "followers_url": "https://api.github.com/users/r2qokk/followers", "following_url": "https://api.github.com/users/r2qokk/following{/other_user}", "gists_url": "https://api.github.com/users/r2qokk/gists{/gist_id}", "starred_url": "https://api.github.com/users/r2qokk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r2qokk/subscriptions", "organizations_url": "https://api.github.com/users/r2qokk/orgs", "repos_url": "https://api.github.com/users/r2qokk/repos", "events_url": "https://api.github.com/users/r2qokk/events{/privacy}", "received_events_url": "https://api.github.com/users/r2qokk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-24T08:20:21Z", "updated_at": "2015-12-23T17:25:52Z", "closed_at": "2015-12-23T17:25:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to add some quick examples to demonstrate how to establish a JWT or JWS in the document?\nIt will be great to see JWS and JWE in action in the same time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/13", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/13/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/13/events", "html_url": "https://github.com/latchset/jwcrypto/issues/13", "id": 112409495, "node_id": "MDU6SXNzdWUxMTI0MDk0OTU=", "number": 13, "title": "Compact serialization w/multiple recipients not failing as it should", "user": {"login": "drennalls", "id": 16076, "node_id": "MDQ6VXNlcjE2MDc2", "avatar_url": "https://avatars2.githubusercontent.com/u/16076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drennalls", "html_url": "https://github.com/drennalls", "followers_url": "https://api.github.com/users/drennalls/followers", "following_url": "https://api.github.com/users/drennalls/following{/other_user}", "gists_url": "https://api.github.com/users/drennalls/gists{/gist_id}", "starred_url": "https://api.github.com/users/drennalls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drennalls/subscriptions", "organizations_url": "https://api.github.com/users/drennalls/orgs", "repos_url": "https://api.github.com/users/drennalls/repos", "events_url": "https://api.github.com/users/drennalls/events{/privacy}", "received_events_url": "https://api.github.com/users/drennalls/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-20T16:36:49Z", "updated_at": "2015-10-20T16:49:30Z", "closed_at": "2015-10-20T16:49:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems to be a typo in the jwe.JWE.serialize method (see https://github.com/simo5/jwcrypto/blob/master/jwcrypto/jwe.py#L619), 'recipiens' instead of 'recipients'  .. so when multiple recipients have been added to a JWE .serialize(compact=True) it isn't failing as it should.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/12", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/12/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/12/events", "html_url": "https://github.com/latchset/jwcrypto/issues/12", "id": 96855545, "node_id": "MDU6SXNzdWU5Njg1NTU0NQ==", "number": 12, "title": "JWK.get_curve('P-256') fails with KeyError", "user": {"login": "ldanielburr", "id": 732943, "node_id": "MDQ6VXNlcjczMjk0Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/732943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldanielburr", "html_url": "https://github.com/ldanielburr", "followers_url": "https://api.github.com/users/ldanielburr/followers", "following_url": "https://api.github.com/users/ldanielburr/following{/other_user}", "gists_url": "https://api.github.com/users/ldanielburr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldanielburr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldanielburr/subscriptions", "organizations_url": "https://api.github.com/users/ldanielburr/orgs", "repos_url": "https://api.github.com/users/ldanielburr/repos", "events_url": "https://api.github.com/users/ldanielburr/events{/privacy}", "received_events_url": "https://api.github.com/users/ldanielburr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-23T16:42:28Z", "updated_at": "2015-07-27T09:31:20Z", "closed_at": "2015-07-27T09:31:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\n\n``` python\n>>>> from jwcrypto import jwk\n>>>> k = jwk.JWK(generate='EC', curve='P-256')\n>>>> k.get_curve('P-256')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/ldb/virtualenvs/Amsonia/site-packages/jwcrypto/jwk.py\", line 358, in get_curve\n    if arg and k['crv'] != arg:\nKeyError: 'crv'\n>>>> \n```\n\nSo, it appears that 'crv': 'P-256' is not added to the JWK's _key dict when the object is created.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/9", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/9/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/9/events", "html_url": "https://github.com/latchset/jwcrypto/issues/9", "id": 92210181, "node_id": "MDU6SXNzdWU5MjIxMDE4MQ==", "number": 9, "title": "export symmetric key?", "user": {"login": "franks42", "id": 181214, "node_id": "MDQ6VXNlcjE4MTIxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franks42", "html_url": "https://github.com/franks42", "followers_url": "https://api.github.com/users/franks42/followers", "following_url": "https://api.github.com/users/franks42/following{/other_user}", "gists_url": "https://api.github.com/users/franks42/gists{/gist_id}", "starred_url": "https://api.github.com/users/franks42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franks42/subscriptions", "organizations_url": "https://api.github.com/users/franks42/orgs", "repos_url": "https://api.github.com/users/franks42/repos", "events_url": "https://api.github.com/users/franks42/events{/privacy}", "received_events_url": "https://api.github.com/users/franks42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-30T21:56:34Z", "updated_at": "2015-07-01T10:46:24Z", "closed_at": "2015-07-01T10:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to find a way to export the symmetric key as jose-json after:\n\n```\nsym_k = jwk.JWK(generate='oct', size=256, use='sig', kid = '24680')\n```\n\nsym_k.export() throws an exception:\n\n```\n...\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xd6 in position 2: invalid continuation byte\n...\n```\n\nwhile the sym_k.get_op_key('sign') seems to return the key's random byte-array.\n\nAny advise?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/8", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/8/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/8/events", "html_url": "https://github.com/latchset/jwcrypto/issues/8", "id": 92132999, "node_id": "MDU6SXNzdWU5MjEzMjk5OQ==", "number": 8, "title": "export individual public or private key?", "user": {"login": "franks42", "id": 181214, "node_id": "MDQ6VXNlcjE4MTIxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/181214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franks42", "html_url": "https://github.com/franks42", "followers_url": "https://api.github.com/users/franks42/followers", "following_url": "https://api.github.com/users/franks42/following{/other_user}", "gists_url": "https://api.github.com/users/franks42/gists{/gist_id}", "starred_url": "https://api.github.com/users/franks42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franks42/subscriptions", "organizations_url": "https://api.github.com/users/franks42/orgs", "repos_url": "https://api.github.com/users/franks42/repos", "events_url": "https://api.github.com/users/franks42/events{/privacy}", "received_events_url": "https://api.github.com/users/franks42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-06-30T16:06:57Z", "updated_at": "2015-06-30T18:04:45Z", "closed_at": "2015-06-30T18:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I generate a key-pair with:\n\n```\nk = jwk.JWK(generate='EC', crv='P-256', use='enc', kid='9876543210')\n```\n\nI'd like to \"export\" the public key in json format to communicate it to other parties. My understanding from reading the example code and API was, that I could possibly do that with:\n\n```\npk = k.get_op_key('encrypt')\npk_json = pk.export()\n```\n\nbut that doesn't work: \"AttributeError: '_EllipticCurvePublicKey' object has no attribute 'export'\"\n\nCouldn't find any explicit example of this in the test code. Maybe I am missing something?\nThanks for the help - Frank.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/4", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/4/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/4/events", "html_url": "https://github.com/latchset/jwcrypto/issues/4", "id": 67224078, "node_id": "MDU6SXNzdWU2NzIyNDA3OA==", "number": 4, "title": "Add option to pass payload as a separate argument when checking signatures", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 183244001, "node_id": "MDU6TGFiZWwxODMyNDQwMDE=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 183244002, "node_id": "MDU6TGFiZWwxODMyNDQwMDI=", "url": "https://api.github.com/repos/latchset/jwcrypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-08T21:28:26Z", "updated_at": "2018-10-31T20:10:26Z", "closed_at": "2018-10-31T20:10:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The JWS spec apparently allow applications to send the signature (in all forms: compact, general, flattened) without the payload, and let the application provide the payload for verification.\nJWS.deserialize() currently expects the payload to be always in the token.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/latchset/jwcrypto/issues/3", "repository_url": "https://api.github.com/repos/latchset/jwcrypto", "labels_url": "https://api.github.com/repos/latchset/jwcrypto/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/latchset/jwcrypto/issues/3/comments", "events_url": "https://api.github.com/repos/latchset/jwcrypto/issues/3/events", "html_url": "https://github.com/latchset/jwcrypto/issues/3", "id": 60301223, "node_id": "MDU6SXNzdWU2MDMwMTIyMw==", "number": 3, "title": "Implement missing JWE algorithms", "user": {"login": "simo5", "id": 8332609, "node_id": "MDQ6VXNlcjgzMzI2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8332609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simo5", "html_url": "https://github.com/simo5", "followers_url": "https://api.github.com/users/simo5/followers", "following_url": "https://api.github.com/users/simo5/following{/other_user}", "gists_url": "https://api.github.com/users/simo5/gists{/gist_id}", "starred_url": "https://api.github.com/users/simo5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simo5/subscriptions", "organizations_url": "https://api.github.com/users/simo5/orgs", "repos_url": "https://api.github.com/users/simo5/repos", "events_url": "https://api.github.com/users/simo5/events{/privacy}", "received_events_url": "https://api.github.com/users/simo5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-09T05:39:25Z", "updated_at": "2016-07-15T00:49:06Z", "closed_at": "2016-07-15T00:49:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "draft-ietf-jose-json-web-algorithms-40\n4.6.  Key Agreement with Elliptic Curve Diffie-Hellman Ephemeral Static (ECDH-ES)\n4.7.  Key Encryption with AES GCM\n4.8.  Key Encryption with PBES2\n", "performed_via_github_app": null, "score": 1.0}]}