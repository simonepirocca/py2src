{"total_count": 22, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/51", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/51/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/51/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/51", "id": 547780869, "node_id": "MDU6SXNzdWU1NDc3ODA4Njk=", "number": 51, "title": "Adding `is_new_type`", "user": {"login": "kornicameister", "id": 1029674, "node_id": "MDQ6VXNlcjEwMjk2NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1029674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornicameister", "html_url": "https://github.com/kornicameister", "followers_url": "https://api.github.com/users/kornicameister/followers", "following_url": "https://api.github.com/users/kornicameister/following{/other_user}", "gists_url": "https://api.github.com/users/kornicameister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornicameister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornicameister/subscriptions", "organizations_url": "https://api.github.com/users/kornicameister/orgs", "repos_url": "https://api.github.com/users/kornicameister/repos", "events_url": "https://api.github.com/users/kornicameister/events{/privacy}", "received_events_url": "https://api.github.com/users/kornicameister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T23:28:06Z", "updated_at": "2020-01-22T12:37:29Z", "closed_at": "2020-01-22T12:37:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to propose\r\n\r\n```\r\ndef is_new_type(tt: t.Type[t.Any]) -> bool:\r\n    return getattr(tt, '__supertype__', None) is not None\r\n```\r\n\r\nas an addition to this API. Perhaps it would make sense to also have a way to retrieve that `supertype`. I have tested that code (currently indirectly) in `Python 3.{6-9}` and seems to be working.\r\n\r\nOpinions :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/50", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/50/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/50/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/50", "id": 547772615, "node_id": "MDU6SXNzdWU1NDc3NzI2MTU=", "number": 50, "title": "TypedDict - should it be imported from `typing_extensions` ?", "user": {"login": "kornicameister", "id": 1029674, "node_id": "MDQ6VXNlcjEwMjk2NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1029674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornicameister", "html_url": "https://github.com/kornicameister", "followers_url": "https://api.github.com/users/kornicameister/followers", "following_url": "https://api.github.com/users/kornicameister/following{/other_user}", "gists_url": "https://api.github.com/users/kornicameister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornicameister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornicameister/subscriptions", "organizations_url": "https://api.github.com/users/kornicameister/orgs", "repos_url": "https://api.github.com/users/kornicameister/repos", "events_url": "https://api.github.com/users/kornicameister/events{/privacy}", "received_events_url": "https://api.github.com/users/kornicameister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-09T23:03:17Z", "updated_at": "2020-07-13T05:52:32Z", "closed_at": "2020-07-13T05:52:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It depends on `Python` but starting from `3.6` `TypedDict` can be exported via `typing_extensions` package and on `3.8` we have it builtin. Also `typing_extensions` variant is `3.8` compatible while `mypy_extensions` is not. What happens now is that we have `typed_dict_keys()` function that tries to get an entries of `TypedDict`, however it expects `TypedDict` from `mypy_extensions` thus `isintance` check will never work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/44", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/44/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/44/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/44", "id": 504047841, "node_id": "MDU6SXNzdWU1MDQwNDc4NDE=", "number": 44, "title": "Support for very old versions of python.typing (<=3.5.3)", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-08T13:34:30Z", "updated_at": "2020-01-22T11:32:49Z", "closed_at": "2020-01-22T11:32:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had to modify your code so that it runs correctly on python 3.5.3 (one of our production environment runs on AzureML where the conda environment was 3.5.3).\r\n\r\nI take this opportunity to submit a PR in case you're interested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/43", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/43/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/43/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/43", "id": 499683352, "node_id": "MDU6SXNzdWU0OTk2ODMzNTI=", "number": 43, "title": "New version?", "user": {"login": "bgw", "id": 180404, "node_id": "MDQ6VXNlcjE4MDQwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/180404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgw", "html_url": "https://github.com/bgw", "followers_url": "https://api.github.com/users/bgw/followers", "following_url": "https://api.github.com/users/bgw/following{/other_user}", "gists_url": "https://api.github.com/users/bgw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgw/subscriptions", "organizations_url": "https://api.github.com/users/bgw/orgs", "repos_url": "https://api.github.com/users/bgw/repos", "events_url": "https://api.github.com/users/bgw/events{/privacy}", "received_events_url": "https://api.github.com/users/bgw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-27T22:57:02Z", "updated_at": "2019-10-13T18:46:42Z", "closed_at": "2019-10-13T18:46:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We'd like to use the features I added in #39 and #40 within Instagram, and it'd be easier to pull the changes in if there's a PyPI release containing them. Are there plans to cut a 0.4.1 or 0.5.0 release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/42", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/42/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/42/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/42", "id": 463709070, "node_id": "MDU6SXNzdWU0NjM3MDkwNzA=", "number": 42, "title": "Behaviour with Supports and other ABCs", "user": {"login": "demianw", "id": 272705, "node_id": "MDQ6VXNlcjI3MjcwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/272705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demianw", "html_url": "https://github.com/demianw", "followers_url": "https://api.github.com/users/demianw/followers", "following_url": "https://api.github.com/users/demianw/following{/other_user}", "gists_url": "https://api.github.com/users/demianw/gists{/gist_id}", "starred_url": "https://api.github.com/users/demianw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demianw/subscriptions", "organizations_url": "https://api.github.com/users/demianw/orgs", "repos_url": "https://api.github.com/users/demianw/repos", "events_url": "https://api.github.com/users/demianw/events{/privacy}", "received_events_url": "https://api.github.com/users/demianw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-03T11:54:14Z", "updated_at": "2019-07-04T00:11:03Z", "closed_at": "2019-07-04T00:11:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nis this\r\n```\r\nimport typing\r\nimport typing_inspect\r\ntyping_inspect.is_generic_type(typing.SupportsInt) is True\r\n\r\n```\r\nsupposed to happen?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/38", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/38/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/38/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/38", "id": 462969992, "node_id": "MDU6SXNzdWU0NjI5Njk5OTI=", "number": 38, "title": "is_optional_type returns True for Union[Optional[xxx], yyy]", "user": {"login": "yukinarit", "id": 2347533, "node_id": "MDQ6VXNlcjIzNDc1MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2347533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yukinarit", "html_url": "https://github.com/yukinarit", "followers_url": "https://api.github.com/users/yukinarit/followers", "following_url": "https://api.github.com/users/yukinarit/following{/other_user}", "gists_url": "https://api.github.com/users/yukinarit/gists{/gist_id}", "starred_url": "https://api.github.com/users/yukinarit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yukinarit/subscriptions", "organizations_url": "https://api.github.com/users/yukinarit/orgs", "repos_url": "https://api.github.com/users/yukinarit/repos", "events_url": "https://api.github.com/users/yukinarit/events{/privacy}", "received_events_url": "https://api.github.com/users/yukinarit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-02T00:50:32Z", "updated_at": "2019-07-02T09:48:06Z", "closed_at": "2019-07-02T09:48:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ilevkivskyi,\r\n\r\nIt seems `is_optional_type` returns True for `Union[Optional[xxx], yyy]` as shown below.\r\n\r\n```\r\n>>> from typing_inspect import is_optional_type\r\n>>> from typing import Union, Optional\r\n>>> is_optional_type(Union[Optional[int], str])\r\nTrue\r\n```\r\n\r\nTested with typing_inspect 0.4.0\r\n\r\nIs this an intended behaviour or bug? How should I do to distinguish  `Union[Optional[xxx], yyy]` from `Optional[zzz]` by `is_optional_type` and `is_union_type`?\r\n\r\nThank you,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/30", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/30/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/30/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/30", "id": 406709264, "node_id": "MDU6SXNzdWU0MDY3MDkyNjQ=", "number": 30, "title": "get_args doesn't work with custom Generics in 3.7", "user": {"login": "mjr129", "id": 14569360, "node_id": "MDQ6VXNlcjE0NTY5MzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/14569360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjr129", "html_url": "https://github.com/mjr129", "followers_url": "https://api.github.com/users/mjr129/followers", "following_url": "https://api.github.com/users/mjr129/following{/other_user}", "gists_url": "https://api.github.com/users/mjr129/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjr129/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjr129/subscriptions", "organizations_url": "https://api.github.com/users/mjr129/orgs", "repos_url": "https://api.github.com/users/mjr129/repos", "events_url": "https://api.github.com/users/mjr129/events{/privacy}", "received_events_url": "https://api.github.com/users/mjr129/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T10:09:52Z", "updated_at": "2019-02-05T10:55:55Z", "closed_at": "2019-02-05T10:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python version 3.7. \r\n\r\nMinimal example\r\n------------------\r\n\r\n    from typing import Generic, TypeVar\r\n    import typing_inspect\r\n        \r\n    T = TypeVar( \"T\" )\r\n        \r\n    class MyGenericBase( Generic[T] ):\r\n        pass\r\n        \r\n    class MyGeneric( MyGenericBase[int] ):\r\n        pass\r\n        \r\n    print( typing_inspect.get_args( MyGeneric ) )\r\n\r\nActual result\r\n----------------\r\n\r\n    ( )\r\n\r\nExpected result\r\n----------------\r\n\r\n    ( int, )\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/28", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/28/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/28/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/28", "id": 406046966, "node_id": "MDU6SXNzdWU0MDYwNDY5NjY=", "number": 28, "title": "New pypi release for is_optional_type", "user": {"login": "mooncake4132", "id": 33011824, "node_id": "MDQ6VXNlcjMzMDExODI0", "avatar_url": "https://avatars0.githubusercontent.com/u/33011824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mooncake4132", "html_url": "https://github.com/mooncake4132", "followers_url": "https://api.github.com/users/mooncake4132/followers", "following_url": "https://api.github.com/users/mooncake4132/following{/other_user}", "gists_url": "https://api.github.com/users/mooncake4132/gists{/gist_id}", "starred_url": "https://api.github.com/users/mooncake4132/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mooncake4132/subscriptions", "organizations_url": "https://api.github.com/users/mooncake4132/orgs", "repos_url": "https://api.github.com/users/mooncake4132/repos", "events_url": "https://api.github.com/users/mooncake4132/events{/privacy}", "received_events_url": "https://api.github.com/users/mooncake4132/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-03T03:02:27Z", "updated_at": "2019-02-03T14:11:18Z", "closed_at": "2019-02-03T14:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering if you can create a new release to include the new `is_optional_type` API \ud83d\ude03 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/27", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/27/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/27/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/27", "id": 361304887, "node_id": "MDU6SXNzdWUzNjEzMDQ4ODc=", "number": 27, "title": "What is get_origin(typing.Dict) meant to return?", "user": {"login": "jbasko", "id": 632910, "node_id": "MDQ6VXNlcjYzMjkxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/632910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbasko", "html_url": "https://github.com/jbasko", "followers_url": "https://api.github.com/users/jbasko/followers", "following_url": "https://api.github.com/users/jbasko/following{/other_user}", "gists_url": "https://api.github.com/users/jbasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbasko/subscriptions", "organizations_url": "https://api.github.com/users/jbasko/orgs", "repos_url": "https://api.github.com/users/jbasko/repos", "events_url": "https://api.github.com/users/jbasko/events{/privacy}", "received_events_url": "https://api.github.com/users/jbasko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-18T13:28:39Z", "updated_at": "2018-09-18T15:20:02Z", "closed_at": "2018-09-18T15:20:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python 3.6.6, `get_origin(typing.Dict)` returns `typing.Dict`, but in Python 3.7.0 it returns `dict`.\r\nIs that by design?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/24", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/24/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/24/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/24", "id": 336835657, "node_id": "MDU6SXNzdWUzMzY4MzU2NTc=", "number": 24, "title": "get_args() doesn't work with Union in 3.6", "user": {"login": "1st1", "id": 239003, "node_id": "MDQ6VXNlcjIzOTAwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/239003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1st1", "html_url": "https://github.com/1st1", "followers_url": "https://api.github.com/users/1st1/followers", "following_url": "https://api.github.com/users/1st1/following{/other_user}", "gists_url": "https://api.github.com/users/1st1/gists{/gist_id}", "starred_url": "https://api.github.com/users/1st1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1st1/subscriptions", "organizations_url": "https://api.github.com/users/1st1/orgs", "repos_url": "https://api.github.com/users/1st1/repos", "events_url": "https://api.github.com/users/1st1/events{/privacy}", "received_events_url": "https://api.github.com/users/1st1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-29T01:50:04Z", "updated_at": "2018-06-29T02:16:13Z", "closed_at": "2018-06-29T02:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### In 3.7:\r\n\r\n```pycon\r\n>>> typing_inspect.get_args(typing.List[typing.Union[str, bytes]])\r\n(typing.Union[str, bytes],)\r\n```\r\n\r\n### In 3.6:\r\n\r\n```pycon\r\n>>> typing_inspect.get_args(typing.List[typing.Union[str, bytes]])\r\n((typing.Union, <class 'str'>, <class 'bytes'>),)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/20", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/20/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/20/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/20", "id": 319913417, "node_id": "MDU6SXNzdWUzMTk5MTM0MTc=", "number": 20, "title": "Python 3.7 compatible release", "user": {"login": "robjampar", "id": 7254610, "node_id": "MDQ6VXNlcjcyNTQ2MTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7254610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robjampar", "html_url": "https://github.com/robjampar", "followers_url": "https://api.github.com/users/robjampar/followers", "following_url": "https://api.github.com/users/robjampar/following{/other_user}", "gists_url": "https://api.github.com/users/robjampar/gists{/gist_id}", "starred_url": "https://api.github.com/users/robjampar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robjampar/subscriptions", "organizations_url": "https://api.github.com/users/robjampar/orgs", "repos_url": "https://api.github.com/users/robjampar/repos", "events_url": "https://api.github.com/users/robjampar/events{/privacy}", "received_events_url": "https://api.github.com/users/robjampar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-03T13:09:12Z", "updated_at": "2019-02-03T14:10:40Z", "closed_at": "2019-02-03T14:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, any chance we can get a new release of this on pip with the 3.7 support a bit early?\r\n3.7-rc is out - i cant see Dataclasses changing, and it would save me a lot of work if was released (am building 3.7 updates and setup.py does not play well with git+url for dependencies of dependencies)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/19", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/19/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/19/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/19", "id": 314783919, "node_id": "MDU6SXNzdWUzMTQ3ODM5MTk=", "number": 19, "title": "Add ability to inspect TypedDict keys and their totality", "user": {"login": "JakobGM", "id": 10655778, "node_id": "MDQ6VXNlcjEwNjU1Nzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/10655778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobGM", "html_url": "https://github.com/JakobGM", "followers_url": "https://api.github.com/users/JakobGM/followers", "following_url": "https://api.github.com/users/JakobGM/following{/other_user}", "gists_url": "https://api.github.com/users/JakobGM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobGM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobGM/subscriptions", "organizations_url": "https://api.github.com/users/JakobGM/orgs", "repos_url": "https://api.github.com/users/JakobGM/repos", "events_url": "https://api.github.com/users/JakobGM/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobGM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-16T19:19:04Z", "updated_at": "2018-05-07T21:02:27Z", "closed_at": "2018-05-07T21:02:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to somehow be able to inspect the specified type annotations of a ``TypedDict`` class instance. Let's say you have the following typed dictionary:\r\n\r\n```python\r\nclass FooRequired(TypedDict):\r\n    bar: str\r\n\r\nclass Foo(FooRequired, total=False):\r\n    baz: int\r\n```\r\n\r\nProviding: \r\n- ``required_dict_keys(Foo) == {'bar': str}``\r\n- ``optional_dict_keys(Foo) == {'baz': int}``\r\n- ``dict_keys(Foo) == {'bar': str, 'baz': int}``\r\n\r\nNot necessarily this API (it was just the first thing that I imagined), but something that would result in the same capabilities.\r\n\r\nThe rational is that this could enable ``TypedDict`` classes to be used as schema specification for untrusted JSON/YAML/config sources.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/17", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/17/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/17/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/17", "id": 304903451, "node_id": "MDU6SXNzdWUzMDQ5MDM0NTE=", "number": 17, "title": "Broken on 3.7b2", "user": {"login": "Fuyukai", "id": 8783751, "node_id": "MDQ6VXNlcjg3ODM3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8783751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fuyukai", "html_url": "https://github.com/Fuyukai", "followers_url": "https://api.github.com/users/Fuyukai/followers", "following_url": "https://api.github.com/users/Fuyukai/following{/other_user}", "gists_url": "https://api.github.com/users/Fuyukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fuyukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fuyukai/subscriptions", "organizations_url": "https://api.github.com/users/Fuyukai/orgs", "repos_url": "https://api.github.com/users/Fuyukai/repos", "events_url": "https://api.github.com/users/Fuyukai/events{/privacy}", "received_events_url": "https://api.github.com/users/Fuyukai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-13T19:26:21Z", "updated_at": "2018-03-20T22:22:43Z", "closed_at": "2018-03-20T22:22:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n    from typing import (\r\nImportError: cannot import name 'CallableMeta' from 'typing' (/usr/lib64/python3.7/typing.py)\r\n```\r\n\r\nI assume this is because of typing module changes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/16", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/16/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/16/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/16", "id": 296372526, "node_id": "MDU6SXNzdWUyOTYzNzI1MjY=", "number": 16, "title": "Get all compliant types", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-12T13:21:06Z", "updated_at": "2018-02-13T14:52:37Z", "closed_at": "2018-02-13T14:52:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As opposed to previous posts, this time I created an issue directly in `pytypes` first: https://github.com/Stewori/pytypes/issues/31\r\n\r\nHowever I had some afterthoughts: maybe this feature is actually enough 'core'-related (and resembles too much `__subclasses__()`) to be implemented outside of `typing_inspect`?\r\n\r\nFeel free to close if it is too 'high-level'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/14", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/14/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/14/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/14", "id": 295140765, "node_id": "MDU6SXNzdWUyOTUxNDA3NjU=", "number": 14, "title": "New method is_nonable(t)", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-07T13:39:14Z", "updated_at": "2018-09-25T01:33:48Z", "closed_at": "2018-09-25T01:33:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This method would return `True` if\r\n\r\n * t is the `NoneType` (`t is type(None)`)\r\n * t is a (possibly nested) `Union` to `NoneType` (this can be the result of using the `Optional` keyword or of an explicit `Union[type(None), ....]`\r\n * t is a `TypeVar` with either a `bound` or a `constraints` set, and one of them is nonable\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/12", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/12/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/12/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/12", "id": 263638052, "node_id": "MDU6SXNzdWUyNjM2MzgwNTI=", "number": 12, "title": "Broken with Python 3.6.3", "user": {"login": "lhupfeldt", "id": 1584329, "node_id": "MDQ6VXNlcjE1ODQzMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1584329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhupfeldt", "html_url": "https://github.com/lhupfeldt", "followers_url": "https://api.github.com/users/lhupfeldt/followers", "following_url": "https://api.github.com/users/lhupfeldt/following{/other_user}", "gists_url": "https://api.github.com/users/lhupfeldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhupfeldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhupfeldt/subscriptions", "organizations_url": "https://api.github.com/users/lhupfeldt/orgs", "repos_url": "https://api.github.com/users/lhupfeldt/repos", "events_url": "https://api.github.com/users/lhupfeldt/events{/privacy}", "received_events_url": "https://api.github.com/users/lhupfeldt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-07T12:24:03Z", "updated_at": "2017-10-08T16:53:23Z", "closed_at": "2017-10-08T16:39:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "On python 3.6.3 import of private '_gorg' is failing.\r\nSee https://travis-ci.org/lhupfeldt/multiconf/jobs/284627902\r\nThis module should be merged into typing or typing should provide public APIs for the methods needed by this module.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/10", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/10/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/10/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/10", "id": 257312169, "node_id": "MDU6SXNzdWUyNTczMTIxNjk=", "number": 10, "title": "An API to manage most base collection types", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-13T09:20:51Z", "updated_at": "2017-10-25T09:02:39Z", "closed_at": "2017-10-25T09:02:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Collection types are an important special case of Generic types. In [parsyfiles](https://github.com/smarie/python-parsyfiles) I ended up writing functions to easily access\r\n * the type of the key in a `Mapping`\r\n * the type of the items in `Mapping` (values, not keys), and `Iterable` (but I should probably use `Container` instead)\r\n\r\nThe indent was to at least support `Dict[KT, VT]`, `List[VT]`, `Set[VT]`, and `Tuple[VT1, VT2, VT3...]`.\r\n\r\nMaybe such as API could be of some interest for `typing_inspect` users ? \r\n\r\nFor details about how I used it, please see `_extract_collection_base_type` in https://github.com/smarie/python-parsyfiles/blob/master/parsyfiles/type_inspection_tools.py. Some tests are available [here](https://github.com/smarie/python-parsyfiles/tree/master/parsyfiles/tests/unittests/test_type_inspection_tools.py)\r\n\r\nHowever the way I did it is probably not the best for an api, probably it would be better to provide individual functions such as `get_mapping_inner_types` and `get_container_inner_types`. An interesting thing to keep, though, is the capability to detect underspecified types such as `Dict` (and not `Dict[A, B]`) and to throw a `TypeInformationRequiredError`. See above file for details.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/9", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/9/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/9/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/9", "id": 257083510, "node_id": "MDU6SXNzdWUyNTcwODM1MTA=", "number": 9, "title": "Provide isinstance and issubclass equivalents", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 594614167, "node_id": "MDU6TGFiZWw1OTQ2MTQxNjc=", "url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-12T15:20:30Z", "updated_at": "2017-09-13T13:11:20Z", "closed_at": "2017-09-13T07:56:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In one of my [projects](https://github.com/smarie/python-parsyfiles) I had to implement this function, I guess it could be useful to share in `typing_inspect`, and also to provide the equivalent for subclass tests, what do you think ? (I did not find any equivalent in `typing` nor in `typing_inspect`)\r\n\r\n```python\r\nfrom typing import Any, Type\r\nfrom typing_inspect import is_union_type, get_args, get_origin\r\n\r\ndef robust_isinstance(inst: Any, typ: Type):\r\n    \"\"\"\r\n    Similar to isinstance, but if 'typ' is a parametrized generic Type, it is first transformed into \r\n    its base generic class so that the instance check works. It is also robust to Union and Any.\r\n\r\n    :param inst: the instance to check against the type\r\n    :param typ: the type\r\n    :return:\r\n    \"\"\"\r\n    if typ is Any:\r\n        return True\r\n    elif is_union_type(typ):\r\n        typs = get_args(typ)\r\n        if len(typs) > 0:\r\n            return any(robust_isinstance(inst, t) for t in typs)\r\n        else:\r\n            return False\r\n    else:\r\n        return isinstance(inst, get_base_generic_type(typ))\r\n```\r\n\r\nNote that we could also provide a boolean parameter to enable finer-grain subclass/isinstance checks for example for parametrized generic types. For example to make this return False: `robust_isinstance([1], List[str])`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/8", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/8/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/8/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/8", "id": 256375782, "node_id": "MDU6SXNzdWUyNTYzNzU3ODI=", "number": 8, "title": "Take into account the _gorg update in typing module", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-08T21:26:45Z", "updated_at": "2017-10-08T16:45:38Z", "closed_at": "2017-10-08T16:45:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "``typing`` has switched from ``_gorg(obj)`` to ``obj._gorg``, this should be taken into account.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/5", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/5/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/5/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/5", "id": 249912953, "node_id": "MDU6SXNzdWUyNDk5MTI5NTM=", "number": 5, "title": "Support Python 3.5 as well", "user": {"login": "mitar", "id": 585279, "node_id": "MDQ6VXNlcjU4NTI3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitar", "html_url": "https://github.com/mitar", "followers_url": "https://api.github.com/users/mitar/followers", "following_url": "https://api.github.com/users/mitar/following{/other_user}", "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitar/subscriptions", "organizations_url": "https://api.github.com/users/mitar/orgs", "repos_url": "https://api.github.com/users/mitar/repos", "events_url": "https://api.github.com/users/mitar/events{/privacy}", "received_events_url": "https://api.github.com/users/mitar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 594614167, "node_id": "MDU6TGFiZWw1OTQ2MTQxNjc=", "url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-14T01:24:52Z", "updated_at": "2020-01-22T11:32:49Z", "closed_at": "2020-01-22T11:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Based on README, making a request. :-)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/2", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/2/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/2/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/2", "id": 238408013, "node_id": "MDU6SXNzdWUyMzg0MDgwMTM=", "number": 2, "title": "is_member_of_type", "user": {"login": "lucaswiman", "id": 123110, "node_id": "MDQ6VXNlcjEyMzExMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucaswiman", "html_url": "https://github.com/lucaswiman", "followers_url": "https://api.github.com/users/lucaswiman/followers", "following_url": "https://api.github.com/users/lucaswiman/following{/other_user}", "gists_url": "https://api.github.com/users/lucaswiman/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucaswiman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucaswiman/subscriptions", "organizations_url": "https://api.github.com/users/lucaswiman/orgs", "repos_url": "https://api.github.com/users/lucaswiman/repos", "events_url": "https://api.github.com/users/lucaswiman/events{/privacy}", "received_events_url": "https://api.github.com/users/lucaswiman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-25T21:32:09Z", "updated_at": "2017-06-29T09:04:13Z", "closed_at": "2017-06-25T22:15:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The most useful introspection methods I'd like to use from the `typing` module are basically the functions that were removed in https://github.com/python/typing/pull/283: checking whether a concrete object is compatible with a given type. This would be useful for simple runtime type assertions, for exploring the implications of PEP484 in the REPL, and annotations-based dispatch.\r\n\r\nPlease let me know what you think; I'd be very interested in helping to implement this. I can also submit a PR if that makes discussion easier.\r\n\r\n## Objections\r\n\r\n### Should this be in external tools?\r\n@1st1 [objected to this](https://github.com/python/typing/issues/136#issuecomment-104700656) on the grounds that it should be left to external tools, but it seems like implementing a reference for cases which are unambiguous according to PEP484 would be quite useful, and even helpful to building external tools of that kind. \r\n\r\nFor cases where something _other_ than recursive `isinstance` calls are required (e.g. type variables), a helpful error can be raised at runtime.\r\n\r\n### Mutable values\r\nThere was an objection to `__instancecheck__` and `__subclasscheck__` by BDFL-delegate @markshannon [here](https://github.com/python/typing/issues/136#issuecomment-104700131):\r\n```\r\nFor example,\r\nList[int] and List[str] and mutually incompatible types, yet\r\nisinstance([], List[int]) and isinstance([], List[str))\r\nboth return true.\r\n```\r\n\r\nThis is a bit tricky for mutable types, since `[]` is a member of `List[X]` for all `X`, but the _same list object_ might cease to be in `List[X]` when elements are added to it. For immutable types, the answer is unambiguous, so `Tuple[*]` could always deliver an unambiguous answer.\r\n\r\nFor `List[]`, `Dict[]` and other mutable types, my preference would be to check the types of the elements _right now, when the method is called_, and not at some future time when it may have been mutated. This would be a distinction between `mypy` and the runtime type checking, but this behavior seems more in keeping with the principle of least surprise, and would accord with the main intended use cases (REPL-based exploration of the type system, and simple runtime type assertions). \r\n\r\n## Implementation\r\n\r\nI think the implementation would be roughly like the following:\r\n```python\r\ndef is_member_of_type(obj, tp):\r\n    if has_type_variables(tp):\r\n        raise ValueError('Type variables cannot be determined at runtime')\r\n    if is_union(tp):\r\n        return any(is_member_of_type(obj, s) for s in tp.__args__)\r\n    elif is_tuple(tp):\r\n        ...\r\n    elif ...:\r\n        ...\r\n    else:\r\n        return isinstance(obj, tp)\r\n```\r\n\r\n## Include `issubtype` to match `issubclass`?\r\n\r\n`issubtype` could make sense as an addition, but it would involve introducing much more of the sorts of logic a typechecker should implement, e.g. the following:\r\n```python\r\n>>> from typing import *\r\n>>> class MyTuple(NamedTuple):\r\n...     foo: int\r\n...     bar: str\r\n... \r\n>>> issubtype(MyTuple, Tuple[int, str])\r\nTrue\r\n```\r\nFor this reason, I think it would make more sense to leave `issubtype` out of `typing_inspect`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/1", "repository_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect", "labels_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/1/comments", "events_url": "https://api.github.com/repos/ilevkivskyi/typing_inspect/issues/1/events", "html_url": "https://github.com/ilevkivskyi/typing_inspect/issues/1", "id": 226849217, "node_id": "MDU6SXNzdWUyMjY4NDkyMTc=", "number": 1, "title": "Do we need to support older versions of typing?", "user": {"login": "ilevkivskyi", "id": 12005495, "node_id": "MDQ6VXNlcjEyMDA1NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/12005495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilevkivskyi", "html_url": "https://github.com/ilevkivskyi", "followers_url": "https://api.github.com/users/ilevkivskyi/followers", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-07T10:54:52Z", "updated_at": "2017-09-08T21:27:41Z", "closed_at": "2017-09-08T21:27:41Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Currently only 3.6.1 is supported but maybe it makes sense to support also older versions.", "performed_via_github_app": null, "score": 1.0}]}