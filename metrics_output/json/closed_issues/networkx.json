{"total_count": 2191, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/networkx/networkx/issues/4172", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4172/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4172/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4172/events", "html_url": "https://github.com/networkx/networkx/issues/4172", "id": 681216158, "node_id": "MDU6SXNzdWU2ODEyMTYxNTg=", "number": 4172, "title": "Issues with write_dot", "user": {"login": "hcars", "id": 42817130, "node_id": "MDQ6VXNlcjQyODE3MTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/42817130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hcars", "html_url": "https://github.com/hcars", "followers_url": "https://api.github.com/users/hcars/followers", "following_url": "https://api.github.com/users/hcars/following{/other_user}", "gists_url": "https://api.github.com/users/hcars/gists{/gist_id}", "starred_url": "https://api.github.com/users/hcars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hcars/subscriptions", "organizations_url": "https://api.github.com/users/hcars/orgs", "repos_url": "https://api.github.com/users/hcars/repos", "events_url": "https://api.github.com/users/hcars/events{/privacy}", "received_events_url": "https://api.github.com/users/hcars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-18T17:37:02Z", "updated_at": "2020-08-19T14:29:40Z", "closed_at": "2020-08-19T14:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the following: \r\n```\r\nG = nx.barabasi_albert_graph(3, 2)\r\nnx.nx_agraph.write_dot(G, 'test.dot')\r\n```\r\nI get this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/hlc5v/.conda/envs/network_crawler/lib/python3.7/site-packages/pygraphviz/agraph.py\", line 665, in out_edges_iter\r\n    raise StopIteration\r\nStopIteration\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/hlc5v/.conda/envs/network_crawler/lib/python3.7/site-packages/networkx/drawing/nx_agraph.py\", line 194, in write_dot\r\n    A.clear()\r\n  File \"/home/hlc5v/.conda/envs/network_crawler/lib/python3.7/site-packages/pygraphviz/agraph.py\", line 951, in clear\r\n    self.remove_edges_from(self.edges())\r\n  File \"/home/hlc5v/.conda/envs/network_crawler/lib/python3.7/site-packages/pygraphviz/agraph.py\", line 573, in edges\r\n    return list(self.edges_iter(nbunch=nbunch, keys=keys))\r\n  File \"/home/hlc5v/.conda/envs/network_crawler/lib/python3.7/site-packages/pygraphviz/agraph.py\", line 734, in edges_iter\r\n    for e in self.out_edges_iter(keys=keys):\r\nRuntimeError: generator raised StopIteration\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4170", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4170/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4170/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4170/events", "html_url": "https://github.com/networkx/networkx/issues/4170", "id": 680246499, "node_id": "MDU6SXNzdWU2ODAyNDY0OTk=", "number": 4170, "title": "uninstall  networkx", "user": {"login": "ramankhurana", "id": 4996609, "node_id": "MDQ6VXNlcjQ5OTY2MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4996609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramankhurana", "html_url": "https://github.com/ramankhurana", "followers_url": "https://api.github.com/users/ramankhurana/followers", "following_url": "https://api.github.com/users/ramankhurana/following{/other_user}", "gists_url": "https://api.github.com/users/ramankhurana/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramankhurana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramankhurana/subscriptions", "organizations_url": "https://api.github.com/users/ramankhurana/orgs", "repos_url": "https://api.github.com/users/ramankhurana/repos", "events_url": "https://api.github.com/users/ramankhurana/events{/privacy}", "received_events_url": "https://api.github.com/users/ramankhurana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-17T13:42:29Z", "updated_at": "2020-08-20T22:40:00Z", "closed_at": "2020-08-20T22:40:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I install the package from source and i now need to get another version so I want to remove the existing version. Is there a way to do it in present setup.py? if not can this be added? \r\n\r\nThanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4165", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4165/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4165/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4165/events", "html_url": "https://github.com/networkx/networkx/issues/4165", "id": 679725164, "node_id": "MDU6SXNzdWU2Nzk3MjUxNjQ=", "number": 4165, "title": "Projection functions not defined for multigraphs", "user": {"login": "cvagg", "id": 53821022, "node_id": "MDQ6VXNlcjUzODIxMDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/53821022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvagg", "html_url": "https://github.com/cvagg", "followers_url": "https://api.github.com/users/cvagg/followers", "following_url": "https://api.github.com/users/cvagg/following{/other_user}", "gists_url": "https://api.github.com/users/cvagg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvagg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvagg/subscriptions", "organizations_url": "https://api.github.com/users/cvagg/orgs", "repos_url": "https://api.github.com/users/cvagg/repos", "events_url": "https://api.github.com/users/cvagg/events{/privacy}", "received_events_url": "https://api.github.com/users/cvagg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-16T09:52:46Z", "updated_at": "2020-08-17T14:16:29Z", "closed_at": "2020-08-17T11:00:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why are the projection functions for bipartite algorithms not defined for multigraphs? Is there a way to project a multigraph bipartite network in this module?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4158", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4158/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4158/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4158/events", "html_url": "https://github.com/networkx/networkx/issues/4158", "id": 679466480, "node_id": "MDU6SXNzdWU2Nzk0NjY0ODA=", "number": 4158, "title": "Review public functions in thresholds module.", "user": {"login": "rossbar", "id": 1268991, "node_id": "MDQ6VXNlcjEyNjg5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1268991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rossbar", "html_url": "https://github.com/rossbar", "followers_url": "https://api.github.com/users/rossbar/followers", "following_url": "https://api.github.com/users/rossbar/following{/other_user}", "gists_url": "https://api.github.com/users/rossbar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rossbar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rossbar/subscriptions", "organizations_url": "https://api.github.com/users/rossbar/orgs", "repos_url": "https://api.github.com/users/rossbar/repos", "events_url": "https://api.github.com/users/rossbar/events{/privacy}", "received_events_url": "https://api.github.com/users/rossbar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121671433, "node_id": "MDU6TGFiZWwxMjE2NzE0MzM=", "url": "https://api.github.com/repos/networkx/networkx/labels/Maintenance", "name": "Maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-15T00:41:26Z", "updated_at": "2020-08-15T17:28:24Z", "closed_at": "2020-08-15T17:28:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to #4157 - There are ~27 functions in the `algorithms.thresholds` module, but only two of them (`is_threshold_graph` and `find_threshold_graph`) are included in `__all__`. Of the non-included functions, some seem like they may be useful while others seem like they may be for internal use only. It would be nice to review this module to include the former in `__all__` and prepend the latter with `_` to further reinforce that they are only for internal use.\r\n\r\nAdditionally, it seems there may be some functions (e.g. `eigenvectors`) which provide functionality which is implemented elsewhere in networkx. It would be good to consolidate and get rid of any duplicate implementations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4143", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4143/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4143/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4143/events", "html_url": "https://github.com/networkx/networkx/issues/4143", "id": 675725402, "node_id": "MDU6SXNzdWU2NzU3MjU0MDI=", "number": 4143, "title": "Replace OrderedDict with dict in simple_paths module", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-09T16:06:15Z", "updated_at": "2020-08-11T00:39:34Z", "closed_at": "2020-08-11T00:39:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From Python 3.6 dicts are ordered by default and 3.6 is the minimum version for the project. In `all_simple_paths` function OrderedDict is used which can be replaced with dict. Since `popitem` and `__setitem__` are heavily used where `OrderedDict` performs some more [additional work](https://github.com/python/cpython/blob/e28b8c93878072dc02b116108ef5443084290d47/Lib/collections/__init__.py#L174) that is not needed here. Some perf benchmarks for a large graph.\r\n\r\nOrderedDict usage : https://github.com/networkx/networkx/blob/522c6f8c6ad04da883ca9140c7788a02f911e218/networkx/algorithms/simple_paths.py#L242\r\n\r\n```python\r\nimport networkx as nx\r\nimport networkx.algorithms.simple_paths as sp\r\n\r\nG = nx.complete_graph(10)\r\nlist(sp.all_simple_paths(G, source=0, target=9))\r\n```\r\n\r\nOn master branch : \r\n\r\n```\r\npython -m pyperf timeit -s 'import networkx as nx; import networkx.algorithms.simple_paths as sp; G = nx.complete_graph(10)' 'list(sp.all_simple_paths(G, source=0, target=9))' -o master.json      \r\n.....................\r\nMean +- std dev: 921 ms +- 51 ms\r\n```\r\n\r\nOn my branch replacing OrderedDict with dict : \r\n\r\n```\r\npython -m pyperf timeit -s 'import networkx as nx; import networkx.algorithms.simple_paths as sp; G = nx.complete_graph(10)' 'list(sp.all_simple_paths(G, source=0, target=9))' -o improve_perf.json \r\n.....................\r\nMean +- std dev: 783 ms +- 20 ms\r\n```\r\n\r\nComparison shows 15% faster \r\n\r\n```\r\npython -m pyperf compare_to master.json improve_perf.json\r\nMean +- std dev: [master] 921 ms +- 51 ms -> [improve_perf] 783 ms +- 20 ms: 1.18x faster (-15%)\r\n```\r\n\r\n\r\n```patch\r\ndiff --git a/networkx/algorithms/simple_paths.py b/networkx/algorithms/simple_paths.py\r\nindex f8cbe7e..b7d7d6d 100644\r\n--- a/networkx/algorithms/simple_paths.py\r\n+++ b/networkx/algorithms/simple_paths.py\r\n@@ -239,7 +239,7 @@ def all_simple_paths(G, source, target, cutoff=None):\r\n \r\n \r\n def _all_simple_paths_graph(G, source, targets, cutoff):\r\n-    visited = collections.OrderedDict.fromkeys([source])\r\n+    visited = dict.fromkeys([source])\r\n     stack = [iter(G[source])]\r\n     while stack:\r\n         children = stack[-1]\r\n@@ -265,7 +265,7 @@ def _all_simple_paths_graph(G, source, targets, cutoff):\r\n \r\n \r\n def _all_simple_paths_multigraph(G, source, targets, cutoff):\r\n-    visited = collections.OrderedDict.fromkeys([source])\r\n+    visited = dict.fromkeys([source])\r\n     stack = [(v for u, v in G.edges(source))]\r\n     while stack:\r\n         children = stack[-1]\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4137", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4137/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4137/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4137/events", "html_url": "https://github.com/networkx/networkx/issues/4137", "id": 674971381, "node_id": "MDU6SXNzdWU2NzQ5NzEzODE=", "number": 4137, "title": "Questions about transitivity computation", "user": {"login": "doudoubobo", "id": 47907647, "node_id": "MDQ6VXNlcjQ3OTA3NjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/47907647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doudoubobo", "html_url": "https://github.com/doudoubobo", "followers_url": "https://api.github.com/users/doudoubobo/followers", "following_url": "https://api.github.com/users/doudoubobo/following{/other_user}", "gists_url": "https://api.github.com/users/doudoubobo/gists{/gist_id}", "starred_url": "https://api.github.com/users/doudoubobo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doudoubobo/subscriptions", "organizations_url": "https://api.github.com/users/doudoubobo/orgs", "repos_url": "https://api.github.com/users/doudoubobo/repos", "events_url": "https://api.github.com/users/doudoubobo/events{/privacy}", "received_events_url": "https://api.github.com/users/doudoubobo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T12:06:28Z", "updated_at": "2020-08-09T00:13:31Z", "closed_at": "2020-08-09T00:13:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I saw the [code](https://networkx.github.io/documentation/stable/_modules/networkx/algorithms/cluster.html#transitivity) for computing transitivity of a graph, I found that the `_triangles_and_degree_iter` function is called to compute the triangle number for both directed and undirected graph. I am wondering if the `_directed_triangles_and_degree_iter` function should be used for directed graphs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4129", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4129/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4129/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4129/events", "html_url": "https://github.com/networkx/networkx/issues/4129", "id": 672900964, "node_id": "MDU6SXNzdWU2NzI5MDA5NjQ=", "number": 4129, "title": "edgelist in draw_network does not support arrays", "user": {"login": "Silmathoron", "id": 8523051, "node_id": "MDQ6VXNlcjg1MjMwNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8523051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Silmathoron", "html_url": "https://github.com/Silmathoron", "followers_url": "https://api.github.com/users/Silmathoron/followers", "following_url": "https://api.github.com/users/Silmathoron/following{/other_user}", "gists_url": "https://api.github.com/users/Silmathoron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Silmathoron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Silmathoron/subscriptions", "organizations_url": "https://api.github.com/users/Silmathoron/orgs", "repos_url": "https://api.github.com/users/Silmathoron/repos", "events_url": "https://api.github.com/users/Silmathoron/events{/privacy}", "received_events_url": "https://api.github.com/users/Silmathoron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2020-08-04T15:56:02Z", "updated_at": "2020-08-05T18:19:59Z", "closed_at": "2020-08-05T18:19:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using numpy 1.18.2 and networkx 2.4, it is not possible to use a numpy array for the `edgelist` argument of [``draw_networkx``](https://networkx.github.io/documentation/stable/reference/generated/networkx.drawing.nx_pylab.draw_networkx.html).\r\nIt raises:\r\n```\r\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\r\n```\r\n\r\nI normally would not have opened an issue for that but I do not see the point of the current implementation, so in case it can be changed harmlessly to support numpy arrays, that might be a win-win.\r\n\r\nThe issue comes from lines 575-579 on 2.4 ([lines 640-647](https://github.com/networkx/networkx/blob/master/networkx/drawing/nx_pylab.py#L640) on master) that read:\r\n\r\n```python\r\n    if edgelist is None:\r\n        edgelist = list(G.edges())\r\n\r\n    if not edgelist or len(edgelist) == 0:  # no edges!\r\n        return None\r\n```\r\n\r\nI am not sure what the combination of ``not edgelist`` and ``len(edgelist) == 0`` is for, here, so I would propose to change it to\r\n\r\n```python\r\n    if edgelist is None:\r\n        edgelist = list(G.edges())\r\n    elif len(edgelist) == 0:  # no edges!\r\n        return None\r\n```\r\n\r\nwhich should still do the job for all valid inputs I can think of and would also work with numpy arrays.\r\n\r\n**EDIT** if iterables should be supported, one could replace ``not edgelist`` by ``not isinstance(edgelist, Iterable)``", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4126", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4126/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4126/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4126/events", "html_url": "https://github.com/networkx/networkx/issues/4126", "id": 672401971, "node_id": "MDU6SXNzdWU2NzI0MDE5NzE=", "number": 4126, "title": "Longest path in DAG doesn't work with a dictionary containing a list of values", "user": {"login": "saurami", "id": 52619598, "node_id": "MDQ6VXNlcjUyNjE5NTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/52619598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saurami", "html_url": "https://github.com/saurami", "followers_url": "https://api.github.com/users/saurami/followers", "following_url": "https://api.github.com/users/saurami/following{/other_user}", "gists_url": "https://api.github.com/users/saurami/gists{/gist_id}", "starred_url": "https://api.github.com/users/saurami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saurami/subscriptions", "organizations_url": "https://api.github.com/users/saurami/orgs", "repos_url": "https://api.github.com/users/saurami/repos", "events_url": "https://api.github.com/users/saurami/events{/privacy}", "received_events_url": "https://api.github.com/users/saurami/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T23:30:38Z", "updated_at": "2020-08-07T18:29:32Z", "closed_at": "2020-08-07T18:29:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Data in the form of `{'1': ['2'], '2': ['3', '4'], '3': [], '4': ['5'], '5': ['6'], '6': []}` does **not** work when finding the longest path in a directed acyclic graph. \r\n\r\n```\r\nimport networkx as nx\r\n\r\nG = nx.DiGraph()\r\nG.add_edges_from(data.items())\r\npath = nx.dag_longest_path(G)\r\n```\r\n\r\nHowever, `data = {'a':'b', 'b':'c', 'c':'d'}` works with the above code.\r\n\r\nHow can I pass a dictionary containing a list of values, instead of simple key-value pairs?\r\n\r\nError Trace:\r\n\r\n```\r\nFile digraph.py line 695, in add_edges_from\r\n    if v not in self._succ:\r\nTypeError: unhashable type: 'list'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4122", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4122/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4122/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4122/events", "html_url": "https://github.com/networkx/networkx/issues/4122", "id": 670970738, "node_id": "MDU6SXNzdWU2NzA5NzA3Mzg=", "number": 4122, "title": "Export JSON with shapes and links between each nodes", "user": {"login": "vsharm29", "id": 43747438, "node_id": "MDQ6VXNlcjQzNzQ3NDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/43747438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsharm29", "html_url": "https://github.com/vsharm29", "followers_url": "https://api.github.com/users/vsharm29/followers", "following_url": "https://api.github.com/users/vsharm29/following{/other_user}", "gists_url": "https://api.github.com/users/vsharm29/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsharm29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsharm29/subscriptions", "organizations_url": "https://api.github.com/users/vsharm29/orgs", "repos_url": "https://api.github.com/users/vsharm29/repos", "events_url": "https://api.github.com/users/vsharm29/events{/privacy}", "received_events_url": "https://api.github.com/users/vsharm29/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-01T15:41:21Z", "updated_at": "2020-08-14T17:45:19Z", "closed_at": "2020-08-14T17:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to implement the logic where data comes from excel sheet and I add edge from the below list. It checks if it has an edge or not. And finally I export this in JSON. This JSON doesn't defines the proper connection and shapes as I am expecting. \r\n```\r\ndataList = ['open browser',\r\n 'type username',\r\n 'type password',\r\n 'click on submit button',\r\n 'user loged in',\r\n 'nan',\r\n 'open browser',\r\n 'type username',\r\n 'type password',\r\n 'click on submit button',\r\n 'user password is wrong']\r\n```\r\n\r\n```\r\nG = nx.MultiDiGraph()\r\ndef get_graph_from(dataList):\r\n    for i in range(0, len(dataList)-1):\r\n        curr_val = dataList[i]\r\n        next_val = dataList[i+1]\r\n        if (curr_val=='nan' or next_val=='nan'): \r\n            continue\r\n        if not G.has_edge(curr_val, next_val):\r\n            G.add_edge(curr_val, next_val)\r\n    return G\r\n```\r\nWhen I am trying to export it in JSON using `json_graph.node_link_data(G)`\r\nI am getting this as output \r\n\r\n```\r\n{'directed': True,\r\n 'multigraph': True,\r\n 'graph': {},\r\n 'nodes': [{'id': 'open browser'},\r\n  {'id': 'type username'},\r\n  {'id': 'type password'},\r\n  {'id': 'click on submit button'},\r\n  {'id': 'user loged in'},\r\n  {'id': 'user password is wrong'}],\r\n 'links': [{'source': 'open browser', 'target': 'type username', 'key': 0},\r\n  {'source': 'type username', 'target': 'type password', 'key': 0},\r\n  {'source': 'type password', 'target': 'click on submit button', 'key': 0},\r\n  {'source': 'click on submit button', 'target': 'user loged in', 'key': 0},\r\n  {'source': 'click on submit button',\r\n   'target': 'user password is wrong',\r\n   'key': 0}]}\r\n```\r\n\r\nI am expecting output like \r\n\r\n```\r\n{\r\n    \"list\": {\r\n        \"Elements\": [\r\n            {\"id\":1, \"text\":\"open browser\", \"Shape\":\"Rectangle\"},\r\n            {\"id\":2, \"text\":\"type username\", \"Shape\":\"Rectangle\"},\r\n            {\"id\":3, \"text\":\"type password\", \"Shape\":\"Rectangle\"},\r\n            {\"id\":4, \"text\":\"click on submit button\", \"Shape\":\"Rectangle\"},\r\n            {\"id\":5, \"text\":\"user logged in\", \"Shape\":\"Decision\"},\r\n            {\"id\":6, \"text\":\"user password is wrong\", \"Shape\":\"Rectangle\"}\r\n        ],\r\n        \"links\": [\r\n            {\"source\":\"1\", \"Target\":2},\r\n            {\"source\":\"2\", \"Target\":3},\r\n           {\"source\":\"3\", \"Target\":4},\r\n            {\"source\":\"4\", \"Target\":5},\r\n           {\"source\":\"4\", \"Target\":6}\r\n            \r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nIf shapes are **given/decided** Above output will help us to draw diagrams outside networkx library.\r\nFor your information I have tried deciding shape using this snippet.\r\n\r\n```\r\nElements = []\r\nfor i, node in enumerate(G.nodes, 1):\r\n    if G.out_degree(node)>1:\r\n        Elements.append({\"id\":i, \"text\":node, \"Shape\":\"Decision\"})\r\n    elif G.in_degree(node) == 0 or G.out_degree(node) == 0:\r\n        Elements.append({\"id\":i, \"text\":node, \"Shape\":\"Rectangle\"})\r\n    else:\r\n        Elements.append({\"id\":i, \"text\":node, \"Shape\":\"Rectangle\"})\r\n```\r\n\r\n\r\n[s1.xlsx](https://github.com/networkx/networkx/files/5010844/s1.xlsx)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4116", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4116/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4116/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4116/events", "html_url": "https://github.com/networkx/networkx/issues/4116", "id": 667984606, "node_id": "MDU6SXNzdWU2Njc5ODQ2MDY=", "number": 4116, "title": "Parse edgelist bug", "user": {"login": "hcars", "id": 42817130, "node_id": "MDQ6VXNlcjQyODE3MTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/42817130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hcars", "html_url": "https://github.com/hcars", "followers_url": "https://api.github.com/users/hcars/followers", "following_url": "https://api.github.com/users/hcars/following{/other_user}", "gists_url": "https://api.github.com/users/hcars/gists{/gist_id}", "starred_url": "https://api.github.com/users/hcars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hcars/subscriptions", "organizations_url": "https://api.github.com/users/hcars/orgs", "repos_url": "https://api.github.com/users/hcars/repos", "events_url": "https://api.github.com/users/hcars/events{/privacy}", "received_events_url": "https://api.github.com/users/hcars/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}, {"id": 625858619, "node_id": "MDU6TGFiZWw2MjU4NTg2MTk=", "url": "https://api.github.com/repos/networkx/networkx/labels/Good%20First%20Issue", "name": "Good First Issue", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-29T16:42:22Z", "updated_at": "2020-08-04T02:09:21Z", "closed_at": "2020-08-04T02:09:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "When calling `parse_edgelist()` using comma delimiters, it will fail to parse correctly fro edges with multiple attributes.\r\n\r\nEx. of bad edge:\r\n`1,2,{'test':1, 'test_other':2}`\r\n\r\n`parse_edgelist()` will recognize the comma in the braces as delimiter and try to split them up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4113", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4113/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4113/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4113/events", "html_url": "https://github.com/networkx/networkx/issues/4113", "id": 667548660, "node_id": "MDU6SXNzdWU2Njc1NDg2NjA=", "number": 4113, "title": "How to speed up calculating the graph edit distance between graphs whose size is about 30 nodes ?", "user": {"login": "tiankonghenlan20113046", "id": 10166585, "node_id": "MDQ6VXNlcjEwMTY2NTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/10166585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiankonghenlan20113046", "html_url": "https://github.com/tiankonghenlan20113046", "followers_url": "https://api.github.com/users/tiankonghenlan20113046/followers", "following_url": "https://api.github.com/users/tiankonghenlan20113046/following{/other_user}", "gists_url": "https://api.github.com/users/tiankonghenlan20113046/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiankonghenlan20113046/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiankonghenlan20113046/subscriptions", "organizations_url": "https://api.github.com/users/tiankonghenlan20113046/orgs", "repos_url": "https://api.github.com/users/tiankonghenlan20113046/repos", "events_url": "https://api.github.com/users/tiankonghenlan20113046/events{/privacy}", "received_events_url": "https://api.github.com/users/tiankonghenlan20113046/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T04:57:31Z", "updated_at": "2020-08-03T17:24:55Z", "closed_at": "2020-08-03T17:24:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,dear author,\r\n\r\nI have a dataset which covers about 2000 graphs, this dataset covers the graphs who has about 30 nodes.The dataset format is like as following\r\n\r\n```\r\n......\r\nt # 11808\r\nv 1 C  \r\nv 2 C  \r\nv 3 O  \r\nv 4 O  \r\nv 5 C  \r\nv 6 S  \r\nv 7 S  \r\nv 8 O  \r\nv 9 O  \r\nv 10 C  \r\ne 1 2 1\r\ne 1 4 1\r\ne 1 5 1\r\ne 2 3 1\r\ne 2 10 1\r\ne 5 6 1\r\ne 6 7 1\r\ne 7 8 2\r\ne 7 9 2\r\ne 7 10 1\r\nt # 15905\r\nv 1 C  \r\nv 2 C  \r\nv 3 C  \r\nv 4 C  \r\nv 5 C  \r\nv 6 C  \r\nv 7 S  \r\nv 8 C  \r\nv 9 C  \r\nv 10 C  \r\nv 11 C  \r\nv 12 C  \r\nv 13 N  \r\nv 14 O  \r\nv 15 O  \r\ne 1 2 1\r\ne 2 3 2\r\ne 3 4 1\r\ne 4 5 2\r\ne 1 6 2\r\ne 4 7 1\r\ne 7 8 1\r\ne 8 9 1\r\ne 9 10 2\r\ne 10 11 1\r\ne 11 12 2\r\ne 8 13 2\r\ne 7 14 2\r\ne 7 15 2\r\ne 5 6 1\r\ne 12 13 1\r\nt # 17157\r\n....\r\n```\r\nThe explanation of this train.txt is :\r\nt # 11808 means the graph's id is 11808, \r\nv 1 C  means the label of vertex 1 is 'C' \r\ne 1 2 1 means the label of the edge from vertex 1 to vertex 2 is 1.\r\n\r\nNow I should select a graph randomly as a query graph from this dataset. Next I will calculate the graph edit distance (GED) between this query graph and other graphs  from this dataset.  Before I calculate 1999 pais of graphs, I do a test between a pair of graphs. It cost me about 3.5 hours. [The code](https://github.com/networkx/networkx/blob/1800fe9108a7e9706c21659f9b9e01da7f4c74ef/networkx/algorithms/similarity.py#L37) I use is in the link ,it is shown as follows.\r\n\r\n```\r\npath,cost = nx.optimal_edit_paths(g,query_graph,\r\n                                                        node_match = lambda node1,node2:node1['label']==node2['label'],\r\n                                                        edge_match = lambda edge1:edge2:edge1['label']== edge2['label']) \r\n```\r\n\r\nIt is too slow for me. And want to speed up the speed. I  want to use parallel computing , but I cannot have the ability to implement it.So I have some questions : \r\n\r\n1.How to speed up the result of GED about 2000 pairs of graphs?\r\n2.Could I use the parallel computing to implement it ?\r\n\r\nThe result of the code is too important for me ,because I want to do an index of the dataset to complete a query duty. So I want to do a ground_truth by the networkx code above. Hope I can get a contact with you  who has the idea.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4111", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4111/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4111/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4111/events", "html_url": "https://github.com/networkx/networkx/issues/4111", "id": 666934879, "node_id": "MDU6SXNzdWU2NjY5MzQ4Nzk=", "number": 4111, "title": "Algorithms that should possibly be added to documentation", "user": {"login": "jamestrimble", "id": 4913181, "node_id": "MDQ6VXNlcjQ5MTMxODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4913181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamestrimble", "html_url": "https://github.com/jamestrimble", "followers_url": "https://api.github.com/users/jamestrimble/followers", "following_url": "https://api.github.com/users/jamestrimble/following{/other_user}", "gists_url": "https://api.github.com/users/jamestrimble/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamestrimble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamestrimble/subscriptions", "organizations_url": "https://api.github.com/users/jamestrimble/orgs", "repos_url": "https://api.github.com/users/jamestrimble/repos", "events_url": "https://api.github.com/users/jamestrimble/events{/privacy}", "received_events_url": "https://api.github.com/users/jamestrimble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}, {"id": 121671433, "node_id": "MDU6TGFiZWwxMjE2NzE0MzM=", "url": "https://api.github.com/repos/networkx/networkx/labels/Maintenance", "name": "Maintenance", "color": "d4c5f9", "default": false, "description": null}, {"id": 2250829228, "node_id": "MDU6TGFiZWwyMjUwODI5MjI4", "url": "https://api.github.com/repos/networkx/networkx/labels/Sprint", "name": "Sprint", "color": "ff44a8", "default": false, "description": "Good candidates for attention during a code sprint"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-07-28T09:46:37Z", "updated_at": "2020-08-16T04:04:30Z", "closed_at": "2020-08-16T04:04:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have made an attempt to find functions in `networkx/algorithms` that appear in the `__all__` variable of a `.py` file but are not referenced in the documentation:\r\n```\r\nall_simple_edge_paths\r\nall_triads\r\nall_triplets\r\nbetweenness_centrality_source\r\ndescendants_at_distance\r\nedge_betweenness\r\nfind_cliques_recursive\r\nfind_cores\r\nfind_threshold_graph\r\ngenerate_edgelist\r\ngreedy_coloring_with_interchange\r\nis_threshold_graph\r\nis_triad\r\nmaximum_matching\r\n_naive_greedy_modularity_communities\r\nnode_attribute_xy\r\nnode_degree_xy\r\nparse_edgelist\r\nproject\r\nrandom_triad\r\nread_edgelist\r\nrecursive_simple_cycles\r\ntransitive_closure_dag\r\ntriads_by_type\r\ntriad_type\r\ntrophic_differences\r\ntrophic_incoherence_parameter\r\ntrophic_levels\r\nwrite_edgelist\r\n```\r\n\r\nI haven't gone through each of these to check if it should be added to to documentation. I did look at a couple of examples:\r\n- `triads_by_type` was mentioned in the recent issue #4104, and it does look as though it should be added.\r\n- `algorithms.bipartite.matching.maximum_matching` is just an alias for another function and is mentioned in the text of the documentation, do perhaps it does not need to be added.\r\n\r\nThe following shows where the functions are defined. (This was created using a simple script. Hopefully it is correct!)\r\n\r\n```\r\nall_simple_edge_paths\r\n  networkx/algorithms/simple_paths.py\r\nall_triads\r\n  networkx/algorithms/triads.py\r\nall_triplets\r\n  networkx/algorithms/triads.py\r\nbetweenness_centrality_source\r\n  networkx/algorithms/centrality/betweenness_subset.py\r\ndescendants_at_distance\r\n  networkx/algorithms/traversal/breadth_first_search.py\r\nedge_betweenness\r\n  networkx/algorithms/centrality/betweenness_subset.py\r\n  networkx/algorithms/centrality/betweenness.py\r\nfind_cliques_recursive\r\n  networkx/algorithms/clique.py\r\nfind_cores\r\nfind_threshold_graph\r\n  networkx/algorithms/threshold.py\r\ngenerate_edgelist\r\n  networkx/algorithms/bipartite/edgelist.py\r\ngreedy_coloring_with_interchange\r\n  networkx/algorithms/coloring/greedy_coloring_with_interchange.py\r\nis_threshold_graph\r\n  networkx/algorithms/threshold.py\r\nis_triad\r\n  networkx/algorithms/triads.py\r\nmaximum_matching\r\n_naive_greedy_modularity_communities\r\n  networkx/algorithms/community/modularity_max.py\r\nnode_attribute_xy\r\n  networkx/algorithms/assortativity/pairs.py\r\nnode_degree_xy\r\n  networkx/algorithms/assortativity/pairs.py\r\nparse_edgelist\r\n  networkx/algorithms/bipartite/edgelist.py\r\nproject\r\n  networkx/algorithms/bipartite/projection.py\r\nrandom_triad\r\n  networkx/algorithms/triads.py\r\nread_edgelist\r\n  networkx/algorithms/bipartite/edgelist.py\r\nrecursive_simple_cycles\r\n  networkx/algorithms/cycles.py\r\ntransitive_closure_dag\r\n  networkx/algorithms/dag.py\r\ntriads_by_type\r\n  networkx/algorithms/triads.py\r\ntriad_type\r\n  networkx/algorithms/triads.py\r\ntrophic_differences\r\n  networkx/algorithms/centrality/trophic.py\r\ntrophic_incoherence_parameter\r\n  networkx/algorithms/centrality/trophic.py\r\ntrophic_levels\r\n  networkx/algorithms/centrality/trophic.py\r\nwrite_edgelist\r\n  networkx/algorithms/bipartite/edgelist.py\r\n```\r\n\r\nI used the following script to find the functions that appear to be missing from the documentation.\r\n\r\n```\r\nfind networkx/algorithms -name \"*.py\" | xargs cat | tr -d ' \\n' | grep -o '__all__=\\[[\"a-z0-9_,]*\\]' | grep -o '\"[a-z0-9_]*\"' | tr -d '\"' | sort | uniq > tmp_funcs.txt\r\ncat doc/reference/algorithms/*.rst | tr -d ' ' | sort | uniq > tmp_doc.txt\r\ncomm -2 -3 tmp_funcs.txt tmp_doc.txt \r\ncomm -2 -3 tmp_funcs.txt tmp_doc.txt > functions_possibly_missing_from_doc.txt\r\nfor f in $(cat functions_possibly_missing_from_doc.txt); do echo $f; grep -l -r \"def ${f}\" networkx/algorithms | grep -v \".pyc\" | sed 's/^/  /'; done\r\n```\r\n\r\nWould someone be happy to take a look at the list of functions, and possibly to check whether any functions from other modules such as graph generators are missing from the documentation?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4106", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4106/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4106/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4106/events", "html_url": "https://github.com/networkx/networkx/issues/4106", "id": 665556613, "node_id": "MDU6SXNzdWU2NjU1NTY2MTM=", "number": 4106, "title": "documentation for \"edge_key\" param in nx.from_pandas_edgelist() missing", "user": {"login": "iboates", "id": 13814358, "node_id": "MDQ6VXNlcjEzODE0MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13814358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iboates", "html_url": "https://github.com/iboates", "followers_url": "https://api.github.com/users/iboates/followers", "following_url": "https://api.github.com/users/iboates/following{/other_user}", "gists_url": "https://api.github.com/users/iboates/gists{/gist_id}", "starred_url": "https://api.github.com/users/iboates/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iboates/subscriptions", "organizations_url": "https://api.github.com/users/iboates/orgs", "repos_url": "https://api.github.com/users/iboates/repos", "events_url": "https://api.github.com/users/iboates/events{/privacy}", "received_events_url": "https://api.github.com/users/iboates/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}, {"id": 518998631, "node_id": "MDU6TGFiZWw1MTg5OTg2MzE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Needs%20PR", "name": "Needs PR", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-07-25T09:59:23Z", "updated_at": "2020-07-26T22:03:30Z", "closed_at": "2020-07-26T22:03:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just noticed this while working on implementing support for geopandas (I want it to behave as similar to pandas functions). I guess it's for MultiGraphs which I can't really wrap my head around.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4102", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4102/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4102/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4102/events", "html_url": "https://github.com/networkx/networkx/issues/4102", "id": 664548879, "node_id": "MDU6SXNzdWU2NjQ1NDg4Nzk=", "number": 4102, "title": "Match two graphs based on edit paths", "user": {"login": "LukasBommes", "id": 2178557, "node_id": "MDQ6VXNlcjIxNzg1NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2178557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasBommes", "html_url": "https://github.com/LukasBommes", "followers_url": "https://api.github.com/users/LukasBommes/followers", "following_url": "https://api.github.com/users/LukasBommes/following{/other_user}", "gists_url": "https://api.github.com/users/LukasBommes/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasBommes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasBommes/subscriptions", "organizations_url": "https://api.github.com/users/LukasBommes/orgs", "repos_url": "https://api.github.com/users/LukasBommes/repos", "events_url": "https://api.github.com/users/LukasBommes/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasBommes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T14:58:59Z", "updated_at": "2020-08-06T18:32:40Z", "closed_at": "2020-08-06T18:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey all,\r\n\r\nI am having two undirected graphs, A and B, without any node or edge attributes. I want to recover an error-tolerant mapping of the node labels between graph A and B. As suggested in Issue #4043 I am computing an edit path with  `nx.algorithms.similarity.optimize_edit_paths`. Now, I am wondering how to retrieve the node mapping from the node_edit/edge_edit paths.\r\n\r\nI guess, it is trivial, but I haven't used GED before and I am not really into the theory. So, does anyone have an idea, how to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4099", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4099/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4099/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4099/events", "html_url": "https://github.com/networkx/networkx/issues/4099", "id": 663325881, "node_id": "MDU6SXNzdWU2NjMzMjU4ODE=", "number": 4099, "title": "Tests incompatible with matplotlib 3.3.0", "user": {"login": "PureTryOut", "id": 1565836, "node_id": "MDQ6VXNlcjE1NjU4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PureTryOut", "html_url": "https://github.com/PureTryOut", "followers_url": "https://api.github.com/users/PureTryOut/followers", "following_url": "https://api.github.com/users/PureTryOut/following{/other_user}", "gists_url": "https://api.github.com/users/PureTryOut/gists{/gist_id}", "starred_url": "https://api.github.com/users/PureTryOut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PureTryOut/subscriptions", "organizations_url": "https://api.github.com/users/PureTryOut/orgs", "repos_url": "https://api.github.com/users/PureTryOut/repos", "events_url": "https://api.github.com/users/PureTryOut/events{/privacy}", "received_events_url": "https://api.github.com/users/PureTryOut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2020-07-21T21:39:33Z", "updated_at": "2020-07-21T22:52:45Z", "closed_at": "2020-07-21T22:34:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Matplotlib 3.3.0 has been released 5 days ago, and because of it the networkx tests are failing.\r\n\r\n```\r\n_______________________________ ERROR collecting networkx/drawing/tests/test_pylab.py _______________________________\r\nnetworkx/drawing/tests/test_pylab.py:7: in <module>\r\n    mpl.use('PS', warn=False)\r\nE   TypeError: use() got an unexpected keyword argument 'warn'\r\n```\r\n\r\nSeems the API has changed a bit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4098", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4098/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4098/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4098/events", "html_url": "https://github.com/networkx/networkx/issues/4098", "id": 662750948, "node_id": "MDU6SXNzdWU2NjI3NTA5NDg=", "number": 4098, "title": "How to print the subgraph isomorphism between two graphs?", "user": {"login": "tiankonghenlan20113046", "id": 10166585, "node_id": "MDQ6VXNlcjEwMTY2NTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/10166585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiankonghenlan20113046", "html_url": "https://github.com/tiankonghenlan20113046", "followers_url": "https://api.github.com/users/tiankonghenlan20113046/followers", "following_url": "https://api.github.com/users/tiankonghenlan20113046/following{/other_user}", "gists_url": "https://api.github.com/users/tiankonghenlan20113046/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiankonghenlan20113046/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiankonghenlan20113046/subscriptions", "organizations_url": "https://api.github.com/users/tiankonghenlan20113046/orgs", "repos_url": "https://api.github.com/users/tiankonghenlan20113046/repos", "events_url": "https://api.github.com/users/tiankonghenlan20113046/events{/privacy}", "received_events_url": "https://api.github.com/users/tiankonghenlan20113046/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-21T08:37:15Z", "updated_at": "2020-07-24T04:10:53Z", "closed_at": "2020-07-22T17:46:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear  author, @jwegis @lonnen @cournape @alexbrc \r\nI have two networkx graphs g1 and g2. The g1 and g2 defines as following:\r\n```\r\n#This is g1's definition\r\ng1 = nx.Graph()\r\ng1.add_node('1',label = 'c1')\r\ng1.add_node('2',label = 'h')\r\ng1.add_node('3',label = 'h')\r\nedges = [('1','2',{'label':'1'}),('1','3',{'label':'1'}),('2','3',{'label':'1'})] \r\ng1.add_edges_from(edges)\r\n#This is g2's definition\r\ng2 = nx.Graph()\r\ng2.add_node('10',label = 'c1')\r\ng2.add_node('11',label = 'h')\r\ng2.add_node('12',label = 'h')\r\nedges = [('10','11',{'label':'1'}),('10','12',{'label':'1'})] #g2 has 2 edges now\r\ng2.add_edges_from(edges)\r\n```\r\nIf we plot the two graphs on a paper according the g1 and g2 above ,we will see the expected \"subgraph isomorphism\" or \"mapping\"---------\r\n{'1':'10','2':'11','3':'12'}. \r\nBut when I [use the code](https://github.com/networkx/networkx/blob/3d1732ef5c19ccff5d491b8b2650ce606cf673a3/networkx/algorithms/isomorphism/isomorphvf2.py#L1) to check the mapping from g1 to g2, it prints nothing. the code is as following:\r\n```\r\nGM = nx.algorithms.isomorphism.GraphMatcher(g1,g2,\r\n                                            node_match=lambda n1,n2:n1['label']==n2['label'],\r\n                                            edge_match = lambda x,y:x['label']==y['label'] )\r\n\r\nfor subgraph in GM.subgraph_isomorphisms_iter():\r\n    if subgraph:\r\n        print(\"mapping:\"+str(subgraph))\r\n    else :\r\n        print(\"no matching\")\r\n```\r\n\r\nBut when I deleting an edge from g2,the networkx format like this:\r\n```\r\ng2 = nx.Graph()\r\ng2.add_node('10',label = 'c1')\r\ng2.add_node('11',label = 'h')\r\nedges = [('10','11',{'label':'1'})] #g2 only have 1 edge.\r\ng2.add_edges_from(edges)\r\n\r\nfor subgraph in GM.subgraph_isomorphisms_iter():\r\n    if subgraph:\r\n        print(\"mapping:\"+str(subgraph))\r\n    else :\r\n        print(\"no matching\")\r\n```\r\nit gives me the answer:\r\n```\r\nmapping:{'1': '10', '3': '11'}\r\nmapping:{'1': '10', '2': '11'}\r\n```\r\nSo I have some questions :\r\n1. How could I find all mappings from g1 to g2? The method I use is right?\r\n2. Why did I not get the mapping when I first define the g2 who has 2 edges? why did I get the mapping after removing one edge from g2 ?\r\n\r\nI am doing some research on \"subgraph isomorphism\" and I want to make the use of this algorithm. Maybe my clarification is not clear and my understanding is too shallow to express what I want. But I want to have some discussion with you. Looking forward to your reply.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4095", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4095/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4095/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4095/events", "html_url": "https://github.com/networkx/networkx/issues/4095", "id": 661587418, "node_id": "MDU6SXNzdWU2NjE1ODc0MTg=", "number": 4095, "title": "Modularity does not appear on documentation website", "user": {"login": "bernwaldl", "id": 4204375, "node_id": "MDQ6VXNlcjQyMDQzNzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4204375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernwaldl", "html_url": "https://github.com/bernwaldl", "followers_url": "https://api.github.com/users/bernwaldl/followers", "following_url": "https://api.github.com/users/bernwaldl/following{/other_user}", "gists_url": "https://api.github.com/users/bernwaldl/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernwaldl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernwaldl/subscriptions", "organizations_url": "https://api.github.com/users/bernwaldl/orgs", "repos_url": "https://api.github.com/users/bernwaldl/repos", "events_url": "https://api.github.com/users/bernwaldl/events{/privacy}", "received_events_url": "https://api.github.com/users/bernwaldl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2020-07-20T09:24:08Z", "updated_at": "2020-07-23T16:26:01Z", "closed_at": "2020-07-20T13:00:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The function `networkx.algorithms.community.quality.modularity` is not featured on the [documentation website](https://networkx.github.io/documentation/latest/reference/algorithms/community.html?highlight=quality#module-networkx.algorithms.community.quality) and cannot also not be found in [search](https://networkx.github.io/documentation/latest/search.html?q=modularity&check_keywords=yes&area=default). The function does however have a documentation in the [source code](https://github.com/networkx/networkx/blob/d0dbd76ca7129c83311cd9f42e5ca0061176d7f2/networkx/algorithms/community/quality.py#L243) and is marked as importable via `from networkx.algorithms.community.quality import *` in [this line](https://github.com/networkx/networkx/blob/d0dbd76ca7129c83311cd9f42e5ca0061176d7f2/networkx/algorithms/community/quality.py#L14). This applies both to the latest and stable release.\r\n\r\nIs it intentional that it does not appear on the website? Because not finding the function on the website caused me to implement it myself, which is not necessarily desirable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4092", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4092/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4092/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4092/events", "html_url": "https://github.com/networkx/networkx/issues/4092", "id": 660562643, "node_id": "MDU6SXNzdWU2NjA1NjI2NDM=", "number": 4092, "title": "square matrix error using from_pandas_adjacency", "user": {"login": "hfl112", "id": 33510929, "node_id": "MDQ6VXNlcjMzNTEwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/33510929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hfl112", "html_url": "https://github.com/hfl112", "followers_url": "https://api.github.com/users/hfl112/followers", "following_url": "https://api.github.com/users/hfl112/following{/other_user}", "gists_url": "https://api.github.com/users/hfl112/gists{/gist_id}", "starred_url": "https://api.github.com/users/hfl112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hfl112/subscriptions", "organizations_url": "https://api.github.com/users/hfl112/orgs", "repos_url": "https://api.github.com/users/hfl112/repos", "events_url": "https://api.github.com/users/hfl112/events{/privacy}", "received_events_url": "https://api.github.com/users/hfl112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-19T03:46:27Z", "updated_at": "2020-07-19T04:59:41Z", "closed_at": "2020-07-19T04:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got an error when using like this. but the matrix.shape is (521, 521), a square one. why the column shape is wrong using nx.from_pandas_adjacency?\r\n\r\nG = nx.from_pandas_adjacency(matrix)\r\n\r\n---------------------------------------------------------------------------\r\nNetworkXError                             Traceback (most recent call last)\r\n<ipython-input-9-40f2400c9b7c> in <module>\r\n----> 1 G = nx.from_pandas_adjacency(matrix)\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/networkx/convert_matrix.py in from_pandas_adjacency(df, create_using)\r\n    191 \r\n    192     A = df.values\r\n--> 193     G = from_numpy_matrix(A, create_using=create_using)\r\n    194 \r\n    195     nx.relabel.relabel_nodes(G, dict(enumerate(df.columns)), copy=False)\r\n\r\n~/opt/anaconda3/lib/python3.7/site-packages/networkx/convert_matrix.py in from_numpy_matrix(A, parallel_edges, create_using)\r\n    559     if n != m:\r\n    560         raise nx.NetworkXError(\"Adjacency matrix is not square.\",\r\n--> 561                                \"nx,ny=%s\" % (A.shape,))\r\n    562     dt = A.dtype\r\n    563     try:\r\n\r\nNetworkXError: ('Adjacency matrix is not square.', 'nx,ny=(521, 585)')", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4084", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4084/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4084/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4084/events", "html_url": "https://github.com/networkx/networkx/issues/4084", "id": 659152733, "node_id": "MDU6SXNzdWU2NTkxNTI3MzM=", "number": 4084, "title": "small worldness of multigraphs", "user": {"login": "Pegdwende649", "id": 54888779, "node_id": "MDQ6VXNlcjU0ODg4Nzc5", "avatar_url": "https://avatars0.githubusercontent.com/u/54888779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pegdwende649", "html_url": "https://github.com/Pegdwende649", "followers_url": "https://api.github.com/users/Pegdwende649/followers", "following_url": "https://api.github.com/users/Pegdwende649/following{/other_user}", "gists_url": "https://api.github.com/users/Pegdwende649/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pegdwende649/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pegdwende649/subscriptions", "organizations_url": "https://api.github.com/users/Pegdwende649/orgs", "repos_url": "https://api.github.com/users/Pegdwende649/repos", "events_url": "https://api.github.com/users/Pegdwende649/events{/privacy}", "received_events_url": "https://api.github.com/users/Pegdwende649/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-17T11:03:31Z", "updated_at": "2020-07-17T21:11:01Z", "closed_at": "2020-07-17T21:11:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems to be no implementation of the sigma and omega values for the multigraphs. How could i retrieve these values ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4082", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4082/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4082/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4082/events", "html_url": "https://github.com/networkx/networkx/issues/4082", "id": 658762607, "node_id": "MDU6SXNzdWU2NTg3NjI2MDc=", "number": 4082, "title": "draw_networkx_edges breaks with latest matplotlib-3.3.0", "user": {"login": "dPys", "id": 16432683, "node_id": "MDQ6VXNlcjE2NDMyNjgz", "avatar_url": "https://avatars1.githubusercontent.com/u/16432683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dPys", "html_url": "https://github.com/dPys", "followers_url": "https://api.github.com/users/dPys/followers", "following_url": "https://api.github.com/users/dPys/following{/other_user}", "gists_url": "https://api.github.com/users/dPys/gists{/gist_id}", "starred_url": "https://api.github.com/users/dPys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dPys/subscriptions", "organizations_url": "https://api.github.com/users/dPys/orgs", "repos_url": "https://api.github.com/users/dPys/repos", "events_url": "https://api.github.com/users/dPys/events{/privacy}", "received_events_url": "https://api.github.com/users/dPys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T02:19:42Z", "updated_at": "2020-07-17T04:03:18Z", "closed_at": "2020-07-17T04:03:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "FYI \r\n\r\n```   \r\n def draw_networkx_edges(G, pos,\r\n                            edgelist=None,\r\n                            width=1.0,\r\n                            edge_color='k',\r\n                            style='solid',\r\n                            alpha=1.0,\r\n                            arrowstyle='-|>',\r\n                            arrowsize=10,\r\n                            edge_cmap=None,\r\n                            edge_vmin=None,\r\n                            edge_vmax=None,\r\n                            ax=None,\r\n                            arrows=True,\r\n                            label=None,\r\n                            node_size=300,\r\n                            nodelist=None,\r\n                            node_shape=\"o\",\r\n                            connectionstyle=None,\r\n                            **kwds):\r\n        \"\"\"Draw the edges of the graph G.\r\n    \r\n        This draws only the edges of the graph G.\r\n    \r\n        Parameters\r\n        ----------\r\n        G : graph\r\n           A networkx graph\r\n    \r\n        pos : dictionary\r\n           A dictionary with nodes as keys and positions as values.\r\n           Positions should be sequences of length 2.\r\n    \r\n        edgelist : collection of edge tuples\r\n           Draw only specified edges(default=G.edges())\r\n    \r\n        width : float, or array of floats\r\n           Line width of edges (default=1.0)\r\n    \r\n        edge_color : color string, or array of floats\r\n           Edge color. Can be a single color format string (default='r'),\r\n           or a sequence of colors with the same length as edgelist.\r\n           If numeric values are specified they will be mapped to\r\n           colors using the edge_cmap and edge_vmin,edge_vmax parameters.\r\n    \r\n        style : string\r\n           Edge line style (default='solid') (solid|dashed|dotted,dashdot)\r\n    \r\n        alpha : float\r\n           The edge transparency (default=1.0)\r\n    \r\n        edge_ cmap : Matplotlib colormap\r\n           Colormap for mapping intensities of edges (default=None)\r\n    \r\n        edge_vmin,edge_vmax : floats\r\n           Minimum and maximum for edge colormap scaling (default=None)\r\n    \r\n        ax : Matplotlib Axes object, optional\r\n           Draw the graph in the specified Matplotlib axes.\r\n    \r\n        arrows : bool, optional (default=True)\r\n           For directed graphs, if True draw arrowheads.\r\n           Note: Arrows will be the same color as edges.\r\n    \r\n        arrowstyle : str, optional (default='-|>')\r\n           For directed graphs, choose the style of the arrow heads.\r\n           See :py:class: `matplotlib.patches.ArrowStyle` for more\r\n           options.\r\n    \r\n        arrowsize : int, optional (default=10)\r\n           For directed graphs, choose the size of the arrow head head's length and\r\n           width. See :py:class: `matplotlib.patches.FancyArrowPatch` for attribute\r\n           `mutation_scale` for more info.\r\n    \r\n        connectionstyle : str, optional (default=None)\r\n           Pass the connectionstyle parameter to create curved arc of rounding\r\n           radius rad. For example, connectionstyle='arc3,rad=0.2'.\r\n           See :py:class: `matplotlib.patches.ConnectionStyle` and\r\n           :py:class: `matplotlib.patches.FancyArrowPatch` for more info.\r\n    \r\n        label : [None| string]\r\n           Label for legend\r\n    \r\n        Returns\r\n        -------\r\n        matplotlib.collection.LineCollection\r\n            `LineCollection` of the edges\r\n    \r\n        list of matplotlib.patches.FancyArrowPatch\r\n            `FancyArrowPatch` instances of the directed edges\r\n    \r\n        Depending whether the drawing includes arrows or not.\r\n    \r\n        Notes\r\n        -----\r\n        For directed graphs, arrows are drawn at the head end.  Arrows can be\r\n        turned off with keyword arrows=False. Be sure to include `node_size` as a\r\n        keyword argument; arrows are drawn considering the size of nodes.\r\n    \r\n        Examples\r\n        --------\r\n        >>> G = nx.dodecahedral_graph()\r\n        >>> edges = nx.draw_networkx_edges(G, pos=nx.spring_layout(G))\r\n    \r\n        >>> G = nx.DiGraph()\r\n        >>> G.add_edges_from([(1, 2), (1, 3), (2, 3)])\r\n        >>> arcs = nx.draw_networkx_edges(G, pos=nx.spring_layout(G))\r\n        >>> alphas = [0.3, 0.4, 0.5]\r\n        >>> for i, arc in enumerate(arcs):  # change alpha values of arcs\r\n        ...     arc.set_alpha(alphas[i])\r\n    \r\n        Also see the NetworkX drawing examples at\r\n        https://networkx.github.io/documentation/latest/auto_examples/index.html\r\n    \r\n        See Also\r\n        --------\r\n        draw()\r\n        draw_networkx()\r\n        draw_networkx_nodes()\r\n        draw_networkx_labels()\r\n        draw_networkx_edge_labels()\r\n        \"\"\"\r\n        try:\r\n            import matplotlib\r\n            import matplotlib.pyplot as plt\r\n            import matplotlib.cbook as cb\r\n            from matplotlib.colors import colorConverter, Colormap, Normalize\r\n            from matplotlib.collections import LineCollection\r\n            from matplotlib.patches import FancyArrowPatch\r\n            import numpy as np\r\n        except ImportError:\r\n            raise ImportError(\"Matplotlib required for draw()\")\r\n        except RuntimeError:\r\n            print(\"Matplotlib unable to open display\")\r\n            raise\r\n    \r\n        if ax is None:\r\n            ax = plt.gca()\r\n    \r\n        if edgelist is None:\r\n            edgelist = list(G.edges())\r\n    \r\n        if not edgelist or len(edgelist) == 0:  # no edges!\r\n            return None\r\n    \r\n        if nodelist is None:\r\n            nodelist = list(G.nodes())\r\n    \r\n        # set edge positions\r\n        edge_pos = np.asarray([(pos[e[0]], pos[e[1]]) for e in edgelist])\r\n    \r\n>       if not cb.iterable(width):\r\nE       AttributeError: module 'matplotlib.cbook' has no attribute 'iterable'\r\n\r\n/opt/circleci/.pyenv/versions/3.6.5/lib/python3.6/site-packages/networkx/drawing/nx_pylab.py:579: AttributeError\r\n```\r\n\r\ncbook.iterable is now deprecated. Should just be a quick swap out with np.iterable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4077", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4077/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4077/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4077/events", "html_url": "https://github.com/networkx/networkx/issues/4077", "id": 657001061, "node_id": "MDU6SXNzdWU2NTcwMDEwNjE=", "number": 4077, "title": "nx.network_simplex returned flow dict is not ordered", "user": {"login": "ph4z", "id": 4169362, "node_id": "MDQ6VXNlcjQxNjkzNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4169362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ph4z", "html_url": "https://github.com/ph4z", "followers_url": "https://api.github.com/users/ph4z/followers", "following_url": "https://api.github.com/users/ph4z/following{/other_user}", "gists_url": "https://api.github.com/users/ph4z/gists{/gist_id}", "starred_url": "https://api.github.com/users/ph4z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ph4z/subscriptions", "organizations_url": "https://api.github.com/users/ph4z/orgs", "repos_url": "https://api.github.com/users/ph4z/repos", "events_url": "https://api.github.com/users/ph4z/events{/privacy}", "received_events_url": "https://api.github.com/users/ph4z/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T01:49:12Z", "updated_at": "2020-07-22T17:53:40Z", "closed_at": "2020-07-22T17:53:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code snippet below create a random digraph, set demand on some nodes and then print the computed flow dict:\r\n```python\r\n\r\nR = nx.fast_gnp_random_graph(10, 0.5, directed=True)\r\nnx.set_node_attributes(R, {7:{\"demand\":-7}, 3:{\"demand\":2}, 1:{\"demand\":-3}, 5:{\"demand\":3}, 6:{\"demand\":3}, 9:{\"demand\":2}})\r\nnx.network_simplex(R, demand='demand', capacity='capacity', weight='weight')[1]\r\n{0: {1: 0, 3: 4, 7: 0}, 1: {2: 3, 3: 0, 4: 0}, 2: {0: 0, 1: 0, 3: 3, 7: 0}, 3: {1: 0, 4: 0, 5: 0, 6: 3, 7: 0, 9: 2}, 4: {3: 0, 5: 0, 7: 0, 8: 0}, 5: {3: 0, 7: 0, 8: 0, 9: 0}, 6: {0: 0, 4: 0, 7: 0}, 7: {0: 4, 1: 0, 5: 3, 6: 0, 8: 0, 9: 0}, 8: {1: 0, 3: 0, 5: 0, 6: 0, 7: 0}, 9: {0: 0, 1: 0, 2: 0, 3: 0, 5: 0, 6: 0, 8: 0}}\r\n```\r\nIt seems the returned dict is based on the order of the nodes, but most of time is is not consistent with the resulting flow.\r\nOn the example above, the first non null entry is about sending 4 from node 0 to node 3. \r\nThis issue is that node 0 is neither a sink or a source node.\r\n\r\nThe flow dict that respect order flow should be (without null values):\r\n```python\r\n{7: {0: 4, 5: 3}, {0: {3: 4}, {1: {2: 3}, 2: {3: 3}, 3: {6: 3, 9: 2}}\r\n````\r\n\r\nAny idea how to make the output of network_simplex consistent with the flow order ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4073", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4073/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4073/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4073/events", "html_url": "https://github.com/networkx/networkx/issues/4073", "id": 656452260, "node_id": "MDU6SXNzdWU2NTY0NTIyNjA=", "number": 4073, "title": "Add \"Jefferson High\" network to the built-in networks", "user": {"login": "joelmiller", "id": 2914057, "node_id": "MDQ6VXNlcjI5MTQwNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2914057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelmiller", "html_url": "https://github.com/joelmiller", "followers_url": "https://api.github.com/users/joelmiller/followers", "following_url": "https://api.github.com/users/joelmiller/following{/other_user}", "gists_url": "https://api.github.com/users/joelmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelmiller/subscriptions", "organizations_url": "https://api.github.com/users/joelmiller/orgs", "repos_url": "https://api.github.com/users/joelmiller/repos", "events_url": "https://api.github.com/users/joelmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/joelmiller/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121661134, "node_id": "MDU6TGFiZWwxMjE2NjExMzQ=", "url": "https://api.github.com/repos/networkx/networkx/labels/Enhancement", "name": "Enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-14T09:01:49Z", "updated_at": "2020-07-30T17:21:19Z", "closed_at": "2020-07-30T17:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Jefferson High network from \"Chains of affection\" would be a nice network to add to the library.\r\n\r\n[I may try to do this some day in the future when I have time again]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4068", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4068/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4068/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4068/events", "html_url": "https://github.com/networkx/networkx/issues/4068", "id": 655354508, "node_id": "MDU6SXNzdWU2NTUzNTQ1MDg=", "number": 4068, "title": "instructions for removing self-edges in `configuration_model` are out of date", "user": {"login": "joelmiller", "id": 2914057, "node_id": "MDQ6VXNlcjI5MTQwNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2914057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelmiller", "html_url": "https://github.com/joelmiller", "followers_url": "https://api.github.com/users/joelmiller/followers", "following_url": "https://api.github.com/users/joelmiller/following{/other_user}", "gists_url": "https://api.github.com/users/joelmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelmiller/subscriptions", "organizations_url": "https://api.github.com/users/joelmiller/orgs", "repos_url": "https://api.github.com/users/joelmiller/repos", "events_url": "https://api.github.com/users/joelmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/joelmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-12T08:15:56Z", "updated_at": "2020-07-20T13:07:04Z", "closed_at": "2020-07-20T13:07:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the configuration model documentation, it says to use `G.remove_edges_from(nx.selfloop_edges(G))` to remove self-edges.  This no longer works (I think it broke with 2.0).  Something to do with the dictionary changing size while iterating.\r\n\r\nThe documentation should be updated to `G.remove_edges_from(list(nx.selfloop_edges(G)))`.\r\n\r\nIt's curious that this breaks, because it does seem to work on directed graphs.  That suggests that there's something I don't understand about the internal details of how the different graph types are implemented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4065", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4065/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4065/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4065/events", "html_url": "https://github.com/networkx/networkx/issues/4065", "id": 655159759, "node_id": "MDU6SXNzdWU2NTUxNTk3NTk=", "number": 4065, "title": "Add option to specify a column for edge keys in Multi(Di)Graphs when reading through pandas", "user": {"login": "MridulS", "id": 5363860, "node_id": "MDQ6VXNlcjUzNjM4NjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5363860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MridulS", "html_url": "https://github.com/MridulS", "followers_url": "https://api.github.com/users/MridulS/followers", "following_url": "https://api.github.com/users/MridulS/following{/other_user}", "gists_url": "https://api.github.com/users/MridulS/gists{/gist_id}", "starred_url": "https://api.github.com/users/MridulS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MridulS/subscriptions", "organizations_url": "https://api.github.com/users/MridulS/orgs", "repos_url": "https://api.github.com/users/MridulS/repos", "events_url": "https://api.github.com/users/MridulS/events{/privacy}", "received_events_url": "https://api.github.com/users/MridulS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121661134, "node_id": "MDU6TGFiZWwxMjE2NjExMzQ=", "url": "https://api.github.com/repos/networkx/networkx/labels/Enhancement", "name": "Enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2020-07-11T07:57:34Z", "updated_at": "2020-07-21T04:59:51Z", "closed_at": "2020-07-21T04:59:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When reading in graphs using pandas `from_pandas_edgelist` should we have an option to let users specify the columns from the dataframe for edge keys?\r\n\r\nExample\r\n``` python\r\nG = nx.from_pandas_edgelist(dataframe, source=source,\r\n       target=target, edge_attr=[attr1, attr2, attr3], create_using=nx.MultiGraph())\r\n```\r\ncurrently networkx will create keys for this graph automatically (0, 1, 2, 3 ......) and to access the edge data we would need to do something like `G[source_node][edge_node][0]`\r\n\r\nit would be nice to add an option of adding custom edge keys (assuming we want attr1 to be edge key)\r\n``` python\r\nG = nx.from_pandas_edgelist(dataframe, source=source,\r\n       target=target, edge_attr=[attr2, attr3], edge_key=attr1, create_using=nx.MultiGraph())\r\n```\r\nand access the edge information using  `G[source_node][edge_node][attr1_node]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4058", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4058/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4058/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4058/events", "html_url": "https://github.com/networkx/networkx/issues/4058", "id": 653882021, "node_id": "MDU6SXNzdWU2NTM4ODIwMjE=", "number": 4058, "title": "relabel_nodes on MultiGraphs does not preserve both edges when two nodes are replaced by one", "user": {"login": "nik0sc", "id": 24191562, "node_id": "MDQ6VXNlcjI0MTkxNTYy", "avatar_url": "https://avatars0.githubusercontent.com/u/24191562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nik0sc", "html_url": "https://github.com/nik0sc", "followers_url": "https://api.github.com/users/nik0sc/followers", "following_url": "https://api.github.com/users/nik0sc/following{/other_user}", "gists_url": "https://api.github.com/users/nik0sc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nik0sc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nik0sc/subscriptions", "organizations_url": "https://api.github.com/users/nik0sc/orgs", "repos_url": "https://api.github.com/users/nik0sc/repos", "events_url": "https://api.github.com/users/nik0sc/events{/privacy}", "received_events_url": "https://api.github.com/users/nik0sc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 6, "created_at": "2020-07-09T08:45:48Z", "updated_at": "2020-08-15T04:56:36Z", "closed_at": "2020-08-15T04:56:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the graph contains edges (0,1) and (0,2), and I relabel both 1 and 2 to 3, I expected two edges from (0,3) but only one node is preserved.\r\n\r\nMulti*Graph supports parallel edges between nodes and I expected it to preserve both edges when \"merging\" the two old nodes together.\r\n\r\nTested on both networkx 2.4 and the latest version on master.\r\n\r\n```python\r\nimport networkx as nx\r\n\r\nG = nx.MultiDiGraph([(0,1),(0,2)])\r\nG[0][1][0][\"value\"] = \"a\"\r\nG[0][2][0][\"value\"] = \"b\"\r\n\r\nprint(G[0])\r\n# Output:\r\n# {1: {0: {'value': 'a'}}, 2: {0: {'value': 'b'}}}\r\n\r\nmapping = {1:3, 2:3}\r\n\r\nnx.relabel_nodes(G, mapping, copy=False)\r\n\r\nprint(G[0])\r\n# Output:\r\n# {3: {0: {'value': 'b'}}}\r\n# Expected:\r\n# {3: {0: {'value': 'a'}, 1: {'value': 'b'}}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4054", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4054/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4054/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4054/events", "html_url": "https://github.com/networkx/networkx/issues/4054", "id": 653156438, "node_id": "MDU6SXNzdWU2NTMxNTY0Mzg=", "number": 4054, "title": "Test failures on 32-bit architectures only", "user": {"login": "PureTryOut", "id": 1565836, "node_id": "MDQ6VXNlcjE1NjU4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PureTryOut", "html_url": "https://github.com/PureTryOut", "followers_url": "https://api.github.com/users/PureTryOut/followers", "following_url": "https://api.github.com/users/PureTryOut/following{/other_user}", "gists_url": "https://api.github.com/users/PureTryOut/gists{/gist_id}", "starred_url": "https://api.github.com/users/PureTryOut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PureTryOut/subscriptions", "organizations_url": "https://api.github.com/users/PureTryOut/orgs", "repos_url": "https://api.github.com/users/PureTryOut/repos", "events_url": "https://api.github.com/users/PureTryOut/events{/privacy}", "received_events_url": "https://api.github.com/users/PureTryOut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121671433, "node_id": "MDU6TGFiZWwxMjE2NzE0MzM=", "url": "https://api.github.com/repos/networkx/networkx/labels/Maintenance", "name": "Maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2020-07-08T09:52:42Z", "updated_at": "2020-07-31T10:25:28Z", "closed_at": "2020-07-31T10:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the tests of the last release, 2.4, fails on 32-bit architectures on Alpine Linux (x86 and armv7). It (luckily) works fine on any 64-bit architectures.\r\n\r\n```\r\n _________________ TestConvertPandas.test_from_adjacency_named __________________\r\nself = <networkx.tests.test_convert_pandas.TestConvertPandas object at 0xe5a23658>\r\n    def test_from_adjacency_named(self):\r\n        # example from issue #3105\r\n        data = {\"A\": {\"A\": 0, \"B\": 0, \"C\": 0},\r\n                \"B\": {\"A\": 1, \"B\": 0, \"C\": 0},\r\n                \"C\": {\"A\": 0, \"B\": 1, \"C\": 0}}\r\n        dftrue = pd.DataFrame(data)\r\n        df = dftrue[[\"A\", \"C\", \"B\"]]\r\n        G = nx.from_pandas_adjacency(df, create_using=nx.DiGraph())\r\n        df = nx.to_pandas_adjacency(G, dtype=int)\r\n>       pd.testing.assert_frame_equal(df, dftrue)\r\nE       AssertionError: Attributes of DataFrame.iloc[:, 0] (column name=\"A\") are different\r\nE       \r\nE       Attribute \"dtype\" are different\r\nE       [left]:  int32\r\nE       [right]: int64\r\nnetworkx/tests/test_convert_pandas.py:173: AssertionError\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4052", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4052/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4052/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4052/events", "html_url": "https://github.com/networkx/networkx/issues/4052", "id": 652792616, "node_id": "MDU6SXNzdWU2NTI3OTI2MTY=", "number": 4052, "title": "cut_size optional argument T not actually supported", "user": {"login": "harristeague", "id": 7490506, "node_id": "MDQ6VXNlcjc0OTA1MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7490506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harristeague", "html_url": "https://github.com/harristeague", "followers_url": "https://api.github.com/users/harristeague/followers", "following_url": "https://api.github.com/users/harristeague/following{/other_user}", "gists_url": "https://api.github.com/users/harristeague/gists{/gist_id}", "starred_url": "https://api.github.com/users/harristeague/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harristeague/subscriptions", "organizations_url": "https://api.github.com/users/harristeague/orgs", "repos_url": "https://api.github.com/users/harristeague/repos", "events_url": "https://api.github.com/users/harristeague/events{/privacy}", "received_events_url": "https://api.github.com/users/harristeague/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-08T00:58:26Z", "updated_at": "2020-07-22T18:11:27Z", "closed_at": "2020-07-22T18:11:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/networkx/networkx/blob/master/networkx/algorithms/cuts.py\r\n\r\ndef cut_size(G, S, T=None, weight=None):\r\n   ...\r\n\r\nOther functions in this module support the optional T by doing below.  I suspect this is intended for this function as well.\r\n\r\nif T is None:\r\n   T = set(G) - set(S)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4043", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4043/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4043/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4043/events", "html_url": "https://github.com/networkx/networkx/issues/4043", "id": 650537730, "node_id": "MDU6SXNzdWU2NTA1Mzc3MzA=", "number": 4043, "title": "subgraph_isomorphisms_iter() but with approximate matchings instead of isomorphisms", "user": {"login": "utkarshmttl", "id": 16596327, "node_id": "MDQ6VXNlcjE2NTk2MzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/16596327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/utkarshmttl", "html_url": "https://github.com/utkarshmttl", "followers_url": "https://api.github.com/users/utkarshmttl/followers", "following_url": "https://api.github.com/users/utkarshmttl/following{/other_user}", "gists_url": "https://api.github.com/users/utkarshmttl/gists{/gist_id}", "starred_url": "https://api.github.com/users/utkarshmttl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/utkarshmttl/subscriptions", "organizations_url": "https://api.github.com/users/utkarshmttl/orgs", "repos_url": "https://api.github.com/users/utkarshmttl/repos", "events_url": "https://api.github.com/users/utkarshmttl/events{/privacy}", "received_events_url": "https://api.github.com/users/utkarshmttl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-03T11:30:44Z", "updated_at": "2020-07-22T18:15:14Z", "closed_at": "2020-07-22T18:15:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a data graph and a pattern graph, both directed with categorical edge labels. Currently, I am able to use the subgraph_isomorphisms_iter() function for pattern matching to find matches of pattern graph with the (subgraphs of) data graph; which returns exact matches (subgraph isomorphisms).\r\n\r\nHowever, I'd like to be able to get approximate matches as well, an example criteria for approximate matching could be ` \"Graph Edit Distance < N\"` (or some other similarity measures?).\r\n\r\nIs this possible?\r\n\r\nOne way I can think of is to iterate over all the possible subgraphs of the data graph (like `for subgraph in nx.connected_component_subgraphs(data_graph):`) and calculate the GED of each such subgraph with the pattern graph. Then choose the subgraphs with GED < N. \r\n\r\nI am wondering if there's a better way because iterating over `2^[num_edges(data_graph)]` subgraphs would not be efficient because, for example, we need not even consider those subgraphs with `num_edges(pattern_graph) - N  < num_edges(subgraph) < num_edges(pattern_graph) + N ` as the edit distance would surely be greater than N for these subgraphs. \r\n\r\nAm I thinking in the right direction? \r\nAre there any in-built methods to achieve this? \r\nAre there any completely different algorithms/approaches in the literature to achieve what I am trying to?\r\n\r\nAny help is much appreciated. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4040", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4040/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4040/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4040/events", "html_url": "https://github.com/networkx/networkx/issues/4040", "id": 650156539, "node_id": "MDU6SXNzdWU2NTAxNTY1Mzk=", "number": 4040, "title": "Looking to iterate over subnetworks in graph", "user": {"login": "alexcannan", "id": 19368028, "node_id": "MDQ6VXNlcjE5MzY4MDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/19368028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcannan", "html_url": "https://github.com/alexcannan", "followers_url": "https://api.github.com/users/alexcannan/followers", "following_url": "https://api.github.com/users/alexcannan/following{/other_user}", "gists_url": "https://api.github.com/users/alexcannan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcannan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcannan/subscriptions", "organizations_url": "https://api.github.com/users/alexcannan/orgs", "repos_url": "https://api.github.com/users/alexcannan/repos", "events_url": "https://api.github.com/users/alexcannan/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcannan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-02T19:26:35Z", "updated_at": "2020-07-06T14:56:23Z", "closed_at": "2020-07-06T14:56:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, I'm trying to determine all the subnetworks in my graph, to omit ones less than 3 nodes large. I've searched through the documentation pretty extensively but can't find any functions that would do this. Does anyone have any recommendations for how to generate this? Ideally it would be a list of tuples containing all the nodes in each subgraph.\r\n\r\nI'm currently trying to put something together that does this, by iterating over all nodes, and using the all_neighbors function with a list of sets. If something like this doesn't already exist, would a get_subnetworks() function be worth a PR?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4038", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4038/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4038/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4038/events", "html_url": "https://github.com/networkx/networkx/issues/4038", "id": 649610700, "node_id": "MDU6SXNzdWU2NDk2MTA3MDA=", "number": 4038, "title": "\"from_pandas_dataframe\", small but possible enhancement ", "user": {"login": "Koukyosyumei", "id": 54299088, "node_id": "MDQ6VXNlcjU0Mjk5MDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/54299088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Koukyosyumei", "html_url": "https://github.com/Koukyosyumei", "followers_url": "https://api.github.com/users/Koukyosyumei/followers", "following_url": "https://api.github.com/users/Koukyosyumei/following{/other_user}", "gists_url": "https://api.github.com/users/Koukyosyumei/gists{/gist_id}", "starred_url": "https://api.github.com/users/Koukyosyumei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Koukyosyumei/subscriptions", "organizations_url": "https://api.github.com/users/Koukyosyumei/orgs", "repos_url": "https://api.github.com/users/Koukyosyumei/repos", "events_url": "https://api.github.com/users/Koukyosyumei/events{/privacy}", "received_events_url": "https://api.github.com/users/Koukyosyumei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-02T03:50:09Z", "updated_at": "2020-07-07T00:37:37Z", "closed_at": "2020-07-07T00:37:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This function iterates df.columns now.\r\n\r\n            for i, col in enumerate(df.columns):\r\n                if col is not source and col is not target:\r\n                    edge_i.append((col, i))\r\n\r\nI think using df.columns.values is more efficient because its type is np.array, although I know the difference is small.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4032", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4032/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4032/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4032/events", "html_url": "https://github.com/networkx/networkx/issues/4032", "id": 647566889, "node_id": "MDU6SXNzdWU2NDc1NjY4ODk=", "number": 4032, "title": "Cannot read graph6", "user": {"login": "bslavchev", "id": 962953, "node_id": "MDQ6VXNlcjk2Mjk1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/962953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bslavchev", "html_url": "https://github.com/bslavchev", "followers_url": "https://api.github.com/users/bslavchev/followers", "following_url": "https://api.github.com/users/bslavchev/following{/other_user}", "gists_url": "https://api.github.com/users/bslavchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/bslavchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bslavchev/subscriptions", "organizations_url": "https://api.github.com/users/bslavchev/orgs", "repos_url": "https://api.github.com/users/bslavchev/repos", "events_url": "https://api.github.com/users/bslavchev/events{/privacy}", "received_events_url": "https://api.github.com/users/bslavchev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-29T18:07:18Z", "updated_at": "2020-06-30T23:25:21Z", "closed_at": "2020-06-30T23:25:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a basic script that I used a year ago to convert graph6 strings into PACE-format graph files; it doesn't work now with networkx version 2.4: \r\n`in from_graph6_bytes\r\n    if string.startswith(b'>>graph6<<'):\r\nTypeError: startswith first arg must be str or a tuple of str, not bytes`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4030", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4030/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4030/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4030/events", "html_url": "https://github.com/networkx/networkx/issues/4030", "id": 647433957, "node_id": "MDU6SXNzdWU2NDc0MzM5NTc=", "number": 4030, "title": "TestKatzCentralityDirectedNumpy tests fail", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-29T14:41:05Z", "updated_at": "2020-07-07T20:48:37Z", "closed_at": "2020-07-07T20:48:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "With networkx-2.4 and Python 3.8, I get these errors:\r\n```\r\n[   24s] + py.test-3.8 --ignore=_build.python2 --ignore=_build.python3 --ignore=_build.pypy3 -v -n auto\r\n[   25s] ============================= test session starts ==============================\r\n[   25s] platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1 -- /usr/bin/python3\r\n\r\n[ many PASSED tests ignored ]\r\n\r\n[  197s] =================================== FAILURES ===================================\r\n[  197s] _______ TestKatzCentralityDirectedNumpy.test_katz_centrality_unweighted ________\r\n[  197s] [gw5] linux -- Python 3.8.3 /usr/bin/python3\r\n[  197s] \r\n[  197s] self = <networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirectedNumpy object at 0xe611c430>\r\n[  197s] \r\n[  197s]     def test_katz_centrality_unweighted(self):\r\n[  197s] >       H = self.H\r\n[  197s] E       AttributeError: 'TestKatzCentralityDirectedNumpy' object has no attribute 'H'\r\n[  197s] \r\n[  197s] networkx/algorithms/centrality/tests/test_katz_centrality.py:287: AttributeError\r\n[  197s] ________ TestKatzCentralityDirectedNumpy.test_katz_centrality_weighted _________\r\n[  197s] [gw4] linux -- Python 3.8.3 /usr/bin/python3\r\n[  197s] \r\n[  197s] self = <networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirectedNumpy object at 0xe50885f8>\r\n[  197s] \r\n[  197s]     def test_katz_centrality_weighted(self):\r\n[  197s] >       G = self.G\r\n[  197s] E       AttributeError: 'TestKatzCentralityDirectedNumpy' object has no attribute 'G'\r\n[  197s] \r\n[  197s] networkx/algorithms/centrality/tests/test_katz_centrality.py:280: AttributeError\r\n```\r\n\r\n[Complete build log with all details](https://github.com/networkx/networkx/files/4846177/_log.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4022", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4022/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4022/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4022/events", "html_url": "https://github.com/networkx/networkx/issues/4022", "id": 645361138, "node_id": "MDU6SXNzdWU2NDUzNjExMzg=", "number": 4022, "title": "Possible issue with optimal_edit_paths", "user": {"login": "paddy-r", "id": 50209911, "node_id": "MDQ6VXNlcjUwMjA5OTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/50209911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddy-r", "html_url": "https://github.com/paddy-r", "followers_url": "https://api.github.com/users/paddy-r/followers", "following_url": "https://api.github.com/users/paddy-r/following{/other_user}", "gists_url": "https://api.github.com/users/paddy-r/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddy-r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddy-r/subscriptions", "organizations_url": "https://api.github.com/users/paddy-r/orgs", "repos_url": "https://api.github.com/users/paddy-r/repos", "events_url": "https://api.github.com/users/paddy-r/events{/privacy}", "received_events_url": "https://api.github.com/users/paddy-r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T08:57:35Z", "updated_at": "2020-07-22T18:18:37Z", "closed_at": "2020-07-22T18:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using ```optimal_edit_paths``` for tree reconciliation but it takes ~10 minutes when the number of edits is quite small (specifically, it seems to be substitutions that cause the slow-down, rather than deletions and additions).\r\n\r\nI've added more details in a question at Stack Overflow [here](https://stackoverflow.com/questions/62451684/problems-with-networkx-optimal-edit-paths-graph-edit-distance). As I say there, I'm absolutely not suggesting there's a bug, but my question is whether very slow resolution of the edit paths is to be expected (computationally speaking) for even a small number of edits, as this would make the method unusable for me!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4020", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4020/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4020/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4020/events", "html_url": "https://github.com/networkx/networkx/issues/4020", "id": 645001777, "node_id": "MDU6SXNzdWU2NDUwMDE3Nzc=", "number": 4020, "title": "drawing module silently ignores superfluous **kwds", "user": {"login": "blsqr", "id": 1700203, "node_id": "MDQ6VXNlcjE3MDAyMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1700203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blsqr", "html_url": "https://github.com/blsqr", "followers_url": "https://api.github.com/users/blsqr/followers", "following_url": "https://api.github.com/users/blsqr/following{/other_user}", "gists_url": "https://api.github.com/users/blsqr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blsqr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blsqr/subscriptions", "organizations_url": "https://api.github.com/users/blsqr/orgs", "repos_url": "https://api.github.com/users/blsqr/repos", "events_url": "https://api.github.com/users/blsqr/events{/privacy}", "received_events_url": "https://api.github.com/users/blsqr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121671433, "node_id": "MDU6TGFiZWwxMjE2NzE0MzM=", "url": "https://api.github.com/repos/networkx/networkx/labels/Maintenance", "name": "Maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-24T21:52:06Z", "updated_at": "2020-07-05T18:59:44Z", "closed_at": "2020-07-05T18:59:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The drawing methods defined in [`networkx.drawing.nx_pylab`](https://github.com/networkx/networkx/blob/master/networkx/drawing/nx_pylab.py) all define `**kwds` to grab keyword arguments.\r\nWhile `**kwds` that are passed to the `draw` function are passed on (e.g. to `draw_networkx_edges`), they end up not being handled at all: `draw_networkx_edges` and `draw_networkx_nodes` make no use of `**kwds`.\r\n\r\nIn my opinion, this can be problematic for the following reasons:\r\n1. Unexpected additional keyword arguments can end up not having an effect\r\n   - They do not raise an exception either, which would help a user to find out about the wrong argument name\r\n   - Example: passing `cmap` to `draw_networkx_edges` instead of the expected `edge_cmap` just ignores `cmap`\r\n2. Lost opportunity: `**kwds` could be passed on to the matplotlib plotting function\r\n   - Given that many of the `draw_networkx_edges`/`draw_networkx_nodes` end up in matplotlib functions anyway, this would not be unexpected, imo.\r\n\r\n### Proposal\r\nAdjust the `draw` functions such that superfluous `**kwds` are *not* ignored but either have some purpose or raise an error.\r\n\r\nThree possibilities to achieve that come to my mind:\r\n\r\n1. Still allow `**kwds`, but check for unexpected keys in the `kwds` dict and raise an informative error\r\n2. or: Don't allow `**kwds` in `draw_networkx_edges`/`draw_networkx_nodes`, which would raise a `TypeError` due to passing an unexpected argument\r\n3. or: Pass on `**kwds` to the `LineCollection` or `ax.scatter`, respectively, thus letting matplotlib handle any additional keyword arguments and the error message (which they already do)\r\n\r\nDoes this make sense? Is there something I'm missing?  \r\nIf this is a suitable proposal, I would be happy to open a PR for it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4019", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4019/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4019/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4019/events", "html_url": "https://github.com/networkx/networkx/issues/4019", "id": 644647769, "node_id": "MDU6SXNzdWU2NDQ2NDc3Njk=", "number": 4019, "title": "isomorphism very slow on small graphs (with subgraphs)", "user": {"login": "jeannegoossens", "id": 45682783, "node_id": "MDQ6VXNlcjQ1NjgyNzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/45682783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeannegoossens", "html_url": "https://github.com/jeannegoossens", "followers_url": "https://api.github.com/users/jeannegoossens/followers", "following_url": "https://api.github.com/users/jeannegoossens/following{/other_user}", "gists_url": "https://api.github.com/users/jeannegoossens/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeannegoossens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeannegoossens/subscriptions", "organizations_url": "https://api.github.com/users/jeannegoossens/orgs", "repos_url": "https://api.github.com/users/jeannegoossens/repos", "events_url": "https://api.github.com/users/jeannegoossens/events{/privacy}", "received_events_url": "https://api.github.com/users/jeannegoossens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-06-24T14:11:31Z", "updated_at": "2020-07-21T09:08:45Z", "closed_at": "2020-06-25T19:25:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a tool to draw molecule structures, I want to compare the correct structure for a molecule with the one submitted by a user. For most cases, this works fine, but for some cases, the GraphMatcher.is_isomorphic() function is extremely slow, even for relatively small graphs. The following example consists of 50 nodes, and has 3 subgraphs (for both the source and target graph).\r\n\r\n```\r\nsource_graph_nodes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\r\nsource_graph_edges = [(0, 1), (1, 2), (2, 3), (3, 4), (0, 5), (0, 6), (0, 7), (1, 8), (1, 9), (2, 10), (2, 11), (3, 12), (3, 13), (4, 14), (4, 15), (4, 16), (17, 18), (17, 19), (17, 20), (20, 21), (21, 22), (20, 23), (17, 24), (20, 25), (21, 26), (22, 27), (21, 28), (22, 29), (22, 30), (23, 31), (23, 32), (23, 33), (34, 35), (35, 36), (35, 37), (35, 38), (34, 39), (37, 40), (37, 41), (37, 42), (34, 43), (34, 44), (38, 45), (38, 46), (38, 47), (36, 48), (36, 49), (36, 50)]\r\n\r\ntarget_graph_nodes = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\r\ntarget_graph_edges = [(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (3, 6), (2, 7), (1, 8), (0, 9), (0, 10), (0, 11), (1, 12), (2, 13), (3, 14), (4, 15), (4, 16), (17, 18), (18, 19), (19, 20), (17, 21), (18, 22), (19, 23), (20, 24), (20, 25), (19, 26), (20, 27), (17, 28), (17, 29), (18, 30), (30, 31), (30, 32), (30, 33), (34, 35), (35, 36), (36, 37), (34, 38), (35, 39), (36, 40), (37, 41), (37, 42), (37, 43), (35, 44), (34, 45), (34, 46), (36, 47), (47, 48), (47, 49), (47, 50)]\r\n\r\nsource_graph = nx.Graph()\r\nsource_graph.add_nodes_from(source_graph_nodes)\r\nsource_graph.add_edges_from(source_graph_edges)\r\n\r\ntarget_graph = nx.Graph()\r\ntarget_graph.add_nodes_from(source_graph_nodes)\r\ntarget_graph.add_edges_from(source_graph_edges)\r\n```\r\n\r\nThen when I call: \r\n\r\n```\r\nresult = isomorphism.GraphMatcher(target_graph, source_graph)\r\nis_isomorphic = result.is_isomorphic()\r\n```\r\n\r\nThis takes several hours to run. I tried using `result.subgraph_is_isomorphic()` but this also takes very long. I suspect the is_isomorphism function ends up in an infinite loop or something.\r\n\r\nTraceBack gives me the following recursive call over and over:\r\n\r\n```\r\n~/opt/anaconda3/lib/python3.7/site-packages/networkx/algorithms/isomorphism/isomorphvf2.py in match(self)\r\n    315                         # Recursive call, adding the feasible state.\r\n    316                         newstate = self.state.__class__(self, G1_node, G2_node)\r\n--> 317                         for mapping in self.match():\r\n    318                             yield mapping\r\n    319 \r\n```\r\n\r\n(yeah I know how recursive works, so I get that the traceback makes sense, but I think in this case the multiple subgraphs make the function either very very slow or infinite looping).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4018", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4018/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4018/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4018/events", "html_url": "https://github.com/networkx/networkx/issues/4018", "id": 644391635, "node_id": "MDU6SXNzdWU2NDQzOTE2MzU=", "number": 4018, "title": "Abstract base class for Graph, DiGraph, MultiGraph, and MultiDiGraph", "user": {"login": "winni2k", "id": 304958, "node_id": "MDQ6VXNlcjMwNDk1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/304958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/winni2k", "html_url": "https://github.com/winni2k", "followers_url": "https://api.github.com/users/winni2k/followers", "following_url": "https://api.github.com/users/winni2k/following{/other_user}", "gists_url": "https://api.github.com/users/winni2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/winni2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/winni2k/subscriptions", "organizations_url": "https://api.github.com/users/winni2k/orgs", "repos_url": "https://api.github.com/users/winni2k/repos", "events_url": "https://api.github.com/users/winni2k/events{/privacy}", "received_events_url": "https://api.github.com/users/winni2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T07:37:33Z", "updated_at": "2020-06-25T18:37:53Z", "closed_at": "2020-06-25T18:37:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am working with a project (https://github.com/broadinstitute/pyfrost/issues/1) that is using a custom backend for graph storage instead of dicts of dicts, mostly in order to save memory. The project is attempting to create a DiGraph compliant interface in order to use networkx algorithms. I have found it challenging/error prone to create a DiGraph-compliant interface in the past and I would find it helpful to have an abstract base class for the networkx graph types. Does this already exist somewhere? Is this an [XY](http://xyproblem.info/) problem, and should I/we be thinking about our problem in pyfrost differently?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4011", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4011/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4011/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4011/events", "html_url": "https://github.com/networkx/networkx/issues/4011", "id": 642191929, "node_id": "MDU6SXNzdWU2NDIxOTE5Mjk=", "number": 4011, "title": "Question about flow solving with simplex algorithm", "user": {"login": "ph4z", "id": 4169362, "node_id": "MDQ6VXNlcjQxNjkzNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4169362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ph4z", "html_url": "https://github.com/ph4z", "followers_url": "https://api.github.com/users/ph4z/followers", "following_url": "https://api.github.com/users/ph4z/following{/other_user}", "gists_url": "https://api.github.com/users/ph4z/gists{/gist_id}", "starred_url": "https://api.github.com/users/ph4z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ph4z/subscriptions", "organizations_url": "https://api.github.com/users/ph4z/orgs", "repos_url": "https://api.github.com/users/ph4z/repos", "events_url": "https://api.github.com/users/ph4z/events{/privacy}", "received_events_url": "https://api.github.com/users/ph4z/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-19T20:01:11Z", "updated_at": "2020-07-22T18:48:50Z", "closed_at": "2020-07-22T18:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "See the code below:\r\n\r\n```python\r\nimport networkx as nx\r\nG=nx.DiGraph()\r\nG.add_edge(1,2,capacity=7, weight=1)\r\nG.add_edge(2,3,capacity=5, weight=1)\r\nG.add_edge(2,4,capacity=4, weight=1)\r\nG.nodes[1]['demand']=-7\r\nG.nodes[2]['demand']=0\r\nG.nodes[3]['demand']=2\r\nG.nodes[4]['demand']=5\r\n_, flows = nx.network_simplex(G, 'demand', 'capacity', 'weight')\r\nprint(flows)\r\n```\r\nIt will raise the exception `networkx.exception.NetworkXUnfeasible: no flow satisfies all node demands` because edge (2,4) capacity is < 5.\r\nBut there is still a valid flow 1->2->3 which satisfy demands and capacities.\r\n\r\nDoes anyone have an idea or a workaround for finding theses residual flows in case of unfeasible exception ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4008", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4008/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4008/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4008/events", "html_url": "https://github.com/networkx/networkx/issues/4008", "id": 641109089, "node_id": "MDU6SXNzdWU2NDExMDkwODk=", "number": 4008, "title": "Labelling nodes as communities they belong not to showing in plot -- stays as default nodes name", "user": {"login": "amjass12", "id": 33659783, "node_id": "MDQ6VXNlcjMzNjU5Nzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/33659783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjass12", "html_url": "https://github.com/amjass12", "followers_url": "https://api.github.com/users/amjass12/followers", "following_url": "https://api.github.com/users/amjass12/following{/other_user}", "gists_url": "https://api.github.com/users/amjass12/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjass12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjass12/subscriptions", "organizations_url": "https://api.github.com/users/amjass12/orgs", "repos_url": "https://api.github.com/users/amjass12/repos", "events_url": "https://api.github.com/users/amjass12/events{/privacy}", "received_events_url": "https://api.github.com/users/amjass12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T10:52:19Z", "updated_at": "2020-06-18T16:33:19Z", "closed_at": "2020-06-18T16:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, \r\n\r\nI am not sure if this is a bug and might be more appropriate for stack overflow, but going to post here in case its an issue. \r\n\r\nI have generated a nx.Graph which works fine, and then found communities in the graph as follows:\r\n\r\n```\r\nnetworkGraph12=nx.Graph(corr12).to_undirected()\r\n\r\n#remove weights < than threshold\r\nedge_weights = nx.get_edge_attributes(networkGraph14,'weight')\r\nnetworkGraph14.remove_edges_from((e for e, w in edge_weights.items() if w <0.8))\r\n\r\n#remove non-connected vertices\r\nfor component in list(nx.connected_components(networkGraph14)):\r\n    if len(component)<2:\r\n        for node in component:\r\n            networkGraph14.remove_node(node)\r\n\r\n#community detection\r\nimport community\r\npartition = community.best_partition(networkGraph12)\r\n\r\n\r\n#plot based on communities of gene-expression\r\nplt.rcParams.update(plt.rcParamsDefault)\r\nplt.rcParams.update({'figure.figsize': (15, 10)})\r\nplt.style.use('dark_background')\r\n\r\n#fig,ax=plt.subplots()\r\n#ax.set_facecolor(\"white\")\r\npos=nx.fruchterman_reingold_layout(networkGraph14, seed=50)\r\n\r\n#plot graph\r\nnx.draw_networkx(\r\n    networkGraph14,\r\n    cmap = plt.get_cmap(\"rainbow\"), \r\n    node_color = list(parts14.values()),\r\n    pos=pos, \r\n    node_size=5,\r\n    edge_color='silver',\r\n    alpha=0.4, \r\n    with_labels=False\r\n    )\r\nplt.show()\r\n```\r\nThis produce Graph attached to this post. It works perfectly and the community detection itself makes perfect sense in terms of the nodes that cluster together. \r\n\r\nHowever i am trying to label the nodes by the communities to which they belong, as oppose to the node names themselves which are fairly long-ish words, so rendering them on the plot is pointless... this isn't the only reason i want to change the labelling... i really want to know which communities in the plot actually are -- i.e, which community in the plot is community 1, etc.. when i run this code:\r\n```\r\n\r\nnx.draw_networkx(\r\n    networkGraph14,\r\n    cmap = plt.get_cmap(\"rainbow\"), \r\n    node_color = list(parts14.values()),\r\n    pos=pos, \r\n    node_size=5,\r\n    edge_color='silver',\r\n    alpha=0.4, \r\n    with_labels=True,\r\n    labels=list(parts14.values()),\r\n    font_color='white'\r\n    )\r\nplt.show()\r\n```\r\nThis code works, but the node labels as a result of this code are still the original node names and not the community number\r\n\r\n... is this a bug? is there a way of at least identifying which communities each color belong to?\r\n\r\nsorry if this is more suited to stack..\r\n\r\nthanks!\r\n\r\n![p3](https://user-images.githubusercontent.com/33659783/85011902-1ecac680-b15a-11ea-841c-5abcf58108f8.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4006", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4006/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4006/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4006/events", "html_url": "https://github.com/networkx/networkx/issues/4006", "id": 640411831, "node_id": "MDU6SXNzdWU2NDA0MTE4MzE=", "number": 4006, "title": "Python 2 links in docs", "user": {"login": "jond01", "id": 36337649, "node_id": "MDQ6VXNlcjM2MzM3NjQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/36337649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jond01", "html_url": "https://github.com/jond01", "followers_url": "https://api.github.com/users/jond01/followers", "following_url": "https://api.github.com/users/jond01/following{/other_user}", "gists_url": "https://api.github.com/users/jond01/gists{/gist_id}", "starred_url": "https://api.github.com/users/jond01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jond01/subscriptions", "organizations_url": "https://api.github.com/users/jond01/orgs", "repos_url": "https://api.github.com/users/jond01/repos", "events_url": "https://api.github.com/users/jond01/events{/privacy}", "received_events_url": "https://api.github.com/users/jond01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-17T12:42:58Z", "updated_at": "2020-07-03T05:36:15Z", "closed_at": "2020-07-03T05:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is one example, but it is general:\r\nhttps://networkx.github.io/documentation/latest/reference/generated/networkx.drawing.layout.bipartite_layout.html?highlight=dict\r\nPressing *dict* link in the `Return type` leads to:\r\nhttps://docs.python.org/2/library/stdtypes.html#dict\r\nit would be best to change it to\r\nhttps://docs.python.org/3/library/stdtypes.html#dict\r\nOr even:\r\nhttps://docs.python.org/library/stdtypes.html#dict", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4003", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4003/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4003/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4003/events", "html_url": "https://github.com/networkx/networkx/issues/4003", "id": 639210560, "node_id": "MDU6SXNzdWU2MzkyMTA1NjA=", "number": 4003, "title": "Docs for subgraph_view filter_edges function when using a MultiGraph", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-15T22:03:17Z", "updated_at": "2020-06-19T14:11:02Z", "closed_at": "2020-06-19T14:11:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found that my actual error I needed to debug in #4002 was:\r\n\r\n```python\r\n    def edge_ok(nbr, key):\r\n>       return self.NODE_OK(nbr) and self.EDGE_OK(node, nbr, key)\r\nE       TypeError: <lambda>() takes 2 positional arguments but 3 were given\r\n```\r\nfrom `networkx/classes/coreviews.py:392`\r\n\r\nThe problem seems to be that I have created the view I am instantiating the `DiGraph` with, via `nx.subgraph_view` with a filter function for edges, passing in the parent `MultiDiGraph`.\r\n\r\nThe error occurs when instantiating the new graph, suggesting the subgraph view is built lazily, which is cool.\r\n\r\nBut the docs for `subgraph_view` don't mention that my `filter_edge` function should take 3 args instead of 2 if it's a MultiGraph:\r\nhttps://networkx.github.io/documentation/stable/reference/generated/networkx.classes.function.subgraph_view.html\r\nIt just says:\r\n> A function taking as input the two nodes describing an edge, which returns `True` if the edge should appear in the view.\r\n\r\nBut if it's a `MultiGraph` or `MultiDiGraph` then the filter function should take three args: the two nodes plus the edge key.\r\n\r\nI fixed that in my code and I'm now able to successfully instantiate the `DiGraph` from the filtered view.\r\n\r\nDoes this sound right? I'm happy to send a PR to update the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4002", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4002/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4002/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4002/events", "html_url": "https://github.com/networkx/networkx/issues/4002", "id": 639176613, "node_id": "MDU6SXNzdWU2MzkxNzY2MTM=", "number": 4002, "title": "Unhelpful generic error message in to_networkx_graph", "user": {"login": "anentropic", "id": 147840, "node_id": "MDQ6VXNlcjE0Nzg0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/147840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anentropic", "html_url": "https://github.com/anentropic", "followers_url": "https://api.github.com/users/anentropic/followers", "following_url": "https://api.github.com/users/anentropic/following{/other_user}", "gists_url": "https://api.github.com/users/anentropic/gists{/gist_id}", "starred_url": "https://api.github.com/users/anentropic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anentropic/subscriptions", "organizations_url": "https://api.github.com/users/anentropic/orgs", "repos_url": "https://api.github.com/users/anentropic/repos", "events_url": "https://api.github.com/users/anentropic/events{/privacy}", "received_events_url": "https://api.github.com/users/anentropic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121671433, "node_id": "MDU6TGFiZWwxMjE2NzE0MzM=", "url": "https://api.github.com/repos/networkx/networkx/labels/Maintenance", "name": "Maintenance", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-06-15T21:26:03Z", "updated_at": "2020-06-21T19:15:03Z", "closed_at": "2020-06-21T19:15:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to instantiate a `DiGraph` from a view of a `MultiDiGraph` filtered to select only one out of any parallel edges.\r\n\r\nRight this minute I'm not sure if I constructed my graph or graph view wrong, but the point is I'm getting this error:\r\n\r\n```\r\nnetworkx.exception.NetworkXError: Input is not a correct NetworkX graph.\r\n```\r\n\r\nIt comes from the call to `convert.to_networkx_graph` in `DiGraph.__init__` which has this code:\r\n```python\r\n        if hasattr(data, \"adj\"):\r\n            try:\r\n                result = from_dict_of_dicts(data.adj,\r\n                                            create_using=create_using,\r\n                                            multigraph_input=data.is_multigraph())\r\n                if hasattr(data, 'graph'):  # data.graph should be dict-like\r\n                    result.graph.update(data.graph)\r\n                if hasattr(data, 'nodes'):  # data.nodes should be dict-like\r\n                    # result.add_node_from(data.nodes.items()) possible but\r\n                    # for custom node_attr_dict_factory which may be hashable\r\n                    # will be unexpected behavior\r\n                    for n, dd in data.nodes.items():\r\n                        result._node[n].update(dd)\r\n                return result\r\n            except:\r\n                raise nx.NetworkXError(\"Input is not a correct NetworkX graph.\")\r\n```\r\n\r\nFortunately my test graph is very small and hand-constructed and I will step through in a debugger and work out what's wrong.\r\n\r\nBut it'd be great if this code didn't swallow the source of the actual error.\r\n\r\nHow would you feel if I opened a Pull Request to change this to:\r\n```python\r\n    try:\r\n        ...\r\n    except Exception as e:\r\n        raise nx.NetworkXError(\"Input is not a correct NetworkX graph.\") from e\r\n```\r\n?\r\n\r\nThanks for a great library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/4001", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/4001/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/4001/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/4001/events", "html_url": "https://github.com/networkx/networkx/issues/4001", "id": 638941155, "node_id": "MDU6SXNzdWU2Mzg5NDExNTU=", "number": 4001, "title": "[: Feature Request] - Syntax sugar for filtering/quering of nodes and edges", "user": {"login": "PuneethaPai", "id": 21996583, "node_id": "MDQ6VXNlcjIxOTk2NTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/21996583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PuneethaPai", "html_url": "https://github.com/PuneethaPai", "followers_url": "https://api.github.com/users/PuneethaPai/followers", "following_url": "https://api.github.com/users/PuneethaPai/following{/other_user}", "gists_url": "https://api.github.com/users/PuneethaPai/gists{/gist_id}", "starred_url": "https://api.github.com/users/PuneethaPai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PuneethaPai/subscriptions", "organizations_url": "https://api.github.com/users/PuneethaPai/orgs", "repos_url": "https://api.github.com/users/PuneethaPai/repos", "events_url": "https://api.github.com/users/PuneethaPai/events{/privacy}", "received_events_url": "https://api.github.com/users/PuneethaPai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-15T15:24:47Z", "updated_at": "2020-06-26T12:39:42Z", "closed_at": "2020-06-25T17:39:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Influenced from python-igraph:\r\n---\r\n\r\npython-igraph has a pretty cool sytax sugar like\r\nref: https://igraph.org/python/doc/tutorial/tutorial.html#querying-vertices-and-edges-based-on-attributes\r\n- find\r\n- select\r\n- slicing virtices and edges, etc\r\n\r\nExamples:\r\n```python\r\n\r\n# Find vertex by attributes\r\nclaire = g.vs.find(name=\"Claire\")\r\n\r\n# Looking up vertices by names\r\nassert g.degree(\"Dennis\") == g.vs.find(\"Dennis\").degree()\r\n\r\n# Select vertices as per filter function\r\ng.vs.select(lambda vertex: vertex.index % 2 == 1) \r\n\r\n# Select vertices from the input list\r\ng.vs.select(2, 4, 6) \r\n\r\n# Select vertices as per attribute condtion\r\ng.vs.select(age_lt=30) \r\ng.vs(age_in=[10, 20, 30])\r\n\r\n# Select Edge b/w men and women\r\nmen = g.vs.select(gender=\"m\")\r\nwomen = g.vs.select(gender=\"f\")\r\ng.es.select(_between=(men, women))\r\n\r\n# Slicing vertices and edges\r\ng.vs[4:40]\r\ng.es[3:-2]\r\n```\r\n\r\n## I am fascinated by this following feature table:\r\n\r\nKeyword argument | Meaning\r\n-- | --\r\nname_eq | The attribute/property value must be equal to the value of the keyword argument\r\nname_ne | The attribute/property value must not be equal to the value of the keyword argument\r\nname_lt | The attribute/property value must be less than the value of the keyword argument\r\nname_le | The attribute/property value must be less than or equal to the value of the keyword argument\r\nname_gt | The attribute/property value must be greater than the value of the keyword argument\r\nname_ge | The attribute/property value must be greater than or equal to the value of the keyword argument\r\nname_in | The attribute/property value must be included in the value of the keyword argument, which must be a sequence in this case\r\nname_notin | The attribute/property value must not be included in the value of the the keyword argument, which must be a sequence in this case\r\n\r\n\r\n## Feature Request:\r\n- Even though we can do all the above with few lines of python code the examples shown above is pretty neat and handy.\r\n- Let me know what you folks think.\r\n\r\n\r\nThanks\r\n\r\n*PS: I think networkx is pretty neat and easy to start with.*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3998", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3998/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3998/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3998/events", "html_url": "https://github.com/networkx/networkx/issues/3998", "id": 637240941, "node_id": "MDU6SXNzdWU2MzcyNDA5NDE=", "number": 3998, "title": "Feature Big Picture URLs in documentation ", "user": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-11T18:42:36Z", "updated_at": "2020-07-05T22:43:44Z", "closed_at": "2020-07-05T22:43:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should include more links to the documentation landing page and the github repository in our documentation.\r\n\r\nLinks to the landing page would allow people to switch between docs for different versions and between docs and code.\r\n\r\nLinks to the github repository would allow people to find the code/issues/PRs from the docs while staying in a browser (not installing source code locally via git).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3996", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3996/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3996/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3996/events", "html_url": "https://github.com/networkx/networkx/issues/3996", "id": 636970482, "node_id": "MDU6SXNzdWU2MzY5NzA0ODI=", "number": 3996, "title": "Subgraph isomorphisms generator generates a non-isomorphic mapping", "user": {"login": "filipbartek", "id": 2857416, "node_id": "MDQ6VXNlcjI4NTc0MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2857416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/filipbartek", "html_url": "https://github.com/filipbartek", "followers_url": "https://api.github.com/users/filipbartek/followers", "following_url": "https://api.github.com/users/filipbartek/following{/other_user}", "gists_url": "https://api.github.com/users/filipbartek/gists{/gist_id}", "starred_url": "https://api.github.com/users/filipbartek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/filipbartek/subscriptions", "organizations_url": "https://api.github.com/users/filipbartek/orgs", "repos_url": "https://api.github.com/users/filipbartek/repos", "events_url": "https://api.github.com/users/filipbartek/events{/privacy}", "received_events_url": "https://api.github.com/users/filipbartek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T12:24:14Z", "updated_at": "2020-06-11T16:36:09Z", "closed_at": "2020-06-11T16:36:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The generator `subgraph_isomorphisms_iter` generates a mapping that is not a subgraph isomorphism on the directed graphs `G1 = DiGraph([(0, 1), (0, 3), (1, 2)])` and `G2 = DiGraph([(0, 1), (0, 2)])`. More precisely, it generates the mapping `{0: 0, 1: 1, 2: 2}` from G1 to G2 that maps\r\n\r\n- the G1 edge `(1, 2)` to G2 non-edge `(1, 2)` and\r\n- G1 non-edge `(0, 2)` to the G2 edge `(0, 2)`.\r\n\r\nThe following code emits a warning for each \"edge mismatch\" in each isomorphism:\r\n\r\n```\r\nimport itertools\r\nimport warnings\r\n\r\nimport networkx as nx\r\nfrom networkx.algorithms.isomorphism import GraphMatcher\r\n\r\nG1 = nx.DiGraph([(0, 1), (0, 3), (1, 2)])\r\nG2 = nx.DiGraph([(0, 1), (0, 2)])\r\nfor m in GraphMatcher(G1, G2).subgraph_isomorphisms_iter():\r\n    for e1 in itertools.product(m.keys(), repeat=2):\r\n        e2 = tuple(m[n] for n in e1)\r\n        if e1 in G1.edges and e2 not in G2.edges:\r\n            warnings.warn(f'Mapping {m} is not a subgraph isomorphism. The edge {e1} is present in G1 but its image {e2} is absent in G2.')\r\n        if e1 not in G1.edges and e2 in G2.edges:\r\n            warnings.warn(f'Mapping {m} is not a subgraph isomorphism. The edge {e1} is absent in G1 but its image {e2} is present in G2.')\r\n```\r\n\r\nDefinition of \"subgraph\" and \"graph-subgraph isomorphism\":\r\nhttps://networkx.github.io/documentation/stable/reference/algorithms/isomorphism.vf2.html\r\n\r\nNetworkX version: 2.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3992", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3992/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3992/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3992/events", "html_url": "https://github.com/networkx/networkx/issues/3992", "id": 635007911, "node_id": "MDU6SXNzdWU2MzUwMDc5MTE=", "number": 3992, "title": "Lifetime to edge", "user": {"login": "atilaajones", "id": 41593241, "node_id": "MDQ6VXNlcjQxNTkzMjQx", "avatar_url": "https://avatars0.githubusercontent.com/u/41593241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atilaajones", "html_url": "https://github.com/atilaajones", "followers_url": "https://api.github.com/users/atilaajones/followers", "following_url": "https://api.github.com/users/atilaajones/following{/other_user}", "gists_url": "https://api.github.com/users/atilaajones/gists{/gist_id}", "starred_url": "https://api.github.com/users/atilaajones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atilaajones/subscriptions", "organizations_url": "https://api.github.com/users/atilaajones/orgs", "repos_url": "https://api.github.com/users/atilaajones/repos", "events_url": "https://api.github.com/users/atilaajones/events{/privacy}", "received_events_url": "https://api.github.com/users/atilaajones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T23:53:11Z", "updated_at": "2020-06-09T20:15:00Z", "closed_at": "2020-06-09T20:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. \r\n\r\nDoes anyone know if it is possible to determine lifetime for edges in that package? For example, there is a time passing and each edge has a life span [a, b], where the edge only exists if time is in that interval.\r\n\r\nthank you\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3991", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3991/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3991/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3991/events", "html_url": "https://github.com/networkx/networkx/issues/3991", "id": 634502837, "node_id": "MDU6SXNzdWU2MzQ1MDI4Mzc=", "number": 3991, "title": "How to calculate the GED by the paths?", "user": {"login": "tiankonghenlan20113046", "id": 10166585, "node_id": "MDQ6VXNlcjEwMTY2NTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/10166585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiankonghenlan20113046", "html_url": "https://github.com/tiankonghenlan20113046", "followers_url": "https://api.github.com/users/tiankonghenlan20113046/followers", "following_url": "https://api.github.com/users/tiankonghenlan20113046/following{/other_user}", "gists_url": "https://api.github.com/users/tiankonghenlan20113046/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiankonghenlan20113046/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiankonghenlan20113046/subscriptions", "organizations_url": "https://api.github.com/users/tiankonghenlan20113046/orgs", "repos_url": "https://api.github.com/users/tiankonghenlan20113046/repos", "events_url": "https://api.github.com/users/tiankonghenlan20113046/events{/privacy}", "received_events_url": "https://api.github.com/users/tiankonghenlan20113046/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-08T10:48:53Z", "updated_at": "2020-06-25T17:14:28Z", "closed_at": "2020-06-25T17:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, dear code author,\r\nI am making researching on the graph edit distance by **[A*](https://github.com/networkx/networkx/blob/7ae7f0146a33e340acbabe5a11d297e8187cb6d8/networkx/algorithms/similarity.py#L153)** .I have 2 questions.\r\n\r\nFirstly,I know that we can get a best path (or several best path) transforming a graph to another. But GED is the number of operations transfoming a graph to another graph. That is , how to calculating the GED by paths (or mapping we get by the algorithm)? \r\n\r\nSecondly, I construct two graphs.The expected GED is 2, but it gives the 1.The code in my [github ](https://github.com/tiankonghenlan20113046/networkx_GED/blob/29f4367975625b35fe4150849568a09a4823b547/calculate_GED.py#L31)  shows me how to calculate it .\r\nwe should subustitue edge(1,3) which labels '1' in q to edge (1,3) which labels '2' in g2, insert edge (1,3)  labeling '1' in q to g2. These two editi operations equal **GED = 2**.But the function gives me **1**.\r\nPlease which faults did  I make ? @jwegis @lonnen ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3990", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3990/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3990/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3990/events", "html_url": "https://github.com/networkx/networkx/issues/3990", "id": 634279793, "node_id": "MDU6SXNzdWU2MzQyNzk3OTM=", "number": 3990, "title": "time complexity of the methods", "user": {"login": "newbie2k20", "id": 66587060, "node_id": "MDQ6VXNlcjY2NTg3MDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/66587060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newbie2k20", "html_url": "https://github.com/newbie2k20", "followers_url": "https://api.github.com/users/newbie2k20/followers", "following_url": "https://api.github.com/users/newbie2k20/following{/other_user}", "gists_url": "https://api.github.com/users/newbie2k20/gists{/gist_id}", "starred_url": "https://api.github.com/users/newbie2k20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newbie2k20/subscriptions", "organizations_url": "https://api.github.com/users/newbie2k20/orgs", "repos_url": "https://api.github.com/users/newbie2k20/repos", "events_url": "https://api.github.com/users/newbie2k20/events{/privacy}", "received_events_url": "https://api.github.com/users/newbie2k20/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T07:18:55Z", "updated_at": "2020-07-10T06:57:04Z", "closed_at": "2020-06-25T17:44:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "sir i am working on community detection and trying to optimize parts of the code. It would be great help for a newbie like me if there is a note in the documentation indicating the time complexity of the methods. Can you tell me what is the time complexity of the following methods:\r\n1. Graph.subgraph(nodes)\r\n2. connected_components(Graph)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3989", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3989/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3989/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3989/events", "html_url": "https://github.com/networkx/networkx/issues/3989", "id": 633704921, "node_id": "MDU6SXNzdWU2MzM3MDQ5MjE=", "number": 3989, "title": "FutureWarning on arrays to stack", "user": {"login": "alan-isaac", "id": 1018239, "node_id": "MDQ6VXNlcjEwMTgyMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1018239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alan-isaac", "html_url": "https://github.com/alan-isaac", "followers_url": "https://api.github.com/users/alan-isaac/followers", "following_url": "https://api.github.com/users/alan-isaac/following{/other_user}", "gists_url": "https://api.github.com/users/alan-isaac/gists{/gist_id}", "starred_url": "https://api.github.com/users/alan-isaac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alan-isaac/subscriptions", "organizations_url": "https://api.github.com/users/alan-isaac/orgs", "repos_url": "https://api.github.com/users/alan-isaac/repos", "events_url": "https://api.github.com/users/alan-isaac/events{/privacy}", "received_events_url": "https://api.github.com/users/alan-isaac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-07T19:47:50Z", "updated_at": "2020-06-09T20:13:38Z", "closed_at": "2020-06-09T20:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Python38\\lib\\site-packages\\networkx\\drawing\\layout.py:950: FutureWarning: arrays to stack must be passed as a \"sequence\" type such as list or tuple. Support for non-sequence iterables such as generators is deprecated as of NumPy 1.16 and will raise an error in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3984", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3984/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3984/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3984/events", "html_url": "https://github.com/networkx/networkx/issues/3984", "id": 629649933, "node_id": "MDU6SXNzdWU2Mjk2NDk5MzM=", "number": 3984, "title": "contracting (merging) nodes ", "user": {"login": "moh55m55", "id": 16886629, "node_id": "MDQ6VXNlcjE2ODg2NjI5", "avatar_url": "https://avatars3.githubusercontent.com/u/16886629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moh55m55", "html_url": "https://github.com/moh55m55", "followers_url": "https://api.github.com/users/moh55m55/followers", "following_url": "https://api.github.com/users/moh55m55/following{/other_user}", "gists_url": "https://api.github.com/users/moh55m55/gists{/gist_id}", "starred_url": "https://api.github.com/users/moh55m55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moh55m55/subscriptions", "organizations_url": "https://api.github.com/users/moh55m55/orgs", "repos_url": "https://api.github.com/users/moh55m55/repos", "events_url": "https://api.github.com/users/moh55m55/events{/privacy}", "received_events_url": "https://api.github.com/users/moh55m55/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-03T02:48:03Z", "updated_at": "2020-06-25T17:46:27Z", "closed_at": "2020-06-25T17:46:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I Hope everyone is well.\r\nI have an undirected graph. I want to aggregate two nodes but also do some arithmetic operation on the resultant edges's weight after the merging process. You can see in the first figure if a merge occurs between node (2) and node (0) using function `nx.contracted_nodes(G, source, target)` the result will be figure 2, but the new weight between (5) and (0) was chosen to be 27.92 instead of 23.11. It could be the order of the nodes. My question: How do I specify a certain operation on the new edge's weight; e.g. taking the average of the two edges? i.e. 25.51.  \r\n\r\nThis is a toy example.\r\nThanks, \r\n\r\n<img width=\"286\" alt=\"Screen Shot 2020-06-02 at 10 36 28 PM\" src=\"https://user-images.githubusercontent.com/16886629/83590088-f53b5980-a522-11ea-8e41-7b6e0b920409.png\">\r\n<img width=\"251\" alt=\"Screen Shot 2020-06-02 at 10 38 38 PM\" src=\"https://user-images.githubusercontent.com/16886629/83590091-f5d3f000-a522-11ea-81db-07cd7e6a1b10.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3980", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3980/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3980/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3980/events", "html_url": "https://github.com/networkx/networkx/issues/3980", "id": 627943977, "node_id": "MDU6SXNzdWU2Mjc5NDM5Nzc=", "number": 3980, "title": "Documentation for approximate_current_flow_betweenness_centrality, edge_current_flow_betweenness_centrality and current_flow_betweenness_centrality does not match", "user": {"login": "beckedorf", "id": 31166892, "node_id": "MDQ6VXNlcjMxMTY2ODky", "avatar_url": "https://avatars0.githubusercontent.com/u/31166892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beckedorf", "html_url": "https://github.com/beckedorf", "followers_url": "https://api.github.com/users/beckedorf/followers", "following_url": "https://api.github.com/users/beckedorf/following{/other_user}", "gists_url": "https://api.github.com/users/beckedorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/beckedorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beckedorf/subscriptions", "organizations_url": "https://api.github.com/users/beckedorf/orgs", "repos_url": "https://api.github.com/users/beckedorf/repos", "events_url": "https://api.github.com/users/beckedorf/events{/privacy}", "received_events_url": "https://api.github.com/users/beckedorf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-31T11:26:51Z", "updated_at": "2020-06-25T17:52:42Z", "closed_at": "2020-06-25T17:52:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the documentation the default `solver` of nx.approximate_current_flow_betweenness_centrality nx.edge_current_flow_betweenness_centrality and nx.current_flow_betweenness_centrality is `'lu'`. In the definition of the function the default is however `'full'`.\r\n\r\nAs `'lu'` is the recommended method and it is the default is in \r\n\r\n- `nx.edge_current_flow_betweenness_centrality_subset`, \r\n- `nx.current_flow_betweenness_centrality_subset`, \r\n- `nx.current_flow_closeness_centrality` \r\n\r\nthe defaults should be changed here as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3979", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3979/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3979/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3979/events", "html_url": "https://github.com/networkx/networkx/issues/3979", "id": 627685946, "node_id": "MDU6SXNzdWU2Mjc2ODU5NDY=", "number": 3979, "title": "add_node attributes", "user": {"login": "evowilliamson", "id": 14161480, "node_id": "MDQ6VXNlcjE0MTYxNDgw", "avatar_url": "https://avatars1.githubusercontent.com/u/14161480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evowilliamson", "html_url": "https://github.com/evowilliamson", "followers_url": "https://api.github.com/users/evowilliamson/followers", "following_url": "https://api.github.com/users/evowilliamson/following{/other_user}", "gists_url": "https://api.github.com/users/evowilliamson/gists{/gist_id}", "starred_url": "https://api.github.com/users/evowilliamson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evowilliamson/subscriptions", "organizations_url": "https://api.github.com/users/evowilliamson/orgs", "repos_url": "https://api.github.com/users/evowilliamson/repos", "events_url": "https://api.github.com/users/evowilliamson/events{/privacy}", "received_events_url": "https://api.github.com/users/evowilliamson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-30T09:10:24Z", "updated_at": "2020-06-25T17:46:59Z", "closed_at": "2020-06-25T17:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nadd_node on the graph accepts attributes. I know it can be used to provide your own set of attributes, but it's also used for system defined attributes like colors, sizes, etc.\r\n\r\nIs there a list of system defined attributes available where I can choose from ? For example, I tried \"linewidth\" in order to determine the width of the line, but that doesn't seem to work. I've looked into the source code, but to no avail. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3977", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3977/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3977/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3977/events", "html_url": "https://github.com/networkx/networkx/issues/3977", "id": 626107016, "node_id": "MDU6SXNzdWU2MjYxMDcwMTY=", "number": 3977, "title": "girvan_newman mistakenly thinks edge is not in graph?", "user": {"login": "maya123z", "id": 37194018, "node_id": "MDQ6VXNlcjM3MTk0MDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/37194018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maya123z", "html_url": "https://github.com/maya123z", "followers_url": "https://api.github.com/users/maya123z/followers", "following_url": "https://api.github.com/users/maya123z/following{/other_user}", "gists_url": "https://api.github.com/users/maya123z/gists{/gist_id}", "starred_url": "https://api.github.com/users/maya123z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maya123z/subscriptions", "organizations_url": "https://api.github.com/users/maya123z/orgs", "repos_url": "https://api.github.com/users/maya123z/repos", "events_url": "https://api.github.com/users/maya123z/events{/privacy}", "received_events_url": "https://api.github.com/users/maya123z/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T23:35:15Z", "updated_at": "2020-05-28T00:51:00Z", "closed_at": "2020-05-28T00:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run girvan_newman on my graph. I used the following code:\r\n\r\n```\r\nimport operator\r\ndef get_edge(graph):\r\n    centrality = nx.edge_betweenness_centrality(graph, k=1000)\r\n    return(max(test.items(), key=operator.itemgetter(1))[0])\r\ngn = nx.algorithms.community.centrality.girvan_newman(my_graph, get_edge)\r\ncommunities = []\r\ncounter = 0\r\nwhile counter < 10:\r\n    communities.append(tuple(sorted(c) for c in next(gn)))\r\n    counter += 1\r\n```\r\nHowever, this gives me an error:\r\n`NetworkXError: The edge 4704-4693 is not in the graph`\r\nI double checked and this edge definitely is in my graph, so I'm not sure what's going wrong here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3975", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3975/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3975/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3975/events", "html_url": "https://github.com/networkx/networkx/issues/3975", "id": 625113476, "node_id": "MDU6SXNzdWU2MjUxMTM0NzY=", "number": 3975, "title": "infinite loop with bellman ford negative cycle", "user": {"login": "hl037", "id": 2771764, "node_id": "MDQ6VXNlcjI3NzE3NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2771764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hl037", "html_url": "https://github.com/hl037", "followers_url": "https://api.github.com/users/hl037/followers", "following_url": "https://api.github.com/users/hl037/following{/other_user}", "gists_url": "https://api.github.com/users/hl037/gists{/gist_id}", "starred_url": "https://api.github.com/users/hl037/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hl037/subscriptions", "organizations_url": "https://api.github.com/users/hl037/orgs", "repos_url": "https://api.github.com/users/hl037/repos", "events_url": "https://api.github.com/users/hl037/events{/privacy}", "received_events_url": "https://api.github.com/users/hl037/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-26T18:58:41Z", "updated_at": "2020-05-27T05:37:22Z", "closed_at": "2020-05-27T05:37:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "This graph causes an infinite loop with bellman ford short path. Note : I had to write it in pickle format since it seems the bug does not occurs when loading from other formats (node : the node keys are ints while with other format, they loads as str and the negative cycle is spotted).\r\n\r\n\r\n[BUG.pickle.zip](https://github.com/networkx/networkx/files/4684398/BUG.pickle.zip)\r\n\r\nTo reproduce : (python 3.8.2) : \r\n```\r\nimport networkx as nx\r\nG = nx.read_gpickle('BUG.pickle')\r\nnx.single_source_bellman_ford(G, -1, target=-2, weight='w') \r\n```\r\nWith a debugger, we can see the relaxation loop is done but there is a cycle in pred.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3969", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3969/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3969/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3969/events", "html_url": "https://github.com/networkx/networkx/issues/3969", "id": 623599731, "node_id": "MDU6SXNzdWU2MjM1OTk3MzE=", "number": 3969, "title": "Distinctiveness Centrality", "user": {"login": "iandreafc", "id": 52886148, "node_id": "MDQ6VXNlcjUyODg2MTQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/52886148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iandreafc", "html_url": "https://github.com/iandreafc", "followers_url": "https://api.github.com/users/iandreafc/followers", "following_url": "https://api.github.com/users/iandreafc/following{/other_user}", "gists_url": "https://api.github.com/users/iandreafc/gists{/gist_id}", "starred_url": "https://api.github.com/users/iandreafc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iandreafc/subscriptions", "organizations_url": "https://api.github.com/users/iandreafc/orgs", "repos_url": "https://api.github.com/users/iandreafc/repos", "events_url": "https://api.github.com/users/iandreafc/events{/privacy}", "received_events_url": "https://api.github.com/users/iandreafc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-23T07:16:31Z", "updated_at": "2020-06-25T18:06:52Z", "closed_at": "2020-06-25T18:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "We recently developed a Python package to calculate **Distinctiveness Centrality**.\r\nHere is our **code**: https://github.com/iandreafc/distinctiveness\r\nalso available on **Pypi** and already built over **Networkx**: https://pypi.org/project/distinctiveness/\r\nHere is **the paper** that describes the metric:  https://doi.org/10.1371/journal.pone.0233276\r\n\r\nWe just created a pull request with the hope we did everything right #3978 \r\nIt would be super if you guys could help us integrate Distinctiveness directly into Networkx!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3966", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3966/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3966/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3966/events", "html_url": "https://github.com/networkx/networkx/issues/3966", "id": 621370443, "node_id": "MDU6SXNzdWU2MjEzNzA0NDM=", "number": 3966, "title": "average_clustering defaults undefined to 0", "user": {"login": "matiasmorant", "id": 5036575, "node_id": "MDQ6VXNlcjUwMzY1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5036575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matiasmorant", "html_url": "https://github.com/matiasmorant", "followers_url": "https://api.github.com/users/matiasmorant/followers", "following_url": "https://api.github.com/users/matiasmorant/following{/other_user}", "gists_url": "https://api.github.com/users/matiasmorant/gists{/gist_id}", "starred_url": "https://api.github.com/users/matiasmorant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matiasmorant/subscriptions", "organizations_url": "https://api.github.com/users/matiasmorant/orgs", "repos_url": "https://api.github.com/users/matiasmorant/repos", "events_url": "https://api.github.com/users/matiasmorant/events{/privacy}", "received_events_url": "https://api.github.com/users/matiasmorant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-20T00:24:35Z", "updated_at": "2020-06-25T18:09:48Z", "closed_at": "2020-06-25T18:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "there are 3 cases:\r\n1- nodes with clustering_coefficient undefined (if it has < 2 neighbours)\r\n2- nodes with clustering_coefficient= 0\r\n3- nodes with clustering_coefficient > 0\r\n\r\nnetworkx takes nodes in the first case as having clustering=0 .\r\nGephi ignores nodes in case 1, and only averages over nodes in cases 2 and 3\r\n\r\nThis difference can have a significative impact on the result if there are many nodes in class 1\r\n\r\n![image](https://user-images.githubusercontent.com/5036575/82391333-6d7c2800-9a17-11ea-885f-52aed506d470.png)\r\n\r\n```\r\nG = nx.Graph()\r\nG.add_nodes_from([1,2,3,4,5,6])\r\nG.add_edges_from([(1,2),(2,3),(3,1)])\r\nresult = nx.average_clustering(G)\r\n```\r\nin networkx, `result==0.5` while in gephi `result==1.0`\r\n\r\nis there a 'right' answer about what to do with nodes in case 1 ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3964", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3964/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3964/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3964/events", "html_url": "https://github.com/networkx/networkx/issues/3964", "id": 620465509, "node_id": "MDU6SXNzdWU2MjA0NjU1MDk=", "number": 3964, "title": "NetworkX read_edgelist() dropping nodes and edges from tsv input file", "user": {"login": "realmarcin", "id": 4625870, "node_id": "MDQ6VXNlcjQ2MjU4NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4625870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realmarcin", "html_url": "https://github.com/realmarcin", "followers_url": "https://api.github.com/users/realmarcin/followers", "following_url": "https://api.github.com/users/realmarcin/following{/other_user}", "gists_url": "https://api.github.com/users/realmarcin/gists{/gist_id}", "starred_url": "https://api.github.com/users/realmarcin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realmarcin/subscriptions", "organizations_url": "https://api.github.com/users/realmarcin/orgs", "repos_url": "https://api.github.com/users/realmarcin/repos", "events_url": "https://api.github.com/users/realmarcin/events{/privacy}", "received_events_url": "https://api.github.com/users/realmarcin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T19:53:35Z", "updated_at": "2020-07-22T19:47:19Z", "closed_at": "2020-07-22T19:47:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to load a fairly large graph (16M edges) with NetworkX. The edge file can be found here:\r\nhttp://genomics.lbl.gov/~marcin/merged_edges_simple.tsv.gz\r\n\r\nThis is the code to reproduce the issue:\r\n\r\ng = nx.read_edgelist(input_file, nodetype=str, data=(('weight', int),), create_using=nx.Graph())\r\nprint(\"[INFO] Number of nodes:{} and number of edges: {}.\".format(len(g.nodes()), len(g.edges())), flush=True)\r\n\r\nThis produces the following output:\r\nNumber of nodes:336359 and number of edges: 10292807.\r\n\r\nHowever, the input tsv file has more edges and nodes, namely:\r\n- 16173904 edges based on wc of the input file (this includes ~1000 redundant edges per 'sort | uniq')\r\n- 451237 nonredundant nodes\r\n\r\nFor some reason about 6M edges are being lost and over 100k nodes, when the data is loaded by NetworkX. My best hunch is this may be because of odd characters in node labels? Is there anything else that could lead to this behavior?\r\n\r\nThis is using NetworkX 2.4 and python 3.7.\r\n\r\n\r\nmany thanks,\r\nmarcin\r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3957", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3957/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3957/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3957/events", "html_url": "https://github.com/networkx/networkx/issues/3957", "id": 618348918, "node_id": "MDU6SXNzdWU2MTgzNDg5MTg=", "number": 3957, "title": "Example to run on CUDA", "user": {"login": "sashml", "id": 3776566, "node_id": "MDQ6VXNlcjM3NzY1NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3776566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sashml", "html_url": "https://github.com/sashml", "followers_url": "https://api.github.com/users/sashml/followers", "following_url": "https://api.github.com/users/sashml/following{/other_user}", "gists_url": "https://api.github.com/users/sashml/gists{/gist_id}", "starred_url": "https://api.github.com/users/sashml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sashml/subscriptions", "organizations_url": "https://api.github.com/users/sashml/orgs", "repos_url": "https://api.github.com/users/sashml/repos", "events_url": "https://api.github.com/users/sashml/events{/privacy}", "received_events_url": "https://api.github.com/users/sashml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-14T16:00:40Z", "updated_at": "2020-05-14T21:31:43Z", "closed_at": "2020-05-14T18:03:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is that possible to support CUDA?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3956", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3956/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3956/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3956/events", "html_url": "https://github.com/networkx/networkx/issues/3956", "id": 618339892, "node_id": "MDU6SXNzdWU2MTgzMzk4OTI=", "number": 3956, "title": "Add useful `__repr__` methods", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-14T15:50:05Z", "updated_at": "2020-05-28T18:20:13Z", "closed_at": "2020-05-28T18:20:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example, instead of `<networkx.classes.digraph.DiGraph object at 0x0000000003D6DE80>` we could have `<networkx.DiGraph: 7 nodes, 5 edges>`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3955", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3955/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3955/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3955/events", "html_url": "https://github.com/networkx/networkx/issues/3955", "id": 618120886, "node_id": "MDU6SXNzdWU2MTgxMjA4ODY=", "number": 3955, "title": "What \"networkx.algorithms.cuts.boundary_expansion\" function exactly mean?", "user": {"login": "cherish0", "id": 17943232, "node_id": "MDQ6VXNlcjE3OTQzMjMy", "avatar_url": "https://avatars2.githubusercontent.com/u/17943232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherish0", "html_url": "https://github.com/cherish0", "followers_url": "https://api.github.com/users/cherish0/followers", "following_url": "https://api.github.com/users/cherish0/following{/other_user}", "gists_url": "https://api.github.com/users/cherish0/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherish0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherish0/subscriptions", "organizations_url": "https://api.github.com/users/cherish0/orgs", "repos_url": "https://api.github.com/users/cherish0/repos", "events_url": "https://api.github.com/users/cherish0/events{/privacy}", "received_events_url": "https://api.github.com/users/cherish0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-05-14T10:38:50Z", "updated_at": "2020-08-16T04:04:30Z", "closed_at": "2020-08-16T04:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` Python\r\ndef boundary_expansion(G, S):\r\n    \"\"\"Returns the boundary expansion of the set `S`.\r\n    The *boundary expansion* is the quotient of the size of the edge\r\n    boundary and the cardinality of *S*. [1]\r\n    Parameters\r\n    ----------\r\n    G : NetworkX graph\r\n    S : sequence\r\n        A sequence of nodes in `G`.\r\n    Returns\r\n    -------\r\n    number\r\n        The boundary expansion of the set `S`.\r\n    See also\r\n    --------\r\n    edge_expansion\r\n    mixing_expansion\r\n    node_expansion\r\n    References\r\n    ----------\r\n    .. [1] Vadhan, Salil P.\r\n           \"Pseudorandomness.\"\r\n           *Foundations and Trends in Theoretical Computer Science*\r\n           7.1\u20133 (2011): 1\u2013336.\r\n           <https://doi.org/10.1561/0400000010>\r\n    \"\"\"\r\n    return len(nx.node_boundary(G, S)) / len(S)\r\n```\r\n\r\nThe document said about \"edge boundary\" but the source code is about node boundary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3953", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3953/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3953/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3953/events", "html_url": "https://github.com/networkx/networkx/issues/3953", "id": 617848649, "node_id": "MDU6SXNzdWU2MTc4NDg2NDk=", "number": 3953, "title": "Same Graph, different Simrank results.", "user": {"login": "Carghaez", "id": 297838, "node_id": "MDQ6VXNlcjI5NzgzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/297838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Carghaez", "html_url": "https://github.com/Carghaez", "followers_url": "https://api.github.com/users/Carghaez/followers", "following_url": "https://api.github.com/users/Carghaez/following{/other_user}", "gists_url": "https://api.github.com/users/Carghaez/gists{/gist_id}", "starred_url": "https://api.github.com/users/Carghaez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Carghaez/subscriptions", "organizations_url": "https://api.github.com/users/Carghaez/orgs", "repos_url": "https://api.github.com/users/Carghaez/repos", "events_url": "https://api.github.com/users/Carghaez/events{/privacy}", "received_events_url": "https://api.github.com/users/Carghaez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-05-14T01:00:57Z", "updated_at": "2020-05-28T18:16:33Z", "closed_at": "2020-05-28T18:16:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello there! \r\n![simrank](https://user-images.githubusercontent.com/297838/81880095-ccabe980-958c-11ea-9058-46bcab40ee11.PNG)\r\n\r\nI want to reproduce the simrank of the graph linked above, so I use your FL simrank_similarity and simrank_similarity_numpy and... I noticed that the results are different!\r\n\r\nsteps to reproduce\r\n\r\n```python\r\nimport networkx\r\nimport numpy\r\n\r\noptions = {\r\n    'font_weight': 'bold',\r\n    'node_color': 'red',\r\n    'font_color': 'black',\r\n    'edge_color': 'red',\r\n    'node_size': 1000,\r\n    'width': 2,\r\n    'arrowstyle': '-|>',\r\n    'arrowsize': 15\r\n}\r\n\r\nLabels = {0:'Univ', 1:'ProfA', 2:'ProfB', 3:'StudentA', 4:'StudentB'}\r\n\r\nG = networkx.DiGraph()\r\n\r\nG.add_node(0, label='Univ')\r\nG.add_node(1, label='ProfA')\r\nG.add_node(2, label='ProfB')\r\nG.add_node(3, label='StudentA')\r\nG.add_node(4, label='StudentB')\r\n\r\nG.add_edges_from([(0, 1), (0, 2), (1, 3), (2, 4), (4, 2), (3, 0)])\r\n\r\n# Debug\r\n# networkx.draw_networkx(G, arrows=True, with_labels=True, labels=Labels, **options)\r\n\r\n# simrank_similarity\r\nsim = networkx.algorithms.similarity.simrank_similarity(G)\r\nsim_array = numpy.array([[sim[u][v] for v in sorted(sim[u])] for u in sorted(sim)])\r\nprint(sim_array)\r\n\r\n# simrank_similarity_numpy\r\nsim_array_numpy =  networkx.algorithms.similarity.simrank_similarity_numpy(G)\r\nprint(sim_array_numpy)\r\n```\r\n\r\nBased on the image above, the simrank_similarity_numpy shows the expected weights as opposed to simrank_similarity which shows unexpected values.\r\n\r\nMaybe I am missing something important or somewhat else?\r\n\r\nThanks in advice!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3951", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3951/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3951/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3951/events", "html_url": "https://github.com/networkx/networkx/issues/3951", "id": 616583841, "node_id": "MDU6SXNzdWU2MTY1ODM4NDE=", "number": 3951, "title": "weird behaviour with node removal/counting", "user": {"login": "ggrrll", "id": 15370425, "node_id": "MDQ6VXNlcjE1MzcwNDI1", "avatar_url": "https://avatars3.githubusercontent.com/u/15370425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ggrrll", "html_url": "https://github.com/ggrrll", "followers_url": "https://api.github.com/users/ggrrll/followers", "following_url": "https://api.github.com/users/ggrrll/following{/other_user}", "gists_url": "https://api.github.com/users/ggrrll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ggrrll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ggrrll/subscriptions", "organizations_url": "https://api.github.com/users/ggrrll/orgs", "repos_url": "https://api.github.com/users/ggrrll/repos", "events_url": "https://api.github.com/users/ggrrll/events{/privacy}", "received_events_url": "https://api.github.com/users/ggrrll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-12T11:33:11Z", "updated_at": "2020-05-13T07:50:10Z", "closed_at": "2020-05-13T07:50:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nthere\u00a0seems to be something weird with `g.number_of_nodes` or `g.remove_nodes_from`:\r\n\r\nas you can see from the screenshot, I get sometimes that the difference is not = N removed nodes\r\n\r\n```\r\ng = nx.fast_gnp_random_graph(1000, 0.1)\r\nnx.is_connected(g)\r\n\r\nremoves_N = 10\r\nprint('init. N. nodes', g.number_of_nodes())\r\n\r\nfor i in range(int(g.number_of_nodes() / removes_N)):\r\n\r\n    nn_1 = g.number_of_nodes()\r\n\r\n    # select nodes to remove\r\n    removed_nodes = np.random.choice(g.nodes(), removes_N)\r\n\r\n    # remove selected nodes\r\n    g.remove_nodes_from(removed_nodes)\r\n\r\n    # double check\r\n    nn_2 = g.number_of_nodes()\r\n\r\n    if nn_1 - nn_2 != len(removed_nodes):\r\n        print(nn_1 - nn_2, removed_nodes)\r\n        print([my_node for my_node in removed_nodes if my_node in g.nodes()])\r\n```\r\n\r\n<img width=\"994\" alt=\"Screenshot 2020-05-12 at 13 31 18\" src=\"https://user-images.githubusercontent.com/15370425/81682184-fbbf3f80-9454-11ea-850f-c6508ee99848.png\">\r\n\r\n(this might be related to #3943 ) \r\n\r\nThanks for your help!\r\n\r\nps: on Version: 2.4 / python3.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3950", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3950/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3950/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3950/events", "html_url": "https://github.com/networkx/networkx/issues/3950", "id": 615689888, "node_id": "MDU6SXNzdWU2MTU2ODk4ODg=", "number": 3950, "title": "read_gml encoding error", "user": {"login": "bigpapame", "id": 56836973, "node_id": "MDQ6VXNlcjU2ODM2OTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/56836973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bigpapame", "html_url": "https://github.com/bigpapame", "followers_url": "https://api.github.com/users/bigpapame/followers", "following_url": "https://api.github.com/users/bigpapame/following{/other_user}", "gists_url": "https://api.github.com/users/bigpapame/gists{/gist_id}", "starred_url": "https://api.github.com/users/bigpapame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bigpapame/subscriptions", "organizations_url": "https://api.github.com/users/bigpapame/orgs", "repos_url": "https://api.github.com/users/bigpapame/repos", "events_url": "https://api.github.com/users/bigpapame/events{/privacy}", "received_events_url": "https://api.github.com/users/bigpapame/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-11T08:25:39Z", "updated_at": "2020-06-25T18:00:40Z", "closed_at": "2020-06-25T18:00:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "### It seems like my GML file included Chinese texts, so whenever i try to read gml it gives me \"input is not ASCII-encoded\" error. So is there any way to keep the Chinese texts and make this program work at the same time?\r\n![error](https://user-images.githubusercontent.com/56836973/81538317-2fd92880-93a1-11ea-9144-d0719cbdf2ff.JPG)\r\n![image](https://user-images.githubusercontent.com/56836973/81538378-42ebf880-93a1-11ea-8f02-6fd79bcbff69.png)\r\n```\r\nimport networkx as nx\r\nimport matplotlib.pyplot as plt\r\nG = nx.read_gml('Data_sets/test.gml')\r\n\r\npos = nx.circular_layout(G)\r\n\r\n# nodes\r\nnx.draw_networkx_nodes(G, pos, node_size=100)\r\n# edges\r\nnx.draw_networkx_edges(G, pos)\r\n\r\n# labels\r\n#nx.draw_networkx_labels(G, pos)\r\n\r\n#print (nx.info(G))\r\n#print (nx.is_directed(G))\r\n#nx.draw_random(G)\r\nplt.axis('off')\r\nplt.show()\r\n```\r\n\r\nThis is my GML file (removed due to length)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3948", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3948/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3948/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3948/events", "html_url": "https://github.com/networkx/networkx/issues/3948", "id": 614193590, "node_id": "MDU6SXNzdWU2MTQxOTM1OTA=", "number": 3948, "title": "Feature request: pass weight functions in class algorithms.simple_paths like in class algorithms.shortest_paths - Code added, pending for merge", "user": {"login": "cmkpl", "id": 1621323, "node_id": "MDQ6VXNlcjE2MjEzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1621323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmkpl", "html_url": "https://github.com/cmkpl", "followers_url": "https://api.github.com/users/cmkpl/followers", "following_url": "https://api.github.com/users/cmkpl/following{/other_user}", "gists_url": "https://api.github.com/users/cmkpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmkpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmkpl/subscriptions", "organizations_url": "https://api.github.com/users/cmkpl/orgs", "repos_url": "https://api.github.com/users/cmkpl/repos", "events_url": "https://api.github.com/users/cmkpl/events{/privacy}", "received_events_url": "https://api.github.com/users/cmkpl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-07T16:37:12Z", "updated_at": "2020-05-20T01:01:44Z", "closed_at": "2020-05-20T01:01:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For consistency, if weight function can be passed into the functions in the class algorithms.simple_paths like in the class algorithms.shortest_paths, it would be great.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3946", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3946/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3946/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3946/events", "html_url": "https://github.com/networkx/networkx/issues/3946", "id": 613842862, "node_id": "MDU6SXNzdWU2MTM4NDI4NjI=", "number": 3946, "title": "The documentation of astar_path not updated for the commit #3799", "user": {"login": "cmkpl", "id": 1621323, "node_id": "MDQ6VXNlcjE2MjEzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1621323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmkpl", "html_url": "https://github.com/cmkpl", "followers_url": "https://api.github.com/users/cmkpl/followers", "following_url": "https://api.github.com/users/cmkpl/following{/other_user}", "gists_url": "https://api.github.com/users/cmkpl/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmkpl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmkpl/subscriptions", "organizations_url": "https://api.github.com/users/cmkpl/orgs", "repos_url": "https://api.github.com/users/cmkpl/repos", "events_url": "https://api.github.com/users/cmkpl/events{/privacy}", "received_events_url": "https://api.github.com/users/cmkpl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-05-07T07:39:27Z", "updated_at": "2020-05-07T16:33:53Z", "closed_at": "2020-05-07T16:33:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The updated code in  #3799 is not reflected in the following line\r\n\r\nhttps://github.com/networkx/networkx/blob/7ae7f0146a33e340acbabe5a11d297e8187cb6d8/networkx/algorithms/shortest_paths/astar.py#L34-L35\r\n\r\nIt should also accept function as the parameter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3945", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3945/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3945/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3945/events", "html_url": "https://github.com/networkx/networkx/issues/3945", "id": 613829226, "node_id": "MDU6SXNzdWU2MTM4MjkyMjY=", "number": 3945, "title": "DiGraph.__init__ does not allow sets", "user": {"login": "alabarre", "id": 48905616, "node_id": "MDQ6VXNlcjQ4OTA1NjE2", "avatar_url": "https://avatars3.githubusercontent.com/u/48905616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alabarre", "html_url": "https://github.com/alabarre", "followers_url": "https://api.github.com/users/alabarre/followers", "following_url": "https://api.github.com/users/alabarre/following{/other_user}", "gists_url": "https://api.github.com/users/alabarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/alabarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alabarre/subscriptions", "organizations_url": "https://api.github.com/users/alabarre/orgs", "repos_url": "https://api.github.com/users/alabarre/repos", "events_url": "https://api.github.com/users/alabarre/events{/privacy}", "received_events_url": "https://api.github.com/users/alabarre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121661134, "node_id": "MDU6TGFiZWwxMjE2NjExMzQ=", "url": "https://api.github.com/repos/networkx/networkx/labels/Enhancement", "name": "Enhancement", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2020-05-07T07:13:48Z", "updated_at": "2020-08-07T16:43:46Z", "closed_at": "2020-08-07T16:43:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I find it very convenient to be able to initialise graphs using:\r\n```python\r\n>>> import networkx as nx  # version 2.2\r\n>>> G = nx.DiGraph([(1, 2), (3, 4)])\r\n>>> G = nx.DiGraph(((1, 2), (3, 4)))\r\n```\r\nHowever sets do not work and I don't understand why they have been disallowed:\r\n```python\r\n>>> import networkx as nx\r\n>>> G = nx.DiGraph({(1, 2), (3, 4)})  # fails with frozenset too\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3/dist-packages/networkx/classes/digraph.py\", line 309, in __init__\r\n    convert.to_networkx_graph(incoming_graph_data, create_using=self)\r\n  File \"/usr/lib/python3/dist-packages/networkx/convert.py\", line 161, in to_networkx_graph\r\n    \"Input is not a known data type for conversion.\")\r\nnetworkx.exception.NetworkXError: Input is not a known data type for conversion.\r\n```\r\nShouldn't DiGraph (and Graph, etc.) accept *any* iterable of tuples?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3943", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3943/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3943/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3943/events", "html_url": "https://github.com/networkx/networkx/issues/3943", "id": 613696264, "node_id": "MDU6SXNzdWU2MTM2OTYyNjQ=", "number": 3943, "title": "Inconsistent behavior when isolates is combined with remove_from_nodes", "user": {"login": "jeromemassot", "id": 20254310, "node_id": "MDQ6VXNlcjIwMjU0MzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/20254310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeromemassot", "html_url": "https://github.com/jeromemassot", "followers_url": "https://api.github.com/users/jeromemassot/followers", "following_url": "https://api.github.com/users/jeromemassot/following{/other_user}", "gists_url": "https://api.github.com/users/jeromemassot/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeromemassot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeromemassot/subscriptions", "organizations_url": "https://api.github.com/users/jeromemassot/orgs", "repos_url": "https://api.github.com/users/jeromemassot/repos", "events_url": "https://api.github.com/users/jeromemassot/events{/privacy}", "received_events_url": "https://api.github.com/users/jeromemassot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-07T00:39:11Z", "updated_at": "2020-06-25T18:05:57Z", "closed_at": "2020-06-25T18:05:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "remove_from_nodes() does not act the same when it is fed with the iterator or the list of isolated nodes. Case 2 is acting as expected. Case 1 seems failing to remove any node.\r\n\r\nCase 1:\r\nG = nx.Graph()\r\nG.add_nodes_from(\"ABCD\")\r\nmy_isolates = nx.isolates(G)\r\nG.remove_nodes_from(my_isolates)\r\nlist(G)\r\n>> ['A', 'B', 'C', 'D']\r\n\r\nCase 2:\r\nG = nx.Graph()\r\nG.add_nodes_from(\"ABCD\")\r\nG.remove_nodes_from(nx.isolates(G))\r\nlist(G)\r\n>> [ ]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3942", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3942/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3942/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3942/events", "html_url": "https://github.com/networkx/networkx/issues/3942", "id": 612558446, "node_id": "MDU6SXNzdWU2MTI1NTg0NDY=", "number": 3942, "title": "Test failure: spectral_graph_forge() missing 2 required positional arguments", "user": {"login": "PureTryOut", "id": 1565836, "node_id": "MDQ6VXNlcjE1NjU4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PureTryOut", "html_url": "https://github.com/PureTryOut", "followers_url": "https://api.github.com/users/PureTryOut/followers", "following_url": "https://api.github.com/users/PureTryOut/following{/other_user}", "gists_url": "https://api.github.com/users/PureTryOut/gists{/gist_id}", "starred_url": "https://api.github.com/users/PureTryOut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PureTryOut/subscriptions", "organizations_url": "https://api.github.com/users/PureTryOut/orgs", "repos_url": "https://api.github.com/users/PureTryOut/repos", "events_url": "https://api.github.com/users/PureTryOut/events{/privacy}", "received_events_url": "https://api.github.com/users/PureTryOut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jarrodmillman", "id": 123428, "node_id": "MDQ6VXNlcjEyMzQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarrodmillman", "html_url": "https://github.com/jarrodmillman", "followers_url": "https://api.github.com/users/jarrodmillman/followers", "following_url": "https://api.github.com/users/jarrodmillman/following{/other_user}", "gists_url": "https://api.github.com/users/jarrodmillman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarrodmillman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarrodmillman/subscriptions", "organizations_url": "https://api.github.com/users/jarrodmillman/orgs", "repos_url": "https://api.github.com/users/jarrodmillman/repos", "events_url": "https://api.github.com/users/jarrodmillman/events{/privacy}", "received_events_url": "https://api.github.com/users/jarrodmillman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-05-05T12:17:53Z", "updated_at": "2020-07-08T08:28:42Z", "closed_at": "2020-07-08T08:28:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running Python 3.8 on Alpine Linux (planning to put networkx in the repos):\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 145, in <module>\r\n    setup(\r\n  File \"/usr/lib/python3.8/site-packages/setuptools/__init__.py\", line 144, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/usr/lib/python3.8/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/lib/python3.8/distutils/dist.py\", line 966, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n    cmd_obj.run()\r\n  File \"/usr/lib/python3.8/site-packages/setuptools/command/test.py\", line 238, in run\r\n    self.run_tests()\r\n  File \"/usr/lib/python3.8/site-packages/setuptools/command/test.py\", line 256, in run_tests\r\n    test = unittest.main(\r\n  File \"/usr/lib/python3.8/unittest/main.py\", line 100, in __init__\r\n    self.parseArgs(argv)\r\n  File \"/usr/lib/python3.8/unittest/main.py\", line 124, in parseArgs\r\n    self._do_discovery(argv[2:])\r\n  File \"/usr/lib/python3.8/unittest/main.py\", line 244, in _do_discovery\r\n    self.createTests(from_discovery=True, Loader=Loader)\r\n  File \"/usr/lib/python3.8/unittest/main.py\", line 154, in createTests\r\n    self.test = loader.discover(self.start, self.pattern, self.top)\r\n  File \"/usr/lib/python3.8/unittest/loader.py\", line 349, in discover\r\n    tests = list(self._find_tests(start_dir, pattern))\r\n  File \"/usr/lib/python3.8/unittest/loader.py\", line 405, in _find_tests\r\n    tests, should_recurse = self._find_test_path(\r\n  File \"/usr/lib/python3.8/unittest/loader.py\", line 483, in _find_test_path\r\n    tests = self.loadTestsFromModule(package, pattern=pattern)\r\n  File \"/usr/lib/python3.8/site-packages/setuptools/command/test.py\", line 55, in loadTestsFromModule\r\n    tests.append(self.loadTestsFromName(submodule))\r\n  File \"/usr/lib/python3.8/unittest/loader.py\", line 191, in loadTestsFromName\r\n    return self.loadTestsFromModule(obj)\r\n  File \"/usr/lib/python3.8/site-packages/setuptools/command/test.py\", line 55, in loadTestsFromModule\r\n    tests.append(self.loadTestsFromName(submodule))\r\n  File \"/usr/lib/python3.8/unittest/loader.py\", line 205, in loadTestsFromName\r\n    test = obj()\r\nTypeError: spectral_graph_forge() missing 2 required positional arguments: 'G' and 'alpha'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3941", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3941/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3941/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3941/events", "html_url": "https://github.com/networkx/networkx/issues/3941", "id": 612409517, "node_id": "MDU6SXNzdWU2MTI0MDk1MTc=", "number": 3941, "title": "The problems about the \"similarity.py\"", "user": {"login": "tiankonghenlan20113046", "id": 10166585, "node_id": "MDQ6VXNlcjEwMTY2NTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/10166585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiankonghenlan20113046", "html_url": "https://github.com/tiankonghenlan20113046", "followers_url": "https://api.github.com/users/tiankonghenlan20113046/followers", "following_url": "https://api.github.com/users/tiankonghenlan20113046/following{/other_user}", "gists_url": "https://api.github.com/users/tiankonghenlan20113046/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiankonghenlan20113046/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiankonghenlan20113046/subscriptions", "organizations_url": "https://api.github.com/users/tiankonghenlan20113046/orgs", "repos_url": "https://api.github.com/users/tiankonghenlan20113046/repos", "events_url": "https://api.github.com/users/tiankonghenlan20113046/events{/privacy}", "received_events_url": "https://api.github.com/users/tiankonghenlan20113046/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T07:52:58Z", "updated_at": "2020-06-25T18:12:31Z", "closed_at": "2020-06-25T18:12:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello ,dear author:\r\n\r\nI used your code named \u201csimilarity.py\u201d about \u201chow to calculate the GED problem\u201d\r\n([link](https://networkx.github.io/documentation/networkx2.2/_modules/networkx/algorithms/similarity.html#graph_edit_distance )or [link2](https://github.com/networkx/networkx/blob/master/networkx/algorithms/similarity.py) )\r\nI read your code carefully, and have some questions as follows.\r\n# 1. How  how do you store a graph ?\r\n We know that we often use \u201cadjlist\u201d or \u201cadjmatrix\u201d in the data structure. Every graph in your code use the graph of \u201cnetworkx\u201d , does it mean that we donnot need to consider the storage of a graph?\r\n# 2. How to define the cost ?\r\nI want to define the cost of opertating on a vertex or an edge like this:\r\n```\r\npath , cost = nx.optimal_edit_paths(graph_nx_1 , graph_nx_2,\r\n                                    node_subst_cost=5,node_ins_cost=1,node_del_cost=1,\r\n                                    edge_subst_cost=4,edge_ins_cost=2,edge_del_cost=3)\r\n```\r\nbut it gives some bug which says `\"TypeError: 'int' object is not callable\".`\r\nI just want to define the cost of every operation on a node or an edge. But the parameter node_subst_cost/node_ins_cost and so on cannot be understood by me. You write the comments during the definition of the function like this :\r\nhttps://github.com/networkx/networkx/blob/7ae7f0146a33e340acbabe5a11d297e8187cb6d8/networkx/algorithms/similarity.py#L558\r\n\r\n# 3.  the more paths, the less similarity between two graphs? \r\nI print the \"path\" and \"cost\" after running the code. I wonder that if I can judge the similarity of two graphs by the number of paths or just the cost ?\r\n\r\nI am struggling to  improve the performance of the GED caiculation and want to keep in touch with you. Hope for your reply.  @jwegis @cournape \r\n\r\nYour sincerely, Woog.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3940", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3940/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3940/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3940/events", "html_url": "https://github.com/networkx/networkx/issues/3940", "id": 611956203, "node_id": "MDU6SXNzdWU2MTE5NTYyMDM=", "number": 3940, "title": "'root' parameter not working in 'graphviz_layout()'", "user": {"login": "padix-key", "id": 28051833, "node_id": "MDQ6VXNlcjI4MDUxODMz", "avatar_url": "https://avatars2.githubusercontent.com/u/28051833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/padix-key", "html_url": "https://github.com/padix-key", "followers_url": "https://api.github.com/users/padix-key/followers", "following_url": "https://api.github.com/users/padix-key/following{/other_user}", "gists_url": "https://api.github.com/users/padix-key/gists{/gist_id}", "starred_url": "https://api.github.com/users/padix-key/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/padix-key/subscriptions", "organizations_url": "https://api.github.com/users/padix-key/orgs", "repos_url": "https://api.github.com/users/padix-key/repos", "events_url": "https://api.github.com/users/padix-key/events{/privacy}", "received_events_url": "https://api.github.com/users/padix-key/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-04T15:18:05Z", "updated_at": "2020-06-25T18:10:31Z", "closed_at": "2020-06-25T18:10:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to plot a graph as a tree and I would like to determine which node to use as root. However, the following is not working:\r\n```python\r\nimport networkx as nx\r\nfrom networkx.drawing.nx_pydot import graphviz_layout\r\ngraph = nx.Graph()\r\ngraph.add_edge(\"B\", \"A\")\r\nnx.draw(\r\n    graph,\r\n    graphviz_layout(graph, prog=\"dot\", root=\"A\"),\r\n    with_labels=True\r\n)\r\nplt.show()\r\n```\r\nOutput:\r\n![graph](https://user-images.githubusercontent.com/28051833/80982036-06614f80-8e2b-11ea-982a-d733f78c2d60.png)\r\n\r\nI would like to have `\"A\"` as root, but instead `\"B\"` is chosen.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3939", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3939/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3939/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3939/events", "html_url": "https://github.com/networkx/networkx/issues/3939", "id": 611310459, "node_id": "MDU6SXNzdWU2MTEzMTA0NTk=", "number": 3939, "title": "convert_matrix.py missing from_pandas_dataframe", "user": {"login": "huyptruong", "id": 37203205, "node_id": "MDQ6VXNlcjM3MjAzMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/37203205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huyptruong", "html_url": "https://github.com/huyptruong", "followers_url": "https://api.github.com/users/huyptruong/followers", "following_url": "https://api.github.com/users/huyptruong/following{/other_user}", "gists_url": "https://api.github.com/users/huyptruong/gists{/gist_id}", "starred_url": "https://api.github.com/users/huyptruong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huyptruong/subscriptions", "organizations_url": "https://api.github.com/users/huyptruong/orgs", "repos_url": "https://api.github.com/users/huyptruong/repos", "events_url": "https://api.github.com/users/huyptruong/events{/privacy}", "received_events_url": "https://api.github.com/users/huyptruong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-03T01:34:01Z", "updated_at": "2020-06-25T18:13:09Z", "closed_at": "2020-06-25T18:13:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, it seems that the latest version of `networkx` has `from_pandas_dataframe` removed. You can see it from here, `__all__ = [\r\n    \"from_numpy_matrix\",\r\n    \"to_numpy_matrix\",\r\n    \"from_pandas_adjacency\",\r\n    \"to_pandas_adjacency\",\r\n    \"from_pandas_edgelist\",\r\n    \"to_pandas_edgelist\",\r\n    \"to_numpy_recarray\",\r\n    \"from_scipy_sparse_matrix\",\r\n    \"to_scipy_sparse_matrix\",\r\n    \"from_numpy_array\",\r\n    \"to_numpy_array\",\r\n]`\r\nIs it possible for me to download the previous version? Or is there a workaround to view a pandas dataframe as a graph? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3938", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3938/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3938/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3938/events", "html_url": "https://github.com/networkx/networkx/issues/3938", "id": 610894387, "node_id": "MDU6SXNzdWU2MTA4OTQzODc=", "number": 3938, "title": "Add option to BFS_edges to process children in order based on node attribute", "user": {"login": "tambulkar", "id": 28329861, "node_id": "MDQ6VXNlcjI4MzI5ODYx", "avatar_url": "https://avatars2.githubusercontent.com/u/28329861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tambulkar", "html_url": "https://github.com/tambulkar", "followers_url": "https://api.github.com/users/tambulkar/followers", "following_url": "https://api.github.com/users/tambulkar/following{/other_user}", "gists_url": "https://api.github.com/users/tambulkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/tambulkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tambulkar/subscriptions", "organizations_url": "https://api.github.com/users/tambulkar/orgs", "repos_url": "https://api.github.com/users/tambulkar/repos", "events_url": "https://api.github.com/users/tambulkar/events{/privacy}", "received_events_url": "https://api.github.com/users/tambulkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-01T18:21:56Z", "updated_at": "2020-06-28T12:44:11Z", "closed_at": "2020-06-25T18:16:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to add the option to pass in a comparator function that will add children to the queue in an order specified by the comparator and their [node attributes](https://networkx.github.io/documentation/stable/reference/generated/networkx.classes.function.set_node_attributes.html)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3937", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3937/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3937/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3937/events", "html_url": "https://github.com/networkx/networkx/issues/3937", "id": 607163273, "node_id": "MDU6SXNzdWU2MDcxNjMyNzM=", "number": 3937, "title": "Misleading description in the doc", "user": {"login": "wandli", "id": 26496160, "node_id": "MDQ6VXNlcjI2NDk2MTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/26496160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wandli", "html_url": "https://github.com/wandli", "followers_url": "https://api.github.com/users/wandli/followers", "following_url": "https://api.github.com/users/wandli/following{/other_user}", "gists_url": "https://api.github.com/users/wandli/gists{/gist_id}", "starred_url": "https://api.github.com/users/wandli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wandli/subscriptions", "organizations_url": "https://api.github.com/users/wandli/orgs", "repos_url": "https://api.github.com/users/wandli/repos", "events_url": "https://api.github.com/users/wandli/events{/privacy}", "received_events_url": "https://api.github.com/users/wandli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2020-04-27T01:10:12Z", "updated_at": "2020-05-17T16:04:17Z", "closed_at": "2020-05-17T16:04:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this page\r\nhttps://networkx.github.io/documentation/stable/reference/algorithms/generated/networkx.algorithms.structuralholes.effective_size.html\r\nThe description of *Return* is \"Dictionary with nodes as keys and the constraint on the node as values.\"\r\nBut this is effective size. I think it should be  \"Dictionary with nodes as keys and the **effective size of** the node as values.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3936", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3936/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3936/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3936/events", "html_url": "https://github.com/networkx/networkx/issues/3936", "id": 607033175, "node_id": "MDU6SXNzdWU2MDcwMzMxNzU=", "number": 3936, "title": "Const'ifying utils.reversed?", "user": {"login": "zougloub", "id": 998040, "node_id": "MDQ6VXNlcjk5ODA0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/998040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zougloub", "html_url": "https://github.com/zougloub", "followers_url": "https://api.github.com/users/zougloub/followers", "following_url": "https://api.github.com/users/zougloub/following{/other_user}", "gists_url": "https://api.github.com/users/zougloub/gists{/gist_id}", "starred_url": "https://api.github.com/users/zougloub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zougloub/subscriptions", "organizations_url": "https://api.github.com/users/zougloub/orgs", "repos_url": "https://api.github.com/users/zougloub/repos", "events_url": "https://api.github.com/users/zougloub/events{/privacy}", "received_events_url": "https://api.github.com/users/zougloub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2020-04-26T15:02:23Z", "updated_at": "2020-06-02T20:43:53Z", "closed_at": "2020-06-02T20:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was surprised that `nx.utils.reversed` is modifying its argument instead of returning a reversed view of it, which would keep the argument unmodified.\r\n\r\nCurrent:\r\n```py\r\nwith nx.utils.reversed(G):\r\n   ...\r\n```\r\n\r\nProposed:\r\n```py\r\nwith nx.utils.reversed(G) as G_: # or another name like reversed_view...\r\n   ...\r\n```\r\n\r\nContext: I didn't expect `nx.ancestors(dg, n)` to modify `dg` and was calling it from several threads and descendants were returned sometimes. Found the problem and now I'm using a view per thread, nevertheless IMO it would be cleaner if free functions weren't unexpectedly modifying their arguments.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3933", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3933/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3933/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3933/events", "html_url": "https://github.com/networkx/networkx/issues/3933", "id": 606873324, "node_id": "MDU6SXNzdWU2MDY4NzMzMjQ=", "number": 3933, "title": "Asynchronous Topological Sort", "user": {"login": "tambulkar", "id": 28329861, "node_id": "MDQ6VXNlcjI4MzI5ODYx", "avatar_url": "https://avatars2.githubusercontent.com/u/28329861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tambulkar", "html_url": "https://github.com/tambulkar", "followers_url": "https://api.github.com/users/tambulkar/followers", "following_url": "https://api.github.com/users/tambulkar/following{/other_user}", "gists_url": "https://api.github.com/users/tambulkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/tambulkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tambulkar/subscriptions", "organizations_url": "https://api.github.com/users/tambulkar/orgs", "repos_url": "https://api.github.com/users/tambulkar/repos", "events_url": "https://api.github.com/users/tambulkar/events{/privacy}", "received_events_url": "https://api.github.com/users/tambulkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T23:02:23Z", "updated_at": "2020-05-01T17:23:16Z", "closed_at": "2020-05-01T17:23:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running tasks in parallel via MPI and want to use a DAG and topological sort to distribute these tasks to other processors. Using the topological sort algorithm provides me a generator for tasks, but it assumes that a task is completed as soon as it is generated. Does networkx provide an asynchronous topological sort generator that waits for a node to be asynchronously marked as completed before removing it a dependency for its children?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3930", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3930/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3930/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3930/events", "html_url": "https://github.com/networkx/networkx/issues/3930", "id": 604621132, "node_id": "MDU6SXNzdWU2MDQ2MjExMzI=", "number": 3930, "title": "nx.to_pandas_edgelist() will not update the \"source\" and \"target\" columns if they already exist", "user": {"login": "iboates", "id": 13814358, "node_id": "MDQ6VXNlcjEzODE0MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13814358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iboates", "html_url": "https://github.com/iboates", "followers_url": "https://api.github.com/users/iboates/followers", "following_url": "https://api.github.com/users/iboates/following{/other_user}", "gists_url": "https://api.github.com/users/iboates/gists{/gist_id}", "starred_url": "https://api.github.com/users/iboates/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iboates/subscriptions", "organizations_url": "https://api.github.com/users/iboates/orgs", "repos_url": "https://api.github.com/users/iboates/repos", "events_url": "https://api.github.com/users/iboates/events{/privacy}", "received_events_url": "https://api.github.com/users/iboates/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 5, "created_at": "2020-04-22T09:55:31Z", "updated_at": "2020-05-28T23:43:19Z", "closed_at": "2020-05-28T23:43:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I discovered this during a workflow where I am transforming between pandas dataframes and networkx graphs rather frequently. The old \"source\" and \"target\" columns were hanging around from a previous transformation.\r\n\r\nI realize that it is probably bad practice to already have \"source\" and \"target\" as attributes in a graph, especially when they are wrong, but there is no mention of this behaviour on the [docs page](https://networkx.github.io/documentation/stable/reference/generated/networkx.convert_matrix.to_pandas_edgelist.html) and it seems to me that a more intuitive behaviour would be for it to overwrite the columns in the dataframe with the actual current graph information, and not what may be hanging around in the attributes list.\r\n\r\nSee below. In this example, I create an undirected graph with a \"backwards\" edge, then straighten the graph out by transforming it into a tree [(see here)](https://stackoverflow.com/questions/60742779/creating-a-directed-graph-from-an-undirected-graph-with-dfs-tree-but-keep-attri). However, since \"source\" and \"target\" already exist (perhaps from a previous conversion from a graph to dataframe, and then back to a graph again), then they are not updated when writing back to a dataframe again.\r\n\r\n```\r\nimport networkx as nx\r\n\r\ngraph = nx.Graph([\r\n    (0, 1, {\"source\": 0, \"target\": 1}),\r\n    (1, 2, {\"source\": 1, \"target\": 2}),\r\n    (3, 2, {\"source\": 3, \"target\": 2})\r\n])\r\ndigraph = nx.DiGraph(graph)\r\ndigraph.remove_edges_from(digraph.edges - nx.dfs_edges(graph, 0))\r\n\r\ndf1 = nx.to_pandas_edgelist(digraph)  # Default is to use source=\"source\" and target=\"target\"\r\nprint(df1.head())\r\ndf2 = nx.to_pandas_edgelist(digraph, source=\"source2\", target=\"target2\")\r\nprint(df2.head())\r\n```\r\n\r\nOutput of \u00b4print(df1.head())\u00b4 is:\r\n\r\n```\r\n   source  target\r\n0       0       1\r\n1       1       2\r\n2       3       2\r\n```\r\n\r\nOutput of \u00b4print(df2.head())\u00b4 is:\r\n\r\n```\r\n   source2  target2  source  target\r\n0        0        1       0       1\r\n1        1        2       1       2\r\n2        2        3       3       2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3926", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3926/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3926/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3926/events", "html_url": "https://github.com/networkx/networkx/issues/3926", "id": 602555643, "node_id": "MDU6SXNzdWU2MDI1NTU2NDM=", "number": 3926, "title": "gaussian_random_partition_graph constructor optional parameter doesn't work", "user": {"login": "zsxing99", "id": 44153625, "node_id": "MDQ6VXNlcjQ0MTUzNjI1", "avatar_url": "https://avatars2.githubusercontent.com/u/44153625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zsxing99", "html_url": "https://github.com/zsxing99", "followers_url": "https://api.github.com/users/zsxing99/followers", "following_url": "https://api.github.com/users/zsxing99/following{/other_user}", "gists_url": "https://api.github.com/users/zsxing99/gists{/gist_id}", "starred_url": "https://api.github.com/users/zsxing99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zsxing99/subscriptions", "organizations_url": "https://api.github.com/users/zsxing99/orgs", "repos_url": "https://api.github.com/users/zsxing99/repos", "events_url": "https://api.github.com/users/zsxing99/events{/privacy}", "received_events_url": "https://api.github.com/users/zsxing99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}, {"id": 518998631, "node_id": "MDU6TGFiZWw1MTg5OTg2MzE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Needs%20PR", "name": "Needs PR", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-04-18T21:27:43Z", "updated_at": "2020-05-12T18:18:46Z", "closed_at": "2020-05-12T18:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "gaussian_random_partition_graph constructor always returns a directed graph no matter how I set the parameter \"directed\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3922", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3922/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3922/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3922/events", "html_url": "https://github.com/networkx/networkx/issues/3922", "id": 601036114, "node_id": "MDU6SXNzdWU2MDEwMzYxMTQ=", "number": 3922, "title": "Problem in having different labelling options", "user": {"login": "saeid93", "id": 6298780, "node_id": "MDQ6VXNlcjYyOTg3ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6298780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeid93", "html_url": "https://github.com/saeid93", "followers_url": "https://api.github.com/users/saeid93/followers", "following_url": "https://api.github.com/users/saeid93/following{/other_user}", "gists_url": "https://api.github.com/users/saeid93/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeid93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeid93/subscriptions", "organizations_url": "https://api.github.com/users/saeid93/orgs", "repos_url": "https://api.github.com/users/saeid93/repos", "events_url": "https://api.github.com/users/saeid93/events{/privacy}", "received_events_url": "https://api.github.com/users/saeid93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T13:05:36Z", "updated_at": "2020-08-07T03:07:25Z", "closed_at": "2020-08-07T03:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a graph that consists of three sets of nodes 1. servers 2. stations 3. users I want to draw them with networks built-in visualization. In the drawing, I want to have the labels for users and stations but not for servers. However, this doesn't work. when I try this:\r\n\r\n```\r\nnx.draw_networkx_nodes(network,\r\n                    with_labels=False,\r\n                    nodelist=self.servers_idx,\r\n                    node_size=50, node_shape='s',\r\n                    pos=servers_pos,\r\n                    node_color='r')\r\nnx.draw_networkx_nodes(network, with_labels=True,\r\n                    nodelist=self.stations_idx,\r\n                    node_size=50, node_shape='^',\r\n                    pos=stations_pos,\r\n                    node_color='g')\r\nnx.draw_networkx_nodes(network, with_labels=True,\r\n                    nodelist=self.users_idx,\r\n                    node_size=10, node_shape='o',\r\n                    pos=users_pos,\r\n                    node_color='b')\r\n```\r\n\r\nI get the following figure:\r\n\r\n\r\n![Rn2fF](https://user-images.githubusercontent.com/6298780/79459121-b5f49000-7fea-11ea-8180-58162c8da24d.png)\r\n\r\nwhich as you see shows none of the labels, but I have set the `with_labels` variable value to `True` for stations and users and the expectation is that it will show them. The strange thing is that when I set all the `with_labels` to `True` it will show all the labels. But if I only set one of them to `False` it will not show the other two (like that I have set all of them `False`). Does anyone have any idea what is happening here?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3920", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3920/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3920/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3920/events", "html_url": "https://github.com/networkx/networkx/issues/3920", "id": 600736706, "node_id": "MDU6SXNzdWU2MDA3MzY3MDY=", "number": 3920, "title": "How to know which arguments can be used for graphviz_layout? ", "user": {"login": "jolespin", "id": 9061708, "node_id": "MDQ6VXNlcjkwNjE3MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9061708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jolespin", "html_url": "https://github.com/jolespin", "followers_url": "https://api.github.com/users/jolespin/followers", "following_url": "https://api.github.com/users/jolespin/following{/other_user}", "gists_url": "https://api.github.com/users/jolespin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jolespin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jolespin/subscriptions", "organizations_url": "https://api.github.com/users/jolespin/orgs", "repos_url": "https://api.github.com/users/jolespin/repos", "events_url": "https://api.github.com/users/jolespin/events{/privacy}", "received_events_url": "https://api.github.com/users/jolespin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T04:21:08Z", "updated_at": "2020-06-28T19:29:02Z", "closed_at": "2020-06-28T19:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nSignature: nx.nx_agraph.graphviz_layout(G, prog='neato', root=None, args='')\r\nDocstring:\r\nCreate node positions for G using Graphviz.\r\n\r\nParameters\r\n----------\r\nG : NetworkX graph\r\n  A graph created with NetworkX\r\nprog : string\r\n  Name of Graphviz layout program\r\nroot : string, optional\r\n  Root node for twopi layout\r\nargs : string, optional\r\n  Extra arguments to Graphviz layout program\r\n```\r\n\r\nWhat are the `args`? In particular, I'm interested in neato.  Are there additional parameters that I can use for this? \r\n\r\nAlso, do you know of any 3rd party packages designed specifically for additional networkx layouts? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3918", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3918/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3918/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3918/events", "html_url": "https://github.com/networkx/networkx/issues/3918", "id": 600533255, "node_id": "MDU6SXNzdWU2MDA1MzMyNTU=", "number": 3918, "title": "layout options not found", "user": {"login": "rkrishnasanka", "id": 855696, "node_id": "MDQ6VXNlcjg1NTY5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/855696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkrishnasanka", "html_url": "https://github.com/rkrishnasanka", "followers_url": "https://api.github.com/users/rkrishnasanka/followers", "following_url": "https://api.github.com/users/rkrishnasanka/following{/other_user}", "gists_url": "https://api.github.com/users/rkrishnasanka/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkrishnasanka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkrishnasanka/subscriptions", "organizations_url": "https://api.github.com/users/rkrishnasanka/orgs", "repos_url": "https://api.github.com/users/rkrishnasanka/repos", "events_url": "https://api.github.com/users/rkrishnasanka/events{/privacy}", "received_events_url": "https://api.github.com/users/rkrishnasanka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T19:24:05Z", "updated_at": "2020-04-18T15:03:21Z", "closed_at": "2020-04-18T15:02:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the error I get \r\n\r\n```\r\nException has occurred: AttributeError\r\nmodule 'networkx' has no attribute 'bipartite_layout'\r\n```\r\n\r\nHere's the code that I have written\r\n\r\n```\r\nimport networkx as nx\r\nimport matplotlib.pyplot as plot\r\n\r\n...\r\n\r\npositions = nx.bipartite_layout(G)\r\nprint(positions)\r\nnx.draw(layout.G, positions)\r\nplt.show()\r\n```\r\n\r\n`G` is a `MultiDiGraph`\r\n\r\nAny idea why it can't find both `bipartite_layout` and `planar_layout`.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3911", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3911/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3911/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3911/events", "html_url": "https://github.com/networkx/networkx/issues/3911", "id": 598545725, "node_id": "MDU6SXNzdWU1OTg1NDU3MjU=", "number": 3911, "title": "Incorrectly returning [] when a generator is expected", "user": {"login": "xpe", "id": 4576329, "node_id": "MDQ6VXNlcjQ1NzYzMjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4576329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xpe", "html_url": "https://github.com/xpe", "followers_url": "https://api.github.com/users/xpe/followers", "following_url": "https://api.github.com/users/xpe/following{/other_user}", "gists_url": "https://api.github.com/users/xpe/gists{/gist_id}", "starred_url": "https://api.github.com/users/xpe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xpe/subscriptions", "organizations_url": "https://api.github.com/users/xpe/orgs", "repos_url": "https://api.github.com/users/xpe/repos", "events_url": "https://api.github.com/users/xpe/events{/privacy}", "received_events_url": "https://api.github.com/users/xpe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121660491, "node_id": "MDU6TGFiZWwxMjE2NjA0OTE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Defect", "name": "Defect", "color": "e11d21", "default": false, "description": null}, {"id": 121661731, "node_id": "MDU6TGFiZWwxMjE2NjE3MzE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Needs%20review", "name": "Needs review", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-12T18:37:31Z", "updated_at": "2020-07-05T20:10:44Z", "closed_at": "2020-07-05T20:10:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "This return value (`[]`) is not consistent with the intention of the `all_simple_paths` function:\r\n\r\n```py\r\nif source in targets:\r\n    return []\r\n```\r\n\r\nFrom: https://github.com/networkx/networkx/blob/b0ca6ce081cc6e66d509c5f7fed60728da821c25/networkx/algorithms/simple_paths.py#L230\r\n\r\nContext:\r\n\r\n```py\r\ndef all_simple_paths(G, source, target, cutoff=None):\r\n    \"\"\"Generate all simple paths in the graph G from source to target.\r\n    A simple path is a path with no repeated nodes.\r\n\r\n    [...]\r\n\r\n    Returns\r\n    -------\r\n    path_generator: generator\r\n       A generator that produces lists of simple paths.  If there are no paths\r\n       between the source and target within the given cutoff the generator\r\n       produces no output.\r\n```\r\n\r\nI recommend, instead, that NetworkX provide a reusable empty generator function, such as:\r\n\r\n```py\r\ndef empty_generator():\r\n    yield from ()\r\n```\r\n\r\nThen, in `all_simple_paths` (and almost certainly, other places in the library), call `return empty_generator()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3910", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3910/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3910/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3910/events", "html_url": "https://github.com/networkx/networkx/issues/3910", "id": 598502776, "node_id": "MDU6SXNzdWU1OTg1MDI3NzY=", "number": 3910, "title": "Pajek export assumes Graph node's id attribute to be int castable", "user": {"login": "lloesche", "id": 2124094, "node_id": "MDQ6VXNlcjIxMjQwOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2124094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lloesche", "html_url": "https://github.com/lloesche", "followers_url": "https://api.github.com/users/lloesche/followers", "following_url": "https://api.github.com/users/lloesche/following{/other_user}", "gists_url": "https://api.github.com/users/lloesche/gists{/gist_id}", "starred_url": "https://api.github.com/users/lloesche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lloesche/subscriptions", "organizations_url": "https://api.github.com/users/lloesche/orgs", "repos_url": "https://api.github.com/users/lloesche/repos", "events_url": "https://api.github.com/users/lloesche/events{/privacy}", "received_events_url": "https://api.github.com/users/lloesche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 518998631, "node_id": "MDU6TGFiZWw1MTg5OTg2MzE=", "url": "https://api.github.com/repos/networkx/networkx/labels/Needs%20PR", "name": "Needs PR", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2020-04-12T14:53:43Z", "updated_at": "2020-04-16T03:16:31Z", "closed_at": "2020-04-16T03:16:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In pajek export it reads https://github.com/networkx/networkx/blob/b0ca6ce081cc6e66d509c5f7fed60728da821c25/networkx/readwrite/pajek.py#L57\r\n\r\nI was wondering, since NetworkX supports arbitrary Python objects as Graph nodes where does the assumption come from that a node's `id` attribute is `int` castable? An objects `id` attribute would have nothing to do with Python's builtin `id()`. But I'm not familiar with the Pajek file format so don't know about the relevance and special treatment of `id` in it.\r\n\r\nI was working with a Graph whose node's `id` attribute happened to be a string. For it Pajek export failed with\r\n```\r\nValueError: invalid literal for int() with base 10: 'arn:aws:iam::579763146468:role/aws-service-role/trustedadvisor.amazonaws.com/AWSServiceRoleForTrustedAdvisor'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3908", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3908/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3908/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3908/events", "html_url": "https://github.com/networkx/networkx/issues/3908", "id": 598357845, "node_id": "MDU6SXNzdWU1OTgzNTc4NDU=", "number": 3908, "title": "Where can I get an old version of networkx for python 2.7?", "user": {"login": "blackstormx", "id": 22796372, "node_id": "MDQ6VXNlcjIyNzk2Mzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/22796372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackstormx", "html_url": "https://github.com/blackstormx", "followers_url": "https://api.github.com/users/blackstormx/followers", "following_url": "https://api.github.com/users/blackstormx/following{/other_user}", "gists_url": "https://api.github.com/users/blackstormx/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackstormx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackstormx/subscriptions", "organizations_url": "https://api.github.com/users/blackstormx/orgs", "repos_url": "https://api.github.com/users/blackstormx/repos", "events_url": "https://api.github.com/users/blackstormx/events{/privacy}", "received_events_url": "https://api.github.com/users/blackstormx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-11T21:49:37Z", "updated_at": "2020-04-12T10:21:33Z", "closed_at": "2020-04-12T10:21:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need it for personal use, since I'm using a library that has been deprecated few years ago. It used networkx but an old one. Unfortunately I can't find any of old downloads on the pypi.\r\n\r\nCould anyone be kind enough to search up old folder of this library on their HDDs and upload it somewhere? I'd be grateful. \r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3906", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3906/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3906/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3906/events", "html_url": "https://github.com/networkx/networkx/issues/3906", "id": 597841916, "node_id": "MDU6SXNzdWU1OTc4NDE5MTY=", "number": 3906, "title": "set_node_attributes  - Documentation error", "user": {"login": "AparnApu", "id": 62979593, "node_id": "MDQ6VXNlcjYyOTc5NTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/62979593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AparnApu", "html_url": "https://github.com/AparnApu", "followers_url": "https://api.github.com/users/AparnApu/followers", "following_url": "https://api.github.com/users/AparnApu/following{/other_user}", "gists_url": "https://api.github.com/users/AparnApu/gists{/gist_id}", "starred_url": "https://api.github.com/users/AparnApu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AparnApu/subscriptions", "organizations_url": "https://api.github.com/users/AparnApu/orgs", "repos_url": "https://api.github.com/users/AparnApu/repos", "events_url": "https://api.github.com/users/AparnApu/events{/privacy}", "received_events_url": "https://api.github.com/users/AparnApu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-10T11:27:57Z", "updated_at": "2020-04-23T09:06:50Z", "closed_at": "2020-04-23T09:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version of networkx - 2.4\r\nVersion of python - Python 3.7.6\r\n\r\nLink to page -\r\n([https://networkx.github.io/documentation/networkx-1.9/reference/generated/networkx.classes.function.set_node_attributes.html])\r\n\r\nDocumentation Error found in function - set_node_attributes(G, name, values)\r\n\r\nActual syntax for the above function should be - set_node_attributes(G, values)\r\n                Parameters:    G = NetworkX Graph\r\n                                       values = dict - (Dictionary of attribute values keyed by node. If \\(values\\) is not a dictionary, then it is treated as a single attribute value that is then applied to every node in \\(G\\).)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3905", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3905/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3905/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3905/events", "html_url": "https://github.com/networkx/networkx/issues/3905", "id": 597740133, "node_id": "MDU6SXNzdWU1OTc3NDAxMzM=", "number": 3905, "title": "Keep edge orientation in undirected graphs", "user": {"login": "legohyl", "id": 16208802, "node_id": "MDQ6VXNlcjE2MjA4ODAy", "avatar_url": "https://avatars3.githubusercontent.com/u/16208802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/legohyl", "html_url": "https://github.com/legohyl", "followers_url": "https://api.github.com/users/legohyl/followers", "following_url": "https://api.github.com/users/legohyl/following{/other_user}", "gists_url": "https://api.github.com/users/legohyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/legohyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/legohyl/subscriptions", "organizations_url": "https://api.github.com/users/legohyl/orgs", "repos_url": "https://api.github.com/users/legohyl/repos", "events_url": "https://api.github.com/users/legohyl/events{/privacy}", "received_events_url": "https://api.github.com/users/legohyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-10T07:21:19Z", "updated_at": "2020-04-23T14:02:22Z", "closed_at": "2020-04-23T14:02:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to preserve the orientation of edges, even if it's an undirected graph? I get the following:\r\n```\r\nt = nx.Graph()\r\nt.add_nodes_from([1,2,3])\r\nt.add_edges_from([(2,1), (3,1)])\r\n```\r\noutput:\r\n```\r\nlist(t.edges())\r\n\r\n[(1, 2), (1, 3)]\r\n```\r\n\r\nI understand that this can be solved if we use a `DiGraph` but is there any chance I can preserve the orientation without using it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3904", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3904/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3904/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3904/events", "html_url": "https://github.com/networkx/networkx/issues/3904", "id": 596964062, "node_id": "MDU6SXNzdWU1OTY5NjQwNjI=", "number": 3904, "title": "Met this error (Segmentation fault (core dumped))", "user": {"login": "klauspa", "id": 35245385, "node_id": "MDQ6VXNlcjM1MjQ1Mzg1", "avatar_url": "https://avatars3.githubusercontent.com/u/35245385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klauspa", "html_url": "https://github.com/klauspa", "followers_url": "https://api.github.com/users/klauspa/followers", "following_url": "https://api.github.com/users/klauspa/following{/other_user}", "gists_url": "https://api.github.com/users/klauspa/gists{/gist_id}", "starred_url": "https://api.github.com/users/klauspa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klauspa/subscriptions", "organizations_url": "https://api.github.com/users/klauspa/orgs", "repos_url": "https://api.github.com/users/klauspa/repos", "events_url": "https://api.github.com/users/klauspa/events{/privacy}", "received_events_url": "https://api.github.com/users/klauspa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T01:47:34Z", "updated_at": "2020-07-09T18:39:27Z", "closed_at": "2020-07-09T18:39:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello I am trying to find all the cycles in the a digraph, So I use this method:\r\n`nx.simple_cycles(G)`\r\nIt works fine and fast when I have 5000 edges in G and 60 cycles, but when I try to test it with larger dataset, say 300000 edges and 150000 cycles, It pops out Segmentation fault (core dumped).\r\n\r\nMy computer configuration is I5 CPU and 8G memory.\r\n\r\nI kown that simple_cycles implement jhonson's algorithm and this should be the fastest algorithm. So what makes the weak performance when it comes large graph?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3903", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3903/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3903/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3903/events", "html_url": "https://github.com/networkx/networkx/issues/3903", "id": 596677898, "node_id": "MDU6SXNzdWU1OTY2Nzc4OTg=", "number": 3903, "title": "Which version of Networkx can be used with Python 2.7?", "user": {"login": "choixdesdames", "id": 31038488, "node_id": "MDQ6VXNlcjMxMDM4NDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/31038488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choixdesdames", "html_url": "https://github.com/choixdesdames", "followers_url": "https://api.github.com/users/choixdesdames/followers", "following_url": "https://api.github.com/users/choixdesdames/following{/other_user}", "gists_url": "https://api.github.com/users/choixdesdames/gists{/gist_id}", "starred_url": "https://api.github.com/users/choixdesdames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choixdesdames/subscriptions", "organizations_url": "https://api.github.com/users/choixdesdames/orgs", "repos_url": "https://api.github.com/users/choixdesdames/repos", "events_url": "https://api.github.com/users/choixdesdames/events{/privacy}", "received_events_url": "https://api.github.com/users/choixdesdames/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-08T15:45:31Z", "updated_at": "2020-04-08T16:42:56Z", "closed_at": "2020-04-08T16:42:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am bound to using Python 2.7 and I'm trying to get NetworkX imported. I installed version 2.2 with:\r\n\r\n`pip install 'networkx==2.2'`\r\n\r\nHowever when trying to import it I still get the error that Python 3.5 is required:\r\n\r\n`ImportError: Python 3.5 or later is required for NetworkX (2.7 detected).`\r\n\r\nIn the docs it says that NetworkX is available for Python 2.7, how can I get it?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3898", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3898/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3898/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3898/events", "html_url": "https://github.com/networkx/networkx/issues/3898", "id": 595294705, "node_id": "MDU6SXNzdWU1OTUyOTQ3MDU=", "number": 3898, "title": "Missing pipenv support", "user": {"login": "aijanai", "id": 7932716, "node_id": "MDQ6VXNlcjc5MzI3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7932716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aijanai", "html_url": "https://github.com/aijanai", "followers_url": "https://api.github.com/users/aijanai/followers", "following_url": "https://api.github.com/users/aijanai/following{/other_user}", "gists_url": "https://api.github.com/users/aijanai/gists{/gist_id}", "starred_url": "https://api.github.com/users/aijanai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aijanai/subscriptions", "organizations_url": "https://api.github.com/users/aijanai/orgs", "repos_url": "https://api.github.com/users/aijanai/repos", "events_url": "https://api.github.com/users/aijanai/events{/privacy}", "received_events_url": "https://api.github.com/users/aijanai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T17:30:41Z", "updated_at": "2020-07-06T16:52:43Z", "closed_at": "2020-07-06T16:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pipenv has proven to be a very robus virtualenv manager and dependency solver.\r\nHow about adding support?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3890", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3890/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3890/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3890/events", "html_url": "https://github.com/networkx/networkx/issues/3890", "id": 593525474, "node_id": "MDU6SXNzdWU1OTM1MjU0NzQ=", "number": 3890, "title": "add a custom default serializer for jit_data", "user": {"login": "lookbeat", "id": 8811091, "node_id": "MDQ6VXNlcjg4MTEwOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8811091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lookbeat", "html_url": "https://github.com/lookbeat", "followers_url": "https://api.github.com/users/lookbeat/followers", "following_url": "https://api.github.com/users/lookbeat/following{/other_user}", "gists_url": "https://api.github.com/users/lookbeat/gists{/gist_id}", "starred_url": "https://api.github.com/users/lookbeat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lookbeat/subscriptions", "organizations_url": "https://api.github.com/users/lookbeat/orgs", "repos_url": "https://api.github.com/users/lookbeat/repos", "events_url": "https://api.github.com/users/lookbeat/events{/privacy}", "received_events_url": "https://api.github.com/users/lookbeat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-03T17:14:52Z", "updated_at": "2020-04-13T13:03:05Z", "closed_at": "2020-04-13T13:03:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "it will enable export JIT Json when using custom objects in Nodes/Edges", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3889", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3889/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3889/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3889/events", "html_url": "https://github.com/networkx/networkx/issues/3889", "id": 592425378, "node_id": "MDU6SXNzdWU1OTI0MjUzNzg=", "number": 3889, "title": "Can cycles.find_cycle() or other algrithm finds all cycles in a directed graph?", "user": {"login": "liqiang1127", "id": 26456096, "node_id": "MDQ6VXNlcjI2NDU2MDk2", "avatar_url": "https://avatars2.githubusercontent.com/u/26456096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liqiang1127", "html_url": "https://github.com/liqiang1127", "followers_url": "https://api.github.com/users/liqiang1127/followers", "following_url": "https://api.github.com/users/liqiang1127/following{/other_user}", "gists_url": "https://api.github.com/users/liqiang1127/gists{/gist_id}", "starred_url": "https://api.github.com/users/liqiang1127/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liqiang1127/subscriptions", "organizations_url": "https://api.github.com/users/liqiang1127/orgs", "repos_url": "https://api.github.com/users/liqiang1127/repos", "events_url": "https://api.github.com/users/liqiang1127/events{/privacy}", "received_events_url": "https://api.github.com/users/liqiang1127/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-02T07:43:42Z", "updated_at": "2020-06-09T01:51:38Z", "closed_at": "2020-06-09T01:51:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to find all Cycles in a directed graph, but cycles.find_cycle() only returns one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3887", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3887/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3887/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3887/events", "html_url": "https://github.com/networkx/networkx/issues/3887", "id": 591586504, "node_id": "MDU6SXNzdWU1OTE1ODY1MDQ=", "number": 3887, "title": "Pip Install Failed with Connection Error", "user": {"login": "tbpassin", "id": 36974235, "node_id": "MDQ6VXNlcjM2OTc0MjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/36974235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbpassin", "html_url": "https://github.com/tbpassin", "followers_url": "https://api.github.com/users/tbpassin/followers", "following_url": "https://api.github.com/users/tbpassin/following{/other_user}", "gists_url": "https://api.github.com/users/tbpassin/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbpassin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbpassin/subscriptions", "organizations_url": "https://api.github.com/users/tbpassin/orgs", "repos_url": "https://api.github.com/users/tbpassin/repos", "events_url": "https://api.github.com/users/tbpassin/events{/privacy}", "received_events_url": "https://api.github.com/users/tbpassin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-01T03:17:38Z", "updated_at": "2020-04-13T05:51:56Z", "closed_at": "2020-04-13T05:51:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: WIndows 10\r\nPython: 3.8.0\r\nPartial pip output:\r\n\r\n```\r\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x00000209D8EF2370>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /simple/networkx/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3885", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3885/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3885/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3885/events", "html_url": "https://github.com/networkx/networkx/issues/3885", "id": 591147439, "node_id": "MDU6SXNzdWU1OTExNDc0Mzk=", "number": 3885, "title": "Incidence Matrix Documentation is confusing", "user": {"login": "RoyLarson", "id": 30960043, "node_id": "MDQ6VXNlcjMwOTYwMDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/30960043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoyLarson", "html_url": "https://github.com/RoyLarson", "followers_url": "https://api.github.com/users/RoyLarson/followers", "following_url": "https://api.github.com/users/RoyLarson/following{/other_user}", "gists_url": "https://api.github.com/users/RoyLarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoyLarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoyLarson/subscriptions", "organizations_url": "https://api.github.com/users/RoyLarson/orgs", "repos_url": "https://api.github.com/users/RoyLarson/repos", "events_url": "https://api.github.com/users/RoyLarson/events{/privacy}", "received_events_url": "https://api.github.com/users/RoyLarson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 135735537, "node_id": "MDU6TGFiZWwxMzU3MzU1Mzc=", "url": "https://api.github.com/repos/networkx/networkx/labels/Documentation", "name": "Documentation", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/networkx/networkx/milestones/13", "html_url": "https://github.com/networkx/networkx/milestone/13", "labels_url": "https://api.github.com/repos/networkx/networkx/milestones/13/labels", "id": 4659545, "node_id": "MDk6TWlsZXN0b25lNDY1OTU0NQ==", "number": 13, "title": "networkx-2.5", "description": "", "creator": {"login": "dschult", "id": 915037, "node_id": "MDQ6VXNlcjkxNTAzNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/915037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschult", "html_url": "https://github.com/dschult", "followers_url": "https://api.github.com/users/dschult/followers", "following_url": "https://api.github.com/users/dschult/following{/other_user}", "gists_url": "https://api.github.com/users/dschult/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschult/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschult/subscriptions", "organizations_url": "https://api.github.com/users/dschult/orgs", "repos_url": "https://api.github.com/users/dschult/repos", "events_url": "https://api.github.com/users/dschult/events{/privacy}", "received_events_url": "https://api.github.com/users/dschult/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 262, "state": "open", "created_at": "2019-09-15T00:00:57Z", "updated_at": "2020-08-19T20:56:19Z", "due_on": "2020-08-28T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2020-03-31T14:16:45Z", "updated_at": "2020-05-17T01:03:39Z", "closed_at": "2020-05-17T01:03:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "First my networkx version is 2.4\r\nIn the incidence matrix documentation \r\nit states if using the oriented option\r\n\" A -1 appears for the tail of an edge and 1  for the head of the edge.\"\r\nThis appears to be not true:\r\n\r\nThe table below shows has node and the edge with the edge in (source_node, destination_node) format.  \r\nIn row 0, column 0 the edge specified is from node_0 to node_1.  As someone not familiar with the language I would interpret head to mean source, and tail to mean destination, so the value I would expect is 1 not -1.  I did not think of the head and tail as the head and tail of an arrow, which is why I was confused.\r\n\r\nCan the documentation be modified to \r\n\" A -1 appears for the source (tail) of an edge and 1  for the destination (head) of the edge.\"\r\n\r\nThe table below can be reproduced by\r\n\r\n```python\r\nimport pandas as pd\r\nimport networkx as nx\r\nnode_list = [f'node_{i}' for i in range(3)]\r\nG = nx.complete_graph(node_list, nx.DiGraph())\r\nfor i, edge in enumerate(G.edges, 1):\r\n    G.edges[edge]['weight'] = i\r\nind_mat = pd.DataFrame(nx.incidence_matrix(G, oriented=True, weight='weight').toarray(), columns = list(G.edges), index=G.nodes)\r\nind_mat\r\n```\r\n\r\n\r\n|        |   ('node_0', 'node_1') |   ('node_0', 'node_2') |   ('node_1', 'node_0') |   ('node_1', 'node_2') |   ('node_2', 'node_0') |   ('node_2', 'node_1') |  \r\n|:-------|-----------------------:|-----------------------:|-----------------------:|-----------------------:|-----------------------:|-----------------------:|  \r\n| node_0 |    -1 |    -2 |      3 |     0 |    5 |      0 |  \r\n| node_1 |     1 |      0 |     -3 |   -4 |    0 |      6 |  \r\n| node_2 |     0 |      2 |       0 |    4 |   -5 |     -6 |\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3884", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3884/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3884/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3884/events", "html_url": "https://github.com/networkx/networkx/issues/3884", "id": 590544086, "node_id": "MDU6SXNzdWU1OTA1NDQwODY=", "number": 3884, "title": "Add support for sets of graph edges", "user": {"login": "Mattwmaster58", "id": 26337069, "node_id": "MDQ6VXNlcjI2MzM3MDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/26337069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mattwmaster58", "html_url": "https://github.com/Mattwmaster58", "followers_url": "https://api.github.com/users/Mattwmaster58/followers", "following_url": "https://api.github.com/users/Mattwmaster58/following{/other_user}", "gists_url": "https://api.github.com/users/Mattwmaster58/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mattwmaster58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mattwmaster58/subscriptions", "organizations_url": "https://api.github.com/users/Mattwmaster58/orgs", "repos_url": "https://api.github.com/users/Mattwmaster58/repos", "events_url": "https://api.github.com/users/Mattwmaster58/events{/privacy}", "received_events_url": "https://api.github.com/users/Mattwmaster58/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T19:43:28Z", "updated_at": "2020-04-16T03:08:59Z", "closed_at": "2020-04-16T03:08:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently it looks like only tuples and lists of graph edgeds are supported, however with a small change I think it would be easy to add support for any Iterable, providing greater flexibilty to users of the library. Are there any considerations I'd need to take before submitting a PR?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3883", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3883/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3883/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3883/events", "html_url": "https://github.com/networkx/networkx/issues/3883", "id": 588861984, "node_id": "MDU6SXNzdWU1ODg4NjE5ODQ=", "number": 3883, "title": "when i use read_gml() to read a graphml file, a error occurs ", "user": {"login": "leslielee619", "id": 27109334, "node_id": "MDQ6VXNlcjI3MTA5MzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/27109334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leslielee619", "html_url": "https://github.com/leslielee619", "followers_url": "https://api.github.com/users/leslielee619/followers", "following_url": "https://api.github.com/users/leslielee619/following{/other_user}", "gists_url": "https://api.github.com/users/leslielee619/gists{/gist_id}", "starred_url": "https://api.github.com/users/leslielee619/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leslielee619/subscriptions", "organizations_url": "https://api.github.com/users/leslielee619/orgs", "repos_url": "https://api.github.com/users/leslielee619/repos", "events_url": "https://api.github.com/users/leslielee619/events{/privacy}", "received_events_url": "https://api.github.com/users/leslielee619/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-27T03:31:59Z", "updated_at": "2020-03-27T14:13:18Z", "closed_at": "2020-03-27T14:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "error is: NetworkXError: cannot tokenize '?xml version=\"1.0\" encoding=\"UTF-8\"?\\r' at (1, 1\uff09", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3882", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3882/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3882/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3882/events", "html_url": "https://github.com/networkx/networkx/issues/3882", "id": 587951967, "node_id": "MDU6SXNzdWU1ODc5NTE5Njc=", "number": 3882, "title": "node_disjoint_path Different results on different machines", "user": {"login": "dominicdelvecchio", "id": 22153838, "node_id": "MDQ6VXNlcjIyMTUzODM4", "avatar_url": "https://avatars0.githubusercontent.com/u/22153838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominicdelvecchio", "html_url": "https://github.com/dominicdelvecchio", "followers_url": "https://api.github.com/users/dominicdelvecchio/followers", "following_url": "https://api.github.com/users/dominicdelvecchio/following{/other_user}", "gists_url": "https://api.github.com/users/dominicdelvecchio/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominicdelvecchio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominicdelvecchio/subscriptions", "organizations_url": "https://api.github.com/users/dominicdelvecchio/orgs", "repos_url": "https://api.github.com/users/dominicdelvecchio/repos", "events_url": "https://api.github.com/users/dominicdelvecchio/events{/privacy}", "received_events_url": "https://api.github.com/users/dominicdelvecchio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-25T19:54:52Z", "updated_at": "2020-04-06T14:00:26Z", "closed_at": "2020-04-06T14:00:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is an issue so much as differences between machines. I am finding when I use node_disjoint_path across different machines the number of independent paths returned is the same, but the paths themselves are different. All on windows dell machines.\r\nOne laptop reliably returns the same paths.\r\nAnother desktop reliably returns the same paths but different form the other laptop.\r\nThe other laptop seems to return different paths each run(although we are in the process of verifying that now).\r\n\r\nWould you shed some light on why the function behaves this way across machines?\r\nThank you\r\nDominic\r\n\r\n**edit \r\nSo it appears the issue is not across different machines, but the restarting of the python kernel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3881", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3881/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3881/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3881/events", "html_url": "https://github.com/networkx/networkx/issues/3881", "id": 587733357, "node_id": "MDU6SXNzdWU1ODc3MzMzNTc=", "number": 3881, "title": "Mistake importing and exporting graphs :(", "user": {"login": "shuaiwangvu", "id": 61589273, "node_id": "MDQ6VXNlcjYxNTg5Mjcz", "avatar_url": "https://avatars2.githubusercontent.com/u/61589273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuaiwangvu", "html_url": "https://github.com/shuaiwangvu", "followers_url": "https://api.github.com/users/shuaiwangvu/followers", "following_url": "https://api.github.com/users/shuaiwangvu/following{/other_user}", "gists_url": "https://api.github.com/users/shuaiwangvu/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuaiwangvu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuaiwangvu/subscriptions", "organizations_url": "https://api.github.com/users/shuaiwangvu/orgs", "repos_url": "https://api.github.com/users/shuaiwangvu/repos", "events_url": "https://api.github.com/users/shuaiwangvu/events{/privacy}", "received_events_url": "https://api.github.com/users/shuaiwangvu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T14:23:23Z", "updated_at": "2020-06-28T19:25:34Z", "closed_at": "2020-06-28T19:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi networkx developers,\r\n\r\nThere seems to be a problem with the write_edgelist and read_edgelist function. \r\nFor me, sometimes the graph I export and import are different. \r\n\r\nCan anyone check if there is a bug in your code?\r\nThanks!\r\nShuai", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3878", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3878/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3878/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3878/events", "html_url": "https://github.com/networkx/networkx/issues/3878", "id": 585801903, "node_id": "MDU6SXNzdWU1ODU4MDE5MDM=", "number": 3878, "title": "Dictionary Changed Size during iteration", "user": {"login": "JulianSchmidtke", "id": 22668495, "node_id": "MDQ6VXNlcjIyNjY4NDk1", "avatar_url": "https://avatars1.githubusercontent.com/u/22668495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianSchmidtke", "html_url": "https://github.com/JulianSchmidtke", "followers_url": "https://api.github.com/users/JulianSchmidtke/followers", "following_url": "https://api.github.com/users/JulianSchmidtke/following{/other_user}", "gists_url": "https://api.github.com/users/JulianSchmidtke/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianSchmidtke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianSchmidtke/subscriptions", "organizations_url": "https://api.github.com/users/JulianSchmidtke/orgs", "repos_url": "https://api.github.com/users/JulianSchmidtke/repos", "events_url": "https://api.github.com/users/JulianSchmidtke/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianSchmidtke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T20:11:54Z", "updated_at": "2020-03-22T20:28:14Z", "closed_at": "2020-03-22T20:28:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI want to Cluster a big weighted, directed DOT-Graph (9000 nodes with 90000 Edges) with the girvan_newman alg.\r\n\r\ni have the following code:\r\n\r\n```\r\nimport networkx as nx\r\nfrom networkx.algorithms import community\r\n\r\nG = nx.drawing.nx_pydot.read_dot('./graph.dot')\r\n\r\ncommunities_generator = community.girvan_newman(G)\r\ntop_level_communities = next(communities_generator)\r\nnext_level_communities = next(communities_generator)\r\n```\r\n\r\nwhen i run the Code i get the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"c:\\Users\\Julian\\.vscode\\extensions\\ms-python.python-2020.3.69010\\pythonFiles\\lib\\python\\debugpy\\no_wheels\\debugpy\\__main__.py\", line 45, in <module>\r\n    cli.main()\r\n  File \"c:\\Users\\Julian\\.vscode\\extensions\\ms-python.python-2020.3.69010\\pythonFiles\\lib\\python\\debugpy\\no_wheels\\debugpy/..\\debugpy\\server\\cli.py\", line 427, in main\r\n    run()\r\n  File \"c:\\Users\\Julian\\.vscode\\extensions\\ms-python.python-2020.3.69010\\pythonFiles\\lib\\python\\debugpy\\no_wheels\\debugpy/..\\debugpy\\server\\cli.py\", line 264, in run_file\r\n    runpy.run_path(options.target, run_name=\"__main__\")\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\runpy.py\", line 263, in run_path\r\n    return _run_module_code(code, init_globals, run_name,\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\runpy.py\", line 96, in _run_module_code\r\n    _run_code(code, mod_globals, init_globals,\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"c:\\Repositories\\pyCommunities\\community.py\", line 7, in <module>\r\n    top_level_communities = next(communities_generator)\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\site-packages\\networkx\\algorithms\\community\\centrality.py\", line 152, in girvan_newman\r\n    g.remove_edges_from(nx.selfloop_edges(g))\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\site-packages\\networkx\\classes\\multigraph.py\", line 646, in remove_edges_from\r\n    for e in ebunch:\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\site-packages\\networkx\\classes\\function.py\", line 1165, in <genexpr>\r\n    if n in nbrs for d in nbrs[n].values())\r\n  File \"C:\\Program Files (x86)\\Python38-32\\lib\\_collections_abc.py\", line 761, in __iter__\r\n    for key in self._mapping:\r\nRuntimeError: dictionary changed size during iteration\r\n```\r\n\r\nIn the multigraph.py / function.py files i do not find a loop that deletes content in a dictionary so i don't know what to do. \r\n\r\nPython 3.8.2\r\nNewest networkx version", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3876", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3876/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3876/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3876/events", "html_url": "https://github.com/networkx/networkx/issues/3876", "id": 585492958, "node_id": "MDU6SXNzdWU1ODU0OTI5NTg=", "number": 3876, "title": "inaccurate node attributes for random intersection graph", "user": {"login": "joelmiller", "id": 2914057, "node_id": "MDQ6VXNlcjI5MTQwNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2914057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelmiller", "html_url": "https://github.com/joelmiller", "followers_url": "https://api.github.com/users/joelmiller/followers", "following_url": "https://api.github.com/users/joelmiller/following{/other_user}", "gists_url": "https://api.github.com/users/joelmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelmiller/subscriptions", "organizations_url": "https://api.github.com/users/joelmiller/orgs", "repos_url": "https://api.github.com/users/joelmiller/repos", "events_url": "https://api.github.com/users/joelmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/joelmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T12:47:40Z", "updated_at": "2020-06-28T19:18:33Z", "closed_at": "2020-06-28T19:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "G = nx.uniform_random_intersection_graph(10,3,0.2) \r\n\r\nG.nodes(data=True)\r\n> NodeDataView({0: {'bipartite': 0}, 1: {'bipartite': 0}, 2: {'bipartite': 0}, 3: {'bipartite': 0}, 4: {'bipartite': 0}, 5: {'bipartite': 0}, 6: {'bipartite': 0}, 7: {'bipartite': 0}, 8: {'bipartite': 0}, 9: {'bipartite': 0}})\r\n\r\nBut `G` isn't bipartite.  I assume it's because it was bipartite at the intermediate stage and that attribute was preserved.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3875", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3875/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3875/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3875/events", "html_url": "https://github.com/networkx/networkx/issues/3875", "id": 585461730, "node_id": "MDU6SXNzdWU1ODU0NjE3MzA=", "number": 3875, "title": "A question about program efficiency and shortest path length", "user": {"login": "hsiangyuzhao", "id": 53631393, "node_id": "MDQ6VXNlcjUzNjMxMzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/53631393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsiangyuzhao", "html_url": "https://github.com/hsiangyuzhao", "followers_url": "https://api.github.com/users/hsiangyuzhao/followers", "following_url": "https://api.github.com/users/hsiangyuzhao/following{/other_user}", "gists_url": "https://api.github.com/users/hsiangyuzhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsiangyuzhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsiangyuzhao/subscriptions", "organizations_url": "https://api.github.com/users/hsiangyuzhao/orgs", "repos_url": "https://api.github.com/users/hsiangyuzhao/repos", "events_url": "https://api.github.com/users/hsiangyuzhao/events{/privacy}", "received_events_url": "https://api.github.com/users/hsiangyuzhao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2244905274, "node_id": "MDU6TGFiZWwyMjQ0OTA1Mjc0", "url": "https://api.github.com/repos/networkx/networkx/labels/Question", "name": "Question", "color": "e09b7b", "default": false, "description": "A question about NetworkX or network science in general"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-21T09:15:12Z", "updated_at": "2020-08-06T23:01:04Z", "closed_at": "2020-08-06T23:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Some key functions of NetworkX seem not to be efficient enough to support large network analysis. I have built a directed network with 5000 nodes and 35450 edges. Now I decide to look into the properties of the network so I called functions below in these codes:\r\n```\r\navg_shortest_path_length = nx.average_shortest_path_length(net)\r\ndensity = nx.density(net)\r\navg_connectividy = na.connectivity.average_node_connectivity(net)\r\nbetweenness_centrality = na.betweenness_centrality(net)\r\ncloseness_centrality = na.closeness_centrality(net)\r\n```\r\nI started the analysis approximately 9 hours ago, and until now the program has not returned any values. It may be relavant to my PC configuration, but similar analysis in Gephi could be carried out within 1 min. So I am rather concerned that if there is some unseen problems need to solve.\r\nOr if there is any mistake in my codes, will you please be so kind to point them out? I would be appreciated.\r\n2. Another problem is that I do not understand why the function `average_shortest_path_length()` requires a connected or weakly connected network to perform? If the network does not meet these requirements the function will raise a error, but in Gephi same analysis could be carried out without these requirements. I think if some nodes are not connected and there is no path, we can simply ignore them and calculate the average of other paths, but current version of NetworkX seems not to support this function.\r\nAnd I am interested to know how to calculate average shortest path length when the network is not connected with NetworkX.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3874", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3874/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3874/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3874/events", "html_url": "https://github.com/networkx/networkx/issues/3874", "id": 585406489, "node_id": "MDU6SXNzdWU1ODU0MDY0ODk=", "number": 3874, "title": "Contribution proposal: New graph similarity measures", "user": {"login": "kazimierz-256", "id": 49732262, "node_id": "MDQ6VXNlcjQ5NzMyMjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/49732262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kazimierz-256", "html_url": "https://github.com/kazimierz-256", "followers_url": "https://api.github.com/users/kazimierz-256/followers", "following_url": "https://api.github.com/users/kazimierz-256/following{/other_user}", "gists_url": "https://api.github.com/users/kazimierz-256/gists{/gist_id}", "starred_url": "https://api.github.com/users/kazimierz-256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kazimierz-256/subscriptions", "organizations_url": "https://api.github.com/users/kazimierz-256/orgs", "repos_url": "https://api.github.com/users/kazimierz-256/repos", "events_url": "https://api.github.com/users/kazimierz-256/events{/privacy}", "received_events_url": "https://api.github.com/users/kazimierz-256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-21T01:46:39Z", "updated_at": "2020-07-24T09:48:53Z", "closed_at": "2020-07-24T09:48:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Encouraged by the request for improving the available choices (on the [similarity measures](https://networkx.github.io/documentation/stable/reference/algorithms/similarity.html) page) I would like to consult the NetworkX community before contributing. \r\nWhich of the following contributions would be accepted as a pull-request:\r\n\r\n1. Polynomial approximation of Graph Edit Distance proposed by Kaspar Riesen and Horst Bunke in 2009 _[Approximate graph edit distance computation by means of bipartite graph matching](https://www.sciencedirect.com/science/article/abs/pii/S026288560800084X)_.\r\n2. A generalized version of the above (in the case of directed graphs) which I have personally invented and formally derived. The derivation is not publicly available, but, if required, I am willing to share it.\r\n\r\nAre there any special requirements for the above contribution ideas (e.g. publicly sharing my derivation via github perhaps)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/networkx/networkx/issues/3871", "repository_url": "https://api.github.com/repos/networkx/networkx", "labels_url": "https://api.github.com/repos/networkx/networkx/issues/3871/labels{/name}", "comments_url": "https://api.github.com/repos/networkx/networkx/issues/3871/comments", "events_url": "https://api.github.com/repos/networkx/networkx/issues/3871/events", "html_url": "https://github.com/networkx/networkx/issues/3871", "id": 585212210, "node_id": "MDU6SXNzdWU1ODUyMTIyMTA=", "number": 3871, "title": "gaussian_random_partition_graph \"directed\" issue.", "user": {"login": "jsal13", "id": 4589605, "node_id": "MDQ6VXNlcjQ1ODk2MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4589605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsal13", "html_url": "https://github.com/jsal13", "followers_url": "https://api.github.com/users/jsal13/followers", "following_url": "https://api.github.com/users/jsal13/following{/other_user}", "gists_url": "https://api.github.com/users/jsal13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsal13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsal13/subscriptions", "organizations_url": "https://api.github.com/users/jsal13/orgs", "repos_url": "https://api.github.com/users/jsal13/repos", "events_url": "https://api.github.com/users/jsal13/events{/privacy}", "received_events_url": "https://api.github.com/users/jsal13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T17:12:01Z", "updated_at": "2020-07-06T03:07:34Z", "closed_at": "2020-07-06T03:07:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a mismatch in the function for `gaussian_random_partition_graph` where `directed` is being sent to `seed` and vice versa.  This makes the default version of the graph directed instead of undirected.", "performed_via_github_app": null, "score": 1.0}]}