{"total_count": 115, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dask/gcsfs/issues/274", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/274/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/274/events", "html_url": "https://github.com/dask/gcsfs/issues/274", "id": 671602644, "node_id": "MDU6SXNzdWU2NzE2MDI2NDQ=", "number": 274, "title": "DOC: example of reading a parquet file", "user": {"login": "raybellwaves", "id": 17162724, "node_id": "MDQ6VXNlcjE3MTYyNzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/17162724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raybellwaves", "html_url": "https://github.com/raybellwaves", "followers_url": "https://api.github.com/users/raybellwaves/followers", "following_url": "https://api.github.com/users/raybellwaves/following{/other_user}", "gists_url": "https://api.github.com/users/raybellwaves/gists{/gist_id}", "starred_url": "https://api.github.com/users/raybellwaves/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raybellwaves/subscriptions", "organizations_url": "https://api.github.com/users/raybellwaves/orgs", "repos_url": "https://api.github.com/users/raybellwaves/repos", "events_url": "https://api.github.com/users/raybellwaves/events{/privacy}", "received_events_url": "https://api.github.com/users/raybellwaves/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-02T11:49:40Z", "updated_at": "2020-08-12T16:53:14Z", "closed_at": "2020-08-12T16:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this should live in gcsfs. I understand gcsfs is a framework for reading data from gcloud using python. However, I think it may still be beneficial to add a copy-paste example in the docs and make a note that is uses dask.dataframe (i.e. you should have dask installed0.\r\n\r\ni.e. towards the end of https://gcsfs.readthedocs.io/en/latest/#examples you can add:\r\n\r\nReading a parquet files using `dask.dataframe`:\r\n\r\n```\r\nddf = dd.read_parquet(\"gs://dask-nyc-taxi/yellowtrip.parquet\", storage_options={\"token\": \"anon\"})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/269", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/269/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/269/events", "html_url": "https://github.com/dask/gcsfs/issues/269", "id": 656855722, "node_id": "MDU6SXNzdWU2NTY4NTU3MjI=", "number": 269, "title": "Update deps before release", "user": {"login": "martindurant", "id": 6042212, "node_id": "MDQ6VXNlcjYwNDIyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martindurant", "html_url": "https://github.com/martindurant", "followers_url": "https://api.github.com/users/martindurant/followers", "following_url": "https://api.github.com/users/martindurant/following{/other_user}", "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions", "organizations_url": "https://api.github.com/users/martindurant/orgs", "repos_url": "https://api.github.com/users/martindurant/repos", "events_url": "https://api.github.com/users/martindurant/events{/privacy}", "received_events_url": "https://api.github.com/users/martindurant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-14T19:46:07Z", "updated_at": "2020-07-14T19:49:57Z", "closed_at": "2020-07-14T19:49:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We now rely on aiohttp", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/267", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/267/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/267/events", "html_url": "https://github.com/dask/gcsfs/issues/267", "id": 655067628, "node_id": "MDU6SXNzdWU2NTUwNjc2Mjg=", "number": 267, "title": "Retry after encountering a checksum failure in GCSFileSystem.cat?", "user": {"login": "spencerkclark", "id": 6628425, "node_id": "MDQ6VXNlcjY2Mjg0MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6628425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencerkclark", "html_url": "https://github.com/spencerkclark", "followers_url": "https://api.github.com/users/spencerkclark/followers", "following_url": "https://api.github.com/users/spencerkclark/following{/other_user}", "gists_url": "https://api.github.com/users/spencerkclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencerkclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencerkclark/subscriptions", "organizations_url": "https://api.github.com/users/spencerkclark/orgs", "repos_url": "https://api.github.com/users/spencerkclark/repos", "events_url": "https://api.github.com/users/spencerkclark/events{/privacy}", "received_events_url": "https://api.github.com/users/spencerkclark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-10T22:26:48Z", "updated_at": "2020-07-22T14:51:33Z", "closed_at": "2020-07-22T14:51:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We've been using gcsfs fairly heavily for loading data from zarr stores in the cloud; in general it has worked really well.  A basic pattern might look something like this:\r\n\r\n```python\r\nimport gcsfs\r\nimport xarray\r\n\r\nPROJECT = \"example-project\"\r\nSTORE = \"gs://path-to-store/store.zarr\"\r\n\r\ngcs = gcsfs.GCSFileSystem(project=PROJECT)\r\nmapper = gcs.get_mapper(STORE)\r\nds = xarray.open_zarr(mapper)\r\nresult = ds.mean().compute()\r\n```\r\n\r\nEvery now and then -- I honestly don't know what dictates it -- there are days when we encounter transient errors like this when performing the computation:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n\r\n... (very long traceback)\r\n\r\n~/miniconda3/envs/fv3net/lib/python3.7/site-packages/gcsfs/core.py in cat(self, path)\r\n    888                 if key == \"md5\":\r\n    889                     md = b64decode(val)\r\n--> 890                     assert md5(r.content).digest() == md, \"Checksum failure\"\r\n    891         return r.content\r\n    892 \r\nAssertionError: Checksum failure\r\n```\r\n\r\nTypically one can retry the script a few times and eventually the full computation succeeds.  This can be a bit frustrating, however, because particularly for long-running computations, many downloads will be performed before one of these errors is hit, and re-running the script means starting over from scratch.  Would it be appropriate to add some logic to `GCSFileSystem.cat` that would retry a download if a checksum failure occurred?  I believe there are other places in gcsfs where retry logic is used to work around these kinds of transient issues.\r\n\r\nApologies for not being able to provide a minimal working example -- the transient nature of the issue makes that difficult.  \r\n\r\ncc: @nbren12 @oliverwm1 @brianhenn", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/262", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/262/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/262/events", "html_url": "https://github.com/dask/gcsfs/issues/262", "id": 626179509, "node_id": "MDU6SXNzdWU2MjYxNzk1MDk=", "number": 262, "title": "Slow performance to read data ", "user": {"login": "MikeChenfu", "id": 17817768, "node_id": "MDQ6VXNlcjE3ODE3NzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/17817768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikeChenfu", "html_url": "https://github.com/MikeChenfu", "followers_url": "https://api.github.com/users/MikeChenfu/followers", "following_url": "https://api.github.com/users/MikeChenfu/following{/other_user}", "gists_url": "https://api.github.com/users/MikeChenfu/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikeChenfu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikeChenfu/subscriptions", "organizations_url": "https://api.github.com/users/MikeChenfu/orgs", "repos_url": "https://api.github.com/users/MikeChenfu/repos", "events_url": "https://api.github.com/users/MikeChenfu/events{/privacy}", "received_events_url": "https://api.github.com/users/MikeChenfu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-28T03:13:46Z", "updated_at": "2020-07-15T20:45:24Z", "closed_at": "2020-07-15T20:45:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Please do a quick search of existing issues to make sure that this has not been asked before. -->\r\nHello team, I try reading data in gcs by `cudf.read_orc`. The performance is pretty slower than the `google.cloud` method. The `orc` data is about 500MB. `gcsfs` takes 1-2 mins to read, but the google.cloud only takes 8s to download and 3s to read by cudf. Appreciate it if anyone has suggestions about this problem.\r\n\r\ngcsfs(1-2 mins):\r\n```\r\nimport gcsfs\r\nimport cudf\r\nfrom functools import partial\r\nread_orc = partial(cudf.read_orc, use_index=False)\r\nfs = gcsfs.GCSFileSystem(token = 'credential.json' )\r\ntname = 'buckets/file.orc'\r\nwith fs.open(tname, 'rb') as f:\r\n    text = read_orc(f, columns=None)\r\n```\r\n\r\ngoogle.cloud(8s + 3s):\r\n```\r\n#8s\r\nfrom google.cloud import storage\r\nstorage_client = storage.Client.from_service_account_json('credential.json')\r\nbucket = storage_client.get_bucket('buckets')\r\nblob = storage.blob.Blob('file.orc',bucket)\r\nblob.download_to_filename('./f.orc')\r\n#3s\r\ntext = read_orc(`f.orc`)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/259", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/259/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/259/events", "html_url": "https://github.com/dask/gcsfs/issues/259", "id": 617275713, "node_id": "MDU6SXNzdWU2MTcyNzU3MTM=", "number": 259, "title": "_list_objects raises KeyError in fsspec's dircache", "user": {"login": "aberres", "id": 20811121, "node_id": "MDQ6VXNlcjIwODExMTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20811121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aberres", "html_url": "https://github.com/aberres", "followers_url": "https://api.github.com/users/aberres/followers", "following_url": "https://api.github.com/users/aberres/following{/other_user}", "gists_url": "https://api.github.com/users/aberres/gists{/gist_id}", "starred_url": "https://api.github.com/users/aberres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aberres/subscriptions", "organizations_url": "https://api.github.com/users/aberres/orgs", "repos_url": "https://api.github.com/users/aberres/repos", "events_url": "https://api.github.com/users/aberres/events{/privacy}", "received_events_url": "https://api.github.com/users/aberres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-13T09:03:04Z", "updated_at": "2020-05-13T19:33:57Z", "closed_at": "2020-05-13T18:15:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sadly I have not the time to do an in depth investigation, so I more or less can just provide a backtrace for the moment. Hope this already helps. I guess it is related to #242. M\r\n\r\nAfter upgrading from 0.6.0 to 0.6.2 trying to delete a \"directory\" fails with a KeyError.\r\n\r\n```\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-18-6f8c46ee7df1> in <module>\r\n----> 1 o = fs.rmdir(\"armin-cdb-reporting/\")\r\n\r\n~/Devel/mpptool/backend/mppcore/mppcore/filestorage.py in rmdir(self, path)\r\n    132         p = self._gcs_path(path)\r\n    133         logger.info(f\"Trying to delete {p}\")\r\n--> 134         self.gcs.rm(self._gcs_path(path), recursive=True)\r\n    135 \r\n    136 \r\n\r\n~/venv/mpptool/lib/python3.7/site-packages/gcsfs/core.py in rm(self, path, recursive, maxdepth)\r\n    902             ][1:-1]\r\n    903         elif recursive:\r\n--> 904             return self.rm(self.find(path, maxdepth=maxdepth))\r\n    905         else:\r\n    906             bucket, key = self.split_path(path)\r\n\r\n~/venv/mpptool/lib/python3.7/site-packages/fsspec/spec.py in find(self, path, maxdepth, withdirs, **kwargs)\r\n    392         out = dict()\r\n    393         detail = kwargs.pop(\"detail\", False)\r\n--> 394         for path, dirs, files in self.walk(path, maxdepth, detail=True, **kwargs):\r\n    395             if withdirs:\r\n    396                 files.update(dirs)\r\n\r\n~/venv/mpptool/lib/python3.7/site-packages/fsspec/spec.py in walk(self, path, maxdepth, **kwargs)\r\n    341         detail = kwargs.pop(\"detail\", False)\r\n    342         try:\r\n--> 343             listing = self.ls(path, detail=True, **kwargs)\r\n    344         except (FileNotFoundError, IOError):\r\n    345             return [], [], []\r\n\r\n~/venv/mpptool/lib/python3.7/site-packages/gcsfs/core.py in ls(self, path, detail, **kwargs)\r\n    748             out = self._list_buckets()\r\n    749         else:\r\n--> 750             out = self._list_objects(path)\r\n    751 \r\n    752         if detail:\r\n\r\n~/venv/mpptool/lib/python3.7/site-packages/gcsfs/core.py in _list_objects(self, path)\r\n    570                 return []\r\n    571         self.dircache[path] = items + pseudodirs\r\n--> 572         return self.dircache[path]\r\n    573 \r\n    574     def _do_list_objects(self, path, max_results=None):\r\n\r\n~/venv/mpptool/lib/python3.7/site-packages/fsspec/dircache.py in __getitem__(self, item)\r\n     60         if self.max_paths:\r\n     61             self._q(item)\r\n---> 62         return self._cache[item]  # maybe raises KeyError\r\n     63 \r\n     64     def clear(self):\r\n\r\nKeyError: 'weplan-cdb-development/armin-cdb-reporting'\r\n```\r\n\r\nAs I understand things it should not happen due to\r\n```\r\n    571         self.dircache[path] = items + pseudodirs\r\n--> 572         return self.dircache[path]\r\n```\r\nBut well, it happens.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/258", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/258/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/258/events", "html_url": "https://github.com/dask/gcsfs/issues/258", "id": 613606648, "node_id": "MDU6SXNzdWU2MTM2MDY2NDg=", "number": 258, "title": "Releasing gcsfs 0.6.2 to pypi", "user": {"login": "vlasenkoalexey", "id": 3851021, "node_id": "MDQ6VXNlcjM4NTEwMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3851021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlasenkoalexey", "html_url": "https://github.com/vlasenkoalexey", "followers_url": "https://api.github.com/users/vlasenkoalexey/followers", "following_url": "https://api.github.com/users/vlasenkoalexey/following{/other_user}", "gists_url": "https://api.github.com/users/vlasenkoalexey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlasenkoalexey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlasenkoalexey/subscriptions", "organizations_url": "https://api.github.com/users/vlasenkoalexey/orgs", "repos_url": "https://api.github.com/users/vlasenkoalexey/repos", "events_url": "https://api.github.com/users/vlasenkoalexey/events{/privacy}", "received_events_url": "https://api.github.com/users/vlasenkoalexey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-06T20:54:04Z", "updated_at": "2020-05-07T18:01:17Z", "closed_at": "2020-05-07T12:47:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The main goal of 0.6.2 release is to unblock petastorm usage #254 \r\n\r\nCurrently gcsfs fails non deterministically on petastorm: https://github.com/uber/petastorm/issues/547\r\n\r\npetastorm can only use 0.6.0, and that version has issue with retry logic fixed in 0.6.1 by #226 \r\n\r\nI can do release myself if you give me gcsfs project access on pypi.\r\nMy username on pypi is vlasenkoalexey", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/254", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/254/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/254/events", "html_url": "https://github.com/dask/gcsfs/issues/254", "id": 612971476, "node_id": "MDU6SXNzdWU2MTI5NzE0NzY=", "number": 254, "title": "gcsfs==0.6.1 can't be used with petastorm", "user": {"login": "vlasenkoalexey", "id": 3851021, "node_id": "MDQ6VXNlcjM4NTEwMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3851021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlasenkoalexey", "html_url": "https://github.com/vlasenkoalexey", "followers_url": "https://api.github.com/users/vlasenkoalexey/followers", "following_url": "https://api.github.com/users/vlasenkoalexey/following{/other_user}", "gists_url": "https://api.github.com/users/vlasenkoalexey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlasenkoalexey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlasenkoalexey/subscriptions", "organizations_url": "https://api.github.com/users/vlasenkoalexey/orgs", "repos_url": "https://api.github.com/users/vlasenkoalexey/repos", "events_url": "https://api.github.com/users/vlasenkoalexey/events{/privacy}", "received_events_url": "https://api.github.com/users/vlasenkoalexey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T00:17:01Z", "updated_at": "2020-05-06T20:39:23Z", "closed_at": "2020-05-06T20:39:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It fails because norm_path was removed in \r\nhttps://github.com/dask/gcsfs/commit/2182133c7848c82e18c802f91914af7faf1909e1#diff-64baa9177ba98eff7c6d16d3ae6b2bf1\r\nand petastorm uses this method.\r\nNeed to add it back.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/252", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/252/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/252/events", "html_url": "https://github.com/dask/gcsfs/issues/252", "id": 602767429, "node_id": "MDU6SXNzdWU2MDI3Njc0Mjk=", "number": 252, "title": "FeatReq: batch batch-deleting", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-19T17:01:51Z", "updated_at": "2020-07-31T20:26:57Z", "closed_at": "2020-07-31T20:26:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`GCSFileSystem.rm()` supports batch-deleting, which is great  and not supported in G client lib as of this writing. However it does make only one http call regardless of the numbers of keys to delete. \r\n\r\nI guess to avoid timing out, G recommends splitting requests in batch of 100: https://cloud.google.com/storage/docs/json_api/v1/how-tos/batch \r\n\r\nBesides the recommended limit, the http request could end up being to large to handle by the server e.g. 10K bundled API calls.\r\n\r\nFeature request in `rm()` to split in batches of 100, ideally using multithreading e.g. aiohttp. to maximize parallelism.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/251", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/251/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/251/events", "html_url": "https://github.com/dask/gcsfs/issues/251", "id": 599797099, "node_id": "MDU6SXNzdWU1OTk3OTcwOTk=", "number": 251, "title": "Newly generated VCR files fail on replay", "user": {"login": "vlasenkoalexey", "id": 3851021, "node_id": "MDQ6VXNlcjM4NTEwMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3851021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlasenkoalexey", "html_url": "https://github.com/vlasenkoalexey", "followers_url": "https://api.github.com/users/vlasenkoalexey/followers", "following_url": "https://api.github.com/users/vlasenkoalexey/following{/other_user}", "gists_url": "https://api.github.com/users/vlasenkoalexey/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlasenkoalexey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlasenkoalexey/subscriptions", "organizations_url": "https://api.github.com/users/vlasenkoalexey/orgs", "repos_url": "https://api.github.com/users/vlasenkoalexey/repos", "events_url": "https://api.github.com/users/vlasenkoalexey/events{/privacy}", "received_events_url": "https://api.github.com/users/vlasenkoalexey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-14T19:11:16Z", "updated_at": "2020-05-06T20:39:43Z", "closed_at": "2020-05-06T20:39:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to do a small change https://github.com/dask/gcsfs/pull/250 but I can't make VCR tests to pass.\r\nThe format of newly generated replay files are significantly different from existing ones, see https://gist.github.com/vlasenkoalexey/7dbb38dfb5b2d09181b9837e6a0c40f5\r\n\r\nI tried on MacOS, Ubuntu, and even in Docker following steps from travis config in:\r\ndocker run -it --rm --net=host -v ${PWD}:/gcsfs -w /gcsfs continuumio/miniconda3\r\n\r\nI guess one of the following libraries was updated: google-auth google-cloud-core google-api-core google-api-python-client\r\nAnd now request format is different.\r\nIf so, either old library version has to be pinned, or test setup has to be fixed.\r\nI'm not very familiar with the protocol to fix this myself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/246", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/246/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/246/events", "html_url": "https://github.com/dask/gcsfs/issues/246", "id": 588119801, "node_id": "MDU6SXNzdWU1ODgxMTk4MDE=", "number": 246, "title": "SSLError: (\"read error: Error([('SSL routines', 'ssl3_read_n', 'unexpected eof while reading')],)\",)", "user": {"login": "arokem", "id": 118582, "node_id": "MDQ6VXNlcjExODU4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/118582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arokem", "html_url": "https://github.com/arokem", "followers_url": "https://api.github.com/users/arokem/followers", "following_url": "https://api.github.com/users/arokem/following{/other_user}", "gists_url": "https://api.github.com/users/arokem/gists{/gist_id}", "starred_url": "https://api.github.com/users/arokem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arokem/subscriptions", "organizations_url": "https://api.github.com/users/arokem/orgs", "repos_url": "https://api.github.com/users/arokem/repos", "events_url": "https://api.github.com/users/arokem/events{/privacy}", "received_events_url": "https://api.github.com/users/arokem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-26T03:02:46Z", "updated_at": "2020-03-26T22:11:30Z", "closed_at": "2020-03-26T21:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Earlier today, working with gcsfs version 0.4, I was getting a lot of the error mentioned in #221. I decided to go ahead and update my installation to 69d32fbd3e1575b1b7b9bc06adf6eced09fd20f1 and subsequently I am getting the error mentioned in the title (though I realize that this may or may not be related to the fix in #226)  \r\n\r\nThe code I am using is: \r\n\r\n```\r\nfrom scipy.io import loadmat \r\nimport gcsfs\r\n\r\nfs = gcsfs.GCSFileSystem(project='myprojectname')\r\n\r\ndata = np.empty((124, 11796177))\r\n\r\nfor chan in range(1, 125):\r\n    fname = op.join(path, f'chan-{chan}', f'sub-SA_sess-20180918_chan-{chan}.mat')\r\n    # print(f\"Opening {fname}\")\r\n    with fs.open(fname) as f_chan:\r\n        f_chan = loadmat(f_chan)\r\n        data[chan-1] = f_chan['data'].squeeze()\r\n```\r\n\r\nWhich reads 124 individual mat-files into one big local array. \r\n\r\nThe full traceback is: \r\n\r\n```\r\n---------------------------------------------------------------------------\r\nError                                     Traceback (most recent call last)\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/urllib3/contrib/pyopenssl.py in recv_into(self, *args, **kwargs)\r\n    312         try:\r\n--> 313             return self.connection.recv_into(*args, **kwargs)\r\n    314         except OpenSSL.SSL.SysCallError as e:\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/OpenSSL/SSL.py in recv_into(self, buffer, nbytes, flags)\r\n   1839             result = _lib.SSL_read(self._ssl, buf, nbytes)\r\n-> 1840         self._raise_ssl_error(self._ssl, result)\r\n   1841 \r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/OpenSSL/SSL.py in _raise_ssl_error(self, ssl, result)\r\n   1670         else:\r\n-> 1671             _raise_current_error()\r\n   1672 \r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/OpenSSL/_util.py in exception_from_error_queue(exception_type)\r\n     53 \r\n---> 54     raise exception_type(errors)\r\n     55 \r\n\r\nError: [('SSL routines', 'ssl3_read_n', 'unexpected eof while reading')]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nSSLError                                  Traceback (most recent call last)\r\n<ipython-input-4-3103004a59ee> in <module>\r\n      5     # print(f\"Opening {fname}\")\r\n      6     with fs.open(fname) as f_chan:\r\n----> 7         f_chan = loadmat(f_chan)\r\n      8         data[chan-1] = f_chan['data'].squeeze()\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/scipy/io/matlab/mio.py in loadmat(file_name, mdict, appendmat, **kwargs)\r\n    216     with _open_file_context(file_name, appendmat) as f:\r\n    217         MR, _ = mat_reader_factory(f, **kwargs)\r\n--> 218         matfile_dict = MR.get_variables(variable_names)\r\n    219 \r\n    220     if mdict is not None:\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/scipy/io/matlab/mio5.py in get_variables(self, variable_names)\r\n    290                 continue\r\n    291             try:\r\n--> 292                 res = self.read_var_array(hdr, process)\r\n    293             except MatReadError as err:\r\n    294                 warnings.warn(\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/scipy/io/matlab/mio5.py in read_var_array(self, header, process)\r\n    250            `process`.\r\n    251         '''\r\n--> 252         return self._matrix_reader.array_from_header(header, process)\r\n    253 \r\n    254     def get_variables(self, variable_names=None):\r\n\r\nmio5_utils.pyx in scipy.io.matlab.mio5_utils.VarReader5.array_from_header()\r\n\r\nmio5_utils.pyx in scipy.io.matlab.mio5_utils.VarReader5.array_from_header()\r\n\r\nmio5_utils.pyx in scipy.io.matlab.mio5_utils.VarReader5.read_real_complex()\r\n\r\nmio5_utils.pyx in scipy.io.matlab.mio5_utils.VarReader5.read_numeric()\r\n\r\nmio5_utils.pyx in scipy.io.matlab.mio5_utils.VarReader5.read_element()\r\n\r\nstreams.pyx in scipy.io.matlab.streams.ZlibInputStream.read_string()\r\n\r\nstreams.pyx in scipy.io.matlab.streams.ZlibInputStream.read_into()\r\n\r\nstreams.pyx in scipy.io.matlab.streams.ZlibInputStream._fill_buffer()\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/fsspec/spec.py in read(self, length)\r\n   1128             # don't even bother calling fetch\r\n   1129             return b\"\"\r\n-> 1130         out = self.cache._fetch(self.loc, self.loc + length)\r\n   1131         self.loc += len(out)\r\n   1132         return out\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/fsspec/caching.py in _fetch(self, start, end)\r\n    154             part = b\"\"\r\n    155         end = min(self.size, end + self.blocksize)\r\n--> 156         self.cache = self.fetcher(start, end)  # new block replaces old\r\n    157         self.start = start\r\n    158         self.end = self.start + len(self.cache)\r\n\r\n<decorator-gen-177> in _fetch_range(self, start, end)\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     50         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     51 \r\n---> 52     return f(self, *args, **kwargs)\r\n     53 \r\n     54 \r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in _fetch_range(self, start, end)\r\n   1291             head = None\r\n   1292         try:\r\n-> 1293             r = self.gcsfs._call(\"GET\", self.details[\"mediaLink\"], headers=head)\r\n   1294             data = r.content\r\n   1295             return data\r\n\r\n<decorator-gen-157> in _call(self, method, path, *args, **kwargs)\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     50         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     51 \r\n---> 52     return f(self, *args, **kwargs)\r\n     53 \r\n     54 \r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    532                     headers=headers,\r\n    533                     data=data,\r\n--> 534                     timeout=self.requests_timeout,\r\n    535                 )\r\n    536                 validate_response(r, path)\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/google/auth/transport/requests.py in request(self, method, url, data, headers, max_allowed_time, timeout, **kwargs)\r\n    315                 headers=request_headers,\r\n    316                 timeout=timeout,\r\n--> 317                 **kwargs\r\n    318             )\r\n    319         remaining_time = guard.remaining_timeout\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\r\n    528         }\r\n    529         send_kwargs.update(settings)\r\n--> 530         resp = self.send(prep, **send_kwargs)\r\n    531 \r\n    532         return resp\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/requests/sessions.py in send(self, request, **kwargs)\r\n    681 \r\n    682         if not stream:\r\n--> 683             r.content\r\n    684 \r\n    685         return r\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/requests/models.py in content(self)\r\n    827                 self._content = None\r\n    828             else:\r\n--> 829                 self._content = b''.join(self.iter_content(CONTENT_CHUNK_SIZE)) or b''\r\n    830 \r\n    831         self._content_consumed = True\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/requests/models.py in generate()\r\n    749             if hasattr(self.raw, 'stream'):\r\n    750                 try:\r\n--> 751                     for chunk in self.raw.stream(chunk_size, decode_content=True):\r\n    752                         yield chunk\r\n    753                 except ProtocolError as e:\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/urllib3/response.py in stream(self, amt, decode_content)\r\n    562         else:\r\n    563             while not is_fp_closed(self._fp):\r\n--> 564                 data = self.read(amt=amt, decode_content=decode_content)\r\n    565 \r\n    566                 if data:\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/urllib3/response.py in read(self, amt, decode_content, cache_content)\r\n    505             else:\r\n    506                 cache_content = False\r\n--> 507                 data = self._fp.read(amt) if not fp_closed else b\"\"\r\n    508                 if (\r\n    509                     amt != 0 and not data\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/http/client.py in read(self, amt)\r\n    457             # Amount is given, implement using readinto\r\n    458             b = bytearray(amt)\r\n--> 459             n = self.readinto(b)\r\n    460             return memoryview(b)[:n].tobytes()\r\n    461         else:\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/http/client.py in readinto(self, b)\r\n    501         # connection, and the user is reading more bytes than will be provided\r\n    502         # (for example, reading in 1k chunks)\r\n--> 503         n = self.fp.readinto(b)\r\n    504         if not n and b:\r\n    505             # Ideally, we would raise IncompleteRead if the content-length\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/socket.py in readinto(self, b)\r\n    584         while True:\r\n    585             try:\r\n--> 586                 return self._sock.recv_into(b)\r\n    587             except timeout:\r\n    588                 self._timeout_occurred = True\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/urllib3/contrib/pyopenssl.py in recv_into(self, *args, **kwargs)\r\n    330         # TLS 1.3 post-handshake authentication\r\n    331         except OpenSSL.SSL.Error as e:\r\n--> 332             raise ssl.SSLError(\"read error: %r\" % e)\r\n    333 \r\n    334     def settimeout(self, timeout):\r\n\r\nSSLError: (\"read error: Error([('SSL routines', 'ssl3_read_n', 'unexpected eof while reading')],)\",)\r\n```\r\n\r\nAny thoughts? Thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/244", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/244/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/244/events", "html_url": "https://github.com/dask/gcsfs/issues/244", "id": 584161543, "node_id": "MDU6SXNzdWU1ODQxNjE1NDM=", "number": 244, "title": "File visible with `ls` cannot be copied with `get`", "user": {"login": "arokem", "id": 118582, "node_id": "MDQ6VXNlcjExODU4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/118582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arokem", "html_url": "https://github.com/arokem", "followers_url": "https://api.github.com/users/arokem/followers", "following_url": "https://api.github.com/users/arokem/following{/other_user}", "gists_url": "https://api.github.com/users/arokem/gists{/gist_id}", "starred_url": "https://api.github.com/users/arokem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arokem/subscriptions", "organizations_url": "https://api.github.com/users/arokem/orgs", "repos_url": "https://api.github.com/users/arokem/repos", "events_url": "https://api.github.com/users/arokem/events{/privacy}", "received_events_url": "https://api.github.com/users/arokem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-19T04:54:14Z", "updated_at": "2020-03-19T13:18:41Z", "closed_at": "2020-03-19T13:16:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might be missing something obvious, but I would appreciate some help, if anyone can spot what I am missing \r\n\r\nWhen executing:\r\n```\r\nfs.ls('/learning2learn/Buffalo/wcst-nhp/SA/sess-20180918/ephys/chan-1/sub-SA_sess-20180918_chan-1.mat')\r\n```\r\nI get\r\n\r\n```\r\n['learning2learn/Buffalo/wcst-nhp/SA/sess-20180918/ephys/chan-1/sub-SA_sess-20180918_chan-1.mat']\r\n```\r\nas expected. But when I execute: \r\n\r\n```\r\nfs.get('/learning2learn/Buffalo/wcst-nhp/SA/sess-20180918/ephys/chan-1/sub-SA_sess-20180918_chan-1.mat', 'test.mat')\r\n```\r\n\r\nI get:\r\n```\r\n---------------------------------------------------------------------------\r\nFileNotFoundError                         Traceback (most recent call last)\r\n<ipython-input-40-2a85a298f708> in <module>\r\n----> 1 fs.get('/learning2learn/Buffalo/wcst-nhp/SA/sess-20180918/ephys/chan-1/sub-SA_sess-20180918_chan-1.mat', 'test.mat')\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/fsspec/spec.py in get(self, rpath, lpath, recursive, **kwargs)\r\n    566             lpaths = [lpath]\r\n    567         for lpath, rpath in zip(lpaths, rpaths):\r\n--> 568             with self.open(rpath, \"rb\", **kwargs) as f1:\r\n    569                 with open(lpath, \"wb\") as f2:\r\n    570                     data = True\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/fsspec/spec.py in open(self, path, mode, block_size, cache_options, **kwargs)\r\n    722                 autocommit=ac,\r\n    723                 cache_options=cache_options,\r\n--> 724                 **kwargs\r\n    725             )\r\n    726             if not ac:\r\n\r\n<decorator-gen-172> in _open(self, path, mode, block_size, cache_options, acl, consistency, metadata, autocommit, **kwargs)\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     48         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     49 \r\n---> 50     return f(self, *args, **kwargs)\r\n     51 \r\n     52 \r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in _open(self, path, mode, block_size, cache_options, acl, consistency, metadata, autocommit, **kwargs)\r\n   1020             acl=acl,\r\n   1021             autocommit=autocommit,\r\n-> 1022             **kwargs\r\n   1023         )\r\n   1024 \r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in __init__(self, gcsfs, path, mode, block_size, autocommit, cache_type, cache_options, acl, consistency, metadata, **kwargs)\r\n   1074             cache_type=cache_type,\r\n   1075             cache_options=cache_options,\r\n-> 1076             **kwargs\r\n   1077         )\r\n   1078         bucket, key = split_path(path)\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/fsspec/spec.py in __init__(self, fs, path, mode, block_size, autocommit, cache_type, cache_options, **kwargs)\r\n    954         if mode == \"rb\":\r\n    955             if not hasattr(self, \"details\"):\r\n--> 956                 self.details = fs.info(path)\r\n    957             self.size = self.details[\"size\"]\r\n    958             self.cache = caches[cache_type](\r\n\r\n~/.conda/envs/l2lhub/lib/python3.6/site-packages/gcsfs/core.py in info(self, path, **kwargs)\r\n    783             return out[0]\r\n    784         else:\r\n--> 785             raise FileNotFoundError(path)\r\n    786 \r\n    787     @_tracemethod\r\n\r\nFileNotFoundError: /learning2learn/Buffalo/wcst-nhp/SA/sess-20180918/ephys/chan-1/sub-SA_sess-20180918_chan-1.mat\r\n```\r\n\r\nMore about the context is that I am working on a GCP machine that was created with a service account that has \"Storage Admin\" rights on the storage for this project (gcsfs version 0.4 was installed using conda). Might this be the cause for this? Maybe this instance can only list files, but not get their content? \r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/239", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/239/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/239/events", "html_url": "https://github.com/dask/gcsfs/issues/239", "id": 572240964, "node_id": "MDU6SXNzdWU1NzIyNDA5NjQ=", "number": 239, "title": "Race condition in _maybe_get_cached_listing", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-27T17:32:50Z", "updated_at": "2020-03-02T13:34:25Z", "closed_at": "2020-03-02T13:34:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've mostly been keeping `cache_timeout=None` but as soon as I tried disabling the cache I ran into this pretty quickly: when running with multiple threads touching the same set of files, it seems we can try to delete `path` here twice: https://github.com/dask/gcsfs/blob/master/gcsfs/core.py#L610-L622\r\n\r\n```\r\n  File \"/Users/brett/model/.venv/lib/python3.7/site-packages/gcsfs/core.py\", line 795, in info\r\n    parent_cache = self._maybe_get_cached_listing(parent_path + \"/\")\r\n  File \"<decorator-gen-4>\", line 2, in _maybe_get_cached_listing\r\n  File \"/Users/brett/model/.venv/lib/python3.7/site-packages/gcsfs/core.py\", line 52, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/brett/model/.venv/lib/python3.7/site-packages/gcsfs/core.py\", line 622, in _maybe_get_cached_listing\r\n    del self._listing_cache[path]\r\nKeyError: 'city_data/portland/transit/'\r\n```\r\nWould it make sense to just `try: del self._listing_cache[path]; except KeyError: pass` to prevent this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/237", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/237/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/237/events", "html_url": "https://github.com/dask/gcsfs/issues/237", "id": 564844166, "node_id": "MDU6SXNzdWU1NjQ4NDQxNjY=", "number": 237, "title": "TypeError on commit", "user": {"login": "remram44", "id": 426784, "node_id": "MDQ6VXNlcjQyNjc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remram44", "html_url": "https://github.com/remram44", "followers_url": "https://api.github.com/users/remram44/followers", "following_url": "https://api.github.com/users/remram44/following{/other_user}", "gists_url": "https://api.github.com/users/remram44/gists{/gist_id}", "starred_url": "https://api.github.com/users/remram44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remram44/subscriptions", "organizations_url": "https://api.github.com/users/remram44/orgs", "repos_url": "https://api.github.com/users/remram44/repos", "events_url": "https://api.github.com/users/remram44/events{/privacy}", "received_events_url": "https://api.github.com/users/remram44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-02-13T17:37:09Z", "updated_at": "2020-02-19T20:43:45Z", "closed_at": "2020-02-19T20:43:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that `_upload_chunk()` does not check if `self.offset` has been set.\r\n\r\n```\r\nTraceback (most recent call last):\r\n    ...\r\n  File \"/usr/local/lib/python3.7/site-packages/gcsfs/core.py\", line 1216, in commit\r\n    self._upload_chunk(final=True)\r\n  File \"</usr/local/lib/python3.7/site-packages/decorator.py:decorator-gen-18>\", line 2, in _upload_chunk\r\n  File \"/usr/local/lib/python3.7/site-packages/gcsfs/core.py\", line 52, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/gcsfs/core.py\", line 1166, in _upload_chunk\r\n    self.offset + l - 1,\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\r\n```\r\nI suppose this happens if the file is small enough so that the final chunk is the first one, and autocommit=False. gcsfs 0.6.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/232", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/232/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/232/events", "html_url": "https://github.com/dask/gcsfs/issues/232", "id": 544976230, "node_id": "MDU6SXNzdWU1NDQ5NzYyMzA=", "number": 232, "title": "gcsfs md5sum fails", "user": {"login": "kkwekkeboom", "id": 4711359, "node_id": "MDQ6VXNlcjQ3MTEzNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4711359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkwekkeboom", "html_url": "https://github.com/kkwekkeboom", "followers_url": "https://api.github.com/users/kkwekkeboom/followers", "following_url": "https://api.github.com/users/kkwekkeboom/following{/other_user}", "gists_url": "https://api.github.com/users/kkwekkeboom/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkwekkeboom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkwekkeboom/subscriptions", "organizations_url": "https://api.github.com/users/kkwekkeboom/orgs", "repos_url": "https://api.github.com/users/kkwekkeboom/repos", "events_url": "https://api.github.com/users/kkwekkeboom/events{/privacy}", "received_events_url": "https://api.github.com/users/kkwekkeboom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-03T12:33:37Z", "updated_at": "2020-02-19T20:44:34Z", "closed_at": "2020-02-19T20:44:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When uploading a file a little bit larger than chunk_size and using md5sum validation, the md5sum validation fails. This is because the last (partial) chunk is not added to the md5sum. \r\n\r\nIn the last chunk (of size < chunk_size) the returned header does not contain \"Range\". \r\n\r\n`\r\n{'X-GUploader-UploadID': '<>', 'ETag': '<>', 'Vary': 'Origin, X-Origin', 'Content-Type': 'application/json; charset=UTF-8', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': 'Mon, 01 Jan 1990 00:00:00 GMT', 'Date': 'Fri, 03 Jan 2020 10:50:40 GMT', 'Content-Length': '897', 'Server': 'UploadServer',...}\r\n`\r\n\r\nIn the code this is handled by the following line, which finalizes the upload. Forgotten is to update the md5sum with the last chunk before validating the md5sum.\r\n\r\n```\r\nelif l:\r\n            #\r\n            assert final, \"Response looks like upload is over\"\r\n            size, md5 = int(r.json()[\"size\"]), r.json()[\"md5Hash\"]\r\n            if self.consistency == \"size\":\r\n                assert size == self.buffer.tell() + self.offset, \"Size mismatch\"\r\n            if self.consistency == \"md5\":\r\n                assert (\r\n                    b64encode(self.md5.digest()) == md5.encode()\r\n                ), \"MD5 checksum failed\"\r\n        else:\r\n            assert final, \"Response looks like upload is over\"\r\n        return True\r\n```\r\n\r\n[Link](https://github.com/dask/gcsfs/blob/d7b832e13de6b5b0df00eeb7454c6547bf30d7b9/gcsfs/core.py#L1194)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/231", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/231/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/231/events", "html_url": "https://github.com/dask/gcsfs/issues/231", "id": 541634298, "node_id": "MDU6SXNzdWU1NDE2MzQyOTg=", "number": 231, "title": "gcsfs can't access google storage file, switches to anon user", "user": {"login": "kapilkd13", "id": 8131630, "node_id": "MDQ6VXNlcjgxMzE2MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8131630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilkd13", "html_url": "https://github.com/kapilkd13", "followers_url": "https://api.github.com/users/kapilkd13/followers", "following_url": "https://api.github.com/users/kapilkd13/following{/other_user}", "gists_url": "https://api.github.com/users/kapilkd13/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilkd13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilkd13/subscriptions", "organizations_url": "https://api.github.com/users/kapilkd13/orgs", "repos_url": "https://api.github.com/users/kapilkd13/repos", "events_url": "https://api.github.com/users/kapilkd13/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilkd13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-12-23T08:06:07Z", "updated_at": "2020-07-28T21:18:09Z", "closed_at": "2020-05-14T18:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to read a csv file present in gs bucket directly into dataframe. \r\nI used `gcloud auth login` to authorize account. But when I try to use gcsfs it thorws:\r\n`gcsfs.utils.HttpError: Anonymous caller does not have storage.objects.list access to <my-bucket>`\r\n\r\nNow I ca list/download my files using `gsutil`. I can also list these files by passing `adc` file as token to `fs=gcsfs.GCSFileSystem(token='adc.json')`. My issue is how do I set it as default. Is there a particular location where I put this file. I couldn't find anything in docs.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/228", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/228/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/228/events", "html_url": "https://github.com/dask/gcsfs/issues/228", "id": 537969108, "node_id": "MDU6SXNzdWU1Mzc5NjkxMDg=", "number": 228, "title": "GCSFileSystem.delete() - unexpected keyword argument 'maxdepth'", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-14T21:40:03Z", "updated_at": "2019-12-14T21:47:57Z", "closed_at": "2019-12-14T21:47:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "` fs.rm('mybucket/myfile')` produces following error - tested on 0.6.0/0.5.3:\r\n\r\n```\r\n  File \"C:\\Users\\ye\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\fsspec\\spec.py\", line 868, in delete\r\n    return self.rm(path, recursive=recursive, maxdepth=maxdepth)\r\nTypeError: rm() got an unexpected keyword argument 'maxdepth'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/223", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/223/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/223/events", "html_url": "https://github.com/dask/gcsfs/issues/223", "id": 535681466, "node_id": "MDU6SXNzdWU1MzU2ODE0NjY=", "number": 223, "title": "Speed gcsfs vs google.storage", "user": {"login": "NegatioN", "id": 4037769, "node_id": "MDQ6VXNlcjQwMzc3Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4037769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NegatioN", "html_url": "https://github.com/NegatioN", "followers_url": "https://api.github.com/users/NegatioN/followers", "following_url": "https://api.github.com/users/NegatioN/following{/other_user}", "gists_url": "https://api.github.com/users/NegatioN/gists{/gist_id}", "starred_url": "https://api.github.com/users/NegatioN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NegatioN/subscriptions", "organizations_url": "https://api.github.com/users/NegatioN/orgs", "repos_url": "https://api.github.com/users/NegatioN/repos", "events_url": "https://api.github.com/users/NegatioN/events{/privacy}", "received_events_url": "https://api.github.com/users/NegatioN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-10T11:54:55Z", "updated_at": "2020-01-30T14:51:33Z", "closed_at": "2019-12-10T13:21:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are you considering using the official api-clients of Google as a backend at some point? https://googleapis.github.io/google-resumable-media-python/latest/google.resumable_media.requests.html#chunked-downloads\r\n\r\nFor a file of ~1GB from a region-local bucket, I see a speed increase from ~22s with gcsfs to around ~12s by downloading with the newest google.storage API.\r\n\r\nI really love the abstractions in this library a lot more than the official one though, so I'm curious as to the plans going forward.\r\n\r\nI might start to toy around with replacing some of these things myself, but I'm not sure I can promise a full conversion patch", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/221", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/221/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/221/events", "html_url": "https://github.com/dask/gcsfs/issues/221", "id": 534351560, "node_id": "MDU6SXNzdWU1MzQzNTE1NjA=", "number": 221, "title": "Service Unavailable is not retried", "user": {"login": "JacobHayes", "id": 2555532, "node_id": "MDQ6VXNlcjI1NTU1MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2555532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JacobHayes", "html_url": "https://github.com/JacobHayes", "followers_url": "https://api.github.com/users/JacobHayes/followers", "following_url": "https://api.github.com/users/JacobHayes/following{/other_user}", "gists_url": "https://api.github.com/users/JacobHayes/gists{/gist_id}", "starred_url": "https://api.github.com/users/JacobHayes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JacobHayes/subscriptions", "organizations_url": "https://api.github.com/users/JacobHayes/orgs", "repos_url": "https://api.github.com/users/JacobHayes/repos", "events_url": "https://api.github.com/users/JacobHayes/events{/privacy}", "received_events_url": "https://api.github.com/users/JacobHayes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-07T04:21:13Z", "updated_at": "2019-12-14T02:01:57Z", "closed_at": "2019-12-14T02:01:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Fairly rarely when reading a file (maybe tens out of tens of thousands), I get a `RuntimeError(\"b'Service Unavailable'\")` from `validate_response`. I'm not sure of the status code, but seems like it is a retriable error - it pops up in a dask cluster w/ hundreds of workers but doesn't affect other workers or later requests on the same worker.\r\n\r\nI know this is affecting some reads, but I suspect it might also be affecting some of our writes resulting in invalid files - we open the file to write and catch exceptions within the context to track fail/pass without re-raising. I'm guessing that one chunk is flushed while another is not (but could have been retried).\r\n\r\nAs far as I can tell, it should just need an extra check in [`core.validate_response`](https://github.com/dask/gcsfs/blob/master/gcsfs/core.py#L151) and an update to [`is_retriable`](https://github.com/dask/gcsfs/blob/master/gcsfs/utils.py#L41) or `RETRIABLE_EXCEPTIONS`.\r\n\r\nI'll try to reproduce the issue w/ a debugger to inspect the status code, but I guess we could just check the content and raise a retriable error accordingly. Here's a trace for a write from our logs:\r\n<img width=\"1076\" alt=\"service-unavailable\" src=\"https://user-images.githubusercontent.com/2555532/70369015-cb50f500-1867-11ea-96a1-1250b791baf7.png\">\r\n\r\nHas anyone else seen this or similar issues?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/218", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/218/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/218/events", "html_url": "https://github.com/dask/gcsfs/issues/218", "id": 533234477, "node_id": "MDU6SXNzdWU1MzMyMzQ0Nzc=", "number": 218, "title": "gcsfs 0.5.2 breaks on permission issue", "user": {"login": "DPGrev", "id": 5618470, "node_id": "MDQ6VXNlcjU2MTg0NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5618470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DPGrev", "html_url": "https://github.com/DPGrev", "followers_url": "https://api.github.com/users/DPGrev/followers", "following_url": "https://api.github.com/users/DPGrev/following{/other_user}", "gists_url": "https://api.github.com/users/DPGrev/gists{/gist_id}", "starred_url": "https://api.github.com/users/DPGrev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DPGrev/subscriptions", "organizations_url": "https://api.github.com/users/DPGrev/orgs", "repos_url": "https://api.github.com/users/DPGrev/repos", "events_url": "https://api.github.com/users/DPGrev/events{/privacy}", "received_events_url": "https://api.github.com/users/DPGrev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-12-05T09:42:25Z", "updated_at": "2019-12-12T14:21:50Z", "closed_at": "2019-12-11T21:56:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating from 0.5.1 to 0.5.2 we get the following error:\r\n\r\n```\r\n<<Project Number>>-compute@developer.gserviceaccount.com does not have serviceusage.services.use access to project <<Project Number>>.\r\n```\r\n\r\nThis does not happen for GCFS 0.5.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/216", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/216/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/216/events", "html_url": "https://github.com/dask/gcsfs/issues/216", "id": 532985307, "node_id": "MDU6SXNzdWU1MzI5ODUzMDc=", "number": 216, "title": "GCSFileSystem.cat fails for requester pays objects", "user": {"login": "TomAugspurger", "id": 1312546, "node_id": "MDQ6VXNlcjEzMTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomAugspurger", "html_url": "https://github.com/TomAugspurger", "followers_url": "https://api.github.com/users/TomAugspurger/followers", "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}", "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions", "organizations_url": "https://api.github.com/users/TomAugspurger/orgs", "repos_url": "https://api.github.com/users/TomAugspurger/repos", "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}", "received_events_url": "https://api.github.com/users/TomAugspurger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T22:52:36Z", "updated_at": "2019-12-05T16:49:25Z", "closed_at": "2019-12-05T16:49:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```pytb\r\nfs = gcsfs.GCSFileSystem(token=\"google_default\", project=\"dask-demo-182016\")\r\n\r\nIn [13]: fs.open('gcsfs-testing-requesterpays/rasm.zarr/.zgroup').read()\r\nOut[13]: b'{\\n    \"zarr_format\": 2\\n}'\r\n\r\nIn [14]: fs.cat('gcsfs-testing-requesterpays/rasm.zarr/.zgroup')\r\n---------------------------------------------------------------------------\r\nHTTPError                                 Traceback (most recent call last)\r\n<ipython-input-14-7d43a4aa534b> in <module>\r\n----> 1 fs.cat('gcsfs-testing-requesterpays/rasm.zarr/.zgroup')\r\n\r\n</Users/taugspurger/miniconda3/envs/filesystems/lib/python3.7/site-packages/decorator.py:decorator-gen-129> in cat(self, path)\r\n\r\n~/sandbox/gcsfs/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     48         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     49\r\n---> 50     return f(self, *args, **kwargs)\r\n     51\r\n     52\r\n\r\n~/sandbox/gcsfs/gcsfs/core.py in cat(self, path)\r\n    855         u2 = self.url(path)\r\n    856         r = self.session.get(u2)\r\n--> 857         r.raise_for_status()\r\n    858         if \"X-Goog-Hash\" in r.headers:\r\n    859             # if header includes md5 hash, check that data matches\r\n\r\n~/miniconda3/envs/filesystems/lib/python3.7/site-packages/requests/models.py in raise_for_status(self)\r\n    938\r\n    939         if http_error_msg:\r\n--> 940             raise HTTPError(http_error_msg, response=self)\r\n    941\r\n    942     def close(self):\r\n\r\nHTTPError: 400 Client Error: Bad Request for url: https://www.googleapis.com/download/storage/v1/b/gcsfs-testing-requesterpays/o/rasm.zarr%2F.zgroup?alt=media\r\n```\r\n\r\nSeems like `.cat` goes directly though `.session` rather than `._call`.\r\n\r\nThis blocks using requester pays buckets via intake-xarray, since it uses `.cat` on a file.\r\n\r\n```pytb\r\nHTTPError                                 Traceback (most recent call last)\r\n~/sandbox/filesystem_spec/fsspec/mapping.py in __getitem__(self, key, default)\r\n     75         try:\r\n---> 76             result = self.fs.cat(key)\r\n     77         except:  # noqa: E722\r\n\r\n</Users/taugspurger/miniconda3/envs/filesystems/lib/python3.7/site-packages/decorator.py:decorator-gen-129> in cat(self, path)\r\n\r\n~/sandbox/gcsfs/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49\r\n---> 50     return f(self, *args, **kwargs)\r\n     51\r\n\r\n~/sandbox/gcsfs/gcsfs/core.py in cat(self, path)\r\n    856         r = self.session.get(u2)\r\n--> 857         r.raise_for_status()\r\n    858         if \"X-Goog-Hash\" in r.headers:\r\n\r\n~/miniconda3/envs/filesystems/lib/python3.7/site-packages/requests/models.py in raise_for_status(self)\r\n    939         if http_error_msg:\r\n--> 940             raise HTTPError(http_error_msg, response=self)\r\n    941\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/211", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/211/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/211/events", "html_url": "https://github.com/dask/gcsfs/issues/211", "id": 531520836, "node_id": "MDU6SXNzdWU1MzE1MjA4MzY=", "number": 211, "title": "Requester pays fallback fails for google_default auth", "user": {"login": "TomAugspurger", "id": 1312546, "node_id": "MDQ6VXNlcjEzMTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomAugspurger", "html_url": "https://github.com/TomAugspurger", "followers_url": "https://api.github.com/users/TomAugspurger/followers", "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}", "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions", "organizations_url": "https://api.github.com/users/TomAugspurger/orgs", "repos_url": "https://api.github.com/users/TomAugspurger/repos", "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}", "received_events_url": "https://api.github.com/users/TomAugspurger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T20:31:24Z", "updated_at": "2019-12-02T21:58:54Z", "closed_at": "2019-12-02T21:58:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The fallback is failing because `_connect_google_default` sets `self.project`. Going to do a refactor of this to keep all the state setting in `__init__`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/207", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/207/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/207/events", "html_url": "https://github.com/dask/gcsfs/issues/207", "id": 529565567, "node_id": "MDU6SXNzdWU1Mjk1NjU1Njc=", "number": 207, "title": "Enable user_project fallback to project_id", "user": {"login": "TomAugspurger", "id": 1312546, "node_id": "MDQ6VXNlcjEzMTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomAugspurger", "html_url": "https://github.com/TomAugspurger", "followers_url": "https://api.github.com/users/TomAugspurger/followers", "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}", "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions", "organizations_url": "https://api.github.com/users/TomAugspurger/orgs", "repos_url": "https://api.github.com/users/TomAugspurger/repos", "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}", "received_events_url": "https://api.github.com/users/TomAugspurger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-27T20:46:02Z", "updated_at": "2019-12-02T17:03:52Z", "closed_at": "2019-12-02T17:03:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As a followup to #206, it'd be convenient to have `user_project` fall back to `project_id` if `user_project` isn't specified but `project_id` is.\r\n\r\nCode-wise, this is quite simple\r\n\r\n```python\r\nself.user_project = user_project or project_id\r\n```\r\n\r\nUnfortunately, this didn't play well with vcr and our CI. I think we were too aggressive with our rewriting of values when saving the requests with VCR, but still need to confirm that.\r\n\r\ncc @rabernat. Will see what I can get done this afternoon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/197", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/197/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/197/events", "html_url": "https://github.com/dask/gcsfs/issues/197", "id": 520982921, "node_id": "MDU6SXNzdWU1MjA5ODI5MjE=", "number": 197, "title": "PIP Repository error", "user": {"login": "thiagojoa", "id": 36665874, "node_id": "MDQ6VXNlcjM2NjY1ODc0", "avatar_url": "https://avatars1.githubusercontent.com/u/36665874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiagojoa", "html_url": "https://github.com/thiagojoa", "followers_url": "https://api.github.com/users/thiagojoa/followers", "following_url": "https://api.github.com/users/thiagojoa/following{/other_user}", "gists_url": "https://api.github.com/users/thiagojoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiagojoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiagojoa/subscriptions", "organizations_url": "https://api.github.com/users/thiagojoa/orgs", "repos_url": "https://api.github.com/users/thiagojoa/repos", "events_url": "https://api.github.com/users/thiagojoa/events{/privacy}", "received_events_url": "https://api.github.com/users/thiagojoa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T14:06:39Z", "updated_at": "2019-11-11T14:11:19Z", "closed_at": "2019-11-11T14:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could not install packages due to an EnvironmentError: 404 Client Error: Not Found for url: https://pypi.org/simple/gcsf/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/193", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/193/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/193/events", "html_url": "https://github.com/dask/gcsfs/issues/193", "id": 519485513, "node_id": "MDU6SXNzdWU1MTk0ODU1MTM=", "number": 193, "title": "Reformat with black", "user": {"login": "TomAugspurger", "id": 1312546, "node_id": "MDQ6VXNlcjEzMTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomAugspurger", "html_url": "https://github.com/TomAugspurger", "followers_url": "https://api.github.com/users/TomAugspurger/followers", "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}", "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions", "organizations_url": "https://api.github.com/users/TomAugspurger/orgs", "repos_url": "https://api.github.com/users/TomAugspurger/repos", "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}", "received_events_url": "https://api.github.com/users/TomAugspurger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-07T20:09:34Z", "updated_at": "2019-11-11T20:10:00Z", "closed_at": "2019-11-11T20:10:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "OK by you @martindurant?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/191", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/191/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/191/events", "html_url": "https://github.com/dask/gcsfs/issues/191", "id": 517648422, "node_id": "MDU6SXNzdWU1MTc2NDg0MjI=", "number": 191, "title": "`copy` is broken when the request returns `not done`", "user": {"login": "sdanzan", "id": 1094967, "node_id": "MDQ6VXNlcjEwOTQ5Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1094967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdanzan", "html_url": "https://github.com/sdanzan", "followers_url": "https://api.github.com/users/sdanzan/followers", "following_url": "https://api.github.com/users/sdanzan/following{/other_user}", "gists_url": "https://api.github.com/users/sdanzan/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdanzan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdanzan/subscriptions", "organizations_url": "https://api.github.com/users/sdanzan/orgs", "repos_url": "https://api.github.com/users/sdanzan/repos", "events_url": "https://api.github.com/users/sdanzan/events{/privacy}", "received_events_url": "https://api.github.com/users/sdanzan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-05T09:25:01Z", "updated_at": "2019-11-08T20:25:20Z", "closed_at": "2019-11-08T20:25:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In `copy` the following code is broken on `rewriteToken=out['rewriteToken']`\r\n```\r\nwhile out.json()['done'] is not True:\r\n    out = self._call(\r\n        'POST', 'b/{}/o/{}/rewriteTo/b/{}/o/{}', b1, k1, b2, k2,\r\n        rewriteToken=out['rewriteToken'], destinationPredefinedAcl=acl)\r\n```\r\n\r\nI'm proposing #190 to fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/189", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/189/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/189/events", "html_url": "https://github.com/dask/gcsfs/issues/189", "id": 513438950, "node_id": "MDU6SXNzdWU1MTM0Mzg5NTA=", "number": 189, "title": "RuntimeError(b'Backend Error')", "user": {"login": "henighan", "id": 16494654, "node_id": "MDQ6VXNlcjE2NDk0NjU0", "avatar_url": "https://avatars2.githubusercontent.com/u/16494654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henighan", "html_url": "https://github.com/henighan", "followers_url": "https://api.github.com/users/henighan/followers", "following_url": "https://api.github.com/users/henighan/following{/other_user}", "gists_url": "https://api.github.com/users/henighan/gists{/gist_id}", "starred_url": "https://api.github.com/users/henighan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henighan/subscriptions", "organizations_url": "https://api.github.com/users/henighan/orgs", "repos_url": "https://api.github.com/users/henighan/repos", "events_url": "https://api.github.com/users/henighan/events{/privacy}", "received_events_url": "https://api.github.com/users/henighan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-28T17:09:51Z", "updated_at": "2019-12-13T16:36:22Z", "closed_at": "2019-12-13T16:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very occasionally when reading a text file on gcs, an exception is raised with a traceback seen below:\r\n```\r\n  File \"/opt/conda/lib/python3.7/site-packages/fsspec/spec.py\", line 1046, in read\r\n    out = self.cache._fetch(self.loc, self.loc + length)\r\n  File \"/opt/conda/lib/python3.7/site-packages/fsspec/core.py\", line 615, in _fetch\r\n    new = self.fetcher(self.end, bend)\r\n  File \"</opt/conda/lib/python3.7/site-packages/decorator.py:decorator-gen-22>\", line 2, in _fetch_range\r\n  File \"/opt/conda/lib/python3.7/site-packages/gcsfs/core.py\", line 54, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/gcsfs/core.py\", line 1071, in _fetch_range\r\n    headers=head)\r\n  File \"</opt/conda/lib/python3.7/site-packages/decorator.py:decorator-gen-2>\", line 2, in _call\r\n  File \"/opt/conda/lib/python3.7/site-packages/gcsfs/core.py\", line 54, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.7/site-packages/gcsfs/core.py\", line 464, in _call\r\n    validate_response(r, path)\r\n  File \"/opt/conda/lib/python3.7/site-packages/gcsfs/core.py\", line 169, in validate_response\r\n    raise RuntimeError(m)\r\nRuntimeError: b'Backend Error'\r\n```\r\n\r\nI'm guessing (?) this is due to the `backendError` (status code 500) described here:\r\nhttps://cloud.google.com/storage/docs/json_api/v1/status-codes\r\n\r\nIn the above link, google suggests retrying if this error is raised. However, if I am understanding these snippets of `gcsfs/core.py` correctly, it appears that no retry is being attempted for statuscode 500.\r\nhttps://github.com/dask/gcsfs/blob/34533546565dc9cadc3c5c88751578a5e8927ac5/gcsfs/core.py#L465-L467\r\nhttps://github.com/dask/gcsfs/blob/34533546565dc9cadc3c5c88751578a5e8927ac5/gcsfs/core.py#L138-L169", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/186", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/186/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/186/events", "html_url": "https://github.com/dask/gcsfs/issues/186", "id": 510386385, "node_id": "MDU6SXNzdWU1MTAzODYzODU=", "number": 186, "title": "Performance regression in 0.3.0", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-22T01:51:24Z", "updated_at": "2019-11-11T20:00:25Z", "closed_at": "2019-11-11T20:00:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When opening a file in a bucket with a lot of files (500k in my case), I see a huge decrease in performance between 0.2.3 and 0.3.0 through master.\r\n\r\nBefore:\r\n```\r\n[nav] In [1]: import gcsfs\r\n         ...: fs = gcsfs.GCSFileSystem()\r\n         ...: %time fs.open('gs://<bucket>/89257551a5d8c84ba07c42c6af490010.txt').read()\r\nCPU times: user 2.98 ms, sys: 1.18 ms, total: 4.16 ms\r\nWall time: 63.8 ms\r\n```\r\nNow:\r\n```\r\n[nav] In [1]: import gcsfs\r\n         ...: fs = gcsfs.GCSFileSystem()\r\n         ...: %time fs.open('gs://<bucket>/89257551a5d8c84ba07c42c6af490010.txt').read()\r\nCPU times: user 11.9 s, sys: 4.19 s, total: 16.1 s\r\nWall time: 2min 55s\r\n```\r\n\r\nI don't see this behavior for the same file in a nearly empty bucket, so I'm relatively sure it has something to do with the number of files.\r\n\r\n3 minutes is roughly how long it took me to `gsutil ls | wc` the bucket, maybe there's an inadvertent list of all files going on...?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/181", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/181/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/181/events", "html_url": "https://github.com/dask/gcsfs/issues/181", "id": 503541671, "node_id": "MDU6SXNzdWU1MDM1NDE2NzE=", "number": 181, "title": "Large objects in serialized FileSystem", "user": {"login": "TomAugspurger", "id": 1312546, "node_id": "MDQ6VXNlcjEzMTI1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomAugspurger", "html_url": "https://github.com/TomAugspurger", "followers_url": "https://api.github.com/users/TomAugspurger/followers", "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}", "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions", "organizations_url": "https://api.github.com/users/TomAugspurger/orgs", "repos_url": "https://api.github.com/users/TomAugspurger/repos", "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}", "received_events_url": "https://api.github.com/users/TomAugspurger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-07T15:53:45Z", "updated_at": "2019-10-07T16:48:37Z", "closed_at": "2019-10-07T16:48:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Not sure what yet\r\n\r\n```python\r\nimport gcsfs\r\nimport pickle\r\n\r\nfs = gcsfs.GCSFileSystem(token=\"anon\")\r\nprint(len(pickle.dumps(fs)))\r\nfiles = fs.glob('anaconda-flights/data.parquet/data.parquet/part*')\r\nprint(len(pickle.dumps(fs)))\r\n```\r\n\r\nThat outputs\r\n\r\n```\r\n2598\r\n7132903\r\n```\r\n\r\nfor me.\r\n\r\nLooking into the cause.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/180", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/180/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/180/events", "html_url": "https://github.com/dask/gcsfs/issues/180", "id": 501612089, "node_id": "MDU6SXNzdWU1MDE2MTIwODk=", "number": 180, "title": "'AuthorizedSession' object has no attribute 'credentials'", "user": {"login": "fbriol", "id": 397386, "node_id": "MDQ6VXNlcjM5NzM4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/397386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbriol", "html_url": "https://github.com/fbriol", "followers_url": "https://api.github.com/users/fbriol/followers", "following_url": "https://api.github.com/users/fbriol/following{/other_user}", "gists_url": "https://api.github.com/users/fbriol/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbriol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbriol/subscriptions", "organizations_url": "https://api.github.com/users/fbriol/orgs", "repos_url": "https://api.github.com/users/fbriol/repos", "events_url": "https://api.github.com/users/fbriol/events{/privacy}", "received_events_url": "https://api.github.com/users/fbriol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2019-10-02T17:00:15Z", "updated_at": "2019-11-14T17:09:23Z", "closed_at": "2019-11-06T22:21:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes when reading parquet files I get this error:\r\n````\r\n</srv/conda/envs/notebook/lib/python3.7/site-packages/decorator.py:decorator-gen-6> in _do_list_objects()\r\n\r\n/srv/conda/envs/notebook/lib/python3.7/site-packages/gcsfs/core.py in _tracemethod()\r\n     52         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     53 \r\n---> 54     return f(self, *args, **kwargs)\r\n     55 \r\n     56 \r\n\r\n/srv/conda/envs/notebook/lib/python3.7/site-packages/gcsfs/core.py in _do_list_objects()\r\n    565         items = []\r\n    566         page = self._call('GET', 'b/{}/o/', bucket,\r\n--> 567                           delimiter=\"/\", prefix=prefix, maxResults=max_results\r\n    568                           ).json()\r\n    569 \r\n\r\n</srv/conda/envs/notebook/lib/python3.7/site-packages/decorator.py:decorator-gen-2> in _call()\r\n\r\n/srv/conda/envs/notebook/lib/python3.7/site-packages/gcsfs/core.py in _tracemethod()\r\n     52         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     53 \r\n---> 54     return f(self, *args, **kwargs)\r\n     55 \r\n     56 \r\n\r\n/srv/conda/envs/notebook/lib/python3.7/site-packages/gcsfs/core.py in _call()\r\n    459                     time.sleep(min(random.random() + 2**(retry-1), 32))\r\n    460                 r = self.session.request(method, path,\r\n--> 461                                          params=kwargs, json=json, headers=headers, data=data, timeout=self.requests_timeout)\r\n    462                 validate_response(r, path)\r\n    463                 break\r\n\r\n/srv/conda/envs/notebook/lib/python3.7/site-packages/google/auth/transport/requests.py in request()\r\n    202         request_headers = headers.copy() if headers is not None else {}\r\n    203 \r\n--> 204         self.credentials.before_request(\r\n    205             self._auth_request, method, url, request_headers)\r\n    206 \r\n\r\nAttributeError: 'AuthorizedSession' object has no attribute 'credentials'````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/176", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/176/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/176/events", "html_url": "https://github.com/dask/gcsfs/issues/176", "id": 493225223, "node_id": "MDU6SXNzdWU0OTMyMjUyMjM=", "number": 176, "title": "Google cloud storage csv file write with pandas empty lines", "user": {"login": "P00L", "id": 12399983, "node_id": "MDQ6VXNlcjEyMzk5OTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/12399983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P00L", "html_url": "https://github.com/P00L", "followers_url": "https://api.github.com/users/P00L/followers", "following_url": "https://api.github.com/users/P00L/following{/other_user}", "gists_url": "https://api.github.com/users/P00L/gists{/gist_id}", "starred_url": "https://api.github.com/users/P00L/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P00L/subscriptions", "organizations_url": "https://api.github.com/users/P00L/orgs", "repos_url": "https://api.github.com/users/P00L/repos", "events_url": "https://api.github.com/users/P00L/events{/privacy}", "received_events_url": "https://api.github.com/users/P00L/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-09-13T09:28:00Z", "updated_at": "2019-10-03T15:30:14Z", "closed_at": "2019-10-02T16:11:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nSeems to be a difference in creating file local with respect to google cloud storage\r\n```\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame({'a': [1, 2], 'b': [1, 2]})\r\ndf.to_csv('filename.csv')\r\ndf.to_csv('gs://BUCKET_NAME/filename.csv')\r\n```\r\nfilename.csv\r\n```\r\n,a,b\r\n0,1,1\r\n1,2,2\r\n\r\n```\r\ngs://BUCKET_NAME/filename.csv\r\n```\r\n,a,b\r\n\r\n0,1,1\r\n\r\n1,2,2\r\n\r\n```\r\ngs://BUCKET_NAME/filename.csv file seems to add a new line for each inserted line.\r\n\r\npython version 3.6.4\r\ngcsfs version 0.3.0\r\npandas version 0.25.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/174", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/174/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/174/events", "html_url": "https://github.com/dask/gcsfs/issues/174", "id": 492796096, "node_id": "MDU6SXNzdWU0OTI3OTYwOTY=", "number": 174, "title": "Error when fetching", "user": {"login": "JohnEmhoff", "id": 1692535, "node_id": "MDQ6VXNlcjE2OTI1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1692535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnEmhoff", "html_url": "https://github.com/JohnEmhoff", "followers_url": "https://api.github.com/users/JohnEmhoff/followers", "following_url": "https://api.github.com/users/JohnEmhoff/following{/other_user}", "gists_url": "https://api.github.com/users/JohnEmhoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnEmhoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnEmhoff/subscriptions", "organizations_url": "https://api.github.com/users/JohnEmhoff/orgs", "repos_url": "https://api.github.com/users/JohnEmhoff/repos", "events_url": "https://api.github.com/users/JohnEmhoff/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnEmhoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-09-12T13:10:04Z", "updated_at": "2019-09-12T19:20:05Z", "closed_at": "2019-09-12T16:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I've got a hard to reproduce problem that comes up maybe one fetch in fifty. These are relatively large files, in the dozens of gigabytes, if that's relevant.\r\n\r\nBelow is the relevant portion of the stack trace: it looks like `._fetch_range()` in GCSFS (version 0.3.0) is returning None sometimes, which is causing an error in `BytesCache` in dask (it's `new` that is None, not `self.cache`, because the error would be diffrerent). An obvious \"fix\" might be to just change it to `(new or b'')` but I don't understand enough of the system to know what other ramifications that might have.\r\n\r\n```\r\nFile \"/deploy/env/lib/python3.6/site-packages/fsspec/spec.py\", line 1060, in read\r\n    out = self.cache._fetch(self.loc, self.loc + length)\r\nFile \"/deploy/env/lib/python3.6/site-packages/fsspec/core.py\", line 499, in _fetch\r\n    self.cache = self.cache + new\r\n```\r\n\r\nI'm going to try to get a reproducible error, but I'm not terribly confident because it doesn't reproduce fetching the exact same file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/171", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/171/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/171/events", "html_url": "https://github.com/dask/gcsfs/issues/171", "id": 487432490, "node_id": "MDU6SXNzdWU0ODc0MzI0OTA=", "number": 171, "title": "browser authorization url shows \"401 Error: deleted_client\"", "user": {"login": "yokomotod", "id": 825732, "node_id": "MDQ6VXNlcjgyNTczMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/825732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yokomotod", "html_url": "https://github.com/yokomotod", "followers_url": "https://api.github.com/users/yokomotod/followers", "following_url": "https://api.github.com/users/yokomotod/following{/other_user}", "gists_url": "https://api.github.com/users/yokomotod/gists{/gist_id}", "starred_url": "https://api.github.com/users/yokomotod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yokomotod/subscriptions", "organizations_url": "https://api.github.com/users/yokomotod/orgs", "repos_url": "https://api.github.com/users/yokomotod/repos", "events_url": "https://api.github.com/users/yokomotod/events{/privacy}", "received_events_url": "https://api.github.com/users/yokomotod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-08-30T11:24:03Z", "updated_at": "2019-10-06T16:27:24Z", "closed_at": "2019-09-12T14:32:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I faced issue that browser authorization url shows :\r\n\r\n> 401. That\u2019s an error.\r\n> Error: deleted_client\r\n> The OAuth client was deleted.\r\n\r\n[screenshot]\r\n![image](https://user-images.githubusercontent.com/825732/64016017-d73e6400-cb60-11e9-96c1-f35f84223aa5.png)\r\n\r\n[reproduce]\r\n\r\n```\r\npipenv --python 3.7.4\r\npipenv install gcsfs\r\n```\r\n\r\n```\r\nimport gcsfs\r\n\r\nfs = gcsfs.GCSFileSystem(token=\"browser\")\r\n```\r\n\r\n```\r\nPlease visit this URL to authorize this application: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=586241054156-8986sjc0h0683jmpb150i0m8cucrttds.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdevstorage.full_control&state=TIrQYtqv2eKxHpW8CL0xKgm3JDl626&prompt=consent&access_type=offline&code_challenge=eo357tajzJNw6Nev0YwigXfZU-_32IqJyQ9nNCWcyfM&code_challenge_method=S256\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/170", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/170/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/170/events", "html_url": "https://github.com/dask/gcsfs/issues/170", "id": 487339785, "node_id": "MDU6SXNzdWU0ODczMzk3ODU=", "number": 170, "title": "gcsfs returns wrong number of rows", "user": {"login": "Kornel", "id": 628457, "node_id": "MDQ6VXNlcjYyODQ1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/628457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kornel", "html_url": "https://github.com/Kornel", "followers_url": "https://api.github.com/users/Kornel/followers", "following_url": "https://api.github.com/users/Kornel/following{/other_user}", "gists_url": "https://api.github.com/users/Kornel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kornel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kornel/subscriptions", "organizations_url": "https://api.github.com/users/Kornel/orgs", "repos_url": "https://api.github.com/users/Kornel/repos", "events_url": "https://api.github.com/users/Kornel/events{/privacy}", "received_events_url": "https://api.github.com/users/Kornel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-30T07:47:32Z", "updated_at": "2019-09-03T18:29:13Z", "closed_at": "2019-09-03T18:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When reading a file with gcsfs (through pandas but that's not a factor here) I get a wrong number of rows.\r\n\r\nTo reproduce:\r\n1. Download https://drive.google.com/file/d/1X306FSCUE5dQyC9sOihc0P-yrelEMEtH/view?usp=sharing\r\n1. Put on a GCS filesystem\r\n1. Open the file:\r\n\r\n```\r\nimport gcsfs\r\nimport pandas as pd\r\nfs = gcsfs.GCSFileSystem()\r\nfilepath_or_buffer = fs.open(\"gs://your/bucket/weird.tsv\", \"r\")\r\ngcsfs_ = pd.read_csv(filepath_or_buffer, sep=\"\\t\", header=None)\r\ngcsfs_.shape\r\n```\r\n\r\nReturns\r\n\r\n```\r\n(3408, 32)\r\n```\r\n\r\nNow, if you read with the tensorflow api:\r\n\r\n```\r\nfrom tensorflow.python.lib.io import file_io\r\nwith file_io.FileIO(\"gs://your/bucket/weird.tsv\", \"r\") as f:\r\n    df = pd.read_csv(f, sep=\"\\t\", header=None)\r\n    df.shape\r\n```\r\n\r\nThe shape is correct:\r\n\r\n```\r\n(2869, 32)\r\n```\r\n\r\nIt's also correct if you open the file from your local filesystem. I even did a character count, and the file read through gcsfs returns a wrong number of `\\n` characters. \r\n\r\nI can post more details here, if needed.\r\n\r\nVersions:\r\n```\r\nIn [2]: import sys\r\n\r\nIn [3]: sys.version\r\nOut[3]: '3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31) \\n[GCC 7.3.0]'\r\n\r\nIn [4]: import gcsfs\r\n\r\nIn [5]: gcsfs.__version__\r\nOut[5]: '0.3.0'\r\n\r\nIn [6]: import pandas as pd\r\np\r\nIn [7]: pd.__version__\r\nOut[7]: '0.25.0'\r\n\r\nIn [8]: import tensorflow as tf\r\ntf._\r\nIn [9]: tf.__version__\r\nOut[9]: '1.12.0'\r\n\r\nIn [10]: sys.platform\r\nOut[10]: 'linux'\r\n\r\nIn [11]: import platform\r\n\r\nIn [12]: platform.platform()\r\nOut[12]: 'Linux-4.9.0-8-amd64-x86_64-with-debian-9.9'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/169", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/169/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/169/events", "html_url": "https://github.com/dask/gcsfs/issues/169", "id": 487186109, "node_id": "MDU6SXNzdWU0ODcxODYxMDk=", "number": 169, "title": "fsspec new version returns more rows from GCS than are really there with pd.read_csv", "user": {"login": "bmritz", "id": 7775515, "node_id": "MDQ6VXNlcjc3NzU1MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7775515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmritz", "html_url": "https://github.com/bmritz", "followers_url": "https://api.github.com/users/bmritz/followers", "following_url": "https://api.github.com/users/bmritz/following{/other_user}", "gists_url": "https://api.github.com/users/bmritz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmritz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmritz/subscriptions", "organizations_url": "https://api.github.com/users/bmritz/orgs", "repos_url": "https://api.github.com/users/bmritz/repos", "events_url": "https://api.github.com/users/bmritz/events{/privacy}", "received_events_url": "https://api.github.com/users/bmritz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-29T21:32:45Z", "updated_at": "2019-09-05T13:33:16Z", "closed_at": "2019-09-05T13:14:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure how to exactly write a reproducible example, but my team ran into an issue today through gcsfs: \r\n\r\n```\r\nimport gcsfs\r\nimport pandas as pd\r\nimport fsspec\r\nprint(pd.__version__)\r\nprint(gcsfs.__version__)\r\nprint(fsspec.__version__)\r\nfs = gcsfs.GCSFileSystem(project=None)\r\nlong_proprietary_csv_with_4m_rows_gcs_uri = ...\r\nwith fs.open(long_proprietary_csv_with_4m_rows_gcs_uri) as fil: \r\n    print(pd.read_csv(fil).shape)\r\nwith fs.open(long_proprietary_csv_with_4m_rows_gcs_uri) as fil:\r\n    print(sum(1 for line in fil.readlines())) \r\n```\r\n\r\nThe output from that returned: \r\n```\r\n0.25.1\r\n0.3.0\r\n0.4.3\r\n/env/lib/python3.7/site-packages/gcsfs/core.py:282: UserWarning: GCS project not set - cannot list or create buckets\r\n  warnings.warn('GCS project not set - cannot list or create buckets')\r\n/env/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3058: DtypeWarning: Columns (3,4,5,6,7,8,9) have mixed types. Specify dtype option on import or set low_memory=False.\r\n  interactivity=interactivity, compiler=compiler, result=result)\r\n(174853, 11)\r\n173091\r\n```\r\n\r\nWhen I pip installed an older version of fsspec, it worked as expected:\r\n(ipython shell)\r\n```\r\n!pip install fsspec==0.4.1      \r\nimport gcsfs\r\nimport pandas as pd\r\nimport fsspec\r\nprint(pd.__version__)\r\nprint(gcsfs.__version__)\r\nprint(fsspec.__version__)\r\nfs = gcsfs.GCSFileSystem(project=None)\r\nlong_proprietary_csv_with_4m_rows_gcs_uri = ...\r\nwith fs.open(long_proprietary_csv_with_4m_rows_gcs_uri) as fil: \r\n    print(pd.read_csv(fil).shape)\r\nwith fs.open(long_proprietary_csv_with_4m_rows_gcs_uri) as fil:\r\n    print(sum(1 for line in fil.readlines())) \r\n```\r\n```\r\nCollecting fsspec==0.4.1\r\n  Downloading https://files.pythonhosted.org/packages/77/fd/148f48d4628805ffdfd9cbddf0d6a0be8762b1c9caf8955597bf0c0b524b/fsspec-0.4.1.tar.gz (57kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 1.8MB/s \r\nInstalling collected packages: fsspec\r\n  Found existing installation: fsspec 0.4.3\r\n    Uninstalling fsspec-0.4.3:\r\n      Successfully uninstalled fsspec-0.4.3\r\n  Running setup.py install for fsspec ... done\r\nSuccessfully installed fsspec-0.4.1\r\n\r\n0.25.1\r\n0.3.0\r\n0.4.1\r\n/env/lib/python3.7/site-packages/gcsfs/core.py:282: UserWarning: GCS project not set - cannot list or create buckets\r\n  warnings.warn('GCS project not set - cannot list or create buckets')\r\n(173090, 11)\r\n173091\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/168", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/168/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/168/events", "html_url": "https://github.com/dask/gcsfs/issues/168", "id": 486019972, "node_id": "MDU6SXNzdWU0ODYwMTk5NzI=", "number": 168, "title": "GCSFileSystem.walk broken with kwarg `detail=true`", "user": {"login": "ahmedx2", "id": 13388263, "node_id": "MDQ6VXNlcjEzMzg4MjYz", "avatar_url": "https://avatars0.githubusercontent.com/u/13388263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedx2", "html_url": "https://github.com/ahmedx2", "followers_url": "https://api.github.com/users/ahmedx2/followers", "following_url": "https://api.github.com/users/ahmedx2/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedx2/subscriptions", "organizations_url": "https://api.github.com/users/ahmedx2/orgs", "repos_url": "https://api.github.com/users/ahmedx2/repos", "events_url": "https://api.github.com/users/ahmedx2/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-27T20:33:18Z", "updated_at": "2019-09-05T13:16:16Z", "closed_at": "2019-09-05T13:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "A project I recently joined recently upgraded from v0.2.3 to v0.3.0. I've been hunting a bug related to a change in the behavior of `GCSFileSystem.walk` described in some detail below. Before that, I'll say up front that my ultimate question is:\r\n\r\n**What is the best way in v0.3.0 to get the same `\"path\"` and `\"md5Hash\"` information given by walk(path,detail=True) in v0.2.3?**\r\n\r\n## Before: v0.2.3\r\n\r\nBefore upgrading, my the project code called `walk(path,detail=True)`. For reference, see what this returns when called on one of the public GCP datasets:\r\n\r\n```python\r\n>>> fs = gcsfs.GCSFileSystem()\r\n>>> w = fs.walk('gs://gcp-public-data-landsat/index.csv.gz', detail=True)\r\n>>> pprint.pprint(w)\r\n[{'bucket': 'gcp-public-data-landsat',\r\n  'contentType': 'application/octet-stream',\r\n  'crc32c': '6p/Z1w==',\r\n  'etag': 'CNT6gcy4ouQCEAE=',\r\n  'generation': '1566887980858708',\r\n  'id': 'gcp-public-data-landsat/index.csv.gz/1566887980858708',\r\n  'kind': 'storage#object',\r\n  'md5Hash': 'wvqmRKytddbPHfXC/ygYhg==',\r\n  'mediaLink': 'https://www.googleapis.com/download/storage/v1/b/gcp-public-data-landsat/o/index.csv.gz?generation=1566887980858708&alt=media',\r\n  'metageneration': '1',\r\n  'name': 'index.csv.gz',\r\n  'path': 'gcp-public-data-landsat/index.csv.gz',\r\n  'selfLink': 'https://www.googleapis.com/storage/v1/b/gcp-public-data-landsat/o/index.csv.gz',\r\n  'size': 601644439,\r\n  'storageClass': 'STANDARD',\r\n  'timeCreated': '2019-08-27T06:39:40.858Z',\r\n  'timeStorageClassUpdated': '2019-08-27T06:39:40.858Z',\r\n  'updated': '2019-08-27T06:39:40.858Z'}]\r\n```\r\n\r\nThe project only uses the information keyed by `'path'` and `'md5Hash'`.\r\n\r\n## After: v0.3.0\r\n\r\nHowever, in version 0.3.0 the same method call returns a generator instead of a list:\r\n\r\n```python\r\n>>> fs = gcsfs.GCSFileSystem()\r\n>>> w = fs.walk('gs://gcp-public-data-landsat/index.csv.gz', detail=True)\r\n>>> pprint.pprint(w)\r\n<generator object AbstractFileSystem.walk at 0x7f0e9e005938>\r\n```\r\n\r\nIf you try to convert it to a list, an exception is raised:\r\n\r\n```python\r\n>>> list(w)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ahmed/COLGATE/env/lib/python3.6/site-packages/fsspec/spec.py\", line 338, in walk\r\n    listing = self.ls(path, True, **kwargs)\r\nTypeError: ls() got multiple values for argument 'detail'\r\n```\r\n\r\nWeirdly enough, in contrast, conversion to a list via list comprehension gives an empty sequence:\r\n\r\n```python\r\n>>> [x for x in w]\r\n[]\r\n```\r\n\r\nAs does converting to a tuple:\r\n\r\n```python\r\n>>> tuple(w)\r\n()\r\n```\r\n\r\nThe documentation for v0.3.0 *is* updated to no longer list an optional `detail` argument for `walk`. Still, I need functionality equivalent to the v0.2.3 version of `walk(path, detail=True)` i.e. I need the `\"path\"` and `\"md5Hash\"` information for each file below `path`.\r\n\r\nI'm not sure if the new `ls` is functionality equivalent to the old `walk`, but I've tried instead using `ls(path,detail=True)`: \r\n\r\n```python\r\n>>> l = fs.ls('gs://gcp-public-data-landsat/index.csv.gz', detail=True)\r\n>>> pprint.pprint(l)\r\n[{'bucket': 'gcp-public-data-landsat',\r\n  'contentType': 'application/octet-stream',\r\n  'crc32c': '6p/Z1w==',\r\n  'etag': 'CNT6gcy4ouQCEAE=',\r\n  'generation': '1566887980858708',\r\n  'id': 'gcp-public-data-landsat/index.csv.gz/1566887980858708',\r\n  'kind': 'storage#object',\r\n  'md5Hash': 'wvqmRKytddbPHfXC/ygYhg==',\r\n  'mediaLink': 'https://www.googleapis.com/download/storage/v1/b/gcp-public-data-landsat/o/index.csv.gz?generation=1566887980858708&alt=media',\r\n  'metageneration': '1',\r\n  'name': 'gcp-public-data-landsat/index.csv.gz',\r\n  'selfLink': 'https://www.googleapis.com/storage/v1/b/gcp-public-data-landsat/o/index.csv.gz',\r\n  'size': 601644439,\r\n  'storageClass': 'STANDARD',\r\n  'timeCreated': '2019-08-27T06:39:40.858Z',\r\n  'timeStorageClassUpdated': '2019-08-27T06:39:40.858Z',\r\n  'type': 'file',\r\n  'updated': '2019-08-27T06:39:40.858Z'}]\r\n````\r\n\r\nIt looks like this is returning the desired info, where the `\"md5Hash\"` key is the same and there is a `\"name\"` key instead of `\"path\"`. Is this correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/167", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/167/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/167/events", "html_url": "https://github.com/dask/gcsfs/issues/167", "id": 483008431, "node_id": "MDU6SXNzdWU0ODMwMDg0MzE=", "number": 167, "title": "Using gcsfs with a thread pool", "user": {"login": "JohnEmhoff", "id": 1692535, "node_id": "MDQ6VXNlcjE2OTI1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1692535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnEmhoff", "html_url": "https://github.com/JohnEmhoff", "followers_url": "https://api.github.com/users/JohnEmhoff/followers", "following_url": "https://api.github.com/users/JohnEmhoff/following{/other_user}", "gists_url": "https://api.github.com/users/JohnEmhoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnEmhoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnEmhoff/subscriptions", "organizations_url": "https://api.github.com/users/JohnEmhoff/orgs", "repos_url": "https://api.github.com/users/JohnEmhoff/repos", "events_url": "https://api.github.com/users/JohnEmhoff/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnEmhoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-20T18:15:30Z", "updated_at": "2019-11-06T22:21:21Z", "closed_at": "2019-11-06T22:21:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I'm getting an odd error intermittently from gcsfs that goes away when I do everything from one thread. Normally, I have a worker pool of threads that each has its own `GCSFileSystem()` object:\r\n\r\n```\r\nFile \"/env/lib/python3.7/site-packages/gcsfs/core.py\", line 567, in _do_list_objects\r\n      delimiter=\"/\", prefix=prefix, maxResults=max_results\r\nFile \"</env/lib/python3.7/site-packages/decorator.py:decorator-gen-2>\", line 2, in _call\r\nFile \"/env/lib/python3.7/site-packages/gcsfs/core.py\", line 54, in _tracemethod\r\n      return f(self, *args, **kwargs)\r\nFile \"/env/lib/python3.7/site-packages/gcsfs/core.py\", line 460, in _call\r\n      r = self.session.request(method, path,\r\nAttributeError: 'NoneType' object has no attribute 'request'\r\n```\r\nIs there guidance on using gcsfs in a multithreaded environment?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/166", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/166/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/166/events", "html_url": "https://github.com/dask/gcsfs/issues/166", "id": 481710572, "node_id": "MDU6SXNzdWU0ODE3MTA1NzI=", "number": 166, "title": "GCSMap missing in version 0.3.0", "user": {"login": "cspencerjones", "id": 41342785, "node_id": "MDQ6VXNlcjQxMzQyNzg1", "avatar_url": "https://avatars2.githubusercontent.com/u/41342785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cspencerjones", "html_url": "https://github.com/cspencerjones", "followers_url": "https://api.github.com/users/cspencerjones/followers", "following_url": "https://api.github.com/users/cspencerjones/following{/other_user}", "gists_url": "https://api.github.com/users/cspencerjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/cspencerjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cspencerjones/subscriptions", "organizations_url": "https://api.github.com/users/cspencerjones/orgs", "repos_url": "https://api.github.com/users/cspencerjones/repos", "events_url": "https://api.github.com/users/cspencerjones/events{/privacy}", "received_events_url": "https://api.github.com/users/cspencerjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-16T17:31:12Z", "updated_at": "2019-09-05T13:17:40Z", "closed_at": "2019-09-05T13:17:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run \r\n`import gcsfs`\r\n`gcsfs.GCSMap`\r\nI get the error message:\r\n`module 'gcsfs' has no attribute 'GCSMap'`\r\n\r\nI am able to run other gcsfs commands but GCSMap seems to be missing. I think this was not the case in version 0.2.1 but I have not been able to create an environment that's compatible with 0.2.1 in order to check this. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/164", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/164/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/164/events", "html_url": "https://github.com/dask/gcsfs/issues/164", "id": 480243942, "node_id": "MDU6SXNzdWU0ODAyNDM5NDI=", "number": 164, "title": "Credentials check fails when using VPC Service Controls", "user": {"login": "leg100", "id": 75728, "node_id": "MDQ6VXNlcjc1NzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/75728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leg100", "html_url": "https://github.com/leg100", "followers_url": "https://api.github.com/users/leg100/followers", "following_url": "https://api.github.com/users/leg100/following{/other_user}", "gists_url": "https://api.github.com/users/leg100/gists{/gist_id}", "starred_url": "https://api.github.com/users/leg100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leg100/subscriptions", "organizations_url": "https://api.github.com/users/leg100/orgs", "repos_url": "https://api.github.com/users/leg100/repos", "events_url": "https://api.github.com/users/leg100/events{/privacy}", "received_events_url": "https://api.github.com/users/leg100/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-13T16:11:40Z", "updated_at": "2019-08-16T16:10:37Z", "closed_at": "2019-08-16T16:10:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried using gcsfs on a VM, using its metadata credentials, in a project contained within a [VPC service perimeter](https://cloud.google.com/vpc-service-controls/docs/overview). gcsfs successfully fetches the credentials, but when it then goes onto [check the credentials by accessing a public GCS bucket](https://github.com/dask/gcsfs/blob/0.3.0/gcsfs/core.py#L412), it fails because the perimeter blocks access to Google APIs for other projects.\r\n\r\nI'm aware you can disable the check, but this isn't straightforward in my case, because I'm using [pandas](https://github.com/pandas-dev/pandas/pull/20729) and it doesn't expose the relevant parameter that disables the check.\r\n\r\nThis may well trip other users using VPC service controls.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/163", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/163/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/163/events", "html_url": "https://github.com/dask/gcsfs/issues/163", "id": 471768215, "node_id": "MDU6SXNzdWU0NzE3NjgyMTU=", "number": 163, "title": "\"ls\" behavior change between 0.2.1 and 0.3.0?", "user": {"login": "JohnEmhoff", "id": 1692535, "node_id": "MDQ6VXNlcjE2OTI1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1692535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnEmhoff", "html_url": "https://github.com/JohnEmhoff", "followers_url": "https://api.github.com/users/JohnEmhoff/followers", "following_url": "https://api.github.com/users/JohnEmhoff/following{/other_user}", "gists_url": "https://api.github.com/users/JohnEmhoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnEmhoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnEmhoff/subscriptions", "organizations_url": "https://api.github.com/users/JohnEmhoff/orgs", "repos_url": "https://api.github.com/users/JohnEmhoff/repos", "events_url": "https://api.github.com/users/JohnEmhoff/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnEmhoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-07-23T15:32:39Z", "updated_at": "2019-10-02T15:29:10Z", "closed_at": "2019-10-02T15:29:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that in 0.2.1 the `ls` method will retrieve all items with a given prefix, while in 0.3.0 `ls` will only return directory-like entries. Is this an intended behavior change? It's obviously a breaking change, but either way I can't seem to find a workaround.\r\n\r\n\r\nHere's 0.2.1 listing some files from one of the public GCP datasets:\r\n```\r\n$ pip freeze | grep gcsfs\r\ngcsfs==0.2.1\r\n$ python -q\r\n>>> import gcsfs\r\n>>> c = gcsfs.GCSFileSystem()\r\n>>> c.ls('gs://gcp-public-data-landsat/index.csv')\r\n['gcp-public-data-landsat/index.csv.gz-Z2HDRBNIWV', 'gcp-public-data-landsat/index.csv.gz-62ZC8HYJDE', 'gcp-public-data-landsat/index.csv.gz-BVVBYIFND0', ....]\r\n```\r\n\r\nAnd here's 0.3.0 doing the same listing and getting zero results:\r\n```\r\n$ pip freeze | grep gcsfs\r\ngcsfs==0.3.0\r\n$ python -q\r\n>>> import gcsfs\r\n>>> c = gcsfs.GCSFileSystem()\r\n>>> c.ls('gs://gcp-public-data-landsat/index.csv')\r\n[]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/160", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/160/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/160/events", "html_url": "https://github.com/dask/gcsfs/issues/160", "id": 467222910, "node_id": "MDU6SXNzdWU0NjcyMjI5MTA=", "number": 160, "title": "read_block stability issue", "user": {"login": "philip-zelichenko", "id": 16638019, "node_id": "MDQ6VXNlcjE2NjM4MDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/16638019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philip-zelichenko", "html_url": "https://github.com/philip-zelichenko", "followers_url": "https://api.github.com/users/philip-zelichenko/followers", "following_url": "https://api.github.com/users/philip-zelichenko/following{/other_user}", "gists_url": "https://api.github.com/users/philip-zelichenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/philip-zelichenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philip-zelichenko/subscriptions", "organizations_url": "https://api.github.com/users/philip-zelichenko/orgs", "repos_url": "https://api.github.com/users/philip-zelichenko/repos", "events_url": "https://api.github.com/users/philip-zelichenko/events{/privacy}", "received_events_url": "https://api.github.com/users/philip-zelichenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-07-12T05:05:44Z", "updated_at": "2019-09-05T13:19:37Z", "closed_at": "2019-09-05T13:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "[gcsfs version 0.2.1]\r\nI'm reading a file located on google cloud storage in chunks (using read_block method). There is a stability issue that occurs while reading the file (I get the following error in ~10% of cases).\r\n\r\n```\r\n  File \"</home/prd/workspace/microservices/airflow/venv/lib/python3.6/site-packages/decorator.py:decorator-gen-30>\", line 2, in read_block\r\n  File \"/home/prd/workspace/microservices/airflow/venv/lib/python3.6/site-packages/gcsfs/core.py\", line 52, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/home/prd/workspace/microservices/airflow/venv/lib/python3.6/site-packages/gcsfs/core.py\", line 1168, in read_block\r\n    bytes = read_block(f, offset, length, delimiter)\r\n  File \"/home/prd/workspace/microservices/airflow/venv/lib/python3.6/site-packages/gcsfs/utils.py\", line 74, in read_block\r\n    seek_delimiter(f, delimiter, 2**16)\r\n  File \"/home/prd/workspace/microservices/airflow/venv/lib/python3.6/site-packages/gcsfs/utils.py\", line 25, in seek_delimiter\r\n    current = file.read(blocksize)\r\n  File \"/home/prd/workspace/microservices/airflow/venv/lib/python3.6/site-packages/gcsfs/core.py\", line 1529, in read\r\n    self.loc - self.start + length]\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\n\r\nDid anyone encounter this type of issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/159", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/159/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/159/events", "html_url": "https://github.com/dask/gcsfs/issues/159", "id": 463646605, "node_id": "MDU6SXNzdWU0NjM2NDY2MDU=", "number": 159, "title": "Bug: `glob` mishandles paths with only \"?\"", "user": {"login": "kalugny", "id": 3481085, "node_id": "MDQ6VXNlcjM0ODEwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3481085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalugny", "html_url": "https://github.com/kalugny", "followers_url": "https://api.github.com/users/kalugny/followers", "following_url": "https://api.github.com/users/kalugny/following{/other_user}", "gists_url": "https://api.github.com/users/kalugny/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalugny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalugny/subscriptions", "organizations_url": "https://api.github.com/users/kalugny/orgs", "repos_url": "https://api.github.com/users/kalugny/repos", "events_url": "https://api.github.com/users/kalugny/events{/privacy}", "received_events_url": "https://api.github.com/users/kalugny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-03T09:32:32Z", "updated_at": "2019-07-15T11:32:46Z", "closed_at": "2019-07-15T11:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi and thanks for a great package.\r\n\r\nThere's a bug in `GCSFileSystem.glob` because of the line:\r\n```python\r\nif '*' not in path:\r\n    path = path.rstrip('/') + '/*'\r\n```\r\nin which if you don't have `*` in your pattern, the behavior is incorrect.\r\n\r\nE.g.:\r\nFor a directory with files `text1.txt`, `text2.txt`, `text3.txt`, \r\n```python\r\nfs = gcsfs.GCSFileSystem()\r\nfs.glob('my-bucket/text?.txt')\r\n```\r\nreturns `[]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/157", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/157/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/157/events", "html_url": "https://github.com/dask/gcsfs/issues/157", "id": 457622392, "node_id": "MDU6SXNzdWU0NTc2MjIzOTI=", "number": 157, "title": "GCSFile does not inherit from IOBase", "user": {"login": "ElliotSilver", "id": 10578341, "node_id": "MDQ6VXNlcjEwNTc4MzQx", "avatar_url": "https://avatars0.githubusercontent.com/u/10578341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ElliotSilver", "html_url": "https://github.com/ElliotSilver", "followers_url": "https://api.github.com/users/ElliotSilver/followers", "following_url": "https://api.github.com/users/ElliotSilver/following{/other_user}", "gists_url": "https://api.github.com/users/ElliotSilver/gists{/gist_id}", "starred_url": "https://api.github.com/users/ElliotSilver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ElliotSilver/subscriptions", "organizations_url": "https://api.github.com/users/ElliotSilver/orgs", "repos_url": "https://api.github.com/users/ElliotSilver/repos", "events_url": "https://api.github.com/users/ElliotSilver/events{/privacy}", "received_events_url": "https://api.github.com/users/ElliotSilver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-18T18:07:48Z", "updated_at": "2019-07-15T11:32:46Z", "closed_at": "2019-07-15T11:32:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working with a module that makes a test to see if an argument passed to a function is the name of a file, or a file-like object. The test is done by checking if the argument is an instance of IOBase. Since GCSFile is not inherited from IOBase, the test fails. It should be possible to structure GCSFile as a subclass of IOBase.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/155", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/155/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/155/events", "html_url": "https://github.com/dask/gcsfs/issues/155", "id": 455806249, "node_id": "MDU6SXNzdWU0NTU4MDYyNDk=", "number": 155, "title": "DaskGCSFileSystem Credential de/serialization", "user": {"login": "jiajie-chen", "id": 2905873, "node_id": "MDQ6VXNlcjI5MDU4NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2905873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiajie-chen", "html_url": "https://github.com/jiajie-chen", "followers_url": "https://api.github.com/users/jiajie-chen/followers", "following_url": "https://api.github.com/users/jiajie-chen/following{/other_user}", "gists_url": "https://api.github.com/users/jiajie-chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiajie-chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiajie-chen/subscriptions", "organizations_url": "https://api.github.com/users/jiajie-chen/orgs", "repos_url": "https://api.github.com/users/jiajie-chen/repos", "events_url": "https://api.github.com/users/jiajie-chen/events{/privacy}", "received_events_url": "https://api.github.com/users/jiajie-chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-13T15:24:26Z", "updated_at": "2019-06-13T16:03:20Z", "closed_at": "2019-06-13T16:03:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attempting use gcsfs with Dask's distributed local cluster, authenticating with service account credentials, Dask throws the error: \r\n```\r\ndistributed.protocol.core - CRITICAL - Failed to Serialize\r\n<... long traceback ...>\r\nTypeError: ('Could not serialize object of type tuple.', \"(<function read_json_file at 0x7f7060318840>, <dask.bytes.core.OpenFile object at 0x7f705c60e668>, 'records', True, (<class 'dict'>, [['dtype', False]]))\")\r\n```\r\n\r\nI've traced this issue back to how Google's `google.oauth2.service_account.Credentials` uses `cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey` internally to sign tokens.\r\nBecause `RSAPrivateKey` is a `CompiledFFI` object, it needs special logic to de/serialize.\r\nDask's distributed protocol serializes gcsfs instances to pass to workers, so being able to serialize Credentials is needed for gcsfs to work with Dask.\r\n\r\n**System Details:**\r\nPython 3.6.8, running on Docker image `python:3.6`\r\n`dask[complete]==1.2.0`\r\n`distributed==1.28.1`\r\n`gcsfs` from dask/gcsfs:master, commit `6852931`\r\n`google-auth==1.6.3`\r\n`cryptography==2.7`\r\n\r\n**Steps to Recreate:**\r\nTest the following code snippet:\r\n\r\n```python\r\nimport dask\r\nfrom dask import dataframe\r\nfrom dask import distributed\r\nimport google.oauth2.service_account\r\nimport gcsfs\r\n\r\ndef run_copy_test(gcs_project, cred_key_path, gcs_src_json_uri, gcs_dst_json_uri):\r\n    cluster = distributed.LocalCluster(dashboard_address=None)\r\n    client = distributed.Client(cluster)\r\n    with dask.config.set(scheduler=client):\r\n        # use service_account.Credentials\r\n        scopes = [\"https://www.googleapis.com/auth/devstorage.full_control\"]\r\n        credentials = (\r\n            google.oauth2.service_account.Credentials.from_service_account_file(\r\n                cred_key_path, scopes=scopes)\r\n        )\r\n        storage_options = {\r\n            \"project\": gcs_project,\r\n            \"token\": credentials\r\n        }\r\n        # test loading and rewriting json file on GCS\r\n        json_ddf = dataframe.read_json(\r\n            gcs_src_json_uri,\r\n            storage_options=storage_options\r\n        )\r\n        json_ddf.to_json(\r\n            gcs_dst_json_uri,\r\n            storage_options=storage_options\r\n        )\r\n    cluster.close()\r\n\r\nif __name__ == \"__main__\":\r\n    # This will throw errors\r\n    run_copy_test(\r\n        \"PROJECT-ID\",\r\n        \"/path/to/service_account/key.json\",\r\n        \"gcs://path/to/json/file.json\",\r\n        \"gcs://path/to/destination/folder\"\r\n    )\r\n```\r\n\r\nI've tested a fix on my fork [here](https://github.com/jiajie-chen/gcsfs/tree/fixes). It fixes the issues with Dask, by using a custom Pickler and Unpickler to handle serializing credentials.\r\nHowever, I'm handling this by converting `RSAPrivateKey`s to unencrypted PEM bytestrings, which is insecure. Ideally the pickling logic could encrypt serialized credentials using a symmetric key, which a user can pass into the `GCSFileSystem` constructor, defining an environment variable, or some other logic.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/151", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/151/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/151/events", "html_url": "https://github.com/dask/gcsfs/issues/151", "id": 454377641, "node_id": "MDU6SXNzdWU0NTQzNzc2NDE=", "number": 151, "title": "Can't create GCSFileSystem with instance of `google.oauth2.service_account.Credentials`", "user": {"login": "jiajie-chen", "id": 2905873, "node_id": "MDQ6VXNlcjI5MDU4NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2905873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiajie-chen", "html_url": "https://github.com/jiajie-chen", "followers_url": "https://api.github.com/users/jiajie-chen/followers", "following_url": "https://api.github.com/users/jiajie-chen/following{/other_user}", "gists_url": "https://api.github.com/users/jiajie-chen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiajie-chen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiajie-chen/subscriptions", "organizations_url": "https://api.github.com/users/jiajie-chen/orgs", "repos_url": "https://api.github.com/users/jiajie-chen/repos", "events_url": "https://api.github.com/users/jiajie-chen/events{/privacy}", "received_events_url": "https://api.github.com/users/jiajie-chen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-10T21:17:18Z", "updated_at": "2019-06-12T13:52:35Z", "closed_at": "2019-06-12T13:52:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to create an instance of `GCSFileSystem` by passing in a service account `Credentials` object, an error is thrown in the `_connect_token` method.\r\n\r\n**System Details:**\r\nPython version 3.6.7 64-bit, on Ubuntu 18.04.1 (WSL)\r\n`gcsfs==0.2.2`\r\n`google-auth==1.6.3`\r\n`google-auth-oauthlib==0.3.0`\r\n\r\n**Expected Behavior:**\r\nFor `GCSFileSystem` to successfully connect with provided the service account credentials.\r\n\r\n**Actual Behavior:**\r\n`ValueError: Token format no understood`\r\n\r\n**Steps to Recreate:**\r\nRun this code (fill in the relevant details):\r\n```\r\nimport google.oauth2.service_account\r\nimport gcsfs\r\n\r\n# Make google.oauth2.service_account.Credentials object\r\nkey_path = \"/path/to/key_file.json\"\r\nscopes = [\"https://www.googleapis.com/auth/devstorage.full_control\"]\r\ncredentials = (\r\n    google.oauth2.service_account.Credentials.from_service_account_file(\r\n        key_path, scopes=scopes)\r\n)\r\n# Try to make gcsfs (will raise \"ValueError: Token format no understood\")\r\nproject=\"PROJECT-NAME\"\r\ngcsfs.GCSFileSystem(project=project,token=credentials)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/149", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/149/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/149/events", "html_url": "https://github.com/dask/gcsfs/issues/149", "id": 452594729, "node_id": "MDU6SXNzdWU0NTI1OTQ3Mjk=", "number": 149, "title": "URI's protocol is not removed in GCSFileSystem.get", "user": {"login": "pakelley", "id": 7169800, "node_id": "MDQ6VXNlcjcxNjk4MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7169800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pakelley", "html_url": "https://github.com/pakelley", "followers_url": "https://api.github.com/users/pakelley/followers", "following_url": "https://api.github.com/users/pakelley/following{/other_user}", "gists_url": "https://api.github.com/users/pakelley/gists{/gist_id}", "starred_url": "https://api.github.com/users/pakelley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pakelley/subscriptions", "organizations_url": "https://api.github.com/users/pakelley/orgs", "repos_url": "https://api.github.com/users/pakelley/repos", "events_url": "https://api.github.com/users/pakelley/events{/privacy}", "received_events_url": "https://api.github.com/users/pakelley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-05T16:19:45Z", "updated_at": "2019-06-05T22:16:01Z", "closed_at": "2019-06-05T22:16:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've been using `GCSFileSystem.get` with `recursive=True`, and ran into some unexpected (to me) behavior: the first few characters of the local file names were missing. It looks like this happens when a `gs://` protocol is in the path.\r\n\r\nAfter some digging, I realized that the recursive `get` is using `GCSFileSystem.walk` to get the paths to copy (which returns canonicalized paths from `gcsfs.core.norm_path`), but then it uses the length of original remote path (including the `gs://` protocol) to piece together the output paths.\r\n\r\nMy question is: Is it required that there is no protocol in the path passed to `get`?\r\nIf not, I'm happy to open up a PR that simply uses `norm_path` in `get`. Wanted to make sure I'm not just using the library in an unexpected way first though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/148", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/148/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/148/events", "html_url": "https://github.com/dask/gcsfs/issues/148", "id": 444615827, "node_id": "MDU6SXNzdWU0NDQ2MTU4Mjc=", "number": 148, "title": "Plans for a new release?", "user": {"login": "pakelley", "id": 7169800, "node_id": "MDQ6VXNlcjcxNjk4MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7169800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pakelley", "html_url": "https://github.com/pakelley", "followers_url": "https://api.github.com/users/pakelley/followers", "following_url": "https://api.github.com/users/pakelley/following{/other_user}", "gists_url": "https://api.github.com/users/pakelley/gists{/gist_id}", "starred_url": "https://api.github.com/users/pakelley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pakelley/subscriptions", "organizations_url": "https://api.github.com/users/pakelley/orgs", "repos_url": "https://api.github.com/users/pakelley/repos", "events_url": "https://api.github.com/users/pakelley/events{/privacy}", "received_events_url": "https://api.github.com/users/pakelley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-15T19:52:30Z", "updated_at": "2019-05-16T13:22:44Z", "closed_at": "2019-05-16T13:22:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was hoping to use the recursive `get`/`put` functionality that was implemented since version 0.2.1, and I was curious if there are plans for a release any time soon.\r\n\r\nFunny(ish) story: I actually implemented this in hopes of being a `gcsfs` contributor then realized it was already in master, just not released! \ud83d\ude05 Not my brightest moment haha.\r\n\r\nThank you for all of the work on this useful library \ud83d\ude42 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/146", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/146/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/146/events", "html_url": "https://github.com/dask/gcsfs/issues/146", "id": 435642209, "node_id": "MDU6SXNzdWU0MzU2NDIyMDk=", "number": 146, "title": "Undefined name 'maxdepth' in dask_link.py", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-22T08:11:11Z", "updated_at": "2019-04-22T14:43:53Z", "closed_at": "2019-04-22T14:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "[flake8](http://flake8.pycqa.org) testing of https://github.com/dask/gcsfs on Python 3.7.1\r\n\r\n$ __flake8 . --count --select=E9,F63,F72,F82 --show-source --statistics__\r\n```\r\n./gcsfs/mapping.py:70:16: F821 undefined name 'result'\r\n        return result\r\n               ^\r\n./gcsfs/dask_link.py:115:28: F821 undefined name 'maxdepth'\r\n                        if maxdepth is None or maxdepth > 1:\r\n                           ^\r\n./gcsfs/dask_link.py:115:48: F821 undefined name 'maxdepth'\r\n                        if maxdepth is None or maxdepth > 1:\r\n                                               ^\r\n3     F821 undefined name 'maxdepth'\r\n3\r\n```\r\n__E901,E999,F821,F822,F823__ are the \"_showstopper_\" [flake8](http://flake8.pycqa.org) issues that can halt the runtime with a SyntaxError, NameError, etc. These 5 are different from most other flake8 issues which are merely \"style violations\" -- useful for readability but they do not effect runtime safety.\r\n* F821: undefined name `name`\r\n* F822: undefined name `name` in `__all__`\r\n* F823: local variable name referenced before assignment\r\n* E901: SyntaxError or IndentationError\r\n* E999: SyntaxError -- failed to compile a file into an Abstract Syntax Tree\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/143", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/143/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/143/events", "html_url": "https://github.com/dask/gcsfs/issues/143", "id": 430658115, "node_id": "MDU6SXNzdWU0MzA2NTgxMTU=", "number": 143, "title": "method=None inclusion of \"cloud\" duplicates google_default=google.auth.default but with bad timeouts", "user": {"login": "javabrett", "id": 1103477, "node_id": "MDQ6VXNlcjExMDM0Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1103477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javabrett", "html_url": "https://github.com/javabrett", "followers_url": "https://api.github.com/users/javabrett/followers", "following_url": "https://api.github.com/users/javabrett/following{/other_user}", "gists_url": "https://api.github.com/users/javabrett/gists{/gist_id}", "starred_url": "https://api.github.com/users/javabrett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javabrett/subscriptions", "organizations_url": "https://api.github.com/users/javabrett/orgs", "repos_url": "https://api.github.com/users/javabrett/repos", "events_url": "https://api.github.com/users/javabrett/events{/privacy}", "received_events_url": "https://api.github.com/users/javabrett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-08T21:04:48Z", "updated_at": "2019-04-09T20:26:07Z", "closed_at": "2019-04-09T20:26:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`gcsfs` has some local logic it applies when the caller does not specify the desired authentication method.  This logic is overlapped with precedence logic in `google.auth.default()` `Credentials` finder, but the latter seems to take more care to not test for `cloud` credentials (`compute_engine.Credentials()`) when not running in that environment.\r\n\r\nPerform the following tests when running in a non Google Cloud environment:\r\n\r\n```\r\nfrom gcsfs import GCSFileSystem\r\ngcs = GCSFileSystem(check_connection=False)\r\ngcs.ls('anaconda-public-data/nyc-taxi/csv/2015/')\r\n```\r\n\r\nThe result is a slow retry/timeout, finishing with an exception:\r\n\r\n```\r\n_call out of retries on exception: HTTPConnectionPool(host='metadata.google.internal', port=80): Max retries exceeded with url: /computeMetadata/v1/instance/service-accounts/default/?recursive=true (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fe238e555f8>: Failed to establish a new connection: [Errno -2] Name or service not known'))\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.7/site-packages/urllib3/connection.py\", line 159, in _new_conn\r\n    (self._dns_host, self.port), self.timeout, **extra_kw)\r\n  File \"/opt/conda/lib/python3.7/site-packages/urllib3/util/connection.py\", line 57, in create_connection\r\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n  File \"/opt/conda/lib/python3.7/socket.py\", line 748, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno -2] Name or service not known\r\n```\r\n\r\nIf you run instead:\r\n\r\n```\r\nfrom gcsfs import GCSFileSystem\r\ngcs = GCSFileSystem(token='anon', check_connection=False)\r\ngcs.ls('anaconda-public-data/nyc-taxi/csv/2015/')\r\n```\r\n\r\n... you get instant success when `anon` is specified.\r\n\r\nIf you run instead:\r\n\r\n```\r\nfrom gcsfs import GCSFileSystem\r\ngcs = GCSFileSystem(token='google_default', check_connection=False)\r\ngcs.ls('anaconda-public-data/nyc-taxi/csv/2015/')\r\n```\r\n\r\n... and `google_default` brings a near-instant exception - can't authenticate this way.\r\n\r\n`cache` fails equally quickly.\r\n\r\nThe sequence for the iterate/auto mode seems identical to what `google.auth.default()` does, except its `_get_gce_credentials` seems to be able to make an abort decision before the metadata registry is attempted to be connected at `metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/?recursive=true`, which will fail (slowly) in general environments.\r\n\r\nProposal is to remove the explicit `cloud` auth test from the loop, since the logic is already included in `google_default`, but more-safely.\r\n\r\n#99 and #100 are related.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/142", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/142/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/142/events", "html_url": "https://github.com/dask/gcsfs/issues/142", "id": 428869144, "node_id": "MDU6SXNzdWU0Mjg4NjkxNDQ=", "number": 142, "title": "gcsfs.open encoding capability", "user": {"login": "philip-zelichenko", "id": 16638019, "node_id": "MDQ6VXNlcjE2NjM4MDE5", "avatar_url": "https://avatars3.githubusercontent.com/u/16638019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philip-zelichenko", "html_url": "https://github.com/philip-zelichenko", "followers_url": "https://api.github.com/users/philip-zelichenko/followers", "following_url": "https://api.github.com/users/philip-zelichenko/following{/other_user}", "gists_url": "https://api.github.com/users/philip-zelichenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/philip-zelichenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philip-zelichenko/subscriptions", "organizations_url": "https://api.github.com/users/philip-zelichenko/orgs", "repos_url": "https://api.github.com/users/philip-zelichenko/repos", "events_url": "https://api.github.com/users/philip-zelichenko/events{/privacy}", "received_events_url": "https://api.github.com/users/philip-zelichenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-03T16:43:24Z", "updated_at": "2019-10-03T18:32:59Z", "closed_at": "2019-10-03T18:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find anything in the documentation, but if I understand correctly there isn't support to predefining a sepcific encoding, as possible through the native python libraries.\r\n![image](https://user-images.githubusercontent.com/16638019/55496895-eabac280-55f4-11e9-875d-b41249aa6afe.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/140", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/140/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/140/events", "html_url": "https://github.com/dask/gcsfs/issues/140", "id": 422305700, "node_id": "MDU6SXNzdWU0MjIzMDU3MDA=", "number": 140, "title": "first character is being stripped from sub-paths", "user": {"login": "rabernat", "id": 1197350, "node_id": "MDQ6VXNlcjExOTczNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabernat", "html_url": "https://github.com/rabernat", "followers_url": "https://api.github.com/users/rabernat/followers", "following_url": "https://api.github.com/users/rabernat/following{/other_user}", "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions", "organizations_url": "https://api.github.com/users/rabernat/orgs", "repos_url": "https://api.github.com/users/rabernat/repos", "events_url": "https://api.github.com/users/rabernat/events{/privacy}", "received_events_url": "https://api.github.com/users/rabernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-18T16:11:17Z", "updated_at": "2019-03-18T16:30:09Z", "closed_at": "2019-03-18T16:30:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a bizarre issue, but bear with me.\r\n\r\nYou may verify for yourself that following gcs object exists and is publicly readable: https://storage.googleapis.com/pangeo-data/CMIP6-3hr/IPSL.IPSL-CM6A-LR.historical.3hr.gr/huss/.zarray\r\n\r\nNow let me try to find it using gcsfs:\r\n```python\r\nimport gcsfs\r\ngcs = gcsfs.GCSFileSystem(token='anon')\r\ngcsmap = gcsfs.GCSMap('/pangeo-data/CMIP6-3hr/IPSL.IPSL-CM6A-LR.historical.3hr.gr', gcs=gcs)\r\nlist(gcsmap.keys())\r\n```\r\n\r\n```\r\n['zattrs',\r\n 'zgroup',\r\n 'zmetadata',\r\n 'eight/.zarray',\r\n 'eight/.zattrs',\r\n 'eight/0',\r\n 'uss/.zarray',\r\n 'uss/.zattrs',\r\n...\r\n```\r\n\r\nYou can see that the first letter (`h` in this case) is being stripped out of the path. This makes it impossible to find the objects. This is pretty critical if you ask me!\r\n\r\nI'm using gcsfs version 0.2.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/138", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/138/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/138/events", "html_url": "https://github.com/dask/gcsfs/issues/138", "id": 418608700, "node_id": "MDU6SXNzdWU0MTg2MDg3MDA=", "number": 138, "title": "cache_timeout default is a bit of a landmine", "user": {"login": "JohnEmhoff", "id": 1692535, "node_id": "MDQ6VXNlcjE2OTI1MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1692535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnEmhoff", "html_url": "https://github.com/JohnEmhoff", "followers_url": "https://api.github.com/users/JohnEmhoff/followers", "following_url": "https://api.github.com/users/JohnEmhoff/following{/other_user}", "gists_url": "https://api.github.com/users/JohnEmhoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnEmhoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnEmhoff/subscriptions", "organizations_url": "https://api.github.com/users/JohnEmhoff/orgs", "repos_url": "https://api.github.com/users/JohnEmhoff/repos", "events_url": "https://api.github.com/users/JohnEmhoff/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnEmhoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-08T02:53:17Z", "updated_at": "2019-03-08T15:01:28Z", "closed_at": "2019-03-08T15:01:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default caching behavior (that is, to have it enabled) was a pretty big source of confusion for me, causing all sorts of odd behavior in production but not in testing. Would you consider disabling all caching by default? I know it's simple enough to pass `cache_timeout=0`, but this is for the next person!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/130", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/130/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/130/events", "html_url": "https://github.com/dask/gcsfs/issues/130", "id": 410478774, "node_id": "MDU6SXNzdWU0MTA0Nzg3NzQ=", "number": 130, "title": "Unable to write file", "user": {"login": "gogasca", "id": 30065079, "node_id": "MDQ6VXNlcjMwMDY1MDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/30065079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gogasca", "html_url": "https://github.com/gogasca", "followers_url": "https://api.github.com/users/gogasca/followers", "following_url": "https://api.github.com/users/gogasca/following{/other_user}", "gists_url": "https://api.github.com/users/gogasca/gists{/gist_id}", "starred_url": "https://api.github.com/users/gogasca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gogasca/subscriptions", "organizations_url": "https://api.github.com/users/gogasca/orgs", "repos_url": "https://api.github.com/users/gogasca/repos", "events_url": "https://api.github.com/users/gogasca/events{/privacy}", "received_events_url": "https://api.github.com/users/gogasca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-14T20:30:15Z", "updated_at": "2019-02-19T06:02:59Z", "closed_at": "2019-02-19T06:02:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running GCFS application via `papermill[gcs]`\r\n\r\n    papermill gs://my-bucket/test.ipynb gs://my-bucket/output/test.ipynb\r\n\r\nI'm getting Error: HTTP 429 Rate exceeds.\r\n\r\nWorks if output notebook is written locally:\r\n\r\n    papermill gs://my-bucket/test.ipynb /tmp/test.ipynb\r\n\r\nLocal file size is: 57K\r\n\r\n```\r\nls -alh /tmp/test.ipynb \r\n-rw-r--r--  1 gogasca  wheel    57K Feb 14 10:37 /tmp/test.ipynb\r\n```\r\n\r\nPapermill code: https://github.com/nteract/papermill/blob/master/papermill/iorw.py#L258\r\n\r\n```\r\nclass GCSHandler(object):\r\n    def __init__(self):\r\n        self._client = None\r\n\r\n    def _get_client(self):\r\n        if self._client is None:\r\n            self._client = GCSFileSystem()\r\n        return self._client\r\n\r\n    def read(self, path):\r\n        with self._get_client().open(path) as f:\r\n            return f.read()\r\n\r\n    def listdir(self, path):\r\n        return self._get_client().ls(path)\r\n\r\n    def write(self, buf, path):\r\n        with self._get_client().open(path, 'w') as f:\r\n            return f.write(buf)\r\n\r\n    def pretty_path(self, path):\r\n        return path\r\n```\r\nHow to reproduce?\r\n\r\n```\r\npip install papermill[gcs]\r\npapermill gs://cloud-samples-data/papermill/samples/test.ipynb gs://<your bucket>/test.ipynb\r\n```\r\n\r\nLogs:\r\n\r\n```\r\n10\r\nEnding Cell 6------------------------------------------\r\nException gcsfs.utils.HtmlError: HtmlError(u'The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.',) in <bound method GCSFile.__del__ of <GCSFile d\r\npe-sandbox/test.ipynb>> ignored\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/papermill\", line 11, in <module>\r\n    sys.exit(papermill())\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python2.7/dist-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/execute.py\", line 90, in execute_notebook\r\n    start_timeout=start_timeout,\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 56, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 296, in execute_notebook\r\n    nb = cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 352, in execute_managed_notebook\r\n    preprocessor.preprocess(nb_man, kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/preprocess.py\", line 27, in preprocess\r\n    nb, resources = self.papermill_process(nb_man, resources)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/preprocess.py\", line 81, in papermill_process\r\n    nb_man.cell_complete(nb.cells[index])\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 219, in cell_complete\r\n    self.save()\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/iorw.py\", line 280, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/iorw.py\", line 82, in write\r\n    return self.get_handler(path).write(buf, path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/papermill/iorw.py\", line 251, in write\r\n    return f.write(buf)\r\n  File \"</usr/local/lib/python2.7/dist-packages/decorator.pyc:decorator-gen-150>\", line 2, in close\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 1548, in close\r\n    self.flush(force=True)\r\n  File \"</usr/local/lib/python2.7/dist-packages/decorator.pyc:decorator-gen-145>\", line 2, in flush\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 1367, in flush\r\n    self._simple_upload()\r\n  File \"</usr/local/lib/python2.7/dist-packages/decorator.pyc:decorator-gen-148>\", line 2, in _simple_upload\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 1465, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 162, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n+ err 'Processing notebook failed'\r\n++ date +%Y-%m-%dT%H:%M:%S%z\r\n+ echo '[2019-02-14T18:32:58+0000]: Processing notebook failed'\r\n[2019-02-14T18:32:58+0000]: Processing notebook failed\r\n+ exit 1\r\n\r\n```\r\nI already defined:\r\n\r\n    export GOOGLE_APPLICATION_CREDENTIALS=/keys/my-project.json\r\n    gcloud config set account XXXXXXX-compute@developer.gserviceaccount.com\r\n    gcloud auth activate-service-account --key-file=/keys/my-project.json\r\n\r\nin MacOS environment I get similar errors: (Added debugging)\r\n\r\n```\r\npapermill gs://cloud-samples-data/papermill/samples/test.ipynb gs://dpe-sandbox/test.ipynb\r\nInput Notebook:  gs://cloud-samples-data/papermill/samples/test.ipynb\r\nOutput Notebook: gs://dpe-sandbox/test.ipynb\r\n('dpe-cloud-mle', 'full_control', None, None, 'none', None)\r\n  0%|                                                                                                   | 0/28 [00:00<?, ?it/s]uploading\r\n11317\r\nuploading\r\n11342\r\nuploading\r\n11372\r\n  4%|\u2588\u2588\u2588\u258e                                                                                       | 1/28 [00:01<00:50,  1.88s/it]uploading\r\n11397\r\nuploading\r\n11427\r\n  7%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                                                                    | 2/28 [00:02<00:41,  1.59s/it]uploading\r\n11452\r\nuploading\r\n11482\r\n 11%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                                                 | 3/28 [00:03<00:33,  1.32s/it]uploading\r\n11507\r\nuploading\r\n11537\r\n 14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                                              | 4/28 [00:04<00:26,  1.10s/it]uploading\r\n11562\r\n429\r\n\r\n429\r\nTraceback (most recent call last):\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 296, in execute_notebook\r\n    nb = cls.execute_managed_notebook(nb_man, kernel_name, log_output=log_output, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 352, in execute_managed_notebook\r\n    preprocessor.preprocess(nb_man, kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/preprocess.py\", line 27, in preprocess\r\n    nb, resources = self.papermill_process(nb_man, resources)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/preprocess.py\", line 81, in papermill_process\r\n    nb_man.cell_complete(nb.cells[index])\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 219, in cell_complete\r\n    self.save()\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 280, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 82, in write\r\n    return self.get_handler(path).write(buf, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 251, in write\r\n    return f.write(buf)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/bin/papermill\", line 10, in <module>\r\n    sys.exit(papermill())\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/cli.py\", line 165, in papermill\r\n    cwd=cwd,\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/execute.py\", line 90, in execute_notebook\r\n    start_timeout=start_timeout,\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 56, in execute_notebook_with_engine\r\n    return self.get_engine(engine_name).execute_notebook(nb, kernel_name, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 302, in execute_notebook\r\n    nb_man.notebook_complete()\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 249, in notebook_complete\r\n    self.save()\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 76, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/engines.py\", line 138, in save\r\n    write_ipynb(self.nb, self.output_path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 280, in write_ipynb\r\n    papermill_io.write(nbformat.writes(nb), path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 82, in write\r\n    return self.get_handler(path).write(buf, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/papermill/iorw.py\", line 251, in write\r\n    return f.write(buf)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n429\r\n429\r\nException ignored in: <bound method GCSFile.__del__ of <GCSFile dpe-sandbox/test.ipynb>>\r\nTraceback (most recent call last):\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-153>\", line 2, in __del__\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1575, in __del__\r\n    self.close()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n429\r\n429\r\nException ignored in: <bound method GCSFile.__del__ of <GCSFile dpe-sandbox/test.ipynb>>\r\nTraceback (most recent call last):\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-153>\", line 2, in __del__\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1575, in __del__\r\n    self.close()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-152>\", line 2, in close\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1552, in close\r\n    self.flush(force=True)\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-147>\", line 2, in flush\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1369, in flush\r\n    self._simple_upload()\r\n  File \"</Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/decorator.py:decorator-gen-150>\", line 2, in _simple_upload\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 51, in _tracemethod\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 1467, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/Users/gogasca/Documents/Development/dpe/venv/papermill/lib/python3.6/site-packages/gcsfs/core.py\", line 163, in validate_response\r\n    raise HtmlError(error)\r\ngcsfs.utils.HtmlError: The total number of changes to the object dpe-sandbox/test.ipynb exceeds the rate limit. Please reduce the rate of create, update, and delete requests.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/128", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/128/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/128/events", "html_url": "https://github.com/dask/gcsfs/issues/128", "id": 409968150, "node_id": "MDU6SXNzdWU0MDk5NjgxNTA=", "number": 128, "title": "ConnectionError - retriable but crashes on flush", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-13T19:39:17Z", "updated_at": "2019-02-21T15:50:57Z", "closed_at": "2019-02-21T15:50:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry for below ill-formatted \"stacktrace\", this is from Google Stackdriver Logging and produced by Cloud Functions (GCF). \r\n\r\nAs you can read though, \r\n\r\n- our code (`split_file.py`) writes some data to a `gcsfs` file-obj\r\n- `gcsfs` determines it's time to flush the cache and upload the chunk to GCS\r\n- that fails, `requests` raises a `ConnectionError` \r\n- although retriable and [this recent commit](https://github.com/dask/gcsfs/commit/323ac558d4c18297db51d0855bd31a6debada607), gcsfs did **not** catch this hence GCF terminates the execution and tries again (until successful...)\r\n\r\nThat error should have been treated as a warning, allowing for `gcsfs`/`requests` to try the chunk upload again.\r\n\r\n```\r\nA  split_file 393356123294863     return self._sslobj.read(len, buffer) split_file 393356123294863 \r\nA  split_file 393356123294863 urllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer')) split_file 393356123294863 \r\nA  split_file 393356123294863 During handling of the above exception, another exception occurred: split_file 393356123294863 \r\nE  split_file 393356123294863 Traceback (most recent call last):\r\n  File \"/env/local/lib/python3.7/site-packages/google/cloud/functions/worker.py\", line 349, in run_background_function\r\n    _function_handler.invoke_user_function(event_object)\r\n  File \"/env/local/lib/python3.7/site-packages/google/cloud/functions/worker.py\", line 215, in invoke_user_function\r\n    return call_user_function(request_or_event)\r\n  File \"/env/local/lib/python3.7/site-packages/google/cloud/functions/worker.py\", line 212, in call_user_function\r\n    event_context.Context(**request_or_event.context))\r\n  File \"/user_code/main.py\", line 236, in split_file\r\n    v.extract_segments()\r\n  File \"/user_code/main.py\", line 144, in extract_segments\r\n    o_file.write(output_line.encode('utf-8'))\r\n  File \"/env/local/lib/python3.7/site-packages/gcsfs/core.py\", line 1328, in write\r\n    self.flush()\r\n  File \"</env/local/lib/python3.7/site-packages/decorator.py:decorator-gen-33>\", line 2, in flush\r\n  File \"/env/local/lib/python3.7/site-packages/gcsfs/core.py\", line 51, in _tracemethod split_file 393356123294863 \r\n  undefined\r\nA  split_file 393356123294863     return f(self, *args, **kwargs) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/gcsfs/core.py\", line 1374, in flush split_file 393356123294863 \r\nA  split_file 393356123294863     self._initiate_upload() split_file 393356123294863 \r\nA  split_file 393356123294863   File \"</env/local/lib/python3.7/site-packages/decorator.py:decorator-gen-35>\", line 2, in _initiate_upload split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/gcsfs/core.py\", line 51, in _tracemethod split_file 393356123294863 \r\nA  split_file 393356123294863     return f(self, *args, **kwargs) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/gcsfs/core.py\", line 1440, in _initiate_upload split_file 393356123294863 \r\nA  split_file 393356123294863     json={'name': self.key, 'metadata': self.metadata}) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/requests/sessions.py\", line 581, in post split_file 393356123294863 \r\nA  split_file 393356123294863     return self.request('POST', url, data=data, json=json, **kwargs) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/google/auth/transport/requests.py\", line 201, in request split_file 393356123294863 \r\nA  split_file 393356123294863     method, url, data=data, headers=request_headers, **kwargs) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/requests/sessions.py\", line 533, in request split_file 393356123294863 \r\nA  split_file 393356123294863     resp = self.send(prep, **send_kwargs) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/requests/sessions.py\", line 646, in send split_file 393356123294863 \r\nA  split_file 393356123294863     r = adapter.send(request, **kwargs) split_file 393356123294863 \r\nA  split_file 393356123294863   File \"/env/local/lib/python3.7/site-packages/requests/adapters.py\", line 498, in send split_file 393356123294863 \r\nA  split_file 393356123294863     raise ConnectionError(err, request=request) split_file 393356123294863 \r\nA  split_file 393356123294863 requests.exceptions.ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer')) split_file 393356123294863 \r\nD  split_file 393356123294863 Function execution took 48623 ms, finished with status: 'crash' split_file 393356123294863 \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/127", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/127/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/127/events", "html_url": "https://github.com/dask/gcsfs/issues/127", "id": 408204485, "node_id": "MDU6SXNzdWU0MDgyMDQ0ODU=", "number": 127, "title": "Warning when import gcsfs", "user": {"login": "qibin-google", "id": 23101448, "node_id": "MDQ6VXNlcjIzMTAxNDQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/23101448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qibin-google", "html_url": "https://github.com/qibin-google", "followers_url": "https://api.github.com/users/qibin-google/followers", "following_url": "https://api.github.com/users/qibin-google/following{/other_user}", "gists_url": "https://api.github.com/users/qibin-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/qibin-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qibin-google/subscriptions", "organizations_url": "https://api.github.com/users/qibin-google/orgs", "repos_url": "https://api.github.com/users/qibin-google/repos", "events_url": "https://api.github.com/users/qibin-google/events{/privacy}", "received_events_url": "https://api.github.com/users/qibin-google/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-02-08T15:37:25Z", "updated_at": "2019-02-21T13:28:40Z", "closed_at": "2019-02-21T13:28:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It says 'No module named dask.bytes.core'. We are using gcsfs 0.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/126", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/126/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/126/events", "html_url": "https://github.com/dask/gcsfs/issues/126", "id": 407817337, "node_id": "MDU6SXNzdWU0MDc4MTczMzc=", "number": 126, "title": "Logging Level Configuration", "user": {"login": "dillonjohnson", "id": 15899374, "node_id": "MDQ6VXNlcjE1ODk5Mzc0", "avatar_url": "https://avatars0.githubusercontent.com/u/15899374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dillonjohnson", "html_url": "https://github.com/dillonjohnson", "followers_url": "https://api.github.com/users/dillonjohnson/followers", "following_url": "https://api.github.com/users/dillonjohnson/following{/other_user}", "gists_url": "https://api.github.com/users/dillonjohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dillonjohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dillonjohnson/subscriptions", "organizations_url": "https://api.github.com/users/dillonjohnson/orgs", "repos_url": "https://api.github.com/users/dillonjohnson/repos", "events_url": "https://api.github.com/users/dillonjohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/dillonjohnson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-07T17:38:17Z", "updated_at": "2019-06-20T16:20:53Z", "closed_at": "2019-06-20T16:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not really a bug, more of a question.\r\n\r\nI am wondering if there is a way to set the logging level within `gcsfs`.\r\n\r\nWe are not interested in having the logging level at DEBUG in all of processes. We mostly use DEBUG level locally for testing and debugging an issue.\r\n\r\nCurrently we are using a workaround, but I was curious if this is by design or if there is another way around this.\r\n\r\nThis is the current workaround we are using to set the logging level higher.\r\n```\r\nlogging.getLogger(__name__).setLevel(level=logging.INFO)\r\n```\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/125", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/125/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/125/events", "html_url": "https://github.com/dask/gcsfs/issues/125", "id": 407472038, "node_id": "MDU6SXNzdWU0MDc0NzIwMzg=", "number": 125, "title": "Appending to Metadata ", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-06T23:05:05Z", "updated_at": "2019-02-07T16:33:21Z", "closed_at": "2019-02-07T15:06:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since `setxattrs` only works for replacement, I tried the below to append instead but metadata got deleted after !\r\n`a=fs.info('bucket/file')['metadata']`\r\n`fs.setxattrs('bucket/file', kwargs={'test': 'me', **a} )`\r\n\r\nAny idea why ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/122", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/122/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/122/events", "html_url": "https://github.com/dask/gcsfs/issues/122", "id": 384272153, "node_id": "MDU6SXNzdWUzODQyNzIxNTM=", "number": 122, "title": "List all files in a bucket with prefix", "user": {"login": "PaulVelthuis93", "id": 5030617, "node_id": "MDQ6VXNlcjUwMzA2MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5030617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulVelthuis93", "html_url": "https://github.com/PaulVelthuis93", "followers_url": "https://api.github.com/users/PaulVelthuis93/followers", "following_url": "https://api.github.com/users/PaulVelthuis93/following{/other_user}", "gists_url": "https://api.github.com/users/PaulVelthuis93/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulVelthuis93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulVelthuis93/subscriptions", "organizations_url": "https://api.github.com/users/PaulVelthuis93/orgs", "repos_url": "https://api.github.com/users/PaulVelthuis93/repos", "events_url": "https://api.github.com/users/PaulVelthuis93/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulVelthuis93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T10:45:54Z", "updated_at": "2018-11-26T15:53:49Z", "closed_at": "2018-11-26T15:53:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to list all objects in a bucket with a certain prefix, however I get only the directories back one layer deeper. How is it possible to list all the files in the prefix\r\n\r\n\r\nimport gcsfs\r\nfs = gcsfs.GCSFileSystem(project='project-id')\r\n\r\nfile_list= fs.ls('bucket/prefix/')\r\n\r\nresult:\r\nfile_list=[ bucket/prefix/anotherprefix,  bucket/prefix/anotherprefix]\r\n\r\nI would expected  the following result result:\r\nfile_list[bucket/prefix/anotherprefix/file.txt, bucket/prefix/anotherprefix/file.txt]\r\n\r\nHow can I achieve this result?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/120", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/120/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/120/events", "html_url": "https://github.com/dask/gcsfs/issues/120", "id": 380698042, "node_id": "MDU6SXNzdWUzODA2OTgwNDI=", "number": 120, "title": "Service account token, authorization error if passed as dict object", "user": {"login": "VMois", "id": 15694232, "node_id": "MDQ6VXNlcjE1Njk0MjMy", "avatar_url": "https://avatars0.githubusercontent.com/u/15694232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VMois", "html_url": "https://github.com/VMois", "followers_url": "https://api.github.com/users/VMois/followers", "following_url": "https://api.github.com/users/VMois/following{/other_user}", "gists_url": "https://api.github.com/users/VMois/gists{/gist_id}", "starred_url": "https://api.github.com/users/VMois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VMois/subscriptions", "organizations_url": "https://api.github.com/users/VMois/orgs", "repos_url": "https://api.github.com/users/VMois/repos", "events_url": "https://api.github.com/users/VMois/events{/privacy}", "received_events_url": "https://api.github.com/users/VMois/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-14T13:28:33Z", "updated_at": "2018-11-21T18:34:32Z", "closed_at": "2018-11-21T18:34:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have created a service account to limit access to a bucket. Using gcloud I have generated a key json file that looks like this:\r\n\r\n```json\r\n{\r\n  \"type\": \"service_account\",\r\n  \"project_id\": \"---\",\r\n  \"private_key_id\": \"---\",\r\n  \"private_key\": \"---\",\r\n  \"client_email\": \"--\",\r\n  \"client_id\": \"---\",\r\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n  \"client_x509_cert_url\": \"---\"\r\n}\r\n```\r\n\r\nI have tried simple test for reading bucket:\r\n\r\n```python\r\nimport gcsfs\r\n\r\nfs = gcsfs.GCSFileSystem(\r\n    project='project',\r\n    token='/home/<user>/key.json'\r\n)\r\n\r\nprint(fs.ls('bucket'))\r\n\r\n```\r\n\r\nAnd it works as expected with properly permissions etc. But, now, I want to read a json file as a python dict and pass it as a token. New code:\r\n\r\n```python\r\nimport gcsfs\r\nimport json\r\n\r\nkey_file = open('/home/<user>/key.json', 'r')\r\nkey = json.load(key_file)\r\n\r\nfs = gcsfs.GCSFileSystem(\r\n    project='project',\r\n    token=key\r\n)\r\n\r\nprint(fs.ls('bucket'))\r\n``` \r\n\r\nDuring execution I received the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/vmois/gstorage_test.py\", line 10, in <module>\r\n    token=key\r\n  File \"/home/vmois/python-venv/dask/lib/python3.6/site-packages/gcsfs/core.py\", line 302, in __init__\r\n    self.connect(method=token)\r\n  File \"/home/vmois/python-venv/dask/lib/python3.6/site-packages/gcsfs/core.py\", line 421, in connect\r\n    self._connect_token(method)\r\n  File \"/home/vmois/python-venv/dask/lib/python3.6/site-packages/gcsfs/core.py\", line 385, in _connect_token\r\n    credentials = self._dict_to_credentials(token)\r\n  File \"/home/vmois/python-venv/dask/lib/python3.6/site-packages/gcsfs/core.py\", line 356, in _dict_to_credentials\r\n    None, refresh_token=token['refresh_token'],\r\nKeyError: 'refresh_token'\r\n```\r\n\r\nI'm using the same file but in different formats. Can we somehow improve token handling?\r\n\r\nI think some changes in  `_connect_token` method. Line 384 we can add check if a token is service account like on line 378.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/119", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/119/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/119/events", "html_url": "https://github.com/dask/gcsfs/issues/119", "id": 379613925, "node_id": "MDU6SXNzdWUzNzk2MTM5MjU=", "number": 119, "title": "Req: specific the Content-Type of the upload", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-11-12T04:13:30Z", "updated_at": "2020-03-10T20:25:53Z", "closed_at": "2020-03-10T20:25:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful to specify the content-type when write to a file, especially if text/plain as browser can render without saving and opening outside.\r\n\r\nRequires `GCSFile().open()` to accept, in `wt` or `wb` mode only, an optional `content-type` argument, which is passed to either `simple upload` or `resumable upload` (initialize only).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/112", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/112/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/112/events", "html_url": "https://github.com/dask/gcsfs/issues/112", "id": 370223113, "node_id": "MDU6SXNzdWUzNzAyMjMxMTM=", "number": 112, "title": "Missing information how to copy files to GCS", "user": {"login": "hnykda", "id": 2741256, "node_id": "MDQ6VXNlcjI3NDEyNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2741256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hnykda", "html_url": "https://github.com/hnykda", "followers_url": "https://api.github.com/users/hnykda/followers", "following_url": "https://api.github.com/users/hnykda/following{/other_user}", "gists_url": "https://api.github.com/users/hnykda/gists{/gist_id}", "starred_url": "https://api.github.com/users/hnykda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hnykda/subscriptions", "organizations_url": "https://api.github.com/users/hnykda/orgs", "repos_url": "https://api.github.com/users/hnykda/repos", "events_url": "https://api.github.com/users/hnykda/events{/privacy}", "received_events_url": "https://api.github.com/users/hnykda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-15T15:39:04Z", "updated_at": "2018-10-15T20:07:42Z", "closed_at": "2018-10-15T18:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, \r\nthis is the current documentation:\r\n\r\n![image](https://user-images.githubusercontent.com/2741256/46961470-22629c00-d0a1-11e8-94ad-11497174bcfd.png)\r\n\r\nand it actually misses one of the most common usecases and that is putting a file on the storage (which is `put` I hope). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/108", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/108/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/108/events", "html_url": "https://github.com/dask/gcsfs/issues/108", "id": 343701369, "node_id": "MDU6SXNzdWUzNDM3MDEzNjk=", "number": 108, "title": "Error in Refresh token", "user": {"login": "Chostakovis", "id": 41488096, "node_id": "MDQ6VXNlcjQxNDg4MDk2", "avatar_url": "https://avatars0.githubusercontent.com/u/41488096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chostakovis", "html_url": "https://github.com/Chostakovis", "followers_url": "https://api.github.com/users/Chostakovis/followers", "following_url": "https://api.github.com/users/Chostakovis/following{/other_user}", "gists_url": "https://api.github.com/users/Chostakovis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chostakovis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chostakovis/subscriptions", "organizations_url": "https://api.github.com/users/Chostakovis/orgs", "repos_url": "https://api.github.com/users/Chostakovis/repos", "events_url": "https://api.github.com/users/Chostakovis/events{/privacy}", "received_events_url": "https://api.github.com/users/Chostakovis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-23T16:16:54Z", "updated_at": "2018-07-23T17:29:05Z", "closed_at": "2018-07-23T17:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all,\r\nI'm trying to make a refresh token call using \r\noauth2Client.refreshAccessToken(function(err, tokens) {\r\n  // your access_token is now refreshed and stored in oauth2Client\r\n  // store these new tokens in a safe place (e.g. database)\r\n});\r\n\r\nBut I'm receiving the following error\r\n { error: 'deleted_client',\r\n        error_description: 'The OAuth client was deleted.' } },\r\n  code: '401' }\r\n\r\nDoes anybody how to handle this error?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/106", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/106/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/106/events", "html_url": "https://github.com/dask/gcsfs/issues/106", "id": 335940325, "node_id": "MDU6SXNzdWUzMzU5NDAzMjU=", "number": 106, "title": "gcsfs authentication issue", "user": {"login": "DavisTownsend", "id": 20406663, "node_id": "MDQ6VXNlcjIwNDA2NjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/20406663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavisTownsend", "html_url": "https://github.com/DavisTownsend", "followers_url": "https://api.github.com/users/DavisTownsend/followers", "following_url": "https://api.github.com/users/DavisTownsend/following{/other_user}", "gists_url": "https://api.github.com/users/DavisTownsend/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavisTownsend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavisTownsend/subscriptions", "organizations_url": "https://api.github.com/users/DavisTownsend/orgs", "repos_url": "https://api.github.com/users/DavisTownsend/repos", "events_url": "https://api.github.com/users/DavisTownsend/events{/privacy}", "received_events_url": "https://api.github.com/users/DavisTownsend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-26T18:28:02Z", "updated_at": "2018-06-26T18:47:01Z", "closed_at": "2018-06-26T18:47:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "dd.read_parquet seems to not be authenticating correctly with gcsfs on my system\r\n\r\n```\r\nimport dask.dataframe as dd\r\nimport gcsfs\r\n\r\nGCP_Project_ID = '<my_project_id>'\r\ntoken = 'browser'\r\nfs_gcs = gcsfs.GCSFileSystem(project=GCP_Project_Name,token=token)\r\ngcs_bucket_name = 'test_bucket_python'\r\n\r\ndf = dd.read_parquet('gcs://'+gcs_bucket_name+'/*.csv')\r\n```\r\nI can run\r\n`fs_gcs.buckets[-1]`\r\nReturns:  'test_bucket_python'\r\n\r\nIf I run\r\n`fs_gcs.method`\r\nReturns: 'cache'  (I already authenticated with browser)\r\n\r\nError: `HtmlError: Anonymous caller does not have storage.objects.list access to test_bucket_python.`\r\n\r\nand if I do\r\n`fs_gcs.tokens`\r\nReturns:  ```{('<my_project_id>',\r\n  'full_control'): <google.oauth2.credentials.Credentials at 0x9f43c5365468f8>}```\r\nI tried clearing my tokens and reauthenticating with browser, no luck\r\n\r\nIt seems like the dd.read_parquet function is authenticating with anon method, even though I've specified credentials with browser so they should be in cache. I've made sure my GCP account has all storage credentials granted (I am owner as well as storage admin)\r\n\r\nFull Traceback:\r\n```\r\nHtmlError                                 Traceback (most recent call last)\r\n<ipython-input-137-fb02ebf73184> in <module>()\r\n----> 1 df = dd.read_parquet('gcs://test_bucket_python/*.csv')\r\n      2 df\r\n\r\n/opt/conda/lib/python3.5/site-packages/dask/dataframe/io/parquet.py in read_parquet(path, columns, filters, categories, index, storage_options, engine, infer_divisions)\r\n    943 \r\n    944     fs, fs_token, paths = get_fs_token_paths(path, mode='rb',\r\n--> 945                                              storage_options=storage_options)\r\n    946 \r\n    947     if isinstance(path, string_types) and len(paths) > 1:\r\n\r\n/opt/conda/lib/python3.5/site-packages/dask/bytes/core.py in get_fs_token_paths(urlpath, mode, num, name_function, storage_options)\r\n    308             paths = _expand_paths(urlpath, name_function, num)\r\n    309         elif \"*\" in urlpath:\r\n--> 310             paths = sorted(fs.glob(urlpath))\r\n    311         else:\r\n    312             paths = [urlpath]\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/dask_link.py in glob(self, path, **kwargs)\r\n     38             bucket = kwargs.pop('host', '')\r\n     39             gcs_path = bucket + path\r\n---> 40             return GCSFileSystem.glob(self, gcs_path)\r\n     41 \r\n     42         def mkdirs(self, path):\r\n\r\n<decorator-gen-137> in glob(self, path)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in glob(self, path)\r\n    779         else:\r\n    780             root = ''\r\n--> 781         allfiles = self.walk(root)\r\n    782         pattern = re.compile(\"^\" + path.replace('//', '/')\r\n    783                              .rstrip('/').replace('**', '.+')\r\n\r\n<decorator-gen-135> in walk(self, path, detail)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in walk(self, path, detail)\r\n    729 \r\n    730         if path.endswith('/'):\r\n--> 731             listing = self.ls(path, detail=True)\r\n    732 \r\n    733             files = [l for l in listing if l[\"storageClass\"] != \"DIRECTORY\"]\r\n\r\n<decorator-gen-133> in ls(self, path, detail)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in ls(self, path, detail)\r\n    675             return self.buckets\r\n    676         elif path.endswith(\"/\"):\r\n--> 677             return self._ls(path, detail)\r\n    678         else:\r\n    679             combined_listing = self._ls(path, detail) + self._ls(path + \"/\",\r\n\r\n<decorator-gen-134> in _ls(self, path, detail)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _ls(self, path, detail)\r\n    689     @_tracemethod\r\n    690     def _ls(self, path, detail=False):\r\n--> 691         listing = self._list_objects(path)\r\n    692         bucket, key = split_path(path)\r\n    693 \r\n\r\n<decorator-gen-127> in _list_objects(self, path)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _list_objects(self, path)\r\n    548             return clisting\r\n    549 \r\n--> 550         listing = self._do_list_objects(path)\r\n    551         retrieved_time = time.time()\r\n    552 \r\n\r\n<decorator-gen-128> in _do_list_objects(self, path, max_results)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _do_list_objects(self, path, max_results)\r\n    565         page = self._call(\r\n    566             'get', 'b/{}/o/', bucket, delimiter=\"/\", prefix=prefix,\r\n--> 567             maxResults=max_results)\r\n    568 \r\n    569         assert page[\"kind\"] == \"storage#objects\"\r\n\r\n<decorator-gen-124> in _call(self, method, path, *args, **kwargs)\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50 \r\n---> 51     return f(self, *args, **kwargs)\r\n     52 \r\n     53 \r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    466                     # retry\r\n    467                     continue\r\n--> 468                 raise e\r\n    469         try:\r\n    470             out = r.json()\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    457                 time.sleep(2**retry - 1)\r\n    458                 r = meth(self.base + path, params=kwargs, json=json)\r\n--> 459                 validate_response(r, path)\r\n    460                 break\r\n    461             except (HtmlError, RequestException, GoogleAuthError) as e:\r\n\r\n/opt/conda/lib/python3.5/site-packages/gcsfs/core.py in validate_response(r, path)\r\n    160             raise ValueError(\"Bad Request: %s\\n%s\" % (path, msg))\r\n    161         elif error:\r\n--> 162             raise HtmlError(error)\r\n    163         else:\r\n    164             raise RuntimeError(m)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/105", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/105/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/105/events", "html_url": "https://github.com/dask/gcsfs/issues/105", "id": 334715769, "node_id": "MDU6SXNzdWUzMzQ3MTU3Njk=", "number": 105, "title": "rename HtmlError to HttpError", "user": {"login": "DrRibosome", "id": 1173117, "node_id": "MDQ6VXNlcjExNzMxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1173117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrRibosome", "html_url": "https://github.com/DrRibosome", "followers_url": "https://api.github.com/users/DrRibosome/followers", "following_url": "https://api.github.com/users/DrRibosome/following{/other_user}", "gists_url": "https://api.github.com/users/DrRibosome/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrRibosome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrRibosome/subscriptions", "organizations_url": "https://api.github.com/users/DrRibosome/orgs", "repos_url": "https://api.github.com/users/DrRibosome/repos", "events_url": "https://api.github.com/users/DrRibosome/events{/privacy}", "received_events_url": "https://api.github.com/users/DrRibosome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-22T01:42:11Z", "updated_at": "2019-07-15T11:33:26Z", "closed_at": "2019-07-15T11:33:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may be a bit pedantic, but gcsfs errors are related to the http transfer protocol, not html. It would make more sense for them to be called HttpError instead\r\n\r\nhttps://github.com/dask/gcsfs/blob/f64f9c54cf2522da222186b33abeafcfbff2dcc0/gcsfs/utils.py#L91", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/102", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/102/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/102/events", "html_url": "https://github.com/dask/gcsfs/issues/102", "id": 316982762, "node_id": "MDU6SXNzdWUzMTY5ODI3NjI=", "number": 102, "title": "Is there an equivalent of ~/.aws/config for GCS auth?", "user": {"login": "rsignell-usgs", "id": 1872600, "node_id": "MDQ6VXNlcjE4NzI2MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1872600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsignell-usgs", "html_url": "https://github.com/rsignell-usgs", "followers_url": "https://api.github.com/users/rsignell-usgs/followers", "following_url": "https://api.github.com/users/rsignell-usgs/following{/other_user}", "gists_url": "https://api.github.com/users/rsignell-usgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsignell-usgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsignell-usgs/subscriptions", "organizations_url": "https://api.github.com/users/rsignell-usgs/orgs", "repos_url": "https://api.github.com/users/rsignell-usgs/repos", "events_url": "https://api.github.com/users/rsignell-usgs/events{/privacy}", "received_events_url": "https://api.github.com/users/rsignell-usgs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-23T21:05:11Z", "updated_at": "2018-04-24T02:47:51Z", "closed_at": "2018-04-24T02:47:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For S3 auth, I'm able to use the super simple  `~/.aws/config` file containing just a few lines like:\r\n```\r\n[default]\r\naws_access_key_id=AKIAJWVSISGVXXXXXXXX\r\naws_secret_access_key=qY/Q3XkVMBegKf4un5qlOOGOAcaRXXXXXXXXXX\r\n```\r\nI've been googling around and haven't been able to figure out how to do something similar for GCS.  I have to keep using the `token='browser'` every time I restart the kernel.   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/101", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/101/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/101/events", "html_url": "https://github.com/dask/gcsfs/issues/101", "id": 316430552, "node_id": "MDU6SXNzdWUzMTY0MzA1NTI=", "number": 101, "title": "AttributeError: 'NoneType' object has no attribute 'get'", "user": {"login": "BrendanMartin", "id": 8090350, "node_id": "MDQ6VXNlcjgwOTAzNTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8090350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrendanMartin", "html_url": "https://github.com/BrendanMartin", "followers_url": "https://api.github.com/users/BrendanMartin/followers", "following_url": "https://api.github.com/users/BrendanMartin/following{/other_user}", "gists_url": "https://api.github.com/users/BrendanMartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrendanMartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrendanMartin/subscriptions", "organizations_url": "https://api.github.com/users/BrendanMartin/orgs", "repos_url": "https://api.github.com/users/BrendanMartin/repos", "events_url": "https://api.github.com/users/BrendanMartin/events{/privacy}", "received_events_url": "https://api.github.com/users/BrendanMartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-20T22:36:23Z", "updated_at": "2018-04-21T16:50:06Z", "closed_at": "2018-04-21T16:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error:\r\n```AttributeError: 'NoneType' object has no attribute 'get'```\r\n\r\nAnd on the worker node I get:\r\n```distributed.worker - WARNING - Compute Failed Function: read_block_from_file args: (<dask.bytes.core.OpenFile object at 0x7f89dd3b34a8>, 0, 64000000, b'\\n') kwargs: {} Exception: AttributeError(\"'NoneType' object has no attribute 'get'\",)```\r\n\r\nWhen running this code:\r\n```python\r\nclient = Client('...')\r\nX = dd.read_csv('gcs://dask-ml-bucket/X.csv', encoding='utf8', engine='python')\r\nX.head()\r\n```\r\nThis code worked just a couple of days ago, so I'm not sure what's going on.\r\n\r\nFull error:\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-12-ae5cd47bda90> in <module>()\r\n----> 1 X.head()\r\n\r\n~\\Anaconda3\\lib\\site-packages\\dask\\dataframe\\core.py in head(self, n, npartitions, compute)\r\n    873 \r\n    874         if compute:\r\n--> 875             result = result.compute()\r\n    876         return result\r\n    877 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\dask\\base.py in compute(self, **kwargs)\r\n    141         dask.base.compute\r\n    142         \"\"\"\r\n--> 143         (result,) = compute(self, traverse=False, **kwargs)\r\n    144         return result\r\n    145 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\dask\\base.py in compute(*args, **kwargs)\r\n    390     postcomputes = [a.__dask_postcompute__() if is_dask_collection(a)\r\n    391                     else (None, a) for a in args]\r\n--> 392     results = get(dsk, keys, **kwargs)\r\n    393     results_iter = iter(results)\r\n    394     return tuple(a if f is None else f(next(results_iter), *a)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\distributed\\client.py in get(self, dsk, keys, restrictions, loose_restrictions, resources, sync, asynchronous, **kwargs)\r\n   2051                     should_rejoin = False\r\n   2052             try:\r\n-> 2053                 results = self.gather(packed, asynchronous=asynchronous)\r\n   2054             finally:\r\n   2055                 for f in futures.values():\r\n\r\n~\\Anaconda3\\lib\\site-packages\\distributed\\client.py in gather(self, futures, errors, maxsize, direct, asynchronous)\r\n   1484             return self.sync(self._gather, futures, errors=errors,\r\n   1485                              direct=direct, local_worker=local_worker,\r\n-> 1486                              asynchronous=asynchronous)\r\n   1487 \r\n   1488     @gen.coroutine\r\n\r\n~\\Anaconda3\\lib\\site-packages\\distributed\\client.py in sync(self, func, *args, **kwargs)\r\n    606             return future\r\n    607         else:\r\n--> 608             return sync(self.loop, func, *args, **kwargs)\r\n    609 \r\n    610     def __repr__(self):\r\n\r\n~\\Anaconda3\\lib\\site-packages\\distributed\\utils.py in sync(loop, func, *args, **kwargs)\r\n    252             e.wait(10)\r\n    253     if error[0]:\r\n--> 254         six.reraise(*error[0])\r\n    255     else:\r\n    256         return result[0]\r\n\r\n~\\Anaconda3\\lib\\site-packages\\six.py in reraise(tp, value, tb)\r\n    691             if value.__traceback__ is not tb:\r\n    692                 raise value.with_traceback(tb)\r\n--> 693             raise value\r\n    694         finally:\r\n    695             value = None\r\n\r\n~\\Anaconda3\\lib\\site-packages\\distributed\\utils.py in f()\r\n    236             yield gen.moment\r\n    237             thread_state.asynchronous = True\r\n--> 238             result[0] = yield make_coro()\r\n    239         except Exception as exc:\r\n    240             logger.exception(exc)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\tornado\\gen.py in run(self)\r\n   1053 \r\n   1054                     try:\r\n-> 1055                         value = future.result()\r\n   1056                     except Exception:\r\n   1057                         self.had_exception = True\r\n\r\n~\\Anaconda3\\lib\\site-packages\\tornado\\concurrent.py in result(self, timeout)\r\n    236         if self._exc_info is not None:\r\n    237             try:\r\n--> 238                 raise_exc_info(self._exc_info)\r\n    239             finally:\r\n    240                 self = None\r\n\r\n~\\Anaconda3\\lib\\site-packages\\tornado\\util.py in raise_exc_info(exc_info)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\tornado\\gen.py in run(self)\r\n   1061                     if exc_info is not None:\r\n   1062                         try:\r\n-> 1063                             yielded = self.gen.throw(*exc_info)\r\n   1064                         finally:\r\n   1065                             # Break up a reference to itself\r\n\r\n~\\Anaconda3\\lib\\site-packages\\distributed\\client.py in _gather(self, futures, errors, direct, local_worker)\r\n   1362                             six.reraise(type(exception),\r\n   1363                                         exception,\r\n-> 1364                                         traceback)\r\n   1365                     if errors == 'skip':\r\n   1366                         bad_keys.add(key)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\six.py in reraise(tp, value, tb)\r\n    690                 value = tp()\r\n    691             if value.__traceback__ is not tb:\r\n--> 692                 raise value.with_traceback(tb)\r\n    693             raise value\r\n    694         finally:\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/dask/bytes/core.py in read_block_from_file()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/dask/bytes/core.py in __enter__()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/dask_link.py in open()\r\n\r\n<decorator-gen-28> in open()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in open()\r\n\r\n<decorator-gen-31> in __init__()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in __init__()\r\n\r\n<decorator-gen-17> in info()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in info()\r\n\r\n<decorator-gen-3> in _get_object()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _get_object()\r\n\r\n<decorator-gen-2> in _call()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod()\r\n\r\n/opt/conda/envs/dask/lib/python3.6/site-packages/gcsfs/core.py in _call()\r\n\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/99", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/99/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/99/events", "html_url": "https://github.com/dask/gcsfs/issues/99", "id": 315583001, "node_id": "MDU6SXNzdWUzMTU1ODMwMDE=", "number": 99, "title": "Can't access public bucket without credentials", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-18T17:59:17Z", "updated_at": "2018-04-19T15:03:02Z", "closed_at": "2018-04-19T15:03:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On master (`ccb779d3e2054310dcff0e4308fe38acfe5784f6`) in an environment with no Google credentials (`python:3.6.4` Docker image):\r\n\r\n```\r\n# this works\r\nIn [2]: gcsfs.GCSFileSystem(token='anon').open('gs://gcp-public-data-landsat/index.csv.gz').read(1)\r\nOut[2]: b'\\x1f'\r\n\r\n# but this doesn't\r\nIn [3]: gcsfs.GCSFileSystem().open('gs://gcp-public-data-landsat/index.csv.gz').read(1)\r\n_call exception: HTTPConnectionPool(host='metadata.google.internal', port=80): Max retries exceeded with url: /computeMetadata/v1/instance/service-accounts/default/?recursive=true (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbc9bdd5b00>: Failed to establish a new connection: [Errno -2] Name or service not known',))\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/urllib3/connection.py\", line 141, in _new_conn\r\n    (self.host, self.port), self.timeout, **extra_kw)\r\n  File \"/usr/local/lib/python3.6/site-packages/urllib3/util/connection.py\", line 60, in create_connection\r\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n  File \"/usr/local/lib/python3.6/socket.py\", line 745, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno -2] Name or service not known\r\n# ... several pages of these logs\r\n# ... then several pages of tracebacks; finally:\r\nRefreshError: HTTPConnectionPool(host='metadata.google.internal', port=80): Max retries exceeded with url: /computeMetadata/v1/instance/service-accounts/default/?recursive=true (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbc9b785eb8>: Failed to establish a new connection: [Errno -2] Name or service not known',))\r\n```\r\n\r\nIt seems that the default auth should be falling back on `anon`; I guess this type of exception is not being caught properly? Additionally, if the `anon` method did eventually succeed, it might be preferable to suppress the logs during the initial failure+retries.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/98", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/98/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/98/events", "html_url": "https://github.com/dask/gcsfs/issues/98", "id": 314845872, "node_id": "MDU6SXNzdWUzMTQ4NDU4NzI=", "number": 98, "title": "FUSE mkdir: cannot create directory", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-16T22:53:13Z", "updated_at": "2019-09-05T13:20:17Z", "closed_at": "2019-09-05T13:20:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nroot@fusetest-xlwl4:/src# touch test_mount/testf  # writing files works\r\nroot@fusetest-xlwl4:/src# ls test_mount\r\ntestf\r\nroot@populationgen-xlwl4:/src# mkdir test_mount/testdir\r\nmkdir: cannot create directory \u2018test_mount/testdir\u2019: No such file or directory\r\n```\r\n\r\nI'm not sure if this is a known limitation of `gcsfuse` or maybe GCS itself, but there does seem to be a `mkdir` function...?\r\n\r\nEDIT: whoops looks like that's only on master, that would explain it \ud83d\ude2c\r\nUsing the latest master I instead get:\r\n```\r\nmkdir: cannot create directory \u2018test_mount/testdir\u2019: Bad address\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/96", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/96/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/96/events", "html_url": "https://github.com/dask/gcsfs/issues/96", "id": 312668363, "node_id": "MDU6SXNzdWUzMTI2NjgzNjM=", "number": 96, "title": "`Bad address` error with gcsfuse", "user": {"login": "jgerardsimcock", "id": 6101444, "node_id": "MDQ6VXNlcjYxMDE0NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6101444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgerardsimcock", "html_url": "https://github.com/jgerardsimcock", "followers_url": "https://api.github.com/users/jgerardsimcock/followers", "following_url": "https://api.github.com/users/jgerardsimcock/following{/other_user}", "gists_url": "https://api.github.com/users/jgerardsimcock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgerardsimcock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgerardsimcock/subscriptions", "organizations_url": "https://api.github.com/users/jgerardsimcock/orgs", "repos_url": "https://api.github.com/users/jgerardsimcock/repos", "events_url": "https://api.github.com/users/jgerardsimcock/events{/privacy}", "received_events_url": "https://api.github.com/users/jgerardsimcock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-09T20:07:03Z", "updated_at": "2018-04-09T21:46:38Z", "closed_at": "2018-04-09T21:46:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Creating new issue to keep things separated. \r\n\r\nI am trying to mount a bucket on google cloud instance. I'd like to be able to do an `xr.open_mfdataset` from the bucket. Ultimately, the intent is to store the data on a bucket in zarr. I can seemingly mount the bucket  but I am unable to actually do any file operations.\r\n\r\n<img width=\"546\" alt=\"screen shot 2018-04-09 at 10 00 06 am\" src=\"https://user-images.githubusercontent.com/6101444/38519892-dfd8e38e-3bdc-11e8-9cd5-820daab7163c.png\">\r\n\r\nhttps://github.com/dask/gcsfs/issues/89\r\nhttps://github.com/pangeo-data/pangeo/issues/202\r\n\r\n\r\nI understand this is experimental software. What path's should I consider to enable this workflow? If I can make progress, I am happy to improve this and make prs. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/95", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/95/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/95/events", "html_url": "https://github.com/dask/gcsfs/issues/95", "id": 309863596, "node_id": "MDU6SXNzdWUzMDk4NjM1OTY=", "number": 95, "title": "ImportError: cannot import name 'FUSE'", "user": {"login": "jgerardsimcock", "id": 6101444, "node_id": "MDQ6VXNlcjYxMDE0NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6101444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgerardsimcock", "html_url": "https://github.com/jgerardsimcock", "followers_url": "https://api.github.com/users/jgerardsimcock/followers", "following_url": "https://api.github.com/users/jgerardsimcock/following{/other_user}", "gists_url": "https://api.github.com/users/jgerardsimcock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgerardsimcock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgerardsimcock/subscriptions", "organizations_url": "https://api.github.com/users/jgerardsimcock/orgs", "repos_url": "https://api.github.com/users/jgerardsimcock/repos", "events_url": "https://api.github.com/users/jgerardsimcock/events{/privacy}", "received_events_url": "https://api.github.com/users/jgerardsimcock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-29T18:47:40Z", "updated_at": "2018-03-29T21:32:25Z", "closed_at": "2018-03-29T21:32:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got osxfuse installed, fusepy and gcsfs installed. When i run \r\n\r\n`gcsfuse --help` I get `ImportError: cannot import name 'FUSE'`. \r\n\r\nIs there another dependency I need to run this on OSx?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/94", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/94/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/94/events", "html_url": "https://github.com/dask/gcsfs/issues/94", "id": 309586970, "node_id": "MDU6SXNzdWUzMDk1ODY5NzA=", "number": 94, "title": "open_mfdataset from google cloud", "user": {"login": "jgerardsimcock", "id": 6101444, "node_id": "MDQ6VXNlcjYxMDE0NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6101444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgerardsimcock", "html_url": "https://github.com/jgerardsimcock", "followers_url": "https://api.github.com/users/jgerardsimcock/followers", "following_url": "https://api.github.com/users/jgerardsimcock/following{/other_user}", "gists_url": "https://api.github.com/users/jgerardsimcock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgerardsimcock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgerardsimcock/subscriptions", "organizations_url": "https://api.github.com/users/jgerardsimcock/orgs", "repos_url": "https://api.github.com/users/jgerardsimcock/repos", "events_url": "https://api.github.com/users/jgerardsimcock/events{/privacy}", "received_events_url": "https://api.github.com/users/jgerardsimcock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-29T01:25:22Z", "updated_at": "2018-03-29T22:22:00Z", "closed_at": "2018-03-29T22:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a large number of netcdf files on google cloud and I'd like to do something like\r\n\r\n```\r\nds = xr.open_mfdataset('data/*/tasmax*.nc') \r\n\r\nfs = gcsfs.GCSFileSystem(project=project, token=None)\r\ngcsmap = gcsfs.mapping.GCSMap(bucket + location + proj + mv + file_name, gcs=fs, check=True, create=False)\r\n        \r\n#zarr encoding\r\ncompressor = zarr.Blosc(cname='zstd', clevel=3, shuffle=2)\r\nencoding = {vname: {'compressor': compressor} for vname in ds.variables}\r\n        \r\nwith dask.set_options(get=dask.threaded.get):\r\n        with ProgressBar():\r\n                 ds.to_zarr(store=gcsmap, encoding=encoding)\r\n\r\n```\r\n\r\nJust to confirm the only way this will work is if I set up gcsfs and gcsfuse, right?  (Similar discussion is here: https://github.com/pangeo-data/pangeo/issues/48) But my use case is slightly different. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/87", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/87/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/87/events", "html_url": "https://github.com/dask/gcsfs/issues/87", "id": 303630878, "node_id": "MDU6SXNzdWUzMDM2MzA4Nzg=", "number": 87, "title": "change `exists()` on bucket to fallback to `ls` if cannot list buckets", "user": {"login": "martindurant", "id": 6042212, "node_id": "MDQ6VXNlcjYwNDIyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martindurant", "html_url": "https://github.com/martindurant", "followers_url": "https://api.github.com/users/martindurant/followers", "following_url": "https://api.github.com/users/martindurant/following{/other_user}", "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions", "organizations_url": "https://api.github.com/users/martindurant/orgs", "repos_url": "https://api.github.com/users/martindurant/repos", "events_url": "https://api.github.com/users/martindurant/events{/privacy}", "received_events_url": "https://api.github.com/users/martindurant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-08T21:04:02Z", "updated_at": "2019-09-05T13:20:17Z", "closed_at": "2019-09-05T13:20:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In anonymous mode, or when accessing a bucket not included in our project, it will not appear in the buckets list (or, indeed, listing buckets may not be possible). In this case, `exists()` on a bucket should instead attempt to list the bucket and return True if that succeeds.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/83", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/83/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/83/events", "html_url": "https://github.com/dask/gcsfs/issues/83", "id": 300405585, "node_id": "MDU6SXNzdWUzMDA0MDU1ODU=", "number": 83, "title": "invalid_scope: Empty or missing scope not allowed", "user": {"login": "rabernat", "id": 1197350, "node_id": "MDQ6VXNlcjExOTczNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabernat", "html_url": "https://github.com/rabernat", "followers_url": "https://api.github.com/users/rabernat/followers", "following_url": "https://api.github.com/users/rabernat/following{/other_user}", "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions", "organizations_url": "https://api.github.com/users/rabernat/orgs", "repos_url": "https://api.github.com/users/rabernat/repos", "events_url": "https://api.github.com/users/rabernat/events{/privacy}", "received_events_url": "https://api.github.com/users/rabernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-26T21:37:33Z", "updated_at": "2018-02-28T20:56:59Z", "closed_at": "2018-02-28T20:56:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After overcoming #82, I am on to a new error.\r\n\r\nI set my `GOOGLE_APPLICATION_CREDENTIALS` to point to an appropriate .json file. I verified that the config is working with the following code\r\n```python\r\nIn [10]: from google.cloud import storage\r\n\r\nIn [11]: storage_client = storage.Client()\r\n\r\nIn [12]: list(storage_client.list_buckets())\r\nOut[12]:\r\n[<Bucket: pangeo>,\r\n <Bucket: pangeo-data>,\r\n <Bucket: pangeo-data-private>,\r\n <Bucket: zarr_store_test>]\r\n``` \r\n\r\nNow I am trying to do the same thing from gcsfs. I get an error `invalid_scope: Empty or missing scope not allowed`.\r\n\r\n```python\r\nIn [8]: fs = gcsfs.GCSFileSystem()\r\n\r\nIn [9]: fs.buckets\r\nDEBUG:gcsfs.core:_list_buckets(args=(), kwargs={})\r\nDEBUG:gcsfs.core:_call(args=('get', 'b/'), kwargs={'project': 'pangeo-181919'})\r\nERROR:gcsfs.core:_call exception: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nTraceback (most recent call last):\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py\", line 431, in _call\r\n    r = meth(self.base + path, params=kwargs, json=json)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/requests/sessions.py\", line 521, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/transport/requests.py\", line 198, in request\r\n    self._auth_request, method, url, request_headers)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/credentials.py\", line 121, in before_request\r\n    self.refresh(request)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/service_account.py\", line 322, in refresh\r\n    request, self._token_uri, assertion)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 145, in jwt_grant\r\n    response_data = _token_endpoint_request(request, token_uri, body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 111, in _token_endpoint_request\r\n    _handle_error_response(response_body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 61, in _handle_error_response\r\n    error_details, response_body)\r\ngoogle.auth.exceptions.RefreshError: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nERROR:gcsfs.core:_call exception: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nTraceback (most recent call last):\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py\", line 431, in _call\r\n    r = meth(self.base + path, params=kwargs, json=json)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/requests/sessions.py\", line 521, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/transport/requests.py\", line 198, in request\r\n    self._auth_request, method, url, request_headers)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/credentials.py\", line 121, in before_request\r\n    self.refresh(request)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/service_account.py\", line 322, in refresh\r\n    request, self._token_uri, assertion)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 145, in jwt_grant\r\n    response_data = _token_endpoint_request(request, token_uri, body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 111, in _token_endpoint_request\r\n    _handle_error_response(response_body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 61, in _handle_error_response\r\n    error_details, response_body)\r\ngoogle.auth.exceptions.RefreshError: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nERROR:gcsfs.core:_call exception: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nTraceback (most recent call last):\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py\", line 431, in _call\r\n    r = meth(self.base + path, params=kwargs, json=json)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/requests/sessions.py\", line 521, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/transport/requests.py\", line 198, in request\r\n    self._auth_request, method, url, request_headers)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/credentials.py\", line 121, in before_request\r\n    self.refresh(request)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/service_account.py\", line 322, in refresh\r\n    request, self._token_uri, assertion)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 145, in jwt_grant\r\n    response_data = _token_endpoint_request(request, token_uri, body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 111, in _token_endpoint_request\r\n    _handle_error_response(response_body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 61, in _handle_error_response\r\n    error_details, response_body)\r\ngoogle.auth.exceptions.RefreshError: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nERROR:gcsfs.core:_call exception: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\nTraceback (most recent call last):\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py\", line 431, in _call\r\n    r = meth(self.base + path, params=kwargs, json=json)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/requests/sessions.py\", line 521, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/transport/requests.py\", line 198, in request\r\n    self._auth_request, method, url, request_headers)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/credentials.py\", line 121, in before_request\r\n    self.refresh(request)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/service_account.py\", line 322, in refresh\r\n    request, self._token_uri, assertion)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 145, in jwt_grant\r\n    response_data = _token_endpoint_request(request, token_uri, body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 111, in _token_endpoint_request\r\n    _handle_error_response(response_body)\r\n  File \"/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py\", line 61, in _handle_error_response\r\n    error_details, response_body)\r\ngoogle.auth.exceptions.RefreshError: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\n---------------------------------------------------------------------------\r\nRefreshError                              Traceback (most recent call last)\r\n<ipython-input-9-bb76ad6e7216> in <module>()\r\n----> 1 fs.buckets\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py in buckets(self)\r\n    449     def buckets(self):\r\n    450         \"\"\"Return list of available project buckets.\"\"\"\r\n--> 451         return [b[\"name\"] for b in self._list_buckets()[\"items\"]]\r\n    452\r\n    453     @classmethod\r\n\r\n<decorator-gen-122> in _list_buckets(self)\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50\r\n---> 51     return f(self, *args, **kwargs)\r\n     52\r\n     53\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py in _list_buckets(self)\r\n    568         items = []\r\n    569         page = self._call(\r\n--> 570             'get', 'b/', project=self.project\r\n    571         )\r\n    572\r\n\r\n<decorator-gen-117> in _call(self, method, path, *args, **kwargs)\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     49         logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     50\r\n---> 51     return f(self, *args, **kwargs)\r\n     52\r\n     53\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    435                 logger.exception(\"_call exception: %s\", e)\r\n    436                 if retry == self.retries - 1:\r\n--> 437                     raise e\r\n    438                 if is_retriable(e):\r\n    439                     # retry\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    429             try:\r\n    430                 time.sleep(2**retry - 1)\r\n--> 431                 r = meth(self.base + path, params=kwargs, json=json)\r\n    432                 validate_response(r, path)\r\n    433                 break\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/requests/sessions.py in get(self, url, **kwargs)\r\n    519\r\n    520         kwargs.setdefault('allow_redirects', True)\r\n--> 521         return self.request('GET', url, **kwargs)\r\n    522\r\n    523     def options(self, url, **kwargs):\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/transport/requests.py in request(self, method, url, data, headers, **kwargs)\r\n    196\r\n    197         self.credentials.before_request(\r\n--> 198             self._auth_request, method, url, request_headers)\r\n    199\r\n    200         response = super(AuthorizedSession, self).request(\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/auth/credentials.py in before_request(self, request, method, url, headers)\r\n    119         # the http request.)\r\n    120         if not self.valid:\r\n--> 121             self.refresh(request)\r\n    122         self.apply(headers)\r\n    123\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/service_account.py in refresh(self, request)\r\n    320         assertion = self._make_authorization_grant_assertion()\r\n    321         access_token, expiry, _ = _client.jwt_grant(\r\n--> 322             request, self._token_uri, assertion)\r\n    323         self.token = access_token\r\n    324         self.expiry = expiry\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py in jwt_grant(request, token_uri, assertion)\r\n    143     }\r\n    144\r\n--> 145     response_data = _token_endpoint_request(request, token_uri, body)\r\n    146\r\n    147     try:\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py in _token_endpoint_request(request, token_uri, body)\r\n    109\r\n    110     if response.status != http_client.OK:\r\n--> 111         _handle_error_response(response_body)\r\n    112\r\n    113     response_data = json.loads(response_body)\r\n\r\n/nobackup/rpaberna/conda/envs/pangeo/lib/python3.6/site-packages/google/oauth2/_client.py in _handle_error_response(response_body)\r\n     59\r\n     60     raise exceptions.RefreshError(\r\n---> 61         error_details, response_body)\r\n     62\r\n     63\r\n\r\nRefreshError: ('invalid_scope: Empty or missing scope not allowed.', '{\\n  \"error\" : \"invalid_scope\",\\n  \"error_description\" : \"Empty or missing scope not allowed.\"\\n}')\r\n```\r\n\r\nI am using the latest gcsfs master, installed from pip + git.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/81", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/81/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/81/events", "html_url": "https://github.com/dask/gcsfs/issues/81", "id": 300329453, "node_id": "MDU6SXNzdWUzMDAzMjk0NTM=", "number": 81, "title": "Use versioneer", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-26T17:34:41Z", "updated_at": "2018-03-22T20:15:16Z", "closed_at": "2018-03-22T20:15:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When using gcsfs in master it is difficult to detect what commit I'm on.  Any thoughts on switching to using versioneer for versions?  Dask and distributed both do this and could serve as models.\r\n\r\ncc @martindurant @rabernat ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/80", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/80/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/80/events", "html_url": "https://github.com/dask/gcsfs/issues/80", "id": 300304040, "node_id": "MDU6SXNzdWUzMDAzMDQwNDA=", "number": 80, "title": "release?", "user": {"login": "martindurant", "id": 6042212, "node_id": "MDQ6VXNlcjYwNDIyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martindurant", "html_url": "https://github.com/martindurant", "followers_url": "https://api.github.com/users/martindurant/followers", "following_url": "https://api.github.com/users/martindurant/following{/other_user}", "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions", "organizations_url": "https://api.github.com/users/martindurant/orgs", "repos_url": "https://api.github.com/users/martindurant/repos", "events_url": "https://api.github.com/users/martindurant/events{/privacy}", "received_events_url": "https://api.github.com/users/martindurant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-26T16:25:34Z", "updated_at": "2018-03-01T13:57:45Z", "closed_at": "2018-03-01T13:57:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should release soon, but I think I would like to include batch-delete first (#69). Any other critical things that should be done?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/78", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/78/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/78/events", "html_url": "https://github.com/dask/gcsfs/issues/78", "id": 299470407, "node_id": "MDU6SXNzdWUyOTk0NzA0MDc=", "number": 78, "title": " NameError: name 'DEBUG' is not defined", "user": {"login": "rabernat", "id": 1197350, "node_id": "MDQ6VXNlcjExOTczNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabernat", "html_url": "https://github.com/rabernat", "followers_url": "https://api.github.com/users/rabernat/followers", "following_url": "https://api.github.com/users/rabernat/following{/other_user}", "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions", "organizations_url": "https://api.github.com/users/rabernat/orgs", "repos_url": "https://api.github.com/users/rabernat/repos", "events_url": "https://api.github.com/users/rabernat/events{/privacy}", "received_events_url": "https://api.github.com/users/rabernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-22T19:04:46Z", "updated_at": "2018-02-22T19:17:20Z", "closed_at": "2018-02-22T19:17:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Still having problems on pangeo.pydata.org using the latest gcsfs installed this way from my notebook.\r\n```\r\n! pip install --upgrade --user git+https://github.com/dask/gcsfs.git\r\n```\r\n\r\nFrom the xarray-data example notebook.\r\n\r\n```python\r\nimport xarray as xr\r\nimport gcsfs\r\ngcsmap = gcsfs.mapping.GCSMap('pangeo-data/newman-met-ensemble')\r\nds = xr.open_zarr(gcsmap)\r\n``` \r\n\r\nproduces this error\r\n```\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-4-6411cc50b0ab> in <module>()\r\n      6 import gcsfs\r\n      7 gcsmap = gcsfs.mapping.GCSMap('pangeo-data/newman-met-ensemble')\r\n----> 8 ds = xr.open_zarr(gcsmap)\r\n      9 \r\n     10 # Print dataset\r\n\r\n/opt/conda/lib/python3.6/site-packages/xarray/backends/zarr.py in open_zarr(store, group, synchronizer, auto_chunk, decode_cf, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables)\r\n    470     zarr_store = ZarrStore.open_group(store, mode=mode,\r\n    471                                       synchronizer=synchronizer,\r\n--> 472                                       group=group)\r\n    473     ds = maybe_decode_store(zarr_store)\r\n    474 \r\n\r\n/opt/conda/lib/python3.6/site-packages/xarray/backends/zarr.py in open_group(cls, store, mode, synchronizer, group, writer)\r\n    276         import zarr\r\n    277         zarr_group = zarr.open_group(store=store, mode=mode,\r\n--> 278                                      synchronizer=synchronizer, path=group)\r\n    279         return cls(zarr_group, writer=writer)\r\n    280 \r\n\r\n/opt/conda/lib/python3.6/site-packages/zarr/hierarchy.py in open_group(store, mode, cache_attrs, synchronizer, path)\r\n   1108 \r\n   1109     if mode in ['r', 'r+']:\r\n-> 1110         if contains_array(store, path=path):\r\n   1111             err_contains_array(path)\r\n   1112         elif not contains_group(store, path=path):\r\n\r\n/opt/conda/lib/python3.6/site-packages/zarr/storage.py in contains_array(store, path)\r\n     70     prefix = _path_to_prefix(path)\r\n     71     key = prefix + array_meta_key\r\n---> 72     return key in store\r\n     73 \r\n     74 \r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/mapping.py in __contains__(self, key)\r\n     86 \r\n     87     def __contains__(self, key):\r\n---> 88         return self.gcs.exists(self._key_to_str(key))\r\n     89 \r\n     90     def __len__(self):\r\n\r\n<decorator-gen-137> in exists(self, path)\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     51        logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     52 \r\n---> 53    return f(self, *args, **kwargs)\r\n     54 \r\n     55 # client created 23-Sept-2017\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in exists(self, path)\r\n    771         try:\r\n    772             if key:\r\n--> 773                 return bool(self.info(path))\r\n    774             else:\r\n    775                 if bucket in self.buckets:\r\n\r\n<decorator-gen-138> in info(self, path)\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     51        logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     52 \r\n---> 53    return f(self, *args, **kwargs)\r\n     54 \r\n     55 # client created 23-Sept-2017\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in info(self, path)\r\n    803 \r\n    804         try:\r\n--> 805             return self._get_object(path)\r\n    806         except FileNotFoundError:\r\n    807             logger.debug(\"info FileNotFound at path: %s\", path)\r\n\r\n<decorator-gen-126> in _get_object(self, path)\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in _tracemethod(f, self, *args, **kwargs)\r\n     51        logger.log(logging.DEBUG - 1, tb_io.getvalue())\r\n     52 \r\n---> 53    return f(self, *args, **kwargs)\r\n     54 \r\n     55 # client created 23-Sept-2017\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in _get_object(self, path)\r\n    485             raise FileNotFoundError(path)\r\n    486 \r\n--> 487         result = self._process_object(bucket, self._call('get', 'b/{}/o/{}', bucket, key))\r\n    488 \r\n    489         logger.debug(\"_get_object result: %s\", result)\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    434                 time.sleep(2**retry - 1)\r\n    435                 r = meth(self.base + path, params=kwargs, json=json)\r\n--> 436                 validate_response(r, path)\r\n    437                 break\r\n    438             except (HtmlError, RequestException, GoogleAuthError) as e:\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in validate_response(r, path)\r\n    154             msg = str(r.content)\r\n    155 \r\n--> 156         if DEBUG:\r\n    157             print(r.url, r.headers, sep='\\n')\r\n    158         if \"Not Found\" in m:\r\n\r\nNameError: name 'DEBUG' is not defined\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/77", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/77/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/77/events", "html_url": "https://github.com/dask/gcsfs/issues/77", "id": 299469424, "node_id": "MDU6SXNzdWUyOTk0Njk0MjQ=", "number": 77, "title": "Objects not processed", "user": {"login": "martindurant", "id": 6042212, "node_id": "MDQ6VXNlcjYwNDIyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martindurant", "html_url": "https://github.com/martindurant", "followers_url": "https://api.github.com/users/martindurant/followers", "following_url": "https://api.github.com/users/martindurant/following{/other_user}", "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions", "organizations_url": "https://api.github.com/users/martindurant/orgs", "repos_url": "https://api.github.com/users/martindurant/repos", "events_url": "https://api.github.com/users/martindurant/events{/privacy}", "received_events_url": "https://api.github.com/users/martindurant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-22T19:01:11Z", "updated_at": "2018-02-22T19:12:40Z", "closed_at": "2018-02-22T19:12:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@asford https://github.com/dask/gcsfs/blob/master/gcsfs/core.py#L559 - should this not be moved to the line above like `\"items\": [self._process_object(bucket, i) for i in items],` ? As it is, the `items` are being processed and then ignored.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/76", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/76/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/76/events", "html_url": "https://github.com/dask/gcsfs/issues/76", "id": 299440591, "node_id": "MDU6SXNzdWUyOTk0NDA1OTE=", "number": 76, "title": "KeyError: 'refresh_token' when importing gcsfs", "user": {"login": "rabernat", "id": 1197350, "node_id": "MDQ6VXNlcjExOTczNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabernat", "html_url": "https://github.com/rabernat", "followers_url": "https://api.github.com/users/rabernat/followers", "following_url": "https://api.github.com/users/rabernat/following{/other_user}", "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions", "organizations_url": "https://api.github.com/users/rabernat/orgs", "repos_url": "https://api.github.com/users/rabernat/repos", "events_url": "https://api.github.com/users/rabernat/events{/privacy}", "received_events_url": "https://api.github.com/users/rabernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-22T17:27:44Z", "updated_at": "2018-02-22T19:02:33Z", "closed_at": "2018-02-22T19:02:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to use the latest gcsfs master on pangeo.pydata.org (see pangeo-data/pangeo#112 for context).\r\n\r\nFrom within the notebook, I do\r\n```\r\n! pip install --upgrade --user git+https://github.com/dask/gcsfs.git\r\n```\r\n\r\nWhen I try `import gcsfs` I get the following traceback\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-12-3f25f74e3f1b> in <module>()\r\n----> 1 import gcsfs\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/__init__.py in <module>()\r\n      1 from __future__ import absolute_import\r\n      2 \r\n----> 3 from .core import GCSFileSystem\r\n      4 from .dask_link import register as register_dask\r\n      5 from .mapping import GCSMap\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in <module>()\r\n    985 \r\n    986 \r\n--> 987 GCSFileSystem.load_tokens()\r\n    988 \r\n    989 \r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in load_tokens()\r\n    307             tokens = {k: (GCSFileSystem._dict_to_credentials(v)\r\n    308                           if isinstance(v, dict) else v)\r\n--> 309                       for k, v in tokens.items()}\r\n    310         except IOError:\r\n    311             tokens = {}\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in <dictcomp>(.0)\r\n    307             tokens = {k: (GCSFileSystem._dict_to_credentials(v)\r\n    308                           if isinstance(v, dict) else v)\r\n--> 309                       for k, v in tokens.items()}\r\n    310         except IOError:\r\n    311             tokens = {}\r\n\r\n~/.local/lib/python3.6/site-packages/gcsfs/core.py in _dict_to_credentials(token)\r\n    335         \"\"\"\r\n    336         return Credentials(\r\n--> 337             None, refresh_token=token['refresh_token'],\r\n    338             client_secret=token['client_secret'],\r\n    339             client_id=token['client_id'],\r\n\r\nKeyError: 'refresh_token'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/70", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/70/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/70/events", "html_url": "https://github.com/dask/gcsfs/issues/70", "id": 296959120, "node_id": "MDU6SXNzdWUyOTY5NTkxMjA=", "number": 70, "title": "Small file upload fails", "user": {"login": "bnaul", "id": 903655, "node_id": "MDQ6VXNlcjkwMzY1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/903655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnaul", "html_url": "https://github.com/bnaul", "followers_url": "https://api.github.com/users/bnaul/followers", "following_url": "https://api.github.com/users/bnaul/following{/other_user}", "gists_url": "https://api.github.com/users/bnaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnaul/subscriptions", "organizations_url": "https://api.github.com/users/bnaul/orgs", "repos_url": "https://api.github.com/users/bnaul/repos", "events_url": "https://api.github.com/users/bnaul/events{/privacy}", "received_events_url": "https://api.github.com/users/bnaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-14T02:51:03Z", "updated_at": "2018-02-20T03:10:26Z", "closed_at": "2018-02-20T03:10:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nIn [5]: import pandas as pd\r\n   ...: import dask.dataframe as dd\r\n   ...: dd.from_pandas(pd.DataFrame({'x': [1]}), npartitions=1).to_csv(f'gs://{bucket}/test.csv')\r\n   ...:\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n~/miniconda3/envs/model/lib/python3.6/site-packages/gcsfs/core.py in flush(self, force)\r\n    905         if self.location is not None:\r\n--> 906             self._upload_chunk(final=force)\r\n    907         if force:\r\n\r\n~/miniconda3/envs/model/lib/python3.6/site-packages/gcsfs/core.py in _upload_chunk(self, final)\r\n    930             headers=head, data=data)\r\n--> 931         validate_response(r, self.location)\r\n    932         if 'Range' in r.headers:\r\n\r\n~/miniconda3/envs/model/lib/python3.6/site-packages/gcsfs/core.py in validate_response(r, path)\r\n    131         else:\r\n--> 132             raise RuntimeError(m)\r\n    133\r\n\r\nRuntimeError: b\"Invalid request.  The number of bytes uploaded is required to be equal or greater than 262144, except for the final request (it's recommended to be the exact multiple of 262144).  The received request contained 7 bytes, which does not meet this requirement.\"\r\n```\r\n\r\nThe same behavior happens with a simple string write:\r\n```\r\nIn [8]: with gcsfs.GCSFileSystem(project=project).open(f'{bucket}/test.txt', 'w') as f:\r\n   ...:     f.write('test')\r\n...\r\nRuntimeError: b\"Invalid request.  The number of bytes uploaded is required to be equal or greater than 262144, except for the final request (it's recommended to be the exact multiple of 262144).  The received request contained 4 bytes, which does not meet this requirement.\"\r\n```\r\n\r\nBut weirdly enough, changing the write type to binary resolves this:\r\n```\r\nIn [9]: with gcsfs.GCSFileSystem(project='model-streetlight-toronto').open('persona-upload/test.txt', 'wb') as f:\r\n   ...:     f.write(b'test')\r\n   ...:\r\nIn [10]:  # OK\r\n```\r\n\r\nI'm trying to remember off the top of my head if this is new behavior but I'm not sure.\r\n```\r\ngcsfs==0.0.4\r\ngoogle-cloud-storage==1.7.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/69", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/69/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/69/events", "html_url": "https://github.com/dask/gcsfs/issues/69", "id": 296529730, "node_id": "MDU6SXNzdWUyOTY1Mjk3MzA=", "number": 69, "title": "Use batch requests for delete", "user": {"login": "martindurant", "id": 6042212, "node_id": "MDQ6VXNlcjYwNDIyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martindurant", "html_url": "https://github.com/martindurant", "followers_url": "https://api.github.com/users/martindurant/followers", "following_url": "https://api.github.com/users/martindurant/following{/other_user}", "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions", "organizations_url": "https://api.github.com/users/martindurant/orgs", "repos_url": "https://api.github.com/users/martindurant/repos", "events_url": "https://api.github.com/users/martindurant/events{/privacy}", "received_events_url": "https://api.github.com/users/martindurant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-12T21:26:03Z", "updated_at": "2018-02-28T14:38:15Z", "closed_at": "2018-02-28T14:38:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Although there is no batch delete as such, there is such a concept as batch request in GCS: https://cloud.google.com/storage/docs/json_api/v1/how-tos/batch", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/66", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/66/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/66/events", "html_url": "https://github.com/dask/gcsfs/issues/66", "id": 293661205, "node_id": "MDU6SXNzdWUyOTM2NjEyMDU=", "number": 66, "title": "gcsfuse stalls?", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-01T19:51:00Z", "updated_at": "2018-02-26T16:24:39Z", "closed_at": "2018-02-26T16:23:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The following causes both terminals to hang in such a way that they can not be interrupted\r\n\r\n```\r\n$ pip install gcsfs --upgrade\r\n$ mkdir gcs\r\n$ gcsfuse pangeo-data gcs\r\nMounting bucket pangeo-data to directory gcs\r\n```\r\n\r\n```\r\n$ ls gcs\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/63", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/63/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/63/events", "html_url": "https://github.com/dask/gcsfs/issues/63", "id": 287488657, "node_id": "MDU6SXNzdWUyODc0ODg2NTc=", "number": 63, "title": "release", "user": {"login": "martindurant", "id": 6042212, "node_id": "MDQ6VXNlcjYwNDIyMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martindurant", "html_url": "https://github.com/martindurant", "followers_url": "https://api.github.com/users/martindurant/followers", "following_url": "https://api.github.com/users/martindurant/following{/other_user}", "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}", "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions", "organizations_url": "https://api.github.com/users/martindurant/orgs", "repos_url": "https://api.github.com/users/martindurant/repos", "events_url": "https://api.github.com/users/martindurant/events{/privacy}", "received_events_url": "https://api.github.com/users/martindurant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-10T16:09:07Z", "updated_at": "2018-01-23T19:10:43Z", "closed_at": "2018-01-23T19:10:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A new release is due following recent activity.\r\n\r\nNeed to update the client id/secret used for browser-based authentication.\r\n\r\nConsider including fuse (#53 ) and directory (#57 ) work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/60", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/60/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/60/events", "html_url": "https://github.com/dask/gcsfs/issues/60", "id": 286397294, "node_id": "MDU6SXNzdWUyODYzOTcyOTQ=", "number": 60, "title": "`oauth2client` is deprecated.", "user": {"login": "asford", "id": 282792, "node_id": "MDQ6VXNlcjI4Mjc5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/282792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asford", "html_url": "https://github.com/asford", "followers_url": "https://api.github.com/users/asford/followers", "following_url": "https://api.github.com/users/asford/following{/other_user}", "gists_url": "https://api.github.com/users/asford/gists{/gist_id}", "starred_url": "https://api.github.com/users/asford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asford/subscriptions", "organizations_url": "https://api.github.com/users/asford/orgs", "repos_url": "https://api.github.com/users/asford/repos", "events_url": "https://api.github.com/users/asford/events{/privacy}", "received_events_url": "https://api.github.com/users/asford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-05T20:32:51Z", "updated_at": "2018-01-10T14:58:21Z", "closed_at": "2018-01-10T14:58:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "*Ancillary issue that would likely be linked to #59*\r\n\r\nAs per [the module documentation](https://google-auth.readthedocs.io/en/latest/oauth2client-deprecation.html) `oauth2client` is officially deprecated in favor of [`google-auth`](https://google-auth.readthedocs.io). As `google-auth` is an officially support project with a stable API, any further development of the `gcsfs` authorization system should target this library.\r\n\r\nThe current oauth implementation should likely replaced via a standard implementation using `google-auth` for token managment and the related [`google-auth-oauthlib.flow`](http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html) for device authorization.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/59", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/59/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/59/events", "html_url": "https://github.com/dask/gcsfs/issues/59", "id": 286395882, "node_id": "MDU6SXNzdWUyODYzOTU4ODI=", "number": 59, "title": "Invalid use of service credentials return via 'google_default'", "user": {"login": "asford", "id": 282792, "node_id": "MDQ6VXNlcjI4Mjc5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/282792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asford", "html_url": "https://github.com/asford", "followers_url": "https://api.github.com/users/asford/followers", "following_url": "https://api.github.com/users/asford/following{/other_user}", "gists_url": "https://api.github.com/users/asford/gists{/gist_id}", "starred_url": "https://api.github.com/users/asford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asford/subscriptions", "organizations_url": "https://api.github.com/users/asford/orgs", "repos_url": "https://api.github.com/users/asford/repos", "events_url": "https://api.github.com/users/asford/events{/privacy}", "received_events_url": "https://api.github.com/users/asford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-05T20:26:47Z", "updated_at": "2018-01-10T14:58:21Z", "closed_at": "2018-01-10T14:58:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "*Opening as a tracking issue for follow-up discussed #58. I will be able to follow-up on this issue the week of 2018-01-28. From that thread:*\r\n\r\n[Testing #58] on a GCE instance I use as a dev box. On this machine I've the compute sdk installed and I'm I'm using the service account for application default credentials:\r\n\r\n```\r\nfordas@salish:~/distributed_dev/gcsfs$ gcloud auth list\r\n                  Credentialed Accounts\r\nACTIVE  ACCOUNT\r\n*       353972334481-compute@developer.gserviceaccount.com\r\n```\r\n\r\nIn this context `auth2client.client.GoogleCredentials.get_application_default` returns an token component that manages access to the service credentials and does not include a `refresh_token`, `client_secret`. It instead provides access tokens via the `get_access_token` interface, which handles token expiration and refresh. It may also be used to retrieve auth headers for requests.\r\n\r\nThis currently breaks the current `master` implementation, which expects a refresh token to be available. ~~This will also break this implementation.~~\r\n\r\nAfter setting application default credentials to a user account via `gcloud auth application-default login`  `auth2client.client.GoogleCredentials.get_application_default` returns a `GoogleCredentials` object exposing  `refresh_token` et al. This credentials object is capable of handling access token and auth header generation.\r\n\r\nGiven that behavior, my current recommendation would be to hold the credential object returned by the `get_application_default` and use the interface `credential.get_access_token().access_token` to manage access. `gcsfs` would then not be responsible for managing auth token management and refresh. It would also be desirable to wrap the device credentials generated via the `browser` auth mode in a the same oauth handler and remove the token management logic currently implemented in `gcsfs`.\r\n\r\nIn a broader sense, I would suggest emphasizing use of the default app credentials instead of obtaining and directly caching a credential object for `gcsfs`. In \"off cloud\" contexts, the user can then manage authorization via the `gcloud auth application-default` command, which provides `login`, `revoke`. In \"on cloud\" this then provides easy access to the default service account, with the option for a user to override this setting by `gcloud auth login`.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/56", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/56/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/56/events", "html_url": "https://github.com/dask/gcsfs/issues/56", "id": 285866305, "node_id": "MDU6SXNzdWUyODU4NjYzMDU=", "number": 56, "title": "Connect to GCSFS anonymously", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T02:37:48Z", "updated_at": "2018-01-05T14:16:51Z", "closed_at": "2018-01-05T14:16:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I would like to set up GCSFuse in a docker container pointing to a read-only public bucket.  This container will not have any Google authentication by default.  Is it possible to create a `GCSFileSystem` without associating it to a google account and without using `token='cloud'`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/54", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/54/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/54/events", "html_url": "https://github.com/dask/gcsfs/issues/54", "id": 285593009, "node_id": "MDU6SXNzdWUyODU1OTMwMDk=", "number": 54, "title": "Credentials should be resolved from metadata service, if available, in default case.", "user": {"login": "asford", "id": 282792, "node_id": "MDQ6VXNlcjI4Mjc5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/282792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asford", "html_url": "https://github.com/asford", "followers_url": "https://api.github.com/users/asford/followers", "following_url": "https://api.github.com/users/asford/following{/other_user}", "gists_url": "https://api.github.com/users/asford/gists{/gist_id}", "starred_url": "https://api.github.com/users/asford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asford/subscriptions", "organizations_url": "https://api.github.com/users/asford/orgs", "repos_url": "https://api.github.com/users/asford/repos", "events_url": "https://api.github.com/users/asford/events{/privacy}", "received_events_url": "https://api.github.com/users/asford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-03T03:40:56Z", "updated_at": "2018-01-05T14:16:51Z", "closed_at": "2018-01-05T14:16:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "### Report\r\n\r\nI'm seeing intermittent errors using `gcsfs==0.3.0` in a `dask.distributed` cluster that, I believe, are due to an error in credential resolution. Briefly, when writing a large number of partitions to gcs via the `dask.bag.to_textfiles` interface, a number of work partitions failed with the log message:\r\n\r\n````\r\nEnter the following code when prompted in the browser:\r\n\r\n....\r\n\r\n Traceback (most recent call last):\r\n  File \"/home/fordas/.conda/envs/dev/lib/python3.5/site-packages/distributed/protocol/pickle.py\", line 59, in loads\r\n    return pickle.loads(x)\r\n  File \"/home/fordas/.conda/envs/dev/lib/python3.5/site-packages/gcsfs/core.py\", line 597, in __setstate__\r\n    self.connect()\r\n  File \"/home/fordas/.conda/envs/dev/lib/python3.5/site-packages/gcsfs/core.py\", line 249, in connect\r\n    raise RuntimeError(\"Waited too long for browser\"\r\nRuntimeError: Waited too long for browserauthentication.\r\n````\r\n\r\nHowever a number of the work partitions completed successfully. This occured while using multithreaded workers, so I assume that *some* race condition in token retrieval triggered the browser-based authentication flow. Modifying the filesystem interface in `dask.bytes.core` appeared to resolve the issue:\r\n\r\n````\r\nimport dask.bytes\r\nimport gcsfs\r\n\r\nimport functools\r\n\r\norg_fs = dask.bytes.core._filesystems['gcs']\r\nwrapped_fs = functools.partial(org_fs, token=\"cloud\")\r\n\r\n\r\ndask.bytes.core._filesystems['gs'] = wrapped_fs\r\ndask.bytes.core._filesystems['gcs'] = wrapped_fs\r\n````\r\n\r\n### Credential Resolution\r\n\r\nCredential resolution in the default case (i.e. `GCSFileSystem(token=None)`) should resolve credentials from the default service account, rather than falling back to the oauth device flow, if the internal metadata service is available. ~~I'm not familiar with the [oauth2client.client.GoogleCredential.get_application_default()](https://github.com/dask/gcsfs/blob/master/gcsfs/core.py#L302) interface currently used in `master`, but if that interface queries instance metadata by default then this is a \"doc bug\" to clarify this behavior in the gcsfs interface.~~ The `oauth2client.GoogleCredential.get_application_default` interface appears to provide a token for the GCE Service account when invoked on a GCE instance and does not profive the \"refresh_token\" expected by `gcsfs`'s token refresh logic. This poison's `gcsfs`'s token cache and blocks authorization if `token=None` mode is used from a `GCE` instance.\r\n\r\n### Error Handling & Auth in Dask\r\n\r\nPending the behavior clarification above, it seems strange to me that `dask` would invoke `gcsfs` in a mode that *could* require interactive authorization. I believe `gcsfs` should support a `headless` authorization mode which resolves credentials from (a) the `~/.gcs_tokens` token cache (b) the `gcloud` application default credentials and (c) instance metadata, but provides an informative error if interactive oauth would be required, then register this mode (rather than the current `token=None` mode) with dask. \r\n\r\nThis would allows users to authenticate manually via the current token=`None` mode, then utilize the cached token for all further access.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/52", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/52/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/52/events", "html_url": "https://github.com/dask/gcsfs/issues/52", "id": 285526861, "node_id": "MDU6SXNzdWUyODU1MjY4NjE=", "number": 52, "title": "Feature Request: Support Text IO", "user": {"login": "asford", "id": 282792, "node_id": "MDQ6VXNlcjI4Mjc5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/282792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asford", "html_url": "https://github.com/asford", "followers_url": "https://api.github.com/users/asford/followers", "following_url": "https://api.github.com/users/asford/following{/other_user}", "gists_url": "https://api.github.com/users/asford/gists{/gist_id}", "starred_url": "https://api.github.com/users/asford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asford/subscriptions", "organizations_url": "https://api.github.com/users/asford/orgs", "repos_url": "https://api.github.com/users/asford/repos", "events_url": "https://api.github.com/users/asford/events{/privacy}", "received_events_url": "https://api.github.com/users/asford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-02T20:17:20Z", "updated_at": "2018-01-10T14:58:58Z", "closed_at": "2018-01-10T14:58:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "It would be valuable to support the standard Text I/O interface in gcsfs for use as a standalone, file-like library. The current behavior requires binary IO, which is not directly compatible with some standard tools (eg. `json`).\r\n\r\nFor example:\r\n\r\n````\r\nimport json\r\nimport gcsfs\r\n\r\nfs = gcsfs.GCSFileSystem(...)\r\nan_obj = {\"foo\" : \"bar\"}\r\n\r\nwith fs.open(\"bucket/path\", \"w\") as of:\r\n    json.dump(an_obj, of)\r\n````\r\n\r\nraises `NotImplementedError`.\r\n\r\nWhile it's possible to workaround via `io.TextIOWrapper`, it would be best to expose a `GCSFile` in text-mode in order to provide support for gcsfs-specific api extensions on the file object.\r\n\r\n````\r\nimport json\r\nimport gcsfs\r\n\r\nfs = gcsfs.GCSFileSystem(...)\r\nan_obj = {\"foo\" : \"bar\"}\r\n\r\nwith fs.open(\"bucket/path\", \"wb') as of:\r\n    json.dump(an_obj, io.TextIOWrapper(of))\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/50", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/50/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/50/events", "html_url": "https://github.com/dask/gcsfs/issues/50", "id": 284053073, "node_id": "MDU6SXNzdWUyODQwNTMwNzM=", "number": 50, "title": "Use requests.Session to avoid repeated SSL handshakes", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-22T01:58:28Z", "updated_at": "2018-01-04T16:52:43Z", "closed_at": "2018-01-04T16:52:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This can be nice when the other side is relatively fast\r\n\r\n```python\r\nIn [1]: import requests\r\nIn [2]: %timeit requests.get('https://en.wikipedia.org')\r\n10 loops, best of 3: 116 ms per loop\r\nIn [3]: s = requests.Session()\r\nIn [4]: %timeit s.get('https://en.wikipedia.org')\r\n10 loops, best of 3: 48.5 ms per loop\r\n```\r\n\r\nIt's not clear yet how effective this will be in practice.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/46", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/46/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/46/events", "html_url": "https://github.com/dask/gcsfs/issues/46", "id": 280135088, "node_id": "MDU6SXNzdWUyODAxMzUwODg=", "number": 46, "title": "RuntimeError \"The OAuth client was deleted\"", "user": {"login": "rabernat", "id": 1197350, "node_id": "MDQ6VXNlcjExOTczNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabernat", "html_url": "https://github.com/rabernat", "followers_url": "https://api.github.com/users/rabernat/followers", "following_url": "https://api.github.com/users/rabernat/following{/other_user}", "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions", "organizations_url": "https://api.github.com/users/rabernat/orgs", "repos_url": "https://api.github.com/users/rabernat/repos", "events_url": "https://api.github.com/users/rabernat/events{/privacy}", "received_events_url": "https://api.github.com/users/rabernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2017-12-07T13:45:44Z", "updated_at": "2017-12-08T15:50:36Z", "closed_at": "2017-12-08T15:50:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to use gcsfs on a new system. I am invoking it as follows\r\n\r\n```python\r\nimport gcsfs\r\nfs = gcsfs.GCSFileSystem(project='pangeo-181919', token=None)\r\n```\r\n\r\nI get the following error, which I really don't understand or know how to recover from. Any advice would be appreciated. This is on a remote server where I have no `gloud` utilities installed. The python version is 3.5...don't know if that matters.\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-1-90388e4b9890> in <module>()\r\n      1 import gcsfs\r\n----> 2 fs = gcsfs.GCSFileSystem(project='pangeo-181919', token=None)\r\n\r\n/home/rpa/.conda/envs/dask_distributed/lib/python3.5/site-packages/gcsfs/core.py in __init__(self, project, access, token, block_size)\r\n    162         self.access = access\r\n    163         self.dirs = {}\r\n--> 164         self.connect()\r\n    165         self._singleton[0] = self\r\n    166 \r\n\r\n/home/rpa/.conda/envs/dask_distributed/lib/python3.5/site-packages/gcsfs/core.py in connect(self, refresh)\r\n    229                               params={'client_id': not_secret['client_id'],\r\n    230                                       'scope': scope})\r\n--> 231             validate_response(r, path)\r\n    232             data = json.loads(r.content.decode())\r\n    233             print('Enter the following code when prompted in the browser:')\r\n\r\n/home/rpa/.conda/envs/dask_distributed/lib/python3.5/site-packages/gcsfs/core.py in validate_response(r, path)\r\n    108             raise ValueError(\"Bad Request: %s\\n%s\" % (path, msg))\r\n    109         else:\r\n--> 110             raise RuntimeError(m)\r\n    111 \r\n    112 \r\n\r\nRuntimeError: b'{\\n  \"error\" : \"deleted_client\",\\n  \"error_description\" : \"The OAuth client was deleted.\"\\n}'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/44", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/44/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/44/events", "html_url": "https://github.com/dask/gcsfs/issues/44", "id": 279557228, "node_id": "MDU6SXNzdWUyNzk1NTcyMjg=", "number": 44, "title": "GCSMap fails when we don't have strong permissions", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-05T22:39:31Z", "updated_at": "2017-12-06T00:04:31Z", "closed_at": "2017-12-06T00:04:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm trying to read a publicly readable bucket using the `GCSMap`.  My account doesn't have much in the way of permissions, but the bucket is publicly readable.\r\n\r\n```python\r\nfs = gcsfs.GCSFileSystem(token='cloud')\r\ngcsmap = gcsfs.mapping.GCSMap('pangeo-data/newmann-met-ensemble', gcs=fs)\r\n```\r\n```python\u200b\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-20-1c1ffef3b0ee> in <module>()\r\n      1 fs = gcsfs.GCSFileSystem(token='cloud')\r\n----> 2 gcsmap = gcsfs.mapping.GCSMap('pangeo-data/newmann-met-ensemble', gcs=fs)\r\n\r\n/opt/conda/lib/python3.6/site-packages/gcsfs/mapping.py in __init__(self, root, gcs, check, create)\r\n     41             if create:\r\n     42                 self.gcs.mkdir(bucket)\r\n---> 43             elif not self.gcs.exists(bucket):\r\n     44                 raise ValueError(\"Bucket %s does not exist.\"\r\n     45                         \" Create bucket with the ``create=True`` keyword\" %\r\n\r\n/opt/conda/lib/python3.6/site-packages/gcsfs/core.py in exists(self, path)\r\n    457                 return bool(self.info(path))\r\n    458             else:\r\n--> 459                 return bucket in self.ls('')\r\n    460         except FileNotFoundError:\r\n    461             return False\r\n\r\n/opt/conda/lib/python3.6/site-packages/gcsfs/core.py in ls(self, path, detail)\r\n    374     def ls(self, path, detail=False):\r\n    375         if path in ['', '/']:\r\n--> 376             out = self._list_buckets()\r\n    377         else:\r\n    378             bucket, prefix = split_path(path)\r\n\r\n/opt/conda/lib/python3.6/site-packages/gcsfs/core.py in _list_buckets(self)\r\n    308     def _list_buckets(self):\r\n    309         if '' not in self.dirs:\r\n--> 310             out = self._call('get', 'b/', project=self.project)\r\n    311             dirs = out.get('items', [])\r\n    312             self.dirs[''] = dirs\r\n\r\n/opt/conda/lib/python3.6/site-packages/gcsfs/core.py in _call(self, method, path, *args, **kwargs)\r\n    303         except ValueError:\r\n    304             out = r.content\r\n--> 305         validate_response(r, path)\r\n    306         return out\r\n    307 \r\n\r\n/opt/conda/lib/python3.6/site-packages/gcsfs/core.py in validate_response(r, path)\r\n    107             raise IOError(\"Forbidden: %s\\n%s\" % (path, msg))\r\n    108         elif \"invalid\" in m:\r\n--> 109             raise ValueError(\"Bad Request: %s\\n%s\" % (path, msg))\r\n    110         else:\r\n    111             raise RuntimeError(m)\r\n\r\nValueError: Bad Request: b/\r\nInvalid argument\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/43", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/43/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/43/events", "html_url": "https://github.com/dask/gcsfs/issues/43", "id": 279538762, "node_id": "MDU6SXNzdWUyNzk1Mzg3NjI=", "number": 43, "title": "Managing multiple authentication tokens ", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-05T21:34:18Z", "updated_at": "2017-12-05T21:39:11Z", "closed_at": "2017-12-05T21:39:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I regularly access Google cloud services with two different google accounts.  I typically switch between them by using `gcloud auth login` and then selecting the different account.  However, even after doing so the `gcsfs` library is finding connection information for my other account.  What logic does gcsfs use?  I'm interested in tracking down from where it's getting its tokens.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/40", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/40/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/40/events", "html_url": "https://github.com/dask/gcsfs/issues/40", "id": 278631473, "node_id": "MDU6SXNzdWUyNzg2MzE0NzM=", "number": 40, "title": "Release on pypi", "user": {"login": "danielfrg", "id": 1580714, "node_id": "MDQ6VXNlcjE1ODA3MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1580714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielfrg", "html_url": "https://github.com/danielfrg", "followers_url": "https://api.github.com/users/danielfrg/followers", "following_url": "https://api.github.com/users/danielfrg/following{/other_user}", "gists_url": "https://api.github.com/users/danielfrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielfrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielfrg/subscriptions", "organizations_url": "https://api.github.com/users/danielfrg/orgs", "repos_url": "https://api.github.com/users/danielfrg/repos", "events_url": "https://api.github.com/users/danielfrg/events{/privacy}", "received_events_url": "https://api.github.com/users/danielfrg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-01T23:57:25Z", "updated_at": "2017-12-02T00:46:56Z", "closed_at": "2017-12-01T23:58:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Is it possible to make one release of the library on pypi?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/38", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/38/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/38/events", "html_url": "https://github.com/dask/gcsfs/issues/38", "id": 277809810, "node_id": "MDU6SXNzdWUyNzc4MDk4MTA=", "number": 38, "title": "Add method to set metadata", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-11-29T16:02:40Z", "updated_at": "2018-11-12T19:31:23Z", "closed_at": "2018-11-12T19:31:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Feature request (or current workaround)\r\n1. set meta on existing object like like https://cloud.google.com/storage/docs/gsutil/commands/setmeta\r\n2. `dict` parameter at file creation (`open` in `w` mode)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/35", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/35/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/35/events", "html_url": "https://github.com/dask/gcsfs/issues/35", "id": 275217824, "node_id": "MDU6SXNzdWUyNzUyMTc4MjQ=", "number": 35, "title": "RuntimeError: Waited too long for browserauthentication.", "user": {"login": "rabernat", "id": 1197350, "node_id": "MDQ6VXNlcjExOTczNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1197350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rabernat", "html_url": "https://github.com/rabernat", "followers_url": "https://api.github.com/users/rabernat/followers", "following_url": "https://api.github.com/users/rabernat/following{/other_user}", "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions", "organizations_url": "https://api.github.com/users/rabernat/orgs", "repos_url": "https://api.github.com/users/rabernat/repos", "events_url": "https://api.github.com/users/rabernat/events{/privacy}", "received_events_url": "https://api.github.com/users/rabernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-20T02:11:40Z", "updated_at": "2017-11-21T22:03:22Z", "closed_at": "2017-11-21T22:03:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to create a new GCSFileSystem with the command\r\n```python\r\nfs = gcsfs.GCSFileSystem(project='pangeo-181919', token=None)\r\n```\r\n\r\nThis triggers my browser to open and I have to enter the code. But I can never seem to finish it fast enough before I get the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nApplicationDefaultCredentialsError        Traceback (most recent call last)\r\n~/miniconda3/envs/geo_scipy/lib/python3.6/site-packages/gcsfs/core.py in connect(self, refresh)\r\n    241             try:\r\n--> 242                 data = self.get_default_gtoken()\r\n    243                 self.tokens[(project, access)] = data\r\n\r\n~/miniconda3/envs/geo_scipy/lib/python3.6/site-packages/gcsfs/core.py in get_default_gtoken()\r\n    303     def get_default_gtoken():\r\n--> 304         au = oauth2client.client.GoogleCredentials.get_application_default()\r\n    305         tok = {\"client_id\": au.client_id, \"client_secret\": au.client_secret,\r\n\r\n~/miniconda3/envs/geo_scipy/lib/python3.6/site-packages/oauth2client/client.py in get_application_default()\r\n   1270         \"\"\"\r\n-> 1271         return GoogleCredentials._get_implicit_credentials()\r\n   1272 \r\n\r\n~/miniconda3/envs/geo_scipy/lib/python3.6/site-packages/oauth2client/client.py in _get_implicit_credentials(cls)\r\n   1260         # If no credentials, fail.\r\n-> 1261         raise ApplicationDefaultCredentialsError(ADC_HELP_MSG)\r\n   1262 \r\n\r\nApplicationDefaultCredentialsError: The Application Default Credentials are not available. They are available if running in Google Compute Engine. Otherwise, the environment variable GOOGLE_APPLICATION_CREDENTIALS must be defined pointing to a file defining the credentials. See https://developers.google.com/accounts/docs/application-default-credentials for more information.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-2-f5bb2896043c> in <module>()\r\n----> 1 fs = gcsfs.GCSFileSystem(project='pangeo-181919', token=None)\r\n\r\n~/miniconda3/envs/geo_scipy/lib/python3.6/site-packages/gcsfs/core.py in __init__(self, project, access, token, block_size, consistency)\r\n    178         self.consistency = consistency\r\n    179         self.dirs = {}\r\n--> 180         self.connect()\r\n    181         self._singleton[0] = self\r\n    182 \r\n\r\n~/miniconda3/envs/geo_scipy/lib/python3.6/site-packages/gcsfs/core.py in connect(self, refresh)\r\n    267                     if 'error' in data2:\r\n    268                         if i == self.retries - 1:\r\n--> 269                             raise RuntimeError(\"Waited too long for browser\"\r\n    270                                                \"authentication.\")\r\n    271                         continue\r\n\r\nRuntimeError: Waited too long for browserauthentication.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/34", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/34/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/34/events", "html_url": "https://github.com/dask/gcsfs/issues/34", "id": 275087882, "node_id": "MDU6SXNzdWUyNzUwODc4ODI=", "number": 34, "title": "GCSFileSystem.exists() not working with bucket only", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-18T15:46:00Z", "updated_at": "2017-12-06T00:05:37Z", "closed_at": "2017-12-06T00:05:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "when checking on bucket existence, I get \r\n```\r\nValueError: Bad Request: b/\r\nUnknown project id: 0\r\n```\r\nIssue is actually with `_list_buckets()` and the `get` call to list buckets. The API requires the pass the project ID, not the project name - see https://cloud.google.com/storage/docs/json_api/v1/buckets/list and https://cloud.google.com/storage/docs/projects\r\n\r\nBTW, that ID is also required to create a bucket so `mkdir()` has same issue\r\n\r\nThis was not spotted before if you happened to have project name = ID", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/33", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/33/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/33/events", "html_url": "https://github.com/dask/gcsfs/issues/33", "id": 275021810, "node_id": "MDU6SXNzdWUyNzUwMjE4MTA=", "number": 33, "title": "no error on GSCFile if bucket does not exist", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T23:00:17Z", "updated_at": "2019-02-21T18:11:39Z", "closed_at": "2019-02-21T18:11:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When bucket in passed path does not exists, GSCFile fails on close (or when buffer is flushed), with a generic error like\r\n`Exception KeyError: ('location',) in <bound method GCSFile.__del__ of <GCSFile new_bucket/test>> ignored`\r\n\r\n`GSCFile.__init__` should check on bucket existence and either create (preferred) or explicitly error out e.g. `Bucket xxx does not exist`\r\nFirst option preferred to minimize pre-processing but requires parameters for `storage class` & `location`. Although could be defined as defaults.\r\n\r\nBtw - do not use paranthesis in folder name, you cannot browse it in `Google Console` (bug reported)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/32", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/32/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/32/events", "html_url": "https://github.com/dask/gcsfs/issues/32", "id": 273935426, "node_id": "MDU6SXNzdWUyNzM5MzU0MjY=", "number": 32, "title": "invalid Credentials thrown after a while", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-14T20:41:19Z", "updated_at": "2017-11-14T20:56:12Z", "closed_at": "2017-11-14T20:56:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sorry for logging another one !\r\n\r\nThis one seems related to the cached credentials.\r\n```\r\n  File \"g.py\", line 61, in <module>\r\n    recs += 1\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 896, in __exit__\r\n    self.close()\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 868, in close\r\n    self.flush(force=True)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 750, in flush\r\n    self._simple_upload()\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 810, in _simple_upload\r\n    validate_response(r, path)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 111, in validate_response\r\n    raise RuntimeError(m)\r\nRuntimeError: {\r\n \"error\": {\r\n  \"errors\": [\r\n   {\r\n    \"domain\": \"global\",\r\n    \"reason\": \"authError\",\r\n    \"message\": \"Invalid Credentials\",\r\n    \"locationType\": \"header\",\r\n    \"location\": \"Authorization\"\r\n   }\r\n  ],\r\n  \"code\": 401,\r\n  \"message\": \"Invalid Credentials\"\r\n }\r\n}\r\n```\r\n\r\nI wonder if increasing the block size to say 50MB would not reduce the likehood of these error (overload, 'corrupted' credentials,...)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/31", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/31/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/31/events", "html_url": "https://github.com/dask/gcsfs/issues/31", "id": 273925518, "node_id": "MDU6SXNzdWUyNzM5MjU1MTg=", "number": 31, "title": "does not handle 502 errors (returned by GCS when server is overloaded)", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-14T20:07:03Z", "updated_at": "2019-04-06T16:11:19Z", "closed_at": "2017-11-21T22:03:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have faced several times the same 502 error when writing in chunks. Errors are sporadic and look like:\r\n```\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 896, in __exit__\r\n    self.close()\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 868, in close\r\n    self.flush(force=True)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 755, in flush\r\n    self._upload_chunk(final=force)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 777, in _upload_chunk\r\n    validate_response(r, self.location)\r\n  File \"/usr/local/lib/python2.7/dist-packages/gcsfs/core.py\", line 111, in validate_response\r\n    raise RuntimeError(m)\r\nRuntimeError: <!DOCTYPE html>\r\n<html lang=en>\r\n  <meta charset=utf-8>\r\n  <meta name=viewport content=\"initial-scale=1, minimum-scale=1, width=device-width\">\r\n  <title>Error 502 (Server Error)!!1</title>\r\n  <style>\r\n    *{margin:0;padding:0}html,code{font:15px/22px arial,sans-serif}html{background:#fff;color:#222;padding:15px}body{margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px}* > body{background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px}p{margin:11px 0 22px;overflow:hidden}ins{color:#777;text-decoration:none}a img{border:0}@media screen and (max-width:772px){body{background:none;margin-top:0;max-width:none;padding-right:0}}#logo{background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px}@media only screen and (min-resolution:192dpi){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0}}@media only screen and (-webkit-min-device-pixel-ratio:2){#logo{background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%}}#logo{display:inline-block;height:54px;width:150px}\r\n  </style>\r\n  <a href=//www.google.com/><span id=logo aria-label=Google></span></a>\r\n  <p><b>502.</b> <ins>That's an error.</ins>\r\n  <p>The server encountered a temporary error and could not complete your request.<p>Please try again in 30 seconds.  <ins>That's all we know.</ins>\r\n\r\nException ValueError: ValueError('Force flush cannot be called more than once',) in <bound method GCSFile.__del__ of <GCSFile tempfile.txt>> ignored\r\n```\r\nGoogle writes this may happen when system/network is under stress - our script does indeed read and write from `GCS` several GB of files in chunks after on-the-fly transformations.\r\nLook at `Handling Errors` at https://cloud.google.com/storage/docs/json_api/v1/how-tos/resumable-upload.\r\nThey indicate to implement `exponential-backoff`: https://cloud.google.com/storage/docs/exponential-backoff\r\n\r\nIs this something that can be implemented in `GCSFS` i.e. resubmit a chunk when such `5xx` error occurs ?\r\n\r\nIf not, wrapping the write statement in a try/exception, delete the target file written so far and reprocess is not an option for me. Because the records I write are based off data in a compressed `GCSFS`-file I read. ZipFileExt are not seekable so what is read is gone. I would have to delete the whole batch and restart.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/30", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/30/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/30/events", "html_url": "https://github.com/dask/gcsfs/issues/30", "id": 273658519, "node_id": "MDU6SXNzdWUyNzM2NTg1MTk=", "number": 30, "title": "Error: Force flush cannot be called more than once", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-14T03:47:14Z", "updated_at": "2017-11-14T13:50:33Z", "closed_at": "2017-11-14T04:12:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My script runs fine remotely - from laptop - but when running on a GCE instance, I get the following error:\r\n```Traceback (most recent call last):\r\n  File \"g.py\", line 56, in <module>\r\n    recs += 1\r\n  File \"xxx/gcsfs/core.py\", line 896, in __exit__\r\n    self.close()\r\n  File \"xxx/gcsfs/core.py\", line 868, in close\r\n    self.flush(force=True)\r\n  File \"xxx/gcsfs/core.py\", line 754, in flush\r\n    self._initiate_upload()\r\n  File \"xxx/gcsfs/core.py\", line 798, in _initiate_upload\r\n    self.location = r.headers['Location']\r\n  File \"xxx/requests/structures.py\", line 54, in __getitem__\r\n    return self._store[key.lower()][1]\r\nKeyError: 'location'\r\nException ValueError: ValueError('Force flush cannot be called more than once',) in <bound method GCSFile.__del__ of <GCSFile testfile>> ignored\r\n```\r\nCode snippet is:\r\n```\r\n...\r\n            with fs.open(seg_filename, 'wb') as seg_f:\r\n                recs = 0\r\n                while line.startswith(key):\r\n                    seg_f.write(line[line_offset:])\r\n                    line = f.readline()\r\n                    recs += 1\r\n            logger.info('Done writing  {}: {:,} records'.format(seg_filename, recs))\r\n```\r\nUnrelated but I also get a warning `No module named dask.bytes.core`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/29", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/29/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/29/events", "html_url": "https://github.com/dask/gcsfs/issues/29", "id": 273627822, "node_id": "MDU6SXNzdWUyNzM2Mjc4MjI=", "number": 29, "title": "Walk method doesn't match python standard lib interface", "user": {"login": "jcrist", "id": 2783717, "node_id": "MDQ6VXNlcjI3ODM3MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcrist", "html_url": "https://github.com/jcrist", "followers_url": "https://api.github.com/users/jcrist/followers", "following_url": "https://api.github.com/users/jcrist/following{/other_user}", "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions", "organizations_url": "https://api.github.com/users/jcrist/orgs", "repos_url": "https://api.github.com/users/jcrist/repos", "events_url": "https://api.github.com/users/jcrist/events{/privacy}", "received_events_url": "https://api.github.com/users/jcrist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-14T00:34:43Z", "updated_at": "2019-09-05T13:20:17Z", "closed_at": "2019-09-05T13:20:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The implementation of walk in `gcsfs` returns a flat list of all paths encountered when traversing the tree. In contrast, `os.walk` from the standard library returns an iterator of `dirname, dirs, files`, where `dirname` is the current directory prefix in the traversal, and `files` and `dirs` are the names (relative, not absolute) of all files and directories respectively.\r\n\r\nThis difference in behavior is confusing for those familiar with the standard `os.walk` method, and also makes providing the interface used by `pyarrow` (which does match the standard library) tricky.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dask/gcsfs/issues/28", "repository_url": "https://api.github.com/repos/dask/gcsfs", "labels_url": "https://api.github.com/repos/dask/gcsfs/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/dask/gcsfs/issues/28/comments", "events_url": "https://api.github.com/repos/dask/gcsfs/issues/28/events", "html_url": "https://github.com/dask/gcsfs/issues/28", "id": 273580277, "node_id": "MDU6SXNzdWUyNzM1ODAyNzc=", "number": 28, "title": "glob through whole tree", "user": {"login": "yiga2", "id": 25224265, "node_id": "MDQ6VXNlcjI1MjI0MjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/25224265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yiga2", "html_url": "https://github.com/yiga2", "followers_url": "https://api.github.com/users/yiga2/followers", "following_url": "https://api.github.com/users/yiga2/following{/other_user}", "gists_url": "https://api.github.com/users/yiga2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yiga2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yiga2/subscriptions", "organizations_url": "https://api.github.com/users/yiga2/orgs", "repos_url": "https://api.github.com/users/yiga2/repos", "events_url": "https://api.github.com/users/yiga2/events{/privacy}", "received_events_url": "https://api.github.com/users/yiga2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-13T21:15:42Z", "updated_at": "2017-11-21T22:03:22Z", "closed_at": "2017-11-21T22:03:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Suggestion/request to have a glob option to traverse the full tree e.g.\r\n`GCSFS.glob('bucket/**/*.[gz|zip]', recursive=true)` to list all matching files regardless of where located. This mimics glob in Python 3.6.\r\n\r\nWorkaround I can think of is to use walk() or ls() then regex", "performed_via_github_app": null, "score": 1.0}]}