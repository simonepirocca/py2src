{"total_count": 31, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/71", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/71/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/71/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/71", "id": 624739278, "node_id": "MDU6SXNzdWU2MjQ3MzkyNzg=", "number": 71, "title": "Report 0% on all templates not covered?", "user": {"login": "erdseb", "id": 63046235, "node_id": "MDQ6VXNlcjYzMDQ2MjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/63046235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erdseb", "html_url": "https://github.com/erdseb", "followers_url": "https://api.github.com/users/erdseb/followers", "following_url": "https://api.github.com/users/erdseb/following{/other_user}", "gists_url": "https://api.github.com/users/erdseb/gists{/gist_id}", "starred_url": "https://api.github.com/users/erdseb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erdseb/subscriptions", "organizations_url": "https://api.github.com/users/erdseb/orgs", "repos_url": "https://api.github.com/users/erdseb/repos", "events_url": "https://api.github.com/users/erdseb/events{/privacy}", "received_events_url": "https://api.github.com/users/erdseb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-26T09:29:32Z", "updated_at": "2020-08-21T10:56:06Z", "closed_at": "2020-08-20T23:38:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThanks for making this plug-in and sharing it with the community as software libre! :+1: \r\nI noticed that right now only the templates that are actually touched by existing tests make it into the report, i.e. if no tests gets template X loaded, it will not appear with 0% in the report and hence the resulting picture is more optimistic than reality. Is there a way to get all templates of first party Django apps into the report?\r\n\r\nThanks and best\r\n\r\n\r\nSebastian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/69", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/69/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/69/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/69", "id": 598576887, "node_id": "MDU6SXNzdWU1OTg1NzY4ODc=", "number": 69, "title": "CoverageException: Can't add file tracer data for unmeasured file", "user": {"login": "suda", "id": 25722, "node_id": "MDQ6VXNlcjI1NzIy", "avatar_url": "https://avatars1.githubusercontent.com/u/25722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suda", "html_url": "https://github.com/suda", "followers_url": "https://api.github.com/users/suda/followers", "following_url": "https://api.github.com/users/suda/following{/other_user}", "gists_url": "https://api.github.com/users/suda/gists{/gist_id}", "starred_url": "https://api.github.com/users/suda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suda/subscriptions", "organizations_url": "https://api.github.com/users/suda/orgs", "repos_url": "https://api.github.com/users/suda/repos", "events_url": "https://api.github.com/users/suda/events{/privacy}", "received_events_url": "https://api.github.com/users/suda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-12T21:39:26Z", "updated_at": "2020-07-12T23:35:27Z", "closed_at": "2020-07-12T23:35:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "A combination of `django`, `pytest`, `pytest-cov`, `django-coverage-plugin` and `pytest-django` seems to interact with each other causing `CoverageException` when tests execute code that renders templates. My guess is it's somewhere in `django-coverage-plugin` as disabling it, removes the exception.\r\n\r\nI created an example Django project that exhibits this issue: https://github.com/suda/pytest_django_coverage_test\r\nNot sure if it's a bug or misconfiguration but I hope this repo will be useful for figuring out the root cause \ud83d\ude0a ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/58", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/58/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/58/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/58", "id": 356813548, "node_id": "MDU6SXNzdWUzNTY4MTM1NDg=", "number": 58, "title": "Suport PyCharm Coverage", "user": {"login": "Atterratio", "id": 606837, "node_id": "MDQ6VXNlcjYwNjgzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/606837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atterratio", "html_url": "https://github.com/Atterratio", "followers_url": "https://api.github.com/users/Atterratio/followers", "following_url": "https://api.github.com/users/Atterratio/following{/other_user}", "gists_url": "https://api.github.com/users/Atterratio/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atterratio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atterratio/subscriptions", "organizations_url": "https://api.github.com/users/Atterratio/orgs", "repos_url": "https://api.github.com/users/Atterratio/repos", "events_url": "https://api.github.com/users/Atterratio/events{/privacy}", "received_events_url": "https://api.github.com/users/Atterratio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jambonrose", "id": 2659203, "node_id": "MDQ6VXNlcjI2NTkyMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2659203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jambonrose", "html_url": "https://github.com/jambonrose", "followers_url": "https://api.github.com/users/jambonrose/followers", "following_url": "https://api.github.com/users/jambonrose/following{/other_user}", "gists_url": "https://api.github.com/users/jambonrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/jambonrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jambonrose/subscriptions", "organizations_url": "https://api.github.com/users/jambonrose/orgs", "repos_url": "https://api.github.com/users/jambonrose/repos", "events_url": "https://api.github.com/users/jambonrose/events{/privacy}", "received_events_url": "https://api.github.com/users/jambonrose/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jambonrose", "id": 2659203, "node_id": "MDQ6VXNlcjI2NTkyMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2659203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jambonrose", "html_url": "https://github.com/jambonrose", "followers_url": "https://api.github.com/users/jambonrose/followers", "following_url": "https://api.github.com/users/jambonrose/following{/other_user}", "gists_url": "https://api.github.com/users/jambonrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/jambonrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jambonrose/subscriptions", "organizations_url": "https://api.github.com/users/jambonrose/orgs", "repos_url": "https://api.github.com/users/jambonrose/repos", "events_url": "https://api.github.com/users/jambonrose/events{/privacy}", "received_events_url": "https://api.github.com/users/jambonrose/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-04T13:36:22Z", "updated_at": "2018-09-04T15:48:44Z", "closed_at": "2018-09-04T15:48:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I run django tests with coverage from PyCharm, then geting error: \"Coverage.py warning: Plugin file tracers (django_coverage_plugin.DjangoTemplatePlugin) aren't supported with PyTracer\".\r\n\r\nAny chance on support in future, or may be I can configure something to get worked this? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/55", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/55/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/55/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/55", "id": 345351323, "node_id": "MDU6SXNzdWUzNDUzNTEzMjM=", "number": 55, "title": "Activate TravisCI?", "user": {"login": "jambonrose", "id": 2659203, "node_id": "MDQ6VXNlcjI2NTkyMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2659203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jambonrose", "html_url": "https://github.com/jambonrose", "followers_url": "https://api.github.com/users/jambonrose/followers", "following_url": "https://api.github.com/users/jambonrose/following{/other_user}", "gists_url": "https://api.github.com/users/jambonrose/gists{/gist_id}", "starred_url": "https://api.github.com/users/jambonrose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jambonrose/subscriptions", "organizations_url": "https://api.github.com/users/jambonrose/orgs", "repos_url": "https://api.github.com/users/jambonrose/repos", "events_url": "https://api.github.com/users/jambonrose/events{/privacy}", "received_events_url": "https://api.github.com/users/jambonrose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-27T20:07:55Z", "updated_at": "2018-09-05T01:26:56Z", "closed_at": "2018-09-05T01:26:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi,\r\nI note that there's a `.travis.yml` in the repo, but navigating to [TravisCI](https://travis-ci.org/nedbat/django_coverage_plugin) informs me that 'This is not an active repository.'\r\n\r\n@nedbat : would you like to use Travis, and if so, would you mind activating it? Happy to help in any way I can.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/53", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/53/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/53/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/53", "id": 337836829, "node_id": "MDU6SXNzdWUzMzc4MzY4Mjk=", "number": 53, "title": "The contents of the folder inside the folder are not subject to coverage", "user": {"login": "kaibara", "id": 34569299, "node_id": "MDQ6VXNlcjM0NTY5Mjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/34569299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaibara", "html_url": "https://github.com/kaibara", "followers_url": "https://api.github.com/users/kaibara/followers", "following_url": "https://api.github.com/users/kaibara/following{/other_user}", "gists_url": "https://api.github.com/users/kaibara/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaibara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaibara/subscriptions", "organizations_url": "https://api.github.com/users/kaibara/orgs", "repos_url": "https://api.github.com/users/kaibara/repos", "events_url": "https://api.github.com/users/kaibara/events{/privacy}", "received_events_url": "https://api.github.com/users/kaibara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-03T10:23:16Z", "updated_at": "2018-09-12T19:17:04Z", "closed_at": "2018-09-12T19:17:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "## issue\r\nWhen I did a `$ coverage run`, only the html file in the folder was covered, and it was not executed to the html file in the folder in the folder.\r\nPlease tell me how to coverage the folder's html file in the folder.\r\n\r\n## Constitution\r\n```\r\nfolderA\r\n|\r\n|---folderB\r\n|        |---a.html\r\n|\r\n|\r\n|---b.html\r\n|---c.html\r\n|---d.html\r\n```\r\n\r\n## Action\r\nThe following is a commannd & result lists\r\n```\r\n$ coverage run\r\n\r\n$ coverage report\r\n----------------------------------------------------\r\nfolderA/b.html      33      0    100%\r\nfolderA/c.html      32      0    100%\r\nfolderA/d.html      35      0    100%\r\n----------------------------------------------------\r\nTOTAL                 100      0    100%\r\n```\r\n\r\n## Desired results\r\n```\r\n$ coverage report\r\n----------------------------------------------------\r\nfolderA/folderB/a.html   \r\nfolderA/b.html                 33      0    100%\r\nfolderA/c.html                 32      0    100%\r\nfolderA/d.html                 35      0    100%\r\n----------------------------------------------------\r\nTOTAL                \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/51", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/51/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/51/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/51", "id": 326237571, "node_id": "MDU6SXNzdWUzMjYyMzc1NzE=", "number": 51, "title": "Django 2.1a1: cannot import name 'TOKEN_BLOCK'", "user": {"login": "stefankoegl", "id": 184196, "node_id": "MDQ6VXNlcjE4NDE5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/184196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefankoegl", "html_url": "https://github.com/stefankoegl", "followers_url": "https://api.github.com/users/stefankoegl/followers", "following_url": "https://api.github.com/users/stefankoegl/following{/other_user}", "gists_url": "https://api.github.com/users/stefankoegl/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefankoegl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefankoegl/subscriptions", "organizations_url": "https://api.github.com/users/stefankoegl/orgs", "repos_url": "https://api.github.com/users/stefankoegl/repos", "events_url": "https://api.github.com/users/stefankoegl/events{/privacy}", "received_events_url": "https://api.github.com/users/stefankoegl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-24T18:23:59Z", "updated_at": "2018-09-04T20:30:10Z", "closed_at": "2018-09-04T16:27:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to run my project with [Django 2.1a1](https://www.djangoproject.com/weblog/2018/may/17/django-21-alpha-1/), I get the following error\r\n\r\n````\r\nenvdir envs/dev/ pytest --cov=mygpo/ --cov-branch\r\nTraceback (most recent call last):\r\n  File \"/home/stefan/mygpo/venv/bin/pytest\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/config.py\", line 49, in main\r\n    config = _prepareconfig(args, plugins)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/config.py\", line 168, in _prepareconfig\r\n    pluginmanager=pluginmanager, args=args)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 250, in _wrapped_call\r\n    wrap_controller.send(call_outcome)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/helpconfig.py\", line 68, in pytest_cmdline_parse\r\n    config = outcome.get_result()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/config.py\", line 957, in pytest_cmdline_parse\r\n    self.parse(args)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/config.py\", line 1121, in parse\r\n    self._preparse(args, addopts=addopts)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/config.py\", line 1092, in _preparse\r\n    args=args, parser=self._parser)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 745, in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 339, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 334, in <lambda>\r\n    _MultiCall(methods, kwargs, hook.spec_opts).execute()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 613, in execute\r\n    return _wrapped_call(hook_impl.function(*args), self.execute)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 254, in _wrapped_call\r\n    return call_outcome.get_result()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 265, in __init__\r\n    self.result = func()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/_pytest/vendored_packages/pluggy.py\", line 614, in execute\r\n    res = hook_impl.function(*args)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 97, in pytest_load_initial_conftests\r\n    plugin = CovPlugin(early_config.known_args_namespace, early_config.pluginmanager)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 152, in __init__\r\n    self.start(engine.Central)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/pytest_cov/plugin.py\", line 174, in start\r\n    self.cov_controller.start()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/pytest_cov/engine.py\", line 146, in start\r\n    self.cov.erase()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/coverage/control.py\", line 726, in erase\r\n    self._init()\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/coverage/control.py\", line 226, in _init\r\n    self.plugins = Plugins.load_plugins(self.config.plugins, self.config, self.debug)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/coverage/plugin_support.py\", line 40, in load_plugins\r\n    __import__(module)\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/django_coverage_plugin/__init__.py\", line 6, in <module>\r\n    from .plugin import DjangoTemplatePlugin\r\n  File \"/home/stefan/mygpo/venv/lib/python3.5/site-packages/django_coverage_plugin/plugin.py\", line 16, in <module>\r\n    from django.template.base import (\r\nImportError: cannot import name 'TOKEN_BLOCK'\r\n````\r\n\r\nI did not find anything in the (under development) [release notes](https://docs.djangoproject.com/en/dev/releases/2.1/). Is this something that should be addressed in django_coverage_plugin, or should I report it to django instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/49", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/49/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/49/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/49", "id": 274310874, "node_id": "MDU6SXNzdWUyNzQzMTA4NzQ=", "number": 49, "title": "Setting DJANGO_SETTINGS_MODULE", "user": {"login": "sebastian-code", "id": 5254850, "node_id": "MDQ6VXNlcjUyNTQ4NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5254850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebastian-code", "html_url": "https://github.com/sebastian-code", "followers_url": "https://api.github.com/users/sebastian-code/followers", "following_url": "https://api.github.com/users/sebastian-code/following{/other_user}", "gists_url": "https://api.github.com/users/sebastian-code/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebastian-code/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebastian-code/subscriptions", "organizations_url": "https://api.github.com/users/sebastian-code/orgs", "repos_url": "https://api.github.com/users/sebastian-code/repos", "events_url": "https://api.github.com/users/sebastian-code/events{/privacy}", "received_events_url": "https://api.github.com/users/sebastian-code/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-15T21:29:28Z", "updated_at": "2018-09-04T13:56:55Z", "closed_at": "2018-09-04T13:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now I have this `setup.cfg` file:\r\n```\r\n## http://pytest.org/latest/customize.html#adding-default-options\r\n[tool:pytest]\r\nDJANGO_SETTINGS_MODULE=config.settings.local\r\npython_files=tests.py test_*.py *_tests.py\r\naddopts=--cov=accountant --cov-config setup.cfg\r\n\r\n[coverage:run]\r\nsource=accountant/*\r\nomit=*/migrations/*,*/tests/*\r\n# plugins=django_coverage_plugin\r\n\r\n[flake8]\r\nmax-line-length=80\r\nexclude=.tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,build,dist,*.egg-info\r\nstatistics=True\r\n\r\n## Run with: pylint --rcfile=setup.cfg somepackage\r\n[pylint]\r\n.\r\n.\r\n.\r\n```\r\nEven when the environment variable `DJANGO_SETTINGS_MODULE` is being set inside the file, the package is not picking it, how is the proper way to do it? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/44", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/44/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/44/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/44", "id": 226449219, "node_id": "MDU6SXNzdWUyMjY0NDkyMTk=", "number": 44, "title": "Possible to remove Django from install_requires?", "user": {"login": "beaugunderson", "id": 61791, "node_id": "MDQ6VXNlcjYxNzkx", "avatar_url": "https://avatars0.githubusercontent.com/u/61791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beaugunderson", "html_url": "https://github.com/beaugunderson", "followers_url": "https://api.github.com/users/beaugunderson/followers", "following_url": "https://api.github.com/users/beaugunderson/following{/other_user}", "gists_url": "https://api.github.com/users/beaugunderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/beaugunderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beaugunderson/subscriptions", "organizations_url": "https://api.github.com/users/beaugunderson/orgs", "repos_url": "https://api.github.com/users/beaugunderson/repos", "events_url": "https://api.github.com/users/beaugunderson/events{/privacy}", "received_events_url": "https://api.github.com/users/beaugunderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-05-05T01:09:03Z", "updated_at": "2018-06-26T19:43:38Z", "closed_at": "2018-06-26T19:43:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django being in `install_requires` makes it hard for a project using `django_coverage_plugin` and `pip-compile` to specify their own version of Django.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/43", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/43/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/43/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/43", "id": 219813289, "node_id": "MDU6SXNzdWUyMTk4MTMyODk=", "number": 43, "title": "no coverage for the templates", "user": {"login": "matrixise", "id": 38737, "node_id": "MDQ6VXNlcjM4NzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/38737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matrixise", "html_url": "https://github.com/matrixise", "followers_url": "https://api.github.com/users/matrixise/followers", "following_url": "https://api.github.com/users/matrixise/following{/other_user}", "gists_url": "https://api.github.com/users/matrixise/gists{/gist_id}", "starred_url": "https://api.github.com/users/matrixise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matrixise/subscriptions", "organizations_url": "https://api.github.com/users/matrixise/orgs", "repos_url": "https://api.github.com/users/matrixise/repos", "events_url": "https://api.github.com/users/matrixise/events{/privacy}", "received_events_url": "https://api.github.com/users/matrixise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-06T07:46:45Z", "updated_at": "2017-04-07T12:53:02Z", "closed_at": "2017-04-07T12:53:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI am using Python 3.5, django 1.9, coverage 4.3.4 and django-coverage-plugin (1.5.0)\r\n\r\nHere is my `.coveragerc`\r\n\r\n```\r\n[run]\r\nbranch = True\r\nomit =\r\n    */migrations/*\r\nplugins =\r\n   django_coverage_plugin\r\n```\r\n\r\nbut as you can check in the following report, the coverage of my templates is empty.\r\n\r\n```\r\n$ coverage report | grep html\r\ninternship/templates/internship_detail.html                         46     46      0      0     0%\r\ninternship/templates/internship_modification_student.html          112    112      0      0     0%\r\ninternship/templates/internships.html                              202    202      0      0     0%\r\ninternship/templates/internships_home.html                          83     83      0      0     0%\r\ninternship/templates/internships_masters.html                      137    137      0      0     0%\r\ninternship/templates/internships_stud.html                         235    235      0      0     0%\r\ninternship/templates/period_create.html                             49     49      0      0     0%\r\ninternship/templates/period_places_edit.html                        24     24      0      0     0%\r\ninternship/templates/periods.html                                   58     58      0      0     0%\r\n```\r\n\r\nAny idea ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/32", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/32/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/32/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/32", "id": 201439098, "node_id": "MDU6SXNzdWUyMDE0MzkwOTg=", "number": 32, "title": "Version 1.4 seems to break when django.templates.backends has not been initialized", "user": {"login": "PamelaM", "id": 849341, "node_id": "MDQ6VXNlcjg0OTM0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/849341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PamelaM", "html_url": "https://github.com/PamelaM", "followers_url": "https://api.github.com/users/PamelaM/followers", "following_url": "https://api.github.com/users/PamelaM/following{/other_user}", "gists_url": "https://api.github.com/users/PamelaM/gists{/gist_id}", "starred_url": "https://api.github.com/users/PamelaM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PamelaM/subscriptions", "organizations_url": "https://api.github.com/users/PamelaM/orgs", "repos_url": "https://api.github.com/users/PamelaM/repos", "events_url": "https://api.github.com/users/PamelaM/events{/privacy}", "received_events_url": "https://api.github.com/users/PamelaM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 162686745, "node_id": "MDU6TGFiZWwxNjI2ODY3NDU=", "url": "https://api.github.com/repos/nedbat/django_coverage_plugin/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-01-17T23:44:13Z", "updated_at": "2017-02-07T01:56:06Z", "closed_at": "2017-02-07T01:56:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is clearly a bug caused by my recent PR.\r\n\r\n```\r\n  Coverage.py warning: Disabling plugin 'django_coverage_plugin.DjangoTemplatePlugin' due to an exception:\r\n Traceback (most recent call last):\r\n   File \"/home/teamcity/.virtualenvs/addgene1.8/local/lib/python2.7/site-packages/coverage/control.py\", line 476, in _should_trace_internal\r\n     file_tracer = plugin.file_tracer(canonical)\r\n   File \"/home/teamcity/.virtualenvs/addgene1.8/local/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 158, in file_tracer\r\n     self.debug_checked = check_debug()\r\n   File \"/home/teamcity/.virtualenvs/addgene1.8/local/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 56, in check_debug\r\n     if not hasattr(django.template.backends, \"django\"):\r\n```\r\n\r\nI'll work though a fix PR in the next two days.\r\n\r\nBecause of the chicken-and-egg issues of starting, I think the need for a test_project that can be used for full integration testing via subprocess calls is even more vital.  There are too many \"shenanigans\" involved with getting coverage/django startup initialization order reversed and re-run during the current test process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/29", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/29/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/29/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/29", "id": 198017283, "node_id": "MDU6SXNzdWUxOTgwMTcyODM=", "number": 29, "title": "Breaking running of coverage when enabled", "user": {"login": "clokep", "id": 517124, "node_id": "MDQ6VXNlcjUxNzEyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/517124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clokep", "html_url": "https://github.com/clokep", "followers_url": "https://api.github.com/users/clokep/followers", "following_url": "https://api.github.com/users/clokep/following{/other_user}", "gists_url": "https://api.github.com/users/clokep/gists{/gist_id}", "starred_url": "https://api.github.com/users/clokep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clokep/subscriptions", "organizations_url": "https://api.github.com/users/clokep/orgs", "repos_url": "https://api.github.com/users/clokep/repos", "events_url": "https://api.github.com/users/clokep/events{/privacy}", "received_events_url": "https://api.github.com/users/clokep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-29T14:40:38Z", "updated_at": "2017-01-21T00:02:29Z", "closed_at": "2017-01-21T00:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for this great plug-in! I've found it quite useful for testing some of the logic in my templates. \ud83d\udc4d \r\n\r\nI know this used to work in my project, but I'm not sure when it broke. (I don't think this has updated in a while, it could have been a Django update that broke this?)\r\n\r\nMy project is using Django 1.10.4, coverage 4.3.1, django-coverage-plugin 1.3.1. (I also tried with coverage 4.2, that exhibited the same behavior.)\r\n\r\nWhile running with this I'm getting a stack trace:\r\n```bash\r\n/vagrant$ coverage run manage.py test\r\nCoverage.py warning: Disabling plugin 'django_coverage_plugin.DjangoTemplatePlugin' due to an exception:\r\nTraceback (most recent call last):\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/coverage/control.py\", line 497, in _should_trace_internal\r\n    file_tracer = plugin.file_tracer(canonical)\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 154, in file_tracer\r\n    check_debug()\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 55, in check_debug\r\n    templates = getattr(settings, 'TEMPLATES', [])\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 53, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 41, in _setup\r\n    self._wrapped = Settings(settings_module)\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 97, in __init__\r\n    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/vagrant/my_project/settings.py\", line 8, in <module>\r\n    from django.contrib.messages import constants as message_constants\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/contrib/messages/__init__.py\", line 1, in <module>\r\n    from django.contrib.messages.api import *  # NOQA\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/contrib/messages/api.py\", line 3, in <module>\r\n    from django.http import HttpRequest\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/http/__init__.py\", line 5, in <module>\r\n    from django.http.response import (\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/http/response.py\", line 13, in <module>\r\n    from django.core.serializers.json import DjangoJSONEncoder\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/core/serializers/__init__.py\", line 23, in <module>\r\n    from django.core.serializers.base import SerializerDoesNotExist\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/core/serializers/base.py\", line 4, in <module>\r\n    from django.db import models\r\nImportError: cannot import name models\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 45, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 316, in execute\r\n    settings.INSTALLED_APPS\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 53, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 41, in _setup\r\n    self._wrapped = Settings(settings_module)\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 97, in __init__\r\n    mod = importlib.import_module(self.SETTINGS_MODULE)\r\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/vagrant/my_project/settings.py\", line 8, in <module>\r\n    from django.contrib.messages import constants as message_constants\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/contrib/messages/__init__.py\", line 1, in <module>\r\n    from django.contrib.messages.api import *  # NOQA\r\n  File \"/usr/local/venv/local/lib/python2.7/site-packages/django/contrib/messages/api.py\", line 1, in <module>\r\n    from django.contrib.messages import constants\r\nImportError: cannot import name constants\r\n```\r\n\r\nThis seems to be because I'm importing `django.contrib.messages.constants` in my settings file, note that if I remove this line I get other errors about importing. This seems related to loading of Django settings before Django is configured (see https://github.com/nedbat/django_coverage_plugin/issues/28#issuecomment-243723099), but with much worse consequences.\r\n\r\nLet me know if there is anything I can do to help confirm my suspicion or narrow this down! Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/28", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/28/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/28/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/28", "id": 174019402, "node_id": "MDU6SXNzdWUxNzQwMTk0MDI=", "number": 28, "title": "settings.py not covered when plugin enabled on Django 1.10", "user": {"login": "twschiller", "id": 1879821, "node_id": "MDQ6VXNlcjE4Nzk4MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1879821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twschiller", "html_url": "https://github.com/twschiller", "followers_url": "https://api.github.com/users/twschiller/followers", "following_url": "https://api.github.com/users/twschiller/following{/other_user}", "gists_url": "https://api.github.com/users/twschiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/twschiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twschiller/subscriptions", "organizations_url": "https://api.github.com/users/twschiller/orgs", "repos_url": "https://api.github.com/users/twschiller/repos", "events_url": "https://api.github.com/users/twschiller/events{/privacy}", "received_events_url": "https://api.github.com/users/twschiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-30T13:30:17Z", "updated_at": "2017-01-26T15:27:52Z", "closed_at": "2017-01-26T15:27:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I enable django_coverage_plugin for Django 1.10, the settings.py file for my project is not covered. However, I know settings.py is being run because the tests are still passing.\n\nCoverage metrics:\n- Without plugin: https://coveralls.io/builds/7668992/source?filename=openintel%2Fsettings.py\n- With plugin: https://coveralls.io/builds/7668159/source?filename=openintel%2Fsettings.py\n\nHere's a diff showing how I enabled the plugin: https://github.com/twschiller/open-synthesis/compare/template-coverage-dev\n\nI'm running coverage as: `coverage run --source='.' manage.py test`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/27", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/27/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/27/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/27", "id": 167231726, "node_id": "MDU6SXNzdWUxNjcyMzE3MjY=", "number": 27, "title": "template debug should default to DEBUG", "user": {"login": "knyghty", "id": 3871354, "node_id": "MDQ6VXNlcjM4NzEzNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3871354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knyghty", "html_url": "https://github.com/knyghty", "followers_url": "https://api.github.com/users/knyghty/followers", "following_url": "https://api.github.com/users/knyghty/following{/other_user}", "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}", "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions", "organizations_url": "https://api.github.com/users/knyghty/orgs", "repos_url": "https://api.github.com/users/knyghty/repos", "events_url": "https://api.github.com/users/knyghty/events{/privacy}", "received_events_url": "https://api.github.com/users/knyghty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-24T12:39:44Z", "updated_at": "2017-01-26T14:17:00Z", "closed_at": "2017-01-26T14:17:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per [docs](https://docs.djangoproject.com/en/1.9/topics/templates/#django.template.backends.django.DjangoTemplates) it should default to `DEBUG`. I'm not sure if this is django's fault that it isn't explicitly set somehow, or the plugin's fault that it assumes False.\n\nIn any case, if I'm not mistaken, it can be fixed by changing:\n`if not template_settings.get('OPTIONS', {}).get('debug', False)`\nto:\n`if not template_settings.get('OPTIONS', {}).get('debug', settings.DEBUG)`\n\nIf `DEBUG` happens to not be in the user's settings file, `settings.DEBUG` defaults to `False`, which seems sensible to me.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/26", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/26/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/26/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/26", "id": 159834709, "node_id": "MDU6SXNzdWUxNTk4MzQ3MDk=", "number": 26, "title": "Failure on tip of Django", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-12T16:09:29Z", "updated_at": "2017-01-17T14:52:53Z", "closed_at": "2017-01-17T14:52:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The tip of Django is failing the test suite like this:\n\n```\npy35-djangotip runtests: commands[1] | python -m unittest discover -b\n............ss........................................E\n======================================================================\nERROR: test_string_template (tests.test_simple.StringTemplateTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/ned/coverage/django_coverage_plugin/tests/test_simple.py\", line 256, in test_string_template\n    options={},\n  File \"/Users/ned/coverage/django_coverage_plugin/tests/plugin_test.py\", line 129, in run_django_coverage\n    tem = Template(text)\n  File \"/Users/ned/coverage/django_coverage_plugin/.tox/py35-djangotip/lib/python3.5/site-packages/django/template/base.py\", line 184, in __init__\n    engine = Engine.get_default()\n  File \"/Users/ned/coverage/django_coverage_plugin/.tox/py35-djangotip/lib/python3.5/site-packages/django/template/engine.py\", line 81, in get_default\n    \"No DjangoTemplates backend is configured.\")\ndjango.core.exceptions.ImproperlyConfigured: No DjangoTemplates backend is configured.\n\n----------------------------------------------------------------------\nRan 55 tests in 0.735s\n\nFAILED (errors=1, skipped=2)\n```\n\ncarljm and apollo13 helped in #django to diagnose it:\n\n```\n[13:54:46] <nedbat> apollo13: if you are interested in looking at the django_coverage_plugin failure, I could walk you through it.\n[13:54:56] <apollo13> nedbat: sure\n[13:56:10] <nedbat> apollo13: you've seen the tox output? https://gist.github.com/nedbat/6713e07bdd3511dbcd1d250f94d1d818\n[13:56:32] <apollo13> nedbat: yeah\n[13:56:49] <apollo13> sure\n[13:57:15] <nedbat> apollo13: so there's one test that fails, the test where I make a template from a string, rather than from a file. and it only fails on tip, not 1.9\n[13:57:28] <apollo13> nedbat: all I need to do is clone and run tox?\n[13:57:35] <nedbat> apollo13: yup\n[13:57:49] <apollo13> nedbat: Ok, will submit a PR once I fiured it out\n[13:58:06] <nedbat> apollo13: that would be very cool, thanks! I'm around if things go wrong.\n[13:58:28] <apollo13> holy shit, django14 , /me removes a few things from tox.ini^^\n[13:59:22] <apollo13> sounds like it\n[13:59:46] <apollo13> though you should check it on master\n[14:00:03] <nedbat> apollo13: you can just run the environments you want, no need to edit tox.ini\n[14:00:21] <apollo13> nedbat: tells you how much I use tox :D\n[14:00:48] <nedbat> apollo13: tox -e py27-djangotip\n[14:00:51] <apollo13> nedbat: I am getting way more errors though\n[14:01:25] <apollo13> https://dpaste.de/3rJY/raw\n[14:01:56] <apollo13> which sounds like an ordering problem\n[14:02:14] <apollo13> nedbat: can I tell tox to be more verbose, ie show me the test it executes?\n[14:02:31] <nedbat> apollo13: the test name is above each stack trace\n[14:02:44] <apollo13> nedbat: yes, but I'd also want the ones which are okay\n[14:03:08] <apollo13> ie more verbose unittest output\n[14:04:15] <apollo13> ah there we go, copied gthe unittest invocation out\n[14:04:39] <nedbat> apollo13: i tried tip again, i still only get one failure?\n[14:04:55] <apollo13> nedbat: odd, as I said, I just cloned your repo and did tox -e py27-djangotip\n[14:05:34] <nedbat> apollo13: btw, this will do what you want with tox:  tox -e py27-djangotip -- discover -b -v\n[14:05:45] <nedbat> apollo13: what version of tox?\n[14:05:55] <apollo13> nedbat: whatever pip just installed, so latest\n[14:06:11] <apollo13> 2.3.1 imported from /home/florian/.local/lib/python2.7/site-packages/tox/__init__.pyc\n[14:07:50] <nedbat> apollo13: blah, i still get only one failure.  I wonder if you have environment variables that i don't?\n[14:08:25] <apollo13> nedbat: dunno, but that error is test isolation -- I have an idea\n[14:08:39] <nedbat> apollo13: comment out \"passenv\" line in tox.ini ?\n[14:09:20] <apollo13> will do later, I can repro the error, shouldn't be that hard to fix\n[14:11:01] <nedbat> apollo13: thanks, I appreciate whatever you can give me, even if it's a clue.\n[14:16:42] <apollo13> nedbat: are you doing monkey patching somewhere?\n[14:17:04] <nedbat> apollo13: no monkeypatching (I think....)\n[14:20:52] <apollo13> nedbat: It fails cause <django.template.backends.django.DjangoTemplates object at 0x7f14819d86d0> is not an instance of <class 'django.template.backends.django.DjangoTemplates'>\n[14:20:56] <apollo13> which makes literally no sense\n[14:21:13] <nedbat> apollo13: buh?\n[14:22:35] <apollo13> ok, time for pdb\n[14:28:58] <apollo13> nedbat: what does coverage do :D\n[14:29:03] <apollo13> I get new ids for classes\n[14:29:32] <nedbat> apollo13: sounds like double importing.\n[14:29:36] <apollo13> that is I get a new instance of types -- as if sys.modules got nuked and reimported\n[14:29:43] <nedbat> apollo13: my tests do that.\n[14:29:45] <apollo13> paths are always absolute, but yeah\n[14:29:52] <nedbat> apollo13: but it should be consistent within a test.\n[14:29:53] <apollo13> well that won't work\n[14:29:57] <apollo13> show me\n[14:31:05] <apollo13> nedbat: all I can tell you is that django.template.backends.django gets reloaded, but you still have refs to the old module\n[14:31:19] <nedbat> apollo13: hmm, i wonder why only that tests minds.\n[14:31:22] <nedbat> *test\n[14:32:14] <apollo13> nedbat: can you show me where the sys.modules hackers happens, or rather based on what?\n[14:32:56] <nedbat> apollo13: every test notes the state of sys.modules, and restores it at the end of the test.\n[14:33:09] <nedbat> apollo13: it's in a mixin in unittest-mixins\n[14:34:13] <nedbat> apollo13: can you tell me where the class comparison is that breaks if the class is redefined?\n[14:34:16] <apollo13> sure\n[14:34:43] <apollo13> nedbat: that one fails https://github.com/django/django/blob/master/django/template/engine.py#L74-L75\n[14:34:47] <apollo13> it returns zero engines here\n[14:34:53] <apollo13> since that method imports  from django.template.backends.django import DjangoTemplates\n[14:35:07] <apollo13> if you do sys.modules hackery, this will reimport on every test\n[14:35:24] <apollo13> but engines.all() stays constant and already has an instance of that!\n[14:36:09] <nedbat> apollo13: is this code new since 1.9?\n[14:36:25] <nedbat> oh, the lru_cache....\n[14:36:48] <nedbat> ugh, hidden mutable globals\n[14:37:06] <apollo13> yeah, the lru_cache might hide that for a while\n[14:37:15] <apollo13> that is true, didn't check for that\n[14:37:34] <apollo13> so my analysis might not be spot on, but somewhere there is certainly the source of the problems\n[14:37:45] <nedbat> apollo13: no, i think you are right. \n[14:38:55] <nedbat> apollo13: hmm, lru_cache is also in 1.9\n[14:39:18] <apollo13> nedbat: yes, I do not think it is because of lru_cache, add a print to backends.django print \"HI I AM IMPORTED\"\n[14:40:14] <apollo13> and a print into https://github.com/django/django/blob/2a20ebe6a5b6606f99091530067cca05fb7ce853/django/template/__init__.py and you will see that the init module does not change\n[14:40:25] <apollo13> therefore engines will have the \"old engines\"\n[14:40:47] <apollo13> nedbat: I hope that is enough for you to get further\n[14:41:01] <apollo13> I am somewhat out of ideas there\n[14:41:45] <apollo13> nedbat: I'll tell you the revision in django that caused this in a sec\n[14:43:45] <apollo13> nedbat: 9023696613b278bb96a2ab5744da5c2bac023ad7\n[14:44:08] <nedbat> apollo13: how did you find that commit?\n[14:44:15] <apollo13> nedbat: git bisect\n[14:44:40] <nedbat> apollo13: i was afraid of that :)  That means I still need to read the code to understand what part is the problem! :)\n[14:45:37] <carljm> nedbat: it's just the imports, I think\n[14:45:47] <apollo13> nedbat: nope, I can tell you\n[14:45:53] <apollo13> add to django/template/loader.py\n[14:45:57] <apollo13> namely: from .backends.django import DjangoTemplates\n[14:46:05] <apollo13> this causes the failure to disappear\n[14:46:28] <carljm> because that import causes django.template.backends.django to be in sys.modules prior to any test\n[14:46:34] <apollo13> jupp\n[14:46:35] <nedbat> carljm: hmm, ok.\n[14:46:47] <carljm> without that import, you don't ever import it until inside a test\n[14:46:50] <nedbat> this sounds hairy.\n[14:46:52] <carljm> so each test is getting its own copy\n[14:47:20] <apollo13> jupp, but the engine handler still has the old one\n[14:47:25] <carljm> but an instance of DjangoTemplates from the first test's copy of that module gets stored in engines.all(), permanently\n[14:47:28] <carljm> exactly\n[14:47:32] <nedbat> apollo13, carljm: thanks, this is very helpful.\n[14:47:46] <carljm> apollo13: great detective work!\n[14:48:05] <apollo13> is it okay if I put down my debugger hat and watch a movie with the girls, or can I be of further assistance?\n[14:48:16] <carljm> nedbat: sorry I dropped the ball on this yesterday; helping to run the Django sprint basically involves constant interruptions :-)\n[14:48:34] <nedbat> carljm: no worries, i was overloaded just managing my small table of coverage.py sprinters.\n[14:48:52] <nedbat> apollo13: movie with the girls sounds like a much better use of time \n[14:49:01] <apollo13> that :D\n[14:49:19] <apollo13> cyl and keep me updated, sounds like a fun problem to have\n[14:49:45] <carljm> apollo13: have fun :-)\n[14:50:01] <nedbat> carljm: i guess i'm still a little behind: how does *removing* an import mean that we have something imported earlier than before?\n[14:50:15] <carljm> nedbat: no, it's imported later now; that's the problem\n[14:50:57] <carljm> in Django 1.9, with the module-level import of backends.django in template.loader, it gets imported before any of your tests run\n[14:51:19] <carljm> so it becomes part of the \"initial state\" of sys.modules, as far as your per-test reset code is concerned\n[14:51:29] <carljm> therefore you only ever have the one copy of DjangoTemplates class around\n[14:51:33] <nedbat> carljm: it's because there are two imports that either both need to happen before tests run, or both need to happen after, and now they are split across that boundary?\n[14:52:21] <carljm> nedbat: i don't know how many imports there are exactly, I wouldn't quite phrase it that way\n[14:52:51] <carljm> anything that is imported before your test-wrapping sys.modules-resetting code runs becomes part of the permanent global state of sys.modules\n[14:53:13] <nedbat> carljm: yes\n[14:53:16] <carljm> which is normally the way sys.modules always works -- it's global and permanent -- stuff gets added to it, but nor removed and then reloaded\n[14:53:22] <nedbat> carljm: yup\n[14:53:42] <carljm> but now that Django isn't causing an early import of template.backends.django, it never gets imported until inside your first test that runs\n[14:54:07] <carljm> and the lazy initialization of the global list of configured Django template engines happens _inside_ your first test\n[14:54:31] <nedbat> carljm: the global inside lru_cache?\n[14:54:51] * nedbat wishes lru_cache had a classmethod called clear_all_caches()\n[14:55:35] <carljm> no, I don't think lru_cache is related\n[14:55:46] <carljm> the global instance of EngineHandler\n[14:56:07] <carljm> that's where Django maintains a list of all the template engines that you've configured in your settings\n[14:56:45] <carljm> the code that's failing inside Engine.get_default() calls engines.all() on line 74\n[14:57:03] <carljm> \"engines\" there is a global singleton instance of EngineHandler\n[14:57:21] <nedbat> ah\n[14:57:26] <carljm> instantiated at https://github.com/django/django/blob/master/django/template/__init__.py#L47\n[14:57:55] <nedbat> yes\n[14:58:55] <carljm> you either need this cached property exercised sooner: https://github.com/django/django/blob/master/django/template/utils.py#L26\n[14:59:04] <carljm> or you just need to force an earlier import of template.backends.django\n[14:59:23] <carljm> so that when that cached property _is_ exercised, it's using a copy of the module that is permanent, not ephemeral to the test\n[15:00:48] <nedbat> carljm: yes, thanks for the hand-holding, i'll have to consider how best to get back my isolation.\n[15:00:53] <carljm> nedbat: I'd need to look at your tests again to be sure, but I think your best bet to get around all this global state is to instantiate a DjangoTemplates engine explicitly in your tests.\n[15:01:22] <carljm> the template engine used to be full of global state spread all over the place, so we extracted out the engine to hold all that state\n[15:01:50] <carljm> we still need the global state in order to have things implicitly use the configuration from settings, which are process-global, but that global state is now concentrated in EngineHandler\n[15:02:12] <carljm> but the idea is that if you need isolation, you shouldn't rely on the TEMPLATES setting or on Engine.get_default() at all\n[15:02:14] <nedbat> carljm: i'd like to have my code have a flavor of, \"I don't know what's in Django, but I know how to force it to do everything from scratch each time\"\n[15:02:31] <nedbat> carljm: well, my tests need to test how TEMPLATES is interacting with my code.\n[15:03:01] <carljm> nedbat: how does your code interact with the TEMPLATES setting, specifically?\n[15:03:38] <nedbat> carljm: i have tests that the plugin properly detects if debug is on or off, for example.\n[15:03:56] <nedbat> carljm: and the latest fix was to ensure that I wasnt reading settings when the real program didn't need to.\n[15:04:03] <nedbat> carljm: there's a lot of settings choreography\n[15:07:28] <apollo13> carljm: the cached_property afaik is not an issue, since it just builds a list of template engine args, the issue is the caching in https://github.com/django/django/blob/master/django/template/utils.py#L63-L83\n[15:08:31] <carljm> apollo13: yes, you're right, it's actually __getitem__ that imports and instantiates the backend class\n[15:09:33] <nedbat> carljm, apollo13: right, but if \"engines = EngineHandler()\" were re-executed for each test, that would fix it.\n[15:09:58] <nedbat> apollo13: how's the movie? :)\n[15:10:06] <carljm> nedbat: well, debug on/off comes from settings, but eventually it becomes an attribute of the engine instance: https://github.com/django/django/blob/master/django/template/backends/django.py#L27\n[15:10:45] <carljm> so even for correctness you should preferably be detecting it there, not looking at settings directly. and if so, you could write that test with an isolated engine instance\n[15:10:48] <nedbat> carljm: right. at heart, the problem is that some of Django is imported before tests start, and so persists, and some is imported after, and so is re-imported for each test.\n[15:11:34] <carljm> testing that you aren't triggering a settings import is a different thing of course, but still doesn't mean that you couldn't write most of your template-related tests with an isolated engine you create yourself\n[15:11:57] <nedbat> carljm: you're saying this function should be written differently: https://github.com/nedbat/django_coverage_plugin/blob/6f8976d9a3faedfb441ee8f53c3bf4bdcc434545/django_coverage_plugin/plugin.py#L39-L46\n[15:13:27] <carljm> nedbat: Yes, I am. That function as currently written is (I think) needlessly re-implementing logic that Django already implements. And I'm not sure the interface that function currently promises is even sensible for a multiple-template-engines world\n[15:14:14] <nedbat> carljm: this plugin is only concerned with the Django template engine, but i take your point.\n[15:14:18] <carljm> nedbat: because \"is template debugging on or off\" is a per-engine question, not a global question\n[15:14:27] <carljm> nedbat: well, you can have multiple DjangoTemplates engines configured\n[15:14:35] <carljm> with different settings, source directories, etc\n[15:14:53] <nedbat> carljm: true true, and i just moved this check to later, where I could examine the engine directly, so that's a good push in the right direction.\n[15:15:28] <carljm> nedbat: though I think it may be difficult for you to fully adapt to the new template-engines world before dropping compatibility with pre-1.8 versions of Django.\n[15:15:41] <nedbat> carljm: why is that? What beasts lie in store for me?\n[15:16:18] <carljm> nedbat: well, because pre-1.8 there was no such thing as a template engine instance\n[15:16:35] <nedbat> carljm: i see\n[15:16:51] <carljm> the configuration that is now encapsulated in an engine instance (like an instance of DjangoTemplates) used to be spread implicitly through a bunch of different settings, and ad-hoc cached in various places\n[15:17:14] <nedbat> carljm: ok.\n[15:17:43] <carljm> i think adapting your approach and your tests to be engine-centric will make your life much easier in terms of isolation\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/24", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/24/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/24/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/24", "id": 153887052, "node_id": "MDU6SXNzdWUxNTM4ODcwNTI=", "number": 24, "title": "No template lines covered", "user": {"login": "degustaf", "id": 13491423, "node_id": "MDQ6VXNlcjEzNDkxNDIz", "avatar_url": "https://avatars1.githubusercontent.com/u/13491423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/degustaf", "html_url": "https://github.com/degustaf", "followers_url": "https://api.github.com/users/degustaf/followers", "following_url": "https://api.github.com/users/degustaf/following{/other_user}", "gists_url": "https://api.github.com/users/degustaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/degustaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/degustaf/subscriptions", "organizations_url": "https://api.github.com/users/degustaf/orgs", "repos_url": "https://api.github.com/users/degustaf/repos", "events_url": "https://api.github.com/users/degustaf/events{/privacy}", "received_events_url": "https://api.github.com/users/degustaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-09T22:46:52Z", "updated_at": "2018-09-05T14:27:02Z", "closed_at": "2018-09-05T14:27:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have multiple tests that render a response, but I am showing 0 coverage in my templates.\n\nThe repo is https://github.com/degustaf/symmetrical-eureka\nAnd the coverage report can be seen at https://travis-ci.org/degustaf/symmetrical-eureka/jobs/128951675\n\nPossibly related, I have a base template for displaying a common header for all pages on the site, which does not show at all in the coverage report.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/23", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/23/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/23/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/23", "id": 150332509, "node_id": "MDU6SXNzdWUxNTAzMzI1MDk=", "number": 23, "title": "Requests to external page trrigers an error?", "user": {"login": "oz123", "id": 1083045, "node_id": "MDQ6VXNlcjEwODMwNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1083045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oz123", "html_url": "https://github.com/oz123", "followers_url": "https://api.github.com/users/oz123/followers", "following_url": "https://api.github.com/users/oz123/following{/other_user}", "gists_url": "https://api.github.com/users/oz123/gists{/gist_id}", "starred_url": "https://api.github.com/users/oz123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oz123/subscriptions", "organizations_url": "https://api.github.com/users/oz123/orgs", "repos_url": "https://api.github.com/users/oz123/repos", "events_url": "https://api.github.com/users/oz123/events{/privacy}", "received_events_url": "https://api.github.com/users/oz123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-22T10:25:29Z", "updated_at": "2017-01-19T00:03:25Z", "closed_at": "2017-01-19T00:03:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some how calling a URL to an external resource inside my view triggers the following exception:\n\n```\n$ DJANGO_SETTINGS_MODULE=sharescreening.settings.devlocal coverage run manage.py test --failfast -v 2\nCreating test database for alias 'default' ('/home/oznt/Software/screenshares/sharescreening/../sharescreening/test-db.sqlite3')...\nDestroying old test database 'default'...\nOperations to perform:\n  Synchronize unmigrated apps: staticfiles, messages, select_multiple_field\n  Apply all migrations: admin, contenttypes, sharescreening, auth, sessions\nSynchronizing apps without migrations:\n  Creating tables...\n    Running deferred SQL...\n  Installing custom SQL...\nRunning migrations:\n  Rendering model states... DONE\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  ... snipped ...\n  Applying sharescreening.0023_searchfilterpreview_lang... OK\ntest_1_create_bookmarks (sharescreening.tests.TestBookmarks) ... ERROR\n\n======================================================================\nERROR: test_1_create_bookmarks (sharescreening.tests.TestBookmarks)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"sharescreening/tests.py\", line 282, in setUp\n    self._login('normaluser', 'secretz').follow()\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webtest/response.py\", line 102, in follow\n    return self._follow(**kw)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webtest/response.py\", line 90, in _follow\n    return self.test_app.get(abslocation, **kw)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django_webtest/__init__.py\", line 111, in get\n    url, params, headers, extra_environ, status, expect_errors, **kwargs)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webtest/app.py\", line 323, in get\n    expect_errors=expect_errors)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django_webtest/__init__.py\", line 74, in do_request\n    response = super(DjangoTestApp, self).do_request(req, status, expect_errors)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webtest/app.py\", line 606, in do_request\n    res = req.get_response(app, catch_exc_info=True)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webob/request.py\", line 1295, in send\n    application, catch_exc_info=True)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webob/request.py\", line 1263, in call_application\n    app_iter = application(self.environ, start_response)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/webtest/lint.py\", line 198, in lint_app\n    iterator = application(environ, start_response_wrapper)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/contrib/staticfiles/handlers.py\", line 63, in __call__\n    return self.application(environ, start_response)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/core/handlers/wsgi.py\", line 189, in __call__\n    response = self.get_response(request)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 218, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 164, in get_response\n    response = response.render()\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/response.py\", line 158, in render\n    self.content = self.rendered_content\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/response.py\", line 135, in rendered_content\n    content = template.render(context, self._request)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/backends/django.py\", line 74, in render\n    return self.template.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/base.py\", line 210, in render\n    return self._render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/test/utils.py\", line 96, in instrumented_test_render\n    return self.nodelist.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/base.py\", line 905, in render\n    bit = self.render_node(node, context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/debug.py\", line 79, in render_node\n    return node.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/loader_tags.py\", line 135, in render\n    return compiled_parent._render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/test/utils.py\", line 96, in instrumented_test_render\n    return self.nodelist.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/base.py\", line 905, in render\n    bit = self.render_node(node, context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/debug.py\", line 79, in render_node\n    return node.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/loader_tags.py\", line 65, in render\n    result = block.nodelist.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/base.py\", line 905, in render\n    bit = self.render_node(node, context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/debug.py\", line 79, in render_node\n    return node.render(context)\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django/template/defaulttags.py\", line 161, in render\n    values = list(values)\n  File \"sharescreening/views_utils.py\", line 22, in _replace_broken_link\n    if check_broken_link(document.get('picture', '')):\n  File \"sharescreening/utils.py\", line 58, in check_broken_link\n    h.request('HEAD', parsed.path)\n  File \"/usr/lib/python2.7/httplib.py\", line 979, in request\n    self._send_request(method, url, body, headers)\n  File \"/usr/lib/python2.7/httplib.py\", line 1013, in _send_request\n    self.endheaders(body)\n  File \"/usr/lib/python2.7/httplib.py\", line 975, in endheaders\n    self._send_output(message_body)\n  File \"/usr/lib/python2.7/httplib.py\", line 835, in _send_output\n    self.send(msg)\n  File \"/usr/lib/python2.7/httplib.py\", line 801, in send\n    if self.debuglevel > 0:\n  File \"/home/oznt/.virtualenvs/screenshares/local/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 170, in line_number_range\n    assert frame.f_code.co_name == 'render'\nAssertionError\n\n----------------------------------------------------------------------\nRan 1 test in 0.308s\n\nFAILED (errors=1)\nDestroying test database for alias 'default' ('/home/oznt/Software/screenshares/sharescreening/../sharescreening/test-db.sqlite3')...\n```\n\nThis does not happened with simple testing:\n\n```\n$ DJANGO_SETTINGS_MODULE=sharescreening.settings.devlocal manage.py test --failfast -v 2\nCreating test database for alias 'default' ('/home/oznt/Software/screenshares/sharescreening/../sharescreening/test-db.sqlite3')...\nDestroying old test database 'default'...\nOperations to perform:\n  Synchronize unmigrated apps: staticfiles, messages, select_multiple_field\n  Apply all migrations: admin, contenttypes, sharescreening, auth, sessions\nSynchronizing apps without migrations:\n  Creating tables...\n    Running deferred SQL...\n  Installing custom SQL...\nRunning migrations:\n  Rendering model states... DONE\n  Applying contenttypes.0001_initial... OK\n... snipped ...\n  Applying sharescreening.0019_auto_20160415_1303... OK\n  Applying sharescreening.0020_auto_20160419_1525... OK\n  Applying sharescreening.0021_auto_20160419_1600... OK\n  Applying sharescreening.0022_auto_20160420_1425... OK\n  Applying sharescreening.0023_searchfilterpreview_lang... OK\ntest_1_create_bookmarks (sharescreening.tests.TestBookmarks) ... ok\ntest_2_bookmark_list (sharescreening.tests.TestBookmarks) ... ok\n```\n\nCan you tell what is going on here? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/20", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/20/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/20/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/20", "id": 135265261, "node_id": "MDU6SXNzdWUxMzUyNjUyNjE=", "number": 20, "title": "Add support for multiple instances of the `django.template.backends.django.DjangoTemplates`.", "user": {"login": "charettes", "id": 9293, "node_id": "MDQ6VXNlcjkyOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charettes", "html_url": "https://github.com/charettes", "followers_url": "https://api.github.com/users/charettes/followers", "following_url": "https://api.github.com/users/charettes/following{/other_user}", "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}", "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charettes/subscriptions", "organizations_url": "https://api.github.com/users/charettes/orgs", "repos_url": "https://api.github.com/users/charettes/repos", "events_url": "https://api.github.com/users/charettes/events{/privacy}", "received_events_url": "https://api.github.com/users/charettes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-21T21:57:54Z", "updated_at": "2016-04-03T13:02:25Z", "closed_at": "2016-04-03T13:02:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the moment a `ValueError` is raised as soon as `TEMPLATES` contain more than a single entry.\n\nAFAIK this plugin already supports multiple `TEMPLATES` entries as long as they all use the `DjangoTemplates` backend.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/18", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/18/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/18/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/18", "id": 130530474, "node_id": "MDU6SXNzdWUxMzA1MzA0NzQ=", "number": 18, "title": "Missing DJANGO_SETTINGS_MODULE", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2016-02-02T00:42:36Z", "updated_at": "2018-10-16T19:35:55Z", "closed_at": "2016-06-02T16:07:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "With empty `.coveragerc`:\n\n```\n$ coverage run foo/manage.py test bar\n[...works...]\n```\n\nWith django-coverage-plugin in `.coveragerc`:\n\n```\n[run]\nplugins =\n  django_coverage_plugin\n```\n\n```\n$ coverage run foo/manage.py test bar\n[...]\ndjango.core.exceptions.ImproperlyConfigured: Requested setting TEMPLATES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\n```\n\n`manage.py` is unmodified (generated by Django).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/17", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/17/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/17/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/17", "id": 116837701, "node_id": "MDU6SXNzdWUxMTY4Mzc3MDE=", "number": 17, "title": "Add a note that `TEMPLATE_DEBUG` must be enabled.", "user": {"login": "charettes", "id": 9293, "node_id": "MDQ6VXNlcjkyOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charettes", "html_url": "https://github.com/charettes", "followers_url": "https://api.github.com/users/charettes/followers", "following_url": "https://api.github.com/users/charettes/following{/other_user}", "gists_url": "https://api.github.com/users/charettes/gists{/gist_id}", "starred_url": "https://api.github.com/users/charettes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charettes/subscriptions", "organizations_url": "https://api.github.com/users/charettes/orgs", "repos_url": "https://api.github.com/users/charettes/repos", "events_url": "https://api.github.com/users/charettes/events{/privacy}", "received_events_url": "https://api.github.com/users/charettes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-11-13T19:38:29Z", "updated_at": "2016-01-17T15:07:24Z", "closed_at": "2015-12-06T00:14:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had to read the source to figure out it was required. Fixing the TODO would also be nice.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/15", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/15/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/15/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/15", "id": 96420157, "node_id": "MDU6SXNzdWU5NjQyMDE1Nw==", "number": 15, "title": "No template reports generated", "user": {"login": "nkuttler", "id": 505328, "node_id": "MDQ6VXNlcjUwNTMyOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/505328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkuttler", "html_url": "https://github.com/nkuttler", "followers_url": "https://api.github.com/users/nkuttler/followers", "following_url": "https://api.github.com/users/nkuttler/following{/other_user}", "gists_url": "https://api.github.com/users/nkuttler/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkuttler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkuttler/subscriptions", "organizations_url": "https://api.github.com/users/nkuttler/orgs", "repos_url": "https://api.github.com/users/nkuttler/repos", "events_url": "https://api.github.com/users/nkuttler/events{/privacy}", "received_events_url": "https://api.github.com/users/nkuttler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2015-07-21T21:26:25Z", "updated_at": "2015-11-12T14:50:58Z", "closed_at": "2015-11-12T14:50:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The plugin is active when i run coverage, but the sys_info method never gets called. I verified the file_tracer() calls and my templates don't show up in there either. Any suggestion what to check further would be appreciated.\n\nDjango==1.8.3\ncoverage==4.0a6\ndjango-coverage-plugin==0.5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/14", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/14/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/14/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/14", "id": 90841873, "node_id": "MDU6SXNzdWU5MDg0MTg3Mw==", "number": 14, "title": "Don't count the coverage for the entire project if your testing just one app", "user": {"login": "epicserve", "id": 191620, "node_id": "MDQ6VXNlcjE5MTYyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/191620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epicserve", "html_url": "https://github.com/epicserve", "followers_url": "https://api.github.com/users/epicserve/followers", "following_url": "https://api.github.com/users/epicserve/following{/other_user}", "gists_url": "https://api.github.com/users/epicserve/gists{/gist_id}", "starred_url": "https://api.github.com/users/epicserve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epicserve/subscriptions", "organizations_url": "https://api.github.com/users/epicserve/orgs", "repos_url": "https://api.github.com/users/epicserve/repos", "events_url": "https://api.github.com/users/epicserve/events{/privacy}", "received_events_url": "https://api.github.com/users/epicserve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-25T03:32:46Z", "updated_at": "2015-06-25T13:18:34Z", "closed_at": "2015-06-25T13:18:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "So let's say I run something like `coverage run manage.py test && coverage html && open htmlcov/index.html` normally to test my entire project and I have `source = .` set in my `.coveragerc` file. Is there way to make the source or the `coverage html --include` automatically adjust if I'm just running tests for one particular Django app that's within my project (i.e. `coverage run manage.py test apps.foo`).\n\nRight now I'm just manually typing out a command that's getting a little unwieldy and this command is actually sorter now because I'm now using a `.coveragerc` file to omit things.\n\n```\ncoverage run --source=\"apps/foo\" manage.py test apps.foo && coverage html && open htmlcov/index.html\n```\n\nI tried making a Makefile rule like `test_coverage` that would normally just include all the source in the html report, but then only include the apps source code if I'm testing just one django app within my project, but I gave up because my simple `ifdef` statement wasn't working. \n\nAnyway, is there anyway to include this logic for only showing the source in the html report if the person ran tests for just one app?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/13", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/13/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/13/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/13", "id": 70520671, "node_id": "MDU6SXNzdWU3MDUyMDY3MQ==", "number": 13, "title": "Nonsensical output?", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-23T21:40:33Z", "updated_at": "2015-05-24T14:17:40Z", "closed_at": "2015-05-24T14:17:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I haven't tried this yet, but @jessamynsmith says:\n\n[10:28:33] jessamynsmith    I have a bit of mystification: https://coveralls.io/builds/2381671/source?filename=quotations%2Ftemplates%2Fquotations%2Fshow.html\n[10:29:02] nedbat   that looks way wrong\n[10:29:47] jessamynsmith    coverage==4.0a5\n[10:29:47] jessamynsmith    django-coverage-plugin==0.3.3\n[12:04:47] jessamynsmith    repo is https://github.com/jessamynsmith/underquoted\n[12:05:47] jessamynsmith    I didn't do anything special, just coverage run manage.py test\n[12:05:54] jessamynsmith    coverage report -m\n\n3b0a8501a683e5d16cc22b55a4cae70b06121d5c was the latest commit in the underquoted repo at the time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/12", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/12/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/12/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/12", "id": 59986485, "node_id": "MDU6SXNzdWU1OTk4NjQ4NQ==", "number": 12, "title": "Omitted {% load xxx %} statements ?", "user": {"login": "perror", "id": 1612326, "node_id": "MDQ6VXNlcjE2MTIzMjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1612326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perror", "html_url": "https://github.com/perror", "followers_url": "https://api.github.com/users/perror/followers", "following_url": "https://api.github.com/users/perror/following{/other_user}", "gists_url": "https://api.github.com/users/perror/gists{/gist_id}", "starred_url": "https://api.github.com/users/perror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perror/subscriptions", "organizations_url": "https://api.github.com/users/perror/orgs", "repos_url": "https://api.github.com/users/perror/repos", "events_url": "https://api.github.com/users/perror/events{/privacy}", "received_events_url": "https://api.github.com/users/perror/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-05T17:35:37Z", "updated_at": "2015-03-08T15:43:15Z", "closed_at": "2015-03-08T15:43:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that all the `{% load xxx %}` statements (such as `{% load i18n %}`) are marked as _uncovered_.\n\nHow could we work around and make it covered (and why couldn't we consider all these statements as automatically covered by default ?).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/11", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/11/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/11/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/11", "id": 58235217, "node_id": "MDU6SXNzdWU1ODIzNTIxNw==", "number": 11, "title": "Included templates only discovered if they are in the same directory", "user": {"login": "jessamynsmith", "id": 945458, "node_id": "MDQ6VXNlcjk0NTQ1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/945458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessamynsmith", "html_url": "https://github.com/jessamynsmith", "followers_url": "https://api.github.com/users/jessamynsmith/followers", "following_url": "https://api.github.com/users/jessamynsmith/following{/other_user}", "gists_url": "https://api.github.com/users/jessamynsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessamynsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessamynsmith/subscriptions", "organizations_url": "https://api.github.com/users/jessamynsmith/orgs", "repos_url": "https://api.github.com/users/jessamynsmith/repos", "events_url": "https://api.github.com/users/jessamynsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/jessamynsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-19T16:52:06Z", "updated_at": "2015-02-20T23:40:32Z", "closed_at": "2015-02-20T23:40:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a project layout with a top-level templates directory containing base.html, and within apps I have template directories containing templates which extend the global base.html. When I run the plugin, base.html is not included in coverage. If I move base.html into the app template directory, it is included. As an example (where base.html is not included): https://github.com/jessamynsmith/eggtimer\nIf I move eggtimer/templates/base.html into eggtimer/periods/templates/base.html, then it shows up in coverage.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/9", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/9/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/9/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/9", "id": 56916112, "node_id": "MDU6SXNzdWU1NjkxNjExMg==", "number": 9, "title": "Cannot generate XML coverage report", "user": {"login": "jessamynsmith", "id": 945458, "node_id": "MDQ6VXNlcjk0NTQ1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/945458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessamynsmith", "html_url": "https://github.com/jessamynsmith", "followers_url": "https://api.github.com/users/jessamynsmith/followers", "following_url": "https://api.github.com/users/jessamynsmith/following{/other_user}", "gists_url": "https://api.github.com/users/jessamynsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessamynsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessamynsmith/subscriptions", "organizations_url": "https://api.github.com/users/jessamynsmith/orgs", "repos_url": "https://api.github.com/users/jessamynsmith/repos", "events_url": "https://api.github.com/users/jessamynsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/jessamynsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-07T16:14:56Z", "updated_at": "2015-02-23T02:59:11Z", "closed_at": "2015-02-23T02:59:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed this in PyCharm, because it uses the XML report, but it occurs from the command line as well.\n\n```\n$ coverage xml\nCoverage.py warning: Setting timid=True to support plugins.\nTraceback (most recent call last):\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/bin/coverage\", line 9, in <module>\n    load_entry_point('coverage==4.0a4', 'console_scripts', 'coverage')()\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/lib/python3.4/site-packages/coverage/cmdline.py\", line 669, in main\n    status = CoverageScript().command_line(argv)\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/lib/python3.4/site-packages/coverage/cmdline.py\", line 452, in command_line\n    total = self.coverage.xml_report(outfile=outfile, **report_args)\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/lib/python3.4/site-packages/coverage/control.py\", line 955, in xml_report\n    return reporter.report(morfs, outfile=outfile)\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/lib/python3.4/site-packages/coverage/xmlreport.py\", line 59, in report\n    self.report_files(self.xml_file, morfs)\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/lib/python3.4/site-packages/coverage/report.py\", line 80, in report_files\n    report_fn(cu, self.coverage._analyze(cu))\n  File \"/Users/jessamyn/.virtualenvs/eggtimer3/lib/python3.4/site-packages/coverage/xmlreport.py\", line 124, in xml_file\n    filename = cu.file_locator.relative_filename(cu.filename)\nAttributeError: 'FileReporter' object has no attribute 'file_locator'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/7", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/7/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/7/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/7", "id": 56826473, "node_id": "MDU6SXNzdWU1NjgyNjQ3Mw==", "number": 7, "title": "Errors out with \"branch = True\"", "user": {"login": "jessamynsmith", "id": 945458, "node_id": "MDQ6VXNlcjk0NTQ1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/945458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessamynsmith", "html_url": "https://github.com/jessamynsmith", "followers_url": "https://api.github.com/users/jessamynsmith/followers", "following_url": "https://api.github.com/users/jessamynsmith/following{/other_user}", "gists_url": "https://api.github.com/users/jessamynsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessamynsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessamynsmith/subscriptions", "organizations_url": "https://api.github.com/users/jessamynsmith/orgs", "repos_url": "https://api.github.com/users/jessamynsmith/repos", "events_url": "https://api.github.com/users/jessamynsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/jessamynsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-06T15:34:42Z", "updated_at": "2015-02-07T01:44:03Z", "closed_at": "2015-02-07T01:44:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "All my templates are erroring out as follows:\n`eggtimer/templates/base.html   AttributeError: 'FileReporter' object has no attribute 'no_branch_lines'`\n\nMy .coveragerc is as follows:\n\n``` [run]\nsource = eggtimer\nbranch = True\nomit = *tests*\n    */migrations/*\n    *__init__.py*\n    *settings*\nplugins =\n    django_coverage_plugin\n```\n\nWhen I remove \"branch=True\" the error goes away.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/5", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/5/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/5/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/5", "id": 55548673, "node_id": "MDU6SXNzdWU1NTU0ODY3Mw==", "number": 5, "title": "Template files with non-ascii characters bork the HTML report", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-26T22:43:33Z", "updated_at": "2015-01-27T01:51:26Z", "closed_at": "2015-01-27T01:51:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\nTraceback (most recent call last):\n  File \"/home/username/src/proj/env/bin/coverage\", line 9, in <module>\n    load_entry_point('coverage==4.0a2', 'console_scripts', 'coverage')()\n  File \"/home/username/src/proj/env/local/lib/python2.7/site-packages/coverage/cmdline.py\", line 664, in main\n    status = CoverageScript().command_line(argv)\n  File \"/home/username/src/proj/env/local/lib/python2.7/site-packages/coverage/cmdline.py\", line 444, in command_line\n    **report_args)\n  File \"/home/username/src/proj/env/local/lib/python2.7/site-packages/coverage/control.py\", line 878, in html_report\n    return reporter.report(morfs)\n  File \"/home/username/src/proj/env/local/lib/python2.7/site-packages/coverage/html.py\", line 116, in report\n    self.report_files(self.html_file, morfs, self.config.html_dir)\n  File \"/home/username/src/proj/env/local/lib/python2.7/site-packages/coverage/report.py\", line 80, in report_files\n    report_fn(cu, self.coverage._analyze(cu))\n  File \"/home/username/src/proj/env/local/lib/python2.7/site-packages/coverage/html.py\", line 162, in html_file\n    this_hash = self.file_hash(source.encode('utf-8'), cu)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 3702: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/4", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/4/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/4/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/4", "id": 55357782, "node_id": "MDU6SXNzdWU1NTM1Nzc4Mg==", "number": 4, "title": "How to find templates that are never executed?", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-01-24T03:50:10Z", "updated_at": "2018-09-05T15:14:54Z", "closed_at": "2018-09-05T13:50:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "With .py files, `--source` will find files that were never even executed once.  What's the equivalent for template files?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/3", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/3/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/3/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/3", "id": 55354717, "node_id": "MDU6SXNzdWU1NTM1NDcxNw==", "number": 3, "title": "How to access Django settings?", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-01-24T01:57:39Z", "updated_at": "2018-09-05T13:59:16Z", "closed_at": "2018-09-05T13:59:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When using other coverage commands (like `coverage html`), the Django settings may not be set properly.  For example, these commands:\n\n```\ncoverage run manage.py test ; coverage html\n```\n\nmanage.py will set the settings properly, but `coverage html` won't know where they are.\nShould we require the user to set the DJANGO_SETTINGS_MODULE? Should we make it so the settings aren't required?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/2", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/2/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/2/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/2", "id": 55354543, "node_id": "MDU6SXNzdWU1NTM1NDU0Mw==", "number": 2, "title": "Relative paths to template files", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-24T01:52:49Z", "updated_at": "2015-01-26T01:15:56Z", "closed_at": "2015-01-26T01:15:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In 0.3, template files are shown in reports as simply \"file.txt\", not \"path/to/file.txt\".  How can we figure out the relative path to a template file?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/1", "repository_url": "https://api.github.com/repos/nedbat/django_coverage_plugin", "labels_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/1/comments", "events_url": "https://api.github.com/repos/nedbat/django_coverage_plugin/issues/1/events", "html_url": "https://github.com/nedbat/django_coverage_plugin/issues/1", "id": 54672021, "node_id": "MDU6SXNzdWU1NDY3MjAyMQ==", "number": 1, "title": "Crash on non-file templates", "user": {"login": "rfleschenberg", "id": 4319330, "node_id": "MDQ6VXNlcjQzMTkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4319330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfleschenberg", "html_url": "https://github.com/rfleschenberg", "followers_url": "https://api.github.com/users/rfleschenberg/followers", "following_url": "https://api.github.com/users/rfleschenberg/following{/other_user}", "gists_url": "https://api.github.com/users/rfleschenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfleschenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfleschenberg/subscriptions", "organizations_url": "https://api.github.com/users/rfleschenberg/orgs", "repos_url": "https://api.github.com/users/rfleschenberg/repos", "events_url": "https://api.github.com/users/rfleschenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/rfleschenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-17T19:22:53Z", "updated_at": "2015-01-20T03:51:17Z", "closed_at": "2015-01-20T03:51:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for writing this, Ned. I think it's a great idea and a very useful tool to have. So I get to file the first issue on it ;)\n\ndjango-coverage-plugin crashes on templates that don't have an underlying file. For example, this view:\n\n```\nfrom django.template import Template, Context\nfrom django.http import HttpResponse\n\n\ndef i_am_broken(request):\n    tpl = Template(u\"Hello!\")\n    return HttpResponse(tpl.render(Context({})))\n```\n\nAnd this test:\n\n```\nfrom django.test import TestCase\n\n\nclass MyTest(TestCase):\n\n    def test_request(self):\n        response = self.client.get('/broken/')\n        self.assertEquals(response.content, 'Hello!')\n```\n\nTraceback:\n\n```\nTraceback (most recent call last):\n  File \"/var/tmp/coveragetest/coveragetest/tests.py\", line 7, in test_request\n    response = self.client.get('/broken/')\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/test/client.py\", line 470, in get\n    **extra)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/test/client.py\", line 286, in get\n    return self.generic('GET', path, secure=secure, **r)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/test/client.py\", line 358, in generic\n    return self.request(**r)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/test/client.py\", line 422, in request\n    response = self.handler(environ)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/var/tmp/coveragetest/coveragetest/views.py\", line 7, in i_am_broken\n    return HttpResponse(tpl.render(Context({})))\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/template/base.py\", line 148, in render\n    return self._render(context)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/test/utils.py\", line 88, in instrumented_test_render\n    return self.nodelist.render(context)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/template/base.py\", line 844, in render\n    bit = self.render_node(node, context)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/template/debug.py\", line 80, in render_node\n    return node.render(context)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/template/base.py\", line 870, in render\n    return self.s\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django/template/base.py\", line 870, in render\n    return self.s\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/coverage/pytracer.py\", line 112, in _trace\n    lineno_from, lineno_to = self.file_tracer.line_number_range(frame)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 80, in line_number_range\n    line_map = self.get_line_map(source[0].name)\n  File \"/home/rene/.virtualenvs/coveragtest/lib/python2.7/site-packages/django_coverage_plugin/plugin.py\", line 102, in get_line_map\n    with open(filename) as template_file:\nIOError: [Errno 2] No such file or directory: u'<unknown source>'\n```\n", "performed_via_github_app": null, "score": 1.0}]}