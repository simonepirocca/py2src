{"total_count": 57, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/109", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/109/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/109/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/109", "id": 638213789, "node_id": "MDU6SXNzdWU2MzgyMTM3ODk=", "number": 109, "title": "Intent to drop Python 2.7 support", "user": {"login": "indygreg", "id": 342993, "node_id": "MDQ6VXNlcjM0Mjk5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/342993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indygreg", "html_url": "https://github.com/indygreg", "followers_url": "https://api.github.com/users/indygreg/followers", "following_url": "https://api.github.com/users/indygreg/following{/other_user}", "gists_url": "https://api.github.com/users/indygreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/indygreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indygreg/subscriptions", "organizations_url": "https://api.github.com/users/indygreg/orgs", "repos_url": "https://api.github.com/users/indygreg/repos", "events_url": "https://api.github.com/users/indygreg/events{/privacy}", "received_events_url": "https://api.github.com/users/indygreg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 436168552, "node_id": "MDU6TGFiZWw0MzYxNjg1NTI=", "url": "https://api.github.com/repos/indygreg/python-zstandard/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-13T19:02:07Z", "updated_at": "2020-06-13T20:03:16Z", "closed_at": "2020-06-13T20:03:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I'm filing this issue to record the intent to drop Python 2.7 after the next release (0.14). Python 2.7 is officially unsupported by the PSF and I don't think it makes sense to continue supporting Python 2.7 in this project, as it imposes overhead.\r\n\r\nIf there are security releases to the zstandard library or critical bugs uncovered, I'll consider releasing point releases of 0.14 that continue to support Python 2.7. But this isn't guaranteed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/103", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/103/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/103/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/103", "id": 615034288, "node_id": "MDU6SXNzdWU2MTUwMzQyODg=", "number": 103, "title": "make_cffi.py incorrectly finds compiler", "user": {"login": "Arfrever", "id": 656294, "node_id": "MDQ6VXNlcjY1NjI5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/656294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arfrever", "html_url": "https://github.com/Arfrever", "followers_url": "https://api.github.com/users/Arfrever/followers", "following_url": "https://api.github.com/users/Arfrever/following{/other_user}", "gists_url": "https://api.github.com/users/Arfrever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arfrever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arfrever/subscriptions", "organizations_url": "https://api.github.com/users/Arfrever/orgs", "repos_url": "https://api.github.com/users/Arfrever/repos", "events_url": "https://api.github.com/users/Arfrever/events{/privacy}", "received_events_url": "https://api.github.com/users/Arfrever/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 436168550, "node_id": "MDU6TGFiZWw0MzYxNjg1NTA=", "url": "https://api.github.com/repos/indygreg/python-zstandard/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T23:20:29Z", "updated_at": "2020-06-18T23:01:32Z", "closed_at": "2020-06-13T18:46:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "`make_cffi.py` incorrectly finds compiler:\r\n- It does not call [customize_compiler()](https://github.com/python/cpython/blob/e488e300f5c01289c10906c2e53a8e43d6de32d8/Lib/distutils/sysconfig.py#L173-L243) function, which would make code respect user-set `CC` environmental variable.\r\n- It uses `compiler.executables[\"compiler\"]`, which is only a class-default non-customized value. `compiler.compiler` should be called instead.\r\n\r\nCompare:\r\n```\r\n$ CC=\"x86_64-pc-linux-gnu-gcc\" python -c 'import distutils.ccompiler; compiler = distutils.ccompiler.new_compiler(); print(compiler.executables[\"compiler\"])'\r\n['cc']\r\n$ CC=\"x86_64-pc-linux-gnu-gcc\" python -c 'import distutils.ccompiler; compiler = distutils.ccompiler.new_compiler(); distutils.sysconfig.customize_compiler(compiler); print(compiler.compiler)'\r\n['x86_64-pc-linux-gnu-gcc']\r\n```\r\n\r\nPatch: [make_cffi.patch.txt](https://github.com/indygreg/python-zstandard/files/4602124/make_cffi.patch.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/101", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/101/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/101/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/101", "id": 573641896, "node_id": "MDU6SXNzdWU1NzM2NDE4OTY=", "number": 101, "title": "How to reuse the compression context?", "user": {"login": "balaccord", "id": 61668410, "node_id": "MDQ6VXNlcjYxNjY4NDEw", "avatar_url": "https://avatars2.githubusercontent.com/u/61668410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balaccord", "html_url": "https://github.com/balaccord", "followers_url": "https://api.github.com/users/balaccord/followers", "following_url": "https://api.github.com/users/balaccord/following{/other_user}", "gists_url": "https://api.github.com/users/balaccord/gists{/gist_id}", "starred_url": "https://api.github.com/users/balaccord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balaccord/subscriptions", "organizations_url": "https://api.github.com/users/balaccord/orgs", "repos_url": "https://api.github.com/users/balaccord/repos", "events_url": "https://api.github.com/users/balaccord/events{/privacy}", "received_events_url": "https://api.github.com/users/balaccord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-01T23:31:26Z", "updated_at": "2020-03-03T18:22:44Z", "closed_at": "2020-03-03T18:22:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**EDIT: SORRY, WRONG SUPPOSITION**\r\n\r\nThe experiment showed that It's my dataset issue: the files are longer at the storage beginning and are shorter at the end so, of course, the shorter are being packed better. The second repack pass shows the same compression ratio that the first one\r\n\r\nSo the reusing of the context area is not so useful as I thought. To be more precise, it seems to be useless :)\r\n\r\n**WAS:**\r\n\r\nMy HDF5 storage contains ~350k of gzipped html files by 30..300 kbytes each. I decided to improve the compression ratio with ZSTD so created the custom dictionary, wrote the simple script and started to repack. At the very beginning the improvement ratio was ~2.5 times (not bad, not bad) but the farther process came then the more gain was and at the end the ratio was ~6, i.e. compression ratio improved twice+ in process. Not bad at all\r\n\r\nI supposed that the engine is \"learning\" during the compression. No exact info in docs about it but there's the mysterious \"context\" there. If the \"realtime training\" is true, how it's result could be reused? There's no access to context storage (self._cctx or whatever) in python-zstandard or at least I didn't found\r\n\r\nOf course, it's possible to train the engine by dummy first pass and to do the real compression then but \"it's not pythonic\" :)\r\n\r\nanaconda windows environment:\r\npython 3.8.1 64bit\r\nzstandard 0.13.0\r\n\r\nThe  code is just as simple as it's possible:\r\n```\r\nwith open(\"zstd_dict\", \"rb\") as f:\r\n    zdict = zstd.ZstdCompressionDict(f.read())\r\nzc = zstd.ZstdCompressor(level=12, dict_data=zdict)\r\nfor gz in ds: # h5py datasource\r\n    html = gzip.decompress(gz.tobytes())\r\n    zs = zc.compress(html)\r\n    ds_append(ds_new, zs)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/95", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/95/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/95/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/95", "id": 513962858, "node_id": "MDU6SXNzdWU1MTM5NjI4NTg=", "number": 95, "title": "Build failure when pre-processor generates non-ASCII characters", "user": {"login": "meklu", "id": 1366938, "node_id": "MDQ6VXNlcjEzNjY5Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1366938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meklu", "html_url": "https://github.com/meklu", "followers_url": "https://api.github.com/users/meklu/followers", "following_url": "https://api.github.com/users/meklu/following{/other_user}", "gists_url": "https://api.github.com/users/meklu/gists{/gist_id}", "starred_url": "https://api.github.com/users/meklu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meklu/subscriptions", "organizations_url": "https://api.github.com/users/meklu/orgs", "repos_url": "https://api.github.com/users/meklu/repos", "events_url": "https://api.github.com/users/meklu/events{/privacy}", "received_events_url": "https://api.github.com/users/meklu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 436168550, "node_id": "MDU6TGFiZWw0MzYxNjg1NTA=", "url": "https://api.github.com/repos/indygreg/python-zstandard/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-29T14:32:33Z", "updated_at": "2020-06-15T07:59:36Z", "closed_at": "2020-06-13T18:54:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "With recent versions of GCC, the C pre-processor may generate some nasty linemarkers with non-ASCII characters. This may result in output like the following when trying to build the project:\r\n\r\n```\r\nmeklu@holmes pts/9 \u00bb ~/src/python-zstandard (r:0)\r\n% python2 setup.py build\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 70, in <module>\r\n    import make_cffi\r\n  File \"/home/meklu/src/python-zstandard/make_cffi.py\", line 204, in <module>\r\n    ffi.cdef(b'\\n'.join(cdeflines).decode('latin1'))\r\n  File \"/usr/lib64/python2.7/site-packages/cffi/api.py\", line 112, in cdef\r\n    self._cdef(csource, override=override, packed=packed, pack=pack)\r\n  File \"/usr/lib64/python2.7/site-packages/cffi/api.py\", line 123, in _cdef\r\n    csource = csource.encode('ascii')\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 32-33: ordinal not in range(128)\r\n```\r\n\r\nFor some reason this problem doesn't happen with Python 3 on the same machine. My suspicion is that something in the Python 3 setup sets a different locale.\r\n\r\nTo find out what the heck was going on, I ran the following:\r\n\r\n```\r\nmeklu@holmes pts/9 \u00bb ~/src/python-zstandard (r:0)\r\n%  find zstd/ -name '*\\.c' -print0 | xargs -0r -I'{}' -n1 -- sh -c 'gcc -Izstd/common/ -Izstd/compress/ -Izstd/decompress/ -zstd/dictBuilder/ -Izstd/ -E \"$1\" | grep -P \"[\\\\x80-\\\\xFF]\"' -- '{}' \r\n# 1 \"<sis\u00e4inen>\"\r\n# 1 \"<sis\u00e4inen>\"\r\n/* ~38 lines total of this message saying \"<built-in>\" */\r\n```\r\n\r\nSome possible workarounds are as follows:\r\n\r\n- Set `LC_ALL=C` at build time\r\n- Add `-P` to the compiler options in `<projroot>/make_cffi.py` when using GCC\r\n- Edit `/usr/lib64/python2.7/site-packages/cffi/api.py:123` to read `.encode('ascii', 'ignore')`\r\n- Use anything other than GCC\r\n\r\nI opted for the second one myself.\r\n\r\nFor reference, here's my locale:\r\n\r\n```\r\nmeklu@holmes pts/9 \u00bb ~/src/python-zstandard (r:0)\r\n% locale\r\nLANG=fi_FI.UTF-8\r\nLC_CTYPE=\"fi_FI.UTF-8\"\r\nLC_NUMERIC=\"fi_FI.UTF-8\"\r\nLC_TIME=\"fi_FI.UTF-8\"\r\nLC_COLLATE=\"fi_FI.UTF-8\"\r\nLC_MONETARY=\"fi_FI.UTF-8\"\r\nLC_MESSAGES=\"fi_FI.UTF-8\"\r\nLC_PAPER=\"fi_FI.UTF-8\"\r\nLC_NAME=\"fi_FI.UTF-8\"\r\nLC_ADDRESS=\"fi_FI.UTF-8\"\r\nLC_TELEPHONE=\"fi_FI.UTF-8\"\r\nLC_MEASUREMENT=\"fi_FI.UTF-8\"\r\nLC_IDENTIFICATION=\"fi_FI.UTF-8\"\r\nLC_ALL=fi_FI.UTF-8\r\n```\r\n\r\nThe problem manifests itself with at least zstandard-0.12.0 and current HEAD along with cffi-1.12.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/90", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/90/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/90/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/90", "id": 482839046, "node_id": "MDU6SXNzdWU0ODI4MzkwNDY=", "number": 90, "title": "Upgrade zstd to the latest git", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-20T12:45:51Z", "updated_at": "2019-09-14T03:24:17Z", "closed_at": "2019-09-14T03:24:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Tests mostly pass with respect to changes in error messages, version. The only thing I not qquit3 sure how to interpret is changes in results hashes. I haven't investigated that, but IMHO more meaningful testing of that is needed rather than comparing hashes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/89", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/89/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/89/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/89", "id": 482800224, "node_id": "MDU6SXNzdWU0ODI4MDAyMjQ=", "number": 89, "title": "Build system used is complete mess", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-20T11:21:09Z", "updated_at": "2019-09-14T03:33:45Z", "closed_at": "2019-09-14T03:33:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "1. to add some compiler flags I had to visit 3 different places\r\n2. it uses hardcoded paths to `.c` files. It had broken upgrade to the latest zstd version. I had to add a couple of files there. Into 2 different places.\r\n3. it uses `distutils.ccompiler.new_compiler` which uses `get_default_compiler` which uses a dict, into which `msvc` is hardcoded for Windows. I use MinGW-w64. It is gcc which generates faster code and also a free software without espionage features seen in MSVC.\r\n4. to add support of mingw-w64 I had to edit some files.\r\n5. it is an untidy mess of python code, compiler flags and strings containing pieces of C code.\r\n6. it doesn't fetch the latest zstd sources automatically but uses the ones in the repo\r\n7. building is damn slow. in order to do a small change everything has to be rebuilt.\r\n\r\nSo I suggest to use CMake + Ninja or Meson.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/88", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/88/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/88/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/88", "id": 482297445, "node_id": "MDU6SXNzdWU0ODIyOTc0NDU=", "number": 88, "title": "How is it different from https://github.com/sergey-dryabzhinsky/python-zstd ? Should it be merged with it?", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-19T12:58:30Z", "updated_at": "2019-08-20T11:24:48Z", "closed_at": "2019-08-20T11:24:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/sergey-dryabzhinsky/python-zstd/issues/44", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/82", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/82/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/82/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/82", "id": 442296719, "node_id": "MDU6SXNzdWU0NDIyOTY3MTk=", "number": 82, "title": "Seeking leaks memory", "user": {"login": "MaxNoe", "id": 5488440, "node_id": "MDQ6VXNlcjU0ODg0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxNoe", "html_url": "https://github.com/MaxNoe", "followers_url": "https://api.github.com/users/MaxNoe/followers", "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}", "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions", "organizations_url": "https://api.github.com/users/MaxNoe/orgs", "repos_url": "https://api.github.com/users/MaxNoe/repos", "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxNoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-09T15:27:45Z", "updated_at": "2019-05-15T02:41:56Z", "closed_at": "2019-05-15T02:41:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Seeking on a zstandard stream reader causes the full file to be read into ram.\r\n\r\nMinimal example:\r\n\r\n```\r\n$ head -c 500M /dev/urandom > test.dat\r\n$ zstd test.dat\r\n```\r\n\r\n```python\r\nimport zstandard as zstd\r\nimport os\r\nimport psutil\r\n\r\np = psutil.Process(os.getpid())\r\npath = 'test.dat.zst'\r\n\r\nreader = zstd.ZstdDecompressor().stream_reader(open(path, 'rb'))\r\n\r\nchunk = reader.read(1)\r\nwhile chunk:\r\n    # seek 100 MB forward\r\n    reader.seek(100 * 1024**2, 1)\r\n    print(p.memory_info()[0] / 1024**2)\r\n    chunk = reader.read(1)\r\n```\r\n\r\nResult:\r\n\r\n```\r\n114.1171875\r\n214.1484375\r\n314.1796875\r\n414.2109375\r\n514.2421875\r\n```\r\n\r\nIf one only reads, only the currently read data is in RAM:\r\n\r\n```\r\nimport zstandard as zstd\r\nimport os\r\nimport psutil\r\n\r\np = psutil.Process(os.getpid())\r\npath = 'test.dat.zst'\r\n\r\nreader = zstd.ZstdDecompressor().stream_reader(open(path, 'rb'))\r\n\r\nchunk = reader.read(1)\r\nwhile chunk:\r\n    # seek one MB forward\r\n    reader.read(100 * 1024**2)\r\n    print(p.memory_info()[0] / 1024**2)\r\n    chunk = reader.read(1)\r\n```\r\nResult\r\n```\r\n14.28515625\r\n14.2890625\r\n14.2890625\r\n14.2890625\r\n14.2890625\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/77", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/77/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/77/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/77", "id": 416397234, "node_id": "MDU6SXNzdWU0MTYzOTcyMzQ=", "number": 77, "title": "Stream writer memory usage dependent on how many bytes written", "user": {"login": "tomerz90", "id": 43569007, "node_id": "MDQ6VXNlcjQzNTY5MDA3", "avatar_url": "https://avatars3.githubusercontent.com/u/43569007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomerz90", "html_url": "https://github.com/tomerz90", "followers_url": "https://api.github.com/users/tomerz90/followers", "following_url": "https://api.github.com/users/tomerz90/following{/other_user}", "gists_url": "https://api.github.com/users/tomerz90/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomerz90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomerz90/subscriptions", "organizations_url": "https://api.github.com/users/tomerz90/orgs", "repos_url": "https://api.github.com/users/tomerz90/repos", "events_url": "https://api.github.com/users/tomerz90/events{/privacy}", "received_events_url": "https://api.github.com/users/tomerz90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-02T13:26:58Z", "updated_at": "2019-03-03T13:55:12Z", "closed_at": "2019-03-03T13:55:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im not sure if its by design (couldnt find anything online) but it seems the memory usage for of the stream writer increase as you write more bytes through,which seems odd to me since compression stream usually keep fixed size buffers, is this a memory leak?\r\n\r\nCode:\r\n```\r\n from zstandard import ZstdCompressor as zs\r\n import uuid\r\n from contextlib import ExitStack\r\n \r\n with ExitStack() as stack:\r\n     for i in range(600):\r\n         ctx = zs(threads=-1)\r\n         ff = stack.enter_context(open(str(i), 'wb'))\r\n         context = stack.enter_context(ctx.stream_writer(ff))\r\n         hashes = 100000\r\n         for j in range(hashes):\r\n             context.write(str(uuid.uuid4()).encode())\r\n         # context.flush()\r\n```\r\nI tried with and without flush, same results.\r\nAs you increase `hashes`, the memory usage increases (as viewed in `top` and using the `memory_size` function), `memory_size` shows that the size is ~3.5MB.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/75", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/75/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/75/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/75", "id": 410068442, "node_id": "MDU6SXNzdWU0MTAwNjg0NDI=", "number": 75, "title": "Streaming decompressor broken", "user": {"login": "huguesb", "id": 7319881, "node_id": "MDQ6VXNlcjczMTk4ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7319881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huguesb", "html_url": "https://github.com/huguesb", "followers_url": "https://api.github.com/users/huguesb/followers", "following_url": "https://api.github.com/users/huguesb/following{/other_user}", "gists_url": "https://api.github.com/users/huguesb/gists{/gist_id}", "starred_url": "https://api.github.com/users/huguesb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huguesb/subscriptions", "organizations_url": "https://api.github.com/users/huguesb/orgs", "repos_url": "https://api.github.com/users/huguesb/repos", "events_url": "https://api.github.com/users/huguesb/events{/privacy}", "received_events_url": "https://api.github.com/users/huguesb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-14T00:30:10Z", "updated_at": "2019-02-14T07:54:16Z", "closed_at": "2019-02-14T07:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "A compressed file created with the streaming compressor is successfully decompressed by the `zstd` command line:\r\n\r\n```\r\nzstdcat tmp.msg.zst | hexdump | head\r\n0000000 8a c4 12 6e 61 6d 65 64 5f 74 72 61 6e 73 66 6f\r\n```\r\n\r\nHowever, reading it with the streaming decompressor as follows:\r\n```\r\n        ccxt = zstd.ZstdCompressor()\r\n        with ccxt.stream_reader(open('tmp.msg.zst', 'rb')) as f:\r\n            print (f.read(16).encode('hex'))\r\n```\r\n\r\nyields complete garbage:\r\n```\r\n28b52ffd005000001028b52ffd00503c\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/73", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/73/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/73/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/73", "id": 407830870, "node_id": "MDU6SXNzdWU0MDc4MzA4NzA=", "number": 73, "title": "not compatible with hypothesis>=4", "user": {"login": "thrasibule", "id": 494248, "node_id": "MDQ6VXNlcjQ5NDI0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/494248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thrasibule", "html_url": "https://github.com/thrasibule", "followers_url": "https://api.github.com/users/thrasibule/followers", "following_url": "https://api.github.com/users/thrasibule/following{/other_user}", "gists_url": "https://api.github.com/users/thrasibule/gists{/gist_id}", "starred_url": "https://api.github.com/users/thrasibule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thrasibule/subscriptions", "organizations_url": "https://api.github.com/users/thrasibule/orgs", "repos_url": "https://api.github.com/users/thrasibule/repos", "events_url": "https://api.github.com/users/thrasibule/events{/privacy}", "received_events_url": "https://api.github.com/users/thrasibule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-07T18:14:18Z", "updated_at": "2019-02-16T17:38:17Z", "closed_at": "2019-02-16T17:38:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "max_iterations parameter has been removed see https://hypothesis.readthedocs.io/en/latest/changes.html#v4-0-0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/71", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/71/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/71/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/71", "id": 398464341, "node_id": "MDU6SXNzdWUzOTg0NjQzNDE=", "number": 71, "title": "cffi ZstdDecompressor.stream_reader broken", "user": {"login": "rtkbkish", "id": 3708115, "node_id": "MDQ6VXNlcjM3MDgxMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3708115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtkbkish", "html_url": "https://github.com/rtkbkish", "followers_url": "https://api.github.com/users/rtkbkish/followers", "following_url": "https://api.github.com/users/rtkbkish/following{/other_user}", "gists_url": "https://api.github.com/users/rtkbkish/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtkbkish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtkbkish/subscriptions", "organizations_url": "https://api.github.com/users/rtkbkish/orgs", "repos_url": "https://api.github.com/users/rtkbkish/repos", "events_url": "https://api.github.com/users/rtkbkish/events{/privacy}", "received_events_url": "https://api.github.com/users/rtkbkish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-11T21:49:14Z", "updated_at": "2019-02-17T20:45:58Z", "closed_at": "2019-02-17T20:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is simple example of the broken behaviour\r\n\r\n```python\r\nfrom zstandard import ZstdDecompressor\r\nfrom zstandard import ZstdCompressor\r\nfrom cStringIO import StringIO\r\nimport os\r\n\r\ndef zstd_readlines(handle):\r\n  \"\"\"\r\n  Read data from a Zstandard-compressed stream and split by newlines. Returns\r\n  an iterator over the stream.\r\n  :param file handle: the file to read from\r\n  :return: a generator that yields text lines\r\n  :rtype : Iterator[unicode]\r\n  \"\"\"\r\n  decompressor = ZstdDecompressor()\r\n  with decompressor.stream_reader(handle) as reader:\r\n    while True:\r\n      read = reader.read(8192)\r\n      if not read:\r\n        break\r\n\r\ndef compress(data):\r\n  handle = StringIO()\r\n  compressor = ZstdCompressor()\r\n  with compressor.stream_writer(handle) as writer:\r\n    writer.write(data)\r\n\r\n  handle.seek(0)\r\n  return handle\r\n\r\n\r\ndata = bytearray(os.urandom(1000000))\r\nhandle = compress(data)\r\nzstd_readlines(handle)\r\n\r\nprint \"Success\"\r\n```\r\n\r\n```\r\n(venv) root@a74460b9653b:~# pypy read.py\r\nTraceback (most recent call last):\r\n  File \"read4.py\", line 33, in <module>\r\n    zstd_readlines(handle)\r\n  File \"read4.py\", line 17, in zstd_readlines\r\n    read = reader.read(8192)\r\n  File \"/opt/awn/venv/site-packages/zstd_cffi.py\", line 1521, in read\r\n    result = decompress()\r\n  File \"/opt/awn/venv/site-packages/zstd_cffi.py\", line 1491, in decompress\r\n    _zstd_error(zresult))\r\nZstdError: (u'zstd decompress error: %s', u'Corrupted block detected')\r\n(venv) root@a74460b9653b:~# export PYTHON_ZSTANDARD_IMPORT_POLICY='cext'\r\n(venv) root@a74460b9653b:~# pypy read.py\r\nSuccess\r\n(venv) root@a74460b9653b:~#\r\n```\r\n\r\nWe worked around with by switching to read_to_iter, but block reading should work as well.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/69", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/69/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/69/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/69", "id": 397547078, "node_id": "MDU6SXNzdWUzOTc1NDcwNzg=", "number": 69, "title": "Exception raised while initializing ZstdCompressor on PyPy 5.8.0", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-09T20:21:11Z", "updated_at": "2019-02-18T12:49:48Z", "closed_at": "2019-02-17T21:00:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting the following exception while testing zstdandard with PyPy 5.8.0:\r\n```\r\nTypeError: gc() got an unexpected keyword argument 'size'\r\n```\r\n\r\nYou can see the full traceback at https://travis-ci.org/celery/kombu/jobs/477482010#L600\r\n\r\nIs there a minimum PyPy version we support?\r\nI don't see us testing this library on PyPy during builds. Should we add them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/68", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/68/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/68/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/68", "id": 397073449, "node_id": "MDU6SXNzdWUzOTcwNzM0NDk=", "number": 68, "title": "zstandard 0.10.2 does not install on Debian 8 \"Jessie\" with Python 2", "user": {"login": "windsurfer1122", "id": 34011197, "node_id": "MDQ6VXNlcjM0MDExMTk3", "avatar_url": "https://avatars3.githubusercontent.com/u/34011197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windsurfer1122", "html_url": "https://github.com/windsurfer1122", "followers_url": "https://api.github.com/users/windsurfer1122/followers", "following_url": "https://api.github.com/users/windsurfer1122/following{/other_user}", "gists_url": "https://api.github.com/users/windsurfer1122/gists{/gist_id}", "starred_url": "https://api.github.com/users/windsurfer1122/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windsurfer1122/subscriptions", "organizations_url": "https://api.github.com/users/windsurfer1122/orgs", "repos_url": "https://api.github.com/users/windsurfer1122/repos", "events_url": "https://api.github.com/users/windsurfer1122/events{/privacy}", "received_events_url": "https://api.github.com/users/windsurfer1122/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-08T20:29:38Z", "updated_at": "2019-01-11T19:26:51Z", "closed_at": "2019-01-11T19:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the error log:\r\n```\r\n# pip2 install zstandard\r\nDownloading/unpacking zstandard\r\n  Downloading zstandard-0.10.2.tar.gz (611kB): 611kB downloaded\r\n  Running setup.py (path:/tmp/pip-build-iHDlBF/zstandard/setup.py) egg_info for package zstandard\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 17, in <module>\r\n      File \"/tmp/pip-build-iHDlBF/zstandard/setup.py\", line 50, in <module>\r\n        import make_cffi\r\n      File \"make_cffi.py\", line 154, in <module>\r\n        ffi.set_source('_zstd_cffi', '''\r\n    AttributeError: 'FFI' object has no attribute 'set_source'\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n\r\n  File \"<string>\", line 17, in <module>\r\n\r\n  File \"/tmp/pip-build-iHDlBF/zstandard/setup.py\", line 50, in <module>\r\n\r\n    import make_cffi\r\n\r\n  File \"make_cffi.py\", line 154, in <module>\r\n\r\n    ffi.set_source('_zstd_cffi', '''\r\n\r\nAttributeError: 'FFI' object has no attribute 'set_source'\r\n\r\n----------------------------------------\r\nCleaning up...\r\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip-build-iHDlBF/zstandard\r\nException information:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 122, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/commands/install.py\", line 290, in run\r\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 1230, in prepare_files\r\n    req_to_install.run_egg_info()\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 326, in run_egg_info\r\n    command_desc='python setup.py egg_info')\r\n  File \"/usr/lib/python2.7/dist-packages/pip/util.py\", line 716, in call_subprocess\r\n    % (command_desc, proc.returncode, cwd))\r\nInstallationError: Command python setup.py egg_info failed with error code 1 in /tmp/pip-build-iHDlBF/zstandard\r\n```\r\n\r\nPackage `python-dev` is installed\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/67", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/67/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/67/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/67", "id": 396165674, "node_id": "MDU6SXNzdWUzOTYxNjU2NzQ=", "number": 67, "title": "Would  it be possible to upgrade to zstd-1.3.8 ?", "user": {"login": "stonebig", "id": 4312421, "node_id": "MDQ6VXNlcjQzMTI0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stonebig", "html_url": "https://github.com/stonebig", "followers_url": "https://api.github.com/users/stonebig/followers", "following_url": "https://api.github.com/users/stonebig/following{/other_user}", "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}", "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions", "organizations_url": "https://api.github.com/users/stonebig/orgs", "repos_url": "https://api.github.com/users/stonebig/repos", "events_url": "https://api.github.com/users/stonebig/events{/privacy}", "received_events_url": "https://api.github.com/users/stonebig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-05T13:30:21Z", "updated_at": "2019-02-16T20:47:17Z", "closed_at": "2019-02-16T20:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/66", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/66/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/66/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/66", "id": 395393767, "node_id": "MDU6SXNzdWUzOTUzOTM3Njc=", "number": 66, "title": "copy_stream drops file suffix", "user": {"login": "aadler", "id": 5596401, "node_id": "MDQ6VXNlcjU1OTY0MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5596401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aadler", "html_url": "https://github.com/aadler", "followers_url": "https://api.github.com/users/aadler/followers", "following_url": "https://api.github.com/users/aadler/following{/other_user}", "gists_url": "https://api.github.com/users/aadler/gists{/gist_id}", "starred_url": "https://api.github.com/users/aadler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aadler/subscriptions", "organizations_url": "https://api.github.com/users/aadler/orgs", "repos_url": "https://api.github.com/users/aadler/repos", "events_url": "https://api.github.com/users/aadler/events{/privacy}", "received_events_url": "https://api.github.com/users/aadler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-02T21:56:31Z", "updated_at": "2019-01-03T00:40:45Z", "closed_at": "2019-01-03T00:40:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `copy_stream` to compress an on-disk file, the resulting archive is properly compressed and byte-equivalent to the original, but when using a different application ro decompress it, like 7z with zst, the file is missing the suffix. Is that intentional, and if so, how could I compress a \"txt\" file (for example) to zst using zstandard yet maintaining the filename suffix in the archive?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/65", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/65/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/65/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/65", "id": 385237551, "node_id": "MDU6SXNzdWUzODUyMzc1NTE=", "number": 65, "title": "decompressobj does not support flush()", "user": {"login": "vnair81", "id": 44025701, "node_id": "MDQ6VXNlcjQ0MDI1NzAx", "avatar_url": "https://avatars1.githubusercontent.com/u/44025701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnair81", "html_url": "https://github.com/vnair81", "followers_url": "https://api.github.com/users/vnair81/followers", "following_url": "https://api.github.com/users/vnair81/following{/other_user}", "gists_url": "https://api.github.com/users/vnair81/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnair81/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnair81/subscriptions", "organizations_url": "https://api.github.com/users/vnair81/orgs", "repos_url": "https://api.github.com/users/vnair81/repos", "events_url": "https://api.github.com/users/vnair81/events{/privacy}", "received_events_url": "https://api.github.com/users/vnair81/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-28T12:06:55Z", "updated_at": "2019-02-27T06:33:58Z", "closed_at": "2019-02-16T21:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "`decompressobj` which is provided as an API-compatible interface with `zlib.decompressobj` does not support `flush()`.\r\nThis makes it difficult to be used alongside zlib decompressor.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/63", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/63/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/63/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/63", "id": 379569632, "node_id": "MDU6SXNzdWUzNzk1Njk2MzI=", "number": 63, "title": "Memory leak copy_stream", "user": {"login": "mikeheddes", "id": 26207957, "node_id": "MDQ6VXNlcjI2MjA3OTU3", "avatar_url": "https://avatars0.githubusercontent.com/u/26207957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeheddes", "html_url": "https://github.com/mikeheddes", "followers_url": "https://api.github.com/users/mikeheddes/followers", "following_url": "https://api.github.com/users/mikeheddes/following{/other_user}", "gists_url": "https://api.github.com/users/mikeheddes/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeheddes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeheddes/subscriptions", "organizations_url": "https://api.github.com/users/mikeheddes/orgs", "repos_url": "https://api.github.com/users/mikeheddes/repos", "events_url": "https://api.github.com/users/mikeheddes/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeheddes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-11T22:18:59Z", "updated_at": "2018-11-12T21:20:36Z", "closed_at": "2018-11-11T23:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is similar to #35 and #40.  With zstandard 0.10.2 and Python 3.6.0.\r\n\r\n```python\r\ndef write_pkl(data, file):\r\n    cctx = zstd.ZstdCompressor()\r\n    stream = io.BytesIO()\r\n    with open(file, 'wb') as f:\r\n        pickle.dump(data, stream)\r\n        stream.seek(0)\r\n        cctx.copy_stream(stream, f)\r\n```\r\n\r\nThe data input is a list with ~270000 tuples with Numpy arrays and single numbers. No bytes are written with such a large array but with smaller arrays it works fine. It was working for me with an array of ~200000 long.\r\n\r\nMy memory consumption goes from ~1.5 GB while creating the array to +35 GB when `write_pkl` is executed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/62", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/62/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/62/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/62", "id": 377679362, "node_id": "MDU6SXNzdWUzNzc2NzkzNjI=", "number": 62, "title": "question on stream writer performance", "user": {"login": "aawise", "id": 38794238, "node_id": "MDQ6VXNlcjM4Nzk0MjM4", "avatar_url": "https://avatars3.githubusercontent.com/u/38794238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aawise", "html_url": "https://github.com/aawise", "followers_url": "https://api.github.com/users/aawise/followers", "following_url": "https://api.github.com/users/aawise/following{/other_user}", "gists_url": "https://api.github.com/users/aawise/gists{/gist_id}", "starred_url": "https://api.github.com/users/aawise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aawise/subscriptions", "organizations_url": "https://api.github.com/users/aawise/orgs", "repos_url": "https://api.github.com/users/aawise/repos", "events_url": "https://api.github.com/users/aawise/events{/privacy}", "received_events_url": "https://api.github.com/users/aawise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-06T03:36:53Z", "updated_at": "2019-02-17T03:22:46Z", "closed_at": "2019-02-17T03:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been testing out ways of compressing json objects, and surprisingly (at least to me), connecting the streams is much slower than simply dumping an entire object:\r\n\r\nIn my example code, this takes 0.8s on pypy3, 0.9s on python3\r\n```\r\nwith open(output_path, 'wb') as f:\r\n    cctx = zstd.ZstdCompressor()\r\n    with cctx.stream_writer(f) as compressor:\r\n        compressor.write(json.dumps(my_map).encode())\r\n```\r\n\r\nAnd this takes 54s on pypy3, 6s on python3\r\n```\r\nwith open(output_path, 'wb') as f:\r\n    cctx = zstd.ZstdCompressor()\r\n    with cctx.stream_writer(f) as compressor:\r\n        compressor2 = codecs.getwriter('utf-8')(compressor)\r\n        json.dump(my_map, compressor2)\r\n```\r\n\r\nIs this expected?  Alternatively, is there a better way for streaming to the compressor without putting the whole object in memory?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/61", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/61/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/61/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/61", "id": 376868476, "node_id": "MDU6SXNzdWUzNzY4Njg0NzY=", "number": 61, "title": "Having trouble building python-zstandard for pypy2 on windows", "user": {"login": "ivo-pupkin", "id": 11686734, "node_id": "MDQ6VXNlcjExNjg2NzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/11686734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivo-pupkin", "html_url": "https://github.com/ivo-pupkin", "followers_url": "https://api.github.com/users/ivo-pupkin/followers", "following_url": "https://api.github.com/users/ivo-pupkin/following{/other_user}", "gists_url": "https://api.github.com/users/ivo-pupkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivo-pupkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivo-pupkin/subscriptions", "organizations_url": "https://api.github.com/users/ivo-pupkin/orgs", "repos_url": "https://api.github.com/users/ivo-pupkin/repos", "events_url": "https://api.github.com/users/ivo-pupkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ivo-pupkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-02T15:55:38Z", "updated_at": "2018-11-03T19:56:16Z", "closed_at": "2018-11-03T19:56:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently i was unsuccessfully trying to build module for pypy2-v6.0.0-win32 on windows 10 x64:\r\n```cmd\r\nC:\\Program Files (x86)\\Microsoft Visual C++ Build Tools>c:\\pypy2-v6.0.0-win32\\pypy.exe -m pip install zstandard\r\nCollecting zstandard\r\n  Using cached https://files.pythonhosted.org/packages/29/21/4612a4b9e628d61aa045558ff008452378b5a333e5a64f7de29dee8b1e77/zstandard-0.10.1.tar.gz\r\nRequirement already satisfied: cffi>=1.11 in c:\\pypy2-v6.0.0-win32\\lib_pypy (from zstandard) (1.11.5)\r\nInstalling collected packages: zstandard\r\n  Running setup.py install for zstandard ... error\r\n    Complete output from command c:\\pypy2-v6.0.0-win32\\pypy.exe -u -c \"import setuptools, tokenize;__file__='c:\\\\users\\\\admin\\\\appdata\\\\local\\\\temp\\\\pip-install-sjrjic\\\\zstandard\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record c:\\users\\admin\\appdata\\local\\temp\\pip-record-2zhkwh\\install-record.txt --single-version-externally-managed --compile:\r\n    Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 15.00.30729.01 for 80x86\r\n    Copyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n    tmp_ppnnx.h\r\n    Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 15.00.30729.01 for 80x86\r\n    Copyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n    tmpbltlc_.h\r\n    generating build\\_zstd_cffi.c\r\n    (already up-to-date)\r\n    not modified: 'build\\\\_zstd_cffi.c'\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\\lib.win32-2.7\r\n    creating build\\lib.win32-2.7\\zstandard\r\n    copying zstandard\\__init__.py -> build\\lib.win32-2.7\\zstandard\r\n    running build_ext\r\n    building 'zstd' extension\r\n    creating build\\temp.win32-2.7\r\n    creating build\\temp.win32-2.7\\Release\r\n    creating build\\temp.win32-2.7\\Release\\zstd\r\n    creating build\\temp.win32-2.7\\Release\\zstd\\common\r\n    creating build\\temp.win32-2.7\\Release\\c-ext\r\n    creating build\\temp.win32-2.7\\Release\\zstd\\compress\r\n    creating build\\temp.win32-2.7\\Release\\zstd\\decompress\r\n    creating build\\temp.win32-2.7\\Release\\zstd\\dictBuilder\r\n    C:\\Users\\admin\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic-ext -Izstd\\common -Izstd -Izstd\\compress -Izstd\\decompress -Izstd\\dictBuilder -Ic:\\pypy2-v6.0.0-win32\\include /Tczstd\\common\\pool.c /Fobuild\\temp.win32-2.7\\Release\\zstd\\common\\pool.obj -DZSTD_MULTITHREAD -DZSTDLIB_VISIBILITY= -DZDICTLIB_VISIBILITY= -DZSTDERRORLIB_VISIBILITY=\r\n    pool.c\r\n    C:\\Users\\admin\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic-ext -Izstd\\common -Izstd -Izstd\\compress -Izstd\\decompress -Izstd\\dictBuilder -Ic:\\pypy2-v6.0.0-win32\\include /Tczstd\\common\\threading.c /Fobuild\\temp.win32-2.7\\Release\\zstd\\common\\threading.obj -DZSTD_MULTITHREAD -DZSTDLIB_VISIBILITY= -DZDICTLIB_VISIBILITY= -DZSTDERRORLIB_VISIBILITY=\r\n    threading.c\r\n    C:\\Users\\admin\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic-ext -Izstd\\common -Izstd -Izstd\\compress -Izstd\\decompress -Izstd\\dictBuilder -Ic:\\pypy2-v6.0.0-win32\\include /Tczstd.c /Fobuild\\temp.win32-2.7\\Release\\zstd.obj -DZSTD_MULTITHREAD -DZSTDLIB_VISIBILITY= -DZDICTLIB_VISIBILITY= -DZSTDERRORLIB_VISIBILITY=\r\n    zstd.c\r\n    C:\\Users\\admin\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic-ext -Izstd\\common -Izstd -Izstd\\compress -Izstd\\decompress -Izstd\\dictBuilder -Ic:\\pypy2-v6.0.0-win32\\include /Tcc-ext\\bufferutil.c /Fobuild\\temp.win32-2.7\\Release\\c-ext\\bufferutil.obj -DZSTD_MULTITHREAD -DZSTDLIB_VISIBILITY= -DZDICTLIB_VISIBILITY= -DZSTDERRORLIB_VISIBILITY=\r\n    bufferutil.c\r\n    C:\\Users\\admin\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic-ext -Izstd\\common -Izstd -Izstd\\compress -Izstd\\decompress -Izstd\\dictBuilder -Ic:\\pypy2-v6.0.0-win32\\include /Tcc-ext\\compressiondict.c /Fobuild\\temp.win32-2.7\\Release\\c-ext\\compressiondict.obj -DZSTD_MULTITHREAD -DZSTDLIB_VISIBILITY= -DZDICTLIB_VISIBILITY= -DZSTDERRORLIB_VISIBILITY=\r\n    compressiondict.c\r\n    C:\\Users\\admin\\AppData\\Local\\Programs\\Common\\Microsoft\\Visual C++ for Python\\9.0\\VC\\Bin\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Ic-ext -Izstd\\common -Izstd -Izstd\\compress -Izstd\\decompress -Izstd\\dictBuilder -Ic:\\pypy2-v6.0.0-win32\\include /Tcc-ext\\compressobj.c /Fobuild\\temp.win32-2.7\\Release\\c-ext\\compressobj.obj -DZSTD_MULTITHREAD -DZSTDLIB_VISIBILITY= -DZDICTLIB_VISIBILITY= -DZSTDERRORLIB_VISIBILITY=\r\n    compressobj.c\r\n    c-ext\\compressobj.c(62) : error C2065: 'ssize_t' : undeclared identifier\r\n    c-ext\\compressobj.c(62) : error C2146: syntax error : missing ')' before identifier 'input'\r\n    c-ext\\compressobj.c(62) : error C2059: syntax error : ')'\r\n    c-ext\\compressobj.c(62) : warning C4018: '<' : signed/unsigned mismatch\r\n    c-ext\\compressobj.c(62) : error C2143: syntax error : missing ';' before '{'\r\n    c-ext\\compressobj.c(62) : warning C4552: '<' : operator has no effect; expected operator with side-effect\r\n    error: command 'C:\\\\Users\\\\admin\\\\AppData\\\\Local\\\\Programs\\\\Common\\\\Microsoft\\\\Visual C++ for Python\\\\9.0\\\\VC\\\\Bin\\\\cl.exe' failed with exit status 2\r\n\r\n    ----------------------------------------\r\nCommand \"c:\\pypy2-v6.0.0-win32\\pypy.exe -u -c \"import setuptools, tokenize;__file__='c:\\\\users\\\\admin\\\\appdata\\\\local\\\\temp\\\\pip-install-sjrjic\\\\zstandard\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record c:\\users\\admin\\appdata\\local\\temp\\pip-record-2zhkwh\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in c:\\users\\admin\\appdata\\local\\temp\\pip-install-sjrjic\\zstandard\\\r\n\r\n```\r\n\r\nPlease, help me to understand what`s went wrong and how to fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/60", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/60/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/60/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/60", "id": 375012073, "node_id": "MDU6SXNzdWUzNzUwMTIwNzM=", "number": 60, "title": "cffi not working with pypy:  ImportError: No module named zstd_cffi", "user": {"login": "rtkbkish", "id": 3708115, "node_id": "MDQ6VXNlcjM3MDgxMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3708115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtkbkish", "html_url": "https://github.com/rtkbkish", "followers_url": "https://api.github.com/users/rtkbkish/followers", "following_url": "https://api.github.com/users/rtkbkish/following{/other_user}", "gists_url": "https://api.github.com/users/rtkbkish/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtkbkish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtkbkish/subscriptions", "organizations_url": "https://api.github.com/users/rtkbkish/orgs", "repos_url": "https://api.github.com/users/rtkbkish/repos", "events_url": "https://api.github.com/users/rtkbkish/events{/privacy}", "received_events_url": "https://api.github.com/users/rtkbkish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-29T13:21:22Z", "updated_at": "2018-11-03T19:56:35Z", "closed_at": "2018-11-03T19:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "We run our infrastructure using pypy and are trying to incorporate zstd into our pipeline.\r\n\r\nImport doesn't work. It looks like the cffi object is created incorrectly\r\n\r\n```shell\r\n$virtualenv -p pypy2-v6.0.0-linux64/bin/pypy\r\npypy        pypy.debug\r\n$virtualenv -p pypy2-v6.0.0-linux64/bin/pypy pypy6-env\r\nRunning virtualenv with interpreter pypy2-v6.0.0-linux64/bin/pypy\r\nNew pypy executable in /home/bkish/pypy6-env/bin/pypy\r\nInstalling setuptools, pip, wheel...done.\r\n$source pypy6-env/bin/activate\r\n$pip install zstandard\r\nCollecting zstandard\r\n  Using cached https://files.pythonhosted.org/packages/29/21/4612a4b9e628d61aa045558ff008452378b5a333e5a64f7de29dee8b1e77/zstandard-0.10.1.tar.gz\r\nRequirement already satisfied: cffi>=1.11 in ./pypy2-v6.0.0-linux64/lib_pypy (from zstandard) (1.11.5)\r\nBuilding wheels for collected packages: zstandard\r\n  Running setup.py bdist_wheel for zstandard ... done\r\n  Stored in directory: /home/bkish/.cache/pip/wheels/e6/f1/ac/4498937124aecdc0b12b9ac6de1984619429b02b476427761e\r\nSuccessfully built zstandard\r\nInstalling collected packages: zstandard\r\nSuccessfully installed zstandard-0.10.1\r\n$python\r\nPython 2.7.13 (ab0b9caf307d, Apr 24 2018, 18:04:42)\r\n[PyPy 6.0.0 with GCC 6.2.0 20160901] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>>> import zstandard\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/bkish/pypy6-env/site-packages/zstandard/__init__.py\", line 38, in <module>\r\n    from zstd_cffi import *\r\nImportError: No module named zstd_cffi\r\n>>>>\r\n```\r\n\r\n```shell\r\n$pip uninstall zstandard\r\nUninstalling zstandard-0.10.1:\r\n  Would remove:\r\n    /home/bkish/pypy6-env/site-packages/_zstd_cffi.pypy-41.so\r\n    /home/bkish/pypy6-env/site-packages/zstandard-0.10.1.dist-info/*\r\n    /home/bkish/pypy6-env/site-packages/zstandard/*\r\n    /home/bkish/pypy6-env/site-packages/zstd.pypy-41.so\r\nProceed (y/n)? y\r\n  Successfully uninstalled zstandard-0.10.1\r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/58", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/58/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/58/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/58", "id": 367945337, "node_id": "MDU6SXNzdWUzNjc5NDUzMzc=", "number": 58, "title": "`ZstdDecompressionReader.closed` should be a property, not method.", "user": {"login": "gwk", "id": 406380, "node_id": "MDQ6VXNlcjQwNjM4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/406380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwk", "html_url": "https://github.com/gwk", "followers_url": "https://api.github.com/users/gwk/followers", "following_url": "https://api.github.com/users/gwk/following{/other_user}", "gists_url": "https://api.github.com/users/gwk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwk/subscriptions", "organizations_url": "https://api.github.com/users/gwk/orgs", "repos_url": "https://api.github.com/users/gwk/repos", "events_url": "https://api.github.com/users/gwk/events{/privacy}", "received_events_url": "https://api.github.com/users/gwk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-08T20:41:44Z", "updated_at": "2018-10-08T22:20:40Z", "closed_at": "2018-10-08T22:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "`IOBase` defines `closed` as a property, and the builtin decompressors types for gz and lzma/xz follow this API. It would be great if Zstandard could match that; as it is, when you try to create a TextIOWrapper with a `ZstdDecompressionReader`, the read fails with \"ValueError: I/O operation on closed file.\", because the `closed` method evaluates to `True`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/57", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/57/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/57/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/57", "id": 367773745, "node_id": "MDU6SXNzdWUzNjc3NzM3NDU=", "number": 57, "title": "Is it possible to relax `with` usage requirements?", "user": {"login": "gwk", "id": 406380, "node_id": "MDQ6VXNlcjQwNjM4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/406380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwk", "html_url": "https://github.com/gwk", "followers_url": "https://api.github.com/users/gwk/followers", "following_url": "https://api.github.com/users/gwk/following{/other_user}", "gists_url": "https://api.github.com/users/gwk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwk/subscriptions", "organizations_url": "https://api.github.com/users/gwk/orgs", "repos_url": "https://api.github.com/users/gwk/repos", "events_url": "https://api.github.com/users/gwk/events{/privacy}", "received_events_url": "https://api.github.com/users/gwk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-08T12:47:34Z", "updated_at": "2019-02-17T00:37:53Z", "closed_at": "2019-02-17T00:37:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thank you for all of the work that went into publishing this package. I have been experimenting with it and would very much like to incorporate it into my work. However, I find that the requirement to only read from the decompressor inside of a `with` statement is somewhat inconvenient for use in cpython data processing scripts. I understand that it is a best practice to open a file within a `with` context. However it is not a requirement for correctly using other file handles and decompressor handles. As a result I have existing code for which Zstandard does not easily drop in as a replacement for gzip or lzma/xz.\r\n\r\nI am curious if there is a strong technical requirement that the decompressor must be used in this fashion, or if it is merely the library enforcing the best practice. If the latter, please consider relaxing the requirement so that the decompressor handle can be read from and then closed with out the use of `with`. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/56", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/56/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/56/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/56", "id": 367765638, "node_id": "MDU6SXNzdWUzNjc3NjU2Mzg=", "number": 56, "title": "Segmentation fault after catching exception", "user": {"login": "gwk", "id": 406380, "node_id": "MDQ6VXNlcjQwNjM4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/406380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwk", "html_url": "https://github.com/gwk", "followers_url": "https://api.github.com/users/gwk/followers", "following_url": "https://api.github.com/users/gwk/following{/other_user}", "gists_url": "https://api.github.com/users/gwk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwk/subscriptions", "organizations_url": "https://api.github.com/users/gwk/orgs", "repos_url": "https://api.github.com/users/gwk/repos", "events_url": "https://api.github.com/users/gwk/events{/privacy}", "received_events_url": "https://api.github.com/users/gwk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-08T12:25:48Z", "updated_at": "2018-10-08T16:54:32Z", "closed_at": "2018-10-08T16:54:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I encountered a segmentation fault after misusing the API in the interactive REPL. Below is a reproduction. This was found on macOS 10.14; the file `empty.txt.zst` was created by compressing an empty file using the `zstd` command line utility obtained via Homebrew. I suspect that this is a problem with the python bindings though, and probably not dependent on platform or archive contents. Happy to provide more info as necessary.\r\n\r\n```\r\nfrom zstandard import ZstdDecompressor\r\nf = open('empty.txt.zst', 'rb')\r\ndecompressor = ZstdDecompressor()\r\ndf = decompressor.stream_reader(f)\r\n\r\ntry:\r\n  with df:\r\n    df.read() # TypeError: function missing required argument 'size' (pos 1).\r\nexcept Exception as e:\r\n  print(type(e), e)\r\n\r\nwith df:\r\n  df.read(100) # Segmentation fault.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/55", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/55/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/55/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/55", "id": 367412577, "node_id": "MDU6SXNzdWUzNjc0MTI1Nzc=", "number": 55, "title": "COMPRESSOBJ_FLUSH_BLOCK may not fully flush", "user": {"login": "indygreg", "id": 342993, "node_id": "MDQ6VXNlcjM0Mjk5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/342993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indygreg", "html_url": "https://github.com/indygreg", "followers_url": "https://api.github.com/users/indygreg/followers", "following_url": "https://api.github.com/users/indygreg/following{/other_user}", "gists_url": "https://api.github.com/users/indygreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/indygreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indygreg/subscriptions", "organizations_url": "https://api.github.com/users/indygreg/orgs", "repos_url": "https://api.github.com/users/indygreg/repos", "events_url": "https://api.github.com/users/indygreg/events{/privacy}", "received_events_url": "https://api.github.com/users/indygreg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-06T01:45:17Z", "updated_at": "2018-10-07T00:50:23Z", "closed_at": "2018-10-07T00:50:23Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I'm reasonably certain that using `COMPRESSOBJ_FLUSH_BLOCK` with the incremental compressor may result in partially flushed output. I'm pretty sure the comment and code around `/* The output buffer is of size ZSTD_CStreamOutSize(), which is  guaranteed to hold a full block. */` is wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/52", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/52/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/52/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/52", "id": 346336643, "node_id": "MDU6SXNzdWUzNDYzMzY2NDM=", "number": 52, "title": "Build fails on FreeBSD with --system-zstd", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-31T20:00:21Z", "updated_at": "2018-10-19T05:21:21Z", "closed_at": "2018-10-19T05:21:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Beginning from some recent update, the FreeBSD package build fails:\r\n```\r\ncc -DNDEBUG -O2 -pipe -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -isystem /usr/local/include -fPIC -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/zstd/common -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext -I/usr/local/include/python3.6m -c /wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/decompressor.c -o build/temp.freebsd-11.1-RELEASE-p11-i386-3.6/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/decompressor.o -DZSTD_MULTITHREAD\r\ncc -DNDEBUG -O2 -pipe -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -isystem /usr/local/include -fPIC -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/zstd/common -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext -I/usr/local/include/python3.6m -c /wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/compressiondict.c -o build/temp.freebsd-11.1-RELEASE-p11-i386-3.6/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/compressiondict.o -DZSTD_MULTITHREAD\r\ncc -DNDEBUG -O2 -pipe -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -isystem /usr/local/include -fPIC -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/zstd/common -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext -I/usr/local/include/python3.6m -c /wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/decompressoriterator.c -o build/temp.freebsd-11.1-RELEASE-p11-i386-3.6/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/decompressoriterator.o -DZSTD_MULTITHREAD\r\ncc -DNDEBUG -O2 -pipe -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -isystem /usr/local/include -fPIC -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/zstd/common -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext -I/usr/local/include/python3.6m -c /wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/decompressionreader.c -o build/temp.freebsd-11.1-RELEASE-p11-i386-3.6/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/decompressionreader.o -DZSTD_MULTITHREAD\r\ncc -DNDEBUG -O2 -pipe -fstack-protector -isystem /usr/local/include -fno-strict-aliasing -isystem /usr/local/include -fPIC -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/zstd/common -I/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext -I/usr/local/include/python3.6m -c /wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/constants.c -o build/temp.freebsd-11.1-RELEASE-p11-i386-3.6/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/constants.o -DZSTD_MULTITHREAD\r\n/wrkdirs/usr/ports/archivers/py-zstandard/work-py36/zstandard-0.9.1/c-ext/constants.c:82:51: error: use of undeclared identifier 'ZSTD_TARGETLENGTH_MIN'\r\n        PyModule_AddIntConstant(mod, \"TARGETLENGTH_MIN\", ZSTD_TARGETLENGTH_MIN);\r\n                                                         ^\r\n1 error generated.\r\nnot modified: 'build/_zstd_cffi.c'\r\n```\r\n\r\nRemoving the ```zstd``` directory also causes it to fail, even though it shouldn't be needed with ```--system-zstd```:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"setup.py\", line 50, in <module>\r\n    import make_cffi\r\n  File \"make_cffi.py\", line 168, in <module>\r\n    preprocessed = preprocess(header)\r\n  File \"make_cffi.py\", line 85, in preprocess\r\n    with open(path, 'rb') as fh:\r\nIOError: [Errno 2] No such file or directory: '/usr/ports/archivers/py-zstandard/work-py27/zstandard-0.9.1/zstd/zstd.h'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/51", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/51/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/51/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/51", "id": 342869105, "node_id": "MDU6SXNzdWUzNDI4NjkxMDU=", "number": 51, "title": "Absolute path error in Python 3.7", "user": {"login": "aadler", "id": 5596401, "node_id": "MDQ6VXNlcjU1OTY0MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5596401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aadler", "html_url": "https://github.com/aadler", "followers_url": "https://api.github.com/users/aadler/followers", "following_url": "https://api.github.com/users/aadler/following{/other_user}", "gists_url": "https://api.github.com/users/aadler/gists{/gist_id}", "starred_url": "https://api.github.com/users/aadler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aadler/subscriptions", "organizations_url": "https://api.github.com/users/aadler/orgs", "repos_url": "https://api.github.com/users/aadler/repos", "events_url": "https://api.github.com/users/aadler/events{/privacy}", "received_events_url": "https://api.github.com/users/aadler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-19T20:01:01Z", "updated_at": "2018-10-06T21:41:37Z", "closed_at": "2018-10-06T21:41:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "While trying to install version 0.9.1using pip I get the following error:\r\n\r\n```\r\n    reading manifest file 'zstandard.egg-info\\SOURCES.txt'\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"C:\\R\\temp\\pip-install-aoqr5ae0\\zstandard\\setup.py\", line 96, in <mod\r\nule>\r\n        install_requires=install_requires,\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\__init__.py\",\r\n line 131, in setup\r\n        return distutils.core.setup(**attrs)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\core.py\", line 148, in setup\r\n\r\n        dist.run_commands()\r\n      File \"c:\\program files\\python37\\lib\\distutils\\dist.py\", line 966, in run_c\r\nommands\r\n        self.run_command(cmd)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\dist.py\", line 985, in run_c\r\nommand\r\n        cmd_obj.run()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\insta\r\nll.py\", line 61, in run\r\n        return orig.install.run(self)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\command\\install.py\", line 55\r\n7, in run\r\n        self.run_command(cmd_name)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\cmd.py\", line 313, in run_co\r\nmmand\r\n        self.distribution.run_command(command)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\dist.py\", line 985, in run_c\r\nommand\r\n        cmd_obj.run()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\insta\r\nll_egg_info.py\", line 34, in run\r\n        self.run_command('egg_info')\r\n      File \"c:\\program files\\python37\\lib\\distutils\\cmd.py\", line 313, in run_co\r\nmmand\r\n        self.distribution.run_command(command)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\dist.py\", line 985, in run_c\r\nommand\r\n        cmd_obj.run()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\egg_i\r\nnfo.py\", line 278, in run\r\n        self.find_sources()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\egg_i\r\nnfo.py\", line 293, in find_sources\r\n        mm.run()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\egg_i\r\nnfo.py\", line 524, in run\r\n        self.add_defaults()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\egg_i\r\nnfo.py\", line 567, in add_defaults\r\n        self.read_manifest()\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\sdist\r\n.py\", line 199, in read_manifest\r\n        self.filelist.append(line)\r\n      File \"c:\\program files\\python37\\lib\\site-packages\\setuptools\\command\\egg_i\r\nnfo.py\", line 466, in append\r\n        path = convert_path(item)\r\n      File \"c:\\program files\\python37\\lib\\distutils\\util.py\", line 110, in conve\r\nrt_path\r\n        raise ValueError(\"path '%s' cannot be absolute\" % pathname)\r\n    ValueError: path '/home/travis/build/indygreg/python-zstandard/zstd.c' canno\r\nt be absolute\r\n\r\n    ----------------------------------------\r\nCommand \"\"c:\\program files\\python37\\python.exe\" -u -c \"import setuptools, tokeni\r\nze;__file__='C:\\\\R\\\\temp\\\\pip-install-aoqr5ae0\\\\zstandard\\\\setup.py';f=getattr(t\r\nokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();e\r\nxec(compile(code, __file__, 'exec'))\" install --record C:\\R\\temp\\pip-record-oala\r\ns6un\\install-record.txt --single-version-externally-managed --compile\" failed wi\r\nth error code 1 in C:\\R\\temp\\pip-install-aoqr5ae0\\zstandard\\\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/50", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/50/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/50/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/50", "id": 339229204, "node_id": "MDU6SXNzdWUzMzkyMjkyMDQ=", "number": 50, "title": "zstandard module doesn't have __version__", "user": {"login": "talkaminker", "id": 13932998, "node_id": "MDQ6VXNlcjEzOTMyOTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/13932998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talkaminker", "html_url": "https://github.com/talkaminker", "followers_url": "https://api.github.com/users/talkaminker/followers", "following_url": "https://api.github.com/users/talkaminker/following{/other_user}", "gists_url": "https://api.github.com/users/talkaminker/gists{/gist_id}", "starred_url": "https://api.github.com/users/talkaminker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talkaminker/subscriptions", "organizations_url": "https://api.github.com/users/talkaminker/orgs", "repos_url": "https://api.github.com/users/talkaminker/repos", "events_url": "https://api.github.com/users/talkaminker/events{/privacy}", "received_events_url": "https://api.github.com/users/talkaminker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-08T14:14:07Z", "updated_at": "2018-10-07T00:29:58Z", "closed_at": "2018-10-07T00:29:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`zstd.__version__` exists while `zstandard.__version__` doesn't\r\nfor version 0.9.0 (both windows and linux)\r\nprobably some problem in the transition from zstd to zstandard.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/46", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/46/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/46/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/46", "id": 322480024, "node_id": "MDU6SXNzdWUzMjI0ODAwMjQ=", "number": 46, "title": "Can't pip install from msys2", "user": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-12T03:54:05Z", "updated_at": "2018-06-05T04:52:59Z", "closed_at": "2018-06-05T04:52:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is the output while `pip install`'ing mercurial from msys2:\r\n```\r\n  Running setup.py (path:c:/users/ta2291~1/appdata/local/temp/pip-build-_zfnyo/mercurial/setup.py) egg_info for package mercurial\r\n    Running command python setup.py egg_info\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"c:/users/ta2291~1/appdata/local/temp/pip-build-_zfnyo/mercurial/setup.py\", line 910, in <module>\r\n        extmodules.append(setup_zstd.get_c_extension(name='mercurial.zstd'))\r\n      File \"contrib/python-zstandard/setup_zstd.py\", line 128, in get_c_extension\r\n        compiler.compiler_type)\r\n    Exception: unhandled compiler type: mingw32\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/45", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/45/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/45/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/45", "id": 320974821, "node_id": "MDU6SXNzdWUzMjA5NzQ4MjE=", "number": 45, "title": "Would you please add simple examples to the README?", "user": {"login": "aadler", "id": 5596401, "node_id": "MDQ6VXNlcjU1OTY0MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5596401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aadler", "html_url": "https://github.com/aadler", "followers_url": "https://api.github.com/users/aadler/followers", "following_url": "https://api.github.com/users/aadler/following{/other_user}", "gists_url": "https://api.github.com/users/aadler/gists{/gist_id}", "starred_url": "https://api.github.com/users/aadler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aadler/subscriptions", "organizations_url": "https://api.github.com/users/aadler/orgs", "repos_url": "https://api.github.com/users/aadler/repos", "events_url": "https://api.github.com/users/aadler/events{/privacy}", "received_events_url": "https://api.github.com/users/aadler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-07T22:04:59Z", "updated_at": "2018-11-22T05:15:08Z", "closed_at": "2018-11-22T05:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you add simple examples to the README, please? I'm still unsure how to properly invoke zstandard to compress a file using Python. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/43", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/43/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/43/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/43", "id": 312409482, "node_id": "MDU6SXNzdWUzMTI0MDk0ODI=", "number": 43, "title": "--system-zstd fails: error: unknown type name 'ZSTD_dictContentType_e'", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-09T06:29:51Z", "updated_at": "2018-04-09T07:48:46Z", "closed_at": "2018-04-09T07:48:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to build 0.9.0 with ```--system-zstd``` fails:\r\n```\r\nIn file included from /usr/ports/archivers/py-zstandard/work-py27/zstandard-0.9.0/c-ext/decompressionreader.c:9:\r\n/usr/ports/archivers/py-zstandard/work-py27/zstandard-0.9.0/c-ext/python-zstandard.h:86:2: error: unknown type name 'ZSTD_dictContentType_e'\r\n        ZSTD_dictContentType_e dictType;\r\n        ^\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/41", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/41/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/41/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/41", "id": 306316178, "node_id": "MDU6SXNzdWUzMDYzMTYxNzg=", "number": 41, "title": "Linux and macOS wheels", "user": {"login": "thewtex", "id": 25432, "node_id": "MDQ6VXNlcjI1NDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/25432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thewtex", "html_url": "https://github.com/thewtex", "followers_url": "https://api.github.com/users/thewtex/followers", "following_url": "https://api.github.com/users/thewtex/following{/other_user}", "gists_url": "https://api.github.com/users/thewtex/gists{/gist_id}", "starred_url": "https://api.github.com/users/thewtex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thewtex/subscriptions", "organizations_url": "https://api.github.com/users/thewtex/orgs", "repos_url": "https://api.github.com/users/thewtex/repos", "events_url": "https://api.github.com/users/thewtex/events{/privacy}", "received_events_url": "https://api.github.com/users/thewtex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-19T02:43:43Z", "updated_at": "2018-04-07T06:05:18Z", "closed_at": "2018-04-07T06:05:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks for putting this package together!\r\n\r\nBefore depending on it, I would like for there to be Linux and macOS binary wheels on PyPI.\r\n\r\nWould a PR be accepted that improves the build system to generate Linux and macOS wheels with [scikit-build](https://scikit-build.readthedocs.io/)?\r\n\r\nCC: @jcfr", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/40", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/40/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/40/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/40", "id": 296176485, "node_id": "MDU6SXNzdWUyOTYxNzY0ODU=", "number": 40, "title": "copy_stream leaks memory (when compressing)", "user": {"login": "talkaminker", "id": 13932998, "node_id": "MDQ6VXNlcjEzOTMyOTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/13932998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talkaminker", "html_url": "https://github.com/talkaminker", "followers_url": "https://api.github.com/users/talkaminker/followers", "following_url": "https://api.github.com/users/talkaminker/following{/other_user}", "gists_url": "https://api.github.com/users/talkaminker/gists{/gist_id}", "starred_url": "https://api.github.com/users/talkaminker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talkaminker/subscriptions", "organizations_url": "https://api.github.com/users/talkaminker/orgs", "repos_url": "https://api.github.com/users/talkaminker/repos", "events_url": "https://api.github.com/users/talkaminker/events{/privacy}", "received_events_url": "https://api.github.com/users/talkaminker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-11T09:43:37Z", "updated_at": "2018-03-18T00:58:11Z", "closed_at": "2018-02-12T02:26:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Same as [https://github.com/indygreg/python-zstandard/issues/35](url)\r\ncopy_steam leaks also on compression\r\ncopy_stream leaks a lot of memory when compressing.\r\nThe amount leaked seems to be proportional to the size of the input stream\r\nchanging `1024*1024` to `1024 ` leaks less memory \r\n```\r\nimport os\r\nimport gc\r\nimport zstd\r\nimport tempfile\r\nimport resource\r\n\r\nwith tempfile.NamedTemporaryFile('wb', delete=False) as f:\r\n    f.write(os.urandom(1024*1024))\r\ninput_path = f.name\r\nf = tempfile.NamedTemporaryFile(delete=False); f.close()\r\noutput_path = f.name\r\nfor i in range(1001):\r\n    with open(input_path, 'rb') as ifh, open(output_path, 'wb') as ofh:\r\n        zstd.ZstdCompressor().copy_stream(ifh, ofh)\r\n    if i % 100 == 0:\r\n        print(i, resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\r\n        gc.collect()\r\nos.remove(input_path)\r\nos.remove(output_path)\r\n```\r\n\r\noutput:\r\n0 12952\r\n100 116052\r\n200 219148\r\n300 322460\r\n400 425780\r\n500 529092\r\n600 632404\r\n700 735716\r\n800 839036\r\n900 942348\r\n1000 1045660", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/39", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/39/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/39/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/39", "id": 296008825, "node_id": "MDU6SXNzdWUyOTYwMDg4MjU=", "number": 39, "title": "ZstdDecompressor stream_reader doesn't support readline()", "user": {"login": "gcp", "id": 1104290, "node_id": "MDQ6VXNlcjExMDQyOTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1104290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcp", "html_url": "https://github.com/gcp", "followers_url": "https://api.github.com/users/gcp/followers", "following_url": "https://api.github.com/users/gcp/following{/other_user}", "gists_url": "https://api.github.com/users/gcp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcp/subscriptions", "organizations_url": "https://api.github.com/users/gcp/orgs", "repos_url": "https://api.github.com/users/gcp/repos", "events_url": "https://api.github.com/users/gcp/events{/privacy}", "received_events_url": "https://api.github.com/users/gcp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-09T20:54:48Z", "updated_at": "2018-03-26T03:25:28Z", "closed_at": "2018-03-26T03:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for ZstdCompressor explicitly says that stream_reader's file-like object doesn't support readline() because it makes no sense for compressed data. For Decompressor, this remark is missing - as it should be - but the function doesn't seem to be implemented and throws NotImplementedError.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/38", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/38/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/38/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/38", "id": 292353665, "node_id": "MDU6SXNzdWUyOTIzNTM2NjU=", "number": 38, "title": "Roundtrip fails with 0.8.1", "user": {"login": "jonathanunderwood", "id": 992114, "node_id": "MDQ6VXNlcjk5MjExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/992114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanunderwood", "html_url": "https://github.com/jonathanunderwood", "followers_url": "https://api.github.com/users/jonathanunderwood/followers", "following_url": "https://api.github.com/users/jonathanunderwood/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanunderwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanunderwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanunderwood/subscriptions", "organizations_url": "https://api.github.com/users/jonathanunderwood/orgs", "repos_url": "https://api.github.com/users/jonathanunderwood/repos", "events_url": "https://api.github.com/users/jonathanunderwood/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanunderwood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T10:25:06Z", "updated_at": "2018-02-01T19:31:14Z", "closed_at": "2018-02-01T19:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the current package (0.8.1) I see this:\r\n\r\n```\r\n$ python\r\nPython 3.6.4 (default, Jan 17 2018, 12:00:56) \r\n[GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import zstd\r\n>>> data = b'123' * 1000\r\n>>> cctx = zstd.ZstdCompressor()\r\n>>> c=cctx.compress(data, allow_empty=True)\r\n>>> dctx = zstd.ZstdDecompressor()\r\n>>> dctx.decompress(c)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nzstd.ZstdError: input data invalid or missing content size in frame header\r\n```\r\nIn case it's helpful:\r\n\r\n```\r\n$ pip freeze\r\nCython==0.27.3\r\ndeprecation==1.0.1\r\nllvmlite==0.21.0\r\nlz4==0.19.1\r\nnumba==0.36.2\r\nnumpy==1.14.0\r\npandas==0.22.0\r\npython-dateutil==2.6.1\r\npython-snappy==0.5.1\r\npytz==2017.3\r\nsix==1.11.0\r\nthrift==0.11.0\r\nzstandard==0.8.1\r\n```\r\n```\r\n$ rpm -q libzstd\r\nlibzstd-1.3.3-1.fc27.x86_64\r\n```\r\n\r\n(currently blocking https://github.com/dask/fastparquet/pull/296)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/36", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/36/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/36/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/36", "id": 287324386, "node_id": "MDU6SXNzdWUyODczMjQzODY=", "number": 36, "title": "With --system-zstd, build requires zstdmt_compress.h that isn't installed by zstd", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-10T06:06:30Z", "updated_at": "2018-03-26T02:39:31Z", "closed_at": "2018-03-26T02:39:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/facebook/zstd has gmake and cmake builds, but none of them installs ```zstdmt_compress.h ```.\r\n\r\n```\r\nIn file included from /usr/ports/archivers/py-zstandard/work-py27/python-zstandard-0.8.1-103-gb3b44ff/c-ext/decompressor.c:9:\r\n/usr/ports/archivers/py-zstandard/work-py27/python-zstandard-0.8.1-103-gb3b44ff/c-ext/python-zstandard.h:17:10: fatal error: 'zstdmt_compress.h' file not found\r\n#include <zstdmt_compress.h>\r\n         ^~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nYou should either convince zstd to install the header, or work without it.\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/35", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/35/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/35/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/35", "id": 285773781, "node_id": "MDU6SXNzdWUyODU3NzM3ODE=", "number": 35, "title": "memory leak when decompressing with copy_stream on 0.8.1", "user": {"login": "jessehersch", "id": 5974062, "node_id": "MDQ6VXNlcjU5NzQwNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5974062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessehersch", "html_url": "https://github.com/jessehersch", "followers_url": "https://api.github.com/users/jessehersch/followers", "following_url": "https://api.github.com/users/jessehersch/following{/other_user}", "gists_url": "https://api.github.com/users/jessehersch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessehersch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessehersch/subscriptions", "organizations_url": "https://api.github.com/users/jessehersch/orgs", "repos_url": "https://api.github.com/users/jessehersch/repos", "events_url": "https://api.github.com/users/jessehersch/events{/privacy}", "received_events_url": "https://api.github.com/users/jessehersch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-03T18:42:45Z", "updated_at": "2018-02-12T02:26:32Z", "closed_at": "2018-02-12T02:26:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "env: linux\r\nversion: 0.8.1 (this is what's currently on pypi as of Jan 3 2018: https://pypi.python.org/pypi/zstandard)\r\npython: 3.6.1\r\n\r\nHere's a repro:\r\n```python\r\nimport os\r\nimport gc\r\nimport io\r\nimport zstd\r\nimport tempfile\r\nimport resource\r\nimport subprocess\r\n\r\n\r\ndef main():\r\n    with tempfile.NamedTemporaryFile('wb') as compressed:\r\n        uncompressed = os.urandom(1024)\r\n        compressed.write(zstd.ZstdCompressor().compress(uncompressed))\r\n        compressed.flush()\r\n        \r\n        print('using the zstd python bindings leaks')\r\n        for i in range(10001):\r\n            decompressed = io.BytesIO()\r\n            with open(compressed.name, 'rb') as file:\r\n                zstd.ZstdDecompressor().copy_stream(file, decompressed)\r\n            decompressed.seek(0)\r\n            result = decompressed.read()\r\n            assert result == uncompressed\r\n            del result, decompressed\r\n            if i % 1000 == 0:\r\n                print(i, resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\r\n                gc.collect()\r\n\r\n        print('workaround is to launch zstd as subprocess and skip the python bindings :(')\r\n        for i in range(10001):\r\n            with subprocess.Popen(['zstd', '-dcq', compressed.name], stdout=subprocess.PIPE, stderr=subprocess.PIPE) as p:\r\n                stdout, stderr = p.communicate()\r\n                p.wait()\r\n                assert p.returncode == 0\r\n                assert stdout == uncompressed\r\n                del stdout, stderr\r\n                if i % 1000 == 0:\r\n                    print(i, resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\r\n                    gc.collect()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nHere's the output:\r\n```\r\n$ python3 main.py\r\nusing the zstd python bindings leaks\r\n0 13000\r\n1000 14020\r\n2000 15340\r\n3000 16396\r\n4000 17452\r\n5000 18508\r\n6000 19564\r\n7000 20884\r\n8000 21940\r\n9000 22996\r\n10000 24052\r\nworkaround is to launch zstd as subprocess and skip the python bindings :(\r\n0 24224\r\n1000 24224\r\n2000 24224\r\n3000 24224\r\n4000 24224\r\n5000 24224\r\n6000 24224\r\n7000 24224\r\n8000 24224\r\n9000 24224\r\n10000 24224\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/34", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/34/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/34/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/34", "id": 278395925, "node_id": "MDU6SXNzdWUyNzgzOTU5MjU=", "number": 34, "title": "read() must be called from an active context manager", "user": {"login": "zeromake", "id": 8318747, "node_id": "MDQ6VXNlcjgzMTg3NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8318747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeromake", "html_url": "https://github.com/zeromake", "followers_url": "https://api.github.com/users/zeromake/followers", "following_url": "https://api.github.com/users/zeromake/following{/other_user}", "gists_url": "https://api.github.com/users/zeromake/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeromake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeromake/subscriptions", "organizations_url": "https://api.github.com/users/zeromake/orgs", "repos_url": "https://api.github.com/users/zeromake/repos", "events_url": "https://api.github.com/users/zeromake/events{/privacy}", "received_events_url": "https://api.github.com/users/zeromake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-01T08:46:34Z", "updated_at": "2018-10-07T00:20:58Z", "closed_at": "2018-10-07T00:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "### ENV\r\n1. system: linux\r\n2. python: 3.6.3\r\n3. zstandard: 0.9.0.dev0\r\n\r\n### simulation to io.RawIOBase\r\ntest.py\r\n``` python\r\nimport io\r\nimport zstandard as zstd\r\nclass ZstdDecompressReader(io.RawIOBase):\r\n    def __init__(self, fp):\r\n        self._fp = fp\r\n        self._eof = False\r\n        self._pos = 0\r\n        self._size = -1\r\n        self._decompressor = zstd.ZstdDecompressor()\r\n        self._stream_reader = None\r\n    def close(self):\r\n        self._decompressor = None\r\n        if self._stream_reader:\r\n            self._stream_reader.close()\r\n            self._stream_reader = None\r\n        return super().close()\r\n\r\n    def read(self, size=-1):\r\n        if size < 0:\r\n            return self.readall()\r\n        if not size or self._eof:\r\n            return b\"\"\r\n        if not self._stream_reader:\r\n            self._stream_reader = self._decompressor.stream_reader(self._fp)\r\n        data = self._stream_reader.read(size)\r\n        if not data:\r\n            self._eof = True\r\n            self._size = self._pos\r\n            return b\"\"\r\n        self._pos += len(data)\r\n        return data\r\n\r\nif __name__ == '__main__':\r\n    with open('1.tar.zstd', 'rb') as fp:\r\n        decompress = ZstdDecompressReader(fp)\r\n        print(decompress.read(10))\r\n```\r\npython test.py\r\n``` bash\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 36, in <module>\r\n    print(decompress.read(10))\r\n  File \"./test.py\", line 25, in read\r\n    data = self._stream_reader.read(size)\r\nzstd.ZstdError: read() must be called from an active context manager\r\n```\r\n## can run\r\n``` python\r\nimport io\r\nimport zstandard as zstd\r\nclass ZstdDecompressReader(io.RawIOBase):\r\n    def __init__(self, fp):\r\n        self._fp = fp\r\n        self._eof = False\r\n        self._pos = 0\r\n        self._size = -1\r\n        self._decompressor = zstd.ZstdDecompressor()\r\n        self._stream_reader = None\r\n    def close(self):\r\n        self._decompressor = None\r\n        if self._stream_reader:\r\n            self._stream_reader.__exit__()\r\n            # self._stream_reader.close()\r\n            self._stream_reader = None\r\n        return super().close()\r\n\r\n    def read(self, size=-1):\r\n        if size < 0:\r\n            return self.readall()\r\n        if not size or self._eof:\r\n            return b\"\"\r\n        if not self._stream_reader:\r\n            self._stream_reader = self._decompressor.stream_reader(self._fp)\r\n            self._stream_reader.__enter__()\r\n        data = self._stream_reader.read(size)\r\n        if not data:\r\n            self._eof = True\r\n            self._size = self._pos\r\n            return b\"\"\r\n        self._pos += len(data)\r\n        return data\r\n\r\nif __name__ == '__main__':\r\n    with open('1.tar.zstd', 'rb') as fp:\r\n        decompressor = zstd.ZstdDecompressor()\r\n        decompress = ZstdDecompressReader(fp)\r\n        print(decompress.read(10))\r\n```\r\nor\r\n``` python\r\nimport io\r\nimport zstandard as zstd\r\nclass ZstdDecompressReader(io.RawIOBase):\r\n    def __init__(self, decompressor, stream_reader):\r\n        self._fp = fp\r\n        self._eof = False\r\n        self._pos = 0\r\n        self._size = -1\r\n        self._decompressor = decompressor\r\n        self._stream_reader = stream_reader\r\n    def close(self):\r\n        self._decompressor = None\r\n        if self._stream_reader:\r\n            self._stream_reader.close()\r\n            self._stream_reader = None\r\n        return super().close()\r\n\r\n    def read(self, size=-1):\r\n        if size < 0:\r\n            return self.readall()\r\n        if not size or self._eof:\r\n            return b\"\"\r\n        if not self._stream_reader:\r\n            self._stream_reader = self._decompressor.stream_reader(self._fp)\r\n        data = self._stream_reader.read(size)\r\n        if not data:\r\n            self._eof = True\r\n            self._size = self._pos\r\n            return b\"\"\r\n        self._pos += len(data)\r\n        return data\r\n\r\nif __name__ == '__main__':\r\n    with open('1.tar.zstd', 'rb') as fp:\r\n        decompressor = zstd.ZstdDecompressor()\r\n        with decompressor.stream_reader(fp) as stream_reader:\r\n            decompress = ZstdDecompressReader(decompressor, stream_reader)\r\n            print(decompress.read(10))\r\n            print(decompress.read(10))\r\n```\r\n### suggest\r\nSo should it be not context manager\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/33", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/33/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/33/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/33", "id": 277441131, "node_id": "MDU6SXNzdWUyNzc0NDExMzE=", "number": 33, "title": "Add github link to PyPi page", "user": {"login": "jonathanunderwood", "id": 992114, "node_id": "MDQ6VXNlcjk5MjExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/992114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanunderwood", "html_url": "https://github.com/jonathanunderwood", "followers_url": "https://api.github.com/users/jonathanunderwood/followers", "following_url": "https://api.github.com/users/jonathanunderwood/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanunderwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanunderwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanunderwood/subscriptions", "organizations_url": "https://api.github.com/users/jonathanunderwood/orgs", "repos_url": "https://api.github.com/users/jonathanunderwood/repos", "events_url": "https://api.github.com/users/jonathanunderwood/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanunderwood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-28T16:06:53Z", "updated_at": "2018-03-26T03:22:21Z", "closed_at": "2018-03-26T03:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The PyPi page for the package doesn't contain a link to the github project - would be really useful if it did.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/32", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/32/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/32/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/32", "id": 266309024, "node_id": "MDU6SXNzdWUyNjYzMDkwMjQ=", "number": 32, "title": "Move away from ZSTDMT", "user": {"login": "terrelln", "id": 6619134, "node_id": "MDQ6VXNlcjY2MTkxMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6619134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrelln", "html_url": "https://github.com/terrelln", "followers_url": "https://api.github.com/users/terrelln/followers", "following_url": "https://api.github.com/users/terrelln/following{/other_user}", "gists_url": "https://api.github.com/users/terrelln/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrelln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrelln/subscriptions", "organizations_url": "https://api.github.com/users/terrelln/orgs", "repos_url": "https://api.github.com/users/terrelln/repos", "events_url": "https://api.github.com/users/terrelln/events{/privacy}", "received_events_url": "https://api.github.com/users/terrelln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-17T23:11:28Z", "updated_at": "2018-03-26T22:38:17Z", "closed_at": "2018-03-25T22:30:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `ZSTDMT` API is superseded by the new advanced API and eventually all the functions will be made `static`. We will keep the `ZSTDMT` around for a few releases to give people time to update. The new advanced API is capable of multithreading, and supports the magicless format.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/31", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/31/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/31/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/31", "id": 256049971, "node_id": "MDU6SXNzdWUyNTYwNDk5NzE=", "number": 31, "title": "python-zstandard incompatible with pypy", "user": {"login": "c-wicklein", "id": 17092792, "node_id": "MDQ6VXNlcjE3MDkyNzky", "avatar_url": "https://avatars0.githubusercontent.com/u/17092792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-wicklein", "html_url": "https://github.com/c-wicklein", "followers_url": "https://api.github.com/users/c-wicklein/followers", "following_url": "https://api.github.com/users/c-wicklein/following{/other_user}", "gists_url": "https://api.github.com/users/c-wicklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-wicklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-wicklein/subscriptions", "organizations_url": "https://api.github.com/users/c-wicklein/orgs", "repos_url": "https://api.github.com/users/c-wicklein/repos", "events_url": "https://api.github.com/users/c-wicklein/events{/privacy}", "received_events_url": "https://api.github.com/users/c-wicklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-07T19:50:07Z", "updated_at": "2018-03-26T03:36:05Z", "closed_at": "2018-03-26T03:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings,\r\n\r\nI ran into another issue when I started using python-zstandard with pypy.  The module builds, but it fails at runtime because the bytes objects can't be resized.  My workaround has been to change decompress2 to return a list of strings (iterate over -- decompression, PyBytes_FromStringAndSize on the output, PyList_Append with the result, and Py_DECREF the result) instead of growing a single string.  I suspect this change makes things slower (not to mention incompatible), but it was worth it for me to get pypy working quickly.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/27", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/27/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/27/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/27", "id": 238829017, "node_id": "MDU6SXNzdWUyMzg4MjkwMTc=", "number": 27, "title": "ZstdCompressor(threads=-1).compress(...) does not use multithreaded compression", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-27T12:08:27Z", "updated_at": "2018-03-25T22:28:36Z", "closed_at": "2018-03-25T22:28:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I run:\r\n```\r\ncctx = zstd.ZstdCompressor(threads=-1)\r\ncompressed = cctx.compress(b'data to compress')\r\n```\r\n8 threads are initialized as expected but single threaded compression is used nevertheless.\r\n\r\nIt looks like the compression parameters are not being used  https://github.com/indygreg/python-zstandard/blob/master/zstd/compress/zstd_compress.c#L2930", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/26", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/26/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/26/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/26", "id": 234780002, "node_id": "MDU6SXNzdWUyMzQ3ODAwMDI=", "number": 26, "title": "Support arbitrary buffer-like objects", "user": {"login": "pitrou", "id": 1721820, "node_id": "MDQ6VXNlcjE3MjE4MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitrou", "html_url": "https://github.com/pitrou", "followers_url": "https://api.github.com/users/pitrou/followers", "following_url": "https://api.github.com/users/pitrou/following{/other_user}", "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions", "organizations_url": "https://api.github.com/users/pitrou/orgs", "repos_url": "https://api.github.com/users/pitrou/repos", "events_url": "https://api.github.com/users/pitrou/events{/privacy}", "received_events_url": "https://api.github.com/users/pitrou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-09T10:01:43Z", "updated_at": "2017-06-12T18:13:04Z", "closed_at": "2017-06-12T18:13:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The methods in this package (such as `ZStdCompressor.compress()` and `ZStdDecompressor.decompress()`) typically don't support bytearray or memoryview inputs. Though for some strange reason they seem to support Numpy arrays:\r\n```\r\n>>> c = zstd.ZstdCompressor(level=1, write_content_size=True)\r\n>>> b = c.compress(b'12345678')\r\n>>> b == c.compress(np.frombuffer(b'12345678', dtype='int8'))\r\nTrue\r\n>>> b == c.compress(memoryview(b'12345678'))\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-40-9ae8177a1d5c>\", line 1, in <module>\r\n    b == c.compress(memoryview(b'12345678'))\r\nTypeError: compress() argument 1 must be read-only bytes-like object, not memoryview\r\n\r\n>>> b == c.compress(bytearray(b'12345678'))\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-41-ddc68fad54ac>\", line 1, in <module>\r\n    b == c.compress(bytearray(b'12345678'))\r\nTypeError: compress() argument 1 must be read-only bytes-like object, not bytearray\r\n```\r\n\r\nNote that other compression libraries typically accept arbitrary buffer-like objects (which allows passing them without copying to bytes before):\r\n```\r\n>>> zlib.compress(memoryview(b'12345678'))\r\nb'x\\x9c3426153\\xb7\\x00\\x00\\x07@\\x01\\xa5'\r\n>>> bz2.compress(memoryview(b'12345678'))\r\nb'BZh91AY&SY\\xb6\\x1c=\\x04\\x00\\x00\\x00\\x08\\x00?\\xc0 \\x001\\x0c\\x08\\x19\\x1ai\\x935s\\xf9E\\xdc\\x91N\\x14$-\\x87\\x0fA\\x00'\r\n>>> lzma.compress(memoryview(b'12345678'))\r\nb'\\xfd7zXZ\\x00\\x00\\x04\\xe6\\xd6\\xb4F\\x02\\x00!\\x01\\x16\\x00\\x00\\x00t/\\xe5\\xa3\\x01\\x00\\x0712345678\\x00\\tx\\xac+H\\x80\\x8b\\\\\\x00\\x01 \\x08\\xbb\\x19\\xd9\\xbb\\x1f\\xb6\\xf3}\\x01\\x00\\x00\\x00\\x00\\x04YZ'\r\n>>> blosc.compress(memoryview(b'12345678'))\r\nb'\\x02\\x01\\x13\\x08\\x08\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x18\\x00\\x00\\x0012345678'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/25", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/25/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/25/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/25", "id": 232881691, "node_id": "MDU6SXNzdWUyMzI4ODE2OTE=", "number": 25, "title": "ZstdDecompressor.stream_reader is not found anymore", "user": {"login": "selevit", "id": 774258, "node_id": "MDQ6VXNlcjc3NDI1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/774258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selevit", "html_url": "https://github.com/selevit", "followers_url": "https://api.github.com/users/selevit/followers", "following_url": "https://api.github.com/users/selevit/following{/other_user}", "gists_url": "https://api.github.com/users/selevit/gists{/gist_id}", "starred_url": "https://api.github.com/users/selevit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selevit/subscriptions", "organizations_url": "https://api.github.com/users/selevit/orgs", "repos_url": "https://api.github.com/users/selevit/repos", "events_url": "https://api.github.com/users/selevit/events{/privacy}", "received_events_url": "https://api.github.com/users/selevit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-01T13:37:00Z", "updated_at": "2017-09-17T00:22:40Z", "closed_at": "2017-09-17T00:22:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `zstandard==0.8.1`.\r\n\r\n`ZstdCompressor.stream_reader` method is not found but it's described in docs.\r\nThere is a` read_from` method which returns an iterator but it's not documented.\r\n\r\nIt will be nice to keep docs actual :)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/20", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/20/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/20/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/20", "id": 219709634, "node_id": "MDU6SXNzdWUyMTk3MDk2MzQ=", "number": 20, "title": "No longer compiles on FreeBSD 11", "user": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-05T20:46:20Z", "updated_at": "2017-04-08T21:27:43Z", "closed_at": "2017-04-08T21:27:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/usr/home/hg/buildslave/FreeBSD_hg_tests/build/contrib/python-zstandard/zstd.c:188:11: error: use of undeclared identifier 'CTL_HW'\r\n        mib[0] = CTL_HW;\r\n                 ^\r\n/usr/home/hg/buildslave/FreeBSD_hg_tests/build/contrib/python-zstandard/zstd.c:189:11: error: use of undeclared identifier 'HW_NCPU'\r\n        mib[1] = HW_NCPU;\r\n                 ^\r\n/usr/home/hg/buildslave/FreeBSD_hg_tests/build/contrib/python-zstandard/zstd.c:190:11: warning: implicit declaration of function 'sysctl' is invalid in C99 [-Wimplicit-function-declaration]\r\n        if (0 != sysctl(mib, 2, &count, &len, NULL, 0)) {\r\n                 ^\r\n1 warning and 2 errors generated.\r\nerror: command 'cc' failed with exit status 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/19", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/19/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/19/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/19", "id": 219072547, "node_id": "MDU6SXNzdWUyMTkwNzI1NDc=", "number": 19, "title": "-Wshorten-64-to-32 has things to say when compiling", "user": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-03T21:52:27Z", "updated_at": "2017-04-04T05:31:57Z", "closed_at": "2017-04-04T05:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nmercurial-4.1.2/contrib/python-zstandard/c-ext/compressiondict.c:48:30: warning:\r\n      implicit conversion loses integer precision: 'unsigned long' to 'unsigned int' [-Wshorten-64-to-32]\r\n                zparams.selectivityLevel = PyLong_AsUnsignedLong(PyTuple_GetItem(parameters, 0));\r\n                                         ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nmercurial-4.1.2/contrib/python-zstandard/c-ext/compressiondict.c:49:30: warning:\r\n      implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]\r\n                zparams.compressionLevel = PyLong_AsLong(PyTuple_GetItem(parameters, 1));\r\n                                         ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nmercurial-4.1.2/contrib/python-zstandard/c-ext/compressiondict.c:50:31: warning:\r\n      implicit conversion loses integer precision: 'unsigned long' to 'unsigned int' [-Wshorten-64-to-32]\r\n                zparams.notificationLevel = PyLong_AsUnsignedLong(PyTuple_GetItem(parameters, 2));\r\n                                          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nmercurial-4.1.2/contrib/python-zstandard/c-ext/compressiondict.c:51:20: warning:\r\n      implicit conversion loses integer precision: 'unsigned long' to 'unsigned int' [-Wshorten-64-to-32]\r\n                zparams.dictID = PyLong_AsUnsignedLong(PyTuple_GetItem(parameters, 3));\r\n                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n4 warnings generated.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/15", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/15/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/15/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/15", "id": 212898101, "node_id": "MDU6SXNzdWUyMTI4OTgxMDE=", "number": 15, "title": "Python 2.7.12 test errors with CFFI", "user": {"login": "terrelln", "id": 6619134, "node_id": "MDQ6VXNlcjY2MTkxMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6619134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrelln", "html_url": "https://github.com/terrelln", "followers_url": "https://api.github.com/users/terrelln/followers", "following_url": "https://api.github.com/users/terrelln/following{/other_user}", "gists_url": "https://api.github.com/users/terrelln/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrelln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrelln/subscriptions", "organizations_url": "https://api.github.com/users/terrelln/orgs", "repos_url": "https://api.github.com/users/terrelln/repos", "events_url": "https://api.github.com/users/terrelln/events{/privacy}", "received_events_url": "https://api.github.com/users/terrelln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-09T00:17:47Z", "updated_at": "2017-03-09T00:37:09Z", "closed_at": "2017-03-09T00:31:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are 53 tests that error with python 2.7.12: https://gist.github.com/terrelln/c76ad7d6034f8f5bbf0e8575c5f11321\r\n\r\n```\r\n======================================================================\r\nERROR: test_write_size_cffi (tests.test_decompressor.TestDecompressor_write_to)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/terrelln/repos/python-zstandard/tests/test_decompressor.py\", line 294, in test_write_size\r\n    decompressor.write(c)\r\n  File \"/Users/terrelln/repos/python-zstandard/zstd_cffi.py\", line 931, in write\r\n    data_buffer = ffi.from_buffer(data)\r\nTypeError: from_buffer() cannot return the address of the raw string within a str or unicode object\r\n\r\n----------------------------------------------------------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/14", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/14/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/14/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/14", "id": 212897187, "node_id": "MDU6SXNzdWUyMTI4OTcxODc=", "number": 14, "title": "TestCompressor_write_to sporadically failing", "user": {"login": "terrelln", "id": 6619134, "node_id": "MDQ6VXNlcjY2MTkxMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6619134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrelln", "html_url": "https://github.com/terrelln", "followers_url": "https://api.github.com/users/terrelln/followers", "following_url": "https://api.github.com/users/terrelln/following{/other_user}", "gists_url": "https://api.github.com/users/terrelln/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrelln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrelln/subscriptions", "organizations_url": "https://api.github.com/users/terrelln/orgs", "repos_url": "https://api.github.com/users/terrelln/repos", "events_url": "https://api.github.com/users/terrelln/events{/privacy}", "received_events_url": "https://api.github.com/users/terrelln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-09T00:12:09Z", "updated_at": "2018-03-26T03:34:56Z", "closed_at": "2018-03-26T03:34:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Build steps:\r\n\r\n```\r\n> git rev-parse HEAD\r\n13b542c3d8c9c3edf84f3af3138e0091388ea353\r\n> python3 --version\r\nPython 3.5.2\r\n> python3 setup.py test\r\n```\r\n\r\nTest output: https://gist.github.com/terrelln/432be84951e79993977892671bf5ce6d\r\n\r\n```\r\n======================================================================\r\nFAIL: test_dictionary (tests.test_compressor.TestCompressor_write_to)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/terrelln/repos/python-zstandard/tests/test_compressor.py\", line 510, in test_dictionary\r\n    b'\\x28\\xb5\\x2f\\xfd\\x03\\x00\\x55\\x7b\\x6b\\x5e\\x54\\x00'\r\nAssertionError: b'(\\x[24 chars]\\x00\\x00\\x02\\xfc\\xf4\\xc5\\xba#?\\x05\\xb3T\\x00\\x00\\x18oof\\x01\\x00' != b'(\\x[24 chars]\\x00\\x00\\x02\\xfc\\xf4\\xa5\\xba#?\\x85\\xb3T\\x00\\x00\\x18oof\\x01\\x00'\r\n\r\n----------------------------------------------------------------------\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/13", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/13/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/13/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/13", "id": 211342283, "node_id": "MDU6SXNzdWUyMTEzNDIyODM=", "number": 13, "title": "Linewise iteration over compressed input", "user": {"login": "dreamflasher", "id": 31695, "node_id": "MDQ6VXNlcjMxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/31695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamflasher", "html_url": "https://github.com/dreamflasher", "followers_url": "https://api.github.com/users/dreamflasher/followers", "following_url": "https://api.github.com/users/dreamflasher/following{/other_user}", "gists_url": "https://api.github.com/users/dreamflasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamflasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamflasher/subscriptions", "organizations_url": "https://api.github.com/users/dreamflasher/orgs", "repos_url": "https://api.github.com/users/dreamflasher/repos", "events_url": "https://api.github.com/users/dreamflasher/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamflasher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-03-02T09:59:10Z", "updated_at": "2019-02-24T18:06:56Z", "closed_at": "2019-02-24T18:06:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently it's only possible to iterate over chunks:\r\n\r\n```\r\ndctx = zstd.ZstdDecompressor()\r\nfor chunk in dctx.read_from(fh):\r\n```\r\n\r\nHow can I iterate line-by-line as it is possible with `gzip.open()`?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/11", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/11/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/11/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/11", "id": 197172802, "node_id": "MDU6SXNzdWUxOTcxNzI4MDI=", "number": 11, "title": "Decompression fails if the compressed content is an empty bytestring", "user": {"login": "27359794", "id": 536984, "node_id": "MDQ6VXNlcjUzNjk4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/536984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/27359794", "html_url": "https://github.com/27359794", "followers_url": "https://api.github.com/users/27359794/followers", "following_url": "https://api.github.com/users/27359794/following{/other_user}", "gists_url": "https://api.github.com/users/27359794/gists{/gist_id}", "starred_url": "https://api.github.com/users/27359794/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/27359794/subscriptions", "organizations_url": "https://api.github.com/users/27359794/orgs", "repos_url": "https://api.github.com/users/27359794/repos", "events_url": "https://api.github.com/users/27359794/events{/privacy}", "received_events_url": "https://api.github.com/users/27359794/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-22T13:18:50Z", "updated_at": "2017-01-15T02:25:24Z", "closed_at": "2017-01-15T02:25:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> zstd.ZstdDecompressor().decompress(zstd.ZstdCompressor(write_content_size=True).compress(b''))\r\nZstdError                                 Traceback (most recent call last)\r\n<ipython-input-11-89c4c9bb5b8c> in <module>()\r\n----> 1 zstd.ZstdDecompressor().decompress(zstd.ZstdCompressor(write_content_size=True).compress(b''))\r\n\r\nZstdError: input data invalid or missing content size in frame header\r\n``` \r\n\r\nThe cause is that there is no differentiation between a lack of a frame header and a frame header indicating content size = 0.\r\n\r\n```\r\n>>> zstd.ZstdCompressor(write_content_size=True).compress(b'') == zstd.ZstdCompressor(write_content_size=False).compress(b'')\r\n\r\nTrue\r\n```\r\n\r\nObviously this is a corner case, but one of the fundamental properties of a compression library should be that `decompress(compress(x)) == x` for all x.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/8", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/8/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/8/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/8", "id": 189289622, "node_id": "MDU6SXNzdWUxODkyODk2MjI=", "number": 8, "title": "class ZstdDecompressor not seen", "user": {"login": "nprashan", "id": 20681335, "node_id": "MDQ6VXNlcjIwNjgxMzM1", "avatar_url": "https://avatars1.githubusercontent.com/u/20681335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nprashan", "html_url": "https://github.com/nprashan", "followers_url": "https://api.github.com/users/nprashan/followers", "following_url": "https://api.github.com/users/nprashan/following{/other_user}", "gists_url": "https://api.github.com/users/nprashan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nprashan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nprashan/subscriptions", "organizations_url": "https://api.github.com/users/nprashan/orgs", "repos_url": "https://api.github.com/users/nprashan/repos", "events_url": "https://api.github.com/users/nprashan/events{/privacy}", "received_events_url": "https://api.github.com/users/nprashan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-15T03:19:09Z", "updated_at": "2017-01-28T04:14:48Z", "closed_at": "2017-01-28T04:14:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am not able to see ZstdDecompressor class in the code. Shouldn't it be as part of zstd_cffi.py ?\r\nOr am I missing something?\r\n\r\nthanks\r\nPrashanth", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/7", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/7/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/7/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/7", "id": 188828743, "node_id": "MDU6SXNzdWUxODg4Mjg3NDM=", "number": 7, "title": "0.5.0 tarball on PyPI is missing setup_zstd.py", "user": {"login": "codeman38", "id": 386563, "node_id": "MDQ6VXNlcjM4NjU2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/386563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeman38", "html_url": "https://github.com/codeman38", "followers_url": "https://api.github.com/users/codeman38/followers", "following_url": "https://api.github.com/users/codeman38/following{/other_user}", "gists_url": "https://api.github.com/users/codeman38/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeman38/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeman38/subscriptions", "organizations_url": "https://api.github.com/users/codeman38/orgs", "repos_url": "https://api.github.com/users/codeman38/repos", "events_url": "https://api.github.com/users/codeman38/events{/privacy}", "received_events_url": "https://api.github.com/users/codeman38/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-11T19:10:01Z", "updated_at": "2016-11-13T04:11:09Z", "closed_at": "2016-11-13T03:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The 0.5.0 tarball which was just uploaded to https://pypi.python.org/pypi/zstandard is missing the `setup_zstd.py` source file which is imported by setup.py. As a result, running `pip install zstandard` produces the following error:\r\n\r\n```\r\nCollecting zstandard\r\n  Using cached zstandard-0.5.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-NfA1pg/zstandard/setup.py\", line 15, in <module>\r\n        import setup_zstd\r\n    ImportError: No module named setup_zstd\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-NfA1pg/zstandard/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/6", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/6/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/6/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/6", "id": 188655961, "node_id": "MDU6SXNzdWUxODg2NTU5NjE=", "number": 6, "title": "Saving and loading the training dict_data", "user": {"login": "djih", "id": 4776584, "node_id": "MDQ6VXNlcjQ3NzY1ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4776584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djih", "html_url": "https://github.com/djih", "followers_url": "https://api.github.com/users/djih/followers", "following_url": "https://api.github.com/users/djih/following{/other_user}", "gists_url": "https://api.github.com/users/djih/gists{/gist_id}", "starred_url": "https://api.github.com/users/djih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djih/subscriptions", "organizations_url": "https://api.github.com/users/djih/orgs", "repos_url": "https://api.github.com/users/djih/repos", "events_url": "https://api.github.com/users/djih/events{/privacy}", "received_events_url": "https://api.github.com/users/djih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-11T00:28:29Z", "updated_at": "2016-11-11T03:52:05Z", "closed_at": "2016-11-11T03:52:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "After we train on a sample, we want to be able to save the dict_data to a binary file so we can load and re-use it across different applications. It seems like the ZstdCompressionDict object is not pickle-able or serializable. We don't want to have to re-train on a sample every time we want to use zstd.\r\n\r\nMy current work-around is to use the zstd command line tool to generate the dictionary binary, and then load it into python. The issue with that is the command line program has its own limitations, such as this: https://github.com/facebook/zstd/issues/373#issuecomment-259847707", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/5", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/5/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/5/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/5", "id": 182004576, "node_id": "MDU6SXNzdWUxODIwMDQ1NzY=", "number": 5, "title": "add __version__ to the module", "user": {"login": "talkaminker", "id": 13932998, "node_id": "MDQ6VXNlcjEzOTMyOTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/13932998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talkaminker", "html_url": "https://github.com/talkaminker", "followers_url": "https://api.github.com/users/talkaminker/followers", "following_url": "https://api.github.com/users/talkaminker/following{/other_user}", "gists_url": "https://api.github.com/users/talkaminker/gists{/gist_id}", "starred_url": "https://api.github.com/users/talkaminker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talkaminker/subscriptions", "organizations_url": "https://api.github.com/users/talkaminker/orgs", "repos_url": "https://api.github.com/users/talkaminker/repos", "events_url": "https://api.github.com/users/talkaminker/events{/privacy}", "received_events_url": "https://api.github.com/users/talkaminker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-10T12:39:18Z", "updated_at": "2016-10-15T21:47:51Z", "closed_at": "2016-10-15T21:47:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/4", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/4/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/4/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/4", "id": 181992826, "node_id": "MDU6SXNzdWUxODE5OTI4MjY=", "number": 4, "title": "upload zstandard to conda", "user": {"login": "talkaminker", "id": 13932998, "node_id": "MDQ6VXNlcjEzOTMyOTk4", "avatar_url": "https://avatars2.githubusercontent.com/u/13932998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talkaminker", "html_url": "https://github.com/talkaminker", "followers_url": "https://api.github.com/users/talkaminker/followers", "following_url": "https://api.github.com/users/talkaminker/following{/other_user}", "gists_url": "https://api.github.com/users/talkaminker/gists{/gist_id}", "starred_url": "https://api.github.com/users/talkaminker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talkaminker/subscriptions", "organizations_url": "https://api.github.com/users/talkaminker/orgs", "repos_url": "https://api.github.com/users/talkaminker/repos", "events_url": "https://api.github.com/users/talkaminker/events{/privacy}", "received_events_url": "https://api.github.com/users/talkaminker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-10T11:31:52Z", "updated_at": "2016-10-15T18:33:59Z", "closed_at": "2016-10-15T18:33:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This will be great (or conda-forge)\nyou said in the email I should tell you if you forget\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/3", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/3/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/3/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/3", "id": 181344019, "node_id": "MDU6SXNzdWUxODEzNDQwMTk=", "number": 3, "title": "A small typo in the README.rst", "user": {"login": "maksim77", "id": 155911, "node_id": "MDQ6VXNlcjE1NTkxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/155911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maksim77", "html_url": "https://github.com/maksim77", "followers_url": "https://api.github.com/users/maksim77/followers", "following_url": "https://api.github.com/users/maksim77/following{/other_user}", "gists_url": "https://api.github.com/users/maksim77/gists{/gist_id}", "starred_url": "https://api.github.com/users/maksim77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maksim77/subscriptions", "organizations_url": "https://api.github.com/users/maksim77/orgs", "repos_url": "https://api.github.com/users/maksim77/repos", "events_url": "https://api.github.com/users/maksim77/events{/privacy}", "received_events_url": "https://api.github.com/users/maksim77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-06T07:37:33Z", "updated_at": "2016-10-15T14:32:02Z", "closed_at": "2016-10-15T14:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the example of using a dictionary:\n\n> cctx = zstd.ZstdCompressor(dict_data=data)\n\n[patch.txt](https://github.com/indygreg/python-zstandard/files/513097/patch.txt)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/indygreg/python-zstandard/issues/2", "repository_url": "https://api.github.com/repos/indygreg/python-zstandard", "labels_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/2/comments", "events_url": "https://api.github.com/repos/indygreg/python-zstandard/issues/2/events", "html_url": "https://github.com/indygreg/python-zstandard/issues/2", "id": 180210705, "node_id": "MDU6SXNzdWUxODAyMTA3MDU=", "number": 2, "title": "ZstdDecompressorIterator stops before frame is fully decompressed", "user": {"login": "csfoo", "id": 5545608, "node_id": "MDQ6VXNlcjU1NDU2MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5545608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csfoo", "html_url": "https://github.com/csfoo", "followers_url": "https://api.github.com/users/csfoo/followers", "following_url": "https://api.github.com/users/csfoo/following{/other_user}", "gists_url": "https://api.github.com/users/csfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/csfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csfoo/subscriptions", "organizations_url": "https://api.github.com/users/csfoo/orgs", "repos_url": "https://api.github.com/users/csfoo/repos", "events_url": "https://api.github.com/users/csfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/csfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-30T03:12:16Z", "updated_at": "2016-10-02T17:59:09Z", "closed_at": "2016-10-02T17:59:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this very useful library!\n\nI encountered an issue with decompression using the streaming decompressor iterator `read_from` where the iterator would raise `StopIteration` before reading to the end of the file. The file is however successfully decompressed with the zstd command line utility from the official repo. (I would include the file but it is really big.)\n\nI think this behaviour is due to the following code:\nhttps://github.com/indygreg/python-zstandard/blob/master/zstd.c#L2260\n\n`zresult == 1` does not necessarily imply that we are done with the input. It could also reflect that an additional byte needs to be read (as in my case), or more generally, that there's more to be done (this is reflected in the [updated documentation in the master branch of zstd](https://github.com/facebook/zstd/blob/dev/lib/zstd.h#L261)).\n\nRemoving this conditional assignment allows for the entire file to be decompressed; I think the code correctly handles the case where the buffers are not flushed but it is done reading the input. \n\nThat said I'm wondering if running out of input before the output is properly flushed should raise an exception instead of `StopIteration`.\n", "performed_via_github_app": null, "score": 1.0}]}