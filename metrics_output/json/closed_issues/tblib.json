{"total_count": 15, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/56", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/56/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/56/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/56", "id": 576190821, "node_id": "MDU6SXNzdWU1NzYxOTA4MjE=", "number": 56, "title": "f_lineno is missing", "user": {"login": "imachug", "id": 16370781, "node_id": "MDQ6VXNlcjE2MzcwNzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/16370781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imachug", "html_url": "https://github.com/imachug", "followers_url": "https://api.github.com/users/imachug/followers", "following_url": "https://api.github.com/users/imachug/following{/other_user}", "gists_url": "https://api.github.com/users/imachug/gists{/gist_id}", "starred_url": "https://api.github.com/users/imachug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imachug/subscriptions", "organizations_url": "https://api.github.com/users/imachug/orgs", "repos_url": "https://api.github.com/users/imachug/repos", "events_url": "https://api.github.com/users/imachug/events{/privacy}", "received_events_url": "https://api.github.com/users/imachug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-05T11:38:32Z", "updated_at": "2020-03-09T11:58:35Z", "closed_at": "2020-03-09T11:58:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `Frame` object does not copy `f_lineno` from the underlying frame object. This causes a bug when pytest can't handle an exception raise from gevent's ThreadPool. Gevent guys use a vendored version but I'd like to have this issue fixed in the main repo too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/53", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/53/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/53/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/53", "id": 527548669, "node_id": "MDU6SXNzdWU1Mjc1NDg2Njk=", "number": 53, "title": "New feature: pickle Exception, its cause, and traceback", "user": {"login": "crusaderky", "id": 6213168, "node_id": "MDQ6VXNlcjYyMTMxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6213168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crusaderky", "html_url": "https://github.com/crusaderky", "followers_url": "https://api.github.com/users/crusaderky/followers", "following_url": "https://api.github.com/users/crusaderky/following{/other_user}", "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}", "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions", "organizations_url": "https://api.github.com/users/crusaderky/orgs", "repos_url": "https://api.github.com/users/crusaderky/repos", "events_url": "https://api.github.com/users/crusaderky/events{/privacy}", "received_events_url": "https://api.github.com/users/crusaderky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-23T11:56:55Z", "updated_at": "2019-12-07T09:43:21Z", "closed_at": "2019-12-07T09:43:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Even after enabling tblib, when one pickles an exception, the previous exceptions in the exception chain gets lost.\r\nThis has been discussed here: https://github.com/dask/distributed/issues/3158\r\n\r\nIt would be very straightforward to add to tblib an (optional?) call to ``copyreg.pickle(Exception, ...)`` which overrides the pickling system of the whole Exception, recursively pickles its ``__cause__`` and ``__traceback__``, and automatically reassembles them upon unpickling.\r\n\r\nThe behaviour for the user would be extremely straightforward (and would not require ``six.reraise`` anymore):\r\n\r\n```python\r\nimport pickle\r\nfrom tblib import pickling_support\r\npickling_support.install()\r\n\r\ntry:\r\n    try:\r\n        raise Exception(\"foo\")\r\n    except Exception as e:\r\n        raise Exception(\"bar\") from e\r\nexcept Exception as e:\r\n    buf = pickle.dumps(e)\r\n\r\n\r\nraise pickle.loads(buf)\r\n# original Exception, its traceback, and its cause (which in turn has traceback and cause, recursively)\r\n```\r\n\r\nI'm happy to work on a PR myself - would you be amenable to merging it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/46", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/46/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/46/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/46", "id": 510610800, "node_id": "MDU6SXNzdWU1MTA2MTA4MDA=", "number": 46, "title": "Unpickling traceback crashes on Python 3.8.", "user": {"login": "felixxm", "id": 2865885, "node_id": "MDQ6VXNlcjI4NjU4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2865885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixxm", "html_url": "https://github.com/felixxm", "followers_url": "https://api.github.com/users/felixxm/followers", "following_url": "https://api.github.com/users/felixxm/following{/other_user}", "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions", "organizations_url": "https://api.github.com/users/felixxm/orgs", "repos_url": "https://api.github.com/users/felixxm/repos", "events_url": "https://api.github.com/users/felixxm/events{/privacy}", "received_events_url": "https://api.github.com/users/felixxm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-22T12:05:58Z", "updated_at": "2019-10-23T12:33:53Z", "closed_at": "2019-10-23T12:28:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "`CodeType` signature was changed in Python 3.8 (see [issue36886](https://bugs.python.org/issue36886)). Please find below traceback from the Django's test suite:\r\n\r\n```\r\n======================================================================\r\nERROR: test_add_failing_subtests (test_runner.test_parallel.RemoteTestResultTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/felixx/repo/django/tests/test_runner/test_parallel.py\", line 75, in test_add_failing_subtests\r\n    subtest_test.run(result=result)\r\n  File \"/usr/local/lib/python3.8/unittest/case.py\", line 679, in run\r\n    self._feedErrorsToResult(result, outcome.errors)\r\n  File \"/usr/local/lib/python3.8/unittest/case.py\", line 592, in _feedErrorsToResult\r\n    result.addSubTest(test.test_case, test, exc_info)\r\n  File \"/home/felixx/repo/django/django/test/runner.py\", line 238, in addSubTest\r\n    self.check_picklable(test, err)\r\n  File \"/home/felixx/repo/django/django/test/runner.py\", line 156, in check_picklable\r\n    self._confirm_picklable(err)\r\n  File \"/home/felixx/repo/django/django/test/runner.py\", line 130, in _confirm_picklable\r\n    pickle.loads(pickle.dumps(obj))\r\n  File \"/home/felixx/.virtualenvs/django-test-3.8/lib/python3.8/site-packages/tblib/pickling_support.py\", line 16, in unpickle_traceback\r\n    return ret.as_traceback()\r\n  File \"/home/felixx/.virtualenvs/django-test-3.8/lib/python3.8/site-packages/tblib/__init__.py\", line 99, in as_traceback\r\n    code = CodeType(\r\nTypeError: an integer is required (got type bytes)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/42", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/42/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/42/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/42", "id": 454737351, "node_id": "MDU6SXNzdWU0NTQ3MzczNTE=", "number": 42, "title": "Incompatible with Python 3.8", "user": {"login": "jamadden", "id": 1256082, "node_id": "MDQ6VXNlcjEyNTYwODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1256082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamadden", "html_url": "https://github.com/jamadden", "followers_url": "https://api.github.com/users/jamadden/followers", "following_url": "https://api.github.com/users/jamadden/following{/other_user}", "gists_url": "https://api.github.com/users/jamadden/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamadden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamadden/subscriptions", "organizations_url": "https://api.github.com/users/jamadden/orgs", "repos_url": "https://api.github.com/users/jamadden/repos", "events_url": "https://api.github.com/users/jamadden/events{/privacy}", "received_events_url": "https://api.github.com/users/jamadden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-11T14:50:33Z", "updated_at": "2019-06-11T23:22:57Z", "closed_at": "2019-06-11T23:18:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The constructor for the `CodeType` changed in 3.8; to remedy that going forward, 3.8 introduced a `replace()` method that can be used instead. \r\n\r\nThis was reported as a bug (with corresponding PR!) against gevent's local copy of tblib in https://github.com/gevent/gevent/pull/1429 by @vstinner ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/40", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/40/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/40/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/40", "id": 440771884, "node_id": "MDU6SXNzdWU0NDA3NzE4ODQ=", "number": 40, "title": "Possible deadlock with Python 3.8.0a3", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-06T16:03:26Z", "updated_at": "2019-05-12T13:49:22Z", "closed_at": "2019-05-12T13:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I add this:\r\n\r\n```diff\r\ndiff --git a/tox.ini b/tox.ini\r\nindex fba49d1..0125838 100644\r\n--- a/tox.ini\r\n+++ b/tox.ini\r\n@@ -17,6 +17,7 @@ basepython =\r\n     py35: {env:TOXPYTHON:python3.5}\r\n     {py36,docs,spell}: {env:TOXPYTHON:python3.6}\r\n     py37: {env:TOXPYTHON:python3.7}\r\n+    py38: {env:TOXPYTHON:python3.8}\r\n     {bootstrap,clean,check,report,codecov,coveralls}: {env:TOXPYTHON:python3}\r\n setenv =\r\n     PYTHONPATH={toxinidir}/tests\r\n```\r\n\r\nAnd run:\r\n\r\n```\r\n$ tox -e py38\r\nGLOB sdist-make: .../python-tblib/setup.py\r\npy38 inst-nodeps: .../python-tblib/.tox/.tmp/package/1/tblib-1.4.0.zip\r\npy38 installed: atomicwrites==1.3.0,attrs==19.1.0,Automat==0.7.0,constantly==15.1.0,coverage==4.5.3,hyperlink==19.0.0,idna==2.8,incremental==17.5.0,more-itertools==7.0.0,pluggy==0.9.0,py==1.8.0,PyHamcrest==1.9.0,pytest==4.4.1,pytest-cov==2.7.1,pytest-travis-fold==1.3.0,six==1.12.0,tblib==1.4.0,Twisted==19.2.0,zope.interface==4.6.0\r\npy38 run-test-pre: PYTHONHASHSEED='3425619301'\r\npy38 runtests: commands[0] | py.test --cov=tblib --cov-report=term-missing -vv tests README.rst\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.8.0a3, pytest-4.4.1, py-1.8.0, pluggy-0.9.0 -- .../python-tblib/.tox/py38/bin/python\r\ncachedir: .tox/py38/.pytest_cache\r\nrootdir: .../python-tblib, inifile: setup.cfg\r\nplugins: travis-fold-1.3.0, cov-2.7.1\r\ncollected 2 items                                                              \r\n\r\ntests/test_issue30.py::test_30 PASSED                                    [ 50%]\r\nREADME.rst::README.rst PASSED                                            [100%]\r\n\r\n\r\n(hangs here) ^C\r\n\r\nException ignored in: <Finalize object, dead>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/util.py\", line 189, in __call__\r\n    res = self._callback(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 689, in _terminate_pool\r\n    cls._help_stuff_finish(inqueue, task_handler, len(pool))\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 674, in _help_stuff_finish\r\n    inqueue._rlock.acquire()\r\nKeyboardInterrupt\r\n\r\n\r\n----------- coverage: platform linux, python 3.8.0-alpha-3 -----------\r\nName                            Stmts   Miss Branch BrPart     Cover   Missing\r\n------------------------------------------------------------------------------\r\nsrc/tblib/__init__.py             125     12     44      6    86.98%   12-13, 16, 88, 90, 107, 136-142, 223, 15->16, 87->88, 89->90, 98->107, 195->197, 206->223\r\nsrc/tblib/cpython.py               38     10     12      6    68.00%   21, 36-39, 59, 62-63, 65, 78-79, 20->21, 35->36, 58->59, 61->62, 64->65, 76->80\r\nsrc/tblib/decorators.py            26      0      0      0   100.00%\r\nsrc/tblib/pickling_support.py      17      0      0      0   100.00%\r\n------------------------------------------------------------------------------\r\nTOTAL                             206     22     56     12    85.50%\r\n\r\n\r\n=========================== 2 passed in 3.66 seconds ===========================\r\nProcess ForkPoolWorker-13:\r\nProcess ForkPoolWorker-16:\r\nProcess ForkPoolWorker-14:\r\nProcess ForkPoolWorker-12:\r\nTraceback (most recent call last):\r\nTraceback (most recent call last):\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\nProcess ForkPoolWorker-9:\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\nKeyboardInterrupt\r\nKeyboardInterrupt\r\nKeyboardInterrupt\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\nKeyboardInterrupt\r\nProcess ForkPoolWorker-11:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\nKeyboardInterrupt\r\nProcess ForkPoolWorker-10:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 356, in get\r\n    res = self._reader.recv_bytes()\r\n  File \"/usr/lib64/python3.8/multiprocessing/connection.py\", line 216, in recv_bytes\r\n    buf = self._recv_bytes(maxlength)\r\n  File \"/usr/lib64/python3.8/multiprocessing/connection.py\", line 414, in _recv_bytes\r\n    buf = self._recv(4)\r\n  File \"/usr/lib64/python3.8/multiprocessing/connection.py\", line 379, in _recv\r\n    chunk = read(handle, remaining)\r\nKeyboardInterrupt\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\nKeyboardInterrupt\r\nProcess ForkPoolWorker-15:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 302, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib64/python3.8/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/lib64/python3.8/multiprocessing/pool.py\", line 114, in worker\r\n    task = get()\r\n  File \"/usr/lib64/python3.8/multiprocessing/queues.py\", line 355, in get\r\n    with self._rlock:\r\n  File \"/usr/lib64/python3.8/multiprocessing/synchronize.py\", line 95, in __enter__\r\n    return self._semlock.__enter__()\r\nKeyboardInterrupt\r\nERROR: KEYBOARDINTERRUPT\r\nERROR: keyboardinterrupt\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/36", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/36/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/36/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/36", "id": 336064877, "node_id": "MDU6SXNzdWUzMzYwNjQ4Nzc=", "number": 36, "title": "Test failures with Python 3.7", "user": {"login": "QuLogic", "id": 302469, "node_id": "MDQ6VXNlcjMwMjQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/302469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuLogic", "html_url": "https://github.com/QuLogic", "followers_url": "https://api.github.com/users/QuLogic/followers", "following_url": "https://api.github.com/users/QuLogic/following{/other_user}", "gists_url": "https://api.github.com/users/QuLogic/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuLogic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuLogic/subscriptions", "organizations_url": "https://api.github.com/users/QuLogic/orgs", "repos_url": "https://api.github.com/users/QuLogic/repos", "events_url": "https://api.github.com/users/QuLogic/events{/privacy}", "received_events_url": "https://api.github.com/users/QuLogic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-27T03:29:59Z", "updated_at": "2019-05-02T12:25:18Z", "closed_at": "2019-05-02T12:25:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We are rebuilding everything against Python 3.7 in Fedora, and it looks like [tblib is failing there](https://kojipkgs.fedoraproject.org//work/tasks/3757/27753757/build.log):\r\n```\r\n=================================== FAILURES ===================================\r\n_____________________________ [doctest] README.rst _____________________________\r\n155     ...\r\n156     >>> len(s3) > 1\r\n157     True\r\n158 \r\n159 Unpickling\r\n160 ~~~~~~~~~~\r\n161 \r\n162 ::\r\n163 \r\n164     >>> pickle.loads(s1)\r\nExpected:\r\n    (<...Exception'>, Exception('fail',), <traceback object at ...>)\r\nGot:\r\n    (<class 'Exception'>, Exception('fail'), <traceback object at 0x7f89feecf748>)\r\n/builddir/build/BUILD/tblib-1.3.2/README.rst:164: DocTestFailure\r\n```\r\n\r\nIt looks like maybe the comma in `Exception('fail',)` is removed now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/30", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/30/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/30/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/30", "id": 286717082, "node_id": "MDU6SXNzdWUyODY3MTcwODI=", "number": 30, "title": "pypy/Twisted incompatibility", "user": {"login": "arnimarj", "id": 143150, "node_id": "MDQ6VXNlcjE0MzE1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/143150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnimarj", "html_url": "https://github.com/arnimarj", "followers_url": "https://api.github.com/users/arnimarj/followers", "following_url": "https://api.github.com/users/arnimarj/following{/other_user}", "gists_url": "https://api.github.com/users/arnimarj/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnimarj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnimarj/subscriptions", "organizations_url": "https://api.github.com/users/arnimarj/orgs", "repos_url": "https://api.github.com/users/arnimarj/repos", "events_url": "https://api.github.com/users/arnimarj/events{/privacy}", "received_events_url": "https://api.github.com/users/arnimarj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-08T11:29:21Z", "updated_at": "2019-05-02T12:25:46Z", "closed_at": "2019-05-02T10:45:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI tried running a few of our internal tests using the latest `pypy` (version 5.10), and hit a compatibility issue with the Twisted Failure object():\r\n\r\n```\r\nfrom tblib import pickling_support\r\npickling_support.install()\r\n\r\nimport six, pickle, sys\r\nfrom twisted.python.failure import Failure\r\n\r\ntry:\r\n\traise ValueError\r\nexcept ValueError:\r\n\ts = pickle.dumps(sys.exc_info())\r\n\r\ntry:\r\n\tsix.reraise(*pickle.loads(s))\r\nexcept ValueError:\r\n\tf = Failure()\r\n\r\nprint('F', f)\r\n```\r\n\r\nThis works on both Python 2.7.13, 3.6.3, but not the latest pypy. The error output was:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"twisted_six.py\", line 10, in <module>\r\n    s = pickle.dumps(sys.exc_info())\r\n  File \"/home/arni/dohop/pypy-5.10.0-linux_x86_64-portable/lib-python/2.7/pickle.py\", line 1431, in dumps\r\n    Pickler(file, protocol).dump(obj)\r\n  File \"/home/arni/dohop/pypy-5.10.0-linux_x86_64-portable/lib-python/2.7/pickle.py\", line 224, in dump\r\n    self.save(obj)\r\n  File \"/home/arni/dohop/pypy-5.10.0-linux_x86_64-portable/lib-python/2.7/pickle.py\", line 286, in save\r\n    f(self, obj) # Call unbound method with explicit self\r\n  File \"/home/arni/dohop/pypy-5.10.0-linux_x86_64-portable/lib-python/2.7/pickle.py\", line 570, in save_tuple\r\n    save(element)\r\n  File \"/home/arni/dohop/pypy-5.10.0-linux_x86_64-portable/lib-python/2.7/pickle.py\", line 292, in save\r\n    rv = reduce(obj)\r\n  File \"/home/arni/dohop/virtualenvs/pypy_5_10/site-packages/tblib/pickling_support.py\", line 20, in pickle_traceback\r\n    return unpickle_traceback, (Frame(tb.tb_frame), tb.tb_lineno, tb.tb_next and Traceback(tb.tb_next))\r\n  File \"/home/arni/dohop/virtualenvs/pypy_5_10/site-packages/tblib/__init__.py\", line 54, in __init__\r\n    self.f_back = Traceback(frame.f_back)\r\n  File \"/home/arni/dohop/virtualenvs/pypy_5_10/site-packages/tblib/__init__.py\", line 69, in __init__\r\n    self.tb_frame = Frame(tb.tb_frame)\r\nAttributeError: 'NoneType' object has no attribute 'tb_frame'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/27", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/27/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/27/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/27", "id": 285669040, "node_id": "MDU6SXNzdWUyODU2NjkwNDA=", "number": 27, "title": "Things to do before new release", "user": {"login": "ionelmc", "id": 129501, "node_id": "MDQ6VXNlcjEyOTUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionelmc", "html_url": "https://github.com/ionelmc", "followers_url": "https://api.github.com/users/ionelmc/followers", "following_url": "https://api.github.com/users/ionelmc/following{/other_user}", "gists_url": "https://api.github.com/users/ionelmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionelmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionelmc/subscriptions", "organizations_url": "https://api.github.com/users/ionelmc/orgs", "repos_url": "https://api.github.com/users/ionelmc/repos", "events_url": "https://api.github.com/users/ionelmc/events{/privacy}", "received_events_url": "https://api.github.com/users/ionelmc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-03T12:07:05Z", "updated_at": "2019-05-02T10:19:49Z", "closed_at": "2019-05-02T10:19:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Lest I forget:\r\n\r\n- [x] add `python_versions` to setup.py\r\n- [x] add some keywords\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/26", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/26/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/26/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/26", "id": 285317797, "node_id": "MDU6SXNzdWUyODUzMTc3OTc=", "number": 26, "title": "All AppVeyor builds are failing", "user": {"login": "jdufresne", "id": 347634, "node_id": "MDQ6VXNlcjM0NzYzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/347634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdufresne", "html_url": "https://github.com/jdufresne", "followers_url": "https://api.github.com/users/jdufresne/followers", "following_url": "https://api.github.com/users/jdufresne/following{/other_user}", "gists_url": "https://api.github.com/users/jdufresne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdufresne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdufresne/subscriptions", "organizations_url": "https://api.github.com/users/jdufresne/orgs", "repos_url": "https://api.github.com/users/jdufresne/repos", "events_url": "https://api.github.com/users/jdufresne/events{/privacy}", "received_events_url": "https://api.github.com/users/jdufresne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-01T17:06:55Z", "updated_at": "2019-05-02T12:25:29Z", "closed_at": "2019-05-02T12:25:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For example,\r\n\r\nhttps://ci.appveyor.com/project/ionelmc/python-tblib/build/master-50\r\n\r\nThis make contributing more difficult as each PR shows a build failure. It is hard to know if a change is introducing a regression or simply failing as before.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/15", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/15/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/15/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/15", "id": 215573803, "node_id": "MDU6SXNzdWUyMTU1NzM4MDM=", "number": 15, "title": "Dumping a recursion error causes a recursion error", "user": {"login": "ml31415", "id": 2386612, "node_id": "MDQ6VXNlcjIzODY2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2386612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ml31415", "html_url": "https://github.com/ml31415", "followers_url": "https://api.github.com/users/ml31415/followers", "following_url": "https://api.github.com/users/ml31415/following{/other_user}", "gists_url": "https://api.github.com/users/ml31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/ml31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ml31415/subscriptions", "organizations_url": "https://api.github.com/users/ml31415/orgs", "repos_url": "https://api.github.com/users/ml31415/repos", "events_url": "https://api.github.com/users/ml31415/events{/privacy}", "received_events_url": "https://api.github.com/users/ml31415/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-20T22:24:08Z", "updated_at": "2017-03-21T18:29:40Z", "closed_at": "2017-03-21T18:29:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following code sample:\r\n\r\n```python\r\nimport sys\r\nfrom cPickle import dumps\r\nfrom tblib.pickling_support import pickle_traceback\r\nsys.setrecursionlimit(50)\r\n\r\ndef f(x):\r\n    return f(x)\r\n\r\ntry:\r\n    f(1)\r\nexcept RuntimeError:\r\n    info = sys.exc_info()\r\n    pickle_traceback(info[2])\r\n```\r\nInstead of properly storing the traceback up to the recursion limit, the exception handling raises a recursion error itself:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"crashdemo.py\", line 13, in <module>\r\n    pickle_traceback(info[2])\r\n  File \"/usr/local/lib/python2.7/dist-packages/tblib/pickling_support.py\", line 20, in pickle_traceback\r\n    return unpickle_traceback, (Frame(tb.tb_frame), tb.tb_lineno, tb.tb_next and Traceback(tb.tb_next))\r\n  File \"/usr/local/lib/python2.7/dist-packages/tblib/__init__.py\", line 63, in __init__\r\n    self.tb_next = Traceback(tb.tb_next)\r\n...........\r\n  File \"/usr/local/lib/python2.7/dist-packages/tblib/__init__.py\", line 57, in __init__\r\n    self.tb_frame = Frame(tb.tb_frame)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tblib/__init__.py\", line 50, in __init__\r\n    if k in (\"__file__\", \"__name__\")\r\nRuntimeError: maximum recursion depth exceeded in cmp\r\n```\r\nThis issue initially occured with `gevent`, as `tblib` is vendored there: https://github.com/gevent/gevent/issues/954", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/12", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/12/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/12/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/12", "id": 139372362, "node_id": "MDU6SXNzdWUxMzkzNzIzNjI=", "number": 12, "title": "\"dump_traceback causes python3.4 to segfault on cygwin\"", "user": {"login": "jamadden", "id": 1256082, "node_id": "MDQ6VXNlcjEyNTYwODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1256082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamadden", "html_url": "https://github.com/jamadden", "followers_url": "https://api.github.com/users/jamadden/followers", "following_url": "https://api.github.com/users/jamadden/following{/other_user}", "gists_url": "https://api.github.com/users/jamadden/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamadden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamadden/subscriptions", "organizations_url": "https://api.github.com/users/jamadden/orgs", "repos_url": "https://api.github.com/users/jamadden/repos", "events_url": "https://api.github.com/users/jamadden/events{/privacy}", "received_events_url": "https://api.github.com/users/jamadden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-03-08T19:32:21Z", "updated_at": "2017-10-02T13:11:07Z", "closed_at": "2017-10-02T13:11:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "gevent vendors a (lightly modified) version of tblib 1.0.0 (I believe). We've recently got a report that it seems to cause the Python 3.4 inteprpreter to segfault on Windows/Cygwin. Some amount of detail and reproduction instructions are in gevent/gevent#763 I've reviewed the release notes since then and don't see anything about that platform combo being fixed. Should we consider this a tblib bug that can be fixed, or an unsupported platform?\n\nAs a gevent maintainer I'll assist however I can (thank you for this library!), but I don't have access to cygwin. The original reporter, @rossengeorgiev , has indicated a willingness to help track down the cygwin specific issues too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/10", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/10/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/10/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/10", "id": 122655560, "node_id": "MDU6SXNzdWUxMjI2NTU1NjA=", "number": 10, "title": "Issue with generators", "user": {"login": "DRayX", "id": 7531689, "node_id": "MDQ6VXNlcjc1MzE2ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7531689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DRayX", "html_url": "https://github.com/DRayX", "followers_url": "https://api.github.com/users/DRayX/followers", "following_url": "https://api.github.com/users/DRayX/following{/other_user}", "gists_url": "https://api.github.com/users/DRayX/gists{/gist_id}", "starred_url": "https://api.github.com/users/DRayX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DRayX/subscriptions", "organizations_url": "https://api.github.com/users/DRayX/orgs", "repos_url": "https://api.github.com/users/DRayX/repos", "events_url": "https://api.github.com/users/DRayX/events{/privacy}", "received_events_url": "https://api.github.com/users/DRayX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-17T03:48:44Z", "updated_at": "2015-12-17T19:47:40Z", "closed_at": "2015-12-17T19:47:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This library doesn't work if there are any generators in the stack as the compiled `raise __traceback_maker` actually executes without raising an error if flag 0x20 (CO_GENERATOR) is set.\n\nSimple repro:\n\n``` python\nimport sys\nimport tblib\nimport traceback\n\ndef foo():\n  raise RuntimeError()\n  yield\n\ntry:\n  next(foo())\nexcept:\n  assert traceback.extract_tb(sys.exc_info()[2]) == traceback.extract_tb(\n      tblib.Traceback(sys.exc_info()[2]).as_traceback())\n```\n\nIn general, mucking around with code attributes isn't really safe, and in the worst case could potentially cause a segfault when the code is executed.  The filename and name (the two that actually matter as they are used by the exception printing system) should be safe.  I wouldn't touch nlocals, stacksize, or flags though.  I have seen instances where the overridden nlocals causes the exec itself to throw because there are no locals which screws up the line numbers in the tracebacks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/9", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/9/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/9/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/9", "id": 121892074, "node_id": "MDU6SXNzdWUxMjE4OTIwNzQ=", "number": 9, "title": "Tags that matches the pypi release", "user": {"login": "asmodehn", "id": 221256, "node_id": "MDQ6VXNlcjIyMTI1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/221256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmodehn", "html_url": "https://github.com/asmodehn", "followers_url": "https://api.github.com/users/asmodehn/followers", "following_url": "https://api.github.com/users/asmodehn/following{/other_user}", "gists_url": "https://api.github.com/users/asmodehn/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmodehn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmodehn/subscriptions", "organizations_url": "https://api.github.com/users/asmodehn/orgs", "repos_url": "https://api.github.com/users/asmodehn/repos", "events_url": "https://api.github.com/users/asmodehn/events{/privacy}", "received_events_url": "https://api.github.com/users/asmodehn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-13T01:52:05Z", "updated_at": "2015-12-13T05:18:14Z", "closed_at": "2015-12-13T02:53:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to have tags/release in this repository. Probably the ones matching the pypi release.\nI am in the process in making this code available through another packaging system ( for ROS ) and that would be very helpful.\n\nThanks !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/7", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/7/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/7/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/7", "id": 97398724, "node_id": "MDU6SXNzdWU5NzM5ODcyNA==", "number": 7, "title": "Python 2.6 is not supported apparently", "user": {"login": "arcivanov", "id": 5355666, "node_id": "MDQ6VXNlcjUzNTU2NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5355666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcivanov", "html_url": "https://github.com/arcivanov", "followers_url": "https://api.github.com/users/arcivanov/followers", "following_url": "https://api.github.com/users/arcivanov/following{/other_user}", "gists_url": "https://api.github.com/users/arcivanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcivanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcivanov/subscriptions", "organizations_url": "https://api.github.com/users/arcivanov/orgs", "repos_url": "https://api.github.com/users/arcivanov/repos", "events_url": "https://api.github.com/users/arcivanov/events{/privacy}", "received_events_url": "https://api.github.com/users/arcivanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-27T06:48:44Z", "updated_at": "2015-07-27T10:20:10Z", "closed_at": "2015-07-27T10:11:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From PyBuilder build logs:\n\n> File \"/home/travis/virtualenv/python2.6.9/lib/python2.6/site-packages/tblib/**init**.py\", line 43\n>   k: v for k, v in frame.f_globals.items() if k in (\"**file**\", \"**name**\")\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ionelmc/python-tblib/issues/4", "repository_url": "https://api.github.com/repos/ionelmc/python-tblib", "labels_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/4/comments", "events_url": "https://api.github.com/repos/ionelmc/python-tblib/issues/4/events", "html_url": "https://github.com/ionelmc/python-tblib/issues/4", "id": 54099574, "node_id": "MDU6SXNzdWU1NDA5OTU3NA==", "number": 4, "title": "New pypi release for removing debug print", "user": {"login": "andresriancho", "id": 865200, "node_id": "MDQ6VXNlcjg2NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/865200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresriancho", "html_url": "https://github.com/andresriancho", "followers_url": "https://api.github.com/users/andresriancho/followers", "following_url": "https://api.github.com/users/andresriancho/following{/other_user}", "gists_url": "https://api.github.com/users/andresriancho/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresriancho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresriancho/subscriptions", "organizations_url": "https://api.github.com/users/andresriancho/orgs", "repos_url": "https://api.github.com/users/andresriancho/repos", "events_url": "https://api.github.com/users/andresriancho/events{/privacy}", "received_events_url": "https://api.github.com/users/andresriancho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-12T20:01:52Z", "updated_at": "2015-01-12T20:39:20Z", "closed_at": "2015-01-12T20:38:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n@return_error\ndef apply_with_return_error(args):\n    \"\"\"\n    args is a tuple where the first argument is a callable.\n\n    eg::\n\n        apply_with_return_error((func, 1, 2, 3)) - this will call func(1, 2, 3)\n\n    \"\"\"\n    print args[0]\n```\n\nThe `print args[0]` which was removed in https://github.com/ionelmc/python-tblib/commit/a2bd19dcbc197124ef8a213501c5eb2aa1cbf231 is still in pypi, which makes this library unusable (without re-writing my own apply_with_return_error)\n\nA new pypi release is needed \n", "performed_via_github_app": null, "score": 1.0}]}