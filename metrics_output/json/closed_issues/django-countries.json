{"total_count": 191, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/306", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/306/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/306/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/306", "id": 624430099, "node_id": "MDU6SXNzdWU2MjQ0MzAwOTk=", "number": 306, "title": "Howto search by country name in admin", "user": {"login": "mwolff44", "id": 2518965, "node_id": "MDQ6VXNlcjI1MTg5NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2518965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwolff44", "html_url": "https://github.com/mwolff44", "followers_url": "https://api.github.com/users/mwolff44/followers", "following_url": "https://api.github.com/users/mwolff44/following{/other_user}", "gists_url": "https://api.github.com/users/mwolff44/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwolff44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwolff44/subscriptions", "organizations_url": "https://api.github.com/users/mwolff44/orgs", "repos_url": "https://api.github.com/users/mwolff44/repos", "events_url": "https://api.github.com/users/mwolff44/events{/privacy}", "received_events_url": "https://api.github.com/users/mwolff44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T18:14:51Z", "updated_at": "2020-05-26T02:28:12Z", "closed_at": "2020-05-26T02:28:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI need to implement a feature to search in admin list view the name of country. I am able to search the code (ISO2) but not by name.\r\nHow can i acheive this ?\r\nregards\r\nMathias", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/303", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/303/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/303/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/303", "id": 596301720, "node_id": "MDU6SXNzdWU1OTYzMDE3MjA=", "number": 303, "title": "Django Rest Framework serializer_fields ViewSet?", "user": {"login": "irwanOyong", "id": 23147813, "node_id": "MDQ6VXNlcjIzMTQ3ODEz", "avatar_url": "https://avatars3.githubusercontent.com/u/23147813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irwanOyong", "html_url": "https://github.com/irwanOyong", "followers_url": "https://api.github.com/users/irwanOyong/followers", "following_url": "https://api.github.com/users/irwanOyong/following{/other_user}", "gists_url": "https://api.github.com/users/irwanOyong/gists{/gist_id}", "starred_url": "https://api.github.com/users/irwanOyong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irwanOyong/subscriptions", "organizations_url": "https://api.github.com/users/irwanOyong/orgs", "repos_url": "https://api.github.com/users/irwanOyong/repos", "events_url": "https://api.github.com/users/irwanOyong/events{/privacy}", "received_events_url": "https://api.github.com/users/irwanOyong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T04:35:26Z", "updated_at": "2020-05-17T14:58:52Z", "closed_at": "2020-05-17T14:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thank you for the greatwork.\r\nI am trying to use your library for building a REST API containing the country list. \r\n\r\n`from django_countries.serializer_fields import CountryField\r\n\r\nclass CountrySerializer(serializers.Serializer):\r\n    country = CountryField()`\r\n\r\nBut I am wondering on how should I write the ViewSet and router part? For read-only and CRUD in React.\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/302", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/302/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/302/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/302", "id": 586470574, "node_id": "MDU6SXNzdWU1ODY0NzA1NzQ=", "number": 302, "title": "Installation issues with 6.0 & 6.1 (egg fragments, \"metadata for project name unknown\")", "user": {"login": "goetzb", "id": 1097522, "node_id": "MDQ6VXNlcjEwOTc1MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1097522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goetzb", "html_url": "https://github.com/goetzb", "followers_url": "https://api.github.com/users/goetzb/followers", "following_url": "https://api.github.com/users/goetzb/following{/other_user}", "gists_url": "https://api.github.com/users/goetzb/gists{/gist_id}", "starred_url": "https://api.github.com/users/goetzb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goetzb/subscriptions", "organizations_url": "https://api.github.com/users/goetzb/orgs", "repos_url": "https://api.github.com/users/goetzb/repos", "events_url": "https://api.github.com/users/goetzb/events{/privacy}", "received_events_url": "https://api.github.com/users/goetzb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T19:38:26Z", "updated_at": "2020-03-25T23:30:35Z", "closed_at": "2020-03-25T23:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just tried to update the `django-countries` package on an **AWS Elastic Beanstalk Python 3.6** environment **from 5.5 to 6.1** and noticed that the **deployment would fail**. I then tried again with 5.5 and it worked fine, then with 6.0 and it failed. It seems to be an **installation issue** with the Python package.\r\n\r\nIt looks like **some packaging meta data might be broken** in the releases 6.0 and 6.1 - or at least some configuration data causes problems with deployments on AWS Elastic Beanstalk with Python 3.6 (maybe it's an Amazon Linux or Python 3.6 issue - **it works fine on my local Python 3.6 on MacOS**).\r\n\r\nIn the list of **installed packages**, `django-countries` isn't included, but **`unknown-0.0.0`**.\r\n\r\nThe relevant log output is:\r\n```log\r\nCollecting django-countries==6.1 (from -r /opt/python/ondeck/app/requirements[...])\r\n    Downloading https://files.pythonhosted.org/packages/cd/08/2ec975194d51c3648465ecd1239d870bfe20de4146626a3c3e5f12074e11/django-countries-6.1.tar.gz (619kB)\r\n    Running setup.py (path:/tmp/pip-build-uejmevas/django-countries/setup.py) egg_info for package django-countries produced metadata for project name unknown. Fix your #egg=django-countries fragments.\r\n```\r\n\r\nSince in the `pip` output says **\"produced metadata for project name unknown. Fix your #egg=django-countries fragments.\"**, I thought it might be a packaging issue. Looking quickly at the configuration and the package files on PyPi, I couldn't see what might be the problem - but I also have no experience with creating Python packages.\r\n\r\nMaybe the issue occurred because for 5.5 there is a Wheel available on PyPi and for 6.0 and 6.1 there isn't? \r\n* https://pypi.org/project/django-countries/5.5/#files\r\n* https://pypi.org/project/django-countries/6.0/#files\r\n\r\nPlease let me know if you need any further details to investigate this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/301", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/301/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/301/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/301", "id": 584771866, "node_id": "MDU6SXNzdWU1ODQ3NzE4NjY=", "number": 301, "title": "No name 'graphql' in module 'django_countries'pylint(no-name-in-module)", "user": {"login": "maxwaiyaki", "id": 28390298, "node_id": "MDQ6VXNlcjI4MzkwMjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/28390298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxwaiyaki", "html_url": "https://github.com/maxwaiyaki", "followers_url": "https://api.github.com/users/maxwaiyaki/followers", "following_url": "https://api.github.com/users/maxwaiyaki/following{/other_user}", "gists_url": "https://api.github.com/users/maxwaiyaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxwaiyaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxwaiyaki/subscriptions", "organizations_url": "https://api.github.com/users/maxwaiyaki/orgs", "repos_url": "https://api.github.com/users/maxwaiyaki/repos", "events_url": "https://api.github.com/users/maxwaiyaki/events{/privacy}", "received_events_url": "https://api.github.com/users/maxwaiyaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T00:16:01Z", "updated_at": "2020-03-20T02:27:31Z", "closed_at": "2020-03-20T02:27:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having a challenge using the A `Country `graphene object type. Pylint throws the error above\r\n\r\n```python\r\nimport graphene\r\nfrom django.db.models import Q\r\nfrom graphql import GraphQLError\r\nfrom graphene_django.types import DjangoObjectType, ObjectType\r\nfrom django_countries.graphql.types import Country\r\n\r\nfrom accounts.models import User\r\n\r\nclass UserType(DjangoObjectType):\r\n  country = graphene.Field(Country)\r\n  class Meta:\r\n    model = User\r\n    fields = (\"id\", \"first_name\", \"last_name\", \"dob\", \"email\", \"is_staff\", \"is_active\", \"country\", \"phone_number\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/298", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/298/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/298/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/298", "id": 575797152, "node_id": "MDU6SXNzdWU1NzU3OTcxNTI=", "number": 298, "title": "readonly CountryField error", "user": {"login": "srublev", "id": 33352204, "node_id": "MDQ6VXNlcjMzMzUyMjA0", "avatar_url": "https://avatars1.githubusercontent.com/u/33352204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srublev", "html_url": "https://github.com/srublev", "followers_url": "https://api.github.com/users/srublev/followers", "following_url": "https://api.github.com/users/srublev/following{/other_user}", "gists_url": "https://api.github.com/users/srublev/gists{/gist_id}", "starred_url": "https://api.github.com/users/srublev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srublev/subscriptions", "organizations_url": "https://api.github.com/users/srublev/orgs", "repos_url": "https://api.github.com/users/srublev/repos", "events_url": "https://api.github.com/users/srublev/events{/privacy}", "received_events_url": "https://api.github.com/users/srublev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-04T21:37:18Z", "updated_at": "2020-08-03T08:05:33Z", "closed_at": "2020-05-17T15:00:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like `CountryField` with `multiple=True` is not compatible with Django Admin read only field setting\r\n\r\nGot the following error:\r\n`Exception Value: unhashable type: 'list'`\r\n`Exception Location: <...>\\lib\\site-packages\\django\\contrib\\admin\\utils.py in display_for_field, line 382`\r\n\r\nI have the following code:\r\n```\r\nfrom django.db import models\r\nfrom django_countries.fields import CountryField\r\n\r\nclass Person(models.Model):\r\n    originates = CountryField(multiple=True, blank=True)\r\n```\r\n```\r\n@admin.register(Person)\r\nclass PersonAdmin(admin.ModelAdmin):\r\n        def has_change_permission(self, request, obj=None):\r\n            return False", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/296", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/296/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/296/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/296", "id": 571208544, "node_id": "MDU6SXNzdWU1NzEyMDg1NDQ=", "number": 296, "title": "Sizeable memory leakage due to PyUCA collator", "user": {"login": "interDist", "id": 1909012, "node_id": "MDQ6VXNlcjE5MDkwMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1909012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/interDist", "html_url": "https://github.com/interDist", "followers_url": "https://api.github.com/users/interDist/followers", "following_url": "https://api.github.com/users/interDist/following{/other_user}", "gists_url": "https://api.github.com/users/interDist/gists{/gist_id}", "starred_url": "https://api.github.com/users/interDist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/interDist/subscriptions", "organizations_url": "https://api.github.com/users/interDist/orgs", "repos_url": "https://api.github.com/users/interDist/repos", "events_url": "https://api.github.com/users/interDist/events{/privacy}", "received_events_url": "https://api.github.com/users/interDist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T09:58:37Z", "updated_at": "2020-02-27T22:53:37Z", "closed_at": "2020-02-27T22:39:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On our website we have a search functionality which returns objects (models), one of the fields of which is a `Country`. We constantly have memory problems and what I observed recently is that every single search increases the memory usage by a couple MB's. I discovered (by the help of __pdb__ and __objgraph__) that the `pyuca.trie.Node` objects are not being released: \r\n\r\n![Usage of objects over time in django_countries module](https://user-images.githubusercontent.com/1909012/75333568-a2e4ff80-5886-11ea-93f3-0bfca849980e.png)\r\n\r\nThis seems to be related to the Collator being defined as a global object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/295", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/295/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/295/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/295", "id": 564843378, "node_id": "MDU6SXNzdWU1NjQ4NDMzNzg=", "number": 295, "title": "force_text() deprecated with Django 3", "user": {"login": "sweetpythoncode", "id": 29664369, "node_id": "MDQ6VXNlcjI5NjY0MzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/29664369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sweetpythoncode", "html_url": "https://github.com/sweetpythoncode", "followers_url": "https://api.github.com/users/sweetpythoncode/followers", "following_url": "https://api.github.com/users/sweetpythoncode/following{/other_user}", "gists_url": "https://api.github.com/users/sweetpythoncode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sweetpythoncode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sweetpythoncode/subscriptions", "organizations_url": "https://api.github.com/users/sweetpythoncode/orgs", "repos_url": "https://api.github.com/users/sweetpythoncode/repos", "events_url": "https://api.github.com/users/sweetpythoncode/events{/privacy}", "received_events_url": "https://api.github.com/users/sweetpythoncode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-13T17:35:34Z", "updated_at": "2020-02-27T22:52:50Z", "closed_at": "2020-02-27T22:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When it be released to PYPI?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/294", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/294/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/294/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/294", "id": 563061561, "node_id": "MDU6SXNzdWU1NjMwNjE1NjE=", "number": 294, "title": "Compatible with django 3.0", "user": {"login": "sweetpythoncode", "id": 29664369, "node_id": "MDQ6VXNlcjI5NjY0MzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/29664369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sweetpythoncode", "html_url": "https://github.com/sweetpythoncode", "followers_url": "https://api.github.com/users/sweetpythoncode/followers", "following_url": "https://api.github.com/users/sweetpythoncode/following{/other_user}", "gists_url": "https://api.github.com/users/sweetpythoncode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sweetpythoncode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sweetpythoncode/subscriptions", "organizations_url": "https://api.github.com/users/sweetpythoncode/orgs", "repos_url": "https://api.github.com/users/sweetpythoncode/repos", "events_url": "https://api.github.com/users/sweetpythoncode/events{/privacy}", "received_events_url": "https://api.github.com/users/sweetpythoncode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T09:06:46Z", "updated_at": "2020-02-11T09:56:38Z", "closed_at": "2020-02-11T09:41:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is some errors", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/292", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/292/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/292/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/292", "id": 560742957, "node_id": "MDU6SXNzdWU1NjA3NDI5NTc=", "number": 292, "title": "Database design decision for multiple countries", "user": {"login": "saiprashanth173", "id": 9217623, "node_id": "MDQ6VXNlcjkyMTc2MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9217623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiprashanth173", "html_url": "https://github.com/saiprashanth173", "followers_url": "https://api.github.com/users/saiprashanth173/followers", "following_url": "https://api.github.com/users/saiprashanth173/following{/other_user}", "gists_url": "https://api.github.com/users/saiprashanth173/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiprashanth173/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiprashanth173/subscriptions", "organizations_url": "https://api.github.com/users/saiprashanth173/orgs", "repos_url": "https://api.github.com/users/saiprashanth173/repos", "events_url": "https://api.github.com/users/saiprashanth173/events{/privacy}", "received_events_url": "https://api.github.com/users/saiprashanth173/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T02:39:31Z", "updated_at": "2020-02-12T05:18:37Z", "closed_at": "2020-02-11T04:17:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks, \r\n\r\nThanks for developing Django Countries\r\n\r\nWe are part of the database group at Georgia Tech. We are developing a tool, called sqlcheck, for assisting database application developers in designing performant and maintainable applications. sqlcheck automatically detects sub-optimal database design choices and suggests better alternatives. For instance, storing comma-separated values in a column violates the first normal form, which impacts the performance, maintainability, and extensibility of the application.\r\n\r\nIn your application, we observe the usage of comma-separated values for the multiple countries option. Our experiments with sqlcheck showed that there is a significant performance impact in querying or updating such columns and could also lead to returning of inaccurate records. The alternate better approach, i.e., having an intermediate table to represent this Many to Many relationship, could result in an approximately 10x performance gain and also makes sure that the application is maintainable, accurate and extensible. Could you please share the rationale behind this design decision?\r\n\r\nWe hope that sqlcheck will assist the broader community of database application developers with designing applications. Your feedback will be greatly appreciated.\r\n\r\nThanks for your time.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/290", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/290/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/290/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/290", "id": 531103084, "node_id": "MDU6SXNzdWU1MzExMDMwODQ=", "number": 290, "title": "force_text() deprecated with Django 3", "user": {"login": "MonsieurV", "id": 1753348, "node_id": "MDQ6VXNlcjE3NTMzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1753348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MonsieurV", "html_url": "https://github.com/MonsieurV", "followers_url": "https://api.github.com/users/MonsieurV/followers", "following_url": "https://api.github.com/users/MonsieurV/following{/other_user}", "gists_url": "https://api.github.com/users/MonsieurV/gists{/gist_id}", "starred_url": "https://api.github.com/users/MonsieurV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MonsieurV/subscriptions", "organizations_url": "https://api.github.com/users/MonsieurV/orgs", "repos_url": "https://api.github.com/users/MonsieurV/repos", "events_url": "https://api.github.com/users/MonsieurV/events{/privacy}", "received_events_url": "https://api.github.com/users/MonsieurV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-02T12:42:01Z", "updated_at": "2020-02-12T07:18:45Z", "closed_at": "2020-02-11T04:12:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n`force_text()` [has been deprecated](https://docs.djangoproject.com/en/3.0/releases/3.0/#features-deprecated-in-3-0) in Django 3.\r\n\r\nThus we have warning using django-countries with Django 3:\r\n```\r\nlib/python3.6/site-packages/django_countries/__init__.py:252: RemovedInDjango40Warning: force_text() is deprecated in favor of force_str().\r\n    code = force_text(code).upper()\r\n```\r\n\r\nCould we make the switch to `force_str()`?\r\n\r\nI could provide a PR if necessary :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/288", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/288/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/288/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/288", "id": 521226477, "node_id": "MDU6SXNzdWU1MjEyMjY0Nzc=", "number": 288, "title": "Necessary to use CountryFieldMixin when using explicit CountryField?", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-11T22:38:34Z", "updated_at": "2020-02-11T04:21:50Z", "closed_at": "2020-02-11T04:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I totally missed CountryFieldMixin and just used explicit CountryField(), on creation, I get the error that 'field is required ' when I totally supplied the field as {country: 'NZ'}.\r\n\r\nThe error is gone when I removed the field and just use the Mixin provided. So my question is, is it  absolutely necessary to use the mixin regardless?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/282", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/282/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/282/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/282", "id": 512754268, "node_id": "MDU6SXNzdWU1MTI3NTQyNjg=", "number": 282, "title": "Settings override isn't working in tests", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T23:11:16Z", "updated_at": "2020-02-11T04:40:46Z", "closed_at": "2020-02-11T04:40:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that `self.settings` isn't working correctly in the tests.\r\n\r\nEg in `TestCountrySelectWidget`, for tests using `with self.settings(COUNTRIES_ONLY={\"AU\": \"Desert\"}):` the rendered HTML still contains all countries.\r\n\r\nMaybe something to do with non-lazy settings evaluation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/281", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/281/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/281/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/281", "id": 510479788, "node_id": "MDU6SXNzdWU1MTA0Nzk3ODg=", "number": 281, "title": "Is there a way to get a graphql object type from the CountryField", "user": {"login": "Gxmadix", "id": 26199588, "node_id": "MDQ6VXNlcjI2MTk5NTg4", "avatar_url": "https://avatars1.githubusercontent.com/u/26199588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gxmadix", "html_url": "https://github.com/Gxmadix", "followers_url": "https://api.github.com/users/Gxmadix/followers", "following_url": "https://api.github.com/users/Gxmadix/following{/other_user}", "gists_url": "https://api.github.com/users/Gxmadix/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gxmadix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gxmadix/subscriptions", "organizations_url": "https://api.github.com/users/Gxmadix/orgs", "repos_url": "https://api.github.com/users/Gxmadix/repos", "events_url": "https://api.github.com/users/Gxmadix/events{/privacy}", "received_events_url": "https://api.github.com/users/Gxmadix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-22T07:34:32Z", "updated_at": "2020-03-01T07:08:42Z", "closed_at": "2020-03-01T07:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\ndo'es any one used this field with graphql? usualy, we have access to the models and it is easy to convert then, but since here we have just access to this field. I am thinking about a trick, to create a model country, with a unique field as CountryField(). I don't know if that will work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/277", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/277/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/277/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/277", "id": 495031268, "node_id": "MDU6SXNzdWU0OTUwMzEyNjg=", "number": 277, "title": "Django countries override setting problem", "user": {"login": "mischmid", "id": 18579898, "node_id": "MDQ6VXNlcjE4NTc5ODk4", "avatar_url": "https://avatars2.githubusercontent.com/u/18579898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mischmid", "html_url": "https://github.com/mischmid", "followers_url": "https://api.github.com/users/mischmid/followers", "following_url": "https://api.github.com/users/mischmid/following{/other_user}", "gists_url": "https://api.github.com/users/mischmid/gists{/gist_id}", "starred_url": "https://api.github.com/users/mischmid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mischmid/subscriptions", "organizations_url": "https://api.github.com/users/mischmid/orgs", "repos_url": "https://api.github.com/users/mischmid/repos", "events_url": "https://api.github.com/users/mischmid/events{/privacy}", "received_events_url": "https://api.github.com/users/mischmid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-18T07:08:23Z", "updated_at": "2019-10-07T01:16:29Z", "closed_at": "2019-09-21T21:44:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I tried overriding the COUNTRIES_OVERRIDE settings, however my new custom countries do not seem to be properly handled by the library.\r\n\r\n\r\n```\r\nfrom django_countries import settings as dj_countries_settings\r\n\r\ndj_countries_settings.COUNTRIES_OVERRIDE = {  # Add two custom countries to django_countries\r\n    'EU': {'name': 'European Union', 'alpha3': 'EUN', 'numeric': 998}, \r\n    'GO': {'name': 'Global', 'alpha3': 'GLO', 'numeric': 999},\r\n},\r\n```\r\nwhen displaying all countries, I get following output for my custom countries:\r\n\r\n```\r\nfrom django_countries import countries\r\nfor code,name in list(countries):\r\n\tprint(code,name)\r\n```\r\n\r\nTF French Southern Territories\r\n**EU GO**\r\nGA Gabon\r\nGM Gambia\r\n\r\nand when I try to access the country dict over the defined key, I get the following output aswell:\r\n![image](https://user-images.githubusercontent.com/18579898/65123518-b8125400-d9f3-11e9-99d9-cc24e91683aa.png)\r\n\r\nwhat am I doing wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/275", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/275/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/275/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/275", "id": 491618850, "node_id": "MDU6SXNzdWU0OTE2MTg4NTA=", "number": 275, "title": "Compatibility issue with Django 3.0 due to django.utils.six", "user": {"login": "washeck", "id": 264454, "node_id": "MDQ6VXNlcjI2NDQ1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/264454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/washeck", "html_url": "https://github.com/washeck", "followers_url": "https://api.github.com/users/washeck/followers", "following_url": "https://api.github.com/users/washeck/following{/other_user}", "gists_url": "https://api.github.com/users/washeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/washeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/washeck/subscriptions", "organizations_url": "https://api.github.com/users/washeck/orgs", "repos_url": "https://api.github.com/users/washeck/repos", "events_url": "https://api.github.com/users/washeck/events{/privacy}", "received_events_url": "https://api.github.com/users/washeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-10T11:39:57Z", "updated_at": "2019-09-11T00:40:57Z", "closed_at": "2019-09-11T00:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 3.0 scheduled for December removed Python 2 compatibility APIs used by django-countries (django.utils.six, django.utils.encoding.python_2_unicode_compatible).\r\n\r\nSee https://docs.djangoproject.com/en/dev/releases/3.0/#removed-private-python-2-compatibility-apis", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/274", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/274/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/274/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/274", "id": 490242809, "node_id": "MDU6SXNzdWU0OTAyNDI4MDk=", "number": 274, "title": "Any thoughts on integrating country coordinates or bouding boxes?", "user": {"login": "binoyudayan", "id": 10575062, "node_id": "MDQ6VXNlcjEwNTc1MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/10575062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binoyudayan", "html_url": "https://github.com/binoyudayan", "followers_url": "https://api.github.com/users/binoyudayan/followers", "following_url": "https://api.github.com/users/binoyudayan/following{/other_user}", "gists_url": "https://api.github.com/users/binoyudayan/gists{/gist_id}", "starred_url": "https://api.github.com/users/binoyudayan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binoyudayan/subscriptions", "organizations_url": "https://api.github.com/users/binoyudayan/orgs", "repos_url": "https://api.github.com/users/binoyudayan/repos", "events_url": "https://api.github.com/users/binoyudayan/events{/privacy}", "received_events_url": "https://api.github.com/users/binoyudayan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-06T10:04:06Z", "updated_at": "2019-09-16T09:03:59Z", "closed_at": "2019-09-11T00:46:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello \r\nI'm working on a django project with maps. It would be nice for me to get bounding boxes for each country with alpha2 or alpha3 codes. I'm  not sure about the broader perspective and usability of this feature to other users of django_countries. \r\n\r\nI have found some helpful data as follows\r\n1. https://developers.google.com/public-data/docs/canonical/countries_csv\r\n2. https://gist.github.com/graydon/11198540\r\n\r\nI though of adding this data and into django_countries locally in my project and using it to make my life easy. Please share your thoughts on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/272", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/272/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/272/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/272", "id": 484807037, "node_id": "MDU6SXNzdWU0ODQ4MDcwMzc=", "number": 272, "title": "Same name for Serializer field and Model field may cause  unexpected keyword argument 'required'", "user": {"login": "phoebebright", "id": 132747, "node_id": "MDQ6VXNlcjEzMjc0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/132747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phoebebright", "html_url": "https://github.com/phoebebright", "followers_url": "https://api.github.com/users/phoebebright/followers", "following_url": "https://api.github.com/users/phoebebright/following{/other_user}", "gists_url": "https://api.github.com/users/phoebebright/gists{/gist_id}", "starred_url": "https://api.github.com/users/phoebebright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phoebebright/subscriptions", "organizations_url": "https://api.github.com/users/phoebebright/orgs", "repos_url": "https://api.github.com/users/phoebebright/repos", "events_url": "https://api.github.com/users/phoebebright/events{/privacy}", "received_events_url": "https://api.github.com/users/phoebebright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-24T11:20:59Z", "updated_at": "2019-09-11T00:48:58Z", "closed_at": "2019-09-11T00:48:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the serializer if you may have::\r\n\r\n     from django_countries.serializer_fields import CountryField\r\n     from .models import *\r\n\r\nthen the serializer ends up using the CountyField for the model instead of the serializer.  Of course specifying the models you want specifically, solves the problem.\r\n\r\n    from .models import MyModel\r\n\r\nIn my case I had in the serializer::\r\n\r\n      country = CountryField(required=False)\r\n\r\nAnd this gave me the error::\r\n\r\n      TypeError: __init__() got an unexpected keyword argument 'required'\r\n\r\nWanted to document this somewhere in case anyone else had this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/269", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/269/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/269/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/269", "id": 470826074, "node_id": "MDU6SXNzdWU0NzA4MjYwNzQ=", "number": 269, "title": "Use Weblate for translations?", "user": {"login": "comradekingu", "id": 13802408, "node_id": "MDQ6VXNlcjEzODAyNDA4", "avatar_url": "https://avatars1.githubusercontent.com/u/13802408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comradekingu", "html_url": "https://github.com/comradekingu", "followers_url": "https://api.github.com/users/comradekingu/followers", "following_url": "https://api.github.com/users/comradekingu/following{/other_user}", "gists_url": "https://api.github.com/users/comradekingu/gists{/gist_id}", "starred_url": "https://api.github.com/users/comradekingu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comradekingu/subscriptions", "organizations_url": "https://api.github.com/users/comradekingu/orgs", "repos_url": "https://api.github.com/users/comradekingu/repos", "events_url": "https://api.github.com/users/comradekingu/events{/privacy}", "received_events_url": "https://api.github.com/users/comradekingu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-21T21:20:34Z", "updated_at": "2020-03-01T07:12:33Z", "closed_at": "2020-03-01T07:12:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found the Norwegian Bokm\u00e5l list of languages is missing, and ended up here instead of finding myself able to do anything about it.\r\n\r\nComparing the two alternatives (from my experience of having used both extensively),\r\n\r\nTransifex, other than being a bad tool, is closed source, spies on the user, no longer allows gratis hosting for libre software if it has any venue of commercialization, and has quite egregious terms and conditions. The last part is made worse by requiring an account to even see strings.\r\n\r\nWeblate is a good tool, doesn't spy on the user, and allows gratis hosting for any libre software project. It allows anyone to make suggestions (without an account) and has GitHub integration. It has a cloud service on https://weblate.org/en/hosting/\r\nAlso, it has https://hosted.weblate.org/projects/iso-codes/iso-3166-1/ already, which could be used for mutual benefit, (with the translation memory) or possibly merged with the existing django-countries effort.\r\n\r\nHosted Weblate uses django-countries for the new website https://github.com/WeblateOrg/website/issues/91 :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/265", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/265/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/265/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/265", "id": 447144096, "node_id": "MDU6SXNzdWU0NDcxNDQwOTY=", "number": 265, "title": "TypeError when using multiple=True field in readonly admin", "user": {"login": "mvbrn", "id": 21321875, "node_id": "MDQ6VXNlcjIxMzIxODc1", "avatar_url": "https://avatars3.githubusercontent.com/u/21321875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvbrn", "html_url": "https://github.com/mvbrn", "followers_url": "https://api.github.com/users/mvbrn/followers", "following_url": "https://api.github.com/users/mvbrn/following{/other_user}", "gists_url": "https://api.github.com/users/mvbrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvbrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvbrn/subscriptions", "organizations_url": "https://api.github.com/users/mvbrn/orgs", "repos_url": "https://api.github.com/users/mvbrn/repos", "events_url": "https://api.github.com/users/mvbrn/events{/privacy}", "received_events_url": "https://api.github.com/users/mvbrn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T13:41:14Z", "updated_at": "2019-08-10T13:25:48Z", "closed_at": "2019-08-10T13:25:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "django-countries==5.3.3\r\n\r\nModel has field CountryField(multiple=True). When ModelAdmin for this model is read only (has_change_permission method returns False) TypeError occurs:\r\n<img width=\"717\" alt=\"Screen Shot 2019-05-22 at 15 39 29\" src=\"https://user-images.githubusercontent.com/21321875/58179126-d4052380-7ca7-11e9-93be-f7440bf15aab.png\">\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/264", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/264/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/264/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/264", "id": 436578902, "node_id": "MDU6SXNzdWU0MzY1Nzg5MDI=", "number": 264, "title": "Compat with Django 2.2", "user": {"login": "srtab", "id": 815871, "node_id": "MDQ6VXNlcjgxNTg3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/815871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srtab", "html_url": "https://github.com/srtab", "followers_url": "https://api.github.com/users/srtab/followers", "following_url": "https://api.github.com/users/srtab/following{/other_user}", "gists_url": "https://api.github.com/users/srtab/gists{/gist_id}", "starred_url": "https://api.github.com/users/srtab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srtab/subscriptions", "organizations_url": "https://api.github.com/users/srtab/orgs", "repos_url": "https://api.github.com/users/srtab/repos", "events_url": "https://api.github.com/users/srtab/events{/privacy}", "received_events_url": "https://api.github.com/users/srtab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T09:02:58Z", "updated_at": "2019-05-02T13:31:41Z", "closed_at": "2019-05-02T13:31:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm having problems when i try to use django-countries with Django 2.2. Here's the traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"runtests.py\", line 12, in <module>\r\n    django.setup()\r\n  File \"/app/.tox/py36-djangomaster/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/app/.tox/py36-djangomaster/lib/python3.6/site-packages/django/apps/registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/app/.tox/py36-djangomaster/lib/python3.6/site-packages/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/app/.tox/py36-djangomaster/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/app/.tox/py36-djangomaster/lib/python3.6/site-packages/django_countries/__init__.py\", line 7, in <module>\r\n    from django.utils import six\r\nImportError: cannot import name 'six'\r\n```\r\nAre there any plans to make django-countries compatible with Django 2.2?\r\n\r\nTks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/256", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/256/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/256/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/256", "id": 428862614, "node_id": "MDU6SXNzdWU0Mjg4NjI2MTQ=", "number": 256, "title": "Multiple labels for the same country", "user": {"login": "bobort", "id": 15187894, "node_id": "MDQ6VXNlcjE1MTg3ODk0", "avatar_url": "https://avatars1.githubusercontent.com/u/15187894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobort", "html_url": "https://github.com/bobort", "followers_url": "https://api.github.com/users/bobort/followers", "following_url": "https://api.github.com/users/bobort/following{/other_user}", "gists_url": "https://api.github.com/users/bobort/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobort/subscriptions", "organizations_url": "https://api.github.com/users/bobort/orgs", "repos_url": "https://api.github.com/users/bobort/repos", "events_url": "https://api.github.com/users/bobort/events{/privacy}", "received_events_url": "https://api.github.com/users/bobort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-03T16:27:47Z", "updated_at": "2019-08-10T13:07:00Z", "closed_at": "2019-08-10T13:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We would like to refer to China as \"P.R. China\" in our countries list. So I added this to my settings:\r\n`COUNTRIES_OVERRIDE = {\"CN\": \"P.R. China\"}`\r\n\r\nHowever, I would like my users to be able to select \"China\" from the drop down because they will more than likely be looking for \"China\" with a _C_ instead of \"P.R. China\" with a _P_. Ultimately, the final label should show \"P.R. China\". It doesn't appear to be possible in the current configuration settings, but I'm probably missing something.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/255", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/255/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/255/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/255", "id": 425889273, "node_id": "MDU6SXNzdWU0MjU4ODkyNzM=", "number": 255, "title": "Fix in Portuguese & Brazilian translations", "user": {"login": "browniebroke", "id": 861044, "node_id": "MDQ6VXNlcjg2MTA0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/861044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/browniebroke", "html_url": "https://github.com/browniebroke", "followers_url": "https://api.github.com/users/browniebroke/followers", "following_url": "https://api.github.com/users/browniebroke/following{/other_user}", "gists_url": "https://api.github.com/users/browniebroke/gists{/gist_id}", "starred_url": "https://api.github.com/users/browniebroke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/browniebroke/subscriptions", "organizations_url": "https://api.github.com/users/browniebroke/orgs", "repos_url": "https://api.github.com/users/browniebroke/repos", "events_url": "https://api.github.com/users/browniebroke/events{/privacy}", "received_events_url": "https://api.github.com/users/browniebroke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-27T10:52:34Z", "updated_at": "2019-08-09T23:23:14Z", "closed_at": "2019-08-09T23:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "We found a few incorrect translations in European Portuguese & a few missing in Brazilian.\r\n\r\n* [Macedonia](https://pt.wikipedia.org/wiki/Maced%C3%B4nia_(regi%C3%A3o)), corrected from \"Maced\u00f4nia\" to \"Maced\u00f3nia\" in pt_PT (although this should be changed to North Macedonia it seems #254)\r\n* [Iran](https://pt.wikipedia.org/wiki/Ir%C3%A3o) corrected from \"Ir\u00e3\" to \"Ir\u00e3o\" in pt_PT\r\n* Missing translation for \"Holy See\", translated as \"Santa S\u00e9\" in pt_BR\r\n\r\nI've updated Transifex, is there anything I can do to help get them released?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/254", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/254/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/254/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/254", "id": 424265286, "node_id": "MDU6SXNzdWU0MjQyNjUyODY=", "number": 254, "title": "North Macedonia", "user": {"login": "batisteo", "id": 2727048, "node_id": "MDQ6VXNlcjI3MjcwNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2727048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batisteo", "html_url": "https://github.com/batisteo", "followers_url": "https://api.github.com/users/batisteo/followers", "following_url": "https://api.github.com/users/batisteo/following{/other_user}", "gists_url": "https://api.github.com/users/batisteo/gists{/gist_id}", "starred_url": "https://api.github.com/users/batisteo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batisteo/subscriptions", "organizations_url": "https://api.github.com/users/batisteo/orgs", "repos_url": "https://api.github.com/users/batisteo/repos", "events_url": "https://api.github.com/users/batisteo/events{/privacy}", "received_events_url": "https://api.github.com/users/batisteo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-22T15:25:59Z", "updated_at": "2019-08-09T23:09:51Z", "closed_at": "2019-08-09T23:09:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On Febuary 13th, the country name was oficially changed to **North Macedonia**.\r\n\r\nIt is now updated on the ISO website.\r\n\r\n![Screenshot from 2019-03-22 16-21-31](https://user-images.githubusercontent.com/2727048/54833638-ca1e6e80-4cbe-11e9-965b-922c562d3b59.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/253", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/253/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/253/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/253", "id": 423436906, "node_id": "MDU6SXNzdWU0MjM0MzY5MDY=", "number": 253, "title": "CountrySelectWidget doesn't support unicode flags", "user": {"login": "stefanor", "id": 442117, "node_id": "MDQ6VXNlcjQ0MjExNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/442117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanor", "html_url": "https://github.com/stefanor", "followers_url": "https://api.github.com/users/stefanor/followers", "following_url": "https://api.github.com/users/stefanor/following{/other_user}", "gists_url": "https://api.github.com/users/stefanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanor/subscriptions", "organizations_url": "https://api.github.com/users/stefanor/orgs", "repos_url": "https://api.github.com/users/stefanor/repos", "events_url": "https://api.github.com/users/stefanor/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-20T19:37:35Z", "updated_at": "2019-08-10T13:08:36Z", "closed_at": "2019-08-10T13:08:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The onchange handler attached to CountrySelectWidget assumes that we're using individual gifs.\r\n\r\nThey right answer here may be a new CountrySelectWidget.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/252", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/252/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/252/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/252", "id": 422309438, "node_id": "MDU6SXNzdWU0MjIzMDk0Mzg=", "number": 252, "title": "DRF CountryField ignores allow_blank=False", "user": {"login": "havelock", "id": 1548683, "node_id": "MDQ6VXNlcjE1NDg2ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1548683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/havelock", "html_url": "https://github.com/havelock", "followers_url": "https://api.github.com/users/havelock/followers", "following_url": "https://api.github.com/users/havelock/following{/other_user}", "gists_url": "https://api.github.com/users/havelock/gists{/gist_id}", "starred_url": "https://api.github.com/users/havelock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/havelock/subscriptions", "organizations_url": "https://api.github.com/users/havelock/orgs", "repos_url": "https://api.github.com/users/havelock/repos", "events_url": "https://api.github.com/users/havelock/events{/privacy}", "received_events_url": "https://api.github.com/users/havelock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-18T16:18:16Z", "updated_at": "2019-09-21T21:07:51Z", "closed_at": "2019-09-21T21:07:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`CountryField` inherits from DRF's `ChoiceField`, yet its' `to_internal_value()` ignores [allow_blank](https://www.django-rest-framework.org/api-guide/fields/#choicefield) handling present in the base field. There is no special handling or `super()` call in overriden method:\r\nhttps://github.com/SmileyChris/django-countries/blob/68b0934e8180d47bc15eff2887b6887aaa6e0228/django_countries/serializer_fields.py#L24-L32\r\n\r\nAs a result e.g. `\"country\": \"\"` JSON input when field is defined as `... = CountryField(allow_blank=False)` doesn't raise validation errors.\r\n\r\nIn my project I've done this workaround (Py3 needed due to short `super()`):\r\n```\r\nfrom django_countries.serializer_fields import CountryField\r\n\r\n\r\nclass FixedCountryField(CountryField):\r\n\r\n    def to_internal_value(self, data):\r\n        if not self.allow_blank and data == '':\r\n            self.fail('invalid_choice', input=data)\r\n\r\n        return super().to_internal_value(data)\r\n```\r\n\r\nNot sure if the current one is a desired behaviour, but opening field source and seeing that it inherits from a ChoiceField I expected that it retains all the features of parent field. Caused some confusion for me.\r\n\r\nIf it's a bug, I can do a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/251", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/251/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/251/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/251", "id": 422106845, "node_id": "MDU6SXNzdWU0MjIxMDY4NDU=", "number": 251, "title": "Flag image for undefined / unset country", "user": {"login": "malexmave", "id": 1688580, "node_id": "MDQ6VXNlcjE2ODg1ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1688580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malexmave", "html_url": "https://github.com/malexmave", "followers_url": "https://api.github.com/users/malexmave/followers", "following_url": "https://api.github.com/users/malexmave/following{/other_user}", "gists_url": "https://api.github.com/users/malexmave/gists{/gist_id}", "starred_url": "https://api.github.com/users/malexmave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malexmave/subscriptions", "organizations_url": "https://api.github.com/users/malexmave/orgs", "repos_url": "https://api.github.com/users/malexmave/repos", "events_url": "https://api.github.com/users/malexmave/events{/privacy}", "received_events_url": "https://api.github.com/users/malexmave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-18T09:10:44Z", "updated_at": "2019-09-11T00:51:49Z", "closed_at": "2019-09-11T00:51:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some situations, it may be desirable to display a flag that indicates that the country is unknown / not set. In my use case, I am crowd-sourcing (among other things) country information and would like to be able to indicate that the country for a specific item was not yet set (and thus needs someone to set it). The flag could also be automatically displayed in the dropdown country select list of the included form if the country is still blank.\r\n\r\nWould it be possible to get a special flag for this (e.g. blank flag with questionmark), or do you strictly limit yourself to the flags of existing countries (in which case I'll come up with a homebrew solution)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/250", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/250/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/250/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/250", "id": 419952957, "node_id": "MDU6SXNzdWU0MTk5NTI5NTc=", "number": 250, "title": "Translations on the front", "user": {"login": "rcascante", "id": 28595466, "node_id": "MDQ6VXNlcjI4NTk1NDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/28595466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcascante", "html_url": "https://github.com/rcascante", "followers_url": "https://api.github.com/users/rcascante/followers", "following_url": "https://api.github.com/users/rcascante/following{/other_user}", "gists_url": "https://api.github.com/users/rcascante/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcascante/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcascante/subscriptions", "organizations_url": "https://api.github.com/users/rcascante/orgs", "repos_url": "https://api.github.com/users/rcascante/repos", "events_url": "https://api.github.com/users/rcascante/events{/privacy}", "received_events_url": "https://api.github.com/users/rcascante/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-12T12:12:59Z", "updated_at": "2019-03-12T13:44:40Z", "closed_at": "2019-03-12T13:44:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "My application has the backend part made with django and fron with vue.\r\nMy issue is that I can't get the countries translated in the desired language,  I'm passing in the header my application language but can't get the translated countries. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/249", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/249/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/249/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/249", "id": 416372820, "node_id": "MDU6SXNzdWU0MTYzNzI4MjA=", "number": 249, "title": "Add emojis?", "user": {"login": "eillarra", "id": 514589, "node_id": "MDQ6VXNlcjUxNDU4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/514589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eillarra", "html_url": "https://github.com/eillarra", "followers_url": "https://api.github.com/users/eillarra/followers", "following_url": "https://api.github.com/users/eillarra/following{/other_user}", "gists_url": "https://api.github.com/users/eillarra/gists{/gist_id}", "starred_url": "https://api.github.com/users/eillarra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eillarra/subscriptions", "organizations_url": "https://api.github.com/users/eillarra/orgs", "repos_url": "https://api.github.com/users/eillarra/repos", "events_url": "https://api.github.com/users/eillarra/events{/privacy}", "received_events_url": "https://api.github.com/users/eillarra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-02T08:09:25Z", "updated_at": "2019-03-03T08:05:03Z", "closed_at": "2019-03-03T08:05:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Emojis can be an interesting addition considering that they are more and more supported in mobile devices and that it will only require a simple data dictionary to implement it. We could just access it as another read_only property of the Country class: 'country.emoji'.\r\n\r\nWhat do you think? An initial list could be generated from here:\r\n<https://apps.timwhitlock.info/emoji/tables/iso3166>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/246", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/246/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/246/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/246", "id": 403084029, "node_id": "MDU6SXNzdWU0MDMwODQwMjk=", "number": 246, "title": "Add phone dial codes", "user": {"login": "Sajam", "id": 333448, "node_id": "MDQ6VXNlcjMzMzQ0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/333448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sajam", "html_url": "https://github.com/Sajam", "followers_url": "https://api.github.com/users/Sajam/followers", "following_url": "https://api.github.com/users/Sajam/following{/other_user}", "gists_url": "https://api.github.com/users/Sajam/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sajam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sajam/subscriptions", "organizations_url": "https://api.github.com/users/Sajam/orgs", "repos_url": "https://api.github.com/users/Sajam/repos", "events_url": "https://api.github.com/users/Sajam/events{/privacy}", "received_events_url": "https://api.github.com/users/Sajam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-25T09:58:12Z", "updated_at": "2019-09-11T00:47:35Z", "closed_at": "2019-09-11T00:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThis is really cool library, I'd say nothing better is here at the moment for Django. Thank you all for your efforts :+1:\r\n\r\nI'm using ContryField along with DRF utils.\r\n\r\nThere's only one thing I'm missing - a phone (dial) code (e.g. +1 for US). I'd love to have it, if possible.\r\n\r\nThanks,\r\nDaniel", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/245", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/245/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/245/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/245", "id": 402804096, "node_id": "MDU6SXNzdWU0MDI4MDQwOTY=", "number": 245, "title": "error to make ./manage migrate ", "user": {"login": "eliezerfot123", "id": 1266024, "node_id": "MDQ6VXNlcjEyNjYwMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1266024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliezerfot123", "html_url": "https://github.com/eliezerfot123", "followers_url": "https://api.github.com/users/eliezerfot123/followers", "following_url": "https://api.github.com/users/eliezerfot123/following{/other_user}", "gists_url": "https://api.github.com/users/eliezerfot123/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliezerfot123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliezerfot123/subscriptions", "organizations_url": "https://api.github.com/users/eliezerfot123/orgs", "repos_url": "https://api.github.com/users/eliezerfot123/repos", "events_url": "https://api.github.com/users/eliezerfot123/events{/privacy}", "received_events_url": "https://api.github.com/users/eliezerfot123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T16:58:52Z", "updated_at": "2019-08-09T23:09:51Z", "closed_at": "2019-08-09T23:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": " Hi there! I'm work with django-countries but in this moment work with django 2.1 and python3.6.4, so make ./manage.py makemigrations (no problem) but ./manage.py migrate \r\n\r\n File \"./manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"project/env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"project/env/lib/python3.6/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"project/env/lib/python3.6/site-packages/django/core/management/base.py\", line 316, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"project/env/lib/python3.6/site-packages/django/core/management/base.py\", line 353, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"project/env/lib/python3.6/site-packages/django/core/management/base.py\", line 83, in wrapped\r\n    res = handle_func(*args, **kwargs)\r\n  File \"project/env/lib/python3.6/site-packages/django/core/management/commands/migrate.py\", line 203, in handle\r\n    fake_initial=fake_initial,\r\n  File \"project/env/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 117, in migrate\r\n    state = self._migrate_all_forwards(state, plan, full_plan, fake=fake, fake_initial=fake_initial)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 147, in _migrate_all_forwards\r\n    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 244, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/migrations/migration.py\", line 124, in apply\r\n    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/migrations/operations/fields.py\", line 84, in database_forwards\r\n    field,\r\n  File \"project/env/lib/python3.6/site-packages/django/db/backends/sqlite3/schema.py\", line 309, in add_field\r\n    self._remake_table(model, create_field=field)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/backends/sqlite3/schema.py\", line 181, in _remake_table\r\n    self.effective_default(create_field)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 239, in effective_default\r\n    return field.get_db_prep_save(default, self.connection)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/models/fields/__init__.py\", line 790, in get_db_prep_save\r\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\r\n  File \"project/env/lib/python3.6/site-packages/django/db/models/fields/__init__.py\", line 785, in get_db_prep_value\r\n    value = self.get_prep_value(value)\r\n  File \"project/env/lib/python3.6/site-packages/django_countries/fields.py\", line 316, in get_prep_value\r\n    value = self.get_clean_value(value)\r\n  File \"project/env/lib/python3.6/site-packages/django_countries/fields.py\", line 334, in get_clean_value\r\n    return list(filter(None, [country_to_text(c) for c in value]))\r\nTypeError: 'int' object is not iterable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/244", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/244/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/244/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/244", "id": 397694992, "node_id": "MDU6SXNzdWUzOTc2OTQ5OTI=", "number": 244, "title": "New translation for Afrikaans (af)", "user": {"login": "friedelwolff", "id": 1551995, "node_id": "MDQ6VXNlcjE1NTE5OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1551995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/friedelwolff", "html_url": "https://github.com/friedelwolff", "followers_url": "https://api.github.com/users/friedelwolff/followers", "following_url": "https://api.github.com/users/friedelwolff/following{/other_user}", "gists_url": "https://api.github.com/users/friedelwolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/friedelwolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/friedelwolff/subscriptions", "organizations_url": "https://api.github.com/users/friedelwolff/orgs", "repos_url": "https://api.github.com/users/friedelwolff/repos", "events_url": "https://api.github.com/users/friedelwolff/events{/privacy}", "received_events_url": "https://api.github.com/users/friedelwolff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-10T06:52:03Z", "updated_at": "2019-08-10T00:51:00Z", "closed_at": "2019-08-10T00:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added a new translation for Afrikaans (af) on Transifex. I hope you can include it in the next release!\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/242", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/242/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/242/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/242", "id": 379541704, "node_id": "MDU6SXNzdWUzNzk1NDE3MDQ=", "number": 242, "title": "Searching by country name", "user": {"login": "predatorhmo", "id": 4621172, "node_id": "MDQ6VXNlcjQ2MjExNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4621172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/predatorhmo", "html_url": "https://github.com/predatorhmo", "followers_url": "https://api.github.com/users/predatorhmo/followers", "following_url": "https://api.github.com/users/predatorhmo/following{/other_user}", "gists_url": "https://api.github.com/users/predatorhmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/predatorhmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/predatorhmo/subscriptions", "organizations_url": "https://api.github.com/users/predatorhmo/orgs", "repos_url": "https://api.github.com/users/predatorhmo/repos", "events_url": "https://api.github.com/users/predatorhmo/events{/privacy}", "received_events_url": "https://api.github.com/users/predatorhmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-11T17:02:10Z", "updated_at": "2020-03-01T21:42:19Z", "closed_at": "2020-03-01T07:27:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have next model:\r\n```python\r\nclass SomeModel(models.Model):\r\n    country = CountryField()\r\n```\r\n\r\nAnd next admin model:\r\n\r\n```python\r\nclass SomeModelAdmin(admin.ModelAdmin):\r\n    list_display = ('country',)\r\n    search_fields = ('country',)\r\n```\r\n\r\nOn admin page, when I try to search by country code(i.e. AU), it works well, but if I want to search by country name(i.e. Australia) no any result returns. Is it possible to make some workaround? \r\n![image](https://user-images.githubusercontent.com/4621172/48315850-33d98e00-e5e4-11e8-9ff0-3537bb67157e.png)\r\n\r\nThanks in advance. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/240", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/240/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/240/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/240", "id": 359467759, "node_id": "MDU6SXNzdWUzNTk0Njc3NTk=", "number": 240, "title": "Any desire to add ISO 4217 code for currencies?", "user": {"login": "simkimsia", "id": 245021, "node_id": "MDQ6VXNlcjI0NTAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simkimsia", "html_url": "https://github.com/simkimsia", "followers_url": "https://api.github.com/users/simkimsia/followers", "following_url": "https://api.github.com/users/simkimsia/following{/other_user}", "gists_url": "https://api.github.com/users/simkimsia/gists{/gist_id}", "starred_url": "https://api.github.com/users/simkimsia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simkimsia/subscriptions", "organizations_url": "https://api.github.com/users/simkimsia/orgs", "repos_url": "https://api.github.com/users/simkimsia/repos", "events_url": "https://api.github.com/users/simkimsia/events{/privacy}", "received_events_url": "https://api.github.com/users/simkimsia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-12T12:57:03Z", "updated_at": "2019-09-11T00:47:51Z", "closed_at": "2019-09-11T00:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/239", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/239/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/239/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/239", "id": 356554008, "node_id": "MDU6SXNzdWUzNTY1NTQwMDg=", "number": 239, "title": "Further attributes to COUNTRIES_OVERRIDE beyond a Code and a Name", "user": {"login": "marksweb", "id": 1461191, "node_id": "MDQ6VXNlcjE0NjExOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1461191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marksweb", "html_url": "https://github.com/marksweb", "followers_url": "https://api.github.com/users/marksweb/followers", "following_url": "https://api.github.com/users/marksweb/following{/other_user}", "gists_url": "https://api.github.com/users/marksweb/gists{/gist_id}", "starred_url": "https://api.github.com/users/marksweb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marksweb/subscriptions", "organizations_url": "https://api.github.com/users/marksweb/orgs", "repos_url": "https://api.github.com/users/marksweb/repos", "events_url": "https://api.github.com/users/marksweb/events{/privacy}", "received_events_url": "https://api.github.com/users/marksweb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T16:00:56Z", "updated_at": "2019-08-10T13:07:00Z", "closed_at": "2019-08-10T13:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a request from a client to add Kosovo (#25) to a list of available countries.\r\n\r\nThe site is primarily backed by the use of IOC codes and looks to display countries by their IOC value.\r\n\r\nTo support Kosovo as a custom country I've added the setting to django;\r\n\r\n    COUNTRIES_OVERRIDE = {\r\n        'XK': _('Kosovo'),\r\n    }\r\n\r\nI've not been able to find where this setting gets loaded, but obviously it creates `Country` objects with a `code` and `name`, but can further attributes (`ioc_code`) be added to these overrides?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/234", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/234/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/234/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/234", "id": 331782751, "node_id": "MDU6SXNzdWUzMzE3ODI3NTE=", "number": 234, "title": "Bootstrap or other formating parameters", "user": {"login": "born4web", "id": 16520049, "node_id": "MDQ6VXNlcjE2NTIwMDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/16520049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/born4web", "html_url": "https://github.com/born4web", "followers_url": "https://api.github.com/users/born4web/followers", "following_url": "https://api.github.com/users/born4web/following{/other_user}", "gists_url": "https://api.github.com/users/born4web/gists{/gist_id}", "starred_url": "https://api.github.com/users/born4web/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/born4web/subscriptions", "organizations_url": "https://api.github.com/users/born4web/orgs", "repos_url": "https://api.github.com/users/born4web/repos", "events_url": "https://api.github.com/users/born4web/events{/privacy}", "received_events_url": "https://api.github.com/users/born4web/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-12T22:56:53Z", "updated_at": "2018-08-27T04:46:47Z", "closed_at": "2018-08-27T04:46:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way or you plan to implement passing formating parameters into widget from Bootstrap od other palform? Forms are unified and formated except the country TAG.\r\n\r\nSomething like:\r\n\r\nwidgets = { 'contry': CountrySelectWidget(attrs={'class': 'form-control'}),\r\n\r\nThanks Petr", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/233", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/233/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/233/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/233", "id": 330464354, "node_id": "MDU6SXNzdWUzMzA0NjQzNTQ=", "number": 233, "title": "Typo in Panama name (es locale)", "user": {"login": "ericdaniel", "id": 17369, "node_id": "MDQ6VXNlcjE3MzY5", "avatar_url": "https://avatars1.githubusercontent.com/u/17369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericdaniel", "html_url": "https://github.com/ericdaniel", "followers_url": "https://api.github.com/users/ericdaniel/followers", "following_url": "https://api.github.com/users/ericdaniel/following{/other_user}", "gists_url": "https://api.github.com/users/ericdaniel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericdaniel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericdaniel/subscriptions", "organizations_url": "https://api.github.com/users/ericdaniel/orgs", "repos_url": "https://api.github.com/users/ericdaniel/repos", "events_url": "https://api.github.com/users/ericdaniel/events{/privacy}", "received_events_url": "https://api.github.com/users/ericdaniel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T22:58:38Z", "updated_at": "2018-06-08T01:28:47Z", "closed_at": "2018-06-08T01:28:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Panama ---> Panam\u00e1\r\n\r\nhttps://github.com/SmileyChris/django-countries/blob/c2c0c7bd8ca2059a173ae15de31f664129008deb/django_countries/locale/es/LC_MESSAGES/django.po#L773\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/231", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/231/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/231/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/231", "id": 319916912, "node_id": "MDU6SXNzdWUzMTk5MTY5MTI=", "number": 231, "title": "loaddata and dumpdata for CountryField(multiple=True) is broken", "user": {"login": "asfaltboy", "id": 321520, "node_id": "MDQ6VXNlcjMyMTUyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asfaltboy", "html_url": "https://github.com/asfaltboy", "followers_url": "https://api.github.com/users/asfaltboy/followers", "following_url": "https://api.github.com/users/asfaltboy/following{/other_user}", "gists_url": "https://api.github.com/users/asfaltboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/asfaltboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asfaltboy/subscriptions", "organizations_url": "https://api.github.com/users/asfaltboy/orgs", "repos_url": "https://api.github.com/users/asfaltboy/repos", "events_url": "https://api.github.com/users/asfaltboy/events{/privacy}", "received_events_url": "https://api.github.com/users/asfaltboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-03T13:18:29Z", "updated_at": "2018-05-09T07:55:26Z", "closed_at": "2018-05-08T23:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems [dumpdata][1] outputs the representation string of each country, rather than a comma delimited list. This, in turn, does not import well when using [loaddata][2]. E.g:\r\n\r\n```\r\n{\r\n\t\"model\": \"countrygroup\",\r\n\t\"pk\": 1,\r\n\t\"fields\": {\r\n\t\t\"name\": \"Some Countries\",\r\n\t\t\"countries\": \"[Country(code='GB'), Country(code='HU')]\"\r\n\t}\r\n}\r\n```\r\n\r\nAlso, if we manually clear the dumped data into something like \"GB,HU\", load data still fails to import the countries list correctly.\r\n\r\n[1]: https://docs.djangoproject.com/en/2.0/ref/django-admin/#dumpdata\r\n[2]: https://docs.djangoproject.com/en/2.0/ref/django-admin/#django-admin-loaddata", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/228", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/228/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/228/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/228", "id": 309976018, "node_id": "MDU6SXNzdWUzMDk5NzYwMTg=", "number": 228, "title": "Allow to remove \"required\" attribute from CountrySelectWidget", "user": {"login": "vporton", "id": 2900574, "node_id": "MDQ6VXNlcjI5MDA1NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2900574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vporton", "html_url": "https://github.com/vporton", "followers_url": "https://api.github.com/users/vporton/followers", "following_url": "https://api.github.com/users/vporton/following{/other_user}", "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}", "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vporton/subscriptions", "organizations_url": "https://api.github.com/users/vporton/orgs", "repos_url": "https://api.github.com/users/vporton/repos", "events_url": "https://api.github.com/users/vporton/events{/privacy}", "received_events_url": "https://api.github.com/users/vporton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-30T05:03:08Z", "updated_at": "2018-04-01T08:13:39Z", "closed_at": "2018-04-01T08:12:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems there is no way to make `CountrySelectWidget` for a `country = CountryField(\"Country\", null=True)` model field without `required` HTML attribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/227", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/227/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/227/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/227", "id": 309120230, "node_id": "MDU6SXNzdWUzMDkxMjAyMzA=", "number": 227, "title": "Feature: add (not selected) choice", "user": {"login": "vporton", "id": 2900574, "node_id": "MDQ6VXNlcjI5MDA1NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2900574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vporton", "html_url": "https://github.com/vporton", "followers_url": "https://api.github.com/users/vporton/followers", "following_url": "https://api.github.com/users/vporton/following{/other_user}", "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}", "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vporton/subscriptions", "organizations_url": "https://api.github.com/users/vporton/orgs", "repos_url": "https://api.github.com/users/vporton/repos", "events_url": "https://api.github.com/users/vporton/events{/privacy}", "received_events_url": "https://api.github.com/users/vporton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-27T20:25:10Z", "updated_at": "2018-03-28T22:26:10Z", "closed_at": "2018-03-28T13:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add option to display something like (`(not selected)`) as the first choice of `LazyTypedChoiceField(choices=countries)`.\r\n\r\nIf it is possible with the current version, please explain how.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/226", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/226/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/226/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/226", "id": 308293779, "node_id": "MDU6SXNzdWUzMDgyOTM3Nzk=", "number": 226, "title": "He locale", "user": {"login": "yaniv14", "id": 3071129, "node_id": "MDQ6VXNlcjMwNzExMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3071129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaniv14", "html_url": "https://github.com/yaniv14", "followers_url": "https://api.github.com/users/yaniv14/followers", "following_url": "https://api.github.com/users/yaniv14/following{/other_user}", "gists_url": "https://api.github.com/users/yaniv14/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaniv14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaniv14/subscriptions", "organizations_url": "https://api.github.com/users/yaniv14/orgs", "repos_url": "https://api.github.com/users/yaniv14/repos", "events_url": "https://api.github.com/users/yaniv14/events{/privacy}", "received_events_url": "https://api.github.com/users/yaniv14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-24T19:53:55Z", "updated_at": "2018-03-25T23:45:12Z", "closed_at": "2018-03-25T23:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've just finished translating he locale via transifex.\r\nCan you please add it to the repo.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/225", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/225/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/225/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/225", "id": 306703295, "node_id": "MDU6SXNzdWUzMDY3MDMyOTU=", "number": 225, "title": "Whether `null=True` is supported", "user": {"login": "vporton", "id": 2900574, "node_id": "MDQ6VXNlcjI5MDA1NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2900574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vporton", "html_url": "https://github.com/vporton", "followers_url": "https://api.github.com/users/vporton/followers", "following_url": "https://api.github.com/users/vporton/following{/other_user}", "gists_url": "https://api.github.com/users/vporton/gists{/gist_id}", "starred_url": "https://api.github.com/users/vporton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vporton/subscriptions", "organizations_url": "https://api.github.com/users/vporton/orgs", "repos_url": "https://api.github.com/users/vporton/repos", "events_url": "https://api.github.com/users/vporton/events{/privacy}", "received_events_url": "https://api.github.com/users/vporton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-20T02:13:15Z", "updated_at": "2018-09-20T19:01:35Z", "closed_at": "2018-04-02T23:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Need to say in `README.rst` whether `null=True` is supported for countries.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/224", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/224/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/224/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/224", "id": 303453749, "node_id": "MDU6SXNzdWUzMDM0NTM3NDk=", "number": 224, "title": "Performing an __in filter queryset no longer works since v5.1", "user": {"login": "jgb", "id": 182107, "node_id": "MDQ6VXNlcjE4MjEwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/182107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgb", "html_url": "https://github.com/jgb", "followers_url": "https://api.github.com/users/jgb/followers", "following_url": "https://api.github.com/users/jgb/following{/other_user}", "gists_url": "https://api.github.com/users/jgb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgb/subscriptions", "organizations_url": "https://api.github.com/users/jgb/orgs", "repos_url": "https://api.github.com/users/jgb/repos", "events_url": "https://api.github.com/users/jgb/events{/privacy}", "received_events_url": "https://api.github.com/users/jgb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-08T11:52:27Z", "updated_at": "2018-03-09T06:52:01Z", "closed_at": "2018-03-08T22:45:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nsomething that used to work in v5.0 no longer works in v5.1 and v5.1.1:\r\n\r\nIn [9]: Account.objects.filter(country='FR')\r\nOut[9]: [<Account: aaa>, <Account: bbb>, <Account: ccc>, '...(remaining elements truncated)...']\r\n\r\nIn [14]: Account.objects.filter(country__in=['FR'])\r\nOut[14]: []\r\n\r\nDowngrading to v5.0 solves the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/223", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/223/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/223/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/223", "id": 297548925, "node_id": "MDU6SXNzdWUyOTc1NDg5MjU=", "number": 223, "title": "CountryFieldMixin missing", "user": {"login": "SehgalDivij", "id": 17740040, "node_id": "MDQ6VXNlcjE3NzQwMDQw", "avatar_url": "https://avatars3.githubusercontent.com/u/17740040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SehgalDivij", "html_url": "https://github.com/SehgalDivij", "followers_url": "https://api.github.com/users/SehgalDivij/followers", "following_url": "https://api.github.com/users/SehgalDivij/following{/other_user}", "gists_url": "https://api.github.com/users/SehgalDivij/gists{/gist_id}", "starred_url": "https://api.github.com/users/SehgalDivij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SehgalDivij/subscriptions", "organizations_url": "https://api.github.com/users/SehgalDivij/orgs", "repos_url": "https://api.github.com/users/SehgalDivij/repos", "events_url": "https://api.github.com/users/SehgalDivij/events{/privacy}", "received_events_url": "https://api.github.com/users/SehgalDivij/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T18:26:15Z", "updated_at": "2018-02-15T18:29:02Z", "closed_at": "2018-02-15T18:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The CountryFieldMixin present in the README, to serialize the CountryField's value is not present in the package.\r\n\r\nIn fact, the serializers module is not present and serializer_fields does not contain the CountryFieldMixin.\r\n\r\nI am using version 4.4 of the package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/221", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/221/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/221/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/221", "id": 296637476, "node_id": "MDU6SXNzdWUyOTY2Mzc0NzY=", "number": 221, "title": "Override widget HTML ?", "user": {"login": "fendyh", "id": 1561029, "node_id": "MDQ6VXNlcjE1NjEwMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1561029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fendyh", "html_url": "https://github.com/fendyh", "followers_url": "https://api.github.com/users/fendyh/followers", "following_url": "https://api.github.com/users/fendyh/following{/other_user}", "gists_url": "https://api.github.com/users/fendyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/fendyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fendyh/subscriptions", "organizations_url": "https://api.github.com/users/fendyh/orgs", "repos_url": "https://api.github.com/users/fendyh/repos", "events_url": "https://api.github.com/users/fendyh/events{/privacy}", "received_events_url": "https://api.github.com/users/fendyh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-13T07:25:00Z", "updated_at": "2018-02-13T07:29:17Z", "closed_at": "2018-02-13T07:29:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIs there anyway to override the widget's HTML ? because adding attrs does not work\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/220", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/220/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/220/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/220", "id": 292865986, "node_id": "MDU6SXNzdWUyOTI4NjU5ODY=", "number": 220, "title": "Basque locale missing compiled .mo file (@5.1) ", "user": {"login": "eillarra", "id": 514589, "node_id": "MDQ6VXNlcjUxNDU4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/514589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eillarra", "html_url": "https://github.com/eillarra", "followers_url": "https://api.github.com/users/eillarra/followers", "following_url": "https://api.github.com/users/eillarra/following{/other_user}", "gists_url": "https://api.github.com/users/eillarra/gists{/gist_id}", "starred_url": "https://api.github.com/users/eillarra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eillarra/subscriptions", "organizations_url": "https://api.github.com/users/eillarra/orgs", "repos_url": "https://api.github.com/users/eillarra/repos", "events_url": "https://api.github.com/users/eillarra/events{/privacy}", "received_events_url": "https://api.github.com/users/eillarra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-30T17:16:50Z", "updated_at": "2018-01-31T08:46:42Z", "closed_at": "2018-01-31T08:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Without the compiled file the translations cannot be loaded [[eu](https://github.com/SmileyChris/django-countries/tree/master/django_countries/locale/eu/LC_MESSAGES)] [[eu_ES](https://github.com/SmileyChris/django-countries/tree/master/django_countries/locale/eu_ES/LC_MESSAGES)].", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/219", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/219/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/219/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/219", "id": 292795223, "node_id": "MDU6SXNzdWUyOTI3OTUyMjM=", "number": 219, "title": "required positional arguments: 'to' and 'on_delete' in Django 2.0.1", "user": {"login": "pwldp", "id": 4376083, "node_id": "MDQ6VXNlcjQzNzYwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4376083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwldp", "html_url": "https://github.com/pwldp", "followers_url": "https://api.github.com/users/pwldp/followers", "following_url": "https://api.github.com/users/pwldp/following{/other_user}", "gists_url": "https://api.github.com/users/pwldp/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwldp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwldp/subscriptions", "organizations_url": "https://api.github.com/users/pwldp/orgs", "repos_url": "https://api.github.com/users/pwldp/repos", "events_url": "https://api.github.com/users/pwldp/events{/privacy}", "received_events_url": "https://api.github.com/users/pwldp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-30T14:07:54Z", "updated_at": "2018-01-31T08:39:14Z", "closed_at": "2018-01-31T08:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nIn Django 2.0.1, Python 3.5.2  I have an error:\r\n\r\ncountry = models.ForeignKey()\r\nTypeError: __init__() missing 2 required positional arguments: 'to' and 'on_delete'\r\n\r\nRegards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/218", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/218/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/218/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/218", "id": 287379681, "node_id": "MDU6SXNzdWUyODczNzk2ODE=", "number": 218, "title": "value too long for type character varying(2)", "user": {"login": "Borkason", "id": 2971735, "node_id": "MDQ6VXNlcjI5NzE3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2971735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borkason", "html_url": "https://github.com/Borkason", "followers_url": "https://api.github.com/users/Borkason/followers", "following_url": "https://api.github.com/users/Borkason/following{/other_user}", "gists_url": "https://api.github.com/users/Borkason/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borkason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borkason/subscriptions", "organizations_url": "https://api.github.com/users/Borkason/orgs", "repos_url": "https://api.github.com/users/Borkason/repos", "events_url": "https://api.github.com/users/Borkason/events{/privacy}", "received_events_url": "https://api.github.com/users/Borkason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-10T10:18:41Z", "updated_at": "2018-03-22T17:06:25Z", "closed_at": "2018-01-16T11:47:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "An exception is thrown when trying to assign a alpha-3 code to a country field. But assignment and country are correctly recognized. See `a.land = 'usa'` in the below example.\r\n\r\n\r\n```python\r\n>>> a = Abonnent.objects.first()\r\n>>> a.save()\r\n>>> a\r\n<Abonnent: Abonnent object (374713)>\r\n>>> a.land\r\nCountry(code='DE')\r\n>>> a.land.name\r\n'Deutschland'\r\n>>> a.land = 'ch'\r\n>>> a.save()\r\n>>> a.land\r\nCountry(code='ch')\r\n>>> a.land.name\r\n'Schweiz'\r\n>>> a.land = 'usa'\r\n>>> a.land\r\nCountry(code='usa')\r\n>>> a.land.name\r\n'Vereinigte Staaten von Amerika'\r\n>>> a.save()\r\nTraceback (most recent call last):\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\npsycopg2.DataError: FEHLER:  Wert zu lang f\u00fcr Typ character varying(2)\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\base.py\", line 729, in save\r\n    force_update=force_update, update_fields=update_fields)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\base.py\", line 759, in save_base\r\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\base.py\", line 823, in _save_table\r\n    forced_update)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\base.py\", line 872, in _do_update\r\n    return filtered._update(values) > 0\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\query.py\", line 709, in _update\r\n    return query.get_compiler(self.db).execute_sql(CURSOR)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1374, in execute_sql\r\n    cursor = super().execute_sql(result_type)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1063, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 100, in execute\r\n    return super().execute(sql, params)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 68, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 77, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"C:\\...\\myproject_venv\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\ndjango.db.utils.DataError: FEHLER:  Wert zu lang f\u00fcr Typ character varying(2)\r\n```\r\n\r\nA similar issue was reported in #198.\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/217", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/217/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/217/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/217", "id": 286129597, "node_id": "MDU6SXNzdWUyODYxMjk1OTc=", "number": 217, "title": "country short name vs long name", "user": {"login": "radeksvarz", "id": 6020891, "node_id": "MDQ6VXNlcjYwMjA4OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radeksvarz", "html_url": "https://github.com/radeksvarz", "followers_url": "https://api.github.com/users/radeksvarz/followers", "following_url": "https://api.github.com/users/radeksvarz/following{/other_user}", "gists_url": "https://api.github.com/users/radeksvarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/radeksvarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radeksvarz/subscriptions", "organizations_url": "https://api.github.com/users/radeksvarz/orgs", "repos_url": "https://api.github.com/users/radeksvarz/repos", "events_url": "https://api.github.com/users/radeksvarz/events{/privacy}", "received_events_url": "https://api.github.com/users/radeksvarz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-04T22:15:00Z", "updated_at": "2018-01-05T09:40:12Z", "closed_at": "2018-01-05T09:40:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "As discussed in #171 Czech Republic was renamed to Czechia. This is however correct only for some cases. As stated in official declaration of the ministry of foreign affairs ( http://www.mzv.cz/jnp/en/foreign_relations/public_diplomacy/digital_diplomacy/how_to_use_the_short_country_name.html ) Czechia is officially short name while Czech Republic stays as a long highly formal name.\r\n\r\nThis is reflected on the ISO page ( https://www.iso.org/obp/ui#iso:code:3166:CZ ):\r\n\r\n> Alpha-2 code CZ\r\n> Short name CZECHIA\r\n> Short name lower case Czechia\r\n> Full namethe Czech Republic\r\n> Alpha-3 code CZE\r\n\r\nSome countries have very similar shortname and full name ( https://www.iso.org/obp/ui#iso:code:3166:US ,  https://www.iso.org/obp/ui#iso:code:3166:GB ) so there the problem is not visible.\r\n\r\nThis creates the problem for applications which need to support situations like: \r\n\r\n> In which cases it is NECESSARY to use the FORMAL (political) country name? \r\n\r\n> \u2022\tOfficial government documents \r\n> \u2022\tInternational agreements and non-binding official documents such as MoUs\r\n> \u2022\tOfficial top-level meetings of political representatives (table name cards in meeting rooms)\r\n\r\n\r\nI believe the issue is valid for some other countries as well.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/215", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/215/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/215/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/215", "id": 283824940, "node_id": "MDU6SXNzdWUyODM4MjQ5NDA=", "number": 215, "title": "Can't migrate CountryField(multiple=True, blank=True)", "user": {"login": "jedie", "id": 71315, "node_id": "MDQ6VXNlcjcxMzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/71315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedie", "html_url": "https://github.com/jedie", "followers_url": "https://api.github.com/users/jedie/followers", "following_url": "https://api.github.com/users/jedie/following{/other_user}", "gists_url": "https://api.github.com/users/jedie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedie/subscriptions", "organizations_url": "https://api.github.com/users/jedie/orgs", "repos_url": "https://api.github.com/users/jedie/repos", "events_url": "https://api.github.com/users/jedie/events{/privacy}", "received_events_url": "https://api.github.com/users/jedie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-21T09:42:33Z", "updated_at": "2017-12-29T02:48:42Z", "closed_at": "2017-12-29T02:48:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't migrate a **CountryField(multiple=True, blank=True)**:\r\n\r\n```\r\n  File \".../site-packages/django/db/backends/base/schema.py\", line 567, in _alter_field\r\n    old_default = self.effective_default(old_field)\r\n  File \".../site-packages/django/db/backends/base/schema.py\", line 212, in effective_default\r\n    default = field.get_db_prep_save(default, self.connection)\r\n  File \".../site-packages/django/db/models/fields/__init__.py\", line 710, in get_db_prep_save\r\n    prepared=False)\r\n  File \".../site-packages/django/db/models/fields/__init__.py\", line 702, in get_db_prep_value\r\n    value = self.get_prep_value(value)\r\n  File \".../site-packages/django_countries/fields.py\", line 330, in get_prep_value\r\n    country_to_text(code) for code in value if country_to_text(code))\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nIt doesn't work with **default=\"\"** in migration file.\r\n\r\nThe problem is, that **default** is **None** (and not **\"\"**) in **field.get_db_prep_save(default, self.connection)**\r\n\r\nSo i think https://github.com/SmileyChris/django-countries/pull/208/commits/4e8338a6d4ac043faab8dd24d4767deb616f5f63 is still needed.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/214", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/214/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/214/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/214", "id": 283587915, "node_id": "MDU6SXNzdWUyODM1ODc5MTU=", "number": 214, "title": "Kosovo as a country", "user": {"login": "maldo", "id": 1579275, "node_id": "MDQ6VXNlcjE1NzkyNzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1579275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maldo", "html_url": "https://github.com/maldo", "followers_url": "https://api.github.com/users/maldo/followers", "following_url": "https://api.github.com/users/maldo/following{/other_user}", "gists_url": "https://api.github.com/users/maldo/gists{/gist_id}", "starred_url": "https://api.github.com/users/maldo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maldo/subscriptions", "organizations_url": "https://api.github.com/users/maldo/orgs", "repos_url": "https://api.github.com/users/maldo/repos", "events_url": "https://api.github.com/users/maldo/events{/privacy}", "received_events_url": "https://api.github.com/users/maldo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-20T14:52:27Z", "updated_at": "2017-12-20T14:53:50Z", "closed_at": "2017-12-20T14:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have been using this lib in prod for quite a while in my company and today we had a problem, a user wanted to add Kosovo id, he couldn't find it, in the list we show. \r\nAre you against adding Kosovo as a country? if you are not, we are happy to do the PR.\r\n\r\ncheers,\r\nmaldo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/213", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/213/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/213/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/213", "id": 272852409, "node_id": "MDU6SXNzdWUyNzI4NTI0MDk=", "number": 213, "title": "Bug: Django REST Serializer return blank string", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-10T08:12:38Z", "updated_at": "2017-12-29T03:14:38Z", "closed_at": "2017-12-29T02:31:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "django==1.11.7\r\ndjangorestframework==3.7.3\r\ndjango-countries==5.0\r\n\r\n```python\r\n\r\nfrom django_countries.serializer_fields import CountryField\r\nfrom rest_framework import serializers\r\n\r\nfrom poinkbackend.apps.userprofiles.models import UserProfile\r\n\r\n\r\nclass UserProfileSerializers(serializers.ModelSerializer):\r\n    nationality = CountryField()\r\n\r\n    class Meta:\r\n        model = UserProfile\r\n        fields = [\r\n            ...\r\n            'nationality',\r\n        ]\r\n```\r\n\r\n```python\r\n\r\nfrom django.db import models\r\nfrom django_countries.fields import CountryField\r\n\r\nclass UserProfile(models.Model):\r\n    \r\n    ...\r\n    nationality = CountryField(multiple=True)\r\n```\r\n\r\n\r\n**Reference:**\r\nhttps://github.com/SmileyChris/django-countries/issues/106", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/211", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/211/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/211/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/211", "id": 270410017, "node_id": "MDU6SXNzdWUyNzA0MTAwMTc=", "number": 211, "title": "Template tag for full list of countries", "user": {"login": "traVaulta", "id": 9769600, "node_id": "MDQ6VXNlcjk3Njk2MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9769600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traVaulta", "html_url": "https://github.com/traVaulta", "followers_url": "https://api.github.com/users/traVaulta/followers", "following_url": "https://api.github.com/users/traVaulta/following{/other_user}", "gists_url": "https://api.github.com/users/traVaulta/gists{/gist_id}", "starred_url": "https://api.github.com/users/traVaulta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traVaulta/subscriptions", "organizations_url": "https://api.github.com/users/traVaulta/orgs", "repos_url": "https://api.github.com/users/traVaulta/repos", "events_url": "https://api.github.com/users/traVaulta/events{/privacy}", "received_events_url": "https://api.github.com/users/traVaulta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-01T18:43:51Z", "updated_at": "2017-12-29T02:48:42Z", "closed_at": "2017-12-29T02:48:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't seem to find a template tag for rendering a full list of countries in HTML - useful if used with DRF and some front-end javascript framework (that doesn't use Django forms or widgets rather it's own componentes). It's just a few lines of code but it would be cleaner if this was provided with this plugin:\r\n`@register.assignment_tag`\r\n`def get_countries():`\r\n&nbsp;&nbsp;&nbsp;&nbsp;`\"\"\"Returns all countries in a list\"\"\"`\r\n&nbsp;&nbsp;&nbsp;&nbsp;`return list(countries)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/209", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/209/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/209/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/209", "id": 264481057, "node_id": "MDU6SXNzdWUyNjQ0ODEwNTc=", "number": 209, "title": "CountryField raises ValidationError when assigned an alpha-3 country code.", "user": {"login": "Borkason", "id": 2971735, "node_id": "MDQ6VXNlcjI5NzE3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2971735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borkason", "html_url": "https://github.com/Borkason", "followers_url": "https://api.github.com/users/Borkason/followers", "following_url": "https://api.github.com/users/Borkason/following{/other_user}", "gists_url": "https://api.github.com/users/Borkason/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borkason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borkason/subscriptions", "organizations_url": "https://api.github.com/users/Borkason/orgs", "repos_url": "https://api.github.com/users/Borkason/repos", "events_url": "https://api.github.com/users/Borkason/events{/privacy}", "received_events_url": "https://api.github.com/users/Borkason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-11T07:19:36Z", "updated_at": "2018-01-30T01:02:25Z", "closed_at": "2017-10-17T00:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `full_clean()` on a model instance, the CountryField throws a ValidationError if I did assign a country using a ISO 3166-1 alpha-3 code, instead of an alpha-2 code, despite both codes being recognized.\r\n\r\n```python\r\nclass Person(models.Model):\r\n    country = CountryField()\r\n\r\n>>> Person(country=\"FI\").country.name  # 'FI' correctly recognised as 'Finland'\r\nFinland\r\n>>> Person(country=\"FI\").full_clean()  # 'FI' correctly validated as 'Finland'\r\n>>> Person(country=\"FIN\").country.name  # 'FIN' correctly recognised as 'Finland'\r\nFinland\r\n>>> Person(country=\"FIN\").full_clean()  # 'FI' wrongly validated as an invalid choice.\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"C:\\Users\\Borkason\\Documents\\python_stuff\\venv\\lib\\site-packages\\django\\db\\models\\base.py\", line 1249, in full_clean\r\n    raise ValidationError(errors)\r\ndjango.core.exceptions.ValidationError: {'country': [\"Value 'FIN' is not a valid choice.\"]}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/207", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/207/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/207/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/207", "id": 262072908, "node_id": "MDU6SXNzdWUyNjIwNzI5MDg=", "number": 207, "title": "Updating translations", "user": {"login": "jessenieminen", "id": 1484449, "node_id": "MDQ6VXNlcjE0ODQ0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1484449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jessenieminen", "html_url": "https://github.com/jessenieminen", "followers_url": "https://api.github.com/users/jessenieminen/followers", "following_url": "https://api.github.com/users/jessenieminen/following{/other_user}", "gists_url": "https://api.github.com/users/jessenieminen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jessenieminen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jessenieminen/subscriptions", "organizations_url": "https://api.github.com/users/jessenieminen/orgs", "repos_url": "https://api.github.com/users/jessenieminen/repos", "events_url": "https://api.github.com/users/jessenieminen/events{/privacy}", "received_events_url": "https://api.github.com/users/jessenieminen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-02T12:46:11Z", "updated_at": "2017-10-10T06:20:59Z", "closed_at": "2017-10-09T23:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @SmileyChris, thanks for the awesome project!\r\n\r\nI've just completed the translations for Finnish, Swedish, Norwegian and Spanish in Transifex. Could you please make a new release with these added in so that we could start using them in our product?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/206", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/206/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/206/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/206", "id": 260541749, "node_id": "MDU6SXNzdWUyNjA1NDE3NDk=", "number": 206, "title": "Required Attribute Missing from CountrySelectWidget for Required CountryFields when COUNTRIES_FIRST_BREAK Setting Turned On", "user": {"login": "verngutz", "id": 140011, "node_id": "MDQ6VXNlcjE0MDAxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/140011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verngutz", "html_url": "https://github.com/verngutz", "followers_url": "https://api.github.com/users/verngutz/followers", "following_url": "https://api.github.com/users/verngutz/following{/other_user}", "gists_url": "https://api.github.com/users/verngutz/gists{/gist_id}", "starred_url": "https://api.github.com/users/verngutz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verngutz/subscriptions", "organizations_url": "https://api.github.com/users/verngutz/orgs", "repos_url": "https://api.github.com/users/verngutz/repos", "events_url": "https://api.github.com/users/verngutz/events{/privacy}", "received_events_url": "https://api.github.com/users/verngutz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-26T08:49:30Z", "updated_at": "2017-10-02T12:16:20Z", "closed_at": "2017-10-02T12:16:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "When `blank=True` is not set on the `CountryField` of a model, the corresponding `CountrySelectWidget` in the `ModelForm` should render the `select` element with a `required` attribute.\r\n\r\nPython version: 3.5.2\r\nDjango version: 1.11.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/205", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/205/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/205/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/205", "id": 259712935, "node_id": "MDU6SXNzdWUyNTk3MTI5MzU=", "number": 205, "title": "Lithuanian language", "user": {"login": "Gedzis", "id": 959335, "node_id": "MDQ6VXNlcjk1OTMzNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/959335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gedzis", "html_url": "https://github.com/Gedzis", "followers_url": "https://api.github.com/users/Gedzis/followers", "following_url": "https://api.github.com/users/Gedzis/following{/other_user}", "gists_url": "https://api.github.com/users/Gedzis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gedzis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gedzis/subscriptions", "organizations_url": "https://api.github.com/users/Gedzis/orgs", "repos_url": "https://api.github.com/users/Gedzis/repos", "events_url": "https://api.github.com/users/Gedzis/events{/privacy}", "received_events_url": "https://api.github.com/users/Gedzis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-22T06:11:21Z", "updated_at": "2017-09-22T07:49:51Z", "closed_at": "2017-09-22T07:07:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nwe have made translations to Lithuanian language. Can we add these translations to plugin - https://www.transifex.com/smileychris/django-countries/translate/#lt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/204", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/204/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/204/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/204", "id": 251863237, "node_id": "MDU6SXNzdWUyNTE4NjMyMzc=", "number": 204, "title": "Sprite.png should have transparent background, not black", "user": {"login": "OdyX", "id": 417403, "node_id": "MDQ6VXNlcjQxNzQwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/417403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OdyX", "html_url": "https://github.com/OdyX", "followers_url": "https://api.github.com/users/OdyX/followers", "following_url": "https://api.github.com/users/OdyX/following{/other_user}", "gists_url": "https://api.github.com/users/OdyX/gists{/gist_id}", "starred_url": "https://api.github.com/users/OdyX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OdyX/subscriptions", "organizations_url": "https://api.github.com/users/OdyX/orgs", "repos_url": "https://api.github.com/users/OdyX/repos", "events_url": "https://api.github.com/users/OdyX/events{/privacy}", "received_events_url": "https://api.github.com/users/OdyX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-22T07:31:34Z", "updated_at": "2017-09-14T05:37:32Z", "closed_at": "2017-09-14T05:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a black background, the Swiss flag (square) appears black right-padded.\r\n\r\n![image](https://user-images.githubusercontent.com/417403/29553643-581c2b24-871c-11e7-98b3-453160b0f4bb.png)\r\n\r\nIt should either be special-cased in the CSS, or the sprite could be of transparent background.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/201", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/201/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/201/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/201", "id": 250340627, "node_id": "MDU6SXNzdWUyNTAzNDA2Mjc=", "number": 201, "title": "docs update", "user": {"login": "khashashin", "id": 17837758, "node_id": "MDQ6VXNlcjE3ODM3NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/17837758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khashashin", "html_url": "https://github.com/khashashin", "followers_url": "https://api.github.com/users/khashashin/followers", "following_url": "https://api.github.com/users/khashashin/following{/other_user}", "gists_url": "https://api.github.com/users/khashashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/khashashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khashashin/subscriptions", "organizations_url": "https://api.github.com/users/khashashin/orgs", "repos_url": "https://api.github.com/users/khashashin/repos", "events_url": "https://api.github.com/users/khashashin/events{/privacy}", "received_events_url": "https://api.github.com/users/khashashin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T14:58:37Z", "updated_at": "2017-08-16T09:49:05Z", "closed_at": "2017-08-16T09:49:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to programming for django and the problem is exactly this. But nevertheless a small line can save a lot of time.\r\n[I asked a question on Stackoverflow](https://stackoverflow.com/a/45695127/7986808) thx @gasman", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/198", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/198/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/198/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/198", "id": 246527155, "node_id": "MDU6SXNzdWUyNDY1MjcxNTU=", "number": 198, "title": "value too long for type character varying(2) when running migrations with postgresql", "user": {"login": "allandereal", "id": 24917429, "node_id": "MDQ6VXNlcjI0OTE3NDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/24917429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allandereal", "html_url": "https://github.com/allandereal", "followers_url": "https://api.github.com/users/allandereal/followers", "following_url": "https://api.github.com/users/allandereal/following{/other_user}", "gists_url": "https://api.github.com/users/allandereal/gists{/gist_id}", "starred_url": "https://api.github.com/users/allandereal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allandereal/subscriptions", "organizations_url": "https://api.github.com/users/allandereal/orgs", "repos_url": "https://api.github.com/users/allandereal/repos", "events_url": "https://api.github.com/users/allandereal/events{/privacy}", "received_events_url": "https://api.github.com/users/allandereal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-29T15:16:21Z", "updated_at": "2018-12-31T21:20:26Z", "closed_at": "2017-09-19T01:38:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "django.db.utils.DataError: value too long for type character varying(2)\r\nThis error arises while am running manage.py migrate on python3.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/197", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/197/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/197/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/197", "id": 246065119, "node_id": "MDU6SXNzdWUyNDYwNjUxMTk=", "number": 197, "title": "multiple=True prevents blank option", "user": {"login": "danielquinn", "id": 218205, "node_id": "MDQ6VXNlcjIxODIwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/218205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielquinn", "html_url": "https://github.com/danielquinn", "followers_url": "https://api.github.com/users/danielquinn/followers", "following_url": "https://api.github.com/users/danielquinn/following{/other_user}", "gists_url": "https://api.github.com/users/danielquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielquinn/subscriptions", "organizations_url": "https://api.github.com/users/danielquinn/orgs", "repos_url": "https://api.github.com/users/danielquinn/repos", "events_url": "https://api.github.com/users/danielquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/danielquinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-27T14:48:00Z", "updated_at": "2017-08-04T11:52:56Z", "closed_at": "2017-08-04T06:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my local project, I've got a field defined like so:\r\n\r\n```python\r\n# models.py\r\nclass User(models.Model):\r\n    ...\r\n    countries = CountryField(multiple=True)\r\n\r\n# forms.py\r\nclass MyForm(forms.ModelForm):\r\n\r\n    class Meta:\r\n        model = User\r\n\r\n    ...\r\n\r\n    countries = forms.MultipleChoiceField(\r\n        choices=countries,\r\n        widget=FilteredSelectMultiple(\"countries\", is_stacked=False),\r\n        required=False\r\n    )\r\n```\r\n\r\nIn cases where `countries` is empty at first (`\"\"`), this works well to allow me to assign multiple countries to that field.  I can also change which countries are assigned to the user without issue.  *However*, if I want this field to be blank, ie, no countries, `[]`, then this silently fails.  I can remove all countries from the list, hit submit in the admin, and my update is ignored: whatever was in `countries` before is still there.\r\n\r\nIf I forgo the use of `forms.MultipleChoiceField`, the default is a simple multi-select box with no `---` option, so I figure this must be an issue with how blank options are handled in this module.\r\n\r\nI have a feeling that this is related to #191 but after a lot of digging through both this project's code and Django's, I couldn't find a useable work around.  It seems reasonable to me though that a `multiple=True` field should allow for no countries.\r\n\r\nIf I've misunderstood how to use django-countries in this case, I'd appreciate some pointers, but if I haven't missed anything, then I think this is a bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/196", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/196/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/196/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/196", "id": 241535635, "node_id": "MDU6SXNzdWUyNDE1MzU2MzU=", "number": 196, "title": "Use flag-icon-css", "user": {"login": "llann", "id": 5268385, "node_id": "MDQ6VXNlcjUyNjgzODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5268385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llann", "html_url": "https://github.com/llann", "followers_url": "https://api.github.com/users/llann/followers", "following_url": "https://api.github.com/users/llann/following{/other_user}", "gists_url": "https://api.github.com/users/llann/gists{/gist_id}", "starred_url": "https://api.github.com/users/llann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llann/subscriptions", "organizations_url": "https://api.github.com/users/llann/orgs", "repos_url": "https://api.github.com/users/llann/repos", "events_url": "https://api.github.com/users/llann/events{/privacy}", "received_events_url": "https://api.github.com/users/llann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-09T16:24:26Z", "updated_at": "2017-07-10T00:09:18Z", "closed_at": "2017-07-10T00:09:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, first thanks for django-countries :) Awsome tool!\r\n\r\nAbout the flags, would be cool to include vectorial graphics instead of png, like including this lib: https://github.com/lipis/flag-icon-css\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/194", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/194/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/194/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/194", "id": 238041173, "node_id": "MDU6SXNzdWUyMzgwNDExNzM=", "number": 194, "title": "most recent locale .mo and .po files needed in repo", "user": {"login": "jayliew", "id": 129117, "node_id": "MDQ6VXNlcjEyOTExNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/129117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayliew", "html_url": "https://github.com/jayliew", "followers_url": "https://api.github.com/users/jayliew/followers", "following_url": "https://api.github.com/users/jayliew/following{/other_user}", "gists_url": "https://api.github.com/users/jayliew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayliew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayliew/subscriptions", "organizations_url": "https://api.github.com/users/jayliew/orgs", "repos_url": "https://api.github.com/users/jayliew/repos", "events_url": "https://api.github.com/users/jayliew/events{/privacy}", "received_events_url": "https://api.github.com/users/jayliew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-23T05:00:45Z", "updated_at": "2017-06-23T07:13:23Z", "closed_at": "2017-06-23T07:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Chris,\r\n\r\nI noticed that transifex shows that there are new translations, but the .mo and .po files in /locale/ hasn't been updated in 2-3 months. \r\n\r\nAre these changes that need to be transferred from transifex to the github repo?\r\n\r\nThat aside, the README doesn't include instructions on how to activate switch from one language to another.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/193", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/193/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/193/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/193", "id": 237561698, "node_id": "MDU6SXNzdWUyMzc1NjE2OTg=", "number": 193, "title": "Getting some kind of address displayed in html instead of a drop down!", "user": {"login": "uderani", "id": 7395076, "node_id": "MDQ6VXNlcjczOTUwNzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7395076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uderani", "html_url": "https://github.com/uderani", "followers_url": "https://api.github.com/users/uderani/followers", "following_url": "https://api.github.com/users/uderani/following{/other_user}", "gists_url": "https://api.github.com/users/uderani/gists{/gist_id}", "starred_url": "https://api.github.com/users/uderani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uderani/subscriptions", "organizations_url": "https://api.github.com/users/uderani/orgs", "repos_url": "https://api.github.com/users/uderani/repos", "events_url": "https://api.github.com/users/uderani/events{/privacy}", "received_events_url": "https://api.github.com/users/uderani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-21T14:50:22Z", "updated_at": "2017-07-03T11:24:20Z", "closed_at": "2017-06-22T20:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "<django_countries.widgets.CountrySelectWidget object at 0x7f901e728f98> \r\nI am using it at multiple places, where it is working, but in this particular page it is not.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/191", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/191/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/191/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/191", "id": 232039970, "node_id": "MDU6SXNzdWUyMzIwMzk5NzA=", "number": 191, "title": "Add option to remove blank choice", "user": {"login": "sephii", "id": 754333, "node_id": "MDQ6VXNlcjc1NDMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/754333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sephii", "html_url": "https://github.com/sephii", "followers_url": "https://api.github.com/users/sephii/followers", "following_url": "https://api.github.com/users/sephii/following{/other_user}", "gists_url": "https://api.github.com/users/sephii/gists{/gist_id}", "starred_url": "https://api.github.com/users/sephii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sephii/subscriptions", "organizations_url": "https://api.github.com/users/sephii/orgs", "repos_url": "https://api.github.com/users/sephii/repos", "events_url": "https://api.github.com/users/sephii/events{/privacy}", "received_events_url": "https://api.github.com/users/sephii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-29T14:37:27Z", "updated_at": "2017-06-07T06:26:46Z", "closed_at": "2017-06-07T05:06:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's no way to remove the blank choice in a `CountryField`, and it doesn't make sense to include a blank choice on a multiple choice field (ie. when `CountryField.multiple = True`). The only way I've found to remove it is by using `del self.fields['countryfield'].widget.choices[0]` or similar in the form init method, but that's quite ugly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/190", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/190/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/190/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/190", "id": 230392999, "node_id": "MDU6SXNzdWUyMzAzOTI5OTk=", "number": 190, "title": "Unable to use SlugRelatedField for ForeignKey model", "user": {"login": "hansek", "id": 378835, "node_id": "MDQ6VXNlcjM3ODgzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/378835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansek", "html_url": "https://github.com/hansek", "followers_url": "https://api.github.com/users/hansek/followers", "following_url": "https://api.github.com/users/hansek/following{/other_user}", "gists_url": "https://api.github.com/users/hansek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansek/subscriptions", "organizations_url": "https://api.github.com/users/hansek/orgs", "repos_url": "https://api.github.com/users/hansek/repos", "events_url": "https://api.github.com/users/hansek/events{/privacy}", "received_events_url": "https://api.github.com/users/hansek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-22T13:18:42Z", "updated_at": "2017-06-15T22:13:49Z", "closed_at": "2017-06-15T22:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to get only country code as `country_txt` attribute in `InstitutionSerializer`. But as I use `SlugRelatedField` then it doesn't work and makes `TypeError `, with message `Country(code='EN') is not JSON serializable`\r\n\r\n\r\nBelow is simplified version of my code base.\r\n\r\n\r\n_Models:_\r\n```python\r\nclass Address(models.Model):\r\n    name = models.CharField(\r\n        max_length=100,\r\n        blank=False,\r\n    )\r\n    street = models.CharField(\r\n        max_length=100,\r\n        blank=False,\r\n    )\r\n    city = models.CharField(\r\n        max_length=100,\r\n        blank=False,\r\n    )\r\n    zip = models.CharField(\r\n        max_length=10,\r\n        blank=False,\r\n    )\r\n    country = CountryField()\r\n\r\nclass Institution(models.Model):\r\n    name = models.CharField(\r\n        max_length=100\r\n    )\r\n    billing_address = models.ForeignKey(\r\n        'Address',\r\n        blank=True,\r\n        null=True\r\n    )\r\n\r\n```\r\n\r\n_Serializers:_\r\n```python\r\nclass InstitutionSerializer(ModelSerializer):\r\n    country_txt = serializers.SlugRelatedField(\r\n        source='billing_address',\r\n        slug_field='country',\r\n        read_only=True,\r\n    )\r\n\r\n    class Meta:\r\n        model = Institution\r\n        fields = (\r\n            'id',\r\n            'name',\r\n            'country_txt',\r\n        )\r\n```\r\n\r\nI made a temporary fix within `to_representation` method of `InstitutionSerializer`:\r\n```python\r\n    def to_representation(self, instance):\r\n        ret = super().to_representation(instance)\r\n\r\n        if ret['country_txt']:\r\n            ret['country_txt'] = ret['country_txt'].code\r\n\r\n        return ret\r\n```\r\n\r\nIs there any better way how to deal with this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/188", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/188/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/188/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/188", "id": 227627362, "node_id": "MDU6SXNzdWUyMjc2MjczNjI=", "number": 188, "title": "Multiple=True and Django REST Framework serialization", "user": {"login": "jofomah", "id": 5929681, "node_id": "MDQ6VXNlcjU5Mjk2ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5929681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jofomah", "html_url": "https://github.com/jofomah", "followers_url": "https://api.github.com/users/jofomah/followers", "following_url": "https://api.github.com/users/jofomah/following{/other_user}", "gists_url": "https://api.github.com/users/jofomah/gists{/gist_id}", "starred_url": "https://api.github.com/users/jofomah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jofomah/subscriptions", "organizations_url": "https://api.github.com/users/jofomah/orgs", "repos_url": "https://api.github.com/users/jofomah/repos", "events_url": "https://api.github.com/users/jofomah/events{/privacy}", "received_events_url": "https://api.github.com/users/jofomah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-10T09:59:32Z", "updated_at": "2017-06-07T04:47:09Z", "closed_at": "2017-06-07T04:47:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have a model similar to this:\r\n\r\n```Python\r\nclass Incident(models.Model):\r\n    title = models.CharField(max_length=100)\r\n    countries = CountryField(multiple=True)\r\n```\r\nIt is not clear how to create Django REST Framework serializer for this, i would expect Django countries to have List Serializer for multiple case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/187", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/187/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/187/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/187", "id": 226922293, "node_id": "MDU6SXNzdWUyMjY5MjIyOTM=", "number": 187, "title": "Very inefficient pickle/cache behaviour", "user": {"login": "craigds", "id": 32112, "node_id": "MDQ6VXNlcjMyMTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/32112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigds", "html_url": "https://github.com/craigds", "followers_url": "https://api.github.com/users/craigds/followers", "following_url": "https://api.github.com/users/craigds/following{/other_user}", "gists_url": "https://api.github.com/users/craigds/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigds/subscriptions", "organizations_url": "https://api.github.com/users/craigds/orgs", "repos_url": "https://api.github.com/users/craigds/repos", "events_url": "https://api.github.com/users/craigds/events{/privacy}", "received_events_url": "https://api.github.com/users/craigds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-08T02:42:11Z", "updated_at": "2017-06-07T02:24:23Z", "closed_at": "2017-06-07T02:05:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before [this commit](https://github.com/SmileyChris/django-countries/commit/cd08c4b94f8ee5f257c97479ccac43f4477c500d), caching a Country was relatively efficient:\r\n\r\n```python\r\nIn [5]: len(pickle.dumps(user.country))\r\nOut[5]: 187\r\n```\r\n\r\nAfter that commit, the size of the pickle exploded:\r\n\r\n```python\r\nIn [5]: len(pickle.dumps(user.country))\r\nOut[5]: 17365\r\n```\r\n\r\nBecause pickle traverses the CountryDescriptor, this effectively means that caching instances of any model with a `CountryField` is going to destroy the cache (slow gets/sets, and fills up the cache very quickly).\r\n\r\nMaybe that countries_object could be stored by some kind of reference rather than storing the entire object?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/184", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/184/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/184/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/184", "id": 225796274, "node_id": "MDU6SXNzdWUyMjU3OTYyNzQ=", "number": 184, "title": "andorra flag is broken and causes selected choices after to not show any flag at all", "user": {"login": "cjdcordeiro", "id": 4047767, "node_id": "MDQ6VXNlcjQwNDc3Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4047767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjdcordeiro", "html_url": "https://github.com/cjdcordeiro", "followers_url": "https://api.github.com/users/cjdcordeiro/followers", "following_url": "https://api.github.com/users/cjdcordeiro/following{/other_user}", "gists_url": "https://api.github.com/users/cjdcordeiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjdcordeiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjdcordeiro/subscriptions", "organizations_url": "https://api.github.com/users/cjdcordeiro/orgs", "repos_url": "https://api.github.com/users/cjdcordeiro/repos", "events_url": "https://api.github.com/users/cjdcordeiro/events{/privacy}", "received_events_url": "https://api.github.com/users/cjdcordeiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-02T19:27:51Z", "updated_at": "2018-02-28T19:30:44Z", "closed_at": "2017-05-04T02:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "to replicate, select andorra from the widget, the flag won't appear, but then for all other countries, no flags will appear as well", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/183", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/183/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/183/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/183", "id": 224557972, "node_id": "MDU6SXNzdWUyMjQ1NTc5NzI=", "number": 183, "title": "Renders awfully slow with Django 1.11 and DEBUG=True", "user": {"login": "karolyi", "id": 987055, "node_id": "MDQ6VXNlcjk4NzA1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/987055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karolyi", "html_url": "https://github.com/karolyi", "followers_url": "https://api.github.com/users/karolyi/followers", "following_url": "https://api.github.com/users/karolyi/following{/other_user}", "gists_url": "https://api.github.com/users/karolyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/karolyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karolyi/subscriptions", "organizations_url": "https://api.github.com/users/karolyi/orgs", "repos_url": "https://api.github.com/users/karolyi/repos", "events_url": "https://api.github.com/users/karolyi/events{/privacy}", "received_events_url": "https://api.github.com/users/karolyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-26T18:24:57Z", "updated_at": "2017-10-02T19:06:36Z", "closed_at": "2017-05-04T02:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI'm using this field in my project, and since I changed to Django 1.11, the field takes **2-3 minutes** to render. In Django 1.11, they have introduced [the template based widget rendering](https://docs.djangoproject.com/en/1.11/releases/1.11/#template-based-widget-rendering), which changed quite a lot of code. I tried to dive into it through countryfield's initialization, but after 7-8 levels of code stack and spending ~4hrs on it, I gave up.\r\n\r\nCould you guys please look into it? It's pretty much a pain in the ass to develop this way.\r\n\r\nThe automated tests will not show this error, as they use `DEBUG=False`.\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/182", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/182/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/182/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/182", "id": 224234008, "node_id": "MDU6SXNzdWUyMjQyMzQwMDg=", "number": 182, "title": "CountryField multiple=True ignores max_length setting, always creates varchar(599) in mysql which is too small", "user": {"login": "factorial", "id": 225800, "node_id": "MDQ6VXNlcjIyNTgwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/225800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/factorial", "html_url": "https://github.com/factorial", "followers_url": "https://api.github.com/users/factorial/followers", "following_url": "https://api.github.com/users/factorial/following{/other_user}", "gists_url": "https://api.github.com/users/factorial/gists{/gist_id}", "starred_url": "https://api.github.com/users/factorial/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/factorial/subscriptions", "organizations_url": "https://api.github.com/users/factorial/orgs", "repos_url": "https://api.github.com/users/factorial/repos", "events_url": "https://api.github.com/users/factorial/events{/privacy}", "received_events_url": "https://api.github.com/users/factorial/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-25T18:38:54Z", "updated_at": "2017-06-06T05:14:23Z", "closed_at": "2017-06-06T05:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Django 1.8, MySQL 5.7. Issue is two parts:\r\n\r\n1. When I add a CountryField to my model and migrate, it always creates a varchar(599) column regardless of the `max_length` setting\r\n\r\n2. This default 599 character setting is too small to store all country codes, the maximum value possible for the field.\r\n\r\n```\r\n# Models.py:\r\nclass Config(models.Model):\r\n    country_whitelist = CountryField(multiple=True, max_length=200, \r\n                                     blank=False, null=False, default=\"\")\r\n```\r\n\r\n```\r\nmysql> desc AppName_config;\r\n+-------------------------------+------------------+------+-----+---------+----------------+\r\n| Field                         | Type             | Null | Key | Default | Extra          |\r\n+-------------------------------+------------------+------+-----+---------+----------------+\r\n| id                            | int(11)          | NO   | PRI | NULL    | auto_increment |\r\n| country_whitelist             | varchar(599)     | NO   |     | NULL    |                |\r\n+-------------------------------+------------------+------+-----+---------+----------------+\r\n2 rows in set (0.01 sec)\r\n```\r\n\r\nAfter selecting all countries in the \"Country Whitelist\" field of a Config instance's admin page and clicking save, this error is shown:\r\n\r\n```\r\nDataError at /admin/AppName/config/4/\r\n(1406, \"Data too long for column 'country_whitelist' at row 1\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/181", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/181/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/181/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/181", "id": 221467932, "node_id": "MDU6SXNzdWUyMjE0Njc5MzI=", "number": 181, "title": "django-countries falls in some sort of infinite loop when using django 1.11 and django-channels", "user": {"login": "pypetey", "id": 2168189, "node_id": "MDQ6VXNlcjIxNjgxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2168189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pypetey", "html_url": "https://github.com/pypetey", "followers_url": "https://api.github.com/users/pypetey/followers", "following_url": "https://api.github.com/users/pypetey/following{/other_user}", "gists_url": "https://api.github.com/users/pypetey/gists{/gist_id}", "starred_url": "https://api.github.com/users/pypetey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pypetey/subscriptions", "organizations_url": "https://api.github.com/users/pypetey/orgs", "repos_url": "https://api.github.com/users/pypetey/repos", "events_url": "https://api.github.com/users/pypetey/events{/privacy}", "received_events_url": "https://api.github.com/users/pypetey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-13T06:15:01Z", "updated_at": "2017-04-18T05:01:35Z", "closed_at": "2017-04-18T05:01:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "It might be hard to explain and reproduce.\r\n\r\nI've upgraded my project to use django 1.11, django-countries 4.4\r\nchannels==1.1.3\r\nasgi_redis==1.3.0\r\ndjango-redis==4.7.0\r\ndjango-cq==0.1.15\r\npypiwin32; sys.platform == 'win32'\r\n\r\nI get most unusuall error. When I enter a webpage that contains django-countries model field then I get \r\n\r\n> \r\n> 503 Service Unavailable\r\n> \r\n> Worker server failed to respond within time limit.\r\n> Daphne\r\n> \r\n> HTTP/WS send decode error: Cannot dispatch message on channel 'daphne.response.QauYEkZnEP!GMtYUoLoHS' (unknown)\r\n\r\n\r\nI've tried to debug it but it's quite complicated - the only thing I've discovered is that commenting out most out of django-countries field would solve the problem. I could not find where exactly the problem lies", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/180", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/180/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/180/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/180", "id": 219919688, "node_id": "MDU6SXNzdWUyMTk5MTk2ODg=", "number": 180, "title": "Update the Arabic translations to include Czechia ", "user": {"login": "OmarIthawi", "id": 645156, "node_id": "MDQ6VXNlcjY0NTE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/645156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OmarIthawi", "html_url": "https://github.com/OmarIthawi", "followers_url": "https://api.github.com/users/OmarIthawi/followers", "following_url": "https://api.github.com/users/OmarIthawi/following{/other_user}", "gists_url": "https://api.github.com/users/OmarIthawi/gists{/gist_id}", "starred_url": "https://api.github.com/users/OmarIthawi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OmarIthawi/subscriptions", "organizations_url": "https://api.github.com/users/OmarIthawi/orgs", "repos_url": "https://api.github.com/users/OmarIthawi/repos", "events_url": "https://api.github.com/users/OmarIthawi/events{/privacy}", "received_events_url": "https://api.github.com/users/OmarIthawi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-06T14:34:43Z", "updated_at": "2017-04-18T08:18:27Z", "closed_at": "2017-04-18T05:01:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @SmileyChris, \r\n\r\nI noticed that you've added Czechia it puzzled me but it looks like there's a [funny story about it \ud83d\ude04](https://www.theguardian.com/world/2016/oct/25/nobody-calls-it-czechia-czech-republic-new-fails-catch-on).\r\n\r\nAnyway, I've translated `Czechia`, `Country` and `All` strings. Please update and make a release.\r\n\r\nThanks,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/178", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/178/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/178/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/178", "id": 219749167, "node_id": "MDU6SXNzdWUyMTk3NDkxNjc=", "number": 178, "title": "CountryField raises AttributeError on model creation with Django 1.11", "user": {"login": "aktiur", "id": 1560652, "node_id": "MDQ6VXNlcjE1NjA2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1560652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aktiur", "html_url": "https://github.com/aktiur", "followers_url": "https://api.github.com/users/aktiur/followers", "following_url": "https://api.github.com/users/aktiur/following{/other_user}", "gists_url": "https://api.github.com/users/aktiur/gists{/gist_id}", "starred_url": "https://api.github.com/users/aktiur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aktiur/subscriptions", "organizations_url": "https://api.github.com/users/aktiur/orgs", "repos_url": "https://api.github.com/users/aktiur/repos", "events_url": "https://api.github.com/users/aktiur/events{/privacy}", "received_events_url": "https://api.github.com/users/aktiur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-05T23:58:02Z", "updated_at": "2017-04-06T14:14:26Z", "closed_at": "2017-04-06T10:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying Django 1.11 and noticed the following problem. When trying to create a new instance of a model, django_countries raises the following exception:\r\n\r\n```\r\nAttributeError at /people/\r\n\r\nThe 'location_country' attribute can only be accessed from Person instances.\r\n```\r\n\r\nI was able to retrace what's happening by comparing django 1.10.7 and Django 1.11.\r\n\r\nThe responsible modification is in django.db.models.base, in the `__init__` method of class `Model`, at the very end:\r\n\r\n```\r\n            # THE EXCEPTION IS RAISED ON THE LINE BELOW\r\n            property_names = opts._property_names\r\n            for prop in tuple(kwargs):\r\n                try:\r\n                    # Any remaining kwargs must correspond to properties or\r\n                    # virtual fields.\r\n                    if prop in property_names or opts.get_field(prop):\r\n                        if kwargs[prop] is not _DEFERRED:\r\n                            _setattr(self, prop, kwargs[prop])\r\n                        del kwargs[prop]\r\n                except (AttributeError, FieldDoesNotExist):\r\n                    pass\r\n```\r\n\r\n`_property_names` is a simple of property of the `_meta` object that basically collects all properties from the model by getting, all attributes, and checking if they are instance of `property`:\r\n\r\n```\r\n        return frozenset({\r\n            attr for attr in\r\n            dir(self.model) if isinstance(getattr(self.model, attr), property)\r\n})\r\n```\r\n\r\nwhich raises the final exception, when invoking `getattr(self.mode, attr)` with `attr` set to the name of a `CountryField`.\r\n\r\nIn Django 1.10.7, the problem was not happening as Django was not trying to find all properties, but only those of keys remaining in `kwargs`.\r\n\r\n```\r\n            for prop in list(kwargs):\r\n                try:\r\n                    # Any remaining kwargs must correspond to properties or\r\n                    # virtual fields.\r\n                    if (isinstance(getattr(self.__class__, prop), property) or\r\n                            self._meta.get_field(prop)):\r\n                        if kwargs[prop] is not DEFERRED:\r\n                            setattr(self, prop, kwargs[prop])\r\n                        del kwargs[prop]\r\n                except (AttributeError, FieldDoesNotExist):\r\n                    pass\r\n```\r\n\r\nAs I do not know why this restriction of the field only being accessible from actual instances is enforced, I don't really know how to proceed from there: if you have any pointer, I don't mind making a pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/177", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/177/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/177/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/177", "id": 219480961, "node_id": "MDU6SXNzdWUyMTk0ODA5NjE=", "number": 177, "title": "How to add '--------' on select option when using CustomForm", "user": {"login": "gyugyu90", "id": 14208790, "node_id": "MDQ6VXNlcjE0MjA4Nzkw", "avatar_url": "https://avatars3.githubusercontent.com/u/14208790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyugyu90", "html_url": "https://github.com/gyugyu90", "followers_url": "https://api.github.com/users/gyugyu90/followers", "following_url": "https://api.github.com/users/gyugyu90/following{/other_user}", "gists_url": "https://api.github.com/users/gyugyu90/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyugyu90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyugyu90/subscriptions", "organizations_url": "https://api.github.com/users/gyugyu90/orgs", "repos_url": "https://api.github.com/users/gyugyu90/repos", "events_url": "https://api.github.com/users/gyugyu90/events{/privacy}", "received_events_url": "https://api.github.com/users/gyugyu90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T06:27:45Z", "updated_at": "2017-04-06T10:48:36Z", "closed_at": "2017-04-06T10:48:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using LazyTypedChoiceField in a form. I want to set blank label ('--------') at the very top of the select, but I cannot figure out how. Currently, I am using the following code as a walkaround.\r\n````\r\nfrom django import forms\r\nfrom django_countries import countries\r\nfrom django_countries.fields import LazyTypedChoiceField\r\n\r\nclass StoreWizardForm1(forms.Form):\r\n    nation = LazyTypedChoiceField(choices=[('','---------')]+list(countries), widget = LazySelect(attrs={'id':'nation-select'}))\r\n   ...\r\n````\r\n\r\nbut this cannot provide translated country names...\r\nIf I just use `choices=countries`, it doesn't show '---------' thing. I am not using a ModelForm because it is in the FormWizard\r\n\r\nCan somebody help me out?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/174", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/174/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/174/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/174", "id": 217810057, "node_id": "MDU6SXNzdWUyMTc4MTAwNTc=", "number": 174, "title": "Support choices in DRF field serialization", "user": {"login": "hugorodgerbrown", "id": 200944, "node_id": "MDQ6VXNlcjIwMDk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/200944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugorodgerbrown", "html_url": "https://github.com/hugorodgerbrown", "followers_url": "https://api.github.com/users/hugorodgerbrown/followers", "following_url": "https://api.github.com/users/hugorodgerbrown/following{/other_user}", "gists_url": "https://api.github.com/users/hugorodgerbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugorodgerbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugorodgerbrown/subscriptions", "organizations_url": "https://api.github.com/users/hugorodgerbrown/orgs", "repos_url": "https://api.github.com/users/hugorodgerbrown/repos", "events_url": "https://api.github.com/users/hugorodgerbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/hugorodgerbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-29T09:03:58Z", "updated_at": "2017-04-18T05:01:52Z", "closed_at": "2017-04-18T05:01:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current CountryField serializer subclasses the DRF Field class, which does not support having choices. If it subclassed ChoiceField instead, it would do. Will submit a PR.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/173", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/173/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/173/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/173", "id": 217106089, "node_id": "MDU6SXNzdWUyMTcxMDYwODk=", "number": 173, "title": "error importing CountryField", "user": {"login": "dblado", "id": 926459, "node_id": "MDQ6VXNlcjkyNjQ1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/926459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dblado", "html_url": "https://github.com/dblado", "followers_url": "https://api.github.com/users/dblado/followers", "following_url": "https://api.github.com/users/dblado/following{/other_user}", "gists_url": "https://api.github.com/users/dblado/gists{/gist_id}", "starred_url": "https://api.github.com/users/dblado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dblado/subscriptions", "organizations_url": "https://api.github.com/users/dblado/orgs", "repos_url": "https://api.github.com/users/dblado/repos", "events_url": "https://api.github.com/users/dblado/events{/privacy}", "received_events_url": "https://api.github.com/users/dblado/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T00:30:26Z", "updated_at": "2017-03-28T21:35:24Z", "closed_at": "2017-03-28T21:23:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Django 1.9.6. I'm getting the following error trying to use CountryField:\r\n\r\ndjango.core.exceptions.AppRegistryNotReady: The translation infrastructure cannot be initialized before the apps registry is ready. Check that you don't make non-lazy gettext calls at import time.\r\n\r\nI went through the normal Google searching to make sure I was using:\r\n```\r\nfrom django.core.wsgi import get_wsgi_application\r\napplication = get_wsgi_application()\r\n```\r\n\r\nI found that editing:\r\nhttps://github.com/SmileyChris/django-countries/blob/master/django_countries/filters.py#L3\r\n\r\nfrom:\r\n```\r\nfrom django.utils.translation import ugettext as _\r\n```\r\nto:\r\n```\r\nfrom django.utils.translation import ugettext_lazy as _\r\n```\r\nfixed my issue but not sure if it's the right fix. Looking for some guidance so I can use this package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/171", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/171/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/171/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/171", "id": 212680458, "node_id": "MDU6SXNzdWUyMTI2ODA0NTg=", "number": 171, "title": "Mention rename of Czech Republic to Czechia in changelog", "user": {"login": "saily", "id": 506283, "node_id": "MDQ6VXNlcjUwNjI4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/506283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saily", "html_url": "https://github.com/saily", "followers_url": "https://api.github.com/users/saily/followers", "following_url": "https://api.github.com/users/saily/following{/other_user}", "gists_url": "https://api.github.com/users/saily/gists{/gist_id}", "starred_url": "https://api.github.com/users/saily/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saily/subscriptions", "organizations_url": "https://api.github.com/users/saily/orgs", "repos_url": "https://api.github.com/users/saily/repos", "events_url": "https://api.github.com/users/saily/events{/privacy}", "received_events_url": "https://api.github.com/users/saily/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-08T09:25:06Z", "updated_at": "2017-03-17T09:34:30Z", "closed_at": "2017-03-08T10:53:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Commit https://github.com/SmileyChris/django-countries/commit/183dc9f918e7757b48772cda4e48c25d37746393 the name of Czech Republic was changed to Czechia which [is the official name for Czechia since Oct. 2013](http://www.independent.co.uk/news/world/europe/whats-in-a-name-czech-republic-mulls-shock-rebranding-as-czechia-8874839.html). \r\n\r\nThis should be mentioned in Changelog and added to a currently missing migration guide. People may run into unexpected issues when they were using `countries.by_name('Czech Republic')`, which will now returned an empty string `''`.\r\n\r\nWe should:\r\n\r\n- Think about supporting both names, since in a lot of systems we may work with the old name still present.\r\n- Think about raising an Exception if a countryname is not found/supported and/or not mentioned in `COUNTRIES_ONLY` settings variable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/169", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/169/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/169/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/169", "id": 211320179, "node_id": "MDU6SXNzdWUyMTEzMjAxNzk=", "number": 169, "title": "How to show country names in another language", "user": {"login": "Borkason", "id": 2971735, "node_id": "MDQ6VXNlcjI5NzE3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2971735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borkason", "html_url": "https://github.com/Borkason", "followers_url": "https://api.github.com/users/Borkason/followers", "following_url": "https://api.github.com/users/Borkason/following{/other_user}", "gists_url": "https://api.github.com/users/Borkason/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borkason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borkason/subscriptions", "organizations_url": "https://api.github.com/users/Borkason/orgs", "repos_url": "https://api.github.com/users/Borkason/repos", "events_url": "https://api.github.com/users/Borkason/events{/privacy}", "received_events_url": "https://api.github.com/users/Borkason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-02T08:22:27Z", "updated_at": "2017-03-20T10:01:38Z", "closed_at": "2017-03-09T21:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am building a web site in non-english. I don't plan to translate anything into another language, so I didn't implement i18n or l10n. The countries are shown in english. What is the easiest and fastest way to show the countries on my form in my language?\r\n\r\n```django\r\n<select id=\"{{ form.land.id_for_label }}\" class=\"form-control\" aria-describedby=\"{{ form.land.id_for_label }}Help\">\r\n  {% for key,val in form.land.field.choices %}\r\n    <option value=\"{{ key }}\">{{ val }}</option> <!-- `val` must be shown in my language, not in English -->\r\n  {% endfor %}\r\n</select>\r\n{% if form.land.help_text %}<small id=\"{{ form.land.id_for_label }}Help\" class=\"form-text text-muted\">{{ form.land.help_text }}</small>{% endif %}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/166", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/166/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/166/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/166", "id": 205657818, "node_id": "MDU6SXNzdWUyMDU2NTc4MTg=", "number": 166, "title": "Adding cities to top of list", "user": {"login": "sam-thecoder", "id": 15666437, "node_id": "MDQ6VXNlcjE1NjY2NDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/15666437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-thecoder", "html_url": "https://github.com/sam-thecoder", "followers_url": "https://api.github.com/users/sam-thecoder/followers", "following_url": "https://api.github.com/users/sam-thecoder/following{/other_user}", "gists_url": "https://api.github.com/users/sam-thecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-thecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-thecoder/subscriptions", "organizations_url": "https://api.github.com/users/sam-thecoder/orgs", "repos_url": "https://api.github.com/users/sam-thecoder/repos", "events_url": "https://api.github.com/users/sam-thecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-thecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-06T17:42:11Z", "updated_at": "2017-02-21T22:09:07Z", "closed_at": "2017-02-21T22:09:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nis it possible to add a list of cities and list them before the countries alphabetically.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/165", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/165/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/165/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/165", "id": 205556885, "node_id": "MDU6SXNzdWUyMDU1NTY4ODU=", "number": 165, "title": "Adding latitude and longitude to countries", "user": {"login": "mvantellingen", "id": 245297, "node_id": "MDQ6VXNlcjI0NTI5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/245297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvantellingen", "html_url": "https://github.com/mvantellingen", "followers_url": "https://api.github.com/users/mvantellingen/followers", "following_url": "https://api.github.com/users/mvantellingen/following{/other_user}", "gists_url": "https://api.github.com/users/mvantellingen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvantellingen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvantellingen/subscriptions", "organizations_url": "https://api.github.com/users/mvantellingen/orgs", "repos_url": "https://api.github.com/users/mvantellingen/repos", "events_url": "https://api.github.com/users/mvantellingen/events{/privacy}", "received_events_url": "https://api.github.com/users/mvantellingen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-06T11:34:38Z", "updated_at": "2017-02-21T22:28:29Z", "closed_at": "2017-02-21T22:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, thanks for this library! \r\n\r\nI was wondering if you are interested in a PR which implements latitude/longitude attributes on the countries based on the data from https://developers.google.com/public-data/docs/canonical/countries_csv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/164", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/164/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/164/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/164", "id": 203067365, "node_id": "MDU6SXNzdWUyMDMwNjczNjU=", "number": 164, "title": "Crashes with Django 1.11", "user": {"login": "askoretskiy", "id": 48295, "node_id": "MDQ6VXNlcjQ4Mjk1", "avatar_url": "https://avatars2.githubusercontent.com/u/48295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/askoretskiy", "html_url": "https://github.com/askoretskiy", "followers_url": "https://api.github.com/users/askoretskiy/followers", "following_url": "https://api.github.com/users/askoretskiy/following{/other_user}", "gists_url": "https://api.github.com/users/askoretskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/askoretskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/askoretskiy/subscriptions", "organizations_url": "https://api.github.com/users/askoretskiy/orgs", "repos_url": "https://api.github.com/users/askoretskiy/repos", "events_url": "https://api.github.com/users/askoretskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/askoretskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-25T10:40:36Z", "updated_at": "2017-02-22T09:54:47Z", "closed_at": "2017-02-21T22:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django 1.11 they removed BaseSettings class. That makes django-countries crash:\r\n\r\n    File \"/usr/local/lib/python3.6/site-packages/django_countries/__init__.py\", line 5, in <module>\r\n        from django_countries.conf import settings\r\n      File \"/usr/local/lib/python3.6/site-packages/django_countries/conf.py\", line 4, in <module>\r\n        class AppSettings(django.conf.BaseSettings):\r\n    AttributeError: module 'django.conf' has no attribute 'BaseSettings'\r\n\r\nBad thing is that it is crashing even when trying to use countries list.\r\n\r\nIn Django 1.11 they have Settings and UserSettingsHolder but I cannot tell you how to fix it. See https://github.com/django/django/blob/1.11a1/django/conf/__init__.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/160", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/160/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/160/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/160", "id": 195815230, "node_id": "MDU6SXNzdWUxOTU4MTUyMzA=", "number": 160, "title": "KeyError on making migrations", "user": {"login": "eriktelepovsky", "id": 2685808, "node_id": "MDQ6VXNlcjI2ODU4MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2685808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriktelepovsky", "html_url": "https://github.com/eriktelepovsky", "followers_url": "https://api.github.com/users/eriktelepovsky/followers", "following_url": "https://api.github.com/users/eriktelepovsky/following{/other_user}", "gists_url": "https://api.github.com/users/eriktelepovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriktelepovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriktelepovsky/subscriptions", "organizations_url": "https://api.github.com/users/eriktelepovsky/orgs", "repos_url": "https://api.github.com/users/eriktelepovsky/repos", "events_url": "https://api.github.com/users/eriktelepovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/eriktelepovsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-15T14:12:23Z", "updated_at": "2017-01-03T18:38:29Z", "closed_at": "2017-01-03T18:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am running into this issue using:\r\n\r\nPython 3.5.2\r\ndjango-countries==4.0\r\nDjango==1.10.3\r\n\r\n```python\r\nclass User(AbstractUser):\r\n    ...\r\n    country = CountryField()\r\n```\r\n\r\n```\r\npython manage.py makemigrations\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/core/management/base.py\", line 294, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/core/management/base.py\", line 345, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/core/management/commands/makemigrations.py\", line 150, in handle\r\n    ProjectState.from_apps(apps),\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/db/migrations/state.py\", line 188, in from_apps\r\n    model_state = ModelState.from_model(model)\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/db/migrations/state.py\", line 374, in from_model\r\n    fields.append((name, field.clone()))\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django/db/models/fields/__init__.py\", line 457, in clone\r\n    name, path, args, kwargs = self.deconstruct()\r\n  File \"/Users/erik/env/giaroo/lib/python3.5/site-packages/django_countries/fields.py\", line 253, in deconstruct\r\n    kwargs.pop('choices')\r\nKeyError: 'choices'\r\n```\r\n\r\nAny help is appreciated. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/159", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/159/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/159/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/159", "id": 195309501, "node_id": "MDU6SXNzdWUxOTUzMDk1MDE=", "number": 159, "title": "raise error with py.test ProgrammingError", "user": {"login": "re4lfl0w", "id": 6144782, "node_id": "MDQ6VXNlcjYxNDQ3ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6144782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/re4lfl0w", "html_url": "https://github.com/re4lfl0w", "followers_url": "https://api.github.com/users/re4lfl0w/followers", "following_url": "https://api.github.com/users/re4lfl0w/following{/other_user}", "gists_url": "https://api.github.com/users/re4lfl0w/gists{/gist_id}", "starred_url": "https://api.github.com/users/re4lfl0w/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/re4lfl0w/subscriptions", "organizations_url": "https://api.github.com/users/re4lfl0w/orgs", "repos_url": "https://api.github.com/users/re4lfl0w/repos", "events_url": "https://api.github.com/users/re4lfl0w/events{/privacy}", "received_events_url": "https://api.github.com/users/re4lfl0w/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-13T17:00:18Z", "updated_at": "2017-02-21T22:26:16Z", "closed_at": "2017-02-21T22:26:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "> django.db.utils.ProgrammingError: column \"country\" of relation \"nicepro_customer\" does not exist\r\nE               LINE 1: ...l\", \"home_phone\", \"mobile_phone\", \"secure_phone\", \"country\",...\r\n\r\n```python\r\nfrom django_countries.fields import CountryField\r\n\r\n\r\nclass Customer(TimeStampedModel):\r\n    order_name = models.CharField(max_length=30, blank=False, null=False)\r\n    receiver_name = models.CharField(max_length=30, default='', blank=True, null=True)\r\n    jibun_addr = models.CharField(max_length=100, blank=True, null=True)\r\n    street_addr = models.CharField(max_length=100, blank=True, null=True, help_text='\ub3c4\ub85c\uba85 \uc8fc\uc18c, \ubc30\uc1a1\uc9c0 \ubcc0\uacbd \uae30\uc900')\r\n    zip_code = models.CharField(max_length=10, blank=False, null=False, help_text='\ub3c4\ub85c\uba85 \uc8fc\uc18c \uc6b0\ud3b8\ubc88\ud638, \ubc30\uc1a1\uc9c0 \ubcc0\uacbd \uae30\uc900')\r\n    new_zip_code = models.CharField(max_length=5, blank=True, null=True, help_text='Valid new zip code')\r\n    email = models.EmailField(blank=True, null=True)\r\n    # phone = models.CharField(max_length=11)\r\n    home_phone = models.CharField(max_length=15, blank=True, null=True)\r\n    mobile_phone = models.CharField(max_length=15, blank=True, null=True)\r\n    secure_phone = models.CharField(max_length=15, blank=True, null=True)\r\n    country = CountryField(default='KR')\r\n    reference = models.TextField(blank=True, null=True)\r\n    messengers = models.ManyToManyField(Messenger, through='CustomerMessenger')\r\n```\r\n\r\n\r\n```shell\r\n=============================================================================== test session starts ================================================================================\r\nplatform darwin -- Python 3.5.0, pytest-2.8.5, py-1.4.31, pluggy-0.3.1\r\ndjango settings: reservation.settings (from environment variable)\r\nrootdir: /Users/re4lfl0w/PycharmProjects/reservation_new/tests, inifile: pytest.ini\r\nplugins: capturelog-0.7, cov-2.2.0, django-2.9.1, factoryboy-1.3.0, html-1.7, mock-1.2, selenium-1.1, variables-1.3, xdist-1.13.1\r\ncollected 1 items\r\n\r\ntests/models/test_customer.py F\r\n\r\n===================================================================================== FAILURES =====================================================================================\r\n____________________________________________________________________________ TestCustomer.test_customer ____________________________________________________________________________\r\n\r\nself = <tests.models.test_customer.TestCustomer object at 0x106935128>, customer_factory = <class 'nicepro.factories.CustomerFactory'>\r\n\r\n    def test_customer(self, customer_factory):\r\n>       customer = customer_factory()\r\n\r\ntests/models/test_customer.py:17:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/factory/base.py:67: in __call__\r\n    return cls.create(**kwargs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/factory/base.py:594: in create\r\n    return cls._generate(True, attrs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/factory/base.py:519: in _generate\r\n    obj = cls._prepare(create, **attrs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/factory/base.py:494: in _prepare\r\n    return cls._create(model_class, *args, **kwargs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/factory/django.py:181: in _create\r\n    return manager.create(*args, **kwargs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/manager.py:127: in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/query.py:348: in create\r\n    obj.save(force_insert=True, using=self.db)\r\nnicepro/models.py:167: in save\r\n    super(Customer, self).save(*args, **kwargs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/base.py:734: in save\r\n    force_update=force_update, update_fields=update_fields)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/base.py:762: in save_base\r\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/base.py:846: in _save_table\r\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/base.py:885: in _do_insert\r\n    using=using, raw=raw)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/manager.py:127: in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/query.py:920: in _insert\r\n    return query.get_compiler(using=using).execute_sql(return_id)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/models/sql/compiler.py:974: in execute_sql\r\n    cursor.execute(sql, params)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/backends/utils.py:64: in execute\r\n    return self.cursor.execute(sql, params)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/utils.py:97: in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/utils/six.py:658: in reraise\r\n    raise value.with_traceback(tb)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <django.db.backends.utils.CursorWrapper object at 0x106ebd630>\r\nsql = 'INSERT INTO \"nicepro_customer\" (\"created\", \"modified\", \"order_name\", \"receiver_name\", \"jibun_addr\", \"street_addr\", \"zi...ountry\", \"reference\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s) RETURNING \"nicepro_customer\".\"id\"'\r\nparams = (datetime.datetime(2016, 12, 13, 16, 56, 39, 766953, tzinfo=<UTC>), datetime.datetime(2016, 12, 13, 16, 56, 39, 768927... Grant', '7360 Kathleen Flat\\nMichaelbury, IL 69631-4649', '538 Stephens Place Apt. 564\\nGarciaborough, ID 35295', ...)\r\n\r\n    def execute(self, sql, params=None):\r\n        self.db.validate_no_broken_transaction()\r\n        with self.db.wrap_database_errors:\r\n            if params is None:\r\n                return self.cursor.execute(sql)\r\n            else:\r\n>               return self.cursor.execute(sql, params)\r\nE               django.db.utils.ProgrammingError: column \"country\" of relation \"nicepro_customer\" does not exist\r\nE               LINE 1: ...l\", \"home_phone\", \"mobile_phone\", \"secure_phone\", \"country\",...\r\nE                                                                            ^\r\n\r\n../../.virtualenvs/reservation/lib/python3.5/site-packages/django/db/backends/utils.py:64: ProgrammingError\r\n----------------------------------------------------------------------------------- Captured log -----------------------------------------------------------------------------------\r\nbase.py                    421 DEBUG    BaseFactory: Preparing nicepro.factories.CustomerFactory(extra={})\r\nbase.py                    380 DEBUG    <class 'nicepro.factories.CustomerFactory'>: Setting up next sequence (0)\r\ncontainers.py               77 DEBUG    LazyStub: Computing values for nicepro.factories.CustomerFactory(street_addr=<DeclarationWrapper for <factory.declarations.LazyAttribute object at 0x106873550>>, jibun_addr=<DeclarationWrapper for <factory.declarations.LazyAttribute object at 0x106873518>>, zip_code=<DeclarationWrapper for <factory.declarations.LazyAttribute object at 0x106873588>>, receiver_name=<DeclarationWrapper for <factory.declarations.LazyAttribute object at 0x1068736d8>>, mobile_phone='010-1234-5678', order_name=<DeclarationWrapper for <factory.declarations.LazyAttribute object at 0x1068736a0>>, email=<DeclarationWrapper for <factory.declarations.LazyAttribute object at 0x1068735c0>>, secure_phone='0502-382-4839', home_phone='02-1234-5678')\r\ndeclarations.py             90 DEBUG    LazyAttribute: Evaluating <function CustomerFactory.<lambda> at 0x1068697b8> on <LazyStub for nicepro.factories.CustomerFactory>\r\ndeclarations.py             90 DEBUG    LazyAttribute: Evaluating <function CustomerFactory.<lambda> at 0x106869730> on <LazyStub for nicepro.factories.CustomerFactory>\r\ndeclarations.py             90 DEBUG    LazyAttribute: Evaluating <function CustomerFactory.<lambda> at 0x106869840> on <LazyStub for nicepro.factories.CustomerFactory>\r\ndeclarations.py             90 DEBUG    LazyAttribute: Evaluating <function CustomerFactory.<lambda> at 0x1068696a8> on <LazyStub for nicepro.factories.CustomerFactory>\r\ndeclarations.py             90 DEBUG    LazyAttribute: Evaluating <function CustomerFactory.<lambda> at 0x106869620> on <LazyStub for nicepro.factories.CustomerFactory>\r\ndeclarations.py             90 DEBUG    LazyAttribute: Evaluating <function CustomerFactory.<lambda> at 0x1068698c8> on <LazyStub for nicepro.factories.CustomerFactory>\r\ncontainers.py               82 DEBUG    LazyStub: Computed values, got nicepro.factories.CustomerFactory(street_addr='538 Stephens Place Apt. 564\\nGarciaborough, ID 35295', zip_code='61397', receiver_name='Teresa Grant', mobile_phone='010-1234-5678', order_name='Stephanie Hurley', home_phone='02-1234-5678', email=<bound method Provider.email of <faker.providers.internet.en_US.Provider object at 0x10686b630>>, secure_phone='0502-382-4839', jibun_addr='7360 Kathleen Flat\\nMichaelbury, IL 69631-4649')\r\nbase.py                    491 DEBUG    BaseFactory: Generating nicepro.factories.CustomerFactory(street_addr='538 Stephens Place Apt. 564\\nGarciaborough, ID 35295', zip_code='61397', receiver_name='Teresa Grant', mobile_phone='010-1234-5678', order_name='Stephanie Hurley', jibun_addr='7360 Kathleen Flat\\nMichaelbury, IL 69631-4649', email=<bound method Provider.email of <faker.providers.internet.en_US.Provider object at 0x10686b630>>, secure_phone='0502-382-4839', home_phone='02-1234-5678')\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/158", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/158/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/158/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/158", "id": 194631069, "node_id": "MDU6SXNzdWUxOTQ2MzEwNjk=", "number": 158, "title": "Translating countries in Django model", "user": {"login": "dheavy", "id": 543614, "node_id": "MDQ6VXNlcjU0MzYxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/543614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dheavy", "html_url": "https://github.com/dheavy", "followers_url": "https://api.github.com/users/dheavy/followers", "following_url": "https://api.github.com/users/dheavy/following{/other_user}", "gists_url": "https://api.github.com/users/dheavy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dheavy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dheavy/subscriptions", "organizations_url": "https://api.github.com/users/dheavy/orgs", "repos_url": "https://api.github.com/users/dheavy/repos", "events_url": "https://api.github.com/users/dheavy/events{/privacy}", "received_events_url": "https://api.github.com/users/dheavy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-09T15:59:50Z", "updated_at": "2017-01-12T14:28:20Z", "closed_at": "2017-01-12T14:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, thanks for the great work on this lib. It's a fantastic time-saver, and a really well-done one.\r\n\r\nMy issue is a bit of a noob's one. \r\nI have a model that must be of a certain type (i.e. it cannot be a LazyTypedChoiceField).\r\nIt will be rendered as a form element in my application.\r\nI'm unpacking django_countries.fields to seed its choices (snippet below).\r\n\r\n```python\r\nfrom django.utils.translation import ugettext_lazy as _\r\n\r\ncountry_select = models.CharField(\r\n    verbose_name=_(u'In which country were you born?'),\r\n    widget=widgets.Select(),\r\n    choices=tuple((code, _(name)) for code, name in list(countries))  # notice the call to `_()` on name\r\n)\r\n```\r\n\r\nIt works fine, except for the localization. Calling ugettext_lazy within the comprehension doesn't work. The list of countries in my widget seemingly never get localized and remain in English.\r\n\r\nI'm not sure how to proceed... I hate to be *that* guy (y'know, that one guy who fills an issue on Github when it might have nothing to do with you lib, and more with my ignorance of Python), but hey... I figured you could point me to the right direction. \ud83d\ude05 \r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/157", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/157/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/157/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/157", "id": 193344758, "node_id": "MDU6SXNzdWUxOTMzNDQ3NTg=", "number": 157, "title": "Country choices not enforced on save()", "user": {"login": "wetneb", "id": 309908, "node_id": "MDQ6VXNlcjMwOTkwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/309908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wetneb", "html_url": "https://github.com/wetneb", "followers_url": "https://api.github.com/users/wetneb/followers", "following_url": "https://api.github.com/users/wetneb/following{/other_user}", "gists_url": "https://api.github.com/users/wetneb/gists{/gist_id}", "starred_url": "https://api.github.com/users/wetneb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wetneb/subscriptions", "organizations_url": "https://api.github.com/users/wetneb/orgs", "repos_url": "https://api.github.com/users/wetneb/repos", "events_url": "https://api.github.com/users/wetneb/events{/privacy}", "received_events_url": "https://api.github.com/users/wetneb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-04T11:01:34Z", "updated_at": "2017-02-21T22:32:19Z", "closed_at": "2017-02-21T22:32:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is possible to save a Country field with an incorrect code in it. I would have expected the country to be checked against the list of countries provided.\r\n\r\n```\r\nclass institution(Model):\r\n    country = CountryField()\r\n\r\ni = Institution()\r\ni.country = 'XX'\r\ni.save() # Should raise an exception\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/156", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/156/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/156/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/156", "id": 190568506, "node_id": "MDU6SXNzdWUxOTA1Njg1MDY=", "number": 156, "title": "Multiple countries doesn't work in forms or admin", "user": {"login": "knyghty", "id": 3871354, "node_id": "MDQ6VXNlcjM4NzEzNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3871354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knyghty", "html_url": "https://github.com/knyghty", "followers_url": "https://api.github.com/users/knyghty/followers", "following_url": "https://api.github.com/users/knyghty/following{/other_user}", "gists_url": "https://api.github.com/users/knyghty/gists{/gist_id}", "starred_url": "https://api.github.com/users/knyghty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knyghty/subscriptions", "organizations_url": "https://api.github.com/users/knyghty/orgs", "repos_url": "https://api.github.com/users/knyghty/repos", "events_url": "https://api.github.com/users/knyghty/events{/privacy}", "received_events_url": "https://api.github.com/users/knyghty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-20T16:42:41Z", "updated_at": "2017-02-21T22:03:09Z", "closed_at": "2017-02-21T22:03:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nclass Foo(models.Model):\r\n    countries = CountryField(multiple=True)\r\n```\r\n\r\nDoesn't work in admin or any forms I tried, gives an error such as:\r\n\r\n`Select a valid choice. ['AF', 'DZ'] is not one of the available choices.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/155", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/155/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/155/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/155", "id": 189015109, "node_id": "MDU6SXNzdWUxODkwMTUxMDk=", "number": 155, "title": "Collectstatic using s3 syncs all flags _everytime_", "user": {"login": "jjdelc", "id": 59393, "node_id": "MDQ6VXNlcjU5Mzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/59393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjdelc", "html_url": "https://github.com/jjdelc", "followers_url": "https://api.github.com/users/jjdelc/followers", "following_url": "https://api.github.com/users/jjdelc/following{/other_user}", "gists_url": "https://api.github.com/users/jjdelc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjdelc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjdelc/subscriptions", "organizations_url": "https://api.github.com/users/jjdelc/orgs", "repos_url": "https://api.github.com/users/jjdelc/repos", "events_url": "https://api.github.com/users/jjdelc/events{/privacy}", "received_events_url": "https://api.github.com/users/jjdelc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-14T02:20:36Z", "updated_at": "2017-02-21T21:14:40Z", "closed_at": "2017-02-21T21:14:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use s3 as my staticfiles storage and whenever I run `manage.py collecstatic` it will sync all the flag files every time when there has been no change to any of them making small deploys much slower.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/154", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/154/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/154/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/154", "id": 188473013, "node_id": "MDU6SXNzdWUxODg0NzMwMTM=", "number": 154, "title": "multiple=True raises a TypeError: __init__() got an unexpected keyword argument 'multiple'", "user": {"login": "helio-correia", "id": 6276228, "node_id": "MDQ6VXNlcjYyNzYyMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6276228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helio-correia", "html_url": "https://github.com/helio-correia", "followers_url": "https://api.github.com/users/helio-correia/followers", "following_url": "https://api.github.com/users/helio-correia/following{/other_user}", "gists_url": "https://api.github.com/users/helio-correia/gists{/gist_id}", "starred_url": "https://api.github.com/users/helio-correia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helio-correia/subscriptions", "organizations_url": "https://api.github.com/users/helio-correia/orgs", "repos_url": "https://api.github.com/users/helio-correia/repos", "events_url": "https://api.github.com/users/helio-correia/events{/privacy}", "received_events_url": "https://api.github.com/users/helio-correia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-10T10:35:10Z", "updated_at": "2016-11-11T10:52:22Z", "closed_at": "2016-11-10T22:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i'm trying this package and when I try to use the multiple=True it raises the following error on migration: \r\n`TypeError: __init__() got an unexpected keyword argument 'multiple'`\r\n\r\nWithout the multiple it works as expected.\r\n\r\nI'm using python3, django 1.9.10 and django-countries 4.0\r\n\r\nMy code\r\n```\r\nfrom django_countries.fields import CountryField\r\n\r\nclass Player(models.Model):\r\n    name = models.CharField(_(\"name\"), max_length=200)\r\n    countries = CountryField(multiple=True)\r\n```\r\n\r\n\r\nI'm I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/150", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/150/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/150/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/150", "id": 184065604, "node_id": "MDU6SXNzdWUxODQwNjU2MDQ=", "number": 150, "title": "CountryField validation in Model and Serializer", "user": {"login": "muhammad-ammar", "id": 6767924, "node_id": "MDQ6VXNlcjY3Njc5MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6767924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muhammad-ammar", "html_url": "https://github.com/muhammad-ammar", "followers_url": "https://api.github.com/users/muhammad-ammar/followers", "following_url": "https://api.github.com/users/muhammad-ammar/following{/other_user}", "gists_url": "https://api.github.com/users/muhammad-ammar/gists{/gist_id}", "starred_url": "https://api.github.com/users/muhammad-ammar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muhammad-ammar/subscriptions", "organizations_url": "https://api.github.com/users/muhammad-ammar/orgs", "repos_url": "https://api.github.com/users/muhammad-ammar/repos", "events_url": "https://api.github.com/users/muhammad-ammar/events{/privacy}", "received_events_url": "https://api.github.com/users/muhammad-ammar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-19T20:28:46Z", "updated_at": "2017-03-22T19:31:04Z", "closed_at": "2017-02-21T22:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is correct way to perform validation on CountryField in Model and DRF Serializer? `validate_country` doesn't work because empty string is received in the method in case of invalid country value. \n\n``` Python\nclass ProfileSerializer(serializers.ModelSerializer):\n    country = CountryField()\n\n    class Meta:\n        model = UserProfile\n        fields = ('language', 'country', 'timezone', 'latitude', 'longitude')\n\n    def validate_country(self, country):\n        ...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/148", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/148/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/148/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/148", "id": 180513695, "node_id": "MDU6SXNzdWUxODA1MTM2OTU=", "number": 148, "title": "`Country` descriptor does not work with `defer()` and `only()`", "user": {"login": "spookylukey", "id": 62745, "node_id": "MDQ6VXNlcjYyNzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/62745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spookylukey", "html_url": "https://github.com/spookylukey", "followers_url": "https://api.github.com/users/spookylukey/followers", "following_url": "https://api.github.com/users/spookylukey/following{/other_user}", "gists_url": "https://api.github.com/users/spookylukey/gists{/gist_id}", "starred_url": "https://api.github.com/users/spookylukey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spookylukey/subscriptions", "organizations_url": "https://api.github.com/users/spookylukey/orgs", "repos_url": "https://api.github.com/users/spookylukey/repos", "events_url": "https://api.github.com/users/spookylukey/events{/privacy}", "received_events_url": "https://api.github.com/users/spookylukey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-02T14:02:31Z", "updated_at": "2016-11-02T02:00:28Z", "closed_at": "2016-11-02T02:00:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See PR #147 \n\nI don't know if there is an easy fix or not!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/144", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/144/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/144/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/144", "id": 178053884, "node_id": "MDU6SXNzdWUxNzgwNTM4ODQ=", "number": 144, "title": "ManytoMany to countries", "user": {"login": "Eraldo", "id": 73378, "node_id": "MDQ6VXNlcjczMzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/73378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eraldo", "html_url": "https://github.com/Eraldo", "followers_url": "https://api.github.com/users/Eraldo/followers", "following_url": "https://api.github.com/users/Eraldo/following{/other_user}", "gists_url": "https://api.github.com/users/Eraldo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eraldo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eraldo/subscriptions", "organizations_url": "https://api.github.com/users/Eraldo/orgs", "repos_url": "https://api.github.com/users/Eraldo/repos", "events_url": "https://api.github.com/users/Eraldo/events{/privacy}", "received_events_url": "https://api.github.com/users/Eraldo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-20T13:05:04Z", "updated_at": "2016-11-02T03:59:07Z", "closed_at": "2016-11-02T03:59:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Chris..\n\nI have a \"Region\" model that I want to associate more than one country with.\n\nI did find a fork of your project dealing with the same issue:\nhttps://github.com/dokterbob/django-countries\n\nHowever I was wondering if there is another option without having to resort back to another fork (that is not on pip either).\n\nAny suggestions from your side @SmileyChris?\n\nBest,\nEraldo\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/143", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/143/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/143/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/143", "id": 174409936, "node_id": "MDU6SXNzdWUxNzQ0MDk5MzY=", "number": 143, "title": "Latvian translation of django-countries", "user": {"login": "paskausks", "id": 5221695, "node_id": "MDQ6VXNlcjUyMjE2OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5221695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paskausks", "html_url": "https://github.com/paskausks", "followers_url": "https://api.github.com/users/paskausks/followers", "following_url": "https://api.github.com/users/paskausks/following{/other_user}", "gists_url": "https://api.github.com/users/paskausks/gists{/gist_id}", "starred_url": "https://api.github.com/users/paskausks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paskausks/subscriptions", "organizations_url": "https://api.github.com/users/paskausks/orgs", "repos_url": "https://api.github.com/users/paskausks/repos", "events_url": "https://api.github.com/users/paskausks/events{/privacy}", "received_events_url": "https://api.github.com/users/paskausks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-01T00:26:26Z", "updated_at": "2016-11-02T01:29:34Z", "closed_at": "2016-11-02T01:29:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey!\n\nI added a full latvian translation of django-countries over at [transifex](https://www.transifex.com/smileychris/django-countries/language/lv/) as promised some time ago.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/139", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/139/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/139/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/139", "id": 150009779, "node_id": "MDU6SXNzdWUxNTAwMDk3Nzk=", "number": 139, "title": "Missing some \"countries\"", "user": {"login": "batiste", "id": 66927, "node_id": "MDQ6VXNlcjY2OTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/66927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batiste", "html_url": "https://github.com/batiste", "followers_url": "https://api.github.com/users/batiste/followers", "following_url": "https://api.github.com/users/batiste/following{/other_user}", "gists_url": "https://api.github.com/users/batiste/gists{/gist_id}", "starred_url": "https://api.github.com/users/batiste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batiste/subscriptions", "organizations_url": "https://api.github.com/users/batiste/orgs", "repos_url": "https://api.github.com/users/batiste/repos", "events_url": "https://api.github.com/users/batiste/events{/privacy}", "received_events_url": "https://api.github.com/users/batiste/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-21T08:49:24Z", "updated_at": "2016-04-21T10:40:38Z", "closed_at": "2016-04-21T10:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nToday I was mapping a list of countries with django_countries and I find out those seems to be missing in your database\n\nKosovo\nPalestinian territories\nNetherlands Antilles\nTibet\nVatican City State (Holy See)\n\nNot sure those have an official 2 letter code yet. But maybe it is worth checking.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/137", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/137/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/137/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/137", "id": 145509994, "node_id": "MDU6SXNzdWUxNDU1MDk5OTQ=", "number": 137, "title": "Adding UK to the list of countries gives a key error.", "user": {"login": "hossein761", "id": 1128298, "node_id": "MDQ6VXNlcjExMjgyOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1128298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hossein761", "html_url": "https://github.com/hossein761", "followers_url": "https://api.github.com/users/hossein761/followers", "following_url": "https://api.github.com/users/hossein761/following{/other_user}", "gists_url": "https://api.github.com/users/hossein761/gists{/gist_id}", "starred_url": "https://api.github.com/users/hossein761/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hossein761/subscriptions", "organizations_url": "https://api.github.com/users/hossein761/orgs", "repos_url": "https://api.github.com/users/hossein761/repos", "events_url": "https://api.github.com/users/hossein761/events{/privacy}", "received_events_url": "https://api.github.com/users/hossein761/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-03T15:16:45Z", "updated_at": "2016-06-10T09:40:38Z", "closed_at": "2016-06-10T00:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "only GB works it seems.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/135", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/135/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/135/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/135", "id": 134436065, "node_id": "MDU6SXNzdWUxMzQ0MzYwNjU=", "number": 135, "title": "Choices are not translated dynamically when using LocaleMiddleware", "user": {"login": "EugeneDae", "id": 980835, "node_id": "MDQ6VXNlcjk4MDgzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/980835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EugeneDae", "html_url": "https://github.com/EugeneDae", "followers_url": "https://api.github.com/users/EugeneDae/followers", "following_url": "https://api.github.com/users/EugeneDae/following{/other_user}", "gists_url": "https://api.github.com/users/EugeneDae/gists{/gist_id}", "starred_url": "https://api.github.com/users/EugeneDae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EugeneDae/subscriptions", "organizations_url": "https://api.github.com/users/EugeneDae/orgs", "repos_url": "https://api.github.com/users/EugeneDae/repos", "events_url": "https://api.github.com/users/EugeneDae/events{/privacy}", "received_events_url": "https://api.github.com/users/EugeneDae/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-17T23:47:25Z", "updated_at": "2016-08-16T04:02:43Z", "closed_at": "2016-08-16T04:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've encountered a weird bug with dynamic translations of country names when using `CountryField` in model and `forms.ModelForm`.\n\n**How to reproduce the issue within 60 seconds:**\n1. [Download the sample project](http://dae.me/storage/other/django-countries-problem.zip).\n2. `pip install django==1.9.2 django-countries`\n3. Run the dev server: `python manage.py runserver`\n4. Open http://127.0.0.1:8000/fr/ \u2014 the request will be passed through `LocaleMiddleware`, which will do, among other things, `translation.activate('fr')`\n5. You will see Countries dropdown with French names:\n   ![fr](https://cloud.githubusercontent.com/assets/980835/13128582/d28d6e78-d5e7-11e5-986d-473701d948ee.png)\n6. Now, without restarting the server, open the \"English\" version, http://127.0.0.1:8000/en/ \n7. Everything will be in English, but not the countries dropdown, which will remain in French!\n\n**Interestingly,** if you initialize the field within the form itself, for example:\n\n```\nfrom django_countries.fields import LazyTypedChoiceField\nfrom django_countries import countries\n\nclass MyModelForm(forms.ModelForm):\n    countries = LazyTypedChoiceField(choices=countries)\n\n    class Meta:\n        model = MyModel\n```\n\n\u2014 this will work as expected, and the widget will be picking up different translations just fine.\n\n**To put it in a nutshell: the widget remembers the language it was first rendered in, and keeps it forever until you restart the dev server. This only happens with ModelForms.** \n\nAlso:\n1. In the real project I don't actually use `LocaleMiddleware`. I use my own middleware, which simply does `translation.activate(...some_language...)` under certain conditions. So I think `LocaleMiddleware` is not to blame here.\n2. I can't reproduce the problem in Django Admin! This could be a clue. You can try it in the sample project: http://127.0.0.1:8000/fr/admin/ and http://127.0.0.1:8000/fr/admin/ (login `test`, password `123hello`)\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/132", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/132/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/132/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/132", "id": 133034660, "node_id": "MDU6SXNzdWUxMzMwMzQ2NjA=", "number": 132, "title": "Django 1.9 support", "user": {"login": "vladir", "id": 5070775, "node_id": "MDQ6VXNlcjUwNzA3NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5070775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladir", "html_url": "https://github.com/vladir", "followers_url": "https://api.github.com/users/vladir/followers", "following_url": "https://api.github.com/users/vladir/following{/other_user}", "gists_url": "https://api.github.com/users/vladir/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladir/subscriptions", "organizations_url": "https://api.github.com/users/vladir/orgs", "repos_url": "https://api.github.com/users/vladir/repos", "events_url": "https://api.github.com/users/vladir/events{/privacy}", "received_events_url": "https://api.github.com/users/vladir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-11T17:24:36Z", "updated_at": "2016-02-15T02:57:16Z", "closed_at": "2016-02-15T02:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm thinking into upgrade a project that uses django-countries very soon to Django 1.9. Is this already supported? Thanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/131", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/131/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/131/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/131", "id": 132466265, "node_id": "MDU6SXNzdWUxMzI0NjYyNjU=", "number": 131, "title": "Adding country field in admin list_display causes performance issues", "user": {"login": "sephii", "id": 754333, "node_id": "MDQ6VXNlcjc1NDMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/754333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sephii", "html_url": "https://github.com/sephii", "followers_url": "https://api.github.com/users/sephii/followers", "following_url": "https://api.github.com/users/sephii/following{/other_user}", "gists_url": "https://api.github.com/users/sephii/gists{/gist_id}", "starred_url": "https://api.github.com/users/sephii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sephii/subscriptions", "organizations_url": "https://api.github.com/users/sephii/orgs", "repos_url": "https://api.github.com/users/sephii/repos", "events_url": "https://api.github.com/users/sephii/events{/privacy}", "received_events_url": "https://api.github.com/users/sephii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-09T16:33:32Z", "updated_at": "2016-08-16T04:05:04Z", "closed_at": "2016-08-16T04:05:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure it's really a bug but I think it should at least be documented somewhere. If you add a country field in `ModelAdmin.list_display`, you'll end up with a performance degradation of about 500ms. That's because of [the way Django displays the fields](https://github.com/django/django/blob/1.9.2/django/contrib/admin/utils.py#L387), which rebuilds a `dict` out of all the country choices for every object, which is quite time consuming.\n\nAn easy way to solve this manually is by defining a custom model method which takes care of doing the lookup in Django countries.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/130", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/130/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/130/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/130", "id": 130718543, "node_id": "MDU6SXNzdWUxMzA3MTg1NDM=", "number": 130, "title": "get the full name issue", "user": {"login": "karimone", "id": 564180, "node_id": "MDQ6VXNlcjU2NDE4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/564180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimone", "html_url": "https://github.com/karimone", "followers_url": "https://api.github.com/users/karimone/followers", "following_url": "https://api.github.com/users/karimone/following{/other_user}", "gists_url": "https://api.github.com/users/karimone/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimone/subscriptions", "organizations_url": "https://api.github.com/users/karimone/orgs", "repos_url": "https://api.github.com/users/karimone/repos", "events_url": "https://api.github.com/users/karimone/events{/privacy}", "received_events_url": "https://api.github.com/users/karimone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-02T15:34:50Z", "updated_at": "2016-02-03T08:44:47Z", "closed_at": "2016-02-03T08:44:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Check the following code. Is it a bug? (version 3.4.1)\n\n```\nIn [18]: ll.country\nOut[18]: Country(code=u'AU')\n\nIn [19]: ll.country.name\nOut[19]: <django.utils.functional.__proxy__ at 0xb60be82c>\n\nIn [20]: ll.country.code\nOut[20]: u'AU'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/129", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/129/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/129/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/129", "id": 128135058, "node_id": "MDU6SXNzdWUxMjgxMzUwNTg=", "number": 129, "title": "How to use default set of countries after COUNTRIES_OVERRIDE ?", "user": {"login": "a1Gupta", "id": 5560733, "node_id": "MDQ6VXNlcjU1NjA3MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5560733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1Gupta", "html_url": "https://github.com/a1Gupta", "followers_url": "https://api.github.com/users/a1Gupta/followers", "following_url": "https://api.github.com/users/a1Gupta/following{/other_user}", "gists_url": "https://api.github.com/users/a1Gupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1Gupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1Gupta/subscriptions", "organizations_url": "https://api.github.com/users/a1Gupta/orgs", "repos_url": "https://api.github.com/users/a1Gupta/repos", "events_url": "https://api.github.com/users/a1Gupta/events{/privacy}", "received_events_url": "https://api.github.com/users/a1Gupta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-22T11:18:51Z", "updated_at": "2016-01-22T23:15:43Z", "closed_at": "2016-01-22T23:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to create two types of CountryField one for user's country for which i am using default countries list and other CountryField in which I want to add some more choices. But how to use both types of fields together. One field for standaed countries and other for countries with COUNTRIES_OVERRIDE option.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/SmileyChris/django-countries/issues/128", "repository_url": "https://api.github.com/repos/SmileyChris/django-countries", "labels_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/128/comments", "events_url": "https://api.github.com/repos/SmileyChris/django-countries/issues/128/events", "html_url": "https://github.com/SmileyChris/django-countries/issues/128", "id": 127986335, "node_id": "MDU6SXNzdWUxMjc5ODYzMzU=", "number": 128, "title": "Sprite to reduce the amount of downloaded files", "user": {"login": "NotSqrt", "id": 1997005, "node_id": "MDQ6VXNlcjE5OTcwMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1997005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotSqrt", "html_url": "https://github.com/NotSqrt", "followers_url": "https://api.github.com/users/NotSqrt/followers", "following_url": "https://api.github.com/users/NotSqrt/following{/other_user}", "gists_url": "https://api.github.com/users/NotSqrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotSqrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotSqrt/subscriptions", "organizations_url": "https://api.github.com/users/NotSqrt/orgs", "repos_url": "https://api.github.com/users/NotSqrt/repos", "events_url": "https://api.github.com/users/NotSqrt/events{/privacy}", "received_events_url": "https://api.github.com/users/NotSqrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-21T18:13:05Z", "updated_at": "2017-03-10T01:45:31Z", "closed_at": "2017-03-10T01:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nUsing [Glue](http://glue.readthedocs.org/en/latest/index.html), I was able to build the following sprite with the corresponding css.\n\n(as simple as `glue django_countries/static/flags/ destination_folder`)\n\n![flags](https://cloud.githubusercontent.com/assets/1997005/12489847/b8d88a56-c072-11e5-8066-87bc45d1d680.png)\n\nIs there a way to build this into a usable template tag, for instance, with another tag that loads the appropriate css file ?\n", "performed_via_github_app": null, "score": 1.0}]}