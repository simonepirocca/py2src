{"total_count": 187, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/382", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/382/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/382/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/382", "id": 663881071, "node_id": "MDU6SXNzdWU2NjM4ODEwNzE=", "number": 382, "title": "Return values of SET and DELETE operations and their reliable usage.", "user": {"login": "adityakapre", "id": 2627618, "node_id": "MDQ6VXNlcjI2Mjc2MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2627618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityakapre", "html_url": "https://github.com/adityakapre", "followers_url": "https://api.github.com/users/adityakapre/followers", "following_url": "https://api.github.com/users/adityakapre/following{/other_user}", "gists_url": "https://api.github.com/users/adityakapre/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityakapre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityakapre/subscriptions", "organizations_url": "https://api.github.com/users/adityakapre/orgs", "repos_url": "https://api.github.com/users/adityakapre/repos", "events_url": "https://api.github.com/users/adityakapre/events{/privacy}", "received_events_url": "https://api.github.com/users/adityakapre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T16:11:02Z", "updated_at": "2020-07-22T16:24:50Z", "closed_at": "2020-07-22T16:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `StrictRedisCluster` from this library as redis client. I have observed few things which I could not find in the documentation [here](https://redis-py-cluster.readthedocs.io/en/master/commands.html). \r\n\r\n1. `set` operation returns boolean values. Can we rely on this for checking success/failure of the operation? i.e True for success and False failure of `set`? The redis core [documentation](https://redis.io/commands/set) has different return values though. \r\n\r\n2. `delete` returns `1` for success from what I have observed (Or is it something different like number of keys deleted?). Also I am not sure what it returns in case the command fails or does not delete anything. What would be the response then ? Again, can I use those return values reliably to derive success/failure output of the command.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/381", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/381/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/381/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/381", "id": 649337256, "node_id": "MDU6SXNzdWU2NDkzMzcyNTY=", "number": 381, "title": "Error using ssl option in RedisCluster. (got an unexpected keyword argument 'ssl')", "user": {"login": "umang92", "id": 4151799, "node_id": "MDQ6VXNlcjQxNTE3OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4151799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umang92", "html_url": "https://github.com/umang92", "followers_url": "https://api.github.com/users/umang92/followers", "following_url": "https://api.github.com/users/umang92/following{/other_user}", "gists_url": "https://api.github.com/users/umang92/gists{/gist_id}", "starred_url": "https://api.github.com/users/umang92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umang92/subscriptions", "organizations_url": "https://api.github.com/users/umang92/orgs", "repos_url": "https://api.github.com/users/umang92/repos", "events_url": "https://api.github.com/users/umang92/events{/privacy}", "received_events_url": "https://api.github.com/users/umang92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-01T21:36:37Z", "updated_at": "2020-07-02T17:54:12Z", "closed_at": "2020-07-01T21:50:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code to create RedisClient\r\n\r\n```\r\nRedisCluster(startup_nodes=startup_nodes,\r\n                                                                 password=\"password\",\r\n                                                                 skip_full_coverage_check=True,\r\n                                                                 ssl=False)\r\n\r\n```\r\n\r\nError while executing commands like RPUSH:\r\n__init__() got an unexpected keyword argument 'ssl'\r\n\r\nStacktrace:\r\n\r\n```\r\nreturn self._with_retry(lambda: self._client.rpush(self._topic, _bytes))\\n', '  File \"/app/python/sensei_sdk/_internal/streams/redis_stream.py\", line 20, in _with_retry\\n    return func()\\n', '  File \"/app/python/sensei_sdk/_internal/streams/redis_stream.py\", line 36, in <lambda>\\n    return self._with_retry(lambda: self._client.rpush(self._topic, _bytes))\\n', '  File \"/app/python/newrelic/hooks/datastore_redis.py\", line 65, in _nr_wrapper_Redis_method_\\n    return wrapped(*args, **kwargs)\\n', '  File \"/app/python/newrelic/hooks/datastore_redis.py\", line 65, in _nr_wrapper_Redis_method_\\n    return wrapped(*args, **kwargs)\\n', '  File \"/app/python/redis/client.py\", line 1609, in rpush\\n    return self.execute_command(\\'RPUSH\\', name, *values)\\n', '  File \"/app/python/rediscluster/utils.py\", line 101, in inner\\n    return func(*args, **kwargs)\\n', '  File \"/app/python/rediscluster/client.py\", line 395, in execute_command\\n    r = self.connection_pool.get_connection_by_node(node)\\n', '  File \"/app/python/rediscluster/connection.py\", line 325, in get_connection_by_node\\n    connection = self.make_connection(node)\\n', '  File \"/app/python/rediscluster/connection.py\", line 232, in make_connection\\n    connection = self.connection_class(host=node[\"host\"], port=node[\"port\"], **self.connection_kwargs)\\n', '  File \"/app/python/rediscluster/connection.py\", line 47, in __init__\\n    super(ClusterConnection, self).__init__(*args, **kwargs)\\n']\r\n```\r\n\r\nI am using redis-py-cluster==2.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/380", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/380/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/380/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/380", "id": 648923872, "node_id": "MDU6SXNzdWU2NDg5MjM4NzI=", "number": 380, "title": "How to use eval method, could you provide a example?", "user": {"login": "kenton18", "id": 31765235, "node_id": "MDQ6VXNlcjMxNzY1MjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/31765235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenton18", "html_url": "https://github.com/kenton18", "followers_url": "https://api.github.com/users/kenton18/followers", "following_url": "https://api.github.com/users/kenton18/following{/other_user}", "gists_url": "https://api.github.com/users/kenton18/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenton18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenton18/subscriptions", "organizations_url": "https://api.github.com/users/kenton18/orgs", "repos_url": "https://api.github.com/users/kenton18/repos", "events_url": "https://api.github.com/users/kenton18/events{/privacy}", "received_events_url": "https://api.github.com/users/kenton18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T11:57:18Z", "updated_at": "2020-07-01T12:15:13Z", "closed_at": "2020-07-01T12:15:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n\"if (redis.call('exists', KEYS[1]) == 0) then \" +\r\n                    \"redis.call('hincrby', KEYS[1], ARGV[2], 1); \" +\r\n                    \"redis.call('pexpire', KEYS[1], ARGV[1]); \" +\r\n                    \"return nil; \" +\r\n                    \"end; \" +\r\n                \"if (redis.call('hexists', KEYS[1], ARGV[2]) == 1) then \" +\r\n                    \"redis.call('hincrby', KEYS[1], ARGV[2], 1); \" +\r\n                    \"redis.call('pexpire', KEYS[1], ARGV[1]); \" +\r\n                    \"return nil; \" +\r\n                    \"end; \" +\r\n                \"return redis.call('pttl', KEYS[1]);\"\r\n```\r\nI am try to run this scrip with eval() method, but I am not sure what type  keys_and_args exactly is. Here I try to execute a Lua script. Could you provide a complete example?  Thank you so much!\r\nthe KEYS[1] should be a key name\r\nthe ARGV[2] is a value \r\nthe ARGV[1] is a expire time \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/379", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/379/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/379/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/379", "id": 647659660, "node_id": "MDU6SXNzdWU2NDc2NTk2NjA=", "number": 379, "title": "When will 2.1.0 be released to pypi?", "user": {"login": "ebcline", "id": 53907381, "node_id": "MDQ6VXNlcjUzOTA3Mzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/53907381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebcline", "html_url": "https://github.com/ebcline", "followers_url": "https://api.github.com/users/ebcline/followers", "following_url": "https://api.github.com/users/ebcline/following{/other_user}", "gists_url": "https://api.github.com/users/ebcline/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebcline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebcline/subscriptions", "organizations_url": "https://api.github.com/users/ebcline/orgs", "repos_url": "https://api.github.com/users/ebcline/repos", "events_url": "https://api.github.com/users/ebcline/events{/privacy}", "received_events_url": "https://api.github.com/users/ebcline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T20:51:17Z", "updated_at": "2020-07-01T18:29:54Z", "closed_at": "2020-07-01T18:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently vendorizing this version to benefit from bugfixes and eagerly awaiting using the real release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/375", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/375/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/375/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/375", "id": 635405703, "node_id": "MDU6SXNzdWU2MzU0MDU3MDM=", "number": 375, "title": "mget too slow", "user": {"login": "yangjiaronga", "id": 19570959, "node_id": "MDQ6VXNlcjE5NTcwOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19570959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjiaronga", "html_url": "https://github.com/yangjiaronga", "followers_url": "https://api.github.com/users/yangjiaronga/followers", "following_url": "https://api.github.com/users/yangjiaronga/following{/other_user}", "gists_url": "https://api.github.com/users/yangjiaronga/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjiaronga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjiaronga/subscriptions", "organizations_url": "https://api.github.com/users/yangjiaronga/orgs", "repos_url": "https://api.github.com/users/yangjiaronga/repos", "events_url": "https://api.github.com/users/yangjiaronga/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjiaronga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T12:54:35Z", "updated_at": "2020-06-10T05:14:44Z", "closed_at": "2020-06-10T05:14:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "MGET is used extensively in projects\r\n\r\n Cluster impl:\r\n      Itterate all keys and send GET for each key.\r\n      This will go alot slower than a normal mget call in StrictRedis.\r\n\r\nIs there any good way to optimize it?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/373", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/373/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/373/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/373", "id": 626402917, "node_id": "MDU6SXNzdWU2MjY0MDI5MTc=", "number": 373, "title": "Unable to connect to redis cluster (ssl enabled)", "user": {"login": "rbharad27", "id": 64071308, "node_id": "MDQ6VXNlcjY0MDcxMzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/64071308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbharad27", "html_url": "https://github.com/rbharad27", "followers_url": "https://api.github.com/users/rbharad27/followers", "following_url": "https://api.github.com/users/rbharad27/following{/other_user}", "gists_url": "https://api.github.com/users/rbharad27/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbharad27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbharad27/subscriptions", "organizations_url": "https://api.github.com/users/rbharad27/orgs", "repos_url": "https://api.github.com/users/rbharad27/repos", "events_url": "https://api.github.com/users/rbharad27/events{/privacy}", "received_events_url": "https://api.github.com/users/rbharad27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-05-28T10:35:30Z", "updated_at": "2020-06-10T19:00:52Z", "closed_at": "2020-06-10T19:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "from rediscluster import RedisCluster\r\n\r\n```\r\nstartup_nodes = [{\"host\": \"my_host_name\", \"port\": \"6379\"}]\r\nrds= RedisCluster(startup_nodes=startup_nodes, ssl=True, password='password', decode_responses=True, skip_full_coverage_check=True)\r\nrds.ping()\r\n```\r\n\r\n```\r\nError:\r\nException ignored in: <object repr() failed>\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/redis/connection.py\", line 537, in __del__\r\n    self.disconnect()\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/redis/connection.py\", line 660, in disconnect\r\n    self._parser.on_disconnect()\r\nAttributeError: 'SSLClusterConnection' object has no attribute '_parser'\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/connection.py\", line 318, in get_connection_by_node\r\n    connection = self._available_connections.get(node[\"name\"], []).pop()\r\nIndexError: pop from empty list\r\n```\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/redis/client.py\", line 1378, in ping\r\n    return self.execute_command('PING')\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/client.py\", line 531, in execute_command\r\n    return self._execute_command(*args, **kwargs)\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/client.py\", line 556, in _execute_command\r\n    return self._execute_command_on_nodes(node, *args, **kwargs)\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/client.py\", line 652, in _execute_command_on_nodes\r\n    connection = self.connection_pool.get_connection_by_node(node)\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/connection.py\", line 320, in get_connection_by_node\r\n    connection = self.make_connection(node)\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/connection.py\", line 227, in make_connection\r\n    connection = self.connection_class(host=node[\"host\"], port=node[\"port\"], **self.connection_kwargs)\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/rediscluster/connection.py\", line 74, in __init__\r\n    super(SSLClusterConnection, self).__init__(**kwargs)\r\n  File \"/home/user/.local/share/virtualenvs/fold-Su7CamTZ/lib/python3.6/dist-packages/redis/connection.py\", line 819, in __init__\r\n    super(SSLConnection, self).__init__(**kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'ssl'\r\n```\r\n\r\nAny idea about this issue? How can i connect to redis ssl cluster?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/371", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/371/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/371/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/371", "id": 620608801, "node_id": "MDU6SXNzdWU2MjA2MDg4MDE=", "number": 371, "title": "Writing to redis cluster is too slow(1million/1minute)", "user": {"login": "Eamon6221", "id": 37013513, "node_id": "MDQ6VXNlcjM3MDEzNTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/37013513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eamon6221", "html_url": "https://github.com/Eamon6221", "followers_url": "https://api.github.com/users/Eamon6221/followers", "following_url": "https://api.github.com/users/Eamon6221/following{/other_user}", "gists_url": "https://api.github.com/users/Eamon6221/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eamon6221/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eamon6221/subscriptions", "organizations_url": "https://api.github.com/users/Eamon6221/orgs", "repos_url": "https://api.github.com/users/Eamon6221/repos", "events_url": "https://api.github.com/users/Eamon6221/events{/privacy}", "received_events_url": "https://api.github.com/users/Eamon6221/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-19T01:35:21Z", "updated_at": "2020-05-19T13:55:29Z", "closed_at": "2020-05-19T09:59:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "it's too long that written 1 billion data to my redis cluster by using this redis-py-cluster(the speed is about 1million/1minute).I wonder if this is normal\uff1fThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/370", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/370/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/370/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/370", "id": 619548003, "node_id": "MDU6SXNzdWU2MTk1NDgwMDM=", "number": 370, "title": "ERROR sending 'cluster slots' command to redis server AttributeError: 'RedisCluster' object has no attribute 'connection'", "user": {"login": "victorzhucompass", "id": 51172443, "node_id": "MDQ6VXNlcjUxMTcyNDQz", "avatar_url": "https://avatars3.githubusercontent.com/u/51172443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/victorzhucompass", "html_url": "https://github.com/victorzhucompass", "followers_url": "https://api.github.com/users/victorzhucompass/followers", "following_url": "https://api.github.com/users/victorzhucompass/following{/other_user}", "gists_url": "https://api.github.com/users/victorzhucompass/gists{/gist_id}", "starred_url": "https://api.github.com/users/victorzhucompass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/victorzhucompass/subscriptions", "organizations_url": "https://api.github.com/users/victorzhucompass/orgs", "repos_url": "https://api.github.com/users/victorzhucompass/repos", "events_url": "https://api.github.com/users/victorzhucompass/events{/privacy}", "received_events_url": "https://api.github.com/users/victorzhucompass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-16T20:18:13Z", "updated_at": "2020-05-18T09:53:14Z", "closed_at": "2020-05-18T09:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "with ssh: ssh -L 6379:<redis-endpoint>:6379 username@bastions.company.com\r\nr = redis.Redis(password=redis_password, ssl_cert_reqs=None, ssl=True, decode_responses=True)\r\nconnect successfully\r\n\r\nswitch to cluster\r\n\r\nstartup_nodes = [{\"host\": '127.0.0.1', \"port\": 6379}]\r\nr = RedisCluster(startup_nodes=startup_nodes, decode_responses=True, password=redis_password, ssl=True)\r\n\r\nerror: ERROR sending 'cluster slots' command to redis server: {'host': '127.0.0.1', 'port': 6379}\r\nException ignored in: <function Redis.__del__ at 0x1224305f0>\r\nAttributeError: 'RedisCluster' object has no attribute 'connection'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/369", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/369/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/369/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/369", "id": 618917036, "node_id": "MDU6SXNzdWU2MTg5MTcwMzY=", "number": 369, "title": "Not working with In-Transit Encryption on Aws Elasticache", "user": {"login": "jl-DaDar", "id": 25497882, "node_id": "MDQ6VXNlcjI1NDk3ODgy", "avatar_url": "https://avatars3.githubusercontent.com/u/25497882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jl-DaDar", "html_url": "https://github.com/jl-DaDar", "followers_url": "https://api.github.com/users/jl-DaDar/followers", "following_url": "https://api.github.com/users/jl-DaDar/following{/other_user}", "gists_url": "https://api.github.com/users/jl-DaDar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jl-DaDar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jl-DaDar/subscriptions", "organizations_url": "https://api.github.com/users/jl-DaDar/orgs", "repos_url": "https://api.github.com/users/jl-DaDar/repos", "events_url": "https://api.github.com/users/jl-DaDar/events{/privacy}", "received_events_url": "https://api.github.com/users/jl-DaDar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T12:02:01Z", "updated_at": "2020-05-28T11:05:17Z", "closed_at": "2020-05-15T12:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Start a cluster with 1 partition and 1 node\r\ndefault.redis5.0.cluster.on\r\n\r\nthen \r\n\r\nfrom rediscluster import RedisCluster\r\nsnode = [{\"host\": \"stage-redis-cluster-0001-001.stage-redis-cluster.xxxxxxxx.ape1.cache.amazonaws.com\", \"port\":\"6379\"}]\r\nclient = RedisCluster(startup_nodes=snode, ssl=True, decode_responses=True, skip_full_coverage_check=True)\r\n\r\nand it gives me error\r\n\r\nrediscluster.exceptions.RedisClusterException: Redis Cluster cannot be connected. Please provide at least one reachable node.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/367", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/367/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/367/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/367", "id": 616456416, "node_id": "MDU6SXNzdWU2MTY0NTY0MTY=", "number": 367, "title": "How do I connect to an AWS ElastiCache for Redis node (cluster mode enabled) with in-transit encryption?", "user": {"login": "zibuyule", "id": 5792519, "node_id": "MDQ6VXNlcjU3OTI1MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5792519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zibuyule", "html_url": "https://github.com/zibuyule", "followers_url": "https://api.github.com/users/zibuyule/followers", "following_url": "https://api.github.com/users/zibuyule/following{/other_user}", "gists_url": "https://api.github.com/users/zibuyule/gists{/gist_id}", "starred_url": "https://api.github.com/users/zibuyule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zibuyule/subscriptions", "organizations_url": "https://api.github.com/users/zibuyule/orgs", "repos_url": "https://api.github.com/users/zibuyule/repos", "events_url": "https://api.github.com/users/zibuyule/events{/privacy}", "received_events_url": "https://api.github.com/users/zibuyule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-12T08:16:54Z", "updated_at": "2020-05-17T07:59:44Z", "closed_at": "2020-05-15T07:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI launched an ElastiCache for Redis node (cluster mode disabled) with in-transit encryption on AWS.\r\nHow do I access it with redis-py-cluster?\r\n\r\n**Post its configuration:**\r\n```\r\nConfiguration Endpoint:   clustercfg.qa-xxx-redis-in-transit.ezddv7.usw1.cache.amazonaws.com:6379\r\nEngine:  Clustered Redis\r\nEngine Version Compatibility: 5.0.6\r\nEncryption in-tranist:  Yes\r\nEncryption at-rest: No\r\n\r\n```\r\n\r\nI tried to use redis-py-cluster to connect to redis, but it looks like it is always in the pending state.\r\nThis time has lasted 3 minutes. Please see my screenshot. \r\n![redis-py-cluster](https://user-images.githubusercontent.com/5792519/81659057-ed305280-946b-11ea-92fa-fa4db952bffe.jpg)\r\n\r\n\r\nThanks!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/366", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/366/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/366/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/366", "id": 614595406, "node_id": "MDU6SXNzdWU2MTQ1OTU0MDY=", "number": 366, "title": "how to use connection pool in cluster mode", "user": {"login": "vangoleo", "id": 2031602, "node_id": "MDQ6VXNlcjIwMzE2MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2031602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vangoleo", "html_url": "https://github.com/vangoleo", "followers_url": "https://api.github.com/users/vangoleo/followers", "following_url": "https://api.github.com/users/vangoleo/following{/other_user}", "gists_url": "https://api.github.com/users/vangoleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vangoleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vangoleo/subscriptions", "organizations_url": "https://api.github.com/users/vangoleo/orgs", "repos_url": "https://api.github.com/users/vangoleo/repos", "events_url": "https://api.github.com/users/vangoleo/events{/privacy}", "received_events_url": "https://api.github.com/users/vangoleo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-08T08:31:39Z", "updated_at": "2020-07-21T09:07:22Z", "closed_at": "2020-05-08T10:47:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have some problem on how to use Connection Pool while using redis-py-cluster, Could you give me some help, thanks^_^\r\n\r\nI know that we can use Connection Pool while connect to a single redis node, below is the code snippet:\r\n```python\r\npool = redis.ConnectionPool(host='127.0.0.1', port=6379)\r\nr = redis.Redis(connection_pool=pool)\r\n```\r\nIn the above code, redis client use a connection pool, to avoid extra network overhead.\r\n\r\nBut it seems there is no document talking about how to use connection pool in redis-py-cluster. \r\n\r\n```python\r\nr = StrictRedisCluster(startup_nodes=redis_nodes, decode_responses=True)\r\nr.get(\"aaa\")      // create a new connection and then close it while request is finished.\r\nr.get(\"bbb\")      // create a new connection and then close it while request is finished.\r\n...\r\nr.get(\"zzz\")      // create a new connection and then close it while request is finished.\r\n```\r\n\r\nCan anybody supply some explain or simple demo. \r\nAlso, how to use both Pipeline and Connection Pool in redis-py-cluster.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/364", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/364/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/364/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/364", "id": 597613308, "node_id": "MDU6SXNzdWU1OTc2MTMzMDg=", "number": 364, "title": "Redis cluster through ssh tunnel", "user": {"login": "Frantch", "id": 4487748, "node_id": "MDQ6VXNlcjQ0ODc3NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4487748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Frantch", "html_url": "https://github.com/Frantch", "followers_url": "https://api.github.com/users/Frantch/followers", "following_url": "https://api.github.com/users/Frantch/following{/other_user}", "gists_url": "https://api.github.com/users/Frantch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Frantch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Frantch/subscriptions", "organizations_url": "https://api.github.com/users/Frantch/orgs", "repos_url": "https://api.github.com/users/Frantch/repos", "events_url": "https://api.github.com/users/Frantch/events{/privacy}", "received_events_url": "https://api.github.com/users/Frantch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T23:37:38Z", "updated_at": "2020-05-20T22:50:53Z", "closed_at": "2020-05-20T22:50:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nin order to reach my cluster (2 nodes) I need to open an ssh tunel           \r\n \r\n`ssh -J xxxx:1234 xxxxx -L 7779:$REDIS_HOST:$REDIS_PORT`\r\n\r\nNow I'm facing an issue where commands something (even more often than not) fail with this error\r\n\r\n> rediscluster.exceptions.ClusterError: TTL exhausted.\r\n\r\nMost probably I'm getting this error because the cluster is telling the client to move to an other node and of course it will try to connect on the real node uri and not 127.0.0.1\r\n\r\nIs it possible with this client to 'map' the node addresses? Something like telling it if you receive node address 'x' replace connect instead to 127.0.0.1?\r\n\r\nOr any other workaround that would allow me to 'always' connect to 127.0.0.1 ?\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/362", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/362/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/362/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/362", "id": 588674720, "node_id": "MDU6SXNzdWU1ODg2NzQ3MjA=", "number": 362, "title": "Bug(ConnectionResetError): handling causes MovedErrors and expensive NodeManager rebuilds", "user": {"login": "kylepad", "id": 42185732, "node_id": "MDQ6VXNlcjQyMTg1NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/42185732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylepad", "html_url": "https://github.com/kylepad", "followers_url": "https://api.github.com/users/kylepad/followers", "following_url": "https://api.github.com/users/kylepad/following{/other_user}", "gists_url": "https://api.github.com/users/kylepad/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylepad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylepad/subscriptions", "organizations_url": "https://api.github.com/users/kylepad/orgs", "repos_url": "https://api.github.com/users/kylepad/repos", "events_url": "https://api.github.com/users/kylepad/events{/privacy}", "received_events_url": "https://api.github.com/users/kylepad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T19:34:09Z", "updated_at": "2020-05-06T22:25:25Z", "closed_at": "2020-05-06T22:08:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Through a lot of debugging I came to the same conclusion as issue #333 , not trying to duplicate the issue, but I think I can do a better job of explaining what's going on here, and how I came to a conclusion as to the root cause.\r\n\r\nTL;DR before the wall of text:\r\nA `ConnectionResetError: [Errno 104] Connection reset by peer` at the socket level gets handled as a `ConnectionError` in the `Client` object, and in the handler we set `try_random_node`, however what we actually need to do is retry the same node.  Upon trying a random node we get a `MovedError` which causes the `NodeManager` to reinitialize which can be very expensive.  \r\n\r\nTaking a step back, be me a few weeks ago, wrapping up a nice new feature, doing some performance testing.  I noticed that about 2% of the time my feature's runtime was over 1s, sometimes up to 3s.  Effectively we're just grabbing a bunch of data from redis and performing some very simple transformations.  On the quick side of things runtimes were as low as 10ms.  What could possibly explain these extremely high outlier values?\r\n\r\nA couple notes before we get any further, because otherwise some of the numbers you see below may be confusing.  This feature is being tested in containers constrained to 100m of cpu and 100MiB of ram. Our redis cluster is located in a single data center, but these containers can be in any data center.  Average time to ping redis from within the same data center is 0.5ms, from other data centers it\u2019s about 35ms.  Moving on.\r\n\r\nNext step is to go down and look at the performance time for each redis command and the payload size, in case larger payloads = longer time.  \r\n\r\nHere\u2019s a sample outlier case:\r\n```\r\nrealtime performance (rc.hgetall): 1.195277 \r\nrealtime performance (rc.lrange): 0.000592 \r\nrealtime performance (rc.lrange): 0.000815 \r\nrealtime performance (feature): 1.198617 \r\n```\r\n\r\nHere\u2019s a sample normal case:\r\n```\r\nrealtime performance (rc.hgetall): 0.067613 \r\nrealtime performance (rc.lrange): 0.069521\r\nrealtime performance (feature): 0.144102 \r\n```\r\n\r\nWhat we see is that when the entire feature takes over 1s, all that latency usually falls one command.  I was also able to find examples where the exact same redis command was being executed on two different instances, returning the same payload, one takes over 1s, while the other is in the 1-115ms range.\r\n\r\nNext step we go even deeper, let\u2019s run `cProfile` on each redis command, and see what\u2019s happening differently in an outlier.  Here\u2019s an outlier case (I will cut out most of the profiling output, it\u2019s quite dry):\r\n```\r\nprofiling_output: \"         84261 function calls (84108 primitive calls) in 2.086 seconds\r\n   Ordered by: cumulative time\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        1    0.409    0.409    2.084    2.084 /usr/local/lib/python3.6/site-packages/rediscluster/nodemanager.py:142(initialize)\r\n    16384    1.103    0.000    1.104    0.000 /usr/local/lib/python3.6/site-packages/rediscluster/nodemanager.py:197(<listcomp>)\r\n    16394    0.263    0.000    0.456    0.000 /usr/local/lib/python3.6/site-packages/rediscluster/nodemanager.py:277(make_node_obj)\r\n    16394    0.193    0.000    0.193    0.000 {method 'format' of 'str' objects}\r\n    16409    0.095    0.000    0.095    0.000 {method 'append' of 'list' objects}\r\n        2    0.000    0.000    0.016    0.008 /usr/local/lib/python3.6/site-packages/redis/client.py:748(execute_command)\r\n```\r\n\r\nAs you can see, in the outlier case almost all the time is spent reinitializing the `NodeManager`.  This proved to be true in all the outlier cases I looked at.  So the next question: Why is this object being rebuilt?  Tracing through the code we can see that on a `MovedError`:\r\n```\r\nself.refresh_table_asap = True\r\nself.connection_pool.nodes.increment_reinitialize_counter()\r\n```\r\nSo by default every 25 `MovedErrors` results in a reinitialization, but also a single `MovedError` results in the `NodeManager` being rebuilt before the next command is run.  This by itself seems like a bug, why enable `reinitialize_steps` to be set in the constructor if we\u2019re just going to ignore it and reinitialize on the next command anyways?\r\n\r\n\r\nNext question: Why are we seeing any `MovedErrors` period?  We don\u2019t go around resharding our staging redis cluster, so there must be something else going on.  My next course of action was to investigate what\u2019s going on inside the `NodeManager`. Long story short, I didn\u2019t find anything wrong, the `NodeManager` is solid.\r\n\r\nOk well now I have a bunch of extra logging in the `NodeManager`, lets log out these moved errors and see what we get.  Additionally I logged out the slot returned by the `NodeManager` and the `repr()` of the connection object returned from the `ConnectionPool` we are executing the command against:\r\n```\r\nrediscluster.exceptions.MovedError: 11566 0.0.0.12:6379\r\nconnection: \"ClusterConnection<host=0.0.0.2,port=6379,db=0>\" \r\nslot: 11566 \r\n```\r\nWell obviously we are getting a real `MovedError` as we are executing against the wrong node in our cluster.  However the `NodeManager` returned the correct slot, so what gives?\r\n\r\nMight as well log out all the different exceptions that could also be happening here.  To my surprise I see that in almost 50% of cases we see at least one of those following errors:\r\n```\r\n\"Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 190, in _read_from_socket\r\n    data = recv(self._sock, socket_read_size)\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/_compat.py\", line 71, in recv\r\n    return sock.recv(*args, **kwargs)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n```\r\nWhich gets bubbled up as the following redis error:\r\n```\r\nredis.exceptions.ConnectionError: Error while reading from socket: (104, 'Connection reset by peer')\" \r\n```\r\n\r\nWhich in turn triggers the `Client` to retry on a random node.  Upon retrying said node we have a 5 in 6 chance of getting the wrong node, in which case we get a `MovedError`, which in turn triggers the costly rebuilding of the `NodeManager`.  I hope you can understand my confusion, but why would we retry our command on a random node when we know exactly which node we need to retry on?  Perhaps we are an odd case for seeing so many connection interruptions, but in our staging and production environments we probably see hundreds of thousands, maybe even millions of these `ConnectionResetErrors`, and not once has it ever been because the node we were communicating with had gone down.\r\n\r\nSo onto the important part: how do we fix this?  Well I think the solution in https://github.com/Grokzen/redis-py-cluster/pull/335 certainly works, it\u2019s almost identical to the solution I came up with, and I have since tested this exact change in our staging environment, and have seen 0 instances of given commands taking over a second.\r\n\r\nAn alternative option that I would propose, if you feel strongly that trying a random node is sometimes still the correct approach to handling this error, perhaps some sort of retry handler with backoff and jitter that tries to correct node say 5 times before trying a random node, might also be an appropriate way to fix this bug.  I will also investigate whether or not there is a different error for a node going down than this ConnectionResetError, another option maybe to just handle them separately.\r\n\r\nAnother alternative is to make trying a random node a configurable option in the `Client`'s constructor, because I\u2019m sure there are other users, like us, where this behaviour will never be needed, and is just causing these same performance anomalies.  \r\n\r\nThank you for taking the time to read this.  Please let me know if you have any questions.\r\n\r\nAlso if it would be more useful for me to throw in a PR with my version and then to go fix the tests and be present to get it polished up and merged, let me know, I don't mind spending the time to get this fix in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/359", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/359/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/359/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/359", "id": 570882109, "node_id": "MDU6SXNzdWU1NzA4ODIxMDk=", "number": 359, "title": "Dependency discrepency", "user": {"login": "allyn-psyonix", "id": 28873959, "node_id": "MDQ6VXNlcjI4ODczOTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/28873959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allyn-psyonix", "html_url": "https://github.com/allyn-psyonix", "followers_url": "https://api.github.com/users/allyn-psyonix/followers", "following_url": "https://api.github.com/users/allyn-psyonix/following{/other_user}", "gists_url": "https://api.github.com/users/allyn-psyonix/gists{/gist_id}", "starred_url": "https://api.github.com/users/allyn-psyonix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allyn-psyonix/subscriptions", "organizations_url": "https://api.github.com/users/allyn-psyonix/orgs", "repos_url": "https://api.github.com/users/allyn-psyonix/repos", "events_url": "https://api.github.com/users/allyn-psyonix/events{/privacy}", "received_events_url": "https://api.github.com/users/allyn-psyonix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-25T22:35:02Z", "updated_at": "2020-02-25T22:37:02Z", "closed_at": "2020-02-25T22:36:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "The PIP page and the doc site both reference redis dependency as:\r\n\r\nredis>=3.0.0,<3.1.0\r\n\r\nHowever, the readme here indicates:\r\n\r\nredis-py >=3.0.0, <3.5.0\r\n\r\nThe lib itself matches the first, so I think the readme here on github needs to be updated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/356", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/356/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/356/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/356", "id": 570150692, "node_id": "MDU6SXNzdWU1NzAxNTA2OTI=", "number": 356, "title": "Reinstate support for python 3.5", "user": {"login": "n89nanda", "id": 2433020, "node_id": "MDQ6VXNlcjI0MzMwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2433020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n89nanda", "html_url": "https://github.com/n89nanda", "followers_url": "https://api.github.com/users/n89nanda/followers", "following_url": "https://api.github.com/users/n89nanda/following{/other_user}", "gists_url": "https://api.github.com/users/n89nanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/n89nanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n89nanda/subscriptions", "organizations_url": "https://api.github.com/users/n89nanda/orgs", "repos_url": "https://api.github.com/users/n89nanda/repos", "events_url": "https://api.github.com/users/n89nanda/events{/privacy}", "received_events_url": "https://api.github.com/users/n89nanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-24T21:15:10Z", "updated_at": "2020-03-03T17:36:27Z", "closed_at": "2020-03-03T17:36:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like a commit on Jan 13 removed support for python 3.5. I am trying to understand why this is no longer supported. \r\n\r\nI was able to find below reason for python 3.4. \r\n`A segfault was found when running `redis-py` in python `3.4.0` that was introduced into the codebase in python itself in the version `3.4.0`.`\r\n\r\nAlso, the redis-py library still supports python 3.5 and python 3.5 has not reached EOL yet.\r\n\r\nThanks for any additional information on this issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/355", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/355/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/355/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/355", "id": 566842701, "node_id": "MDU6SXNzdWU1NjY4NDI3MDE=", "number": 355, "title": "redis-py 3.4.1", "user": {"login": "DvirDukhan", "id": 12258836, "node_id": "MDQ6VXNlcjEyMjU4ODM2", "avatar_url": "https://avatars0.githubusercontent.com/u/12258836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DvirDukhan", "html_url": "https://github.com/DvirDukhan", "followers_url": "https://api.github.com/users/DvirDukhan/followers", "following_url": "https://api.github.com/users/DvirDukhan/following{/other_user}", "gists_url": "https://api.github.com/users/DvirDukhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/DvirDukhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DvirDukhan/subscriptions", "organizations_url": "https://api.github.com/users/DvirDukhan/orgs", "repos_url": "https://api.github.com/users/DvirDukhan/repos", "events_url": "https://api.github.com/users/DvirDukhan/events{/privacy}", "received_events_url": "https://api.github.com/users/DvirDukhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T11:55:11Z", "updated_at": "2020-02-19T14:05:17Z", "closed_at": "2020-02-19T14:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, maybe I'm bursting into an open door but `redis-py` [3.4.1 ](https://github.com/andymccurdy/redis-py/releases/tag/3.4.1) was released, while the current `master` branch `requirments.txt` is not allowing version higher than 3.4.0\r\n```\r\nredis>=3.0.0,<3.4.0\r\n```\r\nThis can cause issues when trying to set up an environment that requires the installation of `redis-py` and `redis-py-cluster`.\r\nIf there isn't anything special needed for `redis-py-cluster` to support redis-py 3.4.1 then I'll PR with the required changes to `requirments.txt`.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/354", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/354/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/354/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/354", "id": 557181150, "node_id": "MDU6SXNzdWU1NTcxODExNTA=", "number": 354, "title": "Connection to redis cluster NOT getting extablished ", "user": {"login": "satva", "id": 11969761, "node_id": "MDQ6VXNlcjExOTY5NzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/11969761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satva", "html_url": "https://github.com/satva", "followers_url": "https://api.github.com/users/satva/followers", "following_url": "https://api.github.com/users/satva/following{/other_user}", "gists_url": "https://api.github.com/users/satva/gists{/gist_id}", "starred_url": "https://api.github.com/users/satva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satva/subscriptions", "organizations_url": "https://api.github.com/users/satva/orgs", "repos_url": "https://api.github.com/users/satva/repos", "events_url": "https://api.github.com/users/satva/events{/privacy}", "received_events_url": "https://api.github.com/users/satva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-29T23:36:17Z", "updated_at": "2020-01-30T08:59:23Z", "closed_at": "2020-01-30T08:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\n\r\n**Used S/W Versions :**\r\n          redis-py-cluster: 2.0.0\r\n          redis: 3.0.1\r\n          Python: 3.7.4\r\n          Redis Cluster - (Server Version : 5.0.3) \r\n\r\nWas trying to connect to cluster with below code:\r\n\r\n```\r\n##########\r\nstartup_node = [{\"host\": \"172.21.97.21\", \"port\": \"8605\"}]\r\nrc = RedisCluster(startup_nodes=startup_node, decode_responses=True)\r\n#########\r\n```\r\n\r\nIt was hanging and when issued CTRL-C\r\n```\r\n(venv2) KESRINIV-M-F1GP:Desktop kesriniv$ python redis_test.py \r\n^CTraceback (most recent call last):\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 493, in connect\r\n    sock = self._connect()\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 550, in _connect\r\n    raise err\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 538, in _connect\r\n    sock.connect(socket_address)\r\nTimeoutError: [Errno 60] Operation timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/client.py\", line 754, in execute_command\r\n    connection.send_command(*args)\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 619, in send_command\r\n    self.send_packed_command(self.pack_command(*args))\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 594, in send_packed_command\r\n    self.connect()\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 498, in connect\r\n    raise ConnectionError(self._error_message(e))\r\nredis.exceptions.ConnectionError: Error 60 connecting to 169.254.34.45:6379. Operation timed out.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"redis_test.py\", line 4, in <module>\r\n    rc = RedisCluster(startup_nodes=startup_node, decode_responses=True,readonly_mode=True)\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/client.py\", line 214, in __init__\r\n    **kwargs\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/connection.py\", line 365, in __init__\r\n    **connection_kwargs)\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/connection.py\", line 146, in __init__\r\n    self.nodes.initialize()\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/nodemanager.py\", line 219, in initialize\r\n    need_full_slots_coverage = self.cluster_require_full_coverage(nodes_cache)\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/nodemanager.py\", line 266, in cluster_require_full_coverage\r\n    return any(node_require_full_coverage(node) for node in nodes.values())\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/nodemanager.py\", line 266, in <genexpr>\r\n    return any(node_require_full_coverage(node) for node in nodes.values())\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/rediscluster/nodemanager.py\", line 259, in node_require_full_coverage\r\n    return \"yes\" in r_node.config_get(\"cluster-require-full-coverage\").values()\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/client.py\", line 845, in config_get\r\n    return self.execute_command('CONFIG GET', pattern)\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/client.py\", line 760, in execute_command\r\n    connection.send_command(*args)\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 619, in send_command\r\n    self.send_packed_command(self.pack_command(*args))\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 594, in send_packed_command\r\n    self.connect()\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 493, in connect\r\n    sock = self._connect()\r\n  File \"/Users/kesriniv/Desktop/abc/venv2/lib/python3.7/site-packages/redis/connection.py\", line 538, in _connect\r\n    sock.connect(socket_address)\r\nKeyboardInterrupt\r\n```\r\n\r\n**Note** - Using redis-cli , was able to connect to same server.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/352", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/352/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/352/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/352", "id": 555546288, "node_id": "MDU6SXNzdWU1NTU1NDYyODg=", "number": 352, "title": "forgotten import in rediscluster/client.py", "user": {"login": "denisguzeyev", "id": 19374118, "node_id": "MDQ6VXNlcjE5Mzc0MTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/19374118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisguzeyev", "html_url": "https://github.com/denisguzeyev", "followers_url": "https://api.github.com/users/denisguzeyev/followers", "following_url": "https://api.github.com/users/denisguzeyev/following{/other_user}", "gists_url": "https://api.github.com/users/denisguzeyev/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisguzeyev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisguzeyev/subscriptions", "organizations_url": "https://api.github.com/users/denisguzeyev/orgs", "repos_url": "https://api.github.com/users/denisguzeyev/repos", "events_url": "https://api.github.com/users/denisguzeyev/events{/privacy}", "received_events_url": "https://api.github.com/users/denisguzeyev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-27T12:36:58Z", "updated_at": "2020-01-27T12:51:16Z", "closed_at": "2020-01-27T12:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the method _determine_slot() in \"if command in ['XREADGROUP', 'XREAD']:\"  there is a \"Token\" that actually appears w/o any declaration. So the \"Token\" should be declared\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/351", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/351/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/351/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/351", "id": 555102342, "node_id": "MDU6SXNzdWU1NTUxMDIzNDI=", "number": 351, "title": "SyntaxWarning due to comparison using is for literal", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-25T16:06:14Z", "updated_at": "2020-01-27T13:38:14Z", "closed_at": "2020-01-27T13:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I will raise a PR for this.\r\n\r\n```\r\n./tests/test_multiprocessing.py:50: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert proc.exitcode is 0\r\n./tests/test_multiprocessing.py:84: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert proc.exitcode is 0\r\n./tests/test_multiprocessing.py:112: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert proc.exitcode is 0\r\n./tests/test_multiprocessing.py:151: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert proc.exitcode is 0\r\n./tests/test_multiprocessing.py:164: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert proc.exitcode is 0\r\n./tests/test_cluster_obj.py:70: DeprecationWarning: invalid escape sequence \\.\r\n  assert re.search('^RedisCluster<[a-z0-9\\.\\:\\,].+>$', str(r))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/350", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/350/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/350/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/350", "id": 552890010, "node_id": "MDU6SXNzdWU1NTI4OTAwMTA=", "number": 350, "title": "rediscluster.exceptions.RedisClusterException: Slot \"13145\" not covered by the cluster. \"skip_full_coverage_check=True\"", "user": {"login": "umang92", "id": 4151799, "node_id": "MDQ6VXNlcjQxNTE3OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4151799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umang92", "html_url": "https://github.com/umang92", "followers_url": "https://api.github.com/users/umang92/followers", "following_url": "https://api.github.com/users/umang92/following{/other_user}", "gists_url": "https://api.github.com/users/umang92/gists{/gist_id}", "starred_url": "https://api.github.com/users/umang92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umang92/subscriptions", "organizations_url": "https://api.github.com/users/umang92/orgs", "repos_url": "https://api.github.com/users/umang92/repos", "events_url": "https://api.github.com/users/umang92/events{/privacy}", "received_events_url": "https://api.github.com/users/umang92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-01-21T13:51:24Z", "updated_at": "2020-08-20T17:02:19Z", "closed_at": "2020-05-22T11:56:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am using redis-py-cluster 2.0.0 and AWS Elasticache Clustered Mode Redis. \r\n\r\nWhen I initialize my RedisCluster client with skip_full_coverage_check=False, I get the following error:\r\n```redis.exceptions.ResponseError: unknown command `CONFIG`, with args beginning with: `GET`, `cluster-require-full-coverage`,```\r\n\r\nIt gets resolved when I use skip_full_coverage_check=True.\r\n\r\nAfter this, I tried primary failover by initiating failover in one of the shards. After the failover finished one of my containers connecting with the Redis started throwing errors like below:\r\n\r\n```rediscluster.exceptions.RedisClusterException: Slot \"13145\" not covered by the cluster. \"skip_full_coverage_check=True\"```\r\n\r\nStrange thing is that the other containers were working fine after the failover. What can be the issue?\r\n\r\nThanks,\r\nUmang.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/349", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/349/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/349/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/349", "id": 551870516, "node_id": "MDU6SXNzdWU1NTE4NzA1MTY=", "number": 349, "title": "got Decode errors when scan a key.", "user": {"login": "BlackWatchuser", "id": 31655348, "node_id": "MDQ6VXNlcjMxNjU1MzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/31655348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BlackWatchuser", "html_url": "https://github.com/BlackWatchuser", "followers_url": "https://api.github.com/users/BlackWatchuser/followers", "following_url": "https://api.github.com/users/BlackWatchuser/following{/other_user}", "gists_url": "https://api.github.com/users/BlackWatchuser/gists{/gist_id}", "starred_url": "https://api.github.com/users/BlackWatchuser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BlackWatchuser/subscriptions", "organizations_url": "https://api.github.com/users/BlackWatchuser/orgs", "repos_url": "https://api.github.com/users/BlackWatchuser/repos", "events_url": "https://api.github.com/users/BlackWatchuser/events{/privacy}", "received_events_url": "https://api.github.com/users/BlackWatchuser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-19T05:38:56Z", "updated_at": "2020-01-21T16:33:42Z", "closed_at": "2020-01-21T16:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### I got Decode errors like this:\r\n\r\n```  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 636, in read_response\r\n    raise e\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 633, in read_response\r\n    response = self._parser.read_response()\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 331, in read_response\r\n    response = [self.read_response() for i in xrange(length)]\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 331, in <listcomp>\r\n    response = [self.read_response() for i in xrange(length)]\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 331, in read_response\r\n    response = [self.read_response() for i in xrange(length)]\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 331, in <listcomp>\r\n    response = [self.read_response() for i in xrange(length)]\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 333, in read_response\r\n    response = self.encoder.decode(response)\r\n  File \"/usr/local/lib/python3.6/site-packages/redis/connection.py\", line 132, in decode\r\n    value = value.decode(self.encoding, self.encoding_errors)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xac in position 0: invalid start byte\r\n```\r\n\r\n#### Finally i found reason in my redis, there is a key with a special character in it's name. it's looks like \"/xac.....\".\r\n#### But i think it's ok, could it is possible to fixing this issue in this driver ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/348", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/348/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/348/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/348", "id": 546624804, "node_id": "MDU6SXNzdWU1NDY2MjQ4MDQ=", "number": 348, "title": "Can I get a redis-py-cluster==2.1.0 by `setup.py install redis-py-cluster`?", "user": {"login": "HaozhengLi", "id": 19581955, "node_id": "MDQ6VXNlcjE5NTgxOTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/19581955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HaozhengLi", "html_url": "https://github.com/HaozhengLi", "followers_url": "https://api.github.com/users/HaozhengLi/followers", "following_url": "https://api.github.com/users/HaozhengLi/following{/other_user}", "gists_url": "https://api.github.com/users/HaozhengLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HaozhengLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HaozhengLi/subscriptions", "organizations_url": "https://api.github.com/users/HaozhengLi/orgs", "repos_url": "https://api.github.com/users/HaozhengLi/repos", "events_url": "https://api.github.com/users/HaozhengLi/events{/privacy}", "received_events_url": "https://api.github.com/users/HaozhengLi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T03:31:08Z", "updated_at": "2020-01-08T11:50:36Z", "closed_at": "2020-01-08T11:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI need to use redis-py (3.3.x), cuz the new version fix some important BUGs, about the connection_pool:\r\nhttps://github.com/Grokzen/redis-py-cluster/issues/182\r\nhttps://github.com/andymccurdy/redis-py/issues/306\r\nhttps://github.com/andymccurdy/redis-py/pull/886\r\n\r\nBut redis-py-cluster==2.0.0 does not support it.\r\n\r\nSo I install redis-py-cluster==2.1.0 by `setup.py install redis-py-cluster`.\r\n\r\nIt does work. I get redis-py-cluster==2.1.0, redis==3.3.11.\r\n\r\nBut I still meet the same BUG.\r\n\r\nMy question is, did I do a wrong 2.1.0 install by using `setup.py install redis-py-cluster`? And it makes the redis==3.3.11 not working as well.\r\n\r\nOr did redis==3.3.11 has not fix these BUGs actually?\r\n\r\nThat is to say, can I get a redis-py-cluster==2.1.0 by `setup.py install redis-py-cluster`?\r\n\r\nThank you very much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/346", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/346/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/346/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/346", "id": 529185209, "node_id": "MDU6SXNzdWU1MjkxODUyMDk=", "number": 346, "title": "connot subscribe channels in different server, this bug will always change the host to 127.0.0.1 and execute subscribe command", "user": {"login": "weijiayun", "id": 19474645, "node_id": "MDQ6VXNlcjE5NDc0NjQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/19474645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weijiayun", "html_url": "https://github.com/weijiayun", "followers_url": "https://api.github.com/users/weijiayun/followers", "following_url": "https://api.github.com/users/weijiayun/following{/other_user}", "gists_url": "https://api.github.com/users/weijiayun/gists{/gist_id}", "starred_url": "https://api.github.com/users/weijiayun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weijiayun/subscriptions", "organizations_url": "https://api.github.com/users/weijiayun/orgs", "repos_url": "https://api.github.com/users/weijiayun/repos", "events_url": "https://api.github.com/users/weijiayun/events{/privacy}", "received_events_url": "https://api.github.com/users/weijiayun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-27T08:14:06Z", "updated_at": "2019-11-27T10:33:52Z", "closed_at": "2019-11-27T10:33:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/home/jiayunwei/pycharm-2018.1.2/helpers/pydev/pydevd.py\", line 1664, in <module>\r\n    main()\r\n  File \"/home/jiayunwei/pycharm-2018.1.2/helpers/pydev/pydevd.py\", line 1658, in main\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"/home/jiayunwei/pycharm-2018.1.2/helpers/pydev/pydevd.py\", line 1068, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/home/jiayunwei/pycharm-2018.1.2/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/home/jiayunwei/Project/BTC/ccluoshu/adventure/cluster2.py\", line 11, in <module>\r\n    ds.subscribe([\"weijiayun\"], on_message=on_msg)\r\n  File \"/home/jiayunwei/Project/BTC/ccluoshu/shared/base/exchange.py\", line 409, in subscribe\r\n    self.add_subscription(channels)\r\n  File \"/home/jiayunwei/Project/BTC/ccluoshu/shared/base/exchange.py\", line 390, in add_subscription\r\n    self.pubsub.subscribe(new_channels)\r\n  File \"/home/jiayunwei/anaconda3/lib/python3.7/site-packages/redis/client.py\", line 3026, in subscribe\r\n    ret_val = self.execute_command('SUBSCRIBE', *iterkeys(new_channels))\r\n  File \"/home/jiayunwei/anaconda3/lib/python3.7/site-packages/rediscluster/pubsub.py\", line 35, in execute_command\r\n    self._execute(connection, connection.send_command, *args)\r\n  File \"/home/jiayunwei/anaconda3/lib/python3.7/site-packages/redis/client.py\", line 2959, in _execute\r\n    connection.connect()\r\n  File \"/home/jiayunwei/anaconda3/lib/python3.7/site-packages/redis/connection.py\", line 498, in connect\r\n    raise ConnectionError(self._error_message(e))\r\nredis.exceptions.ConnectionError: Error 111 connecting to 127.0.0.1:7002. Connection refused.\r\n```\r\n\r\nin nodemanager.py line:186\r\n\r\n- if master_node[0] == \"\":\r\n-      master_node[0] = node['host']\r\n- master_node[1] = int(master_node[1])\r\nchange to =>\r\n+ master_node[0] = node['host']\r\n+ master_node[1] = int(master_node[1])\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/341", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/341/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/341/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/341", "id": 511962897, "node_id": "MDU6SXNzdWU1MTE5NjI4OTc=", "number": 341, "title": "Connection still in close_wait", "user": {"login": "aasifalam", "id": 30460915, "node_id": "MDQ6VXNlcjMwNDYwOTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/30460915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aasifalam", "html_url": "https://github.com/aasifalam", "followers_url": "https://api.github.com/users/aasifalam/followers", "following_url": "https://api.github.com/users/aasifalam/following{/other_user}", "gists_url": "https://api.github.com/users/aasifalam/gists{/gist_id}", "starred_url": "https://api.github.com/users/aasifalam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aasifalam/subscriptions", "organizations_url": "https://api.github.com/users/aasifalam/orgs", "repos_url": "https://api.github.com/users/aasifalam/repos", "events_url": "https://api.github.com/users/aasifalam/events{/privacy}", "received_events_url": "https://api.github.com/users/aasifalam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-24T13:56:26Z", "updated_at": "2019-10-24T14:10:55Z", "closed_at": "2019-10-24T14:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using \r\nredis-py-cluster = 1.3.6\r\nserver = 4.0.14\r\n\r\nwe are seeing many connection at the application in CLOSE_WAIT state. So many that application pod runs of all the file descriptors. Restart is the only option. \r\nAt the Redis server there are no dangling connection to the clients however. We are seeing this issue with multiple applications using redis-py-cluster client\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/340", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/340/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/340/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/340", "id": 511734502, "node_id": "MDU6SXNzdWU1MTE3MzQ1MDI=", "number": 340, "title": "Support blocking connection pool", "user": {"login": "toughrogrammer", "id": 1473538, "node_id": "MDQ6VXNlcjE0NzM1Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1473538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toughrogrammer", "html_url": "https://github.com/toughrogrammer", "followers_url": "https://api.github.com/users/toughrogrammer/followers", "following_url": "https://api.github.com/users/toughrogrammer/following{/other_user}", "gists_url": "https://api.github.com/users/toughrogrammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/toughrogrammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toughrogrammer/subscriptions", "organizations_url": "https://api.github.com/users/toughrogrammer/orgs", "repos_url": "https://api.github.com/users/toughrogrammer/repos", "events_url": "https://api.github.com/users/toughrogrammer/events{/privacy}", "received_events_url": "https://api.github.com/users/toughrogrammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-24T06:28:24Z", "updated_at": "2020-03-03T15:00:38Z", "closed_at": "2020-03-03T15:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is `BlockingConnectionPool` in `redis-py` but here isn't. I'm facing connection spike situations and it makes redis server halt. Is it hard to implement blocking connection pool of cluster version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/338", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/338/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/338/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/338", "id": 507828975, "node_id": "MDU6SXNzdWU1MDc4Mjg5NzU=", "number": 338, "title": "Redis 3.2 support", "user": {"login": "gusdan", "id": 146143, "node_id": "MDQ6VXNlcjE0NjE0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/146143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gusdan", "html_url": "https://github.com/gusdan", "followers_url": "https://api.github.com/users/gusdan/followers", "following_url": "https://api.github.com/users/gusdan/following{/other_user}", "gists_url": "https://api.github.com/users/gusdan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gusdan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gusdan/subscriptions", "organizations_url": "https://api.github.com/users/gusdan/orgs", "repos_url": "https://api.github.com/users/gusdan/repos", "events_url": "https://api.github.com/users/gusdan/events{/privacy}", "received_events_url": "https://api.github.com/users/gusdan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-16T12:46:30Z", "updated_at": "2019-10-16T15:32:25Z", "closed_at": "2019-10-16T14:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. \r\n\r\nI see in change log and in current setup.py that library already supports redis 3.2. Do you have any ETA for next release? \r\n\r\nWe use redis-py-cluster and celery in same project. And major celery release 4.3 has requirement redis >= 3.2 so we get stuck in circular dependencies. And it blocks our entire upgrade. Any help will be very appreciated. \r\n\r\nThank you.   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/337", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/337/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/337/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/337", "id": 505753498, "node_id": "MDU6SXNzdWU1MDU3NTM0OTg=", "number": 337, "title": "ImportError: cannot import name 'bytes' from 'redis._compat'", "user": {"login": "yangmingbai", "id": 51049448, "node_id": "MDQ6VXNlcjUxMDQ5NDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/51049448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangmingbai", "html_url": "https://github.com/yangmingbai", "followers_url": "https://api.github.com/users/yangmingbai/followers", "following_url": "https://api.github.com/users/yangmingbai/following{/other_user}", "gists_url": "https://api.github.com/users/yangmingbai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangmingbai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangmingbai/subscriptions", "organizations_url": "https://api.github.com/users/yangmingbai/orgs", "repos_url": "https://api.github.com/users/yangmingbai/repos", "events_url": "https://api.github.com/users/yangmingbai/events{/privacy}", "received_events_url": "https://api.github.com/users/yangmingbai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-11T09:51:38Z", "updated_at": "2020-05-12T12:35:33Z", "closed_at": "2019-10-11T10:09:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "in nodemanager line 12\r\nfrom redis._compat import unicode, bytes, long, basestring\r\nthere cannot import name 'bytes'  in redis._compat\r\nversion:\r\nredis==3.2.0\r\nredis-py-cluster==2.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/334", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/334/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/334/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/334", "id": 505007754, "node_id": "MDU6SXNzdWU1MDUwMDc3NTQ=", "number": 334, "title": "Use redis-py version above 3.3.0", "user": {"login": "toughrogrammer", "id": 1473538, "node_id": "MDQ6VXNlcjE0NzM1Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1473538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toughrogrammer", "html_url": "https://github.com/toughrogrammer", "followers_url": "https://api.github.com/users/toughrogrammer/followers", "following_url": "https://api.github.com/users/toughrogrammer/following{/other_user}", "gists_url": "https://api.github.com/users/toughrogrammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/toughrogrammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toughrogrammer/subscriptions", "organizations_url": "https://api.github.com/users/toughrogrammer/orgs", "repos_url": "https://api.github.com/users/toughrogrammer/repos", "events_url": "https://api.github.com/users/toughrogrammer/events{/privacy}", "received_events_url": "https://api.github.com/users/toughrogrammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-10T03:18:31Z", "updated_at": "2019-10-10T07:22:35Z", "closed_at": "2019-10-10T06:43:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `redis-py-cluster` 2.0.0 but I need `redis-py` 3.3.0 above version. By `redis-py` 3.3.0, `health_check_interval` option is added. Is there any reason that `redis-py-cluster` need to use below 3.1.0 version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/333", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/333/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/333/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/333", "id": 503903752, "node_id": "MDU6SXNzdWU1MDM5MDM3NTI=", "number": 333, "title": "Getting data from redis getting slowly when redis-server disconnect", "user": {"login": "yangjiaronga", "id": 19570959, "node_id": "MDQ6VXNlcjE5NTcwOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19570959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjiaronga", "html_url": "https://github.com/yangjiaronga", "followers_url": "https://api.github.com/users/yangjiaronga/followers", "following_url": "https://api.github.com/users/yangjiaronga/following{/other_user}", "gists_url": "https://api.github.com/users/yangjiaronga/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjiaronga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjiaronga/subscriptions", "organizations_url": "https://api.github.com/users/yangjiaronga/orgs", "repos_url": "https://api.github.com/users/yangjiaronga/repos", "events_url": "https://api.github.com/users/yangjiaronga/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjiaronga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-08T08:31:48Z", "updated_at": "2020-05-21T11:45:10Z", "closed_at": "2020-05-21T11:44:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Redis-server disconnect when Redis-client not send any data during 300s\r\n---\r\n\r\nRedis-py-cluster get data raise ConnectionError, setting try_random_node is True.\r\n\r\ncontinue while, get node is possibly not key slot node, raise MovedError,\r\nsetting refresh_table_asap = True.\r\n\r\nnext, get data to need refresh table asap time-consuming and \r\nnode-connect the only release is not disconnected\r\n\r\nI think that when raising ConnectionError:\r\n1. disconnect\r\n2. get other connection from the current node\r\n3. if rasing ConnectionError when getting connection is new connection(make_connection), else ConnectionError\r\n\r\n```python\r\n@clusterdown_wrapper\r\ndef execute_command(self, *args, **kwargs):\r\n    \"\"\"\r\n    Send a command to a node in the cluster\r\n    \"\"\"\r\n    if not args:\r\n        raise RedisClusterException(\"Unable to determine command to use\")\r\n\r\n    command = args[0]\r\n\r\n    # If set externally we must update it before calling any commands\r\n    if self.refresh_table_asap:\r\n        self.connection_pool.nodes.initialize()\r\n        self.refresh_table_asap = False\r\n\r\n    node = self.determine_node(*args, **kwargs)\r\n    if node:\r\n        return self._execute_command_on_nodes(node, *args, **kwargs)\r\n\r\n    redirect_addr = None\r\n    asking = False\r\n\r\n    try_random_node = False\r\n    slot = self._determine_slot(*args)\r\n    ttl = int(self.RedisClusterRequestTTL)\r\n\r\n    while ttl > 0:\r\n        ttl -= 1\r\n\r\n        if asking:\r\n            node = self.connection_pool.nodes.nodes[redirect_addr]\r\n            r = self.connection_pool.get_connection_by_node(node)\r\n        elif try_random_node:\r\n            r = self.connection_pool.get_random_connection()\r\n            try_random_node = False\r\n        else:\r\n            if self.refresh_table_asap:\r\n                # MOVED\r\n                node = self.connection_pool.get_master_node_by_slot(slot)\r\n            else:\r\n                node = self.connection_pool.get_node_by_slot(slot)\r\n            r = self.connection_pool.get_connection_by_node(node)\r\n\r\n        try:\r\n            if asking:\r\n                r.send_command('ASKING')\r\n                self.parse_response(r, \"ASKING\", **kwargs)\r\n                asking = False\r\n\r\n            r.send_command(*args)\r\n            return self.parse_response(r, command, **kwargs)\r\n        except (RedisClusterException, BusyLoadingError):\r\n            raise\r\n        except (ConnectionError, TimeoutError):\r\n            try_random_node = True\r\n\r\n            if ttl < self.RedisClusterRequestTTL / 2:\r\n                time.sleep(0.1)\r\n        except ClusterDownError as e:\r\n            self.connection_pool.disconnect()\r\n            self.connection_pool.reset()\r\n            self.refresh_table_asap = True\r\n\r\n            raise e\r\n        except MovedError as e:\r\n            # Reinitialize on ever x number of MovedError.\r\n            # This counter will increase faster when the same client object\r\n            # is shared between multiple threads. To reduce the frequency you\r\n            # can set the variable 'reinitialize_steps' in the constructor.\r\n            self.refresh_table_asap = True\r\n            self.connection_pool.nodes.increment_reinitialize_counter()\r\n\r\n            node = self.connection_pool.nodes.set_node(e.host, e.port, server_type='master')\r\n            self.connection_pool.nodes.slots[e.slot_id][0] = node\r\n        except TryAgainError as e:\r\n            if ttl < self.RedisClusterRequestTTL / 2:\r\n                time.sleep(0.05)\r\n        except AskError as e:\r\n            redirect_addr, asking = \"{0}:{1}\".format(e.host, e.port), True\r\n        finally:\r\n            self.connection_pool.release(r)\r\n\r\n    raise ClusterError('TTL exhausted.')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/329", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/329/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/329/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/329", "id": 493944262, "node_id": "MDU6SXNzdWU0OTM5NDQyNjI=", "number": 329, "title": "Read the Docs still uses StrictRedisCluster", "user": {"login": "adam-tokarski", "id": 10441317, "node_id": "MDQ6VXNlcjEwNDQxMzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/10441317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adam-tokarski", "html_url": "https://github.com/adam-tokarski", "followers_url": "https://api.github.com/users/adam-tokarski/followers", "following_url": "https://api.github.com/users/adam-tokarski/following{/other_user}", "gists_url": "https://api.github.com/users/adam-tokarski/gists{/gist_id}", "starred_url": "https://api.github.com/users/adam-tokarski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adam-tokarski/subscriptions", "organizations_url": "https://api.github.com/users/adam-tokarski/orgs", "repos_url": "https://api.github.com/users/adam-tokarski/repos", "events_url": "https://api.github.com/users/adam-tokarski/events{/privacy}", "received_events_url": "https://api.github.com/users/adam-tokarski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-16T09:40:15Z", "updated_at": "2019-09-16T11:17:23Z", "closed_at": "2019-09-16T10:03:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://redis-py-cluster.readthedocs.io/en/master/ is still suggesting an usage of `StrictRedisCluster`. One can find either in code or in [relase notes](https://github.com/Grokzen/redis-py-cluster/blob/master/docs/release-notes.rst) that it was changed, but it is confusing.\r\nWould be nice to update this documentation too,.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/327", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/327/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/327/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/327", "id": 482140938, "node_id": "MDU6SXNzdWU0ODIxNDA5Mzg=", "number": 327, "title": "Call client setname on a connection to cluster - currently blocked", "user": {"login": "mruki", "id": 10393047, "node_id": "MDQ6VXNlcjEwMzkzMDQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/10393047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruki", "html_url": "https://github.com/mruki", "followers_url": "https://api.github.com/users/mruki/followers", "following_url": "https://api.github.com/users/mruki/following{/other_user}", "gists_url": "https://api.github.com/users/mruki/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruki/subscriptions", "organizations_url": "https://api.github.com/users/mruki/orgs", "repos_url": "https://api.github.com/users/mruki/repos", "events_url": "https://api.github.com/users/mruki/events{/privacy}", "received_events_url": "https://api.github.com/users/mruki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-08-19T07:05:19Z", "updated_at": "2020-05-22T12:53:08Z", "closed_at": "2020-05-22T12:53:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like to `client setname` on connections to redis cluster using your library, but unfortunately they are in a 'blocked' list of commands, what prevents me from doing it.\r\n\r\nAre you able to suggest if there's any way to achieve it using your library?\r\n\r\nThanks in advance,\r\nKonrad", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/326", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/326/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/326/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/326", "id": 479154246, "node_id": "MDU6SXNzdWU0NzkxNTQyNDY=", "number": 326, "title": " Loosen the version constraint of redis to avoid dependency conflicts", "user": {"login": "NeolithEra", "id": 52778917, "node_id": "MDQ6VXNlcjUyNzc4OTE3", "avatar_url": "https://avatars2.githubusercontent.com/u/52778917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeolithEra", "html_url": "https://github.com/NeolithEra", "followers_url": "https://api.github.com/users/NeolithEra/followers", "following_url": "https://api.github.com/users/NeolithEra/following{/other_user}", "gists_url": "https://api.github.com/users/NeolithEra/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeolithEra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeolithEra/subscriptions", "organizations_url": "https://api.github.com/users/NeolithEra/orgs", "repos_url": "https://api.github.com/users/NeolithEra/repos", "events_url": "https://api.github.com/users/NeolithEra/events{/privacy}", "received_events_url": "https://api.github.com/users/NeolithEra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 737860906, "node_id": "MDU6TGFiZWw3Mzc4NjA5MDY=", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/gathering%20feedback", "name": "gathering feedback", "color": "efac8d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-08-09T20:28:18Z", "updated_at": "2019-09-21T01:17:42Z", "closed_at": "2019-09-14T16:35:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, _**redis-py-cluster**_ locked the version constraint of _**redis**_ as **_redis==2.10.6_**, which leads to a troubling scenario that its direct downstream project _**[arxiv-auth, scrapy-redis-bloomfilter-block-cluster,scrapy-redis-cluster,django-redis-cluster,dedis-cluster,redis-pubsub-dict,async-bowl,flask-cache-redis-cluster,iprange-python]**_ has to lock redis.\r\n\r\n\r\nCould you please loosen the version constraint of _**redis**_?\r\nBenefit of this is that users using both of _**[arxiv-auth, scrapy-redis-bloomfilter-block-cluster,scrapy-redis-cluster,django-redis-cluster,dedis-cluster,redis-pubsub-dict,async-bowl,flask-cache-redis-cluster,iprange-python]**_ and _**redis**_ can upgrade their third party libraries in a timely manner to reduce technical debts.\r\n\r\n\r\n\r\n\r\n\r\n### Solution\r\n\r\nThe dependency trees of your project and affected downstream projects are shown as follows.\r\nTaking the version constraints of upstream and downstream projects into comprehensive consideration, you can\r\n\r\n1.\tLoosen redis==2.10.6 to be redis>=2.10.6.\r\n2.\tLoosen redis==2.10.6 to be redis==*.\r\n3.\tTry to add an upper bound for redis version constraint, according to your compatibility.\r\n\r\n@Grokzen   Please let me know your choice. I can submit a PR to fix this issue.\r\n\r\nThanks for your attention.\r\nBest,\r\nNeolith\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/323", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/323/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/323/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/323", "id": 452853990, "node_id": "MDU6SXNzdWU0NTI4NTM5OTA=", "number": 323, "title": "ImportError: cannot import name 'b'", "user": {"login": "ayay129", "id": 31658398, "node_id": "MDQ6VXNlcjMxNjU4Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/31658398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayay129", "html_url": "https://github.com/ayay129", "followers_url": "https://api.github.com/users/ayay129/followers", "following_url": "https://api.github.com/users/ayay129/following{/other_user}", "gists_url": "https://api.github.com/users/ayay129/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayay129/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayay129/subscriptions", "organizations_url": "https://api.github.com/users/ayay129/orgs", "repos_url": "https://api.github.com/users/ayay129/repos", "events_url": "https://api.github.com/users/ayay129/events{/privacy}", "received_events_url": "https://api.github.com/users/ayay129/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-06T06:29:45Z", "updated_at": "2019-06-08T10:01:50Z", "closed_at": "2019-06-08T10:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "from redis._compat import b. \r\nthere have no module named b in redis._compat", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/321", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/321/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/321/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/321", "id": 449282932, "node_id": "MDU6SXNzdWU0NDkyODI5MzI=", "number": 321, "title": "Multiple start up nodes caused connection slow and timeout.", "user": {"login": "porfavor", "id": 1224203, "node_id": "MDQ6VXNlcjEyMjQyMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1224203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/porfavor", "html_url": "https://github.com/porfavor", "followers_url": "https://api.github.com/users/porfavor/followers", "following_url": "https://api.github.com/users/porfavor/following{/other_user}", "gists_url": "https://api.github.com/users/porfavor/gists{/gist_id}", "starred_url": "https://api.github.com/users/porfavor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/porfavor/subscriptions", "organizations_url": "https://api.github.com/users/porfavor/orgs", "repos_url": "https://api.github.com/users/porfavor/repos", "events_url": "https://api.github.com/users/porfavor/events{/privacy}", "received_events_url": "https://api.github.com/users/porfavor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-28T13:53:11Z", "updated_at": "2019-05-28T13:56:56Z", "closed_at": "2019-05-28T13:56:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the latest version 1.3.6\r\nWhen I used 7 startup nodes to init RedisCluster, it took several seconds to return. \r\nWhen I tried to do some basic set/get very slow either, even got timeout, when I do set('test', 123).\r\nIf I use fewer startup nodes like 1 or 2, it works fine.\r\nThe cluster has 7 master node.\r\n\r\nWhat's the difference using different number of startup nodes?\r\nWhy so slow when using 7 nodes? Any restriction or bug here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/320", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/320/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/320/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/320", "id": 445544732, "node_id": "MDU6SXNzdWU0NDU1NDQ3MzI=", "number": 320, "title": "A hello-world test takes 130s", "user": {"login": "liavkoren", "id": 5854101, "node_id": "MDQ6VXNlcjU4NTQxMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5854101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liavkoren", "html_url": "https://github.com/liavkoren", "followers_url": "https://api.github.com/users/liavkoren/followers", "following_url": "https://api.github.com/users/liavkoren/following{/other_user}", "gists_url": "https://api.github.com/users/liavkoren/gists{/gist_id}", "starred_url": "https://api.github.com/users/liavkoren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liavkoren/subscriptions", "organizations_url": "https://api.github.com/users/liavkoren/orgs", "repos_url": "https://api.github.com/users/liavkoren/repos", "events_url": "https://api.github.com/users/liavkoren/events{/privacy}", "received_events_url": "https://api.github.com/users/liavkoren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-17T17:31:29Z", "updated_at": "2019-05-31T17:59:40Z", "closed_at": "2019-05-31T17:59:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. We have a small test cluster that we've set up on AWS, which we are connecting to via an SSH tunnel. When I do basic hello-world test, the client works, *however commands take about two minutes to execute I'm not joking literally about two minutes.*\r\n\r\n```\r\nIn [1]: from rediscluster import StrictRedisCluster                                                                                                                                                                                                                           \r\nIn [2]: startup_nodes = [{\"host\": \"localhost\", \"port\": \"6380\"}]                                                                                                                                                                                                               \r\nIn [3]: rc = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True)\r\nIn [5]: rc.set('foo', 'bar')                                                                                                                                                                                                                                                  \r\nOut[5]: True\r\n...\r\nIn [17]: cProfile.runctx('rc.get(\"foo\")', globals(), locals())                                                                                                                                                                                                                \r\n        192 function calls in 130.967 seconds\r\n\r\n   Ordered by: standard name\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        1    0.000    0.000  130.967  130.967 <string>:1(<module>)\r\n        1    0.000    0.000    0.000    0.000 _compat.py:150(byte_to_chr)\r\n        6    0.000    0.000    0.000    0.000 _compat.py:159(b)\r\n        1    0.000    0.000    0.014    0.014 _compat.py:78(recv)\r\n        1    0.000    0.000    0.000    0.000 client.py:272(_determine_slot)\r\n        1    0.000    0.000    0.000    0.000 client.py:302(determine_node)\r\n        1    0.000    0.000  130.967  130.967 client.py:321(execute_command)\r\n        1    0.000    0.000    0.015    0.015 client.py:678(parse_response)\r\n        1    0.000    0.000  130.967  130.967 client.py:972(get)\r\n        4    0.000    0.000    0.000    0.000 connection.py:105(encode)\r\n        1    0.000    0.000    0.000    0.000 connection.py:122(decode)\r\n        1    0.000    0.000    0.000    0.000 connection.py:162(length)\r\n        1    0.000    0.000    0.014    0.014 connection.py:166(_read_from_socket)\r\n        4    0.000    0.000    0.000    0.000 connection.py:176(_checkpid)\r\n        1    0.000    0.000    0.000    0.000 connection.py:193(read)\r\n        1    0.000    0.000    0.014    0.014 connection.py:210(readline)\r\n        1    0.000    0.000    0.000    0.000 connection.py:229(purge)\r\n        2    0.000    0.000    0.000    0.000 connection.py:238(release)\r\n        1    0.000    0.000    0.000    0.000 connection.py:280(get_random_connection)\r\n        1    0.000    0.000    0.015    0.015 connection.py:283(read_response)\r\n        2    0.000    0.000    0.000    0.000 connection.py:313(get_connection_by_node)\r\n        1    0.000    0.000    0.000    0.000 connection.py:330(get_master_node_by_slot)\r\n        1    0.000    0.000    0.000    0.000 connection.py:335(get_node_by_slot)\r\n        1    0.000    0.000  130.952  130.952 connection.py:479(connect)\r\n        1    0.000    0.000  130.952  130.952 connection.py:504(_connect)\r\n        1    0.000    0.000    0.000    0.000 connection.py:544(_error_message)\r\n        2    0.000    0.000  130.952   65.476 connection.py:582(send_packed_command)\r\n        2    0.000    0.000  130.952   65.476 connection.py:608(send_command)\r\n        1    0.000    0.000    0.015    0.015 connection.py:621(read_response)\r\n        2    0.000    0.000    0.000    0.000 connection.py:632(pack_command)\r\n        2    0.000    0.000    0.000    0.000 connection.py:71(get_token)\r\n        1    0.000    0.000    0.000    0.000 crc.py:42(_crc16_py3)\r\n        2    0.000    0.000    0.000    0.000 enum.py:267(__call__)\r\n        2    0.000    0.000    0.000    0.000 enum.py:517(__new__)\r\n        1    0.000    0.000    0.000    0.000 idna.py:147(encode)\r\n        2    0.000    0.000    0.000    0.000 nodemanager.py:105(random_startup_node_ittr)\r\n        2    0.000    0.000    0.000    0.000 nodemanager.py:279(set_node_name)\r\n        1    0.000    0.000    0.000    0.000 nodemanager.py:44(encode)\r\n        1    0.000    0.000    0.000    0.000 nodemanager.py:62(keyslot)\r\n        1    0.000    0.000    0.000    0.000 random.py:223(_randbelow)\r\n        1    0.000    0.000    0.000    0.000 random.py:255(choice)\r\n        1    0.000    0.000    0.000    0.000 socket.py:139(__init__)\r\n        1    0.000    0.000    0.000    0.000 socket.py:409(_real_close)\r\n        1    0.000    0.000    0.000    0.000 socket.py:413(close)\r\n        1    0.000    0.000    0.000    0.000 socket.py:728(getaddrinfo)\r\n        2    0.000    0.000    0.000    0.000 socket.py:97(_intenum_converter)\r\n        1    0.000    0.000  130.967  130.967 utils.py:97(inner)\r\n        1    0.000    0.000    0.000    0.000 {built-in method _socket.getaddrinfo}\r\n        1    0.000    0.000    0.000    0.000 {built-in method builtins.chr}\r\n        1    0.000    0.000  130.967  130.967 {built-in method builtins.exec}\r\n       30    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}\r\n       26    0.000    0.000    0.000    0.000 {built-in method builtins.len}\r\n        4    0.000    0.000    0.000    0.000 {built-in method posix.getpid}\r\n        1    0.000    0.000    0.000    0.000 {built-in method sys.exc_info}\r\n        2    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}\r\n        5    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}\r\n        1  130.952  130.952  130.952  130.952 {method 'connect' of '_socket.socket' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}\r\n       10    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'endswith' of 'bytes' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'find' of 'bytes' objects}\r\n        5    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}\r\n        6    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'read' of '_io.BytesIO' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BytesIO' objects}\r\n        1    0.014    0.014    0.014    0.014 {method 'recv' of '_socket.socket' objects}\r\n        2    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}\r\n        5    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BytesIO' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'sendall' of '_socket.socket' objects}\r\n        4    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'setsockopt' of '_socket.socket' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'settimeout' of '_socket.socket' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'split' of 'bytes' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'truncate' of '_io.BytesIO' objects}\r\n        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}\r\n```\r\n\r\nAs you can see, the profiler believes that the program is spending about 130 seconds in a socket method call. \r\n\r\nImportantly, I can connect to the cluster with redis-cli and do these same operations instantaneously, so I don't believe this is purely a network level issue. \r\n\r\nVersions info:\r\nredis==2.10.6\r\nredis-py-cluster==1.3.6\r\n\r\nPython 3.6.7 and Ubuntu 18.04.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/319", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/319/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/319/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/319", "id": 442083996, "node_id": "MDU6SXNzdWU0NDIwODM5OTY=", "number": 319, "title": "Wrong number of args calling Redis command From Lua script", "user": {"login": "jeremyzhou", "id": 6510252, "node_id": "MDQ6VXNlcjY1MTAyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6510252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremyzhou", "html_url": "https://github.com/jeremyzhou", "followers_url": "https://api.github.com/users/jeremyzhou/followers", "following_url": "https://api.github.com/users/jeremyzhou/following{/other_user}", "gists_url": "https://api.github.com/users/jeremyzhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremyzhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremyzhou/subscriptions", "organizations_url": "https://api.github.com/users/jeremyzhou/orgs", "repos_url": "https://api.github.com/users/jeremyzhou/repos", "events_url": "https://api.github.com/users/jeremyzhou/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremyzhou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-09T07:12:32Z", "updated_at": "2019-05-09T10:18:57Z", "closed_at": "2019-05-09T10:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Error print:**\r\n```\r\nError running script (call to f_d8fc9f4469dc3bea9662f1af23a225c6fbd33622): @user_script:12: @user_script: 12: Wrong number of args calling Redis command From Lua script : ResponseError\r\nTraceback (most recent call last):\r\nFile \"/var/task/lambda_function.py\", line 115, in POSTCheckin\r\n    return checkin(request)\r\nFile \"/var/task/lambda_function.py\", line 147, in checkin\r\n    get_secret_and_expiry(r, auth)\r\nFile \"/var/task/lambda_function.py\", line 315, in get_secret_and_expiry\r\n    int(time.time()), auth[\"nonce\"])\r\nFile \"/var/task/redis/client.py\", line 2067, in eval\r\n    return self.execute_command('EVAL', script, numkeys, *keys_and_args)\r\nFile \"/var/task/rediscluster/utils.py\", line 101, in inner\r\n    return func(*args, **kwargs)\r\nFile \"/var/task/rediscluster/client.py\", line 371, in execute_command\r\n    return self.parse_response(r, command, **kwargs)\r\nFile \"/var/task/redis/client.py\", line 680, in parse_response\r\n    response = connection.read_response()\r\nFile \"/var/task/redis/connection.py\", line 629, in read_response\r\n    raise response\r\nResponseError: Error running script (call to f_d8fc9f4469dc3bea9662f1af23a225c6fbd33622): \r\n\r\n@user_script:12: @user_script: 12: Wrong number of args calling Redis command From Lua script\r\n```\r\n\r\n**code**\r\n\r\n```\r\ndef create_redis():\r\n    settings = load_env(load_config())\r\n    #return redis.StrictRedis(host=settings[\"redis\"][\"host\"])\r\n    startup_nodes = [{\"host\": settings[\"redis\"][\"host\"], \"port\": 6379}]\r\n    return RedisCluster(startup_nodes=startup_nodes, skip_full_coverage_check=True)\r\n\r\ndef get_secret_and_expiry(redis_, auth):\r\n    lua = \"\"\"\r\n        redis.call(\"ZREMRANGEBYSCORE\", \"nonce\", 0, ARGV[1] - 900)\r\n        local valid_nonce = redis.call(\"ZADD\", \"nonce\", \"NX\", ARGV[1], ARGV[2])\r\n        if valid_nonce ~= 1 then\r\n            return {\"ERR\", \"INVALID_NONCE\", \"\", \"\"}\r\n        end\r\n        local mac_exists = redis.call(\"EXISTS\", KEYS[1])\r\n        if mac_exists ~= 1 then\r\n            return {\"ERR\", \"DEVICE_NOT_FOUND\", \"\", \"\"}\r\n        end\r\n        local result = redis.call(\"GET\", KEYS[1], \"secret\",\r\n                                                    \"device_pairing\",\r\n                                                    \"expiry_time\")\r\n        return {\"OK\", result[1], result[2], result[3]}\r\n    \"\"\"\r\n\r\n    **return redis_.eval(lua, 1, \"{device/\" + auth[\"id\"].lower()+\"}\", int(time.time()), auth[\"nonce\"])**\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/318", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/318/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/318/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/318", "id": 433268665, "node_id": "MDU6SXNzdWU0MzMyNjg2NjU=", "number": 318, "title": "Move command with a different slot causes a TTL exhausted.", "user": {"login": "mat013", "id": 12953497, "node_id": "MDQ6VXNlcjEyOTUzNDk3", "avatar_url": "https://avatars3.githubusercontent.com/u/12953497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mat013", "html_url": "https://github.com/mat013", "followers_url": "https://api.github.com/users/mat013/followers", "following_url": "https://api.github.com/users/mat013/following{/other_user}", "gists_url": "https://api.github.com/users/mat013/gists{/gist_id}", "starred_url": "https://api.github.com/users/mat013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mat013/subscriptions", "organizations_url": "https://api.github.com/users/mat013/orgs", "repos_url": "https://api.github.com/users/mat013/repos", "events_url": "https://api.github.com/users/mat013/events{/privacy}", "received_events_url": "https://api.github.com/users/mat013/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-15T12:59:48Z", "updated_at": "2019-04-19T05:25:54Z", "closed_at": "2019-04-18T07:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "While testing a redis cluster I discovered some strange behaviour, which I am unsure where the bug lies.\r\n\r\nThe issue is when a move response is returned with another slot than the one decided in the  execute in the StrictRedisCluster:\r\n\r\nThe issue is the following code snippet in the execute_method in StrictRedisCluster:\r\n    @clusterdown_wrapper\r\n    def execute_command(self, *args, **kwargs):\r\n        ...\r\na)     slot = self._determine_slot(*args)\r\n        while ttl > 0:\r\n            if asking:\r\n               ...\r\n            else:\r\n                if self.refresh_table_asap:\r\n                    # MOVED\r\nb)                  node = self.connection_pool.get_master_node_by_slot(slot)\r\n                else:\r\n                    node = self.connection_pool.get_node_by_slot(slot)\r\nc)              r = self.connection_pool.get_connection_by_node(node)\r\n\r\n            try:\r\n                ...\r\nd)              r.send_command(*args)\r\ne)              return self.parse_response(r, command, **kwargs)\r\n                ...\r\n            except MovedError as e:\r\n                # Reinitialize on ever x number of MovedError.\r\n                # This counter will increase faster when the same client object\r\n                # is shared between multiple threads. To reduce the frequency you\r\n                # can set the variable 'reinitialize_steps' in the constructor.\r\n                self.refresh_table_asap = True\r\n                self.connection_pool.nodes.increment_reinitialize_counter()\r\n\r\nf)                node = self.connection_pool.nodes.set_node(e.host, e.port, server_type='master')\r\ng)                self.connection_pool.nodes.slots[e.slot_id][0] = node\r\n\r\n\r\n\r\nWhat we have seen is follows:\r\n\r\na slot is computed on the client and return let us say slot s1... item a)\r\nnode n1 is resolved by mapping the master slot of s1 to a node... item b)\r\nand connection is resolved from n1... item c)\r\nrequest is sent... item d)\r\nthe response is parsed which is a move command with slot s2 and node n2 and an exception is thrown ... item e)\r\na new node n3 will be created with the information from the exception... item f)\r\nthe slot n2 is not updated with the n3 node.\r\nand everything is retried again.\r\n\r\nThe slot is calculated to s1, which then is resolved to n1\r\n\r\nWhat I think should happen is either:\r\n\r\n1. s1 should be resolved to n3 \r\n2 the slot variable should be updated to contain the s2 value\r\n\r\nWhat seem quite strange around this is that the server and the client do not compute to the same slot. \r\n\r\na key which basically is a json string, which contained a lot of curly braces, which may have been the issue. \r\n\r\nBut if solution 1 is correct it means that line g: \r\n\r\nself.connection_pool.nodes.slots[e.slot_id][0] = node\r\n\r\nhas to be corrected to self.connection_pool.nodes.slots[slot_id][0] = node\r\n\r\nIf solution 2 is correct \r\nThen following line should be added after g:\r\n                slot = e.slot_id\r\n\r\nI am unsure if one should follow what the server responds or the client should follow what it has?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/317", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/317/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/317/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/317", "id": 430042055, "node_id": "MDU6SXNzdWU0MzAwNDIwNTU=", "number": 317, "title": "Contradictory documentation about pipelines", "user": {"login": "lodo1995", "id": 13088092, "node_id": "MDQ6VXNlcjEzMDg4MDky", "avatar_url": "https://avatars3.githubusercontent.com/u/13088092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lodo1995", "html_url": "https://github.com/lodo1995", "followers_url": "https://api.github.com/users/lodo1995/followers", "following_url": "https://api.github.com/users/lodo1995/following{/other_user}", "gists_url": "https://api.github.com/users/lodo1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/lodo1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lodo1995/subscriptions", "organizations_url": "https://api.github.com/users/lodo1995/orgs", "repos_url": "https://api.github.com/users/lodo1995/repos", "events_url": "https://api.github.com/users/lodo1995/events{/privacy}", "received_events_url": "https://api.github.com/users/lodo1995/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-06T14:58:36Z", "updated_at": "2019-04-09T14:46:34Z", "closed_at": "2019-04-08T09:20:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [Limitations and differences](https://redis-py-cluster.readthedocs.io/en/master/limitations-and-differences.html) page of the documentation states:\r\n\r\n> Pipelines do not work the same way in a cluster. In StrictRedis it batch all commands so that they can be executed at the same time when requested. But with RedisCluster pipelines will send the command directly to the server when it is called, but it will still store the result internally and return the same data from .execute(). This is done so that the code still behaves like a pipeline and no code will break. A better solution will be implemented in the future.\r\n\r\nThe [Pipelines](https://redis-py-cluster.readthedocs.io/en/master/pipelines.html) page, on the other hand, states:\r\n\r\n> Just like in redis-py, redis-py-cluster queues up all the commands inside the client until execute is called. But, once execute is called, redis-py-cluster internals work slightly differently. It still packs the commands to efficiently transmit multiple commands across the network. But since different keys may be mapped to different nodes, redis-py-cluster must first map each key to the expected node. It then packs all the commands destined for each node in the cluster into its own packed sequence of commands. It uses the redis-py library to communicate with each node in the cluster.\r\n\r\nSo, are pipelines batching commands in N batches, where N is the number of partitions, as the second doc suggests, or are pipelines executing all commands one by one, as the first doc suggests?\r\n\r\nMy feeling is that the first doc might be outdated. In any case, it's clear that at least one of them must be redacted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/314", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/314/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/314/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/314", "id": 423801872, "node_id": "MDU6SXNzdWU0MjM4MDE4NzI=", "number": 314, "title": "Error configuring cache backend in Django", "user": {"login": "engstrom", "id": 4333033, "node_id": "MDQ6VXNlcjQzMzMwMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4333033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/engstrom", "html_url": "https://github.com/engstrom", "followers_url": "https://api.github.com/users/engstrom/followers", "following_url": "https://api.github.com/users/engstrom/following{/other_user}", "gists_url": "https://api.github.com/users/engstrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/engstrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/engstrom/subscriptions", "organizations_url": "https://api.github.com/users/engstrom/orgs", "repos_url": "https://api.github.com/users/engstrom/repos", "events_url": "https://api.github.com/users/engstrom/events{/privacy}", "received_events_url": "https://api.github.com/users/engstrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-21T15:46:48Z", "updated_at": "2019-03-21T16:16:37Z", "closed_at": "2019-03-21T16:16:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a way to use `redis-py-cluster` as a cache backend in Django? I found [this comment in a django-redis issue](https://github.com/niwinz/django-redis/issues/208#issuecomment-352585533) but when I try this with my ElastiCache Redis cluster's configuration endpoint I get this error:\r\n\r\n```\r\nrediscluster.exceptions.RedisClusterException: Redis Cluster cannot be connected. Please provide at least one reachable node.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/313", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/313/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/313/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/313", "id": 420286527, "node_id": "MDU6SXNzdWU0MjAyODY1Mjc=", "number": 313, "title": "Create configurable value for ClusterDownException retry count", "user": {"login": "smiller393", "id": 1131609, "node_id": "MDQ6VXNlcjExMzE2MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1131609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smiller393", "html_url": "https://github.com/smiller393", "followers_url": "https://api.github.com/users/smiller393/followers", "following_url": "https://api.github.com/users/smiller393/following{/other_user}", "gists_url": "https://api.github.com/users/smiller393/gists{/gist_id}", "starred_url": "https://api.github.com/users/smiller393/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smiller393/subscriptions", "organizations_url": "https://api.github.com/users/smiller393/orgs", "repos_url": "https://api.github.com/users/smiller393/repos", "events_url": "https://api.github.com/users/smiller393/events{/privacy}", "received_events_url": "https://api.github.com/users/smiller393/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-13T02:20:20Z", "updated_at": "2020-03-03T18:15:54Z", "closed_at": "2020-03-03T18:15:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, when a request fails due to a \"ClusterDownException\", a hard-coded count of 3 attempts are made to retry the command, and each time there is an attempt to recreate the connection to the redis cluster. This is a costly attempt, which over multiple commands is adding up to several seconds in my case. One possible way to reduce the overhead with these attempts is to have a configuration option for line linked below that would allow the user to specify that they would not like to reattempt to create the cluster connection. \r\n\r\nhttps://github.com/Grokzen/redis-py-cluster/blob/83fcb56765c873d0988e55a9255e55367ac2975e/rediscluster/utils.py#L99\r\n\r\n\r\nThis is one idea, but am open to other suggestions that could basically speed up the request failure when the redis cluster is down. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/312", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/312/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/312/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/312", "id": 417024515, "node_id": "MDU6SXNzdWU0MTcwMjQ1MTU=", "number": 312, "title": "ERROR sending 'cluster slots' command to redis server", "user": {"login": "damonLL", "id": 7375598, "node_id": "MDQ6VXNlcjczNzU1OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7375598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damonLL", "html_url": "https://github.com/damonLL", "followers_url": "https://api.github.com/users/damonLL/followers", "following_url": "https://api.github.com/users/damonLL/following{/other_user}", "gists_url": "https://api.github.com/users/damonLL/gists{/gist_id}", "starred_url": "https://api.github.com/users/damonLL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damonLL/subscriptions", "organizations_url": "https://api.github.com/users/damonLL/orgs", "repos_url": "https://api.github.com/users/damonLL/repos", "events_url": "https://api.github.com/users/damonLL/events{/privacy}", "received_events_url": "https://api.github.com/users/damonLL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-04T22:35:50Z", "updated_at": "2019-06-17T21:35:13Z", "closed_at": "2019-03-05T00:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe this is a new instance of an old behavior.\r\n\r\nredis-py-cluster version 1.3.6\r\nPython version 2.7\r\nRedis version 5.0.3\r\n\r\nRunning AWS ElastiCache with cluster-mode-enabled turned on.\r\n\r\nHaving connected to the configuration server, and each of the individual nodes in my multi-shard environment, I can get the results of \"CLUSTER SLOTS\" from the command line and even through telnet, but I cannot from my Python script. \r\n\r\nOutput of redis-cli when I run it:\r\n\r\n```\r\nhidden name:6379> CLUSTER SLOTS\r\n1) 1) (integer) 0\r\n   2) (integer) 5461\r\n   3) 1) \"172.31.39.203\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n   4) 1) \"172.31.37.45\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n   5) 1) \"172.31.47.179\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n2) 1) (integer) 5462\r\n   2) (integer) 10922\r\n   3) 1) \"172.31.38.8\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n   4) 1) \"172.31.47.175\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n   5) 1) \"172.31.39.108\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n3) 1) (integer) 10923\r\n   2) (integer) 16383\r\n   3) 1) \"172.31.41.171\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n   4) 1) \"172.31.43.80\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n   5) 1) \"172.31.43.238\"\r\n      2) (integer) 6379\r\n      3) \"unique-id-hidden\"\r\n```\r\n\r\nAdditionally here is the output of `telnet` performing the same command so you can see the actual Redis protocol (I've removed the hostnames and unique ID's, so the actual length of those fields will probably not match the value expected, but that's because of manual editing)\r\n\r\n```\r\n\r\n[ec2-user@ip-172-31-43-226 ~]$ telnet my-cluster-name 6379\r\nTrying 172.31.47.179...\r\nConnected to my-cluster-name.\r\nEscape character is '^]'.\r\nCLUSTER SLOTS\r\n*3\r\n*5\r\n:0\r\n:5461\r\n*3\r\n$13\r\n172.31.39.203\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*3\r\n$12\r\n172.31.37.45\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*3\r\n$13\r\n172.31.47.179\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*5\r\n:5462\r\n:10922\r\n*3\r\n$11\r\n172.31.38.8\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*3\r\n$13\r\n172.31.47.175\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*3\r\n$13\r\n172.31.39.108\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*5\r\n:10923\r\n:16383\r\n*3\r\n$13\r\n172.31.41.171\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*3\r\n$12\r\n172.31.43.80\r\n:6379\r\n$40\r\nunique-id-hidden \r\n*3\r\n$13\r\n172.31.43.238\r\n:6379\r\n$40\r\nunique-id-hidden \r\n^]quit\r\n\r\ntelnet> quit\r\nConnection closed.\r\n```\r\n\r\nAs you can see both the Redis CLI as well as the telnet version of the command work; however, when I execute the code, I get this:\r\n\r\n```\r\nError: ERROR sending 'cluster slots' command to redis server: [{u'host': u'my-cluster-name', u'port': 6379}]\r\n```\r\n\r\nIf I can provide additional information please let me know. Any details about the environment will need to be communicated privately, however.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/310", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/310/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/310/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/310", "id": 411301037, "node_id": "MDU6SXNzdWU0MTEzMDEwMzc=", "number": 310, "title": "Getting TTL exhausted with AWS ElastiCache", "user": {"login": "martimarkov", "id": 1858736, "node_id": "MDQ6VXNlcjE4NTg3MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1858736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martimarkov", "html_url": "https://github.com/martimarkov", "followers_url": "https://api.github.com/users/martimarkov/followers", "following_url": "https://api.github.com/users/martimarkov/following{/other_user}", "gists_url": "https://api.github.com/users/martimarkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/martimarkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martimarkov/subscriptions", "organizations_url": "https://api.github.com/users/martimarkov/orgs", "repos_url": "https://api.github.com/users/martimarkov/repos", "events_url": "https://api.github.com/users/martimarkov/events{/privacy}", "received_events_url": "https://api.github.com/users/martimarkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-18T04:51:59Z", "updated_at": "2019-03-02T11:16:02Z", "closed_at": "2019-03-02T11:16:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting `TTL exhausted` with AWS ElastiCache Redis 5 Cluster.\r\n\r\nI've tried using the configuration endpoint from AWS as the host, tried adding all nodes in the shard to the `startup_nodes`, just the configuration endpoint to the `startup_nodes`. Nothing seems to be able to fix the issue. I'm running this inside EKS (AWS' Kubernetes service).\r\n\r\nI have a separate app deployed which uses nodejs and that one behaves correctly and returns the data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/303", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/303/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/303/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/303", "id": 397391807, "node_id": "MDU6SXNzdWUzOTczOTE4MDc=", "number": 303, "title": "ERROR sending 'config get cluster-require-full-coverage", "user": {"login": "15astro", "id": 17779264, "node_id": "MDQ6VXNlcjE3Nzc5MjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/17779264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/15astro", "html_url": "https://github.com/15astro", "followers_url": "https://api.github.com/users/15astro/followers", "following_url": "https://api.github.com/users/15astro/following{/other_user}", "gists_url": "https://api.github.com/users/15astro/gists{/gist_id}", "starred_url": "https://api.github.com/users/15astro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/15astro/subscriptions", "organizations_url": "https://api.github.com/users/15astro/orgs", "repos_url": "https://api.github.com/users/15astro/repos", "events_url": "https://api.github.com/users/15astro/events{/privacy}", "received_events_url": "https://api.github.com/users/15astro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-09T14:19:54Z", "updated_at": "2019-06-01T13:27:14Z", "closed_at": "2019-06-01T13:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @Grokzen,\r\n\r\nI am currently seeing many occurences of `ERROR sending 'config get cluster-require-full-coverage` while starting an application which used this redis-py-cluster driver.\r\n\r\nWhen checked here: https://github.com/Grokzen/redis-py-cluster/blob/unstable/rediscluster/nodemanager.py#L276 it expects at least one node in the cluster with `cluster-require-full-coverage yes`. With the cluster where `cluster-require-full-coverage` is set to `no` on all nodes, the error keeps re-appearing.\r\n\r\nWhen `cluster-require-full-coverage` was set to `yes` on one of the nodes intentionally, it stops throwing above error.\r\n\r\nIf the value of skip_full_coverage_check is set to True here: https://github.com/Grokzen/redis-py-cluster/blob/unstable/rediscluster/nodemanager.py#L38 it doesn't throw and error.\r\n\r\nPlease suggest.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/301", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/301/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/301/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/301", "id": 395325421, "node_id": "MDU6SXNzdWUzOTUzMjU0MjE=", "number": 301, "title": "TTL exhausted", "user": {"login": "15astro", "id": 17779264, "node_id": "MDQ6VXNlcjE3Nzc5MjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/17779264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/15astro", "html_url": "https://github.com/15astro", "followers_url": "https://api.github.com/users/15astro/followers", "following_url": "https://api.github.com/users/15astro/following{/other_user}", "gists_url": "https://api.github.com/users/15astro/gists{/gist_id}", "starred_url": "https://api.github.com/users/15astro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/15astro/subscriptions", "organizations_url": "https://api.github.com/users/15astro/orgs", "repos_url": "https://api.github.com/users/15astro/repos", "events_url": "https://api.github.com/users/15astro/events{/privacy}", "received_events_url": "https://api.github.com/users/15astro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-01-02T17:47:15Z", "updated_at": "2020-01-08T09:42:04Z", "closed_at": "2019-01-03T14:41:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am frequently facing TTL exhausted error with the recent version of this redis-py-cluster driver. \r\nThere seem to be some timeouts before TTL depending on maxRedirects. Many of the operations on redis being executed within micro or milliseconds. \r\n\r\nThe socket_timeout and socket_connect_timeout is set to 2.0.\r\n\r\nThere isn't any change in the cluster slots allocation just to reduce the possibility of MOVED errors.\r\n\r\nWhat are the possible causes?\r\n\r\nRedis version 4.0.11.\r\n\r\n@Grokzen ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/299", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/299/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/299/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/299", "id": 390991804, "node_id": "MDU6SXNzdWUzOTA5OTE4MDQ=", "number": 299, "title": "Use plain RENAME command if src and dst is same slot", "user": {"login": "vivekfantain", "id": 5519418, "node_id": "MDQ6VXNlcjU1MTk0MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5519418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivekfantain", "html_url": "https://github.com/vivekfantain", "followers_url": "https://api.github.com/users/vivekfantain/followers", "following_url": "https://api.github.com/users/vivekfantain/following{/other_user}", "gists_url": "https://api.github.com/users/vivekfantain/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivekfantain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivekfantain/subscriptions", "organizations_url": "https://api.github.com/users/vivekfantain/orgs", "repos_url": "https://api.github.com/users/vivekfantain/repos", "events_url": "https://api.github.com/users/vivekfantain/events{/privacy}", "received_events_url": "https://api.github.com/users/vivekfantain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}, {"id": 1185065584, "node_id": "MDU6TGFiZWwxMTg1MDY1NTg0", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepting%20PR", "name": "Accepting PR", "color": "96f2c1", "default": false, "description": ""}, {"id": 40440912, "node_id": "MDU6TGFiZWw0MDQ0MDkxMg==", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-14T07:10:06Z", "updated_at": "2020-05-04T17:35:03Z", "closed_at": "2020-05-04T17:34:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Grokzen/redis-py-cluster/blob/01e2c4632f469b4567e47712add0bfaaceaa2830/rediscluster/client.py#L729\r\n\r\nI am seeing this code try to download the entire data and upload it.  I get it that this is needed if the data is across nodes.  But this does cause memory / performance issues if the data Is large.  Is there a way to ensure that we can use the Redis internal rename command if we know that the keys belong to the same slot?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/298", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/298/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/298/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/298", "id": 388253045, "node_id": "MDU6SXNzdWUzODgyNTMwNDU=", "number": 298, "title": "Single-slot cluster pub/sub?", "user": {"login": "jkaye2012", "id": 4085244, "node_id": "MDQ6VXNlcjQwODUyNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4085244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkaye2012", "html_url": "https://github.com/jkaye2012", "followers_url": "https://api.github.com/users/jkaye2012/followers", "following_url": "https://api.github.com/users/jkaye2012/following{/other_user}", "gists_url": "https://api.github.com/users/jkaye2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkaye2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkaye2012/subscriptions", "organizations_url": "https://api.github.com/users/jkaye2012/orgs", "repos_url": "https://api.github.com/users/jkaye2012/repos", "events_url": "https://api.github.com/users/jkaye2012/events{/privacy}", "received_events_url": "https://api.github.com/users/jkaye2012/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}, {"id": 1185065584, "node_id": "MDU6TGFiZWwxMTg1MDY1NTg0", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepting%20PR", "name": "Accepting PR", "color": "96f2c1", "default": false, "description": ""}, {"id": 40440912, "node_id": "MDU6TGFiZWw0MDQ0MDkxMg==", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-06T15:03:00Z", "updated_at": "2020-03-03T15:09:39Z", "closed_at": "2020-03-03T15:09:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been reading a bit about Pub/Sub in Redis Cluster and in redis-py-cluster specifically. If I were to set up a cluster with a single node (but multiple slaves), would I be correct in assuming that things would function correctly across clients in different languages? My thought is that this would mean there is only a single hash slot for things to go to.\r\n\r\nSecondarily, if the previous assumption is correct, what behavior should I expect in the case of a master failover with respect to subscriptions? Is this something handled by redis-py-cluster, or something that we should handle within our clients?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/297", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/297/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/297/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/297", "id": 386065962, "node_id": "MDU6SXNzdWUzODYwNjU5NjI=", "number": 297, "title": "NOAUTH authentication", "user": {"login": "565264946", "id": 35761664, "node_id": "MDQ6VXNlcjM1NzYxNjY0", "avatar_url": "https://avatars0.githubusercontent.com/u/35761664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/565264946", "html_url": "https://github.com/565264946", "followers_url": "https://api.github.com/users/565264946/followers", "following_url": "https://api.github.com/users/565264946/following{/other_user}", "gists_url": "https://api.github.com/users/565264946/gists{/gist_id}", "starred_url": "https://api.github.com/users/565264946/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/565264946/subscriptions", "organizations_url": "https://api.github.com/users/565264946/orgs", "repos_url": "https://api.github.com/users/565264946/repos", "events_url": "https://api.github.com/users/565264946/events{/privacy}", "received_events_url": "https://api.github.com/users/565264946/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-30T07:14:36Z", "updated_at": "2020-01-06T09:36:58Z", "closed_at": "2018-12-01T10:05:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello ,how to use StrictRedisCluster() if redis-cluster has password?  the traker message: redis.exception.ResponseError:NOAUTH authentication required", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/295", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/295/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/295/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/295", "id": 381634671, "node_id": "MDU6SXNzdWUzODE2MzQ2NzE=", "number": 295, "title": "Update codebase to work with redis-py 3.0.0", "user": {"login": "Grokzen", "id": 892309, "node_id": "MDQ6VXNlcjg5MjMwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/892309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Grokzen", "html_url": "https://github.com/Grokzen", "followers_url": "https://api.github.com/users/Grokzen/followers", "following_url": "https://api.github.com/users/Grokzen/following{/other_user}", "gists_url": "https://api.github.com/users/Grokzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Grokzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Grokzen/subscriptions", "organizations_url": "https://api.github.com/users/Grokzen/orgs", "repos_url": "https://api.github.com/users/Grokzen/repos", "events_url": "https://api.github.com/users/Grokzen/events{/privacy}", "received_events_url": "https://api.github.com/users/Grokzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}, {"id": 40440912, "node_id": "MDU6TGFiZWw0MDQ0MDkxMg==", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-16T15:01:29Z", "updated_at": "2019-08-20T09:17:57Z", "closed_at": "2019-08-20T09:17:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The latest release of redis-py 3.0.0 have several major breaking changes that needs to be ported and verified in this repo. For now the 1.3.x track will only support 2.10.6 and the plans is that when 1.4.0 is out it will only work with redis-py 3.0.0. If redis-py continues to support the 2.x version line the 1.3.x track in this repo will keep it supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/294", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/294/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/294/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/294", "id": 381103020, "node_id": "MDU6SXNzdWUzODExMDMwMjA=", "number": 294, "title": "ImportError: cannot import name b", "user": {"login": "samarth-goel-guavus", "id": 31237130, "node_id": "MDQ6VXNlcjMxMjM3MTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/31237130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samarth-goel-guavus", "html_url": "https://github.com/samarth-goel-guavus", "followers_url": "https://api.github.com/users/samarth-goel-guavus/followers", "following_url": "https://api.github.com/users/samarth-goel-guavus/following{/other_user}", "gists_url": "https://api.github.com/users/samarth-goel-guavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/samarth-goel-guavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samarth-goel-guavus/subscriptions", "organizations_url": "https://api.github.com/users/samarth-goel-guavus/orgs", "repos_url": "https://api.github.com/users/samarth-goel-guavus/repos", "events_url": "https://api.github.com/users/samarth-goel-guavus/events{/privacy}", "received_events_url": "https://api.github.com/users/samarth-goel-guavus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-11-15T10:46:18Z", "updated_at": "2019-08-27T14:09:45Z", "closed_at": "2018-11-16T14:58:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Redis 3.0.0 was released 1 hour back and it seems like redis-py-cluster is not compatible with it. Getting the following error:\r\n```\r\nvenv/lib/python2.7/site-packages/rediscluster/__init__.py:7: in <module>\r\n    from .client import StrictRedisCluster, RedisCluster\r\nvenv/lib/python2.7/site-packages/six.py:709: in exec_\r\n    exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")\r\nvenv/lib/python2.7/site-packages/rediscluster/client.py:10: in <module>\r\n    from .connection import (\r\nvenv/lib/python2.7/site-packages/six.py:709: in exec_\r\n    exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")\r\nvenv/lib/python2.7/site-packages/rediscluster/connection.py:11: in <module>\r\n    from .nodemanager import NodeManager\r\nvenv/lib/python2.7/site-packages/six.py:709: in exec_\r\n    exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")\r\nvenv/lib/python2.7/site-packages/rediscluster/nodemanager.py:12: in <module>\r\n    from redis._compat import b, unicode, bytes, long, basestring\r\nE   ImportError: cannot import name b\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/290", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/290/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/290/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/290", "id": 375863668, "node_id": "MDU6SXNzdWUzNzU4NjM2Njg=", "number": 290, "title": "Why RedisCluster pipeline method return StrictClusterPipeline?", "user": {"login": "ldnvnbl", "id": 3798479, "node_id": "MDQ6VXNlcjM3OTg0Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3798479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldnvnbl", "html_url": "https://github.com/ldnvnbl", "followers_url": "https://api.github.com/users/ldnvnbl/followers", "following_url": "https://api.github.com/users/ldnvnbl/following{/other_user}", "gists_url": "https://api.github.com/users/ldnvnbl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldnvnbl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldnvnbl/subscriptions", "organizations_url": "https://api.github.com/users/ldnvnbl/orgs", "repos_url": "https://api.github.com/users/ldnvnbl/repos", "events_url": "https://api.github.com/users/ldnvnbl/events{/privacy}", "received_events_url": "https://api.github.com/users/ldnvnbl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T09:11:33Z", "updated_at": "2018-10-31T09:13:57Z", "closed_at": "2018-10-31T09:13:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/288", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/288/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/288/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/288", "id": 371723395, "node_id": "MDU6SXNzdWUzNzE3MjMzOTU=", "number": 288, "title": "Clarify KeyError for missing slots", "user": {"login": "melinath", "id": 299979, "node_id": "MDQ6VXNlcjI5OTk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/299979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melinath", "html_url": "https://github.com/melinath", "followers_url": "https://api.github.com/users/melinath/followers", "following_url": "https://api.github.com/users/melinath/following{/other_user}", "gists_url": "https://api.github.com/users/melinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/melinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melinath/subscriptions", "organizations_url": "https://api.github.com/users/melinath/orgs", "repos_url": "https://api.github.com/users/melinath/repos", "events_url": "https://api.github.com/users/melinath/events{/privacy}", "received_events_url": "https://api.github.com/users/melinath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 737860906, "node_id": "MDU6TGFiZWw3Mzc4NjA5MDY=", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/gathering%20feedback", "name": "gathering feedback", "color": "efac8d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-18T21:35:25Z", "updated_at": "2019-08-19T21:34:58Z", "closed_at": "2019-08-19T21:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a cluster is partially up but not covering all slots, you would normally get an error like:\r\n\r\n```\r\nRedisClusterException: All slots are not covered after query all startup_nodes\r\n```\r\n\r\nHowever, if you have that check turned off by passing `skip_full_coverage_check=True` (for example because you use a redis server with no CONFIG in prod), you can still attempt to access the cluster. In that case, if you happen to hit a slot that points to a server in the cluster, you will get a ClusterDown error, which explains the issue relatively clearly.\r\n\r\nOn the other hand, if you hit a slot that _isn't_ covered by the cluster, you'll get a KeyError. Here's an example:\r\n\r\n```\r\nTraceback:\r\n[SNIP - django session middleware w/ cache backend]\r\nFile \"/usr/local/lib/python2.7/dist-packages/django/contrib/sessions/backends/cache.py\" in exists\r\n  71.         return session_key and (self.cache_key_prefix + session_key) in self._cache\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/django/core/cache/backends/base.py\" in __contains__\r\n  203.         return self.has_key(key)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/django_redis/cache.py\" in _decorator\r\n  32.             return method(self, *args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/django_redis/cache.py\" in has_key\r\n  124.         return self.client.has_key(*args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/django_redis/client/default.py\" in has_key\r\n  475.             return client.exists(key)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/redis/client.py\" in exists\r\n  951.         return self.execute_command('EXISTS', name)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/rediscluster/utils.py\" in inner\r\n  101.                 return func(*args, **kwargs)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/rediscluster/client.py\" in execute_command\r\n  361.                     node = self.connection_pool.get_node_by_slot(slot)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/rediscluster/connection.py\" in get_node_by_slot\r\n  338.         return self.get_master_node_by_slot(slot)\r\n\r\nFile \"/usr/local/lib/python2.7/dist-packages/rediscluster/connection.py\" in get_master_node_by_slot\r\n  333.         return self.nodes.slots[slot][0]\r\n\r\nException Type: KeyError at /account/continue/\r\nException Value: 12873\r\n```\r\n\r\nOn the surface, this obviously means that nodes.slots is dictionary-like and it doesn't have the given key set. However, it's not obvious why it doesn't have the key or whether it _should_ have the key without getting into the internals of how redis clustering and this library work.\r\n\r\nI think that the experience of using this library could potentially be improved by catching this KeyError and re-raising it as a different error with a more helpful message. For example, it could be reraised as `RedisClusterException(Slot not covered by cluster; nodes may be down)` or similar.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/287", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/287/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/287/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/287", "id": 371297425, "node_id": "MDU6SXNzdWUzNzEyOTc0MjU=", "number": 287, "title": "Intermittent KeyError from get_master_node_by_slot", "user": {"login": "melinath", "id": 299979, "node_id": "MDQ6VXNlcjI5OTk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/299979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melinath", "html_url": "https://github.com/melinath", "followers_url": "https://api.github.com/users/melinath/followers", "following_url": "https://api.github.com/users/melinath/following{/other_user}", "gists_url": "https://api.github.com/users/melinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/melinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melinath/subscriptions", "organizations_url": "https://api.github.com/users/melinath/orgs", "repos_url": "https://api.github.com/users/melinath/repos", "events_url": "https://api.github.com/users/melinath/events{/privacy}", "received_events_url": "https://api.github.com/users/melinath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-10-17T22:54:24Z", "updated_at": "2018-10-18T21:27:06Z", "closed_at": "2018-10-18T21:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using redis-py-cluster with some success in local dev, but users are intermittently getting a KeyError from get_master_node_by_slot, because the slot isn't set in `nodes.slots`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/286", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/286/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/286/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/286", "id": 370485231, "node_id": "MDU6SXNzdWUzNzA0ODUyMzE=", "number": 286, "title": "50% performance / throughput degradation after upgrading from 1.0.0 to 1.3.5", "user": {"login": "jeffwidman", "id": 483314, "node_id": "MDQ6VXNlcjQ4MzMxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffwidman", "html_url": "https://github.com/jeffwidman", "followers_url": "https://api.github.com/users/jeffwidman/followers", "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}", "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions", "organizations_url": "https://api.github.com/users/jeffwidman/orgs", "repos_url": "https://api.github.com/users/jeffwidman/repos", "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffwidman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 737860906, "node_id": "MDU6TGFiZWw3Mzc4NjA5MDY=", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/gathering%20feedback", "name": "gathering feedback", "color": "efac8d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-16T08:00:02Z", "updated_at": "2020-03-09T22:28:23Z", "closed_at": "2020-03-03T15:12:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We recently upgraded the version of `redis-py-cluster` used by one of our services from `1.0.0` to `1.3.5` and saw a large performance hit. The following graphs show what happened when we reverted back to `1.0.0`:\r\n1. CPU usage increased by 10% and Memory usage increased by 40%. This graph shows what happened when we reverted back to `1.0.0`:\r\n\r\n![image](https://user-images.githubusercontent.com/483314/47000077-498a8f00-d0dc-11e8-8029-4919a38c9a93.png)\r\n\r\n2. Throughput of the service decreased by 50% (again, graph shows performance improve after reverting)\r\n\r\n![image](https://user-images.githubusercontent.com/483314/47000069-41325400-d0dc-11e8-8931-46e9674949b8.png)\r\n\r\nThe team working on this has not had time to profile the code further yet. I asked them to run their code under `cProfile` but AFAIK that only provides CPU stats and not memory stats. We'll see what they come back with.\r\n\r\nI know you mentioned [the pipeline class got a major rewrite in 1.3.1](https://github.com/Grokzen/redis-py-cluster/issues/155#issuecomment-260146822), do you think that might have contributed to it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/285", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/285/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/285/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/285", "id": 370481665, "node_id": "MDU6SXNzdWUzNzA0ODE2NjU=", "number": 285, "title": "Add link to the RTD docs in the project about me", "user": {"login": "jeffwidman", "id": 483314, "node_id": "MDQ6VXNlcjQ4MzMxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/483314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffwidman", "html_url": "https://github.com/jeffwidman", "followers_url": "https://api.github.com/users/jeffwidman/followers", "following_url": "https://api.github.com/users/jeffwidman/following{/other_user}", "gists_url": "https://api.github.com/users/jeffwidman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffwidman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffwidman/subscriptions", "organizations_url": "https://api.github.com/users/jeffwidman/orgs", "repos_url": "https://api.github.com/users/jeffwidman/repos", "events_url": "https://api.github.com/users/jeffwidman/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffwidman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T07:49:45Z", "updated_at": "2018-10-17T19:36:25Z", "closed_at": "2018-10-17T19:36:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know the Readme prominently lists it, but it'd still be convenient to have the RTD linked to in the project's github description right up top... for example, see how we did it in `factory_boy`'s repo: https://github.com/FactoryBoy/factory_boy\r\n\r\n![image](https://user-images.githubusercontent.com/483314/47000665-9753c700-d0dd-11e8-82fb-3fd6fdcf06f8.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/281", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/281/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/281/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/281", "id": 365983350, "node_id": "MDU6SXNzdWUzNjU5ODMzNTA=", "number": 281, "title": "ClusterConnectionPool.from_url doesn't support ssl", "user": {"login": "melinath", "id": 299979, "node_id": "MDQ6VXNlcjI5OTk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/299979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melinath", "html_url": "https://github.com/melinath", "followers_url": "https://api.github.com/users/melinath/followers", "following_url": "https://api.github.com/users/melinath/following{/other_user}", "gists_url": "https://api.github.com/users/melinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/melinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melinath/subscriptions", "organizations_url": "https://api.github.com/users/melinath/orgs", "repos_url": "https://api.github.com/users/melinath/repos", "events_url": "https://api.github.com/users/melinath/events{/privacy}", "received_events_url": "https://api.github.com/users/melinath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}, {"id": 1185065584, "node_id": "MDU6TGFiZWwxMTg1MDY1NTg0", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepting%20PR", "name": "Accepting PR", "color": "96f2c1", "default": false, "description": ""}, {"id": 40440910, "node_id": "MDU6TGFiZWw0MDQ0MDkxMA==", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-02T16:38:35Z", "updated_at": "2020-05-06T13:07:42Z", "closed_at": "2020-05-06T13:07:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "ClusterConnectionPool.from_url supports ssl via the `rediss://` scheme. If that is set, it sets the connection_class for the pool to `SSLConnection`. For clustering to work, this needs to be re-set to `SSLClusterConnection`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/280", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/280/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/280/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/280", "id": 365104847, "node_id": "MDU6SXNzdWUzNjUxMDQ4NDc=", "number": 280, "title": "HSet method hanging", "user": {"login": "leon-lee-jl", "id": 21172681, "node_id": "MDQ6VXNlcjIxMTcyNjgx", "avatar_url": "https://avatars2.githubusercontent.com/u/21172681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leon-lee-jl", "html_url": "https://github.com/leon-lee-jl", "followers_url": "https://api.github.com/users/leon-lee-jl/followers", "following_url": "https://api.github.com/users/leon-lee-jl/following{/other_user}", "gists_url": "https://api.github.com/users/leon-lee-jl/gists{/gist_id}", "starred_url": "https://api.github.com/users/leon-lee-jl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leon-lee-jl/subscriptions", "organizations_url": "https://api.github.com/users/leon-lee-jl/orgs", "repos_url": "https://api.github.com/users/leon-lee-jl/repos", "events_url": "https://api.github.com/users/leon-lee-jl/events{/privacy}", "received_events_url": "https://api.github.com/users/leon-lee-jl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-29T06:59:53Z", "updated_at": "2019-01-08T18:31:18Z", "closed_at": "2019-01-08T18:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use hset command, but it hangs there all the time. Here is my code, \r\n\r\nstartup_nodes = [\r\n    {\"host\": \"XX.XX.XX.XX\", \"port\": 6379},\r\n    {\"host\": \"XX.XX.XX.XX\", \"port\": 6379},\r\n    {\"host\": \"XX.XX.XX.XX\", \"port\": 6379},\r\n]\r\nredis = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True)\r\n\r\nfor data in datalist:\r\n    redis.hset(\"hashname\", data.lower(), data)\r\n\r\nAny ideas? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/279", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/279/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/279/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/279", "id": 365084778, "node_id": "MDU6SXNzdWUzNjUwODQ3Nzg=", "number": 279, "title": "KeyError when using StrictRedisCluster.from_url with startup_nodes", "user": {"login": "yzf", "id": 1593511, "node_id": "MDQ6VXNlcjE1OTM1MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1593511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzf", "html_url": "https://github.com/yzf", "followers_url": "https://api.github.com/users/yzf/followers", "following_url": "https://api.github.com/users/yzf/following{/other_user}", "gists_url": "https://api.github.com/users/yzf/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzf/subscriptions", "organizations_url": "https://api.github.com/users/yzf/orgs", "repos_url": "https://api.github.com/users/yzf/repos", "events_url": "https://api.github.com/users/yzf/events{/privacy}", "received_events_url": "https://api.github.com/users/yzf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 737860906, "node_id": "MDU6TGFiZWw3Mzc4NjA5MDY=", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/gathering%20feedback", "name": "gathering feedback", "color": "efac8d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-29T01:43:02Z", "updated_at": "2020-05-18T17:11:00Z", "closed_at": "2020-05-06T13:32:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "when using StrictRedisCluster.from_url with startup_nodes, it will lead to KeyError, because when constructing of startup_nodes, `connection = self.connection_class(host=node[\"host\"], port=node[\"port\"], **self.connection_kwargs)`, the self.connection_kwargs already has `host` and `port` arguement in it, simple example as below:\r\n\r\n```\r\nfrom rediscluster import StrictRedisCluster\r\n\r\n\r\nstartup_nodes = [{'host': '172.17.0.2', 'port': 7000}, {'host': '172.17.0.2', 'port': 7001}]\r\nrc = StrictRedisCluster.from_url(\r\n    url='redis://172.17.0.2:7000',\r\n    decode_responses=True,\r\n    startup_nodes=startup_nodes,\r\n)\r\n\r\nprint(rc.get('name'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/278", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/278/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/278/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/278", "id": 364035681, "node_id": "MDU6SXNzdWUzNjQwMzU2ODE=", "number": 278, "title": "'ResponseError' object has no attribute 'message'", "user": {"login": "Basalex", "id": 18317021, "node_id": "MDQ6VXNlcjE4MzE3MDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/18317021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Basalex", "html_url": "https://github.com/Basalex", "followers_url": "https://api.github.com/users/Basalex/followers", "following_url": "https://api.github.com/users/Basalex/following{/other_user}", "gists_url": "https://api.github.com/users/Basalex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Basalex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Basalex/subscriptions", "organizations_url": "https://api.github.com/users/Basalex/orgs", "repos_url": "https://api.github.com/users/Basalex/repos", "events_url": "https://api.github.com/users/Basalex/events{/privacy}", "received_events_url": "https://api.github.com/users/Basalex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}, {"id": 1185065584, "node_id": "MDU6TGFiZWwxMTg1MDY1NTg0", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepting%20PR", "name": "Accepting PR", "color": "96f2c1", "default": false, "description": ""}, {"id": 40440910, "node_id": "MDU6TGFiZWw0MDQ0MDkxMA==", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/type:%20bug", "name": "type: bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-26T13:40:02Z", "updated_at": "2019-07-23T19:54:21Z", "closed_at": "2019-07-23T19:54:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "nodemanager.py - > line 180. ResponseError object tries to use message attribute, but message attribute was mark deprecated in 2.6 and was removed in further versions", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/277", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/277/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/277/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/277", "id": 363976710, "node_id": "MDU6SXNzdWUzNjM5NzY3MTA=", "number": 277, "title": "rename failed", "user": {"login": "xuhj001", "id": 16314239, "node_id": "MDQ6VXNlcjE2MzE0MjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16314239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuhj001", "html_url": "https://github.com/xuhj001", "followers_url": "https://api.github.com/users/xuhj001/followers", "following_url": "https://api.github.com/users/xuhj001/following{/other_user}", "gists_url": "https://api.github.com/users/xuhj001/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuhj001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuhj001/subscriptions", "organizations_url": "https://api.github.com/users/xuhj001/orgs", "repos_url": "https://api.github.com/users/xuhj001/repos", "events_url": "https://api.github.com/users/xuhj001/events{/privacy}", "received_events_url": "https://api.github.com/users/xuhj001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-26T11:14:25Z", "updated_at": "2018-09-26T11:28:11Z", "closed_at": "2018-09-26T11:28:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "  r.rename('gtest', 'gtest1')\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/client.py\", line 740, in rename\r\n    data = self.dump(src)\r\n  File \"/usr/lib/python2.7/site-packages/redis/client.py\", line 947, in dump\r\n    return self.execute_command('DUMP', name)\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/utils.py\", line 101, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/client.py\", line 371, in execute_command\r\n    return self.parse_response(r, command, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/redis/client.py\", line 680, in parse_response\r\n    response = connection.read_response()\r\n  File \"/usr/lib/python2.7/site-packages/redis/connection.py\", line 624, in read_response\r\n    response = self._parser.read_response()\r\n  File \"/usr/lib/python2.7/site-packages/redis/connection.py\", line 326, in read_response\r\n    response = self.encoder.decode(response)\r\n  File \"/usr/lib/python2.7/site-packages/redis/connection.py\", line 125, in decode\r\n    value = value.decode(self.encoding, self.encoding_errors)\r\n  File \"/usr/lib64/python2.7/encodings/utf_8.py\", line 16, in decode\r\n    return codecs.utf_8_decode(input, errors, True)\r\n**UnicodeDecodeError: 'utf8' codec can't decode byte 0xfa in position 14: invalid start byte**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/275", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/275/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/275/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/275", "id": 359003185, "node_id": "MDU6SXNzdWUzNTkwMDMxODU=", "number": 275, "title": "Sunionstore blocked in cluster mode.", "user": {"login": "raunakb94", "id": 7727282, "node_id": "MDQ6VXNlcjc3MjcyODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7727282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raunakb94", "html_url": "https://github.com/raunakb94", "followers_url": "https://api.github.com/users/raunakb94/followers", "following_url": "https://api.github.com/users/raunakb94/following{/other_user}", "gists_url": "https://api.github.com/users/raunakb94/gists{/gist_id}", "starred_url": "https://api.github.com/users/raunakb94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raunakb94/subscriptions", "organizations_url": "https://api.github.com/users/raunakb94/orgs", "repos_url": "https://api.github.com/users/raunakb94/repos", "events_url": "https://api.github.com/users/raunakb94/events{/privacy}", "received_events_url": "https://api.github.com/users/raunakb94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-11T11:25:56Z", "updated_at": "2019-01-08T18:37:27Z", "closed_at": "2019-01-08T18:37:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use pipelined command in cluster configurations where in i am seeing there are multiple commands blocked in cluster mode.\r\n\r\nIs there any specific reason apart from that the destination of many commands might be on some other node and hence cause failure on redis.\r\n\r\nbut keeping in mind that redis allows custom hash based slotting using {} braces. and while implementing the command we ensure that the destination is also the same as the command keys. Then there should be not any problem with this approach ?\r\n\r\nDo you see any kind of issue with this approach?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/274", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/274/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/274/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/274", "id": 356378061, "node_id": "MDU6SXNzdWUzNTYzNzgwNjE=", "number": 274, "title": "Fails to auto-reconnect when master goes down", "user": {"login": "15astro", "id": 17779264, "node_id": "MDQ6VXNlcjE3Nzc5MjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/17779264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/15astro", "html_url": "https://github.com/15astro", "followers_url": "https://api.github.com/users/15astro/followers", "following_url": "https://api.github.com/users/15astro/following{/other_user}", "gists_url": "https://api.github.com/users/15astro/gists{/gist_id}", "starred_url": "https://api.github.com/users/15astro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/15astro/subscriptions", "organizations_url": "https://api.github.com/users/15astro/orgs", "repos_url": "https://api.github.com/users/15astro/repos", "events_url": "https://api.github.com/users/15astro/events{/privacy}", "received_events_url": "https://api.github.com/users/15astro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 737860906, "node_id": "MDU6TGFiZWw3Mzc4NjA5MDY=", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/gathering%20feedback", "name": "gathering feedback", "color": "efac8d", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-03T06:50:14Z", "updated_at": "2020-07-28T15:38:33Z", "closed_at": "2019-08-11T23:01:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When following code is executed on the cluster with nodes( 3 masters and 3 slaves) and one of the master goes down, the code breaks and does not reconnect:\r\nRedis version: 4.0.11\r\nredis-py-cluster: 1.3.5\r\n```\r\nfrom rediscluster import StrictRedisCluster as rc\r\nr = rc(startup_nodes=[{\"host\": \"10..0.0.1\", \"port\": \"7000\"},{\"host\": \"10.0.0.2\", \"port\": \"9000\"},{\"host\": \"10.0.0.3\", \"port\": \"9000\"}])\r\nfor i in range(1,1000000):\r\n  r.set(\"b\", i)\r\n\r\n```\r\nCase 1: CLUSTER FAILOVER\r\n\r\nWhen the cluster failover is executed on the slave of the first node, the above code automatically reconnects to the new master and keep writing data\r\n\r\nCase 2: Kill master\r\nWhen the 1 master is killed, the script brreaks with following error:\r\n```\r\nFile \"python-batch.py\", line 7, in <module>\r\n    r.set(\"b\"+`i`, i)\r\n  File \"/usr/lib/python2.7/site-packages/redis/client.py\", line 1171, in set\r\n    return self.execute_command('SET', *pieces)\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/utils.py\", line 101, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/client.py\", line 403, in execute_command\r\n    raise ClusterError('TTL exhausted.')\r\nrediscluster.exceptions.ClusterError: TTL exhausted.\r\n```\r\nIs there any additional config params required or how this can be handeled without breaking the script which is performing writes? @Grokzen ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/273", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/273/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/273/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/273", "id": 354676245, "node_id": "MDU6SXNzdWUzNTQ2NzYyNDU=", "number": 273, "title": "pipeline\u4e00\u6bb5\u65f6\u95f4\u4e0d\u4f7f\u7528\uff0c\u518d\u7528\u7684\u65f6\u5019\u5c31\u4f1a\u54cd\u5e94\u5f88\u591a\u7684None", "user": {"login": "yixius", "id": 18661087, "node_id": "MDQ6VXNlcjE4NjYxMDg3", "avatar_url": "https://avatars0.githubusercontent.com/u/18661087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yixius", "html_url": "https://github.com/yixius", "followers_url": "https://api.github.com/users/yixius/followers", "following_url": "https://api.github.com/users/yixius/following{/other_user}", "gists_url": "https://api.github.com/users/yixius/gists{/gist_id}", "starred_url": "https://api.github.com/users/yixius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yixius/subscriptions", "organizations_url": "https://api.github.com/users/yixius/orgs", "repos_url": "https://api.github.com/users/yixius/repos", "events_url": "https://api.github.com/users/yixius/events{/privacy}", "received_events_url": "https://api.github.com/users/yixius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-28T10:51:50Z", "updated_at": "2018-10-15T21:58:12Z", "closed_at": "2018-10-15T21:58:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "pipeline\u4e00\u6bb5\u65f6\u95f4\u4e0d\u4f7f\u7528\uff0c\u518d\u7528\u7684\u65f6\u5019\u5c31\u4f1a\u54cd\u5e94\u5f88\u591a\u7684None", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/270", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/270/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/270/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/270", "id": 350882032, "node_id": "MDU6SXNzdWUzNTA4ODIwMzI=", "number": 270, "title": "READONLY_MODE does not appear to send reads to read replicas.", "user": {"login": "a34729t", "id": 958368, "node_id": "MDQ6VXNlcjk1ODM2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/958368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a34729t", "html_url": "https://github.com/a34729t", "followers_url": "https://api.github.com/users/a34729t/followers", "following_url": "https://api.github.com/users/a34729t/following{/other_user}", "gists_url": "https://api.github.com/users/a34729t/gists{/gist_id}", "starred_url": "https://api.github.com/users/a34729t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a34729t/subscriptions", "organizations_url": "https://api.github.com/users/a34729t/orgs", "repos_url": "https://api.github.com/users/a34729t/repos", "events_url": "https://api.github.com/users/a34729t/events{/privacy}", "received_events_url": "https://api.github.com/users/a34729t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-15T16:45:59Z", "updated_at": "2018-08-21T21:38:25Z", "closed_at": "2018-08-21T21:38:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to balance reads across a shard, which is supported in Redis Cluster via the `READONLY` command. This library appears to have that included via `readonly_mode`. However, turning on the setting when connecting to a cluster doesn't appear to ever connect to the slave even over a few thousand calls, as measured by `GET` traffic on all the nodes in the shard. A colleague at a major cloud provider also observed this. Is this expected behavior, or are we doing something wrong?\r\n\r\nOf note:\r\n\r\n- I'm using AWS' Elasticache\r\n- Other libraries with this mode enabled (specifically Lettuce for Java) do send traffic to read replicas. \r\n- This library (redis-py-cluster) does fine when detecting failovers and moving traffic to the new master, as well as live cluster shard addition and removal.\r\n\r\nHere is the script I'm using to test this:\r\n\r\n```\r\nfrom rediscluster import StrictRedisCluster\r\n\r\nhostname = \"[my cluster]\"\r\n\r\ndef connectToClusterAndGetStuff(i_max=100):\r\n    startup_nodes = [{\"host\": hostname, \"port\": \"6379\"}]\r\n    rc = StrictRedisCluster(startup_nodes=startup_nodes, **readonly_mode=True**, decode_responses=True, skip_full_coverage_check=True)\r\n    for i in range(0, i_max):\r\n        rc.get(i)\r\n\r\n\r\nfor i in range(0, 1000):\r\n    connectToClusterAndGetStuff()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/269", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/269/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/269/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/269", "id": 350340444, "node_id": "MDU6SXNzdWUzNTAzNDA0NDQ=", "number": 269, "title": "redis node is have password", "user": {"login": "sakufo", "id": 9942967, "node_id": "MDQ6VXNlcjk5NDI5Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9942967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sakufo", "html_url": "https://github.com/sakufo", "followers_url": "https://api.github.com/users/sakufo/followers", "following_url": "https://api.github.com/users/sakufo/following{/other_user}", "gists_url": "https://api.github.com/users/sakufo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sakufo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sakufo/subscriptions", "organizations_url": "https://api.github.com/users/sakufo/orgs", "repos_url": "https://api.github.com/users/sakufo/repos", "events_url": "https://api.github.com/users/sakufo/events{/privacy}", "received_events_url": "https://api.github.com/users/sakufo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-14T09:02:55Z", "updated_at": "2018-08-14T09:05:56Z", "closed_at": "2018-08-14T09:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I connect \"requirepass\" configured in redis?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/267", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/267/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/267/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/267", "id": 341640529, "node_id": "MDU6SXNzdWUzNDE2NDA1Mjk=", "number": 267, "title": "Closing Connection Pool", "user": {"login": "pabloariasmora", "id": 7321937, "node_id": "MDQ6VXNlcjczMjE5Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7321937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pabloariasmora", "html_url": "https://github.com/pabloariasmora", "followers_url": "https://api.github.com/users/pabloariasmora/followers", "following_url": "https://api.github.com/users/pabloariasmora/following{/other_user}", "gists_url": "https://api.github.com/users/pabloariasmora/gists{/gist_id}", "starred_url": "https://api.github.com/users/pabloariasmora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pabloariasmora/subscriptions", "organizations_url": "https://api.github.com/users/pabloariasmora/orgs", "repos_url": "https://api.github.com/users/pabloariasmora/repos", "events_url": "https://api.github.com/users/pabloariasmora/events{/privacy}", "received_events_url": "https://api.github.com/users/pabloariasmora/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-16T19:06:53Z", "updated_at": "2018-07-16T19:25:30Z", "closed_at": "2018-07-16T19:25:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "My application has several connection open to redis so we want to limit the connection time over some of them. I was reading the code over client.py looking for a manual disconnect method but I was not able to find it.\r\n\r\nSomething like this:\r\n\r\n```\r\nfrom rediscluster import StrictRedisCluster\r\nstartup_nodes = [{\"host\": \"127.0.0.1\", \"port\": \"7000\"}]\r\nrc = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True)\r\nrc.set(\"foo\", \"bar\")\r\nrc.disconnect()\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/266", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/266/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/266/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/266", "id": 341051203, "node_id": "MDU6SXNzdWUzNDEwNTEyMDM=", "number": 266, "title": "Not able to send commands through pipeline", "user": {"login": "Chatheersh", "id": 24662852, "node_id": "MDQ6VXNlcjI0NjYyODUy", "avatar_url": "https://avatars1.githubusercontent.com/u/24662852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chatheersh", "html_url": "https://github.com/Chatheersh", "followers_url": "https://api.github.com/users/Chatheersh/followers", "following_url": "https://api.github.com/users/Chatheersh/following{/other_user}", "gists_url": "https://api.github.com/users/Chatheersh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chatheersh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chatheersh/subscriptions", "organizations_url": "https://api.github.com/users/Chatheersh/orgs", "repos_url": "https://api.github.com/users/Chatheersh/repos", "events_url": "https://api.github.com/users/Chatheersh/events{/privacy}", "received_events_url": "https://api.github.com/users/Chatheersh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-13T14:57:28Z", "updated_at": "2018-07-22T11:24:01Z", "closed_at": "2018-07-22T11:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following script to connect to my redis cluster:\r\n\r\n```from rediscluster import StrictRedisCluster\r\nfrom datetime import datetime\r\n\r\nstart_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\r\n\r\nstartup_nodes = [{\"host\": \"redis01-staging-tor\", \"port\": \"7000\"}]\r\nredis_client = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True)\r\np = redis_client.pipeline()\r\n\r\np.command_stack = []\r\n\r\nfor i in range(1, 1000):\r\n    p.command_stack.append(([\"SET\", \"foo{}\".format(i), \"bar{}\".format(i)], {}))\r\n\r\np.execute()\r\n\r\nend_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\r\n\r\nprint(\"start_time: {}\".format(start_time))\r\nprint(\"end_time:   {}\".format(end_time))\r\n```\r\n\r\nWhen I attempt to run the script I get the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 17, in <module>\r\n    p.execute()\r\n  File \"/Users/chat/anaconda3/lib/python3.6/site-packages/rediscluster/pipeline.py\", line 98, in execute\r\n    return self.send_cluster_commands(stack, raise_on_error)\r\n  File \"/Users/chat/anaconda3/lib/python3.6/site-packages/rediscluster/utils.py\", line 101, in inner\r\n    return func(*args, **kwargs)\r\n  File \"/Users/chat/anaconda3/lib/python3.6/site-packages/rediscluster/pipeline.py\", line 144, in send_cluster_commands\r\n    attempt = sorted(stack, key=lambda x: x.position)\r\n  File \"/Users/chat/anaconda3/lib/python3.6/site-packages/rediscluster/pipeline.py\", line 144, in <lambda>\r\n    attempt = sorted(stack, key=lambda x: x.position)\r\nAttributeError: 'tuple' object has no attribute 'position'\r\n```\r\n\r\nIs there a bug in the code?  I followed the example from the following:\r\nhttp://redis-py-cluster.readthedocs.io/en/master/pipelines.html#multi-exec-cluster-test-code", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/264", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/264/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/264/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/264", "id": 340445129, "node_id": "MDU6SXNzdWUzNDA0NDUxMjk=", "number": 264, "title": "ConnectionError while ussing scan_iter", "user": {"login": "pabloariasmora", "id": 7321937, "node_id": "MDQ6VXNlcjczMjE5Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7321937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pabloariasmora", "html_url": "https://github.com/pabloariasmora", "followers_url": "https://api.github.com/users/pabloariasmora/followers", "following_url": "https://api.github.com/users/pabloariasmora/following{/other_user}", "gists_url": "https://api.github.com/users/pabloariasmora/gists{/gist_id}", "starred_url": "https://api.github.com/users/pabloariasmora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pabloariasmora/subscriptions", "organizations_url": "https://api.github.com/users/pabloariasmora/orgs", "repos_url": "https://api.github.com/users/pabloariasmora/repos", "events_url": "https://api.github.com/users/pabloariasmora/events{/privacy}", "received_events_url": "https://api.github.com/users/pabloariasmora/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T00:00:10Z", "updated_at": "2018-07-13T15:36:10Z", "closed_at": "2018-07-13T15:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI have a large amount of keys (over 60000) with a similar pattern, and I want to retrieve all of them. So I'm using `scan_iter` function.\r\n\r\nHere is the general idea.\r\n```\r\n for key inrediscluster.scan_iter(\"pattern:*\"):\r\n       print(key)\r\n      # Other heavy operations\r\n```\r\n\r\nBut the keys that matched are so many, and the code inside the loop is long an heavy that, there are some cases that I received this error, so the execution ends.\r\n\r\n```\r\nTraceback (most recent call last):\r\n File \"/usr/lib/python3.4/site-packages/redis/connection.py\", line 392, in read_response\r\n   raise socket.error(SERVER_CLOSED_CONNECTION_ERROR)\r\nOSError: Connection closed by server.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n File \"observer.py\", line 53, in joborchestrator.status_report.observer.ObserverThread.run\r\n File \"/usr/lib/python3.4/site-packages/rediscluster/client.py\", line 639, in scan_iter\r\n   raw_resp = conn.read_response()\r\n File \"/usr/lib/python3.4/site-packages/redis/connection.py\", line 624, in read_response\r\n   response = self._parser.read_response()\r\n File \"/usr/lib/python3.4/site-packages/redis/connection.py\", line 403, in read_response\r\n   (e.args,))\r\nredis.exceptions.ConnectionError: Error while reading from socket: ('Connection closed by server.',)\r\n```\r\n\r\nIs there any that I could do to avoid this, as part of the module configuration? Besides trying to manually reconnect every time that I got the error? Like a retry_amount of times?\r\n\r\nThank\r\nJP", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/263", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/263/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/263/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/263", "id": 338063797, "node_id": "MDU6SXNzdWUzMzgwNjM3OTc=", "number": 263, "title": "Does this work with non-clustered Redis?", "user": {"login": "thieman", "id": 1414305, "node_id": "MDQ6VXNlcjE0MTQzMDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1414305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thieman", "html_url": "https://github.com/thieman", "followers_url": "https://api.github.com/users/thieman/followers", "following_url": "https://api.github.com/users/thieman/following{/other_user}", "gists_url": "https://api.github.com/users/thieman/gists{/gist_id}", "starred_url": "https://api.github.com/users/thieman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thieman/subscriptions", "organizations_url": "https://api.github.com/users/thieman/orgs", "repos_url": "https://api.github.com/users/thieman/repos", "events_url": "https://api.github.com/users/thieman/events{/privacy}", "received_events_url": "https://api.github.com/users/thieman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-03T21:42:11Z", "updated_at": "2018-07-03T21:53:00Z", "closed_at": "2018-07-03T21:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking to port our Redis 2.8 non-clustered instance to Redis 4 clustered. Two questions, I suppose:\r\n\r\n1. Does this client work with non-clustered Redis instances?\r\n2. Does this client work with Redis major version 2?\r\n\r\nApologies if this was already answered, I couldn't find it from spelunking in Issues.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/260", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/260/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/260/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/260", "id": 332575723, "node_id": "MDU6SXNzdWUzMzI1NzU3MjM=", "number": 260, "title": "Unexpected keyword argument 'ssl'", "user": {"login": "arthur78", "id": 156231, "node_id": "MDQ6VXNlcjE1NjIzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/156231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthur78", "html_url": "https://github.com/arthur78", "followers_url": "https://api.github.com/users/arthur78/followers", "following_url": "https://api.github.com/users/arthur78/following{/other_user}", "gists_url": "https://api.github.com/users/arthur78/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthur78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthur78/subscriptions", "organizations_url": "https://api.github.com/users/arthur78/orgs", "repos_url": "https://api.github.com/users/arthur78/repos", "events_url": "https://api.github.com/users/arthur78/events{/privacy}", "received_events_url": "https://api.github.com/users/arthur78/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-14T21:46:23Z", "updated_at": "2020-02-24T13:19:33Z", "closed_at": "2018-06-14T23:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "On AWS:\r\n```\r\n# python 3.6\r\n# redis-py-cluster 1.3.4\r\n\r\nrc = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True,\r\n                            skip_full_coverage_check=True, ssl=True)\r\nrc.set('foo', 'bar)\r\n```\r\n  \r\n```\r\n...\r\n  File \"/var/task/rediscluster/connection.py\", line 44, in __init__\r\n    super(ClusterConnection, self).__init__(*args, **kwargs)\r\nTypeError: __init__() got an unexpected keyword argument 'ssl'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/257", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/257/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/257/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/257", "id": 323913598, "node_id": "MDU6SXNzdWUzMjM5MTM1OTg=", "number": 257, "title": "Installation failure", "user": {"login": "bxhbpdxhzGithub", "id": 10646986, "node_id": "MDQ6VXNlcjEwNjQ2OTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/10646986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxhbpdxhzGithub", "html_url": "https://github.com/bxhbpdxhzGithub", "followers_url": "https://api.github.com/users/bxhbpdxhzGithub/followers", "following_url": "https://api.github.com/users/bxhbpdxhzGithub/following{/other_user}", "gists_url": "https://api.github.com/users/bxhbpdxhzGithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxhbpdxhzGithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxhbpdxhzGithub/subscriptions", "organizations_url": "https://api.github.com/users/bxhbpdxhzGithub/orgs", "repos_url": "https://api.github.com/users/bxhbpdxhzGithub/repos", "events_url": "https://api.github.com/users/bxhbpdxhzGithub/events{/privacy}", "received_events_url": "https://api.github.com/users/bxhbpdxhzGithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-17T08:05:46Z", "updated_at": "2018-05-17T08:07:04Z", "closed_at": "2018-05-17T08:07:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Downloading/unpacking redis-py-cluster\r\n  Running setup.py egg_info for package redis-py-cluster\r\n    warning: no files found matching 'CHANGES'\r\nRequirement already satisfied (use --upgrade to upgrade): redis>=2.10.2 in /usr/lib/python2.6/site-packages (from redis-py-cluster)\r\nInstalling collected packages: redis-py-cluster\r\n  Running setup.py install for redis-py-cluster\r\n    SyntaxError: ('invalid syntax', ('/usr/lib/python2.6/site-packages/rediscluster/nodemanager.py', 151, 37, '        connection_kwargs = {k: v for k, v in self.connection_kwargs.items() if k in set(allowed_keys) - set(disabled_keys)}\\n'))\r\n    \r\n    SyntaxError: ('invalid syntax', ('/usr/lib/python2.6/site-packages/rediscluster/client.py', 219, 83, \"        servers = list({'{0}:{1}'.format(nativestr(info['host']), info['port']) for info in self.connection_pool.nodes.startup_nodes})\\n\"))\r\n    \r\n    warning: no files found matching 'CHANGES'\r\nSuccessfully installed redis-py-cluster\r\nCleaning up...\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/256", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/256/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/256/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/256", "id": 323454102, "node_id": "MDU6SXNzdWUzMjM0NTQxMDI=", "number": 256, "title": "Hgetall has UnicodeDecodeError", "user": {"login": "beeligo", "id": 30168546, "node_id": "MDQ6VXNlcjMwMTY4NTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/30168546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beeligo", "html_url": "https://github.com/beeligo", "followers_url": "https://api.github.com/users/beeligo/followers", "following_url": "https://api.github.com/users/beeligo/following{/other_user}", "gists_url": "https://api.github.com/users/beeligo/gists{/gist_id}", "starred_url": "https://api.github.com/users/beeligo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beeligo/subscriptions", "organizations_url": "https://api.github.com/users/beeligo/orgs", "repos_url": "https://api.github.com/users/beeligo/repos", "events_url": "https://api.github.com/users/beeligo/events{/privacy}", "received_events_url": "https://api.github.com/users/beeligo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-16T03:12:37Z", "updated_at": "2018-05-16T07:23:23Z", "closed_at": "2018-05-16T07:23:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "  1\u3001redis save a key which has value as \"\\n\\x10\\x8a\\x94\\x80\\x89\\t\\x18o \\xae\\x11(\\x012\\x0f\\x8a\\x94\\x80\\x89\\t\\x81\\xb8\\xcc\\xfd\\x0f\\x8a\\x94\\xac\\xdb\\x06@\\x01\", when i try to get its value ,it return error \"UnicodeDecodeError: 'utf8' codec can't decode byte 0x8a in position 19: invalid start byte\", the detail is below\uff1a\r\n\r\nFile \"C:\\Python27\\lib\\site-packages\\redis\\client.py\", line 1967, in hgetall\r\n    return self.execute_command('HGETALL', name)\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\utils.py\", line 101, in inner\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\client.py\", line 357, in execute_command\r\n    return self.parse_response(r, command, **kwargs)\r\n  File \"C:\\Python27\\lib\\site-packages\\redis\\client.py\", line 680, in parse_response\r\n    response = connection.read_response()\r\n  File \"C:\\Python27\\lib\\site-packages\\redis\\connection.py\", line 624, in read_response\r\n    response = self._parser.read_response()\r\n  File \"C:\\Python27\\lib\\site-packages\\redis\\connection.py\", line 324, in read_response\r\n    response = [self.read_response() for i in xrange(length)]\r\n  File \"C:\\Python27\\lib\\site-packages\\redis\\connection.py\", line 326, in read_response\r\n    response = self.encoder.decode(response)\r\n  File \"C:\\Python27\\lib\\site-packages\\redis\\connection.py\", line 125, in decode\r\n    value = value.decode(self.encoding, self.encoding_errors)\r\n  File \"C:\\Python27\\lib\\encodings\\utf_8.py\", line 16, in decode\r\n    return codecs.utf_8_decode(input, errors, True)\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0x8a in position 19: invalid start byte\r\n\r\n2\u3001environment\uff1a\r\n    python version\uff1a2.7.13\r\n    rediscluster\uff1a 0.5.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/255", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/255/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/255/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/255", "id": 320664213, "node_id": "MDU6SXNzdWUzMjA2NjQyMTM=", "number": 255, "title": "ERROR sending 'cluster slots'", "user": {"login": "benben17", "id": 11755695, "node_id": "MDQ6VXNlcjExNzU1Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/11755695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benben17", "html_url": "https://github.com/benben17", "followers_url": "https://api.github.com/users/benben17/followers", "following_url": "https://api.github.com/users/benben17/following{/other_user}", "gists_url": "https://api.github.com/users/benben17/gists{/gist_id}", "starred_url": "https://api.github.com/users/benben17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benben17/subscriptions", "organizations_url": "https://api.github.com/users/benben17/orgs", "repos_url": "https://api.github.com/users/benben17/repos", "events_url": "https://api.github.com/users/benben17/events{/privacy}", "received_events_url": "https://api.github.com/users/benben17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-05-07T03:37:37Z", "updated_at": "2018-05-31T06:52:19Z", "closed_at": "2018-05-31T06:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "    rc = StrictRedisCluster(startup_nodes=redisnodes)\r\n  File \"build/bdist.macosx-10.6-intel/egg/rediscluster/client.py\", line 183, in __init__\r\n  File \"build/bdist.macosx-10.6-intel/egg/rediscluster/connection.py\", line 143, in __init__\r\n  File \"build/bdist.macosx-10.6-intel/egg/rediscluster/nodemanager.py\", line 183, in initialize\r\nrediscluster.exceptions.RedisClusterException: ERROR sending 'cluster slots' command to redis server: {'host': '10.10.65.68', 'port': 8813}\r\n\r\n\u6211\u76f4\u63a5\u7528\u547d\u4ee4\u884c\u662f\u6ca1\u6709\u95ee\u9898\u7684\r\n127.0.0.1:8813> cluster slots\r\n1) 1) (integer) 8192\r\n   2) (integer) 12287\r\n   3) 1) \"10.10.65.42\"\r\n      2) (integer) 8812\r\n   4) 1) \"10.10.65.68\"\r\n      2) (integer) 8812\r\n2) 1) (integer) 0\r\n   2) (integer) 4095\r\n   3) 1) \"10.10.65.15\"\r\n      2) (integer) 8810\r\n   4) 1) \"10.10.65.23\"\r\n      2) (integer) 8810\r\n3) 1) (integer) 4096\r\n   2) (integer) 8191\r\n   3) 1) \"10.10.65.23\"\r\n      2) (integer) 8811\r\n   4) 1) \"10.10.65.15\"\r\n      2) (integer) 8811\r\n4) 1) (integer) 12288\r\n   2) (integer) 16383\r\n   3) 1) \"10.10.65.68\"\r\n      2) (integer) 8813\r\n   4) 1) \"10.10.65.42\"\r\n      2) (integer) 8813", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/254", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/254/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/254/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/254", "id": 318538816, "node_id": "MDU6SXNzdWUzMTg1Mzg4MTY=", "number": 254, "title": "Does execute_command works for the commands implemented in redis-ml module ?", "user": {"login": "SrujithPoondla", "id": 16924031, "node_id": "MDQ6VXNlcjE2OTI0MDMx", "avatar_url": "https://avatars0.githubusercontent.com/u/16924031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SrujithPoondla", "html_url": "https://github.com/SrujithPoondla", "followers_url": "https://api.github.com/users/SrujithPoondla/followers", "following_url": "https://api.github.com/users/SrujithPoondla/following{/other_user}", "gists_url": "https://api.github.com/users/SrujithPoondla/gists{/gist_id}", "starred_url": "https://api.github.com/users/SrujithPoondla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SrujithPoondla/subscriptions", "organizations_url": "https://api.github.com/users/SrujithPoondla/orgs", "repos_url": "https://api.github.com/users/SrujithPoondla/repos", "events_url": "https://api.github.com/users/SrujithPoondla/events{/privacy}", "received_events_url": "https://api.github.com/users/SrujithPoondla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-27T20:24:36Z", "updated_at": "2018-05-03T18:01:31Z", "closed_at": "2018-05-02T14:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am loading the redis-ml module using execute_command('LOAD MODULE', 'path to the module). After that when I try to use commands in that module I am getting command not found exception. Do I need to modify anything in the client.py ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/253", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/253/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/253/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/253", "id": 315459376, "node_id": "MDU6SXNzdWUzMTU0NTkzNzY=", "number": 253, "title": "why redis-py-cluster connect to local port?", "user": {"login": "simple2source", "id": 12379118, "node_id": "MDQ6VXNlcjEyMzc5MTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/12379118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simple2source", "html_url": "https://github.com/simple2source", "followers_url": "https://api.github.com/users/simple2source/followers", "following_url": "https://api.github.com/users/simple2source/following{/other_user}", "gists_url": "https://api.github.com/users/simple2source/gists{/gist_id}", "starred_url": "https://api.github.com/users/simple2source/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simple2source/subscriptions", "organizations_url": "https://api.github.com/users/simple2source/orgs", "repos_url": "https://api.github.com/users/simple2source/repos", "events_url": "https://api.github.com/users/simple2source/events{/privacy}", "received_events_url": "https://api.github.com/users/simple2source/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-18T12:31:51Z", "updated_at": "2018-04-19T06:43:03Z", "closed_at": "2018-04-18T14:07:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "my config:\r\n\r\n```\r\nfrom rediscluster import RedisCluster, StrictRedisCluster\r\nredis_store = RedisCluster(startup_nodes=[{\"host\": \"172.16.100.132\", \"port\": \"30001\"},\r\n                                          {\"host\": \"172.16.100.132\", \"port\": \"30002\"},\r\n                                         {\"host\": \"172.16.100.132\", \"port\": \"30003\"},\r\n                                         {\"host\": \"172.16.100.132\", \"port\": \"30004\"},\r\n                                           {\"host\": \"172.16.100.132\", \"port\": \"30005\"},\r\n                                         {\"host\": \"172.16.100.132\", \"port\": \"30006\"}], decode_responses=True)\r\n\r\n\r\n```\r\n\r\nerror info : \r\n\r\n```\r\n---------------------------------------------------------------------------\r\nConnectionRefusedError                    Traceback (most recent call last)\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in connect(self)\r\n    483         try:\r\n--> 484             sock = self._connect()\r\n    485         except socket.timeout:\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in _connect(self)\r\n    540         if err is not None:\r\n--> 541             raise err\r\n    542         raise socket.error(\"socket.getaddrinfo returned an empty list\")\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in _connect(self)\r\n    528                 # connect\r\n--> 529                 sock.connect(socket_address)\r\n    530 \r\n\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nConnectionError                           Traceback (most recent call last)\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/client.py in execute_command(self, *args, **options)\r\n    666         try:\r\n--> 667             connection.send_command(*args)\r\n    668             return self.parse_response(connection, command_name, **options)\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in send_command(self, *args)\r\n    609         \"Pack and send a command to the Redis server\"\r\n--> 610         self.send_packed_command(self.pack_command(*args))\r\n    611 \r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in send_packed_command(self, command)\r\n    584         if not self._sock:\r\n--> 585             self.connect()\r\n    586         try:\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in connect(self)\r\n    488             e = sys.exc_info()[1]\r\n--> 489             raise ConnectionError(self._error_message(e))\r\n    490 \r\n\r\nConnectionError: Error 111 connecting to 127.0.0.1:30001. Connection refused.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nConnectionRefusedError                    Traceback (most recent call last)\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in connect(self)\r\n    483         try:\r\n--> 484             sock = self._connect()\r\n    485         except socket.timeout:\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in _connect(self)\r\n    540         if err is not None:\r\n--> 541             raise err\r\n    542         raise socket.error(\"socket.getaddrinfo returned an empty list\")\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in _connect(self)\r\n    528                 # connect\r\n--> 529                 sock.connect(socket_address)\r\n    530 \r\n\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nConnectionError                           Traceback (most recent call last)\r\n<ipython-input-2-d25c08a6c457> in <module>()\r\n      4                                           {\"host\": \"172.16.100.132\", \"port\": \"30004\"},\r\n      5                                           {\"host\": \"172.16.100.132\", \"port\": \"30005\"},\r\n----> 6                                           {\"host\": \"172.16.100.132\", \"port\": \"30006\"}], decode_responses=True)\r\n      7 \r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/rediscluster/client.py in __init__(self, host, port, startup_nodes, max_connections, max_connections_per_node, init_slot_cache, readonly_mode, reinitialize_steps, skip_full_coverage_check, nodemanager_follow_cluster, **kwargs)\r\n    179                 skip_full_coverage_check=skip_full_coverage_check,\r\n    180                 nodemanager_follow_cluster=nodemanager_follow_cluster,\r\n--> 181                 **kwargs\r\n    182             )\r\n    183 \r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/rediscluster/connection.py in __init__(self, startup_nodes, init_slot_cache, connection_class, max_connections, max_connections_per_node, reinitialize_steps, skip_full_coverage_check, nodemanager_follow_cluster, **connection_kwargs)\r\n    139 \r\n    140         if init_slot_cache:\r\n--> 141             self.nodes.initialize()\r\n    142 \r\n    143         self.connections = {}\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/rediscluster/nodemanager.py in initialize(self)\r\n    226                 need_full_slots_coverage = False\r\n    227             else:\r\n--> 228                 need_full_slots_coverage = self.cluster_require_full_coverage(nodes_cache)\r\n    229 \r\n    230             # Validate if all slots are covered or if we should try next startup node\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/rediscluster/nodemanager.py in cluster_require_full_coverage(self, nodes_cache)\r\n    268 \r\n    269         # at least one node should have cluster-require-full-coverage yes\r\n--> 270         return any(node_require_full_coverage(node) for node in nodes.values())\r\n    271 \r\n    272     def set_node_name(self, n):\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/rediscluster/nodemanager.py in <genexpr>(.0)\r\n    268 \r\n    269         # at least one node should have cluster-require-full-coverage yes\r\n--> 270         return any(node_require_full_coverage(node) for node in nodes.values())\r\n    271 \r\n    272     def set_node_name(self, n):\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/rediscluster/nodemanager.py in node_require_full_coverage(node)\r\n    265         def node_require_full_coverage(node):\r\n    266             r_node = self.get_redis_link(host=node[\"host\"], port=node[\"port\"], decode_responses=True)\r\n--> 267             return \"yes\" in r_node.config_get(\"cluster-require-full-coverage\").values()\r\n    268 \r\n    269         # at least one node should have cluster-require-full-coverage yes\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/client.py in config_get(self, pattern)\r\n    713     def config_get(self, pattern=\"*\"):\r\n    714         \"Return a dictionary of configuration based on the ``pattern``\"\r\n--> 715         return self.execute_command('CONFIG GET', pattern)\r\n    716 \r\n    717     def config_set(self, name, value):\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/client.py in execute_command(self, *args, **options)\r\n    671             if not connection.retry_on_timeout and isinstance(e, TimeoutError):\r\n    672                 raise\r\n--> 673             connection.send_command(*args)\r\n    674             return self.parse_response(connection, command_name, **options)\r\n    675         finally:\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in send_command(self, *args)\r\n    608     def send_command(self, *args):\r\n    609         \"Pack and send a command to the Redis server\"\r\n--> 610         self.send_packed_command(self.pack_command(*args))\r\n    611 \r\n    612     def can_read(self, timeout=0):\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in send_packed_command(self, command)\r\n    583         \"Send an already packed command to the Redis server\"\r\n    584         if not self._sock:\r\n--> 585             self.connect()\r\n    586         try:\r\n    587             if isinstance(command, str):\r\n\r\n~/.pyenv/versions/3.5.4/envs/virtual-35/lib/python3.5/site-packages/redis/connection.py in connect(self)\r\n    487         except socket.error:\r\n    488             e = sys.exc_info()[1]\r\n--> 489             raise ConnectionError(self._error_message(e))\r\n    490 \r\n    491         self._sock = sock\r\n\r\nConnectionError: Error 111 connecting to 127.0.0.1:30001. Connection refused.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/252", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/252/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/252/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/252", "id": 313782217, "node_id": "MDU6SXNzdWUzMTM3ODIyMTc=", "number": 252, "title": "SSL option not working", "user": {"login": "williamoverton", "id": 2838108, "node_id": "MDQ6VXNlcjI4MzgxMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2838108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamoverton", "html_url": "https://github.com/williamoverton", "followers_url": "https://api.github.com/users/williamoverton/followers", "following_url": "https://api.github.com/users/williamoverton/following{/other_user}", "gists_url": "https://api.github.com/users/williamoverton/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamoverton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamoverton/subscriptions", "organizations_url": "https://api.github.com/users/williamoverton/orgs", "repos_url": "https://api.github.com/users/williamoverton/repos", "events_url": "https://api.github.com/users/williamoverton/events{/privacy}", "received_events_url": "https://api.github.com/users/williamoverton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-12T15:39:45Z", "updated_at": "2018-07-06T14:00:16Z", "closed_at": "2018-07-06T14:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Passing ssl option does not seem to make a difference when trying a connection\r\n\r\n```\r\n>>> rc = StrictRedisCluster(startup_nodes=[{\"host\": \"host\", \"port\": 6379}], decode_responses=True, ssl=True, password='password')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/client.py\", line 181, in __init__\r\n    **kwargs\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/connection.py\", line 141, in __init__\r\n    self.nodes.initialize()\r\n  File \"/usr/lib/python2.7/site-packages/rediscluster/nodemanager.py\", line 183, in initialize\r\n    raise RedisClusterException(\"ERROR sending 'cluster slots' command to redis server: {0}\".format(node))\r\nrediscluster.exceptions.RedisClusterException: ERROR sending 'cluster slots' command to redis server: {'host': 'host', 'port': 6379}\r\n```\r\n\r\nI am using version: `redis-py-cluster (1.3.4)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/250", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/250/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/250/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/250", "id": 311785181, "node_id": "MDU6SXNzdWUzMTE3ODUxODE=", "number": 250, "title": "Threading documentation is inaccurate", "user": {"login": "paulkiernan", "id": 539657, "node_id": "MDQ6VXNlcjUzOTY1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/539657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulkiernan", "html_url": "https://github.com/paulkiernan", "followers_url": "https://api.github.com/users/paulkiernan/followers", "following_url": "https://api.github.com/users/paulkiernan/following{/other_user}", "gists_url": "https://api.github.com/users/paulkiernan/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulkiernan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulkiernan/subscriptions", "organizations_url": "https://api.github.com/users/paulkiernan/orgs", "repos_url": "https://api.github.com/users/paulkiernan/repos", "events_url": "https://api.github.com/users/paulkiernan/events{/privacy}", "received_events_url": "https://api.github.com/users/paulkiernan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-05T22:04:38Z", "updated_at": "2019-08-19T21:34:58Z", "closed_at": "2019-08-19T21:34:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The threading documentation (https://github.com/Grokzen/redis-py-cluster/blob/master/docs/threads.rst) outlines the the `pipeline_use_threads` parameter in the `RedisCluster` class and a `use_threads` parameter in the `pipeline` class.\r\n\r\nThe threading documentation should be updated to reflect the changes made in the 1.1.0 -> 1.2.0 release notes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/249", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/249/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/249/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/249", "id": 308933447, "node_id": "MDU6SXNzdWUzMDg5MzM0NDc=", "number": 249, "title": "support write to master and  read from slave", "user": {"login": "derek0377", "id": 4576249, "node_id": "MDQ6VXNlcjQ1NzYyNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4576249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derek0377", "html_url": "https://github.com/derek0377", "followers_url": "https://api.github.com/users/derek0377/followers", "following_url": "https://api.github.com/users/derek0377/following{/other_user}", "gists_url": "https://api.github.com/users/derek0377/gists{/gist_id}", "starred_url": "https://api.github.com/users/derek0377/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derek0377/subscriptions", "organizations_url": "https://api.github.com/users/derek0377/orgs", "repos_url": "https://api.github.com/users/derek0377/repos", "events_url": "https://api.github.com/users/derek0377/events{/privacy}", "received_events_url": "https://api.github.com/users/derek0377/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1185065150, "node_id": "MDU6TGFiZWwxMTg1MDY1MTUw", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepted", "name": "Accepted", "color": "9bf927", "default": false, "description": "Accepted bug or enhancement"}, {"id": 1185065584, "node_id": "MDU6TGFiZWwxMTg1MDY1NTg0", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/Accepting%20PR", "name": "Accepting PR", "color": "96f2c1", "default": false, "description": ""}, {"id": 40440912, "node_id": "MDU6TGFiZWw0MDQ0MDkxMg==", "url": "https://api.github.com/repos/Grokzen/redis-py-cluster/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-27T11:43:09Z", "updated_at": "2019-08-11T15:59:28Z", "closed_at": "2019-08-11T15:59:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/247", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/247/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/247/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/247", "id": 303997106, "node_id": "MDU6SXNzdWUzMDM5OTcxMDY=", "number": 247, "title": "New release?", "user": {"login": "nelz9999", "id": 10950, "node_id": "MDQ6VXNlcjEwOTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/10950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nelz9999", "html_url": "https://github.com/nelz9999", "followers_url": "https://api.github.com/users/nelz9999/followers", "following_url": "https://api.github.com/users/nelz9999/following{/other_user}", "gists_url": "https://api.github.com/users/nelz9999/gists{/gist_id}", "starred_url": "https://api.github.com/users/nelz9999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nelz9999/subscriptions", "organizations_url": "https://api.github.com/users/nelz9999/orgs", "repos_url": "https://api.github.com/users/nelz9999/repos", "events_url": "https://api.github.com/users/nelz9999/events{/privacy}", "received_events_url": "https://api.github.com/users/nelz9999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-09T22:12:12Z", "updated_at": "2018-07-22T18:59:37Z", "closed_at": "2018-07-22T18:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to request that a new release be cut. (1.3.4 was just over a year ago!)\r\n\r\nMore specifically, my interest is in #195 which is in `unstable` right now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/245", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/245/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/245/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/245", "id": 302707478, "node_id": "MDU6SXNzdWUzMDI3MDc0Nzg=", "number": 245, "title": "python 2.6 not support? run error!!!!!!", "user": {"login": "bywangxp", "id": 22289919, "node_id": "MDQ6VXNlcjIyMjg5OTE5", "avatar_url": "https://avatars3.githubusercontent.com/u/22289919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bywangxp", "html_url": "https://github.com/bywangxp", "followers_url": "https://api.github.com/users/bywangxp/followers", "following_url": "https://api.github.com/users/bywangxp/following{/other_user}", "gists_url": "https://api.github.com/users/bywangxp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bywangxp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bywangxp/subscriptions", "organizations_url": "https://api.github.com/users/bywangxp/orgs", "repos_url": "https://api.github.com/users/bywangxp/repos", "events_url": "https://api.github.com/users/bywangxp/events{/privacy}", "received_events_url": "https://api.github.com/users/bywangxp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-06T13:48:09Z", "updated_at": "2018-03-06T14:09:36Z", "closed_at": "2018-03-06T14:09:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "from rediscluster import StrictRedisCluster\r\n\r\nerror!!!:\r\nservers = list({'{0}:{1}'.format(nativestr(info['host']), info['port']) for info in self.connection_pool.nodes.startup_nodes})\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/241", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/241/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/241/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/241", "id": 292101160, "node_id": "MDU6SXNzdWUyOTIxMDExNjA=", "number": 241, "title": "remote server ip is not working ,always use 127.0.0.1,", "user": {"login": "405f", "id": 16277627, "node_id": "MDQ6VXNlcjE2Mjc3NjI3", "avatar_url": "https://avatars0.githubusercontent.com/u/16277627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/405f", "html_url": "https://github.com/405f", "followers_url": "https://api.github.com/users/405f/followers", "following_url": "https://api.github.com/users/405f/following{/other_user}", "gists_url": "https://api.github.com/users/405f/gists{/gist_id}", "starred_url": "https://api.github.com/users/405f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/405f/subscriptions", "organizations_url": "https://api.github.com/users/405f/orgs", "repos_url": "https://api.github.com/users/405f/repos", "events_url": "https://api.github.com/users/405f/events{/privacy}", "received_events_url": "https://api.github.com/users/405f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-27T07:50:25Z", "updated_at": "2018-01-27T08:11:59Z", "closed_at": "2018-01-27T08:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nhost = '192.168.1.118'\r\nstartup_nodes = [\r\n    {\"host\": host, \"port\": \"7000\"},\r\n    {\"host\": host, \"port\": \"7001\"},\r\n]\r\n\r\nr = StrictRedisCluster(startup_nodes=startup_nodes, max_connections=32, decode_responses=True)\r\n```\r\nalways said:\r\n```\r\nredis.exceptions.ConnectionError: Error 10061 connecting to 127.0.0.1:7002. \u7531\u4e8e\u76ee\u6807\u8ba1\u7b97\u673a\u79ef\u6781\u62d2\u7edd\uff0c\u65e0\u6cd5\u8fde\u63a5\u3002(The target computer refused to connect due to a positive rejection).\r\n```\r\nmy cluster node is : 7000,7001,7002,7003,7004,7005, and telent  7002 is working.\r\nhelp, thks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/240", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/240/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/240/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/240", "id": 288759317, "node_id": "MDU6SXNzdWUyODg3NTkzMTc=", "number": 240, "title": "how to use connection pool ?", "user": {"login": "Tracy6465", "id": 4995586, "node_id": "MDQ6VXNlcjQ5OTU1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4995586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tracy6465", "html_url": "https://github.com/Tracy6465", "followers_url": "https://api.github.com/users/Tracy6465/followers", "following_url": "https://api.github.com/users/Tracy6465/following{/other_user}", "gists_url": "https://api.github.com/users/Tracy6465/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tracy6465/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tracy6465/subscriptions", "organizations_url": "https://api.github.com/users/Tracy6465/orgs", "repos_url": "https://api.github.com/users/Tracy6465/repos", "events_url": "https://api.github.com/users/Tracy6465/events{/privacy}", "received_events_url": "https://api.github.com/users/Tracy6465/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-16T01:35:17Z", "updated_at": "2018-03-03T19:30:22Z", "closed_at": "2018-03-03T19:30:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "After the python file is loaded, initialize the connection pool. then Call the get_recommend_info method via http request in django. One of the problems I now have is a few hours later the connection pool can not be used.\r\n\r\nThis is my code\uff1a\r\n\r\n```\r\nfrom rediscluster import StrictRedisCluster, connection\r\n\r\n# init connection pool\r\nconnection_pool = connection.ClusterConnectionPool(\r\n    startup_nodes=host_list, \r\n    skip_full_coverage_check=True,\r\n    password=redis_password,\r\n    socket_timeout=socket_timeout,\r\n)\r\n```\r\n\r\n```\r\n# get connection from connection_pool \r\ndef get_recommend_info(yst_id):\r\n    try:\r\n        rc = StrictRedisCluster(\r\n            decode_responses=True,\r\n            readonly_mode=True, socket_connect_timeout=consts.REQUEST_TIME_OUT,\r\n            socket_timeout=consts.REQUEST_TIME_OUT,\r\n        )\r\n        return  rc.hget(bytes(consts.REDIS_KEY).encode('utf-8'),\r\n                               bytes(yst_id).encode('utf-8'))\r\n    except Exception as e:\r\n        print e.message\r\n        return []\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/236", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/236/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/236/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/236", "id": 287269953, "node_id": "MDU6SXNzdWUyODcyNjk5NTM=", "number": 236, "title": "AWS Redis Cluster fails with redis.exceptions.ResponseError: MOVED", "user": {"login": "mingtm", "id": 15743116, "node_id": "MDQ6VXNlcjE1NzQzMTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/15743116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingtm", "html_url": "https://github.com/mingtm", "followers_url": "https://api.github.com/users/mingtm/followers", "following_url": "https://api.github.com/users/mingtm/following{/other_user}", "gists_url": "https://api.github.com/users/mingtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingtm/subscriptions", "organizations_url": "https://api.github.com/users/mingtm/orgs", "repos_url": "https://api.github.com/users/mingtm/repos", "events_url": "https://api.github.com/users/mingtm/events{/privacy}", "received_events_url": "https://api.github.com/users/mingtm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-09T23:49:25Z", "updated_at": "2018-03-05T09:16:57Z", "closed_at": "2018-03-03T19:41:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my sample code:\r\n\r\n```\r\nfrom rediscluster import StrictRedisCluster\r\nstartup_nodes = [{\"host\": \"xxxx.clustercfg.apn2.cache.amazonaws.com\", \"port\": \"6379\"}]\r\nr = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True, skip_full_coverage_check=True)\r\n\r\n# multiple set add\r\nloop:\r\n    r.sadd('foo', 'bar')\r\n```\r\n\r\nIt fails eventually:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"loadData.py\", line 39, in <module>\r\n    r.sadd(key, values)\r\n  File \"/Library/Python/2.7/site-packages/redis/client.py\", line 1600, in sadd\r\n    return self.execute_command('SADD', name, *values)\r\n  File \"/Library/Python/2.7/site-packages/redis/client.py\", line 668, in execute_command\r\n    return self.parse_response(connection, command_name, **options)\r\n  File \"/Library/Python/2.7/site-packages/redis/client.py\", line 680, in parse_response\r\n    response = connection.read_response()\r\n  File \"/Library/Python/2.7/site-packages/redis/connection.py\", line 629, in read_response\r\n    raise response\r\nredis.exceptions.ResponseError: MOVED 4085 10.213.192.152:6379\r\n```\r\n\r\nAny idea? I'm using the latest reds-py-cluster version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/235", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/235/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/235/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/235", "id": 287257072, "node_id": "MDU6SXNzdWUyODcyNTcwNzI=", "number": 235, "title": "AWS Redis Cluster fails with CONFIG (already set skip_full_coverage_check=False)", "user": {"login": "mingtm", "id": 15743116, "node_id": "MDQ6VXNlcjE1NzQzMTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/15743116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingtm", "html_url": "https://github.com/mingtm", "followers_url": "https://api.github.com/users/mingtm/followers", "following_url": "https://api.github.com/users/mingtm/following{/other_user}", "gists_url": "https://api.github.com/users/mingtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingtm/subscriptions", "organizations_url": "https://api.github.com/users/mingtm/orgs", "repos_url": "https://api.github.com/users/mingtm/repos", "events_url": "https://api.github.com/users/mingtm/events{/privacy}", "received_events_url": "https://api.github.com/users/mingtm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-09T22:47:06Z", "updated_at": "2018-03-05T09:16:22Z", "closed_at": "2018-03-05T09:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The same issue still happens:\r\n\r\n```\r\nfrom rediscluster import StrictRedisCluster\r\nstartup_nodes = [{\"host\": \"xxxx.clustercfg.apn2.cache.amazonaws.com\", \"port\": \"6379\"}]\r\nr = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True, skip_full_coverage_check=False)\r\nr.set('foo', 'bar')\r\nvalue = r.get('foo')\r\n```\r\n\r\n```\r\nException:\r\nTraceback (most recent call last):\r\nFile \"testRedisCluster.py\", line 11, in \r\nr = StrictRedisCluster(startup_nodes=startup_nodes, decode_responses=True, skip_full_coverage_check=False)\r\nFile \"/Library/Python/2.7/site-packages/rediscluster/client.py\", line 181, in init\r\n**kwargs\r\nFile \"/Library/Python/2.7/site-packages/rediscluster/connection.py\", line 141, in init\r\nself.nodes.initialize()\r\nFile \"/Library/Python/2.7/site-packages/rediscluster/nodemanager.py\", line 228, in initialize\r\nneed_full_slots_coverage = self.cluster_require_full_coverage(nodes_cache)\r\nFile \"/Library/Python/2.7/site-packages/rediscluster/nodemanager.py\", line 270, in cluster_require_full_coverage\r\nreturn any(node_require_full_coverage(node) for node in nodes.values())\r\nFile \"/Library/Python/2.7/site-packages/rediscluster/nodemanager.py\", line 270, in \r\nreturn any(node_require_full_coverage(node) for node in nodes.values())\r\nFile \"/Library/Python/2.7/site-packages/rediscluster/nodemanager.py\", line 267, in node_require_full_coverage\r\nreturn \"yes\" in r_node.config_get(\"cluster-require-full-coverage\").values()\r\nFile \"/Library/Python/2.7/site-packages/redis/client.py\", line 715, in config_get\r\nreturn self.execute_command('CONFIG GET', pattern)\r\nFile \"/Library/Python/2.7/site-packages/redis/client.py\", line 668, in execute_command\r\nreturn self.parse_response(connection, command_name, **options)\r\nFile \"/Library/Python/2.7/site-packages/redis/client.py\", line 680, in parse_response\r\nresponse = connection.read_response()\r\nFile \"/Library/Python/2.7/site-packages/redis/connection.py\", line 629, in read_response\r\nraise response\r\nredis.exceptions.ResponseError: unknown command 'CONFIG'\r\n```\r\n\r\nI'm using redis-py-cluster 1.3.4.\r\n\r\nAny idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/234", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/234/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/234/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/234", "id": 284529856, "node_id": "MDU6SXNzdWUyODQ1Mjk4NTY=", "number": 234, "title": "Multi thread would cause connections leak\uff1f", "user": {"login": "kkfnui", "id": 1238381, "node_id": "MDQ6VXNlcjEyMzgzODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1238381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkfnui", "html_url": "https://github.com/kkfnui", "followers_url": "https://api.github.com/users/kkfnui/followers", "following_url": "https://api.github.com/users/kkfnui/following{/other_user}", "gists_url": "https://api.github.com/users/kkfnui/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkfnui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkfnui/subscriptions", "organizations_url": "https://api.github.com/users/kkfnui/orgs", "repos_url": "https://api.github.com/users/kkfnui/repos", "events_url": "https://api.github.com/users/kkfnui/events{/privacy}", "received_events_url": "https://api.github.com/users/kkfnui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-26T10:02:11Z", "updated_at": "2017-12-26T10:10:39Z", "closed_at": "2017-12-26T10:10:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use `redis-py-cluster` in production enviroment, that is django on gunicorn.\r\n\r\nhttps://github.com/Grokzen/redis-py-cluster/blob/13503d9954456882a70580750464885ac8540b3f/rediscluster/connection.py#L208\r\n\r\nUnder multi thread env, `self._in_use_connections[node['name']] ` would erase by empty set if other threads had assign values. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/233", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/233/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/233/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/233", "id": 282786905, "node_id": "MDU6SXNzdWUyODI3ODY5MDU=", "number": 233, "title": "\u5728python2.7 \u73af\u5883\u4e2d\u65e0\u95ee\u9898\u57282.6.6\u7248\u672c\u4e2d\u62a5\u8bed\u6cd5\u9519\u8bef", "user": {"login": "benben17", "id": 11755695, "node_id": "MDQ6VXNlcjExNzU1Njk1", "avatar_url": "https://avatars3.githubusercontent.com/u/11755695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benben17", "html_url": "https://github.com/benben17", "followers_url": "https://api.github.com/users/benben17/followers", "following_url": "https://api.github.com/users/benben17/following{/other_user}", "gists_url": "https://api.github.com/users/benben17/gists{/gist_id}", "starred_url": "https://api.github.com/users/benben17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benben17/subscriptions", "organizations_url": "https://api.github.com/users/benben17/orgs", "repos_url": "https://api.github.com/users/benben17/repos", "events_url": "https://api.github.com/users/benben17/events{/privacy}", "received_events_url": "https://api.github.com/users/benben17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-18T07:31:12Z", "updated_at": "2017-12-18T14:53:35Z", "closed_at": "2017-12-18T13:24:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nTraceback (most recent call last):\r\n  File \"check_redis_status.py\", line 7, in <module>\r\n    from rediscluster.nodemanager import NodeManager\r\n  File \"/usr/lib/python2.6/site-packages/rediscluster/__init__.py\", line 7, in <module>\r\n    from .client import StrictRedisCluster, RedisCluster\r\n  File \"/usr/lib/python2.6/site-packages/rediscluster/client.py\", line 219\r\n    servers = list({'{0}:{1}'.format(nativestr(info['host']), info['port']) for info in self.connection_pool.nodes.startup_nodes})\r\n                                                                              ^\r\nSyntaxError: invalid syntax", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/232", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/232/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/232/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/232", "id": 282477977, "node_id": "MDU6SXNzdWUyODI0Nzc5Nzc=", "number": 232, "title": "redis-py-cluster support pipeline in cluster mode.", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-15T16:22:17Z", "updated_at": "2017-12-15T17:26:18Z", "closed_at": "2017-12-15T17:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "see title, thank U.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/229", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/229/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/229/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/229", "id": 276314180, "node_id": "MDU6SXNzdWUyNzYzMTQxODA=", "number": 229, "title": "rediscluster.exceptions.RedisClusterException: method multi() is not implemented", "user": {"login": "ShayChris", "id": 18242517, "node_id": "MDQ6VXNlcjE4MjQyNTE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18242517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShayChris", "html_url": "https://github.com/ShayChris", "followers_url": "https://api.github.com/users/ShayChris/followers", "following_url": "https://api.github.com/users/ShayChris/following{/other_user}", "gists_url": "https://api.github.com/users/ShayChris/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShayChris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShayChris/subscriptions", "organizations_url": "https://api.github.com/users/ShayChris/orgs", "repos_url": "https://api.github.com/users/ShayChris/repos", "events_url": "https://api.github.com/users/ShayChris/events{/privacy}", "received_events_url": "https://api.github.com/users/ShayChris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T09:48:17Z", "updated_at": "2017-11-23T12:08:37Z", "closed_at": "2017-11-23T12:08:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use rediscluster in my scrapy-redis, but some error happended \r\n\r\n```\r\nFile \"/root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/twisted/internet/base.py\", line 878, in runUntilCurrent\r\n    call.func(*call.args, **call.kw)\r\n  File \"/root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/scrapy/utils/reactor.py\", line 41, in __call__\r\n    return self._func(*self._a, **self._kw)\r\n  File \"/root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/scrapy/core/engine.py\", line 122, in _next_request\r\n    if not self._next_request_from_scheduler(spider):\r\n  File \"/root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/scrapy/core/engine.py\", line 149, in _next_request_from_scheduler\r\n    request = slot.scheduler.next_request()\r\n  File \"/tmp/zhaopin-1511429516-bcs7wqv8.egg/zhaopinSpider/scrapy_redis/scheduler.py\", line 172, in next_request\r\n    \r\n  File \"/root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/scrapy_redis/queue.py\", line 113, in pop\r\n    pipe.multi()\r\n  File \"/root/.pyenv/versions/3.6.2/lib/python3.6/site-packages/rediscluster/pipeline.py\", line 245, in multi\r\n    raise RedisClusterException(\"method multi() is not implemented\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/228", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/228/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/228/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/228", "id": 272134338, "node_id": "MDU6SXNzdWUyNzIxMzQzMzg=", "number": 228, "title": "get() is too slow in cluster mode", "user": {"login": "amazingWu", "id": 22788957, "node_id": "MDQ6VXNlcjIyNzg4OTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/22788957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amazingWu", "html_url": "https://github.com/amazingWu", "followers_url": "https://api.github.com/users/amazingWu/followers", "following_url": "https://api.github.com/users/amazingWu/following{/other_user}", "gists_url": "https://api.github.com/users/amazingWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/amazingWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amazingWu/subscriptions", "organizations_url": "https://api.github.com/users/amazingWu/orgs", "repos_url": "https://api.github.com/users/amazingWu/repos", "events_url": "https://api.github.com/users/amazingWu/events{/privacy}", "received_events_url": "https://api.github.com/users/amazingWu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-08T09:45:03Z", "updated_at": "2017-12-18T13:25:45Z", "closed_at": "2017-12-18T13:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "my redis cluster has 6 nodes\r\nI used the following code to test, but some key was too slow, >20s\r\n\r\n```\r\nimport random\r\nfrom rediscluster import *\r\n\r\n\r\ndef make_string():\r\n    seed = \"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\"\r\n    sa = []\r\n    for i in range(35):\r\n        sa.append(random.choice(seed))\r\n    salt = ''.join(sa)\r\n    return salt\r\n\r\n\r\nredis_nodes = [{'host': 'xx.xx.xx.157', 'port': 7000},\r\n               {'host': 'xx.xx.xx.157', 'port': 7001},\r\n               {'host': 'xx.xx.xx.157', 'port': 7002},\r\n               {'host': 'xx.xx.xx.157', 'port': 7003},\r\n               {'host': 'xx.xx.xx.157', 'port': 7004},\r\n               {'host': 'xx.xx.xx.157', 'port': 7005}\r\n               ]\r\n\r\n\r\nredisconn = StrictRedisCluster(startup_nodes=redis_nodes)\r\nfor i in range(1000):\r\n    key = make_string()\r\n    print(str(key))\r\n    value = redisconn.get(key)\r\n    print(value)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/227", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/227/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/227/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/227", "id": 271587559, "node_id": "MDU6SXNzdWUyNzE1ODc1NTk=", "number": 227, "title": "the callback for `CLUSTER GETKEYSINSLOT` does not work in redis 3+", "user": {"login": "lorencarvalho", "id": 1018108, "node_id": "MDQ6VXNlcjEwMTgxMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1018108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorencarvalho", "html_url": "https://github.com/lorencarvalho", "followers_url": "https://api.github.com/users/lorencarvalho/followers", "following_url": "https://api.github.com/users/lorencarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/lorencarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorencarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorencarvalho/subscriptions", "organizations_url": "https://api.github.com/users/lorencarvalho/orgs", "repos_url": "https://api.github.com/users/lorencarvalho/repos", "events_url": "https://api.github.com/users/lorencarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/lorencarvalho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-06T19:14:08Z", "updated_at": "2018-03-06T14:51:11Z", "closed_at": "2018-03-06T09:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hiya,\r\n\r\nHere's some code to illustrate the issue:\r\n```\r\n>>> from rediscluster import StrictRedisCluster\r\n>>> startup_nodes = [{'host': '127.0.0.1', 'port': 2951}]\r\n>>> rc = StrictRedisCluster(startup_nodes=startup_nodes)\r\n>>> rc.CLUSTER_COMMANDS_RESPONSE_CALLBACKS['CLUSTER GETKEYSINSLOT']\r\nint\r\n>>> rc.execute_command('CLUSTER GETKEYSINSLOT', 601, 2)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-5-2ad54da2b333> in <module>()\r\n----> 1 rc.execute_command('CLUSTER GETKEYSINSLOT', 601, 2)\r\n...\r\n...\r\n...\r\nvenv/lib/python3.6/site-packages/redis/client.py in parse_response(self, connection, command_name, **options)\r\n    585         response = connection.read_response()\r\n    586         if command_name in self.response_callbacks:\r\n--> 587             return self.response_callbacks[command_name](response, **options)\r\n    588         return response\r\n    589\r\n\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'list'\r\n```\r\n\r\nAfter applying this diff: \r\n```\r\n(venv) lcarvalh-ld ~/src/redis-py-cluster git:unstable \u00b1 \u2771\u2771\u2771 git diff\r\ndiff --git a/rediscluster/client.py b/rediscluster/client.py\r\nindex d0258c3..8f77925 100644\r\n--- a/rediscluster/client.py\r\n+++ b/rediscluster/client.py\r\n@@ -108,7 +108,7 @@ class StrictRedisCluster(StrictRedis):\r\n         'CLUSTER DELSLOTS': bool_ok,\r\n         'CLUSTER FAILOVER': bool_ok,\r\n         'CLUSTER FORGET': bool_ok,\r\n-        'CLUSTER GETKEYSINSLOT': int,\r\n+        'CLUSTER GETKEYSINSLOT': list,\r\n         'CLUSTER INFO': parse_info,\r\n         'CLUSTER KEYSLOT': int,\r\n         'CLUSTER MEET': bool_ok,\r\n```\r\n\r\nThe command now returns a list of bytestring keys:\r\n```\r\n>>> from rediscluster import StrictRedisCluster\r\n>>> startup_nodes = [{'host': '10.136.208.61', 'port': 2951}]\r\n>>> rc = StrictRedisCluster(startup_nodes=startup_nodes)\r\n>>> rc.CLUSTER_COMMANDS_RESPONSE_CALLBACKS['CLUSTER GETKEYSINSLOT']\r\nlist\r\n>>> rc.execute_command('CLUSTER GETKEYSINSLOT', 601, 1)\r\n[b'prod.tag_hosts:ROUTER_MT-LD-2']\r\n```\r\n\r\nHappy to submit a PR, but I presume that just a list of raw bytes it not ideal, based on the existence of `parse_cluster_nodes` and `parse_cluster_slots`. What would you prefer? A simple function that parses each key would satisfy my personal needs (and I've subclassed `StrictRedisCluster` to do this:\r\n\r\n```\r\nclass RedisCluster(StrictRedisCluster):\r\n    def __init__(self, *args, **kwargs) -> None:\r\n        \"\"\"Create a RedisCluster.\"\"\"\r\n        # fix getkeysinslot callback\r\n        self.CLUSTER_COMMANDS_RESPONSE_CALLBACKS['CLUSTER GETKEYSINSLOT'] = lambda x: [nativestr(i) for i in x]\r\n        super().__init__(*args, **kwargs)\r\n```\r\n\r\nThanks in advance for looking!\r\n\r\nreference: https://redis.io/commands/cluster-getkeysinslot", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/225", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/225/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/225/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/225", "id": 267960537, "node_id": "MDU6SXNzdWUyNjc5NjA1Mzc=", "number": 225, "title": "Unable to init StrictRedisCluster", "user": {"login": "amirvaza", "id": 25140441, "node_id": "MDQ6VXNlcjI1MTQwNDQx", "avatar_url": "https://avatars2.githubusercontent.com/u/25140441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirvaza", "html_url": "https://github.com/amirvaza", "followers_url": "https://api.github.com/users/amirvaza/followers", "following_url": "https://api.github.com/users/amirvaza/following{/other_user}", "gists_url": "https://api.github.com/users/amirvaza/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirvaza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirvaza/subscriptions", "organizations_url": "https://api.github.com/users/amirvaza/orgs", "repos_url": "https://api.github.com/users/amirvaza/repos", "events_url": "https://api.github.com/users/amirvaza/events{/privacy}", "received_events_url": "https://api.github.com/users/amirvaza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-24T09:30:54Z", "updated_at": "2017-10-24T11:01:52Z", "closed_at": "2017-10-24T11:01:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/224", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/224/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/224/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/224", "id": 267551305, "node_id": "MDU6SXNzdWUyNjc1NTEzMDU=", "number": 224, "title": "Support for Redis 4.0.2?", "user": {"login": "miriaford", "id": 29965840, "node_id": "MDQ6VXNlcjI5OTY1ODQw", "avatar_url": "https://avatars3.githubusercontent.com/u/29965840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miriaford", "html_url": "https://github.com/miriaford", "followers_url": "https://api.github.com/users/miriaford/followers", "following_url": "https://api.github.com/users/miriaford/following{/other_user}", "gists_url": "https://api.github.com/users/miriaford/gists{/gist_id}", "starred_url": "https://api.github.com/users/miriaford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miriaford/subscriptions", "organizations_url": "https://api.github.com/users/miriaford/orgs", "repos_url": "https://api.github.com/users/miriaford/repos", "events_url": "https://api.github.com/users/miriaford/events{/privacy}", "received_events_url": "https://api.github.com/users/miriaford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-23T06:11:15Z", "updated_at": "2017-11-01T17:26:18Z", "closed_at": "2017-11-01T17:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder how well does the current master branch support Redis 4.0.2? I read on the redis official doc that \"Redis Cluster 4.0 is not compatible with Redis Cluster 3.2 at cluster bus protocol level\". I'm not sure how much does that impact redis-py-cluster.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/219", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/219/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/219/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/219", "id": 258020415, "node_id": "MDU6SXNzdWUyNTgwMjA0MTU=", "number": 219, "title": "All Tests failing on TestScripting.test_script_object", "user": {"login": "AngusP", "id": 1328814, "node_id": "MDQ6VXNlcjEzMjg4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1328814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngusP", "html_url": "https://github.com/AngusP", "followers_url": "https://api.github.com/users/AngusP/followers", "following_url": "https://api.github.com/users/AngusP/following{/other_user}", "gists_url": "https://api.github.com/users/AngusP/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngusP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions", "organizations_url": "https://api.github.com/users/AngusP/orgs", "repos_url": "https://api.github.com/users/AngusP/repos", "events_url": "https://api.github.com/users/AngusP/events{/privacy}", "received_events_url": "https://api.github.com/users/AngusP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-15T12:17:00Z", "updated_at": "2017-11-01T16:38:23Z", "closed_at": "2017-11-01T16:38:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/Grokzen/redis-py-cluster/blob/078867b51b2613ad822c1bcf6997fc29df0ade18/tests/test_scripting.py#L97\r\n\r\n`assert not multiply.sha` seems to cause a fail for basically all the unit tests at the moment...\r\n\r\nThe `sha` member used to be just `''` which will pass `assert not ''`:\r\n\r\nhttps://github.com/andymccurdy/redis-py/blob/d6c300b39ab4c81cd97b81fcd8d25a9cde9476e7/redis/client.py#L2935\r\n\r\nBut since https://github.com/andymccurdy/redis-py/commit/f49f7d27592a5ed1e7f27f032c1e54d646154c89 is pre-computed as of ~4mo ago so no-longer passes this assertion if using a version of redis-py with this change... A simple fix would probably be to just zap this line, it doesn't seem to have any super-critical purpose", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/217", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/217/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/217/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/217", "id": 257377434, "node_id": "MDU6SXNzdWUyNTczNzc0MzQ=", "number": 217, "title": "Cluster Nodes raising `ValueError` with Redis 4.0.1", "user": {"login": "AngusP", "id": 1328814, "node_id": "MDQ6VXNlcjEzMjg4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1328814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngusP", "html_url": "https://github.com/AngusP", "followers_url": "https://api.github.com/users/AngusP/followers", "following_url": "https://api.github.com/users/AngusP/following{/other_user}", "gists_url": "https://api.github.com/users/AngusP/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngusP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngusP/subscriptions", "organizations_url": "https://api.github.com/users/AngusP/orgs", "repos_url": "https://api.github.com/users/AngusP/repos", "events_url": "https://api.github.com/users/AngusP/events{/privacy}", "received_events_url": "https://api.github.com/users/AngusP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-13T13:18:54Z", "updated_at": "2018-03-03T19:21:15Z", "closed_at": "2018-03-03T19:21:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`StrictRedisCluster instance.cluster_nodes()` now gives:\r\n\r\n```\r\n>>> r.cluster_nodes()\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-9-af3a2ae28b27> in <module>()\r\n----> 1 r.cluster_nodes()\r\n\r\n/rediscluster/client.py in cluster_nodes(self)\r\n    510         Sends to random node in the cluster\r\n    511         \"\"\"\r\n--> 512         return self.execute_command('CLUSTER NODES')\r\n    513 \r\n    514     def cluster_replicate(self, target_node_id):\r\n\r\n/rediscluster/utils.py in inner(*args, **kwargs)\r\n     99         for _ in range(0, 3):\r\n    100             try:\r\n--> 101                 return func(*args, **kwargs)\r\n    102             except ClusterDownError:\r\n    103                 # Try again with the new cluster setup. All other errors\r\n\r\n/rediscluster/client.py in execute_command(self, *args, **kwargs)\r\n    317         node = self.determine_node(*args, **kwargs)\r\n    318         if node:\r\n--> 319             return self._execute_command_on_nodes(node, *args, **kwargs)\r\n    320 \r\n    321         # If set externally we must update it before calling any commands\r\n\r\n/rediscluster/client.py in _execute_command_on_nodes(self, nodes, *args, **kwargs)\r\n    401             try:\r\n    402                 connection.send_command(*args)\r\n--> 403                 res[node[\"name\"]] = self.parse_response(connection, command, **kwargs)\r\n    404             except (ConnectionError, TimeoutError) as e:\r\n    405                 connection.disconnect()\r\n\r\n/redis/client.py in parse_response(self, connection, command_name, **options)\r\n    680         response = connection.read_response()\r\n    681         if command_name in self.response_callbacks:\r\n--> 682             return self.response_callbacks[command_name](response, **options)\r\n    683         return response\r\n    684 \r\n\r\n/rediscluster/utils.py in parse_cluster_nodes(resp, **options)\r\n    188             'id': self_id,\r\n    189             'host': host or current_host,\r\n--> 190             'port': int(port),\r\n    191             'flags': tuple(flags.split(',')),\r\n    192             'master': master_id if master_id != '-' else None,\r\n\r\nValueError: invalid literal for int() with base 10: '6379@16379'\r\n```\r\n\r\nThis looks like it's simply because `CLUSTER NODES` is now annotated with both the Redis client port and the Cluster bus port, delimited with a `@` which is obviously not an `int`.\r\n\r\n`redis-cli` output (With hashes truncated for readability):\r\n\r\n```\r\n`27.0.0.1:6379> cluster nodes\r\nc92...6b5 127.0.0.1:6383@16383 slave 9c4...802 0 1505308633000 5 connected\r\ndbc...3c3 127.0.0.1:6379@16379 myself,master - 0 1505308633000 1 connected 0-5460\r\nd42...573 127.0.0.1:6382@16382 slave dbc...3c3 0 1505308633090 4 connected\r\n615...da3 127.0.0.1:6381@16381 master - 0 1505308633291 3 connected 10923-16383\r\n9c4...802 127.0.0.1:6380@16380 master - 0 1505308633492 2 connected 5461-10922\r\n33c...f92 127.0.0.1:6384@16384 slave 615...da3 0 1505308633090 6 connected\r\n```\r\n\r\nI'll PR a fix soonish when I can get around to it at work, so I thought I'd issue first.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/214", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/214/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/214/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/214", "id": 253584277, "node_id": "MDU6SXNzdWUyNTM1ODQyNzc=", "number": 214, "title": "Operation timed out!!!", "user": {"login": "LJerRRy", "id": 18029371, "node_id": "MDQ6VXNlcjE4MDI5Mzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/18029371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LJerRRy", "html_url": "https://github.com/LJerRRy", "followers_url": "https://api.github.com/users/LJerRRy/followers", "following_url": "https://api.github.com/users/LJerRRy/following{/other_user}", "gists_url": "https://api.github.com/users/LJerRRy/gists{/gist_id}", "starred_url": "https://api.github.com/users/LJerRRy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LJerRRy/subscriptions", "organizations_url": "https://api.github.com/users/LJerRRy/orgs", "repos_url": "https://api.github.com/users/LJerRRy/repos", "events_url": "https://api.github.com/users/LJerRRy/events{/privacy}", "received_events_url": "https://api.github.com/users/LJerRRy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-29T09:19:54Z", "updated_at": "2017-08-29T10:31:28Z", "closed_at": "2017-08-29T10:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I connect the redis cluster,  ip  `47.94.201.120`, but occur can't connecting to `172.17.192.210`(`172.17.192.210` is the private ip. )\r\n\r\n```\r\nredis_nodes = [{'host': '47.94.201.120', 'port': 7000},\r\n               {'host': '47.94.201.120', 'port': 7001},\r\n               {'host': '47.94.201.120', 'port': 7002},\r\n               {'host': '47.94.201.120', 'port': 7003},\r\n               {'host': '47.94.201.120', 'port': 7004},\r\n               {'host': '47.94.201.120', 'port': 7005}\r\n              ]\r\ntry:\r\n    redisconn = StrictRedisCluster(startup_nodes=redis_nodes)\r\nexcept Exception as e:\r\n    print(e)\r\n    sys.exit(1)\r\n```\r\n**Errors**\r\n`Error 60 connecting to 172.17.192.210:7000. Operation timed out.`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/213", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/213/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/213/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/213", "id": 252762041, "node_id": "MDU6SXNzdWUyNTI3NjIwNDE=", "number": 213, "title": "Question: Does this library support locking api's in redis-py library?", "user": {"login": "noorul", "id": 155376, "node_id": "MDQ6VXNlcjE1NTM3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/155376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noorul", "html_url": "https://github.com/noorul", "followers_url": "https://api.github.com/users/noorul/followers", "following_url": "https://api.github.com/users/noorul/following{/other_user}", "gists_url": "https://api.github.com/users/noorul/gists{/gist_id}", "starred_url": "https://api.github.com/users/noorul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noorul/subscriptions", "organizations_url": "https://api.github.com/users/noorul/orgs", "repos_url": "https://api.github.com/users/noorul/repos", "events_url": "https://api.github.com/users/noorul/events{/privacy}", "received_events_url": "https://api.github.com/users/noorul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-24T23:49:39Z", "updated_at": "2018-03-03T19:50:00Z", "closed_at": "2018-03-03T19:50:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think the api in redis-py library for lock uses multiple commands. Will this be safe on redis cluster?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/211", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/211/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/211/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/211", "id": 249011663, "node_id": "MDU6SXNzdWUyNDkwMTE2NjM=", "number": 211, "title": "raise ConnectionError when one of cluster master node down", "user": {"login": "wenxuanguan", "id": 7418459, "node_id": "MDQ6VXNlcjc0MTg0NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7418459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenxuanguan", "html_url": "https://github.com/wenxuanguan", "followers_url": "https://api.github.com/users/wenxuanguan/followers", "following_url": "https://api.github.com/users/wenxuanguan/following{/other_user}", "gists_url": "https://api.github.com/users/wenxuanguan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenxuanguan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenxuanguan/subscriptions", "organizations_url": "https://api.github.com/users/wenxuanguan/orgs", "repos_url": "https://api.github.com/users/wenxuanguan/repos", "events_url": "https://api.github.com/users/wenxuanguan/events{/privacy}", "received_events_url": "https://api.github.com/users/wenxuanguan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-09T12:18:09Z", "updated_at": "2018-03-03T19:17:55Z", "closed_at": "2018-03-03T19:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run a four-node redis-cluster with config `cluster-require-full-coverage=no`, where one master node(127.0.0.1:7381) down,  data visit in other connected node should be normal. \r\nHowever, when i  init StrictRedisCluster, `ConnectionError ` raised.\r\n```python\r\nTraceback (most recent call last):\r\n  File \"E:/pyworkplace/reliability/script/t.py\", line 54, in <module>\r\n    client = RedisClient('127.0.0.1:6380')\r\n  File \"E:/pyworkplace/reliability/script/t.py\", line 18, in __init__\r\n    self.client = StrictRedisCluster(skip_full_coverage_check=True, host='127.0.0.1', port=6380)\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\client.py\", line 157, in __init__\r\n    **kwargs\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\connection.py\", line 83, in __init__\r\n    self.nodes.initialize()\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\nodemanager.py\", line 190, in initialize\r\n    need_full_slots_coverage = self.cluster_require_full_coverage(nodes_cache)\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\nodemanager.py\", line 225, in cluster_require_full_coverage\r\n    return any(node_require_full_coverage(node) for node in nodes.values())\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\nodemanager.py\", line 225, in <genexpr>\r\n    return any(node_require_full_coverage(node) for node in nodes.values())\r\n  File \"C:\\Python27\\lib\\site-packages\\rediscluster\\nodemanager.py\", line 222, in node_require_full_coverage\r\n    return \"yes\" in r_node.config_get(\"cluster-require-full-coverage\").values()\r\n  File \"build\\bdist.win32\\egg\\redis\\client.py\", line 620, in config_get\r\n  File \"build\\bdist.win32\\egg\\redis\\client.py\", line 578, in execute_command\r\n  File \"build\\bdist.win32\\egg\\redis\\connection.py\", line 563, in send_command\r\n  File \"build\\bdist.win32\\egg\\redis\\connection.py\", line 538, in send_packed_command\r\n  File \"build\\bdist.win32\\egg\\redis\\connection.py\", line 442, in connect\r\nredis.exceptions.ConnectionError: Error 10061 connecting to 127.0.0.1:7381. .\r\n```\r\nWhat i know from stack trace is StrictRedisCluster send command to get config `cluster-require-full-coverage` when init, While failed master node is disconnected.\r\n\r\nAlso, I found no way to skip the step, get config `cluster-require-full-coverage` .\r\n\r\n- env\r\nredis-cluster: 3.0.3\r\nredis-py-cluster: 1.2.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/207", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/207/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/207/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/207", "id": 247151546, "node_id": "MDU6SXNzdWUyNDcxNTE1NDY=", "number": 207, "title": "ImportError: No module named 'redis.exceptions'; 'redis' is not a package", "user": {"login": "tmshn", "id": 3760893, "node_id": "MDQ6VXNlcjM3NjA4OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3760893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmshn", "html_url": "https://github.com/tmshn", "followers_url": "https://api.github.com/users/tmshn/followers", "following_url": "https://api.github.com/users/tmshn/following{/other_user}", "gists_url": "https://api.github.com/users/tmshn/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmshn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmshn/subscriptions", "organizations_url": "https://api.github.com/users/tmshn/orgs", "repos_url": "https://api.github.com/users/tmshn/repos", "events_url": "https://api.github.com/users/tmshn/events{/privacy}", "received_events_url": "https://api.github.com/users/tmshn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-01T17:57:50Z", "updated_at": "2017-08-10T14:05:37Z", "closed_at": "2017-08-01T18:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've just tried to use this library, but bumped into the problem at the very beginning: `import rediscluster` gives me an `ImportError`\r\n\r\n```python\r\n>>> import rediscluster\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/var/pyenv/versions/3.5.3/lib/python3.5/site-packages/rediscluster/__init__.py\", line 7, in <module>\r\n    from .client import StrictRedisCluster, RedisCluster\r\n  File \"/usr/local/var/pyenv/versions/3.5.3/lib/python3.5/site-packages/rediscluster/client.py\", line 10, in <module>\r\n    from .connection import ClusterConnectionPool, ClusterReadOnlyConnectionPool\r\n  File \"/usr/local/var/pyenv/versions/3.5.3/lib/python3.5/site-packages/rediscluster/connection.py\", line 11, in <module>\r\n    from .nodemanager import NodeManager\r\n  File \"/usr/local/var/pyenv/versions/3.5.3/lib/python3.5/site-packages/rediscluster/nodemanager.py\", line 9, in <module>\r\n    from .exceptions import RedisClusterException\r\n  File \"/usr/local/var/pyenv/versions/3.5.3/lib/python3.5/site-packages/rediscluster/exceptions.py\", line 3, in <module>\r\n    from redis.exceptions import (\r\nImportError: No module named 'redis.exceptions'; 'redis' is not a package\r\n```\r\n\r\nThe step to reproduce is as simple as follows:\r\n1. Prepare clean Python: I did `pyenv install 3.5.3 && pyenv local 3.5.3`\r\n1. Install redis-py-cluster: `pip install redis-py-cluster`\r\n1. Just import: `import rediscluster`\r\n\r\nFor more info:\r\n```bash\r\n$ pip freeze\r\nredis==2.10.5\r\nredis-py-cluster==1.3.4\r\n```\r\n\r\nI'm currently using macOS, but I encountered same error on Ubuntu 16.04 and Google App Engine flexible environment.\r\n\r\nCan anyone have idea about this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/206", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/206/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/206/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/206", "id": 246323684, "node_id": "MDU6SXNzdWUyNDYzMjM2ODQ=", "number": 206, "title": "Is Geo supported in this release?", "user": {"login": "Andy320", "id": 30316581, "node_id": "MDQ6VXNlcjMwMzE2NTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/30316581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andy320", "html_url": "https://github.com/Andy320", "followers_url": "https://api.github.com/users/Andy320/followers", "following_url": "https://api.github.com/users/Andy320/following{/other_user}", "gists_url": "https://api.github.com/users/Andy320/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andy320/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andy320/subscriptions", "organizations_url": "https://api.github.com/users/Andy320/orgs", "repos_url": "https://api.github.com/users/Andy320/repos", "events_url": "https://api.github.com/users/Andy320/events{/privacy}", "received_events_url": "https://api.github.com/users/Andy320/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-28T11:39:54Z", "updated_at": "2017-11-01T17:24:42Z", "closed_at": "2017-11-01T17:24:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi , thank you all for your effort in this project. \r\nAnd I want to know if the Geo function been supported by redis-py-cluster? \r\n\r\nthank u", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/205", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/205/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/205/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/205", "id": 246190241, "node_id": "MDU6SXNzdWUyNDYxOTAyNDE=", "number": 205, "title": "redis-py-cluster support part  pipeline ? ", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-27T22:42:12Z", "updated_at": "2017-11-01T19:02:36Z", "closed_at": "2017-11-01T19:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "see title, thank U.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/203", "repository_url": "https://api.github.com/repos/Grokzen/redis-py-cluster", "labels_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/203/comments", "events_url": "https://api.github.com/repos/Grokzen/redis-py-cluster/issues/203/events", "html_url": "https://github.com/Grokzen/redis-py-cluster/issues/203", "id": 239678517, "node_id": "MDU6SXNzdWUyMzk2Nzg1MTc=", "number": 203, "title": "rename command error", "user": {"login": "Icepo", "id": 9268524, "node_id": "MDQ6VXNlcjkyNjg1MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9268524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Icepo", "html_url": "https://github.com/Icepo", "followers_url": "https://api.github.com/users/Icepo/followers", "following_url": "https://api.github.com/users/Icepo/following{/other_user}", "gists_url": "https://api.github.com/users/Icepo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Icepo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Icepo/subscriptions", "organizations_url": "https://api.github.com/users/Icepo/orgs", "repos_url": "https://api.github.com/users/Icepo/repos", "events_url": "https://api.github.com/users/Icepo/events{/privacy}", "received_events_url": "https://api.github.com/users/Icepo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-30T05:08:17Z", "updated_at": "2020-07-15T16:14:47Z", "closed_at": "2017-11-01T18:45:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "While I test the rename command, it says \u3010UnicodeDecodeError: 'utf8' codec can't decode byte 0xe8 in position 2: invalid continuation byte\u3011\u3002So I had checked all the documents make sure they have [# -*- coding: UTF-8 -*-]\u3002\r\nOther command such as get\uff0cset,  zadd, zcard, delete all work\u3002", "performed_via_github_app": null, "score": 1.0}]}