{"total_count": 933, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2164", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2164/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2164/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2164/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2164", "id": 676935003, "node_id": "MDU6SXNzdWU2NzY5MzUwMDM=", "number": 2164, "title": "Error: PythonPipBuilder:ResolveDependencies - {pymsteams==0.1.13(sdist)}", "user": {"login": "dslove", "id": 19293915, "node_id": "MDQ6VXNlcjE5MjkzOTE1", "avatar_url": "https://avatars1.githubusercontent.com/u/19293915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dslove", "html_url": "https://github.com/dslove", "followers_url": "https://api.github.com/users/dslove/followers", "following_url": "https://api.github.com/users/dslove/following{/other_user}", "gists_url": "https://api.github.com/users/dslove/gists{/gist_id}", "starred_url": "https://api.github.com/users/dslove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dslove/subscriptions", "organizations_url": "https://api.github.com/users/dslove/orgs", "repos_url": "https://api.github.com/users/dslove/repos", "events_url": "https://api.github.com/users/dslove/events{/privacy}", "received_events_url": "https://api.github.com/users/dslove/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-11T14:41:40Z", "updated_at": "2020-08-12T22:20:32Z", "closed_at": "2020-08-12T22:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nI tried to sam build a lambda function but hit this problem, making the build fail.\r\n\r\n### Steps to reproduce\r\n\r\nI have a lmabda function and its cloudformation yaml file. The dependencies are in a requirements.txt which includes 3 libs: requests, boto3, and pymsteams.\r\nThen I tried sam build and sam package cmds together like this:\r\n```\r\nsam build --region us-east-1 && sam package --s3-bucket my-lambda-artifacts --output-template-file packaged.yaml --use-container\r\n```\r\n\r\n### Observed result\r\n\r\n```\r\nBuild Failed\r\nError: PythonPipBuilder:ResolveDependencies - {pymsteams==0.1.13(sdist)}\r\n```\r\nNote that this error included boto3 package before but after I upgraded sam-cli to 1.0.0 it is gone. But the problem with pymsteams is still there.\r\n\r\nAdding `--debug` has no difference. Just show simply the above error info.\r\n\r\n### Expected result\r\n\r\nExpected the lambda function is successfully built and packaged.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac Catalina 10.15.6\r\n2. `sam --version`: 1.0.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2157", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2157/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2157/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2157/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2157", "id": 674931081, "node_id": "MDU6SXNzdWU2NzQ5MzEwODE=", "number": 2157, "title": "SAM Validate without AWS Credentials.", "user": {"login": "supreetd21", "id": 20113408, "node_id": "MDQ6VXNlcjIwMTEzNDA4", "avatar_url": "https://avatars3.githubusercontent.com/u/20113408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supreetd21", "html_url": "https://github.com/supreetd21", "followers_url": "https://api.github.com/users/supreetd21/followers", "following_url": "https://api.github.com/users/supreetd21/following{/other_user}", "gists_url": "https://api.github.com/users/supreetd21/gists{/gist_id}", "starred_url": "https://api.github.com/users/supreetd21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supreetd21/subscriptions", "organizations_url": "https://api.github.com/users/supreetd21/orgs", "repos_url": "https://api.github.com/users/supreetd21/repos", "events_url": "https://api.github.com/users/supreetd21/events{/privacy}", "received_events_url": "https://api.github.com/users/supreetd21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T10:45:19Z", "updated_at": "2020-08-10T13:37:01Z", "closed_at": "2020-08-10T13:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe your idea/feature/enhancement\r\nI want to add SAM Validate into my CI to check if all the SAM files are correct.\r\nWhen I checked my debug logs, I found that SAM connects to AWS to send telemetry data.\r\nI turned it off using `export SAM_CLI_TELEMETRY=0` but AWS tries to connect to `\"https://iam.amazonaws.com/\"`, If `sam validate` only checks if the SAM template is correct by parsing the template file, can we have a feature where it can be done without AWS Credentials?\r\n\r\n### Proposal\r\n- Based on the SAM_CLI_TELEMETRY env variable\r\n- Skip the check for AWS Credentials if the validate option has been called.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2152", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2152/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2152/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2152/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2152", "id": 671836159, "node_id": "MDU6SXNzdWU2NzE4MzYxNTk=", "number": 2152, "title": "Parameter to specify which `samconfig.toml` to use", "user": {"login": "milesgranger", "id": 13764397, "node_id": "MDQ6VXNlcjEzNzY0Mzk3", "avatar_url": "https://avatars2.githubusercontent.com/u/13764397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milesgranger", "html_url": "https://github.com/milesgranger", "followers_url": "https://api.github.com/users/milesgranger/followers", "following_url": "https://api.github.com/users/milesgranger/following{/other_user}", "gists_url": "https://api.github.com/users/milesgranger/gists{/gist_id}", "starred_url": "https://api.github.com/users/milesgranger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milesgranger/subscriptions", "organizations_url": "https://api.github.com/users/milesgranger/orgs", "repos_url": "https://api.github.com/users/milesgranger/repos", "events_url": "https://api.github.com/users/milesgranger/events{/privacy}", "received_events_url": "https://api.github.com/users/milesgranger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-03T06:42:34Z", "updated_at": "2020-08-04T02:19:49Z", "closed_at": "2020-08-04T02:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nTo my understanding, `sam deploy` does not presently accept a `--sam-config` type parameter to specify which config to use. \r\n\r\nThis seems beneficial in cases where one has dev/test/production specific config files for `sam`\r\n\r\n### Proposal\r\n\r\nAdd the possibility to do something like `sam deploy --config samconfig-prod.toml`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2150", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2150/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2150/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2150/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2150", "id": 670075887, "node_id": "MDU6SXNzdWU2NzAwNzU4ODc=", "number": 2150, "title": "Using a !If on and Event Timer for Enabled is always True", "user": {"login": "jwalsh2me", "id": 22819585, "node_id": "MDQ6VXNlcjIyODE5NTg1", "avatar_url": "https://avatars0.githubusercontent.com/u/22819585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwalsh2me", "html_url": "https://github.com/jwalsh2me", "followers_url": "https://api.github.com/users/jwalsh2me/followers", "following_url": "https://api.github.com/users/jwalsh2me/following{/other_user}", "gists_url": "https://api.github.com/users/jwalsh2me/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwalsh2me/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwalsh2me/subscriptions", "organizations_url": "https://api.github.com/users/jwalsh2me/orgs", "repos_url": "https://api.github.com/users/jwalsh2me/repos", "events_url": "https://api.github.com/users/jwalsh2me/events{/privacy}", "received_events_url": "https://api.github.com/users/jwalsh2me/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-31T18:06:50Z", "updated_at": "2020-08-07T20:33:21Z", "closed_at": "2020-08-07T20:33:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nI have a Condition in my SAM Template to check the ENV Parameter it True.  I am trying to pass that into a Timer Event to either be true or false under `Enabled`.  It always sends it as `true`. Setting that value to either `true` or `false` works as expected, but using `Enabled: !If [ProdEnv, \"false\", \"false\"]` or `Enabled: !If [ProdEnv, \"true\", \"false\"]` always sets it to true and enabled.\r\n\r\n### Steps to reproduce\r\n\r\n`SAM CLI, version 1.0.0`\r\n\r\nsnipped template:\r\n\r\n```\r\n<SNIP>\r\nParameters:\r\n  ENV:\r\n    Type: String\r\n    Default: prod\r\n    AllowedValues:\r\n      - prod\r\n      - stage\r\n  ProdDbKMSKeyID:\r\n    Type: \"AWS::SSM::Parameter::Value<String>\"\r\n    Default: \"/db/prod/KMSKeyID\"\r\n  NonProdKMSKeyID:\r\n    Type: \"AWS::SSM::Parameter::Value<String>\"\r\n    Default: \"/db/nonprod/KMSKeyID\"\r\n  VendorsKMSKeyID:\r\n    Type: \"AWS::SSM::Parameter::Value<String>\"\r\n    Default: \"/vendors-prod-lambda/KMSKeyID\"\r\n\r\nConditions:\r\n  ProdEnv: !Equals [!Ref ENV, prod]\r\n Environment:\r\n        Variables:\r\n          app_env: !Ref ENV\r\n          dbhost: !Sub \"{{resolve:ssm:/db/${ENV}/edw/hostname:1}}\"\r\n          dbuser: !Sub \"{{resolve:ssm:/db/${ENV}/edw/lambda_user:1}}\"\r\n          dbname: !Sub \"{{resolve:ssm:/db/${ENV}/edw/dbname:1}}\"\r\n          <SNIP>\r\n      VpcConfig:\r\n        SecurityGroupIds:\r\n          - <removed>\r\n        SubnetIds:\r\n          - <removed>\r\n          - <removed>\r\n      Events:\r\n        Timer:\r\n          Type: Schedule\r\n          Properties:\r\n            Schedule: cron(00 16 ? * MON,WED *) \r\n            Description: sFTP\r\n            Enabled: !If [ProdEnv, true, false]\r\n      Policies:\r\n        - AWSLambdaExecute\r\n        - VPCAccessPolicy: {}\r\n        - KMSDecryptPolicy:\r\n            KeyId: !If [ProdEnv, !Ref ProdDbKMSKeyID, !Ref NonProdKMSKeyID]\r\n        - KMSDecryptPolicy:\r\n            KeyId: !Ref VendorsKMSKeyID\r\n<SNIP>\r\n```\r\n\r\n### Observed result\r\n\r\nThe ENV is set to be stage, other !If work as expected above however the Timer is set to be Enabled.\r\n\r\nNow if I skip the !If and just pass a `true` or `false` to Enabled it works as expected.  So I am not sure if this is just not supported for the Timer or if there is a problem with the transform.\r\n\r\n### Expected result\r\n\r\nI expected the Timer to have been set to `false`.\r\n\r\n```\r\n      Events:\r\n        Timer:\r\n          Type: Schedule\r\n          Properties:\r\n            Schedule: cron(00 16 ? * MON,WED *) \r\n            Description: sFTP\r\n            Enabled: !If [ProdEnv, true, false]\r\n```\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS 10.15.6\r\n2. `sam --version`: 1.0.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2146", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2146/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2146/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2146/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2146", "id": 669068064, "node_id": "MDU6SXNzdWU2NjkwNjgwNjQ=", "number": 2146, "title": "amazon/aws-sam-cli-build-image-python3.7 gets fetched every time sam build even when --skip-pull-image is set", "user": {"login": "elenasch", "id": 18666367, "node_id": "MDQ6VXNlcjE4NjY2MzY3", "avatar_url": "https://avatars0.githubusercontent.com/u/18666367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elenasch", "html_url": "https://github.com/elenasch", "followers_url": "https://api.github.com/users/elenasch/followers", "following_url": "https://api.github.com/users/elenasch/following{/other_user}", "gists_url": "https://api.github.com/users/elenasch/gists{/gist_id}", "starred_url": "https://api.github.com/users/elenasch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elenasch/subscriptions", "organizations_url": "https://api.github.com/users/elenasch/orgs", "repos_url": "https://api.github.com/users/elenasch/repos", "events_url": "https://api.github.com/users/elenasch/events{/privacy}", "received_events_url": "https://api.github.com/users/elenasch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 948231357, "node_id": "MDU6TGFiZWw5NDgyMzEzNTc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/needs-investigation", "name": "stage/needs-investigation", "color": "e03353", "default": false, "description": "Stage used for when an issue needs a deeper investigation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-30T18:35:18Z", "updated_at": "2020-08-10T16:51:14Z", "closed_at": "2020-08-10T16:51:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nI am building lambda with SAM CLI `sam build -t sam_template.yaml LambdaApp --skip-pull-image --use-container`. It takes incredibly long and partially because a`amazon/aws-sam-cli-build-image-python3.7` image gets fetched every time I  run build. I have tried to fetch the image ahead of time which sped up the build the one time right after manual fetch, however it gets deleted after execution, and so the next run goes again from the start of fetching that image.\r\n\r\n### Steps to reproduce\r\nCreate a sam template with a custom buildMethod using make (not sure it's relevant though)\r\nRun `sam build -t sam_template.yaml LambdaApp --skip-pull-image --use-container`\r\n\r\n### Observed result\r\n\r\n`amazon/aws-sam-cli-build-image-python3.7` images gets fetched everytime before build execution \r\n\r\n### Expected result\r\n\r\nFetch the image first time, and keep it for subsequent runs\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: MacOS\r\n2. SAM CLI version: 0.53.0\r\n3. JVM/Python version: python3.7\r\n\r\n```\r\nFetching amazon/aws-sam-cli-build-image-python3.7 Docker container imager\nMounting /Users/elenaschneider/Work/subscriptions-lambda/sam as /tmp/samcli/source:ro,delegated inside runtime container\r\nUsing the request object from command line argument\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'CustomMakeBuilder' to support capabilities 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nRunning workflow 'CustomMakeBuilder'\r\nRunning CustomMakeBuilder:CopySource\r\nCustomMakeBuilder:CopySource succeeded\r\nRunning CustomMakeBuilder:MakeBuild\r\nCurrent Artifacts Directory : /tmp/samcli/artifacts\r\nexecuting Make: ['make', '--makefile', '/tmp/samcli/source/Makefile', 'build-LambdaApp']\r\nCustomMakeBuilder:MakeBuild succeeded\r\nBuild inside container returned response {\"jsonrpc\": \"2.0\", \"id\": 1, \"result\": {\"artifacts_dir\": \"/tmp/samcli/artifacts\"}}\r\nBuild inside container was successful. Copying artifacts from container to host\r\nCopying from container: /tmp/samcli/artifacts/. -> /Users/elenaschneider/Work/subscriptions-lambda/.aws-sam/build/LambdaApp\r\nBuild inside container succeeded\r\n\r\nBuild Succeeded\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2160", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2160/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2160/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2160/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2160", "id": 675262013, "node_id": "MDU6SXNzdWU2NzUyNjIwMTM=", "number": 2160, "title": "The image aws-sam-cli-build-image is incompatible with BitBucket Pipelines", "user": {"login": "eladb", "id": 598796, "node_id": "MDQ6VXNlcjU5ODc5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/598796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eladb", "html_url": "https://github.com/eladb", "followers_url": "https://api.github.com/users/eladb/followers", "following_url": "https://api.github.com/users/eladb/following{/other_user}", "gists_url": "https://api.github.com/users/eladb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eladb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eladb/subscriptions", "organizations_url": "https://api.github.com/users/eladb/orgs", "repos_url": "https://api.github.com/users/eladb/repos", "events_url": "https://api.github.com/users/eladb/events{/privacy}", "received_events_url": "https://api.github.com/users/eladb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-30T10:31:38Z", "updated_at": "2020-08-07T20:41:03Z", "closed_at": "2020-08-07T20:41:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Transferred from the AWS CDK: https://github.com/aws/aws-cdk/issues/9351\r\n\r\nReported by: @SergKam\r\n\r\nAfter upgrade to cdk 1.55.0 where it stats using  `amazon/aws-sam-cli-build-image-nodejs` by default,\r\nbuilding NodejsFunction in BitBucket Pipelines fails with the error.\r\n`Container ID 1230228 cannot be mapped to a host ID`\r\nThe BitBucket docs https://community.atlassian.com/t5/Bitbucket-articles/Changes-to-make-your-containers-more-secure-on-Bitbucket/ba-p/998464\r\nsays\r\n```\r\nUID/GIDs that are placed on files must be in the range 0-65535.\r\nIf you recieve this error, you will need to perform a fix on the image that has this invalid UID/GID.\r\n```\r\n\r\n\r\n\r\n\r\n\r\n### Error Log\r\n\r\n```\r\n...\r\nFAIL projects/stack/ZolarStack.test.ts (33.221s)\r\n  \u25cf ZolarStack \u203a ECS Cluster Created\r\n    [Status 1] stdout: \r\n    stderr: Sending build context to Docker daemon   2.56kB\r\n    Step 1/8 : ARG IMAGE=amazon/aws-sam-cli-build-image-nodejs12.x\r\n    Step 2/8 : FROM $IMAGE\r\n    latest: Pulling from amazon/aws-sam-cli-build-image-nodejs12.x\r\n    cb4a6ee8d388: Pulling fs layer\r\n...\r\n    34ee856b181e: Download complete\r\n    latest: Pulling from amazon/aws-sam-cli-build-image-nodejs12.x\r\n    cb4a6ee8d388: Pulling fs layer\r\n....\r\n    34ee856b181e: Download complete\r\n    failed to register layer: Error processing tar file(exit status 1): Container ID 1230228 cannot be mapped to a host ID\r\n      323 |     createFrontendDeployLambda() {\r\n      324 |         //===== Deploy frontend lambda =====\r\n    > 325 |         const feLambda = new NodejsFunction(this, this.ns(\"FECreateLambda\"), {\r\n          |                          ^\r\n      326 |             entry: `${__dirname}/lambdas/deploy-fe-resource/index.ts`,\r\n      327 |             runtime: Runtime.NODEJS_12_X,\r\n      328 |             memorySize: 512,\r\n      at dockerExec (node_modules/@aws-cdk/core/lib/bundling.ts:241:13)\r\n      at Function.fromAsset (node_modules/@aws-cdk/core/lib/bundling.ts:86:20)\r\n      at Function.parcel (node_modules/@aws-cdk/aws-lambda-nodejs/lib/bundling.ts:113:43)\r\n      at new NodejsFunction (node_modules/@aws-cdk/aws-lambda-nodejs/lib/function.ts:78:24)\r\n      at ZolarStack.createFrontendDeployLambda (projects/stack/ZolarStack.ts:325:26)\r\n      at new ZolarStack (projects/stack/ZolarStack.ts:54:14)\r\n      at Object.<anonymous> (projects/stack/ZolarStack.test.ts:10:23)\r\nTest Suites: 1 failed, 4 passed, 5 total\r\nTests:       1 failed, 8 passed, 9 total\r\nSnapshots:   0 total\r\nTime:        262.721s\r\nRan all test suites.\r\nnpm ERR! Test failed.  See above for more details.\r\n\r\n```\r\n\r\n### Environment\r\n\r\n  - **CLI Version      :** 1.55.0\r\n  - **Framework Version:** 1.55.0\r\n  - **Node.js Version:** 12\r\n  - **OS               :**  lambci/lambda:build-nodejs12.x\r\n  - **Language (Version):** TypeScript (3.8.3)\r\n\r\n\r\n--- \r\n\r\nThis is :bug: Bug Report\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2134", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2134/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2134/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2134/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2134", "id": 666515149, "node_id": "MDU6SXNzdWU2NjY1MTUxNDk=", "number": 2134, "title": "Update build images to 1.0.0", "user": {"login": "therealjeffg", "id": 104315, "node_id": "MDQ6VXNlcjEwNDMxNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/104315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealjeffg", "html_url": "https://github.com/therealjeffg", "followers_url": "https://api.github.com/users/therealjeffg/followers", "following_url": "https://api.github.com/users/therealjeffg/following{/other_user}", "gists_url": "https://api.github.com/users/therealjeffg/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealjeffg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealjeffg/subscriptions", "organizations_url": "https://api.github.com/users/therealjeffg/orgs", "repos_url": "https://api.github.com/users/therealjeffg/repos", "events_url": "https://api.github.com/users/therealjeffg/events{/privacy}", "received_events_url": "https://api.github.com/users/therealjeffg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-27T19:00:48Z", "updated_at": "2020-08-07T20:43:17Z", "closed_at": "2020-08-07T20:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nThe build images are still at 0.53, see:\r\n\r\nhttps://github.com/awslabs/aws-sam-cli/issues/2014#issuecomment-663650587\r\n\r\n### Steps to reproduce\r\n\r\n```\r\ndocker pull amazon/aws-sam-cli-build-image-python3.7:latest\r\ndocker run -it --rm amazon/aws-sam-cli-build-image-python3.7:latest\r\nsam --version # returns \"SAM CLI, version 0.53.0\"\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2127", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2127/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2127/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2127/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2127", "id": 664974866, "node_id": "MDU6SXNzdWU2NjQ5NzQ4NjY=", "number": 2127, "title": "Allow copy .gitignore files", "user": {"login": "pguerrero-divilo", "id": 65544031, "node_id": "MDQ6VXNlcjY1NTQ0MDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/65544031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pguerrero-divilo", "html_url": "https://github.com/pguerrero-divilo", "followers_url": "https://api.github.com/users/pguerrero-divilo/followers", "following_url": "https://api.github.com/users/pguerrero-divilo/following{/other_user}", "gists_url": "https://api.github.com/users/pguerrero-divilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pguerrero-divilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pguerrero-divilo/subscriptions", "organizations_url": "https://api.github.com/users/pguerrero-divilo/orgs", "repos_url": "https://api.github.com/users/pguerrero-divilo/repos", "events_url": "https://api.github.com/users/pguerrero-divilo/events{/privacy}", "received_events_url": "https://api.github.com/users/pguerrero-divilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-24T07:32:01Z", "updated_at": "2020-07-24T07:32:18Z", "closed_at": "2020-07-24T07:32:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to know If there is any possibility to tell **sam build** command to copy files that are excluded via .gitignore", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2123", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2123/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2123/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2123/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2123", "id": 664083021, "node_id": "MDU6SXNzdWU2NjQwODMwMjE=", "number": 2123, "title": "Add support for single binary releases", "user": {"login": "marcosnils", "id": 1578458, "node_id": "MDQ6VXNlcjE1Nzg0NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1578458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcosnils", "html_url": "https://github.com/marcosnils", "followers_url": "https://api.github.com/users/marcosnils/followers", "following_url": "https://api.github.com/users/marcosnils/following{/other_user}", "gists_url": "https://api.github.com/users/marcosnils/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcosnils/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcosnils/subscriptions", "organizations_url": "https://api.github.com/users/marcosnils/orgs", "repos_url": "https://api.github.com/users/marcosnils/repos", "events_url": "https://api.github.com/users/marcosnils/events{/privacy}", "received_events_url": "https://api.github.com/users/marcosnils/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T22:16:01Z", "updated_at": "2020-07-24T20:54:34Z", "closed_at": "2020-07-24T20:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe your idea/feature/enhancement\r\n\r\nThere are other python projects like [docker compose](https://github.com/docker/compose/releases) which already support single binary releases. The idea is to bring the same experience to SAM so it's easier to install and update for everyone. \r\n\r\nI particularly am a Linux user and I wouldn't like to install brew to manage SAM.\r\n\r\n### Proposal\r\n\r\nAdd the same release pipeline that  [docker compose](https://github.com/docker/compose/releases) has. It's proven to be a super mature products with millions of users. \r\n\r\n### Additional Details\r\n\r\nNot too many things to do here. I can offer help to implement these pipelines if necessary.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2120", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2120/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2120/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2120/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2120", "id": 663275656, "node_id": "MDU6SXNzdWU2NjMyNzU2NTY=", "number": 2120, "title": "Brew issue - 1.0.0", "user": {"login": "tecklund", "id": 4885068, "node_id": "MDQ6VXNlcjQ4ODUwNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4885068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tecklund", "html_url": "https://github.com/tecklund", "followers_url": "https://api.github.com/users/tecklund/followers", "following_url": "https://api.github.com/users/tecklund/following{/other_user}", "gists_url": "https://api.github.com/users/tecklund/gists{/gist_id}", "starred_url": "https://api.github.com/users/tecklund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tecklund/subscriptions", "organizations_url": "https://api.github.com/users/tecklund/orgs", "repos_url": "https://api.github.com/users/tecklund/repos", "events_url": "https://api.github.com/users/tecklund/events{/privacy}", "received_events_url": "https://api.github.com/users/tecklund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T20:07:09Z", "updated_at": "2020-07-21T20:45:02Z", "closed_at": "2020-07-21T20:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nFailure to install aws-sam-cli\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nbrew tap aws/tap \r\nbrew install aws-sam-cli \r\n```\r\n\r\n### Observed result\r\n\r\n```\r\ncurl: (22) The requested URL returned error: 404 Not Found\r\n \r\nError: Failed to download resource \"aws-sam-cli\"\r\n \r\nDownload failed: https://github.com/awslabs/aws-sam-cli/releases/download/v0.53.0//aws-sam-cli-1.0.0.x86_64_linux.bottle.tar.gz\r\n \r\n```\r\n\r\n### Expected result\r\n\r\naws-sam-cli to install\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Linux\r\n2. It looks like the version numbers in the url do not align - 0.53.0 and 1.0.0 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2115", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2115/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2115/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2115/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2115", "id": 661492959, "node_id": "MDU6SXNzdWU2NjE0OTI5NTk=", "number": 2115, "title": "Python: Don't fail on missing `requirements.txt`", "user": {"login": "milesgranger", "id": 13764397, "node_id": "MDQ6VXNlcjEzNzY0Mzk3", "avatar_url": "https://avatars2.githubusercontent.com/u/13764397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milesgranger", "html_url": "https://github.com/milesgranger", "followers_url": "https://api.github.com/users/milesgranger/followers", "following_url": "https://api.github.com/users/milesgranger/following{/other_user}", "gists_url": "https://api.github.com/users/milesgranger/gists{/gist_id}", "starred_url": "https://api.github.com/users/milesgranger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milesgranger/subscriptions", "organizations_url": "https://api.github.com/users/milesgranger/orgs", "repos_url": "https://api.github.com/users/milesgranger/repos", "events_url": "https://api.github.com/users/milesgranger/events{/privacy}", "received_events_url": "https://api.github.com/users/milesgranger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T07:46:08Z", "updated_at": "2020-07-20T21:49:30Z", "closed_at": "2020-07-20T21:49:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nIf a particular function code uri doesn't contain a `requirements.txt` it should assume that there are no dependencies.\r\n\r\n### Proposal\r\n\r\nDon't raise an error like this:\r\n```bash\r\nBuild Failed\r\nError: PythonPipBuilder:ResolveDependencies - Requirements file not found: /some/code/path/requirements.txt\r\n```\r\n\r\nAssume that a non-existing `requirements.txt` means there are simply no dependencies for this function. Otherwise one needs to have empty `requirements.txt` files laying around.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2106", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2106/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2106/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2106/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2106", "id": 656176464, "node_id": "MDU6SXNzdWU2NTYxNzY0NjQ=", "number": 2106, "title": "WSL 2 with Docker", "user": {"login": "hyphen1370", "id": 3792453, "node_id": "MDQ6VXNlcjM3OTI0NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3792453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyphen1370", "html_url": "https://github.com/hyphen1370", "followers_url": "https://api.github.com/users/hyphen1370/followers", "following_url": "https://api.github.com/users/hyphen1370/following{/other_user}", "gists_url": "https://api.github.com/users/hyphen1370/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyphen1370/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyphen1370/subscriptions", "organizations_url": "https://api.github.com/users/hyphen1370/orgs", "repos_url": "https://api.github.com/users/hyphen1370/repos", "events_url": "https://api.github.com/users/hyphen1370/events{/privacy}", "received_events_url": "https://api.github.com/users/hyphen1370/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 941343280, "node_id": "MDU6TGFiZWw5NDEzNDMyODA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/installation", "name": "area/installation", "color": "a423e0", "default": false, "description": ""}, {"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T22:06:21Z", "updated_at": "2020-08-07T18:08:53Z", "closed_at": "2020-08-07T18:08:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI tried to install AWS SAM CLI to Ubuntu 20.04 as WSL 2 machine. It failed with following error: \r\n\r\nerror while loading shared libraries: libpython3.7m.so.1.0: cannot open shared object file: No such file or directory\r\n\r\nThe environment is docker desktop installed with WSL 2 integration turned on and enable to access docker via WSL 2 machine. The OS is Windows 10 2004\r\n\r\nWhen I tested the installation without installing the docker desktop, the installation process went through. Is that anyone has this issue or knowing the issue or conflict with docker desktop? \r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2101", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2101/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2101/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2101/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2101", "id": 653527805, "node_id": "MDU6SXNzdWU2NTM1Mjc4MDU=", "number": 2101, "title": "Homebrew install/upgrade on MacOS breaks sam-cli", "user": {"login": "cmccoypdx", "id": 37560348, "node_id": "MDQ6VXNlcjM3NTYwMzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/37560348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmccoypdx", "html_url": "https://github.com/cmccoypdx", "followers_url": "https://api.github.com/users/cmccoypdx/followers", "following_url": "https://api.github.com/users/cmccoypdx/following{/other_user}", "gists_url": "https://api.github.com/users/cmccoypdx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmccoypdx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmccoypdx/subscriptions", "organizations_url": "https://api.github.com/users/cmccoypdx/orgs", "repos_url": "https://api.github.com/users/cmccoypdx/repos", "events_url": "https://api.github.com/users/cmccoypdx/events{/privacy}", "received_events_url": "https://api.github.com/users/cmccoypdx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-08T19:05:03Z", "updated_at": "2020-07-08T23:16:26Z", "closed_at": "2020-07-08T23:16:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nOn an upgrade or new installation of `aws-sam-cli` via homebrew, `sam --version` (and any other sam commands) fails with the error \r\n\r\n`dyld: Library not loaded: @executable_path/../.Python\r\n  Referenced from: /usr/local/Cellar/aws-sam-cli/0.53.0/libexec/bin/python3.7\r\n  Reason: image not found`\r\n\r\nThis seems to have something to do with homebrew upgrading Python3 to version 3.8 on any upgrade or install, while sam-cli is looking for specifically version 3.7.\r\n\r\nIn my case, this happened from trying to upgrade my sam-cli version via `brew upgrade aws-sam-cli`, but the same issue seems to occur on a new installation via homebrew. \r\n\r\n### Steps to reproduce\r\n\r\nInstall (or upgrade) `aws-sam-cli` via homebrew, as per the instructions at https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-mac.html. Run `sam --version`, or any other sam-cli command.\r\n\r\n### Observed result\r\n\r\n`dyld: Library not loaded: @executable_path/../.Python\r\n  Referenced from: /usr/local/Cellar/aws-sam-cli/0.53.0/libexec/bin/python3.7\r\n  Reason: image not found`\r\n\r\n### Expected result\r\n\r\n`sam --version` displays sam-cli version, sam-cli commands work.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS Mojave 10.14.6\r\n2. `sam --version`: 0.53.0\r\n3. homebrew version: 2.4.4-36-gd1f6296\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2099", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2099/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2099/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2099/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2099", "id": 653331181, "node_id": "MDU6SXNzdWU2NTMzMzExODE=", "number": 2099, "title": "Installation immediately broken on macOS 10.15.5", "user": {"login": "dschu-lab", "id": 3493187, "node_id": "MDQ6VXNlcjM0OTMxODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3493187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschu-lab", "html_url": "https://github.com/dschu-lab", "followers_url": "https://api.github.com/users/dschu-lab/followers", "following_url": "https://api.github.com/users/dschu-lab/following{/other_user}", "gists_url": "https://api.github.com/users/dschu-lab/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschu-lab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschu-lab/subscriptions", "organizations_url": "https://api.github.com/users/dschu-lab/orgs", "repos_url": "https://api.github.com/users/dschu-lab/repos", "events_url": "https://api.github.com/users/dschu-lab/events{/privacy}", "received_events_url": "https://api.github.com/users/dschu-lab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-08T14:11:19Z", "updated_at": "2020-07-13T09:32:04Z", "closed_at": "2020-07-08T15:08:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nHi! I'd really like to get started with AWS SAM, but I'm unable to get the cli to work on my machine.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n ~ \u26a1\ufe0f   brew install aws-sam-cli\r\n==> Installing aws-sam-cli from aws/tap\r\n==> Downloading https://github.com/awslabs/aws-sam-cli/releases/download/v0.53.0//aws-sam-cli-0.53.0.sierra.bottle.tar.gz\r\nAlready downloaded: /Users/julian/Library/Caches/Homebrew/downloads/967af9dae702ac5e4f24aa221eaa4e925f7afa86e68636f95d30ce9a27051a7f--aws-sam-cli-0.53.0.sierra.bottle.tar.gz\r\n==> Pouring aws-sam-cli-0.53.0.sierra.bottle.tar.gz\r\n\ud83c\udf7a  /usr/local/Cellar/aws-sam-cli/0.53.0: 4,062 files, 66.0MB\r\n\r\n\r\n~ \u26a1\ufe0f   sam --version\r\ndyld: Library not loaded: @executable_path/../.Python\r\n  Referenced from: /usr/local/Cellar/aws-sam-cli/0.53.0/libexec/bin/python3.7\r\n  Reason: image not found\r\n\r\n\r\n~ \u26a1\ufe0f   python --version\r\nPython 3.8.3\r\n\r\n~ \u26a1\ufe0f   aws --version\r\naws-cli/2.0.29 Python/3.8.3 Darwin/19.5.0 botocore/2.0.0dev33\r\n\r\n```\r\n\r\n### Observed result\r\n\r\nInstallation is broken immediately\r\n\r\n### Expected result\r\n\r\nGet something like `SAM CLI, version 0.52.0`\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS 10.15.5\r\n2. `sam --version`: Nothing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2095", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2095/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2095/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2095/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2095", "id": 651656472, "node_id": "MDU6SXNzdWU2NTE2NTY0NzI=", "number": 2095, "title": "RC1 failing local invoke for Node12.", "user": {"login": "c2tarun", "id": 1129670, "node_id": "MDQ6VXNlcjExMjk2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1129670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c2tarun", "html_url": "https://github.com/c2tarun", "followers_url": "https://api.github.com/users/c2tarun/followers", "following_url": "https://api.github.com/users/c2tarun/following{/other_user}", "gists_url": "https://api.github.com/users/c2tarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/c2tarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c2tarun/subscriptions", "organizations_url": "https://api.github.com/users/c2tarun/orgs", "repos_url": "https://api.github.com/users/c2tarun/repos", "events_url": "https://api.github.com/users/c2tarun/events{/privacy}", "received_events_url": "https://api.github.com/users/c2tarun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200204, "node_id": "MDU6TGFiZWw3OTcyMDAyMDQ=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/priority/1-critical", "name": "priority/1-critical", "color": "b60205", "default": false, "description": null}, {"id": 797200198, "node_id": "MDU6TGFiZWw3OTcyMDAxOTg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/bug", "name": "type/bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-07-06T16:08:58Z", "updated_at": "2020-08-21T13:35:51Z", "closed_at": "2020-07-10T21:01:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\n`sam local invoke` fails for nodejs12 project with following error:\r\n\r\n```\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.35/containers/b750d7791ae2d2b1ab5b57a27a0b50f8379e170e06e9205c9ab150827f69fcea/start\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. `sam init` a node12 project.\r\n2. `sam local invoke` in that project.\r\n\r\n### Observed result\r\n\r\n```\r\n\u276f sam local invoke --debug                                                                                                                                                               \u2500\u256f\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal invoke command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='HelloWorldFunction'\r\nFound one Lambda function with name 'HelloWorldFunction'\r\nInvoking app.lambdaHandler (nodejs12.x)\r\nNo environment variables found for function 'HelloWorldFunction'\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=/Users/tarumall/workplace/byol-testbed/sam-app-n12/.aws-sam/build, CodeUri=HelloWorldFunction\r\nResolved absolute path to code is /Users/tarumall/workplace/byol-testbed/sam-app-n12/.aws-sam/build/HelloWorldFunction\r\nCode /Users/tarumall/workplace/byol-testbed/sam-app-n12/.aws-sam/build/HelloWorldFunction is not a zip/jar file\r\nSkipping building an image since no layers were defined\r\n\r\nFetching amazon/aws-sam-cli-emulation-image-nodejs12.x:latest Docker container image......\r\nMounting /Users/tarumall/workplace/byol-testbed/sam-app-n12/.aws-sam/build/HelloWorldFunction as /var/task:ro,delegated inside runtime container\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam local invoke', 'duration': 1565, 'exitReason': 'APIError', 'exitCode': 255, 'requestId': 'dc38f743-a36c-417f-a3a4-b10902e605b1', 'installationId': '2b7af8d7-cfbd-4d71-baa7-3dfc0f010bbe', 'sessionId': '72e9043d-9e17-4974-a387-431d2a80ad28', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '1.0.0rc1'}}]}\r\nTelemetry response: 200\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 261, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/requests/models.py\", line 941, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.35/containers/8d47e54ddafcc6815d508126c6b260591a9cf2107a9fa7ae391b34d643288bfe/start\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/sam\", line 33, in <module>\r\n    sys.exit(load_entry_point('aws-sam-cli==1.0.0rc1', 'console_scripts', 'sam')())\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/commands/local/invoke/cli.py\", line 86, in cli\r\n    parameter_overrides,\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/commands/local/invoke/cli.py\", line 151, in do_cli\r\n    context.function_name, event=event_data, stdout=context.stdout, stderr=context.stderr\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/commands/local/lib/local_lambda.py\", line 100, in invoke\r\n    self.local_runtime.invoke(config, event, debug_context=self.debug_context, stdout=stdout, stderr=stderr)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/local/lambdafn/runtime.py\", line 83, in invoke\r\n    self._container_manager.run(container)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/local/docker/manager.py\", line 95, in run\r\n    container.start(input_data=input_data)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/local/docker/container.py\", line 188, in start\r\n    real_container.start()\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/docker/models/containers.py\", line 400, in start\r\n    return self.client.api.start(self.id, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/docker/utils/decorators.py\", line 19, in wrapped\r\n    return f(self, resource_id, *args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/docker/api/container.py\", line 1095, in start\r\n    self._raise_for_status(res)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"b'Mounts denied: \\r\\nThe path /usr/local/Cellar/aws-sam-cli-rc/1.0.0rc1/libexec/lib/python3.7/site-packages/samcli/local/rapid\\r\\nis not shared from OS X and is not known to Docker.\\r\\nYou can configure shared paths from Docker -> Preferences... -> File Sharing.\\r\\nSee https://docs.docker.com/docker-for-mac/osxfs/#namespaces for more info.\\r\\n.'\")\r\n```\r\n\r\n### Expected result\r\n\r\nDescribe what you expected.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS Catalina\r\n2. `sam --version`: SAM CLI, version 1.0.0rc1\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2094", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2094/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2094/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2094/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2094", "id": 651003416, "node_id": "MDU6SXNzdWU2NTEwMDM0MTY=", "number": 2094, "title": "Installation of Python via linuxbrew conflicts with linux mint blueberry", "user": {"login": "jackcholt", "id": 8146879, "node_id": "MDQ6VXNlcjgxNDY4Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8146879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackcholt", "html_url": "https://github.com/jackcholt", "followers_url": "https://api.github.com/users/jackcholt/followers", "following_url": "https://api.github.com/users/jackcholt/following{/other_user}", "gists_url": "https://api.github.com/users/jackcholt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackcholt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackcholt/subscriptions", "organizations_url": "https://api.github.com/users/jackcholt/orgs", "repos_url": "https://api.github.com/users/jackcholt/repos", "events_url": "https://api.github.com/users/jackcholt/events{/privacy}", "received_events_url": "https://api.github.com/users/jackcholt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 941343280, "node_id": "MDU6TGFiZWw5NDEzNDMyODA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/installation", "name": "area/installation", "color": "a423e0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-05T05:14:33Z", "updated_at": "2020-07-24T20:47:15Z", "closed_at": "2020-07-24T20:47:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nUsing Linux Mint 20, the bluetooth setting widget (Blueberry) uses the Python3.7 that is installed by default.  Installing AWS SAM CLI via linuxbrew overrides the default install of Python3.  This causes the Blueberry widget to fail to load.  If you run \"blueberry\" at the command line, you receive the Python error message \"ModuleNotFoundError: No module named 'gi'\".\r\n\r\nI tried \"brew uninstall python3\" to try to clean it up, and though that allowed blueberry to find the gi module and run successfully, it breaks AWS SAM CLI.  I now get\r\n\r\n> /home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.53.0/libexec/bin/python3.7: error while loading shared libraries: libpython3.7m.so.1.0: cannot open shared object file: No such file or directory\r\n\r\nWhen trying to run sam local invoke\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: linux mint 20", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2092", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2092/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2092/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2092/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2092", "id": 650830122, "node_id": "MDU6SXNzdWU2NTA4MzAxMjI=", "number": 2092, "title": "Cannot define Domain  under AWS::Serverless::Api", "user": {"login": "xl2wang", "id": 1065678, "node_id": "MDQ6VXNlcjEwNjU2Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1065678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xl2wang", "html_url": "https://github.com/xl2wang", "followers_url": "https://api.github.com/users/xl2wang/followers", "following_url": "https://api.github.com/users/xl2wang/following{/other_user}", "gists_url": "https://api.github.com/users/xl2wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/xl2wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xl2wang/subscriptions", "organizations_url": "https://api.github.com/users/xl2wang/orgs", "repos_url": "https://api.github.com/users/xl2wang/repos", "events_url": "https://api.github.com/users/xl2wang/events{/privacy}", "received_events_url": "https://api.github.com/users/xl2wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-04T05:20:56Z", "updated_at": "2020-07-04T06:19:31Z", "closed_at": "2020-07-04T06:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Description\r\n\r\nDomain under SAM AWS::Serverless::Api stopped working. My SAM was deployed successfully on June 28th. The same template cannot pass validation now.\r\nGetting error while running sam validate -t template.yml\r\nerror:\r\nproperty Domain not defined for resource of type AWS::Serverless::Api\r\n\r\n### Steps to reproduce\r\n\r\n  myApi:\r\n    Type: AWS::Serverless::Api\r\n    Properties:\r\n      Domain:\r\n        DomainName: 'www.test.com'\r\n        CertificateArn: arn:aws:acm:us-east-1:123456789:certificate/111111-222-333-44444444\r\n        EndpointConfiguration: EDGE\r\n        Route53: \r\n          HostedZoneId: Z1234567890\r\n        BasePath:\r\n          - /\r\n      StageName: dev\r\n\r\n### Observed result\r\n\r\nec2-user:~/environment/myProject (master) $ sam validate -t template.yml --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nTemplate provided at '/home/ec2-user/environment/project1/template.yml' was invalid SAM Template.\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam validate', 'duration': 2041, 'exitReason': 'InvalidSamTemplateException', 'exitCode': 1, 'requestId': 'd01dcbd2-e2f9-43ae-8036-7c5831ff4deb', 'installationId': 'dfbf5c40-58a8-4748-98b7-b960d4649294', 'sessionId': '2b661703-616f-41ed-9cc8-e597ebbb52f9', 'executionEnvironment': 'CLI', 'pyversion': '3.6.10', 'samcliVersion': '0.38.0'}}]}\r\nTelemetry response: 200\r\nError: [InvalidResourceException('project1Api', 'property Domain not defined for resource of type AWS::Serverless::Api')] ('project1Api', 'property Domain not defined for resource of type AWS::Serverless::Api')\r\n\r\n### Expected result\r\n\r\nshould be a valid template. Domain is a property for AWS::Serverless::Api\r\nhttps://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Cloud9\r\n2. `sam --version`: SAM CLI, version 0.38.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2090", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2090/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2090/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2090/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2090", "id": 650532988, "node_id": "MDU6SXNzdWU2NTA1MzI5ODg=", "number": 2090, "title": "Please provide SAM installation method on Linux other than Homebrew ", "user": {"login": "plantusd", "id": 44056339, "node_id": "MDQ6VXNlcjQ0MDU2MzM5", "avatar_url": "https://avatars3.githubusercontent.com/u/44056339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plantusd", "html_url": "https://github.com/plantusd", "followers_url": "https://api.github.com/users/plantusd/followers", "following_url": "https://api.github.com/users/plantusd/following{/other_user}", "gists_url": "https://api.github.com/users/plantusd/gists{/gist_id}", "starred_url": "https://api.github.com/users/plantusd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plantusd/subscriptions", "organizations_url": "https://api.github.com/users/plantusd/orgs", "repos_url": "https://api.github.com/users/plantusd/repos", "events_url": "https://api.github.com/users/plantusd/events{/privacy}", "received_events_url": "https://api.github.com/users/plantusd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T11:21:28Z", "updated_at": "2020-07-20T16:29:07Z", "closed_at": "2020-07-20T16:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nI understand the installation solution for Mac OS, just can't rationalize pulling relatively big package management system on Ubuntu, just to install aws-sam-cli. \r\n\r\nIs there any updates on this? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2089", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2089/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2089/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2089/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2089", "id": 650222475, "node_id": "MDU6SXNzdWU2NTAyMjI0NzU=", "number": 2089, "title": "Tags in samconfig.toml / guided deploy", "user": {"login": "beck3905", "id": 17208224, "node_id": "MDQ6VXNlcjE3MjA4MjI0", "avatar_url": "https://avatars2.githubusercontent.com/u/17208224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beck3905", "html_url": "https://github.com/beck3905", "followers_url": "https://api.github.com/users/beck3905/followers", "following_url": "https://api.github.com/users/beck3905/following{/other_user}", "gists_url": "https://api.github.com/users/beck3905/gists{/gist_id}", "starred_url": "https://api.github.com/users/beck3905/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beck3905/subscriptions", "organizations_url": "https://api.github.com/users/beck3905/orgs", "repos_url": "https://api.github.com/users/beck3905/repos", "events_url": "https://api.github.com/users/beck3905/events{/privacy}", "received_events_url": "https://api.github.com/users/beck3905/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-02T21:51:49Z", "updated_at": "2020-07-20T15:49:17Z", "closed_at": "2020-07-20T15:49:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe your idea/feature/enhancement\r\n\r\nIt would be nice if tags could be stored in samconfig.toml much like parameter-overrides are.  I often use the same tags every time I deploy my stack and it would be nice if I didn't have to remember to include them in the command every time.  If they were in the samconfig.toml file I woudn't have to worry about forgetting them or accidentally changing a value.  They would be guaranteed to always be the same on every deploy.\r\n\r\n### Proposal\r\n\r\nI think this could be fairly simple to implement by following a similar pattern to the parameter-overrides property.  Offer somewhat of a freeform prompt for tags in the command line when running `sam deploy --guided`, but expect a certain format for the input like `Key=Value` for example.  Then, store the tags in a space delimited string in the samconfig.toml the same way parameter-overrides are stored.\r\n\r\nThings to consider:\r\n1. Will this require any updates to the [SAM Spec](https://github.com/awslabs/serverless-application-model)\r\nNo\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2096", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2096/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2096/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2096/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2096", "id": 651722623, "node_id": "MDU6SXNzdWU2NTE3MjI2MjM=", "number": 2096, "title": "BUG: --guided flag on deploy fails to recognise inline and samconfig.toml parameters.", "user": {"login": "pedrosola", "id": 15237951, "node_id": "MDQ6VXNlcjE1MjM3OTUx", "avatar_url": "https://avatars0.githubusercontent.com/u/15237951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedrosola", "html_url": "https://github.com/pedrosola", "followers_url": "https://api.github.com/users/pedrosola/followers", "following_url": "https://api.github.com/users/pedrosola/following{/other_user}", "gists_url": "https://api.github.com/users/pedrosola/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedrosola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedrosola/subscriptions", "organizations_url": "https://api.github.com/users/pedrosola/orgs", "repos_url": "https://api.github.com/users/pedrosola/repos", "events_url": "https://api.github.com/users/pedrosola/events{/privacy}", "received_events_url": "https://api.github.com/users/pedrosola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T19:32:14Z", "updated_at": "2020-07-20T15:52:40Z", "closed_at": "2020-07-20T15:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\nWhen using the `--guided` flag at deployment, SAM fails to consider the parameters specified both at the command line or at the `samconfig.toml` file.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a sample SAM template, with one or more parameters.\r\n2. Manually create a `samconfig.toml` file, or let SAM create it by running `sam deploy --guided` without deploying it.\r\n3. Run `sam deploy --guided`\r\n\r\n**Observed result:**\r\nSAM fails to recognise the parameter specified on the samconfig.toml file, leaving the parameter input blank. When trying to specify the parameter using the `--parameter-overrides` option the same behaviour is produced.\r\n\r\n`SAM CLI, version 0.53.0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2087", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2087/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2087/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2087/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2087", "id": 650110150, "node_id": "MDU6SXNzdWU2NTAxMTAxNTA=", "number": 2087, "title": "Error when deploying an AWS::Serverless::Function with a Condition", "user": {"login": "spalladino", "id": 429604, "node_id": "MDQ6VXNlcjQyOTYwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/429604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spalladino", "html_url": "https://github.com/spalladino", "followers_url": "https://api.github.com/users/spalladino/followers", "following_url": "https://api.github.com/users/spalladino/following{/other_user}", "gists_url": "https://api.github.com/users/spalladino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spalladino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spalladino/subscriptions", "organizations_url": "https://api.github.com/users/spalladino/orgs", "repos_url": "https://api.github.com/users/spalladino/repos", "events_url": "https://api.github.com/users/spalladino/events{/privacy}", "received_events_url": "https://api.github.com/users/spalladino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T17:55:19Z", "updated_at": "2020-07-02T18:30:50Z", "closed_at": "2020-07-02T18:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nAdding a `Condition` field to a `AWS::Serverless::Function` causes `sam deploy` to fail with a Python type error.\r\n\r\n### Steps to reproduce\r\n\r\nGiven the following template, abridged:\r\n\r\n```yaml\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\n\r\nParameters:\r\n  Stage:\r\n    Description: Stage name (dev, stg, prod)\r\n    Type: String\r\n    Default: dev\r\n    AllowedValues: [\"dev\", \"test\", \"stg\", \"prod\"]\r\n\r\nConditions:\r\n  IsDevOrTest: { \"Fn::Or\": [{ \"Fn::Equals\": [\"dev\", !Ref Stage] }, { \"Fn::Equals\": [\"test\", !Ref Stage] }] }\r\n\r\nResources:\r\n  MyFunction:\r\n    Condition: IsDevOrTest\r\n    Type: AWS::Serverless::Function\r\n    Properties:\r\n      FunctionName: !Sub '${AWS::StackName}-${Stage}-api-myfn'\r\n      CodeUri: ./api/build/\r\n      Handler: index.handler\r\n      Events:\r\n        MyEvent:\r\n          Type: Api\r\n          Properties:\r\n            RestApiId: !Ref ApiGateway\r\n            Path: /mypath\r\n            Method: GET\r\n```\r\n\r\n### Observed result\r\n\r\nRunning `sam deploy` yields the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/bin/sam\", line 11, in <module>\r\n    load_entry_point('aws-sam-cli==0.48.0', 'console_scripts', 'sam')()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/command.py\", line 180, in cli\r\n    ctx.profile,\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/command.py\", line 271, in do_cli\r\n    deploy_context.run()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/deploy_context.py\", line 133, in run\r\n    self.confirm_changeset,\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/deploy_context.py\", line 152, in deploy\r\n    auth_required_per_resource = auth_per_resource(parameters, get_template_data(self.template_file))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 39, in auth_per_resource\r\n    _auth_resource_event(sam_functions, sam_function, _auth_per_resource)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 68, in _auth_resource_event\r\n    elif _auth_id(sam_functions.resources, event.get(\"Properties\", {}), identifier):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 99, in _auth_id\r\n    definition_uri=api_resource.get(\"Properties\", {}).get(\"DefinitionUri\", None),\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 132, in _auth_definition_body_and_uri\r\n    _auths.append(bool(_property.get(\"security\", False)))\r\nAttributeError: 'list' object has no attribute 'get'\r\nerror Command failed with exit code 1.\r\n```\r\n\r\nThe full output using `--debug` is the following:\r\n<details>\r\n<pre>\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\n\tDeploying with following values\r\n\t===============================\r\n\tStack name                 : defender-palla-v4\r\n\tRegion                     : us-east-1\r\n\tConfirm changeset          : False\r\n\tDeployment s3 bucket       : aws-sam-cli-managed-default-samclisourcebucket-y6mbpvvalq8f\r\n\tCapabilities               : [\"CAPABILITY_IAM\", \"CAPABILITY_AUTO_EXPAND\"]\r\n\tParameter overrides        : {'Stage': 'dev'}\r\n\r\nInitiating deployment\r\n=====================\r\nFile with same data is already exists at defender-palla-v4/3c150ea8b89d971441e6fd30f039b9da. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/37926f9aa6277819300794b57fbc8de6. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/37926f9aa6277819300794b57fbc8de6. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/37926f9aa6277819300794b57fbc8de6. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/d102db2e1e24e9755672d7a9db7e06ab. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/d102db2e1e24e9755672d7a9db7e06ab. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/d102db2e1e24e9755672d7a9db7e06ab. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/3c150ea8b89d971441e6fd30f039b9da. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/7538cd392962c8accf569399bd11fa76. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/7538cd392962c8accf569399bd11fa76. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/7538cd392962c8accf569399bd11fa76. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/7538cd392962c8accf569399bd11fa76. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/1d5e3ddb604c58faeb0f3b01b3a84f36. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/1d5e3ddb604c58faeb0f3b01b3a84f36. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/1d5e3ddb604c58faeb0f3b01b3a84f36. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/1d5e3ddb604c58faeb0f3b01b3a84f36. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/61a09d437b9afc876a52bffb78f62c1e. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/61a09d437b9afc876a52bffb78f62c1e. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/61a09d437b9afc876a52bffb78f62c1e. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/597919508059285d53a4fc1bb1401196. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/597919508059285d53a4fc1bb1401196. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/597919508059285d53a4fc1bb1401196. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/7b7b1356a2861b3cc590d68dfcd0906e. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/aea8b898e71f778055eeae650d504a23. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/aea8b898e71f778055eeae650d504a23. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/aea8b898e71f778055eeae650d504a23. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/aea8b898e71f778055eeae650d504a23. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/f70f105e1c5b9f3c84cdecb0c3a8a929.template. Skipping upload\r\nFile with same data is already exists at defender-palla-v4/8b083194c0cecbb307377e402218b057.template. Skipping upload\r\nCollected default values for parameters: {'Stage': 'dev', 'SiteDomainName': 'defender-dev.com', 'SiteSubdomainName': '', 'TestTenant': 'DEFAULT_TENANT'}\r\nUnable to resolve property FunctionArn: OrderedDict([('Fn::GetAtt', ['AdminAuthorizerFunction', 'Arn'])]). Leaving as is.\r\nUnable to resolve property FunctionArn: OrderedDict([('Fn::GetAtt', ['RelayerAuthorizerFunction', 'Arn'])]). Leaving as is.\r\nUnable to resolve property /x-permissions/{tenantId}/relayers: {'Fn::If': ['IsDevOrTest', {'get': {}}, {'Ref': 'AWS::NoValue'}]}. Leaving as is.\r\nUnable to resolve property Resource: OrderedDict([('Fn::GetAtt', ['QueueStack', 'Outputs.InfuraQueue'])]). Leaving as is.\r\nUnable to resolve property Resource: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableArn'])]). Leaving as is.\r\nUnable to resolve property Resource: OrderedDict([('Fn::GetAtt', ['QueueStack', 'Outputs.TransactionTopic'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TOPIC_ARN: OrderedDict([('Fn::GetAtt', ['QueueStack', 'Outputs.TransactionTopic'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TOPIC_ARN: OrderedDict([('Fn::GetAtt', ['QueueStack', 'Outputs.TransactionTopic'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TOPIC_ARN: OrderedDict([('Fn::GetAtt', ['QueueStack', 'Outputs.TransactionTopic'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property Queue: OrderedDict([('Fn::GetAtt', ['QueueStack', 'Outputs.InfuraQueue'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property RELAYER_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property DEFENDER_ADMIN_CONTRACT_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property PROPOSAL_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property TRANSACTION_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property AUTOTASK_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property API_KEY_TABLE_NAME: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.RelayerTableName'])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.TransactionTableName'])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.AutotaskTableName'])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.DefenderAdminContractTableName'])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ProposalTableName'])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['DatabaseStack', 'Outputs.ApiKeyTableName'])]). Leaving as is.\r\n47 resources found in the template\r\nFound Serverless function with name='AdminAuthorizerFunction' and CodeUri='.'\r\nFound Serverless function with name='DefenderAdminContractListFunction' and CodeUri='.'\r\nFound Serverless function with name='DefenderAdminContractCreateFunction' and CodeUri='.'\r\nFound Serverless function with name='DefenderAdminContractDeleteFunction' and CodeUri='.'\r\nFound Serverless function with name='ProposalListFunction' and CodeUri='.'\r\nFound Serverless function with name='ProposalCreateFunction' and CodeUri='.'\r\nFound Serverless function with name='ProposalDeleteFunction' and CodeUri='.'\r\nFound Serverless function with name='RelayerAuthorizerFunction' and CodeUri='.'\r\nFound Serverless function with name='RelayerGetFunction' and CodeUri='.'\r\nFound Serverless function with name='RelayerListFunction' and CodeUri='.'\r\nFound Serverless function with name='RelayerCreateFunction' and CodeUri='.'\r\nFound Serverless function with name='RelayerDeleteFunction' and CodeUri='.'\r\nFound Serverless function with name='AutotaskGetFunction' and CodeUri='.'\r\nFound Serverless function with name='AutotaskListFunction' and CodeUri='.'\r\nFound Serverless function with name='AutotaskCreateFunction' and CodeUri='.'\r\nFound Serverless function with name='AutotaskRunFunction' and CodeUri='.'\r\nFound Serverless function with name='ApiKeyCreateFunction' and CodeUri='.'\r\nFound Serverless function with name='ApiKeyListFunction' and CodeUri='.'\r\nFound Serverless function with name='ApiKeyDeleteFunction' and CodeUri='.'\r\nFound Serverless function with name='TxGetFunction' and CodeUri='.'\r\nFound Serverless function with name='TxListFunction' and CodeUri='.'\r\nFound Serverless function with name='TxSendFunction' and CodeUri='.'\r\nFound Serverless function with name='TxSendInfuraFunction' and CodeUri='.'\r\nFound Serverless function with name='PermissionsTestRelayerListFunction' and CodeUri='.'\r\nFound Serverless function with name='PermissionsTestRelayerDeleteFunction' and CodeUri='.'\r\nFound Serverless function with name='PermissionsTestKeyAliasGetFunction' and CodeUri='.'\r\nFound Serverless function with name='PermissionsTestKeyAliasDeleteFunction' and CodeUri='.'\r\nDetected Inline Swagger definition\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': 'us-east-1', 'commandName': 'sam deploy', 'duration': 8813, 'exitReason': 'AttributeError', 'exitCode': 255, 'requestId': '40d7d16f-324a-4fdb-9278-b26424558acc', 'installationId': '5404be39-5d62-4490-ac84-0625b8aaf697', 'sessionId': '666b4417-f44e-4d89-bc5f-c999d959c744', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/bin/sam\", line 11, in <module>\r\n    load_entry_point('aws-sam-cli==0.48.0', 'console_scripts', 'sam')()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/command.py\", line 180, in cli\r\n    ctx.profile,\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/command.py\", line 271, in do_cli\r\n    deploy_context.run()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/deploy_context.py\", line 133, in run\r\n    self.confirm_changeset,\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/deploy_context.py\", line 152, in deploy\r\n    auth_required_per_resource = auth_per_resource(parameters, get_template_data(self.template_file))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 39, in auth_per_resource\r\n    _auth_resource_event(sam_functions, sam_function, _auth_per_resource)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 68, in _auth_resource_event\r\n    elif _auth_id(sam_functions.resources, event.get(\"Properties\", {}), identifier):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 99, in _auth_id\r\n    definition_uri=api_resource.get(\"Properties\", {}).get(\"DefinitionUri\", None),\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 132, in _auth_definition_body_and_uri\r\n    _auths.append(bool(_property.get(\"security\", False)))\r\nAttributeError: 'list' object has no attribute 'get'\r\nerror Command failed with exit code 1.\r\n</pre>\r\n</details>\r\n\r\nNote that when I remove the `Condition: IsDevOrTest` line, the deployment works fine.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Ubuntu 19.10\r\n2. `sam --version`: 0.48.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2085", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2085/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2085/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2085/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2085", "id": 649713915, "node_id": "MDU6SXNzdWU2NDk3MTM5MTU=", "number": 2085, "title": "cookiecutter.exceptions.RepositoryNotFound: A valid repository for \"....\" could not be found.", "user": {"login": "imti283", "id": 32821195, "node_id": "MDQ6VXNlcjMyODIxMTk1", "avatar_url": "https://avatars1.githubusercontent.com/u/32821195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imti283", "html_url": "https://github.com/imti283", "followers_url": "https://api.github.com/users/imti283/followers", "following_url": "https://api.github.com/users/imti283/following{/other_user}", "gists_url": "https://api.github.com/users/imti283/gists{/gist_id}", "starred_url": "https://api.github.com/users/imti283/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imti283/subscriptions", "organizations_url": "https://api.github.com/users/imti283/orgs", "repos_url": "https://api.github.com/users/imti283/repos", "events_url": "https://api.github.com/users/imti283/events{/privacy}", "received_events_url": "https://api.github.com/users/imti283/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 941359717, "node_id": "MDU6TGFiZWw5NDEzNTk3MTc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/init", "name": "area/init", "color": "252eb2", "default": false, "description": ""}, {"id": 797200199, "node_id": "MDU6TGFiZWw3OTcyMDAxOTk=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/platform/windows", "name": "platform/windows", "color": "0e8a16", "default": false, "description": null}, {"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": {"login": "mndeveci", "id": 5735811, "node_id": "MDQ6VXNlcjU3MzU4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5735811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndeveci", "html_url": "https://github.com/mndeveci", "followers_url": "https://api.github.com/users/mndeveci/followers", "following_url": "https://api.github.com/users/mndeveci/following{/other_user}", "gists_url": "https://api.github.com/users/mndeveci/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndeveci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndeveci/subscriptions", "organizations_url": "https://api.github.com/users/mndeveci/orgs", "repos_url": "https://api.github.com/users/mndeveci/repos", "events_url": "https://api.github.com/users/mndeveci/events{/privacy}", "received_events_url": "https://api.github.com/users/mndeveci/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mndeveci", "id": 5735811, "node_id": "MDQ6VXNlcjU3MzU4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5735811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndeveci", "html_url": "https://github.com/mndeveci", "followers_url": "https://api.github.com/users/mndeveci/followers", "following_url": "https://api.github.com/users/mndeveci/following{/other_user}", "gists_url": "https://api.github.com/users/mndeveci/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndeveci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndeveci/subscriptions", "organizations_url": "https://api.github.com/users/mndeveci/orgs", "repos_url": "https://api.github.com/users/mndeveci/repos", "events_url": "https://api.github.com/users/mndeveci/events{/privacy}", "received_events_url": "https://api.github.com/users/mndeveci/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-02T07:46:50Z", "updated_at": "2020-07-24T20:43:12Z", "closed_at": "2020-07-24T20:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nIssue while Init'ing cookiecutter as well non-cookiecutter github repo.\r\n\r\n### Steps to reproduce\r\n\r\n>>sam init --location gh:awslabs/aws-sam-cli-app-templates --debug --name my-test-app1\r\n\r\n### Observed result\r\n\r\nPS C:\\Users\\mdimtiya\\Desktop\\Scripts\\LmbdaCIC\\testy> sam --version\r\nSAM CLI, version 0.53.0\r\nPS C:\\Users\\mdimtiya\\Desktop\\Scripts\\LmbdaCIC\\testy>  sam init --location gh:awslabs/aws-sam-cli-app-templates --debug --name my-test-app1\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nParameters dict created with input given\r\n{'template': 'gh:awslabs/aws-sam-cli-app-templates', 'output_dir': '.', 'no_input': False, 'extra_context': {'project_name': 'my-test-app1'}}\r\nBaking a new template with cookiecutter with all parameters\r\nYou've downloaded C:\\Users\\mdimtiya\\.cookiecutters\\aws-sam-cli-app-templates before. Is it okay to delete and re-download it? [yes]: y\r\nUnable to find cookiecutter.json in the project. Downloading it directly without treating it as a cookiecutter template\r\nDownloading project from gh:awslabs/aws-sam-cli-app-templates to my-test-app1\r\nhttps://github.com/awslabs/aws-sam-cli-app-templates.git location is a source control repository\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam init', 'duration': 31583, 'exitReason': 'PermissionError', 'exitCode': 255, 'requestId': 'e5221dee-dcce-4b42-a3b9-1edc9e1be7ff', 'installationId': '5e8ad87e-b364-46b8-a362-da8c21380d29', 'sessionId': '5c4601c7-051c-4672-a8e7-62cdaeb8073d', 'executionEnvironment': 'CLI', 'pyversion': '3.7.2', 'samcliVersion': '0.53.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nTraceback (most recent call last):\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\init\\__init__.py\", line 80, in generate_project\r\n    cookiecutter(**params)\r\n  File \"c:\\python37\\lib\\site-packages\\cookiecutter\\main.py\", line 63, in cookiecutter\r\n    password=password\r\n  File \"c:\\python37\\lib\\site-packages\\cookiecutter\\repository.py\", line 122, in determine_repo_dir\r\n    '\\n'.join(repository_candidates)\r\ncookiecutter.exceptions.RepositoryNotFound: A valid repository for \"https://github.com/awslabs/aws-sam-cli-app-templates.git\" could not be found in the following locations:\r\nC:\\Users\\mdimtiya\\.cookiecutters\\aws-sam-cli-app-templates\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\python37\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\python37\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python37\\Scripts\\sam.exe\\__main__.py\", line 7, in <module>\r\n  File \"c:\\python37\\lib\\site-packages\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"c:\\python37\\lib\\site-packages\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"c:\\python37\\lib\\site-packages\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"c:\\python37\\lib\\site-packages\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"c:\\python37\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"c:\\python37\\lib\\site-packages\\click\\decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"c:\\python37\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\commands\\init\\__init__.py\", line 118, in cli\r\n    extra_context,\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\commands\\init\\__init__.py\", line 163, in do_cli\r\n    do_generate(location, runtime, dependency_manager, output_dir, name, no_input, extra_context)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\commands\\init\\init_generator.py\", line 12, in do_generate\r\n    generate_project(location, runtime, dependency_manager, output_dir, name, no_input, extra_context)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\init\\__init__.py\", line 89, in generate_project\r\n    generate_non_cookiecutter_project(location=params[\"template\"], output_dir=project_output_dir)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\init\\arbitrary_project.py\", line 81, in generate_non_cookiecutter_project\r\n    return _download_and_copy(download_fn, output_dir)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\init\\arbitrary_project.py\", line 108, in _download_and_copy\r\n    osutils.copytree(downloaded_dir, output_dir, ignore=shutil.ignore_patterns(\"*.git\"))\r\n  File \"c:\\python37\\lib\\contextlib.py\", line 119, in __exit__\r\n    next(self.gen)\r\n  File \"c:\\python37\\lib\\site-packages\\samcli\\lib\\utils\\osutils.py\", line 49, in mkdir_temp\r\n    shutil.rmtree(temp_dir)\r\n  File \"c:\\python37\\lib\\shutil.py\", line 513, in rmtree\r\n    return _rmtree_unsafe(path, onerror)\r\n  File \"c:\\python37\\lib\\shutil.py\", line 392, in _rmtree_unsafe\r\n    _rmtree_unsafe(fullname, onerror)\r\n  File \"c:\\python37\\lib\\shutil.py\", line 392, in _rmtree_unsafe\r\n    _rmtree_unsafe(fullname, onerror)\r\n  File \"c:\\python37\\lib\\shutil.py\", line 392, in _rmtree_unsafe\r\n    _rmtree_unsafe(fullname, onerror)\r\n  [Previous line repeated 1 more time]\r\n  File \"c:\\python37\\lib\\shutil.py\", line 397, in _rmtree_unsafe\r\n    onerror(os.unlink, fullname, sys.exc_info())\r\n  File \"c:\\python37\\lib\\shutil.py\", line 395, in _rmtree_unsafe\r\n    os.unlink(fullname)\r\nPermissionError: [WinError 5] Access is denied: 'C:\\\\Users\\\\mdimtiya\\\\AppData\\\\Local\\\\Temp\\\\tmpf3g9pr58\\\\aws-sam-cli-app-templates\\\\.git\\\\objects\\\\pack\\\\pack-01e9912e67cc4a806515aa98dc9b6678a20461ea.idx'\r\nPS C:\\Users\\mdimtiya\\Desktop\\Scripts\\LmbdaCIC\\testy>\r\n\r\n### Expected result\r\n\r\nShould clone without giving any error. It is cloning the repo but statement exiting with error.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10,15063\r\n2. `sam --version`: 0.53.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2084", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2084/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2084/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2084/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2084", "id": 649596647, "node_id": "MDU6SXNzdWU2NDk1OTY2NDc=", "number": 2084, "title": "Sending request to locally hosted API results in Internal Server Error", "user": {"login": "TJClifton90", "id": 1956849, "node_id": "MDQ6VXNlcjE5NTY4NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1956849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TJClifton90", "html_url": "https://github.com/TJClifton90", "followers_url": "https://api.github.com/users/TJClifton90/followers", "following_url": "https://api.github.com/users/TJClifton90/following{/other_user}", "gists_url": "https://api.github.com/users/TJClifton90/gists{/gist_id}", "starred_url": "https://api.github.com/users/TJClifton90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TJClifton90/subscriptions", "organizations_url": "https://api.github.com/users/TJClifton90/orgs", "repos_url": "https://api.github.com/users/TJClifton90/repos", "events_url": "https://api.github.com/users/TJClifton90/events{/privacy}", "received_events_url": "https://api.github.com/users/TJClifton90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-02T03:32:39Z", "updated_at": "2020-07-28T00:42:03Z", "closed_at": "2020-07-20T15:50:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI have been unable to get SAM Local to work on Windows 10. I have followed the instructions [here](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html) and attempts to interact with the locally hosted API or invoke my lambda functions manually result in the error attached below.\r\n\r\n### Steps to reproduce\r\n\r\n1. Follow instructions on [Official Documentation](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html) for setting up a sample application (Steps 1 and 2).\r\n2. Host the API locally with `sam local start-api`\r\n3. As per the doc above, send a request to the locally hosted API with `curl http://127.0.0.1:3000/hello`\r\n4. Observe the error below:\r\n\r\n### Observed result\r\n\r\n```\r\nPS C:\\Projects\\3rdParty\\sam-app> sam local start-api --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal start-api command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='HelloWorldFunction'\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound '1' API Events in Serverless function with name 'HelloWorldFunction'\r\nDetected Inline Swagger definition\r\nLambda function integration not found in Swagger document at path='/hello' method='get'\r\nFound '0' APIs in resource 'ServerlessRestApi'\r\nRemoved duplicates from '0' Explicit APIs and '1' Implicit APIs to produce '1' APIs\r\n1 APIs found in the template\r\nMounting HelloWorldFunction at http://127.0.0.1:3000/hello [GET]\r\nYou can now browse to the above endpoints to invoke your functions. You do not need to restart/reload SAM CLI while working on your functions, changes will be reflected instantly/automatically. You only need to restart SAM CLI if you update your AWS SAM template\r\nLocalhost server is starting up. Multi-threading = True\r\n2020-07-02 13:25:26  * Running on http://127.0.0.1:3000/ (Press CTRL+C to quit)\r\nConstructed String representation of Event to invoke Lambda. Event: {\"httpMethod\": \"GET\", \"body\": null, \"resource\": \"/hello\", \"requestContext\": {\"resourceId\": \"123456\", \"apiId\": \"1234567890\", \"resourcePath\": \"/hello\", \"httpMethod\": \"GET\", \"requestId\": \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\", \"accountId\": \"123456789012\", \"stage\": \"Prod\", \"identity\": {\"apiKey\": null, \"userArn\": null, \"cognitoAuthenticationType\": null, \"caller\": null, \"userAgent\": \"Custom User Agent String\", \"user\": null, \"cognitoIdentityPoolId\": null, \"cognitoAuthenticationProvider\": null, \"sourceIp\": \"127.0.0.1\", \"accountId\": null}, \"extendedRequestId\": null, \"path\": \"/hello\"}, \"queryStringParameters\": null, \"multiValueQueryStringParameters\": null, \"headers\": {\"Host\": \"127.0.0.1:3000\", \"User-Agent\": \"curl/7.55.1\", \"Accept\": \"*/*\", \"X-Forwarded-Proto\": \"http\", \"X-Forwarded-Port\": \"3000\"}, \"multiValueHeaders\": {\"Host\": [\"127.0.0.1:3000\"], \"User-Agent\": [\"curl/7.55.1\"], \"Accept\": [\"*/*\"], \"X-Forwarded-Proto\": [\"http\"], \"X-Forwarded-Port\": [\"3000\"]}, \"pathParameters\": null, \"stageVariables\": null, \"path\": \"/hello\", \"isBase64Encoded\": false}\r\nFound one Lambda function with name 'HelloWorldFunction'\r\nInvoking HelloWorld::HelloWorld.Function::FunctionHandler (dotnetcore2.1)\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=C:\\Projects\\3rdParty\\sam-app\\.aws-sam\\build, CodeUri=HelloWorldFunction\r\nResolved absolute path to code is C:\\Projects\\3rdParty\\sam-app\\.aws-sam\\build\\HelloWorldFunction\r\nCode C:\\Projects\\3rdParty\\sam-app\\.aws-sam\\build\\HelloWorldFunction is not a zip/jar file\r\nSkipping building an image since no layers were defined\r\n\r\nFetching lambci/lambda:dotnetcore2.1 Docker container image......\r\nMounting C:\\Projects\\3rdParty\\sam-app\\.aws-sam\\build\\HelloWorldFunction as /var/task:ro,delegated inside runtime container\r\nContainer was not created. Skipping deletion\r\n2020-07-02 13:25:36 Exception on /hello [GET]\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\api\\client.py\", line 261, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\requests\\models.py\", line 941, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localnpipe/v1.35/containers/create\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\flask\\app.py\", line 2317, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\flask\\app.py\", line 1840, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\flask\\app.py\", line 1743, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\flask\\_compat.py\", line 36, in reraise\r\n    raise value\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\flask\\app.py\", line 1838, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\flask\\app.py\", line 1824, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\local\\apigw\\local_apigw_service.py\", line 203, in _request_handler\r\n    self.lambda_runner.invoke(route.function_name, event, stdout=stdout_stream_writer, stderr=self.stderr)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\local\\lib\\local_lambda.py\", line 100, in invoke\r\n    self.local_runtime.invoke(config, event, debug_context=self.debug_context, stdout=stdout, stderr=stderr)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\local\\lambdafn\\runtime.py\", line 83, in invoke\r\n    self._container_manager.run(container)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\local\\docker\\manager.py\", line 93, in run\r\n    container.create()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\local\\docker\\container.py\", line 133, in create\r\n    real_container = self.docker_client.containers.create(self._image, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\models\\containers.py\", line 861, in create\r\n    resp = self.client.api.create_container(**create_kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\api\\container.py\", line 430, in create_container\r\n    return self.create_container_from_config(config, name)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\api\\container.py\", line 441, in create_container_from_config\r\n    return self._result(res, True)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\api\\client.py\", line 267, in _result\r\n    self._raise_for_status(response)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\api\\client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\docker\\errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"invalid bind mount spec \"/c/Projects/3rdParty/sam-app/.aws-sam/build/HelloWorldFunction:/var/task:ro,delegated\": invalid mode: ro,delegated\")\r\n```\r\n\r\n### Expected result\r\n\r\nThe locally hosted API should return an output similar to that in the documentation.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 Pro 1903\r\n2. `sam --version`: SAM CLI, version 0.53.0\r\n3. `docker --version`: Docker version 17.03.1-ce-rc1, build 3476dbf\r\n4. Docker set to use Linux Containers and has access to C drive.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2081", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2081/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2081/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2081/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2081", "id": 648790407, "node_id": "MDU6SXNzdWU2NDg3OTA0MDc=", "number": 2081, "title": "Clarification for Sam Deploy Validation Error", "user": {"login": "Gunt-r", "id": 35857175, "node_id": "MDQ6VXNlcjM1ODU3MTc1", "avatar_url": "https://avatars0.githubusercontent.com/u/35857175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gunt-r", "html_url": "https://github.com/Gunt-r", "followers_url": "https://api.github.com/users/Gunt-r/followers", "following_url": "https://api.github.com/users/Gunt-r/following{/other_user}", "gists_url": "https://api.github.com/users/Gunt-r/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gunt-r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gunt-r/subscriptions", "organizations_url": "https://api.github.com/users/Gunt-r/orgs", "repos_url": "https://api.github.com/users/Gunt-r/repos", "events_url": "https://api.github.com/users/Gunt-r/events{/privacy}", "received_events_url": "https://api.github.com/users/Gunt-r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-01T08:43:17Z", "updated_at": "2020-07-17T12:56:06Z", "closed_at": "2020-07-17T12:56:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I received the following error when attempting to deploy my lambda application. My issue is that I am not able to understand what it is asking me to do in order to fix the error.\r\n\r\n`Error: Failed to create changeset for the stack: {stack-name}, An error occurred (ValidationError) when calling the CreateChangeSet operation: Stack:arn:aws:cloudformation:ap-southeast-2:014009325916:stack/{stack-name}/f2212bf0-bb41-11ea-8ef3-0aa7af0536b6 is in ROLLBACK_COMPLETE state and can not be updated.`\r\n\r\nCould someone please clarify this for me\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2074", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2074/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2074/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2074/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2074", "id": 646420279, "node_id": "MDU6SXNzdWU2NDY0MjAyNzk=", "number": 2074, "title": "FR: Multiple region support for samconfig.toml", "user": {"login": "brysontyrrell", "id": 3086245, "node_id": "MDQ6VXNlcjMwODYyNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3086245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brysontyrrell", "html_url": "https://github.com/brysontyrrell", "followers_url": "https://api.github.com/users/brysontyrrell/followers", "following_url": "https://api.github.com/users/brysontyrrell/following{/other_user}", "gists_url": "https://api.github.com/users/brysontyrrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/brysontyrrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brysontyrrell/subscriptions", "organizations_url": "https://api.github.com/users/brysontyrrell/orgs", "repos_url": "https://api.github.com/users/brysontyrrell/repos", "events_url": "https://api.github.com/users/brysontyrrell/events{/privacy}", "received_events_url": "https://api.github.com/users/brysontyrrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200190, "node_id": "MDU6TGFiZWw3OTcyMDAxOTA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/feature", "name": "type/feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-26T17:52:08Z", "updated_at": "2020-07-24T20:37:56Z", "closed_at": "2020-07-24T20:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe your idea/feature/enhancement\r\n\r\nMost serverless apps I build are designed for active-active across multiple regions. While it's easy to use samconfig.toml to quickly deploy my app within a single region for dev I recently found myself jumping back and forth between two config files for us-east-2 and eu-west-2. The process was cumbersome because there's no argument for passing which toml file to use ( #1615 )and I need to rename the files every time I wanted to deploy to both regions.\r\n\r\nIf I'm working on an app and I want to have it go to multiple regions when I run `sam deploy` it might be beneficial to be able to store those options in one config file and then the deploy action would iterate over them using the same set of build artifacts locally.\r\n\r\nThis is actually what we do in CodeBuild jobs in CodePipeline. The script in CodeBuild will run `sam build` and then we loop over a list of regions passed into the env vars and run `sam package` for each. The output deployment templates are then passed to CloudFormation actions in the next stage.\r\n\r\n### Proposal\r\n\r\nHere's the current `0.1` spec for a config file that's generated:\r\n\r\n```toml\r\nversion = 0.1\r\n[default]\r\n[default.deploy]\r\n[default.deploy.parameters]\r\nstack_name = \"my-api\"\r\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-xxxxxxxxxx\"\r\ns3_prefix = \"my-api\"\r\nregion = \"us-east-2\"\r\nprofile = \"my_profile\"\r\ncapabilities = \"CAPABILITY_IAM\"\r\nparameter_overrides = \"Foo=\\\"Bar\\\"\"\r\n```\r\n\r\nI understand there is a semi-hidden feature where other environments can be set besides `default` with some overrides. Maybe the `.deploy.parameters` can be extended with region/environment specific overrides.\r\n\r\n```toml\r\nversion = 0.1\r\n[default]\r\n[default.deploy]\r\n[default.deploy.parameters]\r\nstack_name = \"my-api\"\r\ns3_prefix = \"my-api\"\r\nprofile = \"my_profile\"\r\ncapabilities = \"CAPABILITY_IAM\"\r\n[default.deploy.parameters.us-east-2]\r\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-xxxxxxxxxx\"\r\nparameter_overrides = \"Foo=\\\"Bar\\\"\"\r\n[default.deploy.parameters.eu-west-2]\r\ns3_bucket = \"aws-sam-cli-managed-default-samclisourcebucket-xxxxxxxxxx\"\r\nparameter_overrides = \"Foo=\\\"Baz\\\"\"\r\n```\r\n\r\nThe presence of the region suffix would trigger package/deploy logic for multiple regions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2071", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2071/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2071/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2071/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2071", "id": 645808168, "node_id": "MDU6SXNzdWU2NDU4MDgxNjg=", "number": 2071, "title": "AWS::ApiGatewayV2::Stage RouteSettings/LoggingLevel type is an Object, when the docs say it should be a string", "user": {"login": "divmgl", "id": 5452298, "node_id": "MDQ6VXNlcjU0NTIyOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5452298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divmgl", "html_url": "https://github.com/divmgl", "followers_url": "https://api.github.com/users/divmgl/followers", "following_url": "https://api.github.com/users/divmgl/following{/other_user}", "gists_url": "https://api.github.com/users/divmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/divmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divmgl/subscriptions", "organizations_url": "https://api.github.com/users/divmgl/orgs", "repos_url": "https://api.github.com/users/divmgl/repos", "events_url": "https://api.github.com/users/divmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/divmgl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 948231357, "node_id": "MDU6TGFiZWw5NDgyMzEzNTc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/needs-investigation", "name": "stage/needs-investigation", "color": "e03353", "default": false, "description": "Stage used for when an issue needs a deeper investigation"}, {"id": 797200198, "node_id": "MDU6TGFiZWw3OTcyMDAxOTg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/bug", "name": "type/bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T19:45:12Z", "updated_at": "2020-07-24T20:36:44Z", "closed_at": "2020-07-24T20:36:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nPretty straightforward bug. Here's the error I'm getting:\r\n\r\n```\r\nProperty validation failure: [Value of property {/RouteSettings/LoggingLevel} does not match type {Object}]\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n```yaml\r\n  SmittenWebsocketApiStage:\r\n    Type: AWS::ApiGatewayV2::Stage\r\n    Properties:\r\n      StageName: !Sub smitten-${Environment}\r\n      ApiId: !Ref SmittenWebsocketApi\r\n      AccessLogSettings:\r\n        DestinationArn: !GetAtt SmittenWebsocketApiLogGroup.Arn\r\n        Format: $context.requestId\r\n      RouteSettings:\r\n        LoggingLevel: INFO\r\n```\r\n\r\nThe docs state that the logging level can be `INFO`, `ERROR`, or `OFF`. \r\n\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigatewayv2-stage-routesettings.html\r\n\r\nAlthough I can modify this through the console, I worry about manually doing things with resources that are managed by CloudFormation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2069", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2069/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2069/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2069/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2069", "id": 645085804, "node_id": "MDU6SXNzdWU2NDUwODU4MDQ=", "number": 2069, "title": "python3.8 debugging broken due to AWS Lambda bootstrap changes", "user": {"login": "mhart", "id": 367936, "node_id": "MDQ6VXNlcjM2NzkzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/367936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhart", "html_url": "https://github.com/mhart", "followers_url": "https://api.github.com/users/mhart/followers", "following_url": "https://api.github.com/users/mhart/following{/other_user}", "gists_url": "https://api.github.com/users/mhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhart/subscriptions", "organizations_url": "https://api.github.com/users/mhart/orgs", "repos_url": "https://api.github.com/users/mhart/repos", "events_url": "https://api.github.com/users/mhart/events{/privacy}", "received_events_url": "https://api.github.com/users/mhart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-25T01:52:54Z", "updated_at": "2020-08-19T16:21:47Z", "closed_at": "2020-07-21T21:07:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\naws-sam-cli makes the assumption that `/var/runtime/bootstrap` on the python3.8 runtime is a python file:\r\n\r\nhttps://github.com/awslabs/aws-sam-cli/blob/89c5ed09f4c791f8f863b1057d3973944b87d80f/samcli/local/docker/lambda_debug_settings.py#L205\r\n\r\nWhich was true until today \u2013\u00a0it seems the AWS Lambda runtime team has updated it to be a bash file.\r\n\r\nSo users currently trying to use aws-sam-cli for debugging the python3.8 runtime will see a syntax error.\r\n\r\n`/var/runtime/bootstrap.py` can now be run as main, so the argument could just be updated to that, or aws-sam-cli could use the new `AWS_LAMBDA_EXEC_WRAPPER` env variable that's been introduced on the Amazon Linux 2 runtimes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2063", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2063/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2063/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2063/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2063", "id": 642848940, "node_id": "MDU6SXNzdWU2NDI4NDg5NDA=", "number": 2063, "title": "Latest aws-sam-cli boto dependencies are incompatible with latest awscli", "user": {"login": "getjack", "id": 166729, "node_id": "MDQ6VXNlcjE2NjcyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/166729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/getjack", "html_url": "https://github.com/getjack", "followers_url": "https://api.github.com/users/getjack/followers", "following_url": "https://api.github.com/users/getjack/following{/other_user}", "gists_url": "https://api.github.com/users/getjack/gists{/gist_id}", "starred_url": "https://api.github.com/users/getjack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/getjack/subscriptions", "organizations_url": "https://api.github.com/users/getjack/orgs", "repos_url": "https://api.github.com/users/getjack/repos", "events_url": "https://api.github.com/users/getjack/events{/privacy}", "received_events_url": "https://api.github.com/users/getjack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T08:02:19Z", "updated_at": "2020-06-25T08:16:37Z", "closed_at": "2020-06-22T15:38:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Description\r\n\r\nI'd like to keep my software up to date so i run `pip install awscli aws-sam-cli --upgrade --user` every morning. Recently i get errors regarding boto3 and botocore dependencies. Even though those are separate products i'd like them to be compatible to a certain degree but i don't know how. I am not able to use the latest awscli without breaking the aws-sam-cli. A potential workaround would be to create a venv somwhere on my disk.\r\n\r\n### Steps to reproduce\r\n\r\nRun `pip install awscli aws-sam-cli --upgrade --user`.\r\n\r\n### Observed result\r\n\r\nDepending on the order either awscli or aws-sam-cli will create a dependency warning for boto3 or botocore.\r\n\r\n### Expected result\r\n\r\nNo dependency issues but this is sort of a wish then a real expectation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2057", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2057/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2057/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2057/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2057", "id": 641897376, "node_id": "MDU6SXNzdWU2NDE4OTczNzY=", "number": 2057, "title": "Is there a way to force the lamba response to not return a response that needs body etc?", "user": {"login": "gibtang", "id": 1892674, "node_id": "MDQ6VXNlcjE4OTI2NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1892674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gibtang", "html_url": "https://github.com/gibtang", "followers_url": "https://api.github.com/users/gibtang/followers", "following_url": "https://api.github.com/users/gibtang/following{/other_user}", "gists_url": "https://api.github.com/users/gibtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/gibtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gibtang/subscriptions", "organizations_url": "https://api.github.com/users/gibtang/orgs", "repos_url": "https://api.github.com/users/gibtang/repos", "events_url": "https://api.github.com/users/gibtang/events{/privacy}", "received_events_url": "https://api.github.com/users/gibtang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T11:18:05Z", "updated_at": "2020-06-20T11:52:16Z", "closed_at": "2020-06-20T11:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nI am running my Lambda created using Golang and I have a custom response that does not return body etc. If I am running my custom JSON object that does not have the 'body', then it shows an error \"Lambda returned empty body!\" because of the SAM CLI code checking for the presence of the 'body'.\r\n\r\n### Proposal\r\n\r\nAdd in a flag --use-custom-response so that it will bypass the check of the presence of the 'body' object in the JSON response\r\n\r\nThings to consider:\r\n1. Will this require any updates to the [SAM Spec](https://github.com/awslabs/serverless-application-model)\r\n\r\n### Additional Details\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2055", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2055/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2055/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2055/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2055", "id": 641452408, "node_id": "MDU6SXNzdWU2NDE0NTI0MDg=", "number": 2055, "title": "Python Layer: exception: aws_lambda_builders.workflows.python_pip.packager.MissingDependencyError: {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}", "user": {"login": "jbpratt", "id": 29494941, "node_id": "MDQ6VXNlcjI5NDk0OTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/29494941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbpratt", "html_url": "https://github.com/jbpratt", "followers_url": "https://api.github.com/users/jbpratt/followers", "following_url": "https://api.github.com/users/jbpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jbpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbpratt/subscriptions", "organizations_url": "https://api.github.com/users/jbpratt/orgs", "repos_url": "https://api.github.com/users/jbpratt/repos", "events_url": "https://api.github.com/users/jbpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jbpratt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-18T18:11:28Z", "updated_at": "2020-06-20T00:21:01Z", "closed_at": "2020-06-20T00:21:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nWhen using the template below, and trying to build a layer for [this](https://pypi.org/project/webexteamssdk/) package, `sam build` throws an exception.\r\n\r\n### Steps to reproduce\r\n```\r\nmkdir -p tmp/teamssdk && cd tmp\r\necho \"webexteamssdk==1.3\" >> teamssdk/requirements.txt\r\n# paste template\r\nsam build --debug\r\n```\r\n\r\n### Observed result\r\n\r\n```\r\n sam build --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n1 resources found in the template\r\nNo Parameters detected in the template\r\nBuilding layer 'WebexTeamsSdk'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /home/jbpratt/projects/x/tmp/webexteamssdk/requirements.txt --dest /tmp/tmpptswj16s\r\nFull dependency closure: {certifi==2020.4.5.2(wheel), urllib3==1.25.9(wheel), future==0.18.2(sdist), webexteamssdk==1.3(sdist), idna==2.9(wheel), requests==2.24.0(wheel), chardet==3.0.4(wheel), pyjwt==1.7.1(wheel), requests-toolbelt==0.9.1(wheel)}\r\ninitial compatible: {certifi==2020.4.5.2(wheel), urllib3==1.25.9(wheel), idna==2.9(wheel), requests==2.24.0(wheel), chardet==3.0.4(wheel), pyjwt==1.7.1(wheel), requests-toolbelt==0.9.1(wheel)}\r\ninitial incompatible: {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\nDownloading missing wheels: {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp37m --dest /tmp/tmpptswj16s future==0.18.2\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp37m --dest /tmp/tmpptswj16s webexteamssdk==1.3\r\ncompatible wheels after second download pass: {certifi==2020.4.5.2(wheel), urllib3==1.25.9(wheel), idna==2.9(wheel), requests==2.24.0(wheel), chardet==3.0.4(wheel), pyjwt==1.7.1(wheel), requests-toolbelt==0.9.1(wheel)}\r\nBuild missing wheels from sdists (C compiling True): {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /tmp/tmpptswj16s /tmp/tmpptswj16s/future-0.18.2.tar.gz\r\ncalling pip wheel --no-deps --wheel-dir /tmp/tmpptswj16s /tmp/tmpptswj16s/webexteamssdk-1.3.tar.gz\r\ncompatible after building wheels (no C compiling): {certifi==2020.4.5.2(wheel), urllib3==1.25.9(wheel), idna==2.9(wheel), requests==2.24.0(wheel), chardet==3.0.4(wheel), pyjwt==1.7.1(wheel), requests-toolbelt==0.9.1(wheel)}\r\nBuild missing wheels from sdists (C compiling False): {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /tmp/tmpptswj16s /tmp/tmpptswj16s/future-0.18.2.tar.gz\r\ncalling pip wheel --no-deps --wheel-dir /tmp/tmpptswj16s /tmp/tmpptswj16s/webexteamssdk-1.3.tar.gz\r\ncompatible after building wheels (C compiling): {certifi==2020.4.5.2(wheel), urllib3==1.25.9(wheel), idna==2.9(wheel), requests==2.24.0(wheel), chardet==3.0.4(wheel), pyjwt==1.7.1(wheel), requests-toolbelt==0.9.1(wheel)}\r\nFinal compatible: {idna==2.9(wheel), requests==2.24.0(wheel), certifi==2020.4.5.2(wheel), chardet==3.0.4(wheel), pyjwt==1.7.1(wheel), urllib3==1.25.9(wheel), requests-toolbelt==0.9.1(wheel)}\r\nFinal incompatible: set()\r\nFinal missing wheels: {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\nPythonPipBuilder:ResolveDependencies failed\r\nTraceback (most recent call last):\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 39, in execute\r\n    package_builder.build_dependencies(\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 137, in build_dependencies\r\n    self._dependency_builder.build_site_packages(requirements_path, artifacts_dir_path, scratch_dir_path)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 201, in build_site_packages\r\n    raise MissingDependencyError(packages_without_wheels)\r\naws_lambda_builders.workflows.python_pip.packager.MissingDependencyError: {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/aws_lambda_builders/workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 45, in execute\r\n    raise ActionFailedError(str(ex))\r\naws_lambda_builders.actions.ActionFailedError: {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\n\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 5458, 'exitReason': 'WorkflowFailedError', 'exitCode': 1, 'requestId': 'cc72fbc6-55dd-4757-b941-00055ab68ca7', 'installationId': '6a175b4b-2582-4383-a90a-915453a15582', 'sessionId': '1a6e87ae-4161-4d0f-8dd6-b2cfa6e14717', 'executionEnvironment': 'CLI', 'pyversion': '3.8.3', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: PythonPipBuilder:ResolveDependencies - {future==0.18.2(sdist), webexteamssdk==1.3(sdist)}\r\n```\r\n\r\n### Expected result\r\n\r\na successful build\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Linux\r\n2. `sam --version`: `SAM CLI, version 0.52.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2045", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2045/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2045/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2045/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2045", "id": 639671401, "node_id": "MDU6SXNzdWU2Mzk2NzE0MDE=", "number": 2045, "title": "sam deploy --guided errors with \"S3 Bucket does not exist\"", "user": {"login": "jbesw", "id": 24660852, "node_id": "MDQ6VXNlcjI0NjYwODUy", "avatar_url": "https://avatars0.githubusercontent.com/u/24660852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbesw", "html_url": "https://github.com/jbesw", "followers_url": "https://api.github.com/users/jbesw/followers", "following_url": "https://api.github.com/users/jbesw/following{/other_user}", "gists_url": "https://api.github.com/users/jbesw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbesw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbesw/subscriptions", "organizations_url": "https://api.github.com/users/jbesw/orgs", "repos_url": "https://api.github.com/users/jbesw/repos", "events_url": "https://api.github.com/users/jbesw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbesw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200194, "node_id": "MDU6TGFiZWw3OTcyMDAxOTQ=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/question", "name": "type/question", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-16T13:36:18Z", "updated_at": "2020-06-26T17:27:05Z", "closed_at": "2020-06-26T17:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nUsing `sam deploy --guided`, the process fails with \"Error: S3 Bucket does not exist.\" \r\n\r\n### Steps to reproduce\r\n\r\n1. A developer deployed [this stack](https://github.com/aws-samples/ask-around-me/blob/master/backend/realtime.yaml) using `sam deploy --guided --template-file realtime.yaml`.\r\n2. Output:\r\nDeploying with following values\r\n===============================\r\n        Stack name                 : askAroundMe-realtime\r\n        Region                     : us-east-1\r\n        Confirm changeset          : False\r\n        Deployment s3 bucket       : aws-sam-cli-managed-default-samclisourcebucket-kll3li4nzc9r\r\n        Capabilities               : [\"CAPABILITY_IAM\"]\r\n        Parameter overrides        : {}\r\n\r\nInitiating deployment\r\n=====================\r\nError: \r\nS3 Bucket does not exist.\r\n\r\nProvide steps to replicate.\r\n\r\nThe developer has also renamed the template to template.yaml to avoid the template parameter, with the same result. Then tried after deleting the toml file with the same result.\r\n\r\n### Observed result\r\n\r\nsam deploy \u2013guided\r\nDeploying with following values\r\n===============================\r\n        Stack name                 : askAroundMe-realtime\r\n        Region                     : us-east-1\r\n        Confirm changeset          : False\r\n        Deployment s3 bucket       : aws-sam-cli-managed-default-samclisourcebucket-kll3li4nzc9r\r\n        Capabilities               : [\"CAPABILITY_IAM\"]\r\n        Parameter overrides        : {}\r\n\r\nInitiating deployment\r\n=====================\r\nError: \r\nS3 Bucket does not exist.\r\n\r\n### Expected result\r\n\r\nThe sam deployment should create a deployment bucket and complete.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS:\r\n2. `sam --version`:\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2043", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2043/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2043/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2043/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2043", "id": 637779857, "node_id": "MDU6SXNzdWU2Mzc3Nzk4NTc=", "number": 2043, "title": "Error: PythonPipBuilder:ResolveDependencies - {psycopg2==2.8.5(sdist)}", "user": {"login": "bbastia", "id": 13950547, "node_id": "MDQ6VXNlcjEzOTUwNTQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/13950547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbastia", "html_url": "https://github.com/bbastia", "followers_url": "https://api.github.com/users/bbastia/followers", "following_url": "https://api.github.com/users/bbastia/following{/other_user}", "gists_url": "https://api.github.com/users/bbastia/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbastia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbastia/subscriptions", "organizations_url": "https://api.github.com/users/bbastia/orgs", "repos_url": "https://api.github.com/users/bbastia/repos", "events_url": "https://api.github.com/users/bbastia/events{/privacy}", "received_events_url": "https://api.github.com/users/bbastia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-12T14:11:36Z", "updated_at": "2020-06-26T17:23:33Z", "closed_at": "2020-06-26T17:23:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nUnable to build project\r\n\r\n\r\n### Steps to reproduce\r\n\r\nsam init runtime python3.7\r\n\r\nin requirements.txt \r\npsycopg2\r\n\r\n\r\nsam build --debug\r\n### Observed result\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='hello_world/'\r\nNo Parameters detected in the template\r\nBuilding function 'HelloWorldFunction'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /Users/biswajit/Desktop/Playground/Test/hello_world/requirements.txt --dest /var/folders/6c/mv2bg0p554nf88mw5dp7kcsc0000gp/T/tmpb0a3rg25\r\nFull dependency closure: {psycopg2==2.8.5(sdist)}\r\ninitial compatible: set()\r\ninitial incompatible: {psycopg2==2.8.5(sdist)}\r\nDownloading missing wheels: {psycopg2==2.8.5(sdist)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp37m --dest /var/folders/6c/mv2bg0p554nf88mw5dp7kcsc0000gp/T/tmpb0a3rg25 psycopg2==2.8.5\r\ncompatible wheels after second download pass: set()\r\nBuild missing wheels from sdists (C compiling True): {psycopg2==2.8.5(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/6c/mv2bg0p554nf88mw5dp7kcsc0000gp/T/tmpb0a3rg25 /var/folders/6c/mv2bg0p554nf88mw5dp7kcsc0000gp/T/tmpb0a3rg25/psycopg2-2.8.5.tar.gz\r\ncompatible after building wheels (no C compiling): set()\r\nBuild missing wheels from sdists (C compiling False): {psycopg2==2.8.5(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/6c/mv2bg0p554nf88mw5dp7kcsc0000gp/T/tmpb0a3rg25 /var/folders/6c/mv2bg0p554nf88mw5dp7kcsc0000gp/T/tmpb0a3rg25/psycopg2-2.8.5.tar.gz\r\ncompatible after building wheels (C compiling): set()\r\nFinal compatible: set()\r\nFinal incompatible: set()\r\nFinal missing wheels: {psycopg2==2.8.5(sdist)}\r\nPythonPipBuilder:ResolveDependencies failed\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.52.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 42, in execute\r\n    requirements_path=self.manifest_path,\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.52.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 137, in build_dependencies\r\n    self._dependency_builder.build_site_packages(requirements_path, artifacts_dir_path, scratch_dir_path)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.52.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 201, in build_site_packages\r\n    raise MissingDependencyError(packages_without_wheels)\r\naws_lambda_builders.workflows.python_pip.packager.MissingDependencyError: {psycopg2==2.8.5(sdist)}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.52.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.52.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 45, in execute\r\n    raise ActionFailedError(str(ex))\r\naws_lambda_builders.actions.ActionFailedError: {psycopg2==2.8.5(sdist)}\r\n\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 10941, 'exitReason': 'WorkflowFailedError', 'exitCode': 1, 'requestId': '95841b50-c96a-47b3-8705-3c94e33decb3', 'installationId': '74b17ca5-bb1d-4d31-8ba4-af23be476339', 'sessionId': '42cb046f-11de-4448-8059-2f9b3405cdbe', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: PythonPipBuilder:ResolveDependencies - {psycopg2==2.8.5(sdist)}\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\n### Expected result\r\n\r\nshould build sucessfull\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac OS\r\n2. `sam --version`: SAM CLI, version 0.52.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2040", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2040/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2040/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2040/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2040", "id": 637241735, "node_id": "MDU6SXNzdWU2MzcyNDE3MzU=", "number": 2040, "title": "Unable to test api endpoint locally with sam local start-api", "user": {"login": "gangyi89", "id": 20316791, "node_id": "MDQ6VXNlcjIwMzE2Nzkx", "avatar_url": "https://avatars2.githubusercontent.com/u/20316791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gangyi89", "html_url": "https://github.com/gangyi89", "followers_url": "https://api.github.com/users/gangyi89/followers", "following_url": "https://api.github.com/users/gangyi89/following{/other_user}", "gists_url": "https://api.github.com/users/gangyi89/gists{/gist_id}", "starred_url": "https://api.github.com/users/gangyi89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gangyi89/subscriptions", "organizations_url": "https://api.github.com/users/gangyi89/orgs", "repos_url": "https://api.github.com/users/gangyi89/repos", "events_url": "https://api.github.com/users/gangyi89/events{/privacy}", "received_events_url": "https://api.github.com/users/gangyi89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T18:44:16Z", "updated_at": "2020-06-12T08:58:15Z", "closed_at": "2020-06-12T08:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n1. Downloaded the [hello world](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html) sample function (nodejs 12.x)\r\n\r\n2. Did a deploy and local start-api command.\r\n\r\n3. When curl http://127.0.0.1:3000/hello, got an internal server error.\r\n`{\"message\":\"Internal server error\"}`\r\n\r\nTried searching around the web but didnt find any error logs similar. any advise would be greatly appreciated!\r\n\r\n### --debug logs\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal start-api command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='HelloWorldFunction'\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound '1' API Events in Serverless function with name 'HelloWorldFunction'\r\nDetected Inline Swagger definition\r\nLambda function integration not found in Swagger document at path='/hello' method='get'\r\nFound '0' APIs in resource 'ServerlessRestApi'\r\nRemoved duplicates from '0' Explicit APIs and '1' Implicit APIs to produce '1' APIs\r\n1 APIs found in the template\r\nMounting HelloWorldFunction at http://127.0.0.1:3000/hello [GET]\r\nYou can now browse to the above endpoints to invoke your functions. You do not need to restart/reload SAM CLI while working on your functions, changes will be reflected instantly/automatically. You only need to restart SAM CLI if you update your AWS SAM template\r\nLocalhost server is starting up. Multi-threading = True\r\n2020-06-12 02:31:01  * Running on http://127.0.0.1:3000/ (Press CTRL+C to quit)\r\nConstructed String representation of Event to invoke Lambda. Event: {\"httpMethod\": \"GET\", \"body\": null, \"resource\": \"/hello\", \"requestContext\": {\"resourceId\": \"123456\", \"apiId\": \"1234567890\", \"resourcePath\": \"/hello\", \"httpMethod\": \"GET\", \"requestId\": \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\", \"accountId\": \"123456789012\", \"stage\": \"Prod\", \"identity\": {\"apiKey\": null, \"userArn\": null, \"cognitoAuthenticationType\": null, \"caller\": null, \"userAgent\": \"Custom User Agent String\", \"user\": null, \"cognitoIdentityPoolId\": null, \"cognitoAuthenticationProvider\": null, \"sourceIp\": \"127.0.0.1\", \"accountId\": null}, \"extendedRequestId\": null, \"path\": \"/hello\"}, \"queryStringParameters\": null, \"multiValueQueryStringParameters\": null, \"headers\": {\"Host\": \"127.0.0.1:3000\", \"User-Agent\": \"curl/7.54.0\", \"Accept\": \"*/*\", \"X-Forwarded-Proto\": \"http\", \"X-Forwarded-Port\": \"3000\"}, \"multiValueHeaders\": {\"Host\": [\"127.0.0.1:3000\"], \"User-Agent\": [\"curl/7.54.0\"], \"Accept\": [\"*/*\"], \"X-Forwarded-Proto\": [\"http\"], \"X-Forwarded-Port\": [\"3000\"]}, \"pathParameters\": null, \"stageVariables\": null, \"path\": \"/hello\", \"isBase64Encoded\": false}\r\nFound one Lambda function with name 'HelloWorldFunction'\r\nInvoking app.lambdaHandler (nodejs12.x)\r\nNo environment variables found for function 'HelloWorldFunction'\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=/Users/user/Documents/lambda/sam-app/.aws-sam/build, CodeUri=HelloWorldFunction\r\nResolved absolute path to code is /Users/user/Documents/lambda/sam-app/.aws-sam/build/HelloWorldFunction\r\nCode /Users/user/Documents/lambda/sam-app/.aws-sam/build/HelloWorldFunction is not a zip/jar file\r\nSkipping building an image since no layers were defined\r\n\r\nFetching lambci/lambda:nodejs12.x Docker container image.................................................................................................................................................................................................\r\nMounting /Users/user/Documents/lambda/sam-app/.aws-sam/build/HelloWorldFunction as /var/task:ro,delegated inside runtime container\r\n2020-06-12 02:31:44 Exception on /hello [GET]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 261, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/requests/models.py\", line 941, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: http+docker://localhost/v1.35/containers/cd82efab283aba78e0c2cce50d90a708f61724813ad7b0b1e7ea7b09da9f6505/start\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 2317, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1840, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1743, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/flask/_compat.py\", line 36, in reraise\r\n    raise value\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1838, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1824, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/samcli/local/apigw/local_apigw_service.py\", line 200, in _request_handler\r\n    self.lambda_runner.invoke(route.function_name, event, stdout=stdout_stream_writer, stderr=self.stderr)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/samcli/commands/local/lib/local_lambda.py\", line 100, in invoke\r\n    self.local_runtime.invoke(config, event, debug_context=self.debug_context, stdout=stdout, stderr=stderr)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/samcli/local/lambdafn/runtime.py\", line 83, in invoke\r\n    self._container_manager.run(container)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/samcli/local/docker/manager.py\", line 95, in run\r\n    container.start(input_data=input_data)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/samcli/local/docker/container.py\", line 188, in start\r\n    real_container.start()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/docker/models/containers.py\", line 400, in start\r\n    return self.client.api.start(self.id, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/docker/utils/decorators.py\", line 19, in wrapped\r\n    return f(self, resource_id, *args, **kwargs)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/docker/api/container.py\", line 1095, in start\r\n    self._raise_for_status(res)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"read unix @->@/containerd-shim/moby/cd82efab283aba78e0c2cce50d90a708f61724813ad7b0b1e7ea7b09da9f6505/shim.sock: read: connection reset by peer: unknown\")\r\n```\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS Mojave version 10.14.6\r\n2. `sam --version`: version 0.51.0\r\n3. `node --version`: 12.16.1\r\n4. `docker --version`: Docker version 19.03.8, build afacb8b\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2037", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2037/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2037/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2037/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2037", "id": 637203721, "node_id": "MDU6SXNzdWU2MzcyMDM3MjE=", "number": 2037, "title": "start-api emits max-age header making development difficult", "user": {"login": "matdumsa", "id": 312141, "node_id": "MDQ6VXNlcjMxMjE0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/312141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matdumsa", "html_url": "https://github.com/matdumsa", "followers_url": "https://api.github.com/users/matdumsa/followers", "following_url": "https://api.github.com/users/matdumsa/following{/other_user}", "gists_url": "https://api.github.com/users/matdumsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/matdumsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matdumsa/subscriptions", "organizations_url": "https://api.github.com/users/matdumsa/orgs", "repos_url": "https://api.github.com/users/matdumsa/repos", "events_url": "https://api.github.com/users/matdumsa/events{/privacy}", "received_events_url": "https://api.github.com/users/matdumsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T17:32:08Z", "updated_at": "2020-06-22T21:38:57Z", "closed_at": "2020-06-22T21:38:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nStatic files served with start-api through Flask are served with a cache header that makes developing challenging. The default in flask is 43200 seconds. \r\n\r\n### Steps to reproduce\r\n\r\nimagine you are switching between several different project, each with a similar structure. You start a project by typing\r\n\r\n```\r\nsam local start-api -p 3000 -t template.yaml -s packages/website/build\r\n```\r\n\r\nSwitching project and opening localhost:3000/index.html always serves an old page rather than the one of the server we are running because of that header. \r\n\r\n\r\n### Observed result\r\n\r\n```\r\nCache-Control: public, max-age=43200\r\n```\r\n\r\n### Expected result\r\n\r\n```\r\nCache-Control: public, max-age=0\r\n```\r\n\r\nHaving cached results adds another concept to developer, we receive many reports in our application of \"wrong page displayed\" even though we explain our dev they must refresh when they start the server. We would like to get rid of this concept all together.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2036", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2036/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2036/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2036/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2036", "id": 637158623, "node_id": "MDU6SXNzdWU2MzcxNTg2MjM=", "number": 2036, "title": "Building when using a container appears to log information to standard error", "user": {"login": "tks816", "id": 49729324, "node_id": "MDQ6VXNlcjQ5NzI5MzI0", "avatar_url": "https://avatars0.githubusercontent.com/u/49729324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tks816", "html_url": "https://github.com/tks816", "followers_url": "https://api.github.com/users/tks816/followers", "following_url": "https://api.github.com/users/tks816/following{/other_user}", "gists_url": "https://api.github.com/users/tks816/gists{/gist_id}", "starred_url": "https://api.github.com/users/tks816/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tks816/subscriptions", "organizations_url": "https://api.github.com/users/tks816/orgs", "repos_url": "https://api.github.com/users/tks816/repos", "events_url": "https://api.github.com/users/tks816/events{/privacy}", "received_events_url": "https://api.github.com/users/tks816/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T16:25:44Z", "updated_at": "2020-06-12T17:52:06Z", "closed_at": "2020-06-12T17:52:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `sam build --use-container -t template.yaml` in a pipeline, it was failing due to my setting to force the task to fail on stdErr. After researching the logs, I found that all the stdErr messaging was just logged info from prior in the build and every part of the build was successful.\r\n\r\nI was able to reproduce this locally as well by directing stdErr to a file:\r\n`sam build --use-container --skip-pull-image -t template.yaml 2> errors.txt` in which I get the following text:\r\n\r\n```\r\nStarting Build inside a container\r\nBuilding resource 'Application'\r\nRequested to skip pulling images ...\r\n\r\nMounting /filepath/src as /tmp/samcli/source:ro,delegated inside runtime container\r\nRunning PythonPipBuilder:ResolveDependencies\r\nRunning PythonPipBuilder:CopySource\r\n```\r\n\r\nThe stdout for this was:\r\n```\r\nBuild Succeeded\r\n\r\nBuilt Artifacts  : .aws-sam/build\r\nBuilt Template   : .aws-sam/build/template.yaml\r\n\r\nCommands you can use next\r\n=========================\r\n[*] Invoke Function: sam local invoke\r\n[*] Deploy: sam deploy --guided\r\n```\r\n\r\nIs this intended?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2035", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2035/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2035/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2035/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2035", "id": 637003514, "node_id": "MDU6SXNzdWU2MzcwMDM1MTQ=", "number": 2035, "title": "SAM build is failing / panicking ", "user": {"login": "jbpratt", "id": 29494941, "node_id": "MDQ6VXNlcjI5NDk0OTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/29494941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbpratt", "html_url": "https://github.com/jbpratt", "followers_url": "https://api.github.com/users/jbpratt/followers", "following_url": "https://api.github.com/users/jbpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jbpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbpratt/subscriptions", "organizations_url": "https://api.github.com/users/jbpratt/orgs", "repos_url": "https://api.github.com/users/jbpratt/repos", "events_url": "https://api.github.com/users/jbpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jbpratt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T13:15:15Z", "updated_at": "2020-06-14T11:51:19Z", "closed_at": "2020-06-14T11:51:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nSam is throwing exceptions for a template\r\n\r\n### Steps to reproduce\r\n```yaml\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: [AWS::Serverless-2016-10-31]\r\n\r\nResources:\r\n  ApiGateway:\r\n  Type: AWS::Serverless::Api\r\n  Properties:\r\n    Name: api\r\n    StageName: Staging\r\n\r\n  Poller:\r\n    Type: AWS::Serverless::Function\r\n    Properties:\r\n      Runtime: python3.7\r\n      Handler: index.handler\r\n      InlineCode: |\r\n        def handler(event, context):\r\n        return {'body': 'Hello World!', 'statusCode': 200}\r\n      Events:\r\n        Api:\r\n          Type: Api\r\n          Properties:\r\n            RestApiId: !Ref ApiGateway\r\n            Path: /xyz\r\n            Method: POST\r\n```\r\n```\r\nsam build\r\n```\r\n\r\n### Observed result\r\n\r\nPlease provide command output with `--debug` flag set.\r\n<details>\r\n\r\n```\r\nsam build --debug -t template.cfn.yaml\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n2020-06-11 08:10:14 Plugin 'ServerlessAppPlugin' raised an exception: 'NoneType' object has no attribute 'get'\r\nTraceback (most recent call last):\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/plugins/__init__.py\", line 133, in act\r\n    getattr(plugin, method_name)(*args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/plugins/application/serverless_app_plugin.py\", line 85, in on_before_transform_template\r\n    for logical_id, app in template.iterate({SamResourceType.Application.value}):\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/sdk/template.py\", line 33, in iterate\r\n    resource = SamResource(resource_dict)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/sdk/resource.py\", line 24, in __init__\r\n    self.type = resource_dict.get(\"Type\")\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 14, 'exitReason': 'AttributeError', 'exitCode': 255, 'requestId': 'edc6a9c1-bfe4-4972-9f7b-7d9cbdc93ad6', 'installationId': '6a175b4b-2582-4383-a90a-915453a15582', 'sessionId': '8d6623cf-ece7-4cbf-9e67-188a04273801', 'executionEnvironment': 'CLI', 'pyversion': '3.8.3', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nTraceback (most recent call last):\r\n  File \"/home/jbpratt/.local/bin/sam\", line 8, in <module>\r\n    sys.exit(cli())\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/decorators.py\", line 64, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/lib/telemetry/metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/lib/telemetry/metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/commands/build/command.py\", line 118, in cli\r\n    do_cli(\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/commands/build/command.py\", line 168, in do_cli\r\n    with BuildContext(\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/commands/build/build_context.py\", line 62, in __enter__\r\n    self._function_provider = SamFunctionProvider(self._template_dict, self._parameter_overrides)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/lib/providers/sam_function_provider.py\", line 40, in __init__\r\n    self.template_dict = SamFunctionProvider.get_template(template_dict, parameter_overrides)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/lib/providers/sam_base_provider.py\", line 126, in get_template\r\n    template_dict = SamTranslatorWrapper(template_dict, parameter_values=parameters_values).run_plugins()\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/lib/samlib/wrapper.py\", line 76, in run_plugins\r\n    parser.parse(template_copy, all_plugins)  # parse() will run all configured plugins\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samcli/lib/samlib/wrapper.py\", line 131, in parse\r\n    sam_plugins.act(LifeCycleEvents.before_transform_template, sam_template)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/plugins/__init__.py\", line 139, in act\r\n    raise ex\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/plugins/__init__.py\", line 133, in act\r\n    getattr(plugin, method_name)(*args, **kwargs)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/plugins/application/serverless_app_plugin.py\", line 85, in on_before_transform_template\r\n    for logical_id, app in template.iterate({SamResourceType.Application.value}):\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/sdk/template.py\", line 33, in iterate\r\n    resource = SamResource(resource_dict)\r\n  File \"/home/jbpratt/.local/lib/python3.8/site-packages/samtranslator/sdk/resource.py\", line 24, in __init__\r\n    self.type = resource_dict.get(\"Type\")\r\nAttributeError: 'NoneType' object has no attribute 'get'\r\n```\r\n\r\n</details>\r\n\r\n### Expected result\r\nSuccessful build\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Linux\r\n2. `sam --version`: SAM CLI, version 0.52.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2034", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2034/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2034/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2034/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2034", "id": 636696933, "node_id": "MDU6SXNzdWU2MzY2OTY5MzM=", "number": 2034, "title": "sam deploy --guided doesn't escape quotation marks for parameters written to samconfig.toml", "user": {"login": "senorkrabs", "id": 46199514, "node_id": "MDQ6VXNlcjQ2MTk5NTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/46199514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/senorkrabs", "html_url": "https://github.com/senorkrabs", "followers_url": "https://api.github.com/users/senorkrabs/followers", "following_url": "https://api.github.com/users/senorkrabs/following{/other_user}", "gists_url": "https://api.github.com/users/senorkrabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/senorkrabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/senorkrabs/subscriptions", "organizations_url": "https://api.github.com/users/senorkrabs/orgs", "repos_url": "https://api.github.com/users/senorkrabs/repos", "events_url": "https://api.github.com/users/senorkrabs/events{/privacy}", "received_events_url": "https://api.github.com/users/senorkrabs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200187, "node_id": "MDU6TGFiZWw3OTcyMDAxODc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/contributors/good-first-issue", "name": "contributors/good-first-issue", "color": "0e8a16", "default": false, "description": null}, {"id": 797200208, "node_id": "MDU6TGFiZWw3OTcyMDAyMDg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/in-progress", "name": "stage/in-progress", "color": "b60205", "default": false, "description": null}, {"id": 797200198, "node_id": "MDU6TGFiZWw3OTcyMDAxOTg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/bug", "name": "type/bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "wchengru", "id": 14915548, "node_id": "MDQ6VXNlcjE0OTE1NTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/14915548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchengru", "html_url": "https://github.com/wchengru", "followers_url": "https://api.github.com/users/wchengru/followers", "following_url": "https://api.github.com/users/wchengru/following{/other_user}", "gists_url": "https://api.github.com/users/wchengru/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchengru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchengru/subscriptions", "organizations_url": "https://api.github.com/users/wchengru/orgs", "repos_url": "https://api.github.com/users/wchengru/repos", "events_url": "https://api.github.com/users/wchengru/events{/privacy}", "received_events_url": "https://api.github.com/users/wchengru/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wchengru", "id": 14915548, "node_id": "MDQ6VXNlcjE0OTE1NTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/14915548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchengru", "html_url": "https://github.com/wchengru", "followers_url": "https://api.github.com/users/wchengru/followers", "following_url": "https://api.github.com/users/wchengru/following{/other_user}", "gists_url": "https://api.github.com/users/wchengru/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchengru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchengru/subscriptions", "organizations_url": "https://api.github.com/users/wchengru/orgs", "repos_url": "https://api.github.com/users/wchengru/repos", "events_url": "https://api.github.com/users/wchengru/events{/privacy}", "received_events_url": "https://api.github.com/users/wchengru/received_events", "type": "User", "site_admin": false}, {"login": "mingkun2020", "id": 68391979, "node_id": "MDQ6VXNlcjY4MzkxOTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/68391979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingkun2020", "html_url": "https://github.com/mingkun2020", "followers_url": "https://api.github.com/users/mingkun2020/followers", "following_url": "https://api.github.com/users/mingkun2020/following{/other_user}", "gists_url": "https://api.github.com/users/mingkun2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingkun2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingkun2020/subscriptions", "organizations_url": "https://api.github.com/users/mingkun2020/orgs", "repos_url": "https://api.github.com/users/mingkun2020/repos", "events_url": "https://api.github.com/users/mingkun2020/events{/privacy}", "received_events_url": "https://api.github.com/users/mingkun2020/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-11T03:55:23Z", "updated_at": "2020-08-14T22:46:28Z", "closed_at": "2020-08-14T22:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWhen using `sam deploy --guided`, parameters with quotation marks `\"` are written to `parameter_overrides` in samconfig.toml without proper escaping. As a result, the parameter isn't correctly populated the next time `sam deploy` is called.\r\n\r\n### Steps to reproduce\r\n\r\nRun `sam deploy --guided` and use these parameters:\r\n```\r\n        Stack Name [sftp-lambda]: \r\n        AWS Region [us-east-1]: \r\n        Parameter FilesListJSON []: [ { \"SrcFile\": \"/athena/CUR2/CUR2/year=2020/month=6/*.snappy.parquet\",  \"TargetPath\": \"/sftp-lambda/test\"}, { \"SrcFile\": \"/athena/CUR2/CUR2/year=2020/month=5/*.snappy.parquet\",  \"TargetPath\": \"/sftp-lambda/test\"}]\r\n        #Shows you resources changes to be deployed and require a 'Y' to initiate deploy\r\n        Confirm changes before deploy [Y/n]: Y\r\n        #SAM needs permission to be able to create roles to connect to the resources in your template\r\n        Allow SAM CLI IAM role creation [Y/n]: Y\r\n        Save arguments to samconfig.toml [Y/n]: Y\r\n```\r\n\r\n### Observed result\r\nWritten to `samconfig.toml`:\r\n```\r\nparameter_overrides = \"FilesListJSON=\\\"[ { \\\"SrcFile\\\": \\\"/athena/CUR2/CUR2/year=2020/month=6/*.snappy.parquet\\\",  \\\"TargetPath\\\": \\\"/sftp-lambda/test\\\"}, { \\\"SrcFile\\\": \\\"/athena/CUR2/CUR2/year=2020/month=5/*.snappy.parquet\\\",  \\\"TargetPath\\\": \\\"/sftp-lambda/test\\\"}]\\\"\"\r\n```\r\nWhat happens when `sam deploy` is called again:\r\n```\r\n$ sam deploy\r\n\r\n        Deploying with following values\r\n        ===============================\r\n        Stack name                 : sftp-lambda\r\n        Region                     : us-east-1\r\n        Confirm changeset          : True\r\n        Deployment s3 bucket       : aws-sam-cli-managed-default-samclisourcebucket-\r\n        Capabilities               : [\"CAPABILITY_IAM\"]\r\n        Parameter overrides        : {'FilesListJSON': '[ { '}\r\n```\r\n(Note that Parameter overrides is incorrect)\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\n### Expected result\r\n\r\nWritten to `samconfig.toml`:\r\n```\r\nparameter_overrides = \"FilesListJSON=\\\"[ { \\\\\\\"SrcFile\\\\\\\": \\\\\\\"/athena/CUR2/CUR2/year=2020/month=6/*.snappy.parquet\\\\\\\",  \\\\\\\"TargetPath\\\\\\\": \\\\\\\"/sftp-lambda/test\\\\\\\"}, { \\\\\\\"SrcFile\\\\\\\": \\\\\\\"/athena/CUR2/CUR2/year=2020/month=5/*.snappy.parquet\\\\\\\",  \\\\\\\"TargetPath\\\\\\\": \\\\\\\"/sftp-lambda/test\\\\\\\"}]\\\"\"\r\n```\r\n\r\n```\r\n$ sam deploy\r\n\r\n        Deploying with following values\r\n        ===============================\r\n        Stack name                 : sftp-lambda\r\n        Region                     : us-east-1\r\n        Confirm changeset          : True\r\n        Deployment s3 bucket       : aws-sam-cli-managed-default-samclisourcebucket-\r\n        Capabilities               : [\"CAPABILITY_IAM\"]\r\n        Parameter overrides        : {'FilesListJSON': '[ { \"SrcFile\": \"/athena/CUR2/CUR2/year=2020/month=6/*.snappy.parquet\",  \"TargetPath\": \"/sftp-lambda/test\"}, { \"SrcFile\": \"/athena/CUR2/CUR2/year=2020/month=5/*.snappy.parquet\"'}\r\n```\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Amazon Linux\r\n2. `sam --version`: SAM CLI, version 0.52.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2032", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2032/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2032/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2032/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2032", "id": 636418854, "node_id": "MDU6SXNzdWU2MzY0MTg4NTQ=", "number": 2032, "title": "Serverless::LayerVersion Makefile issue (not packaging build code)", "user": {"login": "jbpratt", "id": 29494941, "node_id": "MDQ6VXNlcjI5NDk0OTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/29494941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbpratt", "html_url": "https://github.com/jbpratt", "followers_url": "https://api.github.com/users/jbpratt/followers", "following_url": "https://api.github.com/users/jbpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jbpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbpratt/subscriptions", "organizations_url": "https://api.github.com/users/jbpratt/orgs", "repos_url": "https://api.github.com/users/jbpratt/repos", "events_url": "https://api.github.com/users/jbpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jbpratt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 948231357, "node_id": "MDU6TGFiZWw5NDgyMzEzNTc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/needs-investigation", "name": "stage/needs-investigation", "color": "e03353", "default": false, "description": "Stage used for when an issue needs a deeper investigation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-10T17:18:51Z", "updated_at": "2020-06-11T00:05:13Z", "closed_at": "2020-06-11T00:05:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nMigrating to utilize the makefile feature released in 0.5.0. I think I am just doing something wrong, but I copied the documentation pretty closely. The goal is to simply install a Pip dependency.\r\n\r\n### Steps to reproduce\r\n```\r\nhttpx/\r\n\u251c\u2500\u2500 Makefile\r\n\u2514\u2500\u2500 requirements.txt\r\n```\r\n```yaml\r\n  HttpxDepLayer:\r\n    Type: AWS::Serverless::LayerVersion\r\n    Metadata:\r\n      BuildMethod: makefile\r\n    Properties:\r\n      LayerName: httpx\r\n      Description: dependency\r\n      ContentUri: httpx/\r\n      CompatibleRuntimes:\r\n        - python3.7\r\n```\r\n```\r\n~/ cat httpx/Makefile\r\nbuild-HttpxDepLayer:\r\n    mkdir -p \"$(ARTIFACTS_DIR)/python\"\r\n    python -m pip install -r requirements.txt -t \"$(ARTIFACTS_DIR)/python\"\r\n\r\n~/ cat httpx/requirements.txt\r\nhttpx~=0.13.3\r\n```\r\n\r\n```\r\nsam build\r\nsam deploy\r\n# download the layer deployed and unzip\r\n```\r\n### Observed result\r\n\r\n```\r\n~/ unzip httpx-d1b46166-e79c-40ab-809a-cc3d78bb2c7b.zip\r\nArchive:  httpx-d1b46166-e79c-40ab-809a-cc3d78bb2c7b.zip\r\n  inflating: requirements.txt\r\n  inflating: Makefile\r\n```\r\n\r\n### Expected result\r\n\r\nPackaged artifacts into layer\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n1. OS: Linux\r\n2. `sam --version`: SAM CLI, version 0.52.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2030", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2030/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2030/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2030/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2030", "id": 636237683, "node_id": "MDU6SXNzdWU2MzYyMzc2ODM=", "number": 2030, "title": "Contribution improvement, add support for GitPod.io", "user": {"login": "matdumsa", "id": 312141, "node_id": "MDQ6VXNlcjMxMjE0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/312141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matdumsa", "html_url": "https://github.com/matdumsa", "followers_url": "https://api.github.com/users/matdumsa/followers", "following_url": "https://api.github.com/users/matdumsa/following{/other_user}", "gists_url": "https://api.github.com/users/matdumsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/matdumsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matdumsa/subscriptions", "organizations_url": "https://api.github.com/users/matdumsa/orgs", "repos_url": "https://api.github.com/users/matdumsa/repos", "events_url": "https://api.github.com/users/matdumsa/events{/privacy}", "received_events_url": "https://api.github.com/users/matdumsa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200190, "node_id": "MDU6TGFiZWw3OTcyMDAxOTA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/feature", "name": "type/feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-10T13:15:49Z", "updated_at": "2020-07-24T20:25:40Z", "closed_at": "2020-07-24T20:25:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nI wish contributing code to SAM CLI would be easier. I once found a one liner to fix and had a hard-time getting the correct set-up required to build it on my local machine and eventually gave up.\r\n\r\nThe awk-cdk project is now promoting the use of GitPod, a online IDE leveraging containers to make it easy for first time contributors to get started and contribute something to the project. With 1-click, anyone with a GitHub account can launch the project in a pre-configured environment.\r\n\r\n### Proposal\r\n\r\n1. Add configuration for GitPod\r\n1. Modify the DEVELOPMENT_GUIDE to add a button to launch GitPod\r\n\r\n### Additional Details\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2029", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2029/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2029/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2029/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2029", "id": 635899686, "node_id": "MDU6SXNzdWU2MzU4OTk2ODY=", "number": 2029, "title": "sam build - dotnetcore - windows - [Errno 2] No such file or directory", "user": {"login": "wnmendonca", "id": 20113683, "node_id": "MDQ6VXNlcjIwMTEzNjgz", "avatar_url": "https://avatars2.githubusercontent.com/u/20113683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wnmendonca", "html_url": "https://github.com/wnmendonca", "followers_url": "https://api.github.com/users/wnmendonca/followers", "following_url": "https://api.github.com/users/wnmendonca/following{/other_user}", "gists_url": "https://api.github.com/users/wnmendonca/gists{/gist_id}", "starred_url": "https://api.github.com/users/wnmendonca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wnmendonca/subscriptions", "organizations_url": "https://api.github.com/users/wnmendonca/orgs", "repos_url": "https://api.github.com/users/wnmendonca/repos", "events_url": "https://api.github.com/users/wnmendonca/events{/privacy}", "received_events_url": "https://api.github.com/users/wnmendonca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T03:31:00Z", "updated_at": "2020-06-10T15:44:50Z", "closed_at": "2020-06-10T15:44:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\nBuilding a sample Hello World application using aws sam I have the error:\r\n[Errno 2] No such file or directory\r\n\r\n**Steps to reproduce**\r\nOn Windows,\r\n\r\nsam init --runtime dotnetcore2.0\r\nsam build\r\n\r\n**Observed result**\r\n\r\n> Telemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='./src/HelloWorld/'\r\nNo Parameters detected in the template\r\nBuilding function 'HelloWorldFunction'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'DotnetCliPackageBuilder' to support capabilities 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRunning workflow 'DotnetCliPackageBuilder'\r\nRunning DotnetCliPackageBuilder:GlobalToolInstall\r\nInstalling Amazon.Lambda.Tools Global Tool\r\nexecuting dotnet: ['dotnet.exe', 'tool', 'install', '-g', 'Amazon.Lambda.Tools']\r\nDotnetCliPackageBuilder:GlobalToolInstall succeeded\r\nRunning DotnetCliPackageBuilder:RunPackageAction\r\nRunning 'dotnet lambda package' in C:\\Tests\\src\\HelloWorld\r\nexecuting dotnet: ['dotnet.exe', 'lambda', 'package', '--output-package', 'C:\\\\Tests\\\\.aws-sam\\\\build\\\\HelloWorldFunction\\\\HelloWorld.zip']\r\nDotnetCliPackageBuilder:RunPackageAction raised unhandled exception\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\actions.py\", line 83, in execute\r\n    self.os_utils.expand_zip(zipfullpath, self.artifacts_dir)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\utils.py\", line 29, in expand_zip\r\n    ziparchive = zipfile.ZipFile(zipfullpath, \"r\")\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\zipfile.py\", line 1240, in __init__\r\nFileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Tests\\\\.aws-sam\\\\build\\\\HelloWorldFunction\\\\HelloWorld.zip'\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 2710, 'exitReason': 'WorkflowUnknownError', 'exitCode': 1, 'requestId': 'bac70cc6-dd7f-43aa-8803-9ee0d2202fcc', 'installationId': '79b25123-d868-4e49-9d75-a1d14ee970c6', 'sessionId': '5ea7b824-7ba1-45a6-b66c-62d4eb089cb0', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: DotnetCliPackageBuilder:RunPackageAction - [Errno 2] No such file or directory: 'C:\\\\Tests\\\\.aws-sam\\\\build\\\\HelloWorldFunction\\\\HelloWorld.zip'\r\n\r\n**Additional environment details (Ex: Windows, Mac, Amazon Linux etc)**\r\nWindows 10 64 bits\r\nSAM CLI, version 0.52.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2028", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2028/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2028/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2028/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2028", "id": 635364066, "node_id": "MDU6SXNzdWU2MzUzNjQwNjY=", "number": 2028, "title": "Region shows as \"None\" after stack deploys using manual parameters", "user": {"login": "jbesw", "id": 24660852, "node_id": "MDQ6VXNlcjI0NjYwODUy", "avatar_url": "https://avatars0.githubusercontent.com/u/24660852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbesw", "html_url": "https://github.com/jbesw", "followers_url": "https://api.github.com/users/jbesw/followers", "following_url": "https://api.github.com/users/jbesw/following{/other_user}", "gists_url": "https://api.github.com/users/jbesw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbesw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbesw/subscriptions", "organizations_url": "https://api.github.com/users/jbesw/orgs", "repos_url": "https://api.github.com/users/jbesw/repos", "events_url": "https://api.github.com/users/jbesw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbesw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200187, "node_id": "MDU6TGFiZWw3OTcyMDAxODc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/contributors/good-first-issue", "name": "contributors/good-first-issue", "color": "0e8a16", "default": false, "description": null}, {"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": {"login": "prenx4x", "id": 3762112, "node_id": "MDQ6VXNlcjM3NjIxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3762112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prenx4x", "html_url": "https://github.com/prenx4x", "followers_url": "https://api.github.com/users/prenx4x/followers", "following_url": "https://api.github.com/users/prenx4x/following{/other_user}", "gists_url": "https://api.github.com/users/prenx4x/gists{/gist_id}", "starred_url": "https://api.github.com/users/prenx4x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prenx4x/subscriptions", "organizations_url": "https://api.github.com/users/prenx4x/orgs", "repos_url": "https://api.github.com/users/prenx4x/repos", "events_url": "https://api.github.com/users/prenx4x/events{/privacy}", "received_events_url": "https://api.github.com/users/prenx4x/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prenx4x", "id": 3762112, "node_id": "MDQ6VXNlcjM3NjIxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3762112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prenx4x", "html_url": "https://github.com/prenx4x", "followers_url": "https://api.github.com/users/prenx4x/followers", "following_url": "https://api.github.com/users/prenx4x/following{/other_user}", "gists_url": "https://api.github.com/users/prenx4x/gists{/gist_id}", "starred_url": "https://api.github.com/users/prenx4x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prenx4x/subscriptions", "organizations_url": "https://api.github.com/users/prenx4x/orgs", "repos_url": "https://api.github.com/users/prenx4x/repos", "events_url": "https://api.github.com/users/prenx4x/events{/privacy}", "received_events_url": "https://api.github.com/users/prenx4x/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-06-09T11:55:25Z", "updated_at": "2020-08-14T22:43:41Z", "closed_at": "2020-08-14T22:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nBriefly describe the bug you are facing.\r\n\r\nIn the Cloud9 IDE, if you deploy using \"sam deploy\" with manual parameters, and do not supply a region in the command line, it uses the correct region but the output message shows \"None\". \r\n\r\nPartially described in issue https://github.com/awslabs/aws-sam-cli/issues/1704.\r\n\r\n### Steps to reproduce\r\n\r\n1. Open Cloud9.\r\n2. Deploy a stack with manual parameters, e.g.:\r\nsam deploy --template-file packaged.yaml --stack-name ride-times --capabilities CAPABILITY_IAM\r\n3. See output message (\"Successfully created/updated stack - ride-times in None\").\r\n\r\nThe stack deploys implicitly to the correct region (where the Cloud9 instance is located) but the output message is misleading/wrong.\r\n\r\n### Observed result\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\njbeswick@amazon.com:~/environment/theme-park-backend/1-app-deploy/ride-controller (master) $ sam deploy --template-file packaged.yaml --stack-name ride-times --capabilities CAPABILITY_IAM\r\n\r\n        Deploying with following values\r\n        ===============================\r\n        Stack name                 : ride-times\r\n        Region                     : None\r\n        Confirm changeset          : False\r\n        Deployment s3 bucket       : None\r\n        Capabilities               : [\"CAPABILITY_IAM\"]\r\n        Parameter overrides        : {}\r\n\r\nInitiating deployment\r\n\r\n### Expected result\r\n\r\nIt should display the region code where the stack was deployed.\r\n\r\nDescribe what you expected.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Cloud9\r\n2. `sam --version`: SAM CLI, version 0.38.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2027", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2027/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2027/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2027/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2027", "id": 634903765, "node_id": "MDU6SXNzdWU2MzQ5MDM3NjU=", "number": 2027, "title": "StateMachine DefinitionUri doesn't accept local files", "user": {"login": "roubaeli", "id": 5748167, "node_id": "MDQ6VXNlcjU3NDgxNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5748167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roubaeli", "html_url": "https://github.com/roubaeli", "followers_url": "https://api.github.com/users/roubaeli/followers", "following_url": "https://api.github.com/users/roubaeli/following{/other_user}", "gists_url": "https://api.github.com/users/roubaeli/gists{/gist_id}", "starred_url": "https://api.github.com/users/roubaeli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roubaeli/subscriptions", "organizations_url": "https://api.github.com/users/roubaeli/orgs", "repos_url": "https://api.github.com/users/roubaeli/repos", "events_url": "https://api.github.com/users/roubaeli/events{/privacy}", "received_events_url": "https://api.github.com/users/roubaeli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-08T15:05:25Z", "updated_at": "2020-06-09T20:57:59Z", "closed_at": "2020-06-09T20:57:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\n\r\nBased on the [official documentation](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html) the description of DefinitionUri is as follows:\r\n```\r\nDefinitionUri\r\nThe Amazon S3 URI or local file path of the state machine definition written in Amazon States Language.\r\n\r\nIf a local file path is provided, the template must go through the workflow that includes the sam deploy or sam package command, in order for the definition to be transformed properly.\r\n\r\nOne of Definition or DefinitionUri must be provided.\r\n\r\nType: String | S3Location\r\n```\r\n\r\nAn example is even included:\r\n```\r\nMySampleStateMachine:\r\n  Type: AWS::Serverless::StateMachine\r\n  Properties:\r\n    DefinitionUri: statemachine/my_state_machine.asl.json\r\n    Role: arn:aws:iam::123456123456:role/service-role/my-sample-role\r\n    DefinitionSubstitutions:\r\n      MyFunctionArn: !GetAtt MyFunction.Arn\r\n      MyDDBTable: !Ref TransactionTable\r\n```\r\n\r\nHowever, local files do not seem to be actually supported (by brief look at the feature commits) and using it results in `Resource is invalid. 'DefinitionUri' is not a valid S3 Uri of the form 's3://bucket/key' with optional versionId query parameter.` error message.\r\n\r\nHaving the StateMachine definition in a separate local file (possibly JSON definition and YML template) would be most useful, unlike linking separately uploaded S3 file.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Use `AWS::Serverless::StateMachine` resource.\r\n2. Define a local path as it's `DefinitionUri`.\r\n\r\n**Observed result:**\r\nResource is invalid. 'DefinitionUri' is not a valid S3 Uri of the form 's3://bucket/key' with optional versionId query parameter.\r\n\r\n**Expected result:**\r\nSuccessful deployment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2026", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2026/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2026/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2026/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2026", "id": 633816371, "node_id": "MDU6SXNzdWU2MzM4MTYzNzE=", "number": 2026, "title": "Layers is being checked during build for custom macro and failing", "user": {"login": "jbpratt", "id": 29494941, "node_id": "MDQ6VXNlcjI5NDk0OTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/29494941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbpratt", "html_url": "https://github.com/jbpratt", "followers_url": "https://api.github.com/users/jbpratt/followers", "following_url": "https://api.github.com/users/jbpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jbpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbpratt/subscriptions", "organizations_url": "https://api.github.com/users/jbpratt/orgs", "repos_url": "https://api.github.com/users/jbpratt/repos", "events_url": "https://api.github.com/users/jbpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jbpratt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-07T22:18:32Z", "updated_at": "2020-07-05T13:51:32Z", "closed_at": "2020-06-10T15:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Opened a separate issue from my previous comment. \r\n```yaml\r\nTransform:\r\n  - \"AWS::Serverless-2016-10-31\"\r\n  - PipLayer\r\nResources:\r\n  DepLayer:\r\n    Type: \"AWS::Lambda::PipLayer\"\r\n    Properties:\r\n      BucketName: test\r\n      CompatibleRuntimes:\r\n        - python3.8\r\n      LayerName: camelcase\r\n      Package:\r\n        name: camelcase\r\n        version: \"0.2\"\r\n  Function:\r\n    Type: \"AWS::Serverless::Function\"\r\n    Properties:\r\n      CodeUri: src/\r\n      Handler: app.handler\r\n      Layers:\r\n        - !Ref DepLayer\r\n```\r\n`Error: DepLayer is an Invalid Layer Arn.`\r\nI have a custom macro for provisioning Layers from Pip packages, the above code fails to build. I'm not really sure of what the best behavior, if any, for SAM would be here.\r\n\r\n`SAM CLI, version 0.43.0`\r\n\r\nEdit:\r\nhttps://github.com/jbpratt78/aws-cfn-macros/tree/master/pip_lambda_layer\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2025", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2025/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2025/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2025/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2025", "id": 633697799, "node_id": "MDU6SXNzdWU2MzM2OTc3OTk=", "number": 2025, "title": "Include latest runtimes on sam-cli 0.52.0", "user": {"login": "hardtail29", "id": 4072412, "node_id": "MDQ6VXNlcjQwNzI0MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4072412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hardtail29", "html_url": "https://github.com/hardtail29", "followers_url": "https://api.github.com/users/hardtail29/followers", "following_url": "https://api.github.com/users/hardtail29/following{/other_user}", "gists_url": "https://api.github.com/users/hardtail29/gists{/gist_id}", "starred_url": "https://api.github.com/users/hardtail29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hardtail29/subscriptions", "organizations_url": "https://api.github.com/users/hardtail29/orgs", "repos_url": "https://api.github.com/users/hardtail29/repos", "events_url": "https://api.github.com/users/hardtail29/events{/privacy}", "received_events_url": "https://api.github.com/users/hardtail29/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-07T19:38:19Z", "updated_at": "2020-06-08T20:16:53Z", "closed_at": "2020-06-08T20:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is in followup to \"Include support to Nodejs12.x on CLI build #1564\"\r\n\r\n### running sam init the runtimes included do not include Nodejs12.x.\r\nWhich runtime would you like to use?\r\n\t1 - nodejs12.x\r\n\t2 - python3.8\r\n\t3 - ruby2.7\r\n\t4 - go1.x\r\n\t5 - java11\r\n\t6 - dotnetcore3.1\r\n\t7 - nodejs10.x\r\n\t8 - python3.7\r\n\t9 - python3.6\r\n\t10 - python2.7\r\n\t11 - ruby2.5\r\n\t12 - java8\r\n\t13 - dotnetcore2.1\r\n\r\nSpecifically, nodejs12.x is missing.\r\n\r\nThis is on sam-cli 0.52.0 OS X.  \r\n\r\nThis was reported to have been fixed in 0.40.0 but as you can see nodejs12.x is missing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2022", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2022/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2022/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2022/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2022", "id": 630194854, "node_id": "MDU6SXNzdWU2MzAxOTQ4NTQ=", "number": 2022, "title": "Include the stack name in the State Machine name", "user": {"login": "ck3mp", "id": 37331850, "node_id": "MDQ6VXNlcjM3MzMxODUw", "avatar_url": "https://avatars3.githubusercontent.com/u/37331850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ck3mp", "html_url": "https://github.com/ck3mp", "followers_url": "https://api.github.com/users/ck3mp/followers", "following_url": "https://api.github.com/users/ck3mp/following{/other_user}", "gists_url": "https://api.github.com/users/ck3mp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ck3mp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ck3mp/subscriptions", "organizations_url": "https://api.github.com/users/ck3mp/orgs", "repos_url": "https://api.github.com/users/ck3mp/repos", "events_url": "https://api.github.com/users/ck3mp/events{/privacy}", "received_events_url": "https://api.github.com/users/ck3mp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T17:42:06Z", "updated_at": "2020-06-03T17:54:39Z", "closed_at": "2020-06-03T17:54:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe your idea/feature/enhancement\r\n\r\nWhen publishing a State Machine using AWS SAM it would be nice if it named them as it does with Lambda functions.\r\n\r\nE.g. In a stack named \"StackName\"\r\n\r\nLambda function \"FunctionName\" is named as such: StackName-FunctionName-B51O6KYA24AY\r\nState Machine is named: StateMachine-3ypO3dryEmXE\r\n\r\nI would like to avoid using the \"name:\" option in template.yaml if possible and have SAM do it automatically as it does with Lambda.\r\n\r\n### Proposal\r\n\r\nAn improvement to the new Serverless::StateMachine option.\r\n\r\n### Additional Details\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2019", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2019/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2019/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2019/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2019", "id": 629230317, "node_id": "MDU6SXNzdWU2MjkyMzAzMTc=", "number": 2019, "title": "sam deploy does not detect changes in state machine definitions stored in S3 bucket", "user": {"login": "zgoda", "id": 141999, "node_id": "MDQ6VXNlcjE0MTk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/141999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zgoda", "html_url": "https://github.com/zgoda", "followers_url": "https://api.github.com/users/zgoda/followers", "following_url": "https://api.github.com/users/zgoda/following{/other_user}", "gists_url": "https://api.github.com/users/zgoda/gists{/gist_id}", "starred_url": "https://api.github.com/users/zgoda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zgoda/subscriptions", "organizations_url": "https://api.github.com/users/zgoda/orgs", "repos_url": "https://api.github.com/users/zgoda/repos", "events_url": "https://api.github.com/users/zgoda/events{/privacy}", "received_events_url": "https://api.github.com/users/zgoda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-02T14:01:14Z", "updated_at": "2020-06-03T14:58:35Z", "closed_at": "2020-06-03T14:58:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nSince May 2020 AWS StepFunctions state machine definitions can be stored in S3 bucket instead of embedding them in template. Changes to definitions stored in S3 bucket are not detected and `sam deploy` rejects stack updates because \"there was no change to stack\".\r\n\r\n### Steps to reproduce\r\n\r\nCreate AWS StepFunctions state machine definition in JSON file\r\nDefine state machine in template, specifying `DefinitionS3Location`\r\nUpload state machine definition to S3\r\nRun deployment\r\nChange state machine definition\r\nUpload changed state machine definition\r\nRun deployment\r\n\r\n### Observed result\r\n\r\n`Error: No changes to deploy. Stack mystack is up to date`.\r\n\r\nState machine is not updated.\r\n\r\n### Expected result\r\n\r\nState machine is updated with new definition.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Linux Ubuntu 20.04\r\n2. `sam --version`: `SAM CLI, version 0.52.0`\r\n\r\n`Add --debug flag to command you are running`\r\n\r\nRelevant lines:\r\n\r\n```\r\nProperty DefinitionS3Location of MyStateMachine resource is not a URL\r\nFile with same data is already exists at <somehash>.template. Skipping upload\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2018", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2018/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2018/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2018/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2018", "id": 629060696, "node_id": "MDU6SXNzdWU2MjkwNjA2OTY=", "number": 2018, "title": "sam deploy incorrectly displays parameter override when value has a space in it", "user": {"login": "Aleksandr-Filichkin", "id": 10498901, "node_id": "MDQ6VXNlcjEwNDk4OTAx", "avatar_url": "https://avatars0.githubusercontent.com/u/10498901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aleksandr-Filichkin", "html_url": "https://github.com/Aleksandr-Filichkin", "followers_url": "https://api.github.com/users/Aleksandr-Filichkin/followers", "following_url": "https://api.github.com/users/Aleksandr-Filichkin/following{/other_user}", "gists_url": "https://api.github.com/users/Aleksandr-Filichkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aleksandr-Filichkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aleksandr-Filichkin/subscriptions", "organizations_url": "https://api.github.com/users/Aleksandr-Filichkin/orgs", "repos_url": "https://api.github.com/users/Aleksandr-Filichkin/repos", "events_url": "https://api.github.com/users/Aleksandr-Filichkin/events{/privacy}", "received_events_url": "https://api.github.com/users/Aleksandr-Filichkin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200202, "node_id": "MDU6TGFiZWw3OTcyMDAyMDI=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/deploy", "name": "area/deploy", "color": "1d76db", "default": false, "description": null}, {"id": 797200198, "node_id": "MDU6TGFiZWw3OTcyMDAxOTg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/bug", "name": "type/bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "wchengru", "id": 14915548, "node_id": "MDQ6VXNlcjE0OTE1NTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/14915548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchengru", "html_url": "https://github.com/wchengru", "followers_url": "https://api.github.com/users/wchengru/followers", "following_url": "https://api.github.com/users/wchengru/following{/other_user}", "gists_url": "https://api.github.com/users/wchengru/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchengru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchengru/subscriptions", "organizations_url": "https://api.github.com/users/wchengru/orgs", "repos_url": "https://api.github.com/users/wchengru/repos", "events_url": "https://api.github.com/users/wchengru/events{/privacy}", "received_events_url": "https://api.github.com/users/wchengru/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wchengru", "id": 14915548, "node_id": "MDQ6VXNlcjE0OTE1NTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/14915548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchengru", "html_url": "https://github.com/wchengru", "followers_url": "https://api.github.com/users/wchengru/followers", "following_url": "https://api.github.com/users/wchengru/following{/other_user}", "gists_url": "https://api.github.com/users/wchengru/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchengru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchengru/subscriptions", "organizations_url": "https://api.github.com/users/wchengru/orgs", "repos_url": "https://api.github.com/users/wchengru/repos", "events_url": "https://api.github.com/users/wchengru/events{/privacy}", "received_events_url": "https://api.github.com/users/wchengru/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2020-06-02T09:44:53Z", "updated_at": "2020-08-14T22:46:10Z", "closed_at": "2020-08-14T22:46:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "sam version is 0.52.0\r\nCannot send parameter with whitespace in value\r\n\r\n>  sam deploy --template-file sam_output.yaml --stack-name test --parameter-overrides \"PARAM__KEY=PARAM VALUE\"\r\n\r\nbut in log I see\r\n\r\n> Parameter overrides        : {''PARAM__KEY': 'PARAM'}\r\n\r\nLooks like it was not fixed for https://github.com/awslabs/aws-sam-cli/issues/1652", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2017", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2017/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2017/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2017/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2017", "id": 628637463, "node_id": "MDU6SXNzdWU2Mjg2Mzc0NjM=", "number": 2017, "title": "Unknown CloudFormation resource type: AWS::Serverless::StateMachine", "user": {"login": "TannerIsBender", "id": 10541121, "node_id": "MDQ6VXNlcjEwNTQxMTIx", "avatar_url": "https://avatars2.githubusercontent.com/u/10541121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TannerIsBender", "html_url": "https://github.com/TannerIsBender", "followers_url": "https://api.github.com/users/TannerIsBender/followers", "following_url": "https://api.github.com/users/TannerIsBender/following{/other_user}", "gists_url": "https://api.github.com/users/TannerIsBender/gists{/gist_id}", "starred_url": "https://api.github.com/users/TannerIsBender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TannerIsBender/subscriptions", "organizations_url": "https://api.github.com/users/TannerIsBender/orgs", "repos_url": "https://api.github.com/users/TannerIsBender/repos", "events_url": "https://api.github.com/users/TannerIsBender/events{/privacy}", "received_events_url": "https://api.github.com/users/TannerIsBender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-01T18:25:53Z", "updated_at": "2020-06-01T20:39:44Z", "closed_at": "2020-06-01T20:38:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI saw this article and tried to create an AWS SAM Step function/State machine, but SAM cannot find the AWS::Serverless::StateMachine resource type. SAM is working for me besides this resource type. I was able to deploy some Lambda functions within a SAM template using sam build and sam deploy. This resource type is just giving me problems.\r\n\r\n### Steps to reproduce\r\nI followed this\r\nhttps://aws.amazon.com/blogs/compute/simplifying-application-orchestration-with-aws-step-functions-and-aws-sam/\r\n\r\nI have SAM CLI 0.52.0.\r\n64 bit OS - Windows 10 Enterprise version 1809 \r\n\r\nhttps://gyazo.com/2997af69c8527198e346f20256ae4a1d\r\n\r\n![image](https://user-images.githubusercontent.com/10541121/83440523-ed33ca80-a3f9-11ea-9f7a-8d87333efddf.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2016", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2016/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2016/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2016/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2016", "id": 627924643, "node_id": "MDU6SXNzdWU2Mjc5MjQ2NDM=", "number": 2016, "title": "Local Invoke with referenced layer (zip file) doesn't work", "user": {"login": "Shamshiel", "id": 13088318, "node_id": "MDQ6VXNlcjEzMDg4MzE4", "avatar_url": "https://avatars2.githubusercontent.com/u/13088318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shamshiel", "html_url": "https://github.com/Shamshiel", "followers_url": "https://api.github.com/users/Shamshiel/followers", "following_url": "https://api.github.com/users/Shamshiel/following{/other_user}", "gists_url": "https://api.github.com/users/Shamshiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shamshiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shamshiel/subscriptions", "organizations_url": "https://api.github.com/users/Shamshiel/orgs", "repos_url": "https://api.github.com/users/Shamshiel/repos", "events_url": "https://api.github.com/users/Shamshiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Shamshiel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-31T09:15:39Z", "updated_at": "2020-06-01T15:11:00Z", "closed_at": "2020-06-01T15:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nA local invoke of the simple _hello world_ (with axios enabled) lambda (nodesj) fails if the node_modules are in a lambda layer. \r\n\r\n#### Background\r\nI came across this problem after I tried to locally invoke a lambda function with a template.yml that was synthesized with the AWS CDK and the option `--no-staging`. The code works fine deployed to AWS but not with local invoke. It only works locally if there are no modules referenced in the lambda.\r\n\r\n### Steps to reproduce\r\n\r\n1. `sam init` (nodejs12.x / Hello World Example)\r\n2. modify the hello-world/app.js to use axios (remove the comments)\r\n3. `npm install` in the hello-world directory\r\n4. create a nodejs folder, move the node_modules folder in it\r\n5. zip the nodejs folder (for example as nodejs.zip)\r\n6. remove the node_modules folder in the hello-world directory\r\n7. modify the template.yml (see below)\r\n8. `sam local invoke -d 5858`\r\n\r\n#### template.yml (partial)\r\n```\r\nResources:\r\n  HelloWorldFunctionLayer:\r\n    Type: AWS::Lambda::LayerVersion\r\n    Properties:\r\n      CompatibleRuntimes:\r\n        - nodejs12.x\r\n      ContentUri: ..\\nodejs.zip\r\n      Description: My layer\r\n      LayerName: my-layer\r\n      LicenseInfo: MIT\r\n\r\n  HelloWorldFunction:\r\n    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n    Properties:\r\n      CodeUri: hello-world/\r\n      Handler: app.lambdaHandler\r\n      Runtime: nodejs12.x\r\n      Layers:\r\n        - !Ref HelloWorldFunctionLayer\r\n      Events:\r\n        HelloWorld:\r\n          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\r\n          Properties:\r\n            Path: /hello\r\n            Method: get\r\n```\r\n\r\n### Observed result\r\n\r\nThe local invoke fails because the axios module cannot be found.\r\n\r\n```\r\nPS C:\\Users\\<USER>\\Documents\\Repository\\Sandbox\\sam-app> sam local invoke -d 5858 --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal invoke command is called\r\nNo Parameters detected in the template\r\n3 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='hello-world/'\r\nFound one Lambda function with name 'HelloWorldFunction'\r\nInvoking app.lambdaHandler (nodejs12.x)\r\nNo environment variables found for function 'HelloWorldFunction'\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=C:\\Users\\<USER>\\Documents\\Repository\\Sandbox\\sam-app, CodeUri=hello-world/\r\nResolved absolute path to code is C:\\Users\\<USER>\\Documents\\Repository\\Sandbox\\sam-app\\hello-world\r\nCode C:\\Users\\<USER>\\Documents\\Repository\\Sandbox\\sam-app\\hello-world is not a zip/jar file\r\nHelloWorldFunctionLayer is a local Layer in the template\r\nResolving code path. Cwd=C:\\Users\\<USER>\\Documents\\Repository\\Sandbox\\sam-app, CodeUri=.\r\nBuilding image...\r\nRequested to skip pulling images ...\r\n\r\nMounting C:\\Users\\<USER>\\Documents\\Repository\\Sandbox\\sam-app\\hello-world as /var/task:ro,delegated inside runtime container\r\nSetting up SIGTERM interrupt handler\r\nDebugger listening on ws://0.0.0.0:5859/f1d77abb-e746-4c0e-b881-6b90fc2b280b\r\nFor help, see: https://nodejs.org/en/docs/inspector\r\nDebugger attached.\r\n2020-05-31T08:39:51.119Z        undefined       ERROR   Uncaught Exception      {\"errorType\":\"Runtime.ImportModuleError\",\"errorMessage\":\"Error: Cannot find module 'axios'\\nRequire stack:\\n- /var/task/app.js\\n- /var/runtime/UserFunction.js\\n- /var/runtime/index.js\",\"stack\":[\"Runtime.ImportModuleError: Error: Cannot find module 'axios'\",\"Require stack:\",\"- /var/task/app.js\",\"- /var/runtime/UserFunction.js\",\"- /var/runtime/index.js\",\"    at _loadUserApp (/var/runtime/UserFunction.js:100:13)\",\"    at Object.load (/var/runtime/UserFunction.js:140:17)\",\"    at Object.<anonymous> (/var/runtime/index.js:43:30)\",\"    at Module._compile (internal/modules/cjs/loader.js:1130:14)\",\"    at Object..js (internal/modules/cjs/loader.js:1153:10)\",\"    at Module.load (internal/modules/cjs/loader.js:977:32)\",\"    at Function._load (internal/modules/cjs/loader.js:877:14)\",\"    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:74:12)\",\"    at internal/main/run_main_module.js:18:47\"]}\r\nSTART RequestId: c809e15e-a73e-1b05-b668-3d652ab6f14a Version: $LATEST\r\nEND RequestId: c809e15e-a73e-1b05-b668-3d652ab6f14a\r\nREPORT RequestId: c809e15e-a73e-1b05-b668-3d652ab6f14a     Init Duration: 67025.69 ms      Duration: 1.75 ms       Billed Duration: 100 ms Memory Size: 128 MB     Max Memory Used: 42 MB  \r\n\r\n{\"errorType\":\"Runtime.ImportModuleError\",\"errorMessage\":\"Error: Cannot find module 'axios'\\nRequire stack:\\n- /var/task/app.js\\n- /var/runtime/UserFunction.js\\n- /var/runtime/index.js\"}\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam local invoke', 'duration': 69491, 'exitReason': 'success', 'exitCode': 0, 'requestId': '81f473bf-cb39-4423-b972-f73b0aec569b', 'installationId': '086fe330-030a-4f34-98ef-dd775cf9c614', 'sessionId': 'd19b019c-7a39-41e1-a4f3-25e7b19bd721', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\n```\r\nShouldn't there be a `Decompressing nodejs.zip` log entry somewhere in this output?\r\n\r\n### Expected result\r\n\r\nI expected the local invoke to use my zipped lambda layer.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Microsoft Windows 10 Pro 10.0.18363\r\n2. `sam --version`: SAM CLI, version 0.52.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2015", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2015/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2015/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2015/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2015", "id": 627576499, "node_id": "MDU6SXNzdWU2Mjc1NzY0OTk=", "number": 2015, "title": "Save save_to_config to samconfig.toml", "user": {"login": "f-w", "id": 12823994, "node_id": "MDQ6VXNlcjEyODIzOTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/12823994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f-w", "html_url": "https://github.com/f-w", "followers_url": "https://api.github.com/users/f-w/followers", "following_url": "https://api.github.com/users/f-w/following{/other_user}", "gists_url": "https://api.github.com/users/f-w/gists{/gist_id}", "starred_url": "https://api.github.com/users/f-w/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f-w/subscriptions", "organizations_url": "https://api.github.com/users/f-w/orgs", "repos_url": "https://api.github.com/users/f-w/repos", "events_url": "https://api.github.com/users/f-w/events{/privacy}", "received_events_url": "https://api.github.com/users/f-w/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}, {"id": 797200190, "node_id": "MDU6TGFiZWw3OTcyMDAxOTA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/feature", "name": "type/feature", "color": "fbca04", "default": false, "description": null}, {"id": 797200182, "node_id": "MDU6TGFiZWw3OTcyMDAxODI=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/ux", "name": "type/ux", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-29T22:22:42Z", "updated_at": "2020-07-18T00:10:20Z", "closed_at": "2020-07-18T00:10:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nI wish SAM CLI would save *save_to_config* to *samconfig.toml* so that the answer to *Save arguments to samconfig.toml* can be defaulted to the saved one rather than hard-coded *True* in guided deploy.\r\n\r\nReason is that *samconfig.toml* is usually version controlled, containing only common shareable configs. Per-invocation variations shouldn't be saved in it. This is achievable had *save_to_config* been set to _false_ in *samconfig.toml* and sam defaults to it.\r\n\r\n### Proposal\r\n\r\nI think this can be easily implemented by modifying [guided_context.py](https://github.com/awslabs/aws-sam-cli/blob/develop/samcli/commands/deploy/guided_context.py) and possibly [guided_config.py](https://github.com/awslabs/aws-sam-cli/blob/develop/samcli/commands/deploy/guided_config.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2014", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2014/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2014/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2014/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2014", "id": 627425727, "node_id": "MDU6SXNzdWU2Mjc0MjU3Mjc=", "number": 2014, "title": "sam build can't resolve dependencies - tensorflow", "user": {"login": "pasppro", "id": 865294, "node_id": "MDQ6VXNlcjg2NTI5NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/865294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pasppro", "html_url": "https://github.com/pasppro", "followers_url": "https://api.github.com/users/pasppro/followers", "following_url": "https://api.github.com/users/pasppro/following{/other_user}", "gists_url": "https://api.github.com/users/pasppro/gists{/gist_id}", "starred_url": "https://api.github.com/users/pasppro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pasppro/subscriptions", "organizations_url": "https://api.github.com/users/pasppro/orgs", "repos_url": "https://api.github.com/users/pasppro/repos", "events_url": "https://api.github.com/users/pasppro/events{/privacy}", "received_events_url": "https://api.github.com/users/pasppro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-05-29T17:32:37Z", "updated_at": "2020-07-27T19:01:28Z", "closed_at": "2020-07-21T21:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Description\r\n\r\nError when building projects containing tensorflow on a Mac:\r\n\r\nError: PythonPipBuilder:ResolveDependencies - {tensorflow==2.2.0(wheel), grpcio==1.29.0(wheel)}\r\n\r\nThis could be the same as Issue [#1840](https://github.com/awslabs/aws-sam-cli/issues/1840) but I'm not using PyCharm - just the command line. \r\n\r\n### Steps to reproduce\r\n(Assumes python 3.6 is already installed)\r\n\r\n1. sam init (Project sam-bld-err, choose python 3.6 runtime and Hello World template)\r\n2. Create a python virtual environment within the project\r\n    cd sam-bld-err\r\n     virtualenv -p /Library/Frameworks/Python.framework/Versions/3.6/bin/python3.6  venv_be\r\n     (Adjust path to python 3.6 as needed)\r\n3. Activate virtual env and install tensorflow\r\n     source ./venv_be/bin/activate\r\n     pip install tensorflow==2.2.0\r\n4. Update project requirements\r\n     pip freeze > ./hello_world/requirements.txt\r\n5. Build the project\r\n     sam build or sam build --use-container   **(Same results for each)**\r\n\r\n### Observed result\r\n(Sorry - Lots of debug output!)\r\n\r\nsam build --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='hello_world/'\r\nNo Parameters detected in the template\r\nBuilding function 'HelloWorldFunction'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /Users/philsweeney/Documents/AWSProjects/sam-bld-error/hello_world/requirements.txt --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z\r\nFull dependency closure: {tensorflow==2.2.0(wheel), markdown==3.2.2(wheel), setuptools==47.1.1(wheel), tensorboard==2.2.2(wheel), tensorboard-plugin-wit==1.6.0.post3(wheel), scipy==1.4.1(wheel), chardet==3.0.4(wheel), google-auth-oauthlib==0.4.1(wheel), h5py==2.10.0(wheel), opt-einsum==3.2.1(wheel), certifi==2020.4.5.1(wheel), oauthlib==3.1.0(wheel), protobuf==3.12.2(wheel), google-auth==1.16.0(wheel), zipp==3.1.0(wheel), six==1.15.0(wheel), tensorflow-estimator==2.2.0(wheel), importlib-metadata==1.6.0(wheel), termcolor==1.1.0(sdist), gast==0.3.3(wheel), wrapt==1.12.1(sdist), cachetools==4.1.0(wheel), grpcio==1.29.0(wheel), pyasn1==0.4.8(wheel), google-pasta==0.2.0(wheel), requests-oauthlib==1.3.0(wheel), urllib3==1.25.9(wheel), pyasn1-modules==0.2.8(wheel), absl-py==0.9.0(sdist), astunparse==1.6.3(wheel), keras-preprocessing==1.1.2(wheel), idna==2.9(wheel), requests==2.23.0(wheel), rsa==4.0(wheel), wheel==0.34.2(wheel), numpy==1.18.4(wheel), werkzeug==1.0.1(wheel)}\r\ninitial compatible: {markdown==3.2.2(wheel), setuptools==47.1.1(wheel), tensorboard==2.2.2(wheel), tensorboard-plugin-wit==1.6.0.post3(wheel), chardet==3.0.4(wheel), google-auth-oauthlib==0.4.1(wheel), opt-einsum==3.2.1(wheel), certifi==2020.4.5.1(wheel), oauthlib==3.1.0(wheel), google-auth==1.16.0(wheel), zipp==3.1.0(wheel), six==1.15.0(wheel), tensorflow-estimator==2.2.0(wheel), importlib-metadata==1.6.0(wheel), gast==0.3.3(wheel), cachetools==4.1.0(wheel), pyasn1==0.4.8(wheel), google-pasta==0.2.0(wheel), requests-oauthlib==1.3.0(wheel), urllib3==1.25.9(wheel), pyasn1-modules==0.2.8(wheel), astunparse==1.6.3(wheel), keras-preprocessing==1.1.2(wheel), idna==2.9(wheel), requests==2.23.0(wheel), rsa==4.0(wheel), wheel==0.34.2(wheel), werkzeug==1.0.1(wheel)}\r\ninitial incompatible: {protobuf==3.12.2(wheel), tensorflow==2.2.0(wheel), termcolor==1.1.0(sdist), wrapt==1.12.1(sdist), numpy==1.18.4(wheel), grpcio==1.29.0(wheel), absl-py==0.9.0(sdist), scipy==1.4.1(wheel), h5py==2.10.0(wheel)}\r\nDownloading missing wheels: {tensorflow==2.2.0(wheel), termcolor==1.1.0(sdist), absl-py==0.9.0(sdist), h5py==2.10.0(wheel), protobuf==3.12.2(wheel), wrapt==1.12.1(sdist), numpy==1.18.4(wheel), grpcio==1.29.0(wheel), scipy==1.4.1(wheel)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z tensorflow==2.2.0\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z termcolor==1.1.0\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z absl-py==0.9.0\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z h5py==2.10.0\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z protobuf==3.12.2\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z wrapt==1.12.1\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z numpy==1.18.4\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z grpcio==1.29.0\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp36m --dest /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z scipy==1.4.1\r\ncompatible wheels after second download pass: {markdown==3.2.2(wheel), setuptools==47.1.1(wheel), tensorboard==2.2.2(wheel), tensorboard-plugin-wit==1.6.0.post3(wheel), scipy==1.4.1(wheel), chardet==3.0.4(wheel), google-auth-oauthlib==0.4.1(wheel), h5py==2.10.0(wheel), opt-einsum==3.2.1(wheel), certifi==2020.4.5.1(wheel), oauthlib==3.1.0(wheel), protobuf==3.12.2(wheel), google-auth==1.16.0(wheel), zipp==3.1.0(wheel), six==1.15.0(wheel), tensorflow-estimator==2.2.0(wheel), importlib-metadata==1.6.0(wheel), gast==0.3.3(wheel), cachetools==4.1.0(wheel), pyasn1==0.4.8(wheel), google-pasta==0.2.0(wheel), requests-oauthlib==1.3.0(wheel), urllib3==1.25.9(wheel), pyasn1-modules==0.2.8(wheel), astunparse==1.6.3(wheel), keras-preprocessing==1.1.2(wheel), idna==2.9(wheel), requests==2.23.0(wheel), rsa==4.0(wheel), wheel==0.34.2(wheel), numpy==1.18.4(wheel), werkzeug==1.0.1(wheel)}\r\nBuild missing wheels from sdists (C compiling True): {termcolor==1.1.0(sdist), wrapt==1.12.1(sdist), absl-py==0.9.0(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z/termcolor-1.1.0.tar.gz\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z/wrapt-1.12.1.tar.gz\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z/absl-py-0.9.0.tar.gz\r\ncompatible after building wheels (no C compiling): {markdown==3.2.2(wheel), setuptools==47.1.1(wheel), tensorboard==2.2.2(wheel), tensorboard-plugin-wit==1.6.0.post3(wheel), scipy==1.4.1(wheel), chardet==3.0.4(wheel), google-auth-oauthlib==0.4.1(wheel), h5py==2.10.0(wheel), opt-einsum==3.2.1(wheel), certifi==2020.4.5.1(wheel), oauthlib==3.1.0(wheel), protobuf==3.12.2(wheel), google-auth==1.16.0(wheel), zipp==3.1.0(wheel), six==1.15.0(wheel), tensorflow-estimator==2.2.0(wheel), importlib-metadata==1.6.0(wheel), termcolor==1.1.0(wheel), gast==0.3.3(wheel), cachetools==4.1.0(wheel), pyasn1==0.4.8(wheel), google-pasta==0.2.0(wheel), requests-oauthlib==1.3.0(wheel), urllib3==1.25.9(wheel), pyasn1-modules==0.2.8(wheel), absl-py==0.9.0(wheel), astunparse==1.6.3(wheel), keras-preprocessing==1.1.2(wheel), idna==2.9(wheel), requests==2.23.0(wheel), rsa==4.0(wheel), wheel==0.34.2(wheel), numpy==1.18.4(wheel), werkzeug==1.0.1(wheel)}\r\nBuild missing wheels from sdists (C compiling False): {wrapt==1.12.1(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z /var/folders/s5/_787jljn6l14fhg2w4wn4d_w0000gn/T/tmplzw2zx5z/wrapt-1.12.1.tar.gz\r\ncompatible after building wheels (C compiling): {markdown==3.2.2(wheel), setuptools==47.1.1(wheel), tensorboard==2.2.2(wheel), tensorboard-plugin-wit==1.6.0.post3(wheel), scipy==1.4.1(wheel), chardet==3.0.4(wheel), google-auth-oauthlib==0.4.1(wheel), h5py==2.10.0(wheel), opt-einsum==3.2.1(wheel), certifi==2020.4.5.1(wheel), oauthlib==3.1.0(wheel), protobuf==3.12.2(wheel), google-auth==1.16.0(wheel), zipp==3.1.0(wheel), six==1.15.0(wheel), tensorflow-estimator==2.2.0(wheel), importlib-metadata==1.6.0(wheel), termcolor==1.1.0(wheel), gast==0.3.3(wheel), wrapt==1.12.1(wheel), cachetools==4.1.0(wheel), pyasn1==0.4.8(wheel), google-pasta==0.2.0(wheel), requests-oauthlib==1.3.0(wheel), urllib3==1.25.9(wheel), pyasn1-modules==0.2.8(wheel), absl-py==0.9.0(wheel), astunparse==1.6.3(wheel), keras-preprocessing==1.1.2(wheel), idna==2.9(wheel), requests==2.23.0(wheel), rsa==4.0(wheel), wheel==0.34.2(wheel), numpy==1.18.4(wheel), werkzeug==1.0.1(wheel)}\r\nFinal compatible: {markdown==3.2.2(wheel), setuptools==47.1.1(wheel), tensorboard==2.2.2(wheel), tensorboard-plugin-wit==1.6.0.post3(wheel), scipy==1.4.1(wheel), chardet==3.0.4(wheel), google-auth-oauthlib==0.4.1(wheel), h5py==2.10.0(wheel), opt-einsum==3.2.1(wheel), certifi==2020.4.5.1(wheel), oauthlib==3.1.0(wheel), protobuf==3.12.2(wheel), google-auth==1.16.0(wheel), zipp==3.1.0(wheel), six==1.15.0(wheel), tensorflow-estimator==2.2.0(wheel), importlib-metadata==1.6.0(wheel), termcolor==1.1.0(wheel), gast==0.3.3(wheel), wrapt==1.12.1(wheel), cachetools==4.1.0(wheel), pyasn1==0.4.8(wheel), google-pasta==0.2.0(wheel), requests-oauthlib==1.3.0(wheel), urllib3==1.25.9(wheel), pyasn1-modules==0.2.8(wheel), absl-py==0.9.0(wheel), astunparse==1.6.3(wheel), keras-preprocessing==1.1.2(wheel), idna==2.9(wheel), requests==2.23.0(wheel), rsa==4.0(wheel), wheel==0.34.2(wheel), numpy==1.18.4(wheel), werkzeug==1.0.1(wheel)}\r\nFinal incompatible: {tensorflow==2.2.0(wheel), h5py==2.10.0(wheel), protobuf==3.12.2(wheel), wrapt==1.12.1(wheel), numpy==1.18.4(wheel), grpcio==1.29.0(wheel), scipy==1.4.1(wheel)}\r\nFinal missing wheels: {tensorflow==2.2.0(wheel), grpcio==1.29.0(wheel)}\r\nPythonPipBuilder:ResolveDependencies failed\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 42, in execute\r\n    requirements_path=self.manifest_path,\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 137, in build_dependencies\r\n    self._dependency_builder.build_site_packages(requirements_path, artifacts_dir_path, scratch_dir_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 201, in build_site_packages\r\n    raise MissingDependencyError(packages_without_wheels)\r\naws_lambda_builders.workflows.python_pip.packager.MissingDependencyError: {tensorflow==2.2.0(wheel), grpcio==1.29.0(wheel)}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/aws_lambda_builders/workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 45, in execute\r\n    raise ActionFailedError(str(ex))\r\naws_lambda_builders.actions.ActionFailedError: {tensorflow==2.2.0(wheel), grpcio==1.29.0(wheel)}\r\n\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 50308, 'exitReason': 'WorkflowFailedError', 'exitCode': 1, 'requestId': '199413b8-0cd6-41f2-8750-b2189bccb2fa', 'installationId': '27166426-9c3e-4c34-93bc-1f3346ed5909', 'sessionId': '08d96ae3-9148-4850-ad9c-87e77e262c0d', 'executionEnvironment': 'CLI', 'pyversion': '3.6.8', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: PythonPipBuilder:ResolveDependencies - {tensorflow==2.2.0(wheel), grpcio==1.29.0(wheel)}\r\n\r\n\r\n### Expected result\r\n\r\nI expected a successful build.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: MacOS 10.14.4\r\n2. `sam --version`: SAM CLI, version 0.52.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2013", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2013/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2013/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2013/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2013", "id": 627071763, "node_id": "MDU6SXNzdWU2MjcwNzE3NjM=", "number": 2013, "title": "Error: PythonPipBuilder:ResolveDependencies - {boto3==1.13.17(sdist)}", "user": {"login": "AdamMarton", "id": 5418343, "node_id": "MDQ6VXNlcjU0MTgzNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5418343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamMarton", "html_url": "https://github.com/AdamMarton", "followers_url": "https://api.github.com/users/AdamMarton/followers", "following_url": "https://api.github.com/users/AdamMarton/following{/other_user}", "gists_url": "https://api.github.com/users/AdamMarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamMarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamMarton/subscriptions", "organizations_url": "https://api.github.com/users/AdamMarton/orgs", "repos_url": "https://api.github.com/users/AdamMarton/repos", "events_url": "https://api.github.com/users/AdamMarton/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamMarton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-29T07:49:25Z", "updated_at": "2020-06-02T07:02:40Z", "closed_at": "2020-06-01T18:09:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nUsing boto3 as a dependency in my SAM Application and `build` is failing due to the following error:\r\n\r\n`Error: PythonPipBuilder:ResolveDependencies - {boto3==1.13.17(sdist)}`\r\n\r\nHard to tell whether the bug is in pip, AWS SAM or something else as I'm seeing [1.13.17 on pypi.org](https://pypi.org/project/boto3/) - using latest version from all.\r\n\r\nFixing the version to `1.13.16` in `requirements.txt` eliminates the issue.\r\n\r\n**Steps to reproduce**\r\n* Create a SAM application\r\n* Execute `sam build`\r\n\r\n**Expected behavior**\r\n1.13.17 should work fine just like previous versions.\r\n\r\n**Debug logs**\r\n```\r\n$ sam build --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n4 resources found in the template\r\nFound Serverless function with name='MyFunction' and CodeUri='hello_world'\r\nNo Parameters detected in the template\r\nBuilding function 'MyFunction'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /Users/username/Documents/project-folder/requirements.txt --dest /var/folders/2_/1skgx3gn683b9kbfc9xnj8_40000gn/T/tmpj9534uax\r\nFull dependency closure: {urllib3==1.25.9(wheel), python-dateutil==2.8.1(wheel), jmespath==0.10.0(wheel), six==1.15.0(wheel), boto3==1.13.17(sdist), chardet==3.0.4(wheel), requests==2.23.0(wheel), s3transfer==0.3.3(wheel), botocore==1.16.17(wheel), docutils==0.15.2(wheel), certifi==2020.4.5.1(wheel), idna==2.9(wheel)}\r\ninitial compatible: {urllib3==1.25.9(wheel), python-dateutil==2.8.1(wheel), jmespath==0.10.0(wheel), six==1.15.0(wheel), chardet==3.0.4(wheel), requests==2.23.0(wheel), s3transfer==0.3.3(wheel), botocore==1.16.17(wheel), docutils==0.15.2(wheel), certifi==2020.4.5.1(wheel), idna==2.9(wheel)}\r\ninitial incompatible: {boto3==1.13.17(sdist)}\r\nDownloading missing wheels: {boto3==1.13.17(sdist)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp38 --dest /var/folders/2_/1skgx3gn683b9kbfc9xnj8_40000gn/T/tmpj9534uax boto3==1.13.17\r\ncompatible wheels after second download pass: {urllib3==1.25.9(wheel), python-dateutil==2.8.1(wheel), jmespath==0.10.0(wheel), six==1.15.0(wheel), chardet==3.0.4(wheel), requests==2.23.0(wheel), s3transfer==0.3.3(wheel), botocore==1.16.17(wheel), docutils==0.15.2(wheel), certifi==2020.4.5.1(wheel), idna==2.9(wheel)}\r\nBuild missing wheels from sdists (C compiling True): {boto3==1.13.17(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/2_/1skgx3gn683b9kbfc9xnj8_40000gn/T/tmpj9534uax /var/folders/2_/1skgx3gn683b9kbfc9xnj8_40000gn/T/tmpj9534uax/boto3-1.13.17.tar.gz\r\ncompatible after building wheels (no C compiling): {urllib3==1.25.9(wheel), python-dateutil==2.8.1(wheel), jmespath==0.10.0(wheel), six==1.15.0(wheel), chardet==3.0.4(wheel), requests==2.23.0(wheel), s3transfer==0.3.3(wheel), botocore==1.16.17(wheel), docutils==0.15.2(wheel), certifi==2020.4.5.1(wheel), idna==2.9(wheel)}\r\nBuild missing wheels from sdists (C compiling False): {boto3==1.13.17(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/2_/1skgx3gn683b9kbfc9xnj8_40000gn/T/tmpj9534uax /var/folders/2_/1skgx3gn683b9kbfc9xnj8_40000gn/T/tmpj9534uax/boto3-1.13.17.tar.gz\r\ncompatible after building wheels (C compiling): {urllib3==1.25.9(wheel), python-dateutil==2.8.1(wheel), jmespath==0.10.0(wheel), six==1.15.0(wheel), chardet==3.0.4(wheel), requests==2.23.0(wheel), s3transfer==0.3.3(wheel), botocore==1.16.17(wheel), docutils==0.15.2(wheel), certifi==2020.4.5.1(wheel), idna==2.9(wheel)}\r\nFinal compatible: {urllib3==1.25.9(wheel), python-dateutil==2.8.1(wheel), jmespath==0.10.0(wheel), six==1.15.0(wheel), chardet==3.0.4(wheel), requests==2.23.0(wheel), s3transfer==0.3.3(wheel), botocore==1.16.17(wheel), docutils==0.15.2(wheel), certifi==2020.4.5.1(wheel), idna==2.9(wheel)}\r\nFinal incompatible: set()\r\nFinal missing wheels: {boto3==1.13.17(sdist)}\r\nPythonPipBuilder:ResolveDependencies failed\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 42, in execute\r\n    requirements_path=self.manifest_path,\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 137, in build_dependencies\r\n    self._dependency_builder.build_site_packages(requirements_path, artifacts_dir_path, scratch_dir_path)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 201, in build_site_packages\r\n    raise MissingDependencyError(packages_without_wheels)\r\naws_lambda_builders.workflows.python_pip.packager.MissingDependencyError: {boto3==1.13.17(sdist)}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.51.0/libexec/lib/python3.7/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 45, in execute\r\n    raise ActionFailedError(str(ex))\r\naws_lambda_builders.actions.ActionFailedError: {boto3==1.13.17(sdist)}\r\n\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 10242, 'exitReason': 'WorkflowFailedError', 'exitCode': 1, 'requestId': 'c8dad198-6e91-45fb-a38a-094107f477c6', 'installationId': 'dcd60592-1491-4b42-ab26-a91d10922847', 'sessionId': '75c4ff44-27b2-44fc-9acf-44c187d64c00', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.51.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: PythonPipBuilder:ResolveDependencies - {boto3==1.13.17(sdist)}\r\n```\r\n\r\nCarried over from https://github.com/boto/boto3/issues/2460", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2012", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2012/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2012/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2012/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2012", "id": 626747500, "node_id": "MDU6SXNzdWU2MjY3NDc1MDA=", "number": 2012, "title": "sam build not able to clear out .aws-sam folder", "user": {"login": "rupe120", "id": 860348, "node_id": "MDQ6VXNlcjg2MDM0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/860348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rupe120", "html_url": "https://github.com/rupe120", "followers_url": "https://api.github.com/users/rupe120/followers", "following_url": "https://api.github.com/users/rupe120/following{/other_user}", "gists_url": "https://api.github.com/users/rupe120/gists{/gist_id}", "starred_url": "https://api.github.com/users/rupe120/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rupe120/subscriptions", "organizations_url": "https://api.github.com/users/rupe120/orgs", "repos_url": "https://api.github.com/users/rupe120/repos", "events_url": "https://api.github.com/users/rupe120/events{/privacy}", "received_events_url": "https://api.github.com/users/rupe120/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-28T19:14:34Z", "updated_at": "2020-06-01T13:18:52Z", "closed_at": "2020-05-28T22:59:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWhen I try to re-run `sam build --use-container` I seem to need to wait an indeterminate length of time before it will work again. \r\n\r\nI either receive:\r\n\r\n```\r\nOSError: [WinError 145] The directory is not empty: '.aws-sam\\\\build'\r\n```\r\n\r\nor \r\n\r\n```\r\nPermissionError: [WinError 5] Access is denied: '.aws-sam\\\\build\\\\CustomMetricDeliveryCloudwatchFunction'\r\n```\r\n\r\nThe OSError happens first, and then every time after that, until it finaly works again I receive the PermissionError\r\n\r\n### Steps to reproduce\r\n\r\n1. `sam build --use-container`\r\n1. `sam local invoke`\r\n1. `sam build --use-container`\r\n\r\n### Observed result\r\n\r\n```\r\n> sam build --use-container\r\nStarting Build inside a container\r\nTraceback (most recent call last):\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\runpy.py\", line 193, in _run_module_as_main\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\runpy.py\", line 85, in _run_code\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\__main__.py\", line 12, in <module>\r\n    cli(prog_name=\"sam\")\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\command.py\", line 129, in cli\r\n    mode,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\command.py\", line 179, in do_cli\r\n    mode=mode,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\build_context.py\", line 69, in __enter__\r\n    self._build_dir = self._setup_build_dir(self._build_dir, self._clean)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\build_context.py\", line 91, in _setup_build_dir\r\n    shutil.rmtree(build_dir)\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 516, in rmtree\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 404, in _rmtree_unsafe\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 402, in _rmtree_unsafe\r\nOSError: [WinError 145] The directory is not empty: '.aws-sam\\\\build'\r\n```\r\n\r\n```\r\n> sam build --use-container --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nStarting Build inside a container\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='CustomMetricDeliveryCloudwatchFunction' and CodeUri='cloudwatch_metric_delivery/'\r\nNo Parameters detected in the template\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 82, 'exitReason': 'PermissionError', 'exitCode': 255, 'requestId': '45bd311d-8076-44b1-bff8-25b15bda4642', 'installationId': '70ce78ee-79f5-4ef9-867e-02893e68d012', 'sessionId': 'e404098b-88c9-4f95-ba3c-e65ec6a99505', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.52.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nTraceback (most recent call last):\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\runpy.py\", line 193, in _run_module_as_main\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\runpy.py\", line 85, in _run_code\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\__main__.py\", line 12, in <module>\r\n    cli(prog_name=\"sam\")\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\command.py\", line 129, in cli\r\n    mode,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\command.py\", line 179, in do_cli\r\n    mode=mode,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\build_context.py\", line 69, in __enter__\r\n    self._build_dir = self._setup_build_dir(self._build_dir, self._clean)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\build\\build_context.py\", line 91, in _setup_build_dir\r\n    shutil.rmtree(build_dir)\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 516, in rmtree\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 395, in _rmtree_unsafe\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 377, in _rmtree_unsafe\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\shutil.py\", line 374, in _rmtree_unsafe\r\nPermissionError: [WinError 5] Access is denied: '.aws-sam\\\\build\\\\CustomMetricDeliveryCloudwatchFunction'\r\n```\r\n\r\n### Expected result\r\n\r\nA buillt version of the container\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 - Version 10.0.18363 Build 18363\r\n2. `sam --version`: SAM CLI, version 0.52.0 64bit\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2010", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2010/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2010/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2010/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2010", "id": 626364805, "node_id": "MDU6SXNzdWU2MjYzNjQ4MDU=", "number": 2010, "title": "sam build: incorrect timestamps 1985", "user": {"login": "TerryHighfield", "id": 9553376, "node_id": "MDQ6VXNlcjk1NTMzNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9553376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TerryHighfield", "html_url": "https://github.com/TerryHighfield", "followers_url": "https://api.github.com/users/TerryHighfield/followers", "following_url": "https://api.github.com/users/TerryHighfield/following{/other_user}", "gists_url": "https://api.github.com/users/TerryHighfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/TerryHighfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TerryHighfield/subscriptions", "organizations_url": "https://api.github.com/users/TerryHighfield/orgs", "repos_url": "https://api.github.com/users/TerryHighfield/repos", "events_url": "https://api.github.com/users/TerryHighfield/events{/privacy}", "received_events_url": "https://api.github.com/users/TerryHighfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-28T09:34:44Z", "updated_at": "2020-05-28T16:51:24Z", "closed_at": "2020-05-28T11:06:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\n'sam build' assigns incorrect timestamps to files. The original files have today's timestamp. I only have one folder to build (a serverless function). The source is written in typescript and built to dist. The dist folder content and the package.json file have the correct timestamp in the origin folder but have timestamp of 1985 under ./aws-sam/build.\r\n\r\n'sam deploy' cannot deploy the package because of the incorrect timestamps.\r\n\r\n### Steps to reproduce\r\n\r\nProvide steps to replicate.\r\n\r\nrun: sam build\r\nrun: find . -not -newerat \"1990-12-31 23:59:59\"\r\n\r\nThe last command shows any files with a timestamp before 1990. for me this lists the following files:\r\n./.aws-sam/build/GetItoStaticDataFunction/dist/app.js.map\r\n./.aws-sam/build/GetItoStaticDataFunction/dist/app.js\r\n./.aws-sam/build/GetItoStaticDataFunction/package.json\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\n### Expected result\r\n\r\nFiles should contain the same timestamp as the originals\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS\r\n2. `sam --version`: SAM CLI, version 0.52.0\r\n\r\nbuild log:\r\n[buildLog.txt](https://github.com/awslabs/aws-sam-cli/files/4694636/buildLog.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2006", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2006/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2006/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2006/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2006", "id": 623884893, "node_id": "MDU6SXNzdWU2MjM4ODQ4OTM=", "number": 2006, "title": "New Makefile Output & Debugging", "user": {"login": "metaskills", "id": 2381, "node_id": "MDQ6VXNlcjIzODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metaskills", "html_url": "https://github.com/metaskills", "followers_url": "https://api.github.com/users/metaskills/followers", "following_url": "https://api.github.com/users/metaskills/following{/other_user}", "gists_url": "https://api.github.com/users/metaskills/gists{/gist_id}", "starred_url": "https://api.github.com/users/metaskills/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metaskills/subscriptions", "organizations_url": "https://api.github.com/users/metaskills/orgs", "repos_url": "https://api.github.com/users/metaskills/repos", "events_url": "https://api.github.com/users/metaskills/events{/privacy}", "received_events_url": "https://api.github.com/users/metaskills/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-24T15:17:07Z", "updated_at": "2020-08-02T17:20:29Z", "closed_at": "2020-08-02T17:20:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First, thanks a ton for the new 0.51.0 Makefile support! This is going to save a bunch of time on Rails & Lambda build times since we typically have to build CSS/JS assets using non-deployment gems. Hence having full control allows our CI/CD (GitHub Actions) to cache different dev/deploy gem vendor directories.\r\n\r\nThat said, I am new to Makefiles and found their adoption to be a little difficult. I found myself wanting to `echo` parts of the build but nothing was showing during `sam build`. Is there something this library can do (or myself) when using a Makefile to see what is happing in my own files? \r\n\r\nI also realize this just might be having to learn make. But thought I would ask first. Thanks again!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2005", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2005/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2005/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2005/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2005", "id": 623260754, "node_id": "MDU6SXNzdWU2MjMyNjA3NTQ=", "number": 2005, "title": "Error: PythonPipBuilder:ResolveDependencies - {pyrsistent==0.16.0(sdist)}", "user": {"login": "brysontyrrell", "id": 3086245, "node_id": "MDQ6VXNlcjMwODYyNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3086245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brysontyrrell", "html_url": "https://github.com/brysontyrrell", "followers_url": "https://api.github.com/users/brysontyrrell/followers", "following_url": "https://api.github.com/users/brysontyrrell/following{/other_user}", "gists_url": "https://api.github.com/users/brysontyrrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/brysontyrrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brysontyrrell/subscriptions", "organizations_url": "https://api.github.com/users/brysontyrrell/orgs", "repos_url": "https://api.github.com/users/brysontyrrell/repos", "events_url": "https://api.github.com/users/brysontyrrell/events{/privacy}", "received_events_url": "https://api.github.com/users/brysontyrrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}, {"id": 948231357, "node_id": "MDU6TGFiZWw5NDgyMzEzNTc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/needs-investigation", "name": "stage/needs-investigation", "color": "e03353", "default": false, "description": "Stage used for when an issue needs a deeper investigation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-22T14:48:04Z", "updated_at": "2020-07-29T14:23:26Z", "closed_at": "2020-05-27T19:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Description\r\n\r\nPossibly related to #1840 but discovered while using new features in 0.51.0.\r\n\r\nI implemented `Metadata` feature for Layers to allow `sam build` to install requirements.\r\n\r\n```\r\n    Metadata:\r\n      BuildMethod: python3.8\r\n```\r\n\r\nWhen running `sam build --use-container` on the template I am getting this error:\r\n\r\n```\r\nError: PythonPipBuilder:ResolveDependencies - {pyrsistent==0.16.0(sdist)}\r\n```\r\n\r\nThe Layer triggering this error is installing the following packages:\r\n\r\n```\r\njsonschema==3.2.0\r\nPyJWT==1.7.1\r\n```\r\n\r\nIf I downgrade from 0.51.0 to 0.50.0 which does not include the updates for supporting `Metadata` on Lambda Functions the build command completes without error.\r\n\r\n### Steps to reproduce\r\n\r\nInstall SAM CLI 0.51.0.\r\n\r\nAdd `Metadata` build option as shown above to a Lambda Layer in a template.\r\n\r\nBuild the template.\r\n\r\n### Observed result\r\n\r\nThis test template contains multiple Layers - only one is triggering the error.\r\n\r\n```\r\n sam build --use-container --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nStarting Build inside a container\r\nNo Parameters detected in the template\r\n4 resources found in the template\r\nNo Parameters detected in the template\r\nBuilding layer 'AwsXraySdk'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRegistering workflow 'CustomMakeBuilder' with capability 'Capability(language='provided', dependency_manager=None, application_framework=None)'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /Users/brysontyrrell/Development/Eir/src/layers/aws-xray-sdk/requirements.txt --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p\r\nFull dependency closure: {aws-xray-sdk==2.5.0(wheel), wrapt==1.12.1(sdist), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), future==0.18.2(sdist), zipp==3.1.0(wheel), jsonpickle==1.4.1(wheel), docutils==0.15.2(wheel), importlib-metadata==1.6.0(wheel), botocore==1.16.15(wheel), six==1.15.0(wheel)}\r\ninitial compatible: {aws-xray-sdk==2.5.0(wheel), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), botocore==1.16.15(wheel), jmespath==0.10.0(wheel), zipp==3.1.0(wheel), docutils==0.15.2(wheel), importlib-metadata==1.6.0(wheel), jsonpickle==1.4.1(wheel), six==1.15.0(wheel)}\r\ninitial incompatible: {future==0.18.2(sdist), wrapt==1.12.1(sdist)}\r\nDownloading missing wheels: {future==0.18.2(sdist), wrapt==1.12.1(sdist)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp38 --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p future==0.18.2\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp38 --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p wrapt==1.12.1\r\ncompatible wheels after second download pass: {aws-xray-sdk==2.5.0(wheel), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), zipp==3.1.0(wheel), jsonpickle==1.4.1(wheel), docutils==0.15.2(wheel), importlib-metadata==1.6.0(wheel), botocore==1.16.15(wheel), six==1.15.0(wheel)}\r\nBuild missing wheels from sdists (C compiling True): {future==0.18.2(sdist), wrapt==1.12.1(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p/future-0.18.2.tar.gz\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p/wrapt-1.12.1.tar.gz\r\ncompatible after building wheels (no C compiling): {aws-xray-sdk==2.5.0(wheel), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), future==0.18.2(wheel), zipp==3.1.0(wheel), jsonpickle==1.4.1(wheel), docutils==0.15.2(wheel), importlib-metadata==1.6.0(wheel), botocore==1.16.15(wheel), six==1.15.0(wheel)}\r\nBuild missing wheels from sdists (C compiling False): {wrapt==1.12.1(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3b7k058p/wrapt-1.12.1.tar.gz\r\ncompatible after building wheels (C compiling): {aws-xray-sdk==2.5.0(wheel), wrapt==1.12.1(wheel), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), future==0.18.2(wheel), zipp==3.1.0(wheel), jsonpickle==1.4.1(wheel), docutils==0.15.2(wheel), importlib-metadata==1.6.0(wheel), botocore==1.16.15(wheel), six==1.15.0(wheel)}\r\nFinal compatible: {aws-xray-sdk==2.5.0(wheel), wrapt==1.12.1(wheel), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), future==0.18.2(wheel), zipp==3.1.0(wheel), jsonpickle==1.4.1(wheel), docutils==0.15.2(wheel), importlib-metadata==1.6.0(wheel), botocore==1.16.15(wheel), six==1.15.0(wheel)}\r\nFinal incompatible: {wrapt==1.12.1(wheel)}\r\nFinal missing wheels: set()\r\nPythonPipBuilder:ResolveDependencies succeeded\r\nRunning PythonPipBuilder:CopySource\r\nPythonPipBuilder:CopySource succeeded\r\nBuilding layer 'CredStash'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /Users/brysontyrrell/Development/Eir/src/layers/credstash/requirements.txt --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmpcrdfa_oz\r\nFull dependency closure: {boto3==1.13.15(wheel), python-dateutil==2.8.1(wheel), six==1.15.0(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), s3transfer==0.3.3(wheel), cffi==1.14.0(wheel), cryptography==2.9.2(wheel), pycparser==2.20(wheel), docutils==0.15.2(wheel), botocore==1.16.15(wheel), credstash==1.17.1(wheel)}\r\ninitial compatible: {boto3==1.13.15(wheel), python-dateutil==2.8.1(wheel), urllib3==1.25.9(wheel), jmespath==0.10.0(wheel), credstash==1.17.1(wheel), s3transfer==0.3.3(wheel), pycparser==2.20(wheel), docutils==0.15.2(wheel), botocore==1.16.15(wheel), six==1.15.0(wheel)}\r\ninitial incompatible: {cffi==1.14.0(wheel), cryptography==2.9.2(wheel)}\r\nDownloading missing wheels: {cffi==1.14.0(wheel), cryptography==2.9.2(wheel)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp38 --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmpcrdfa_oz cffi==1.14.0\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp38 --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmpcrdfa_oz cryptography==2.9.2\r\ncompatible wheels after second download pass: {boto3==1.13.15(wheel), python-dateutil==2.8.1(wheel), six==1.15.0(wheel), urllib3==1.25.9(wheel), botocore==1.16.15(wheel), jmespath==0.10.0(wheel), s3transfer==0.3.3(wheel), pycparser==2.20(wheel), cryptography==2.9.2(wheel), docutils==0.15.2(wheel), cffi==1.14.0(wheel), credstash==1.17.1(wheel)}\r\nBuild missing wheels from sdists (C compiling True): set()\r\ncompatible after building wheels (no C compiling): {boto3==1.13.15(wheel), python-dateutil==2.8.1(wheel), six==1.15.0(wheel), urllib3==1.25.9(wheel), botocore==1.16.15(wheel), jmespath==0.10.0(wheel), s3transfer==0.3.3(wheel), pycparser==2.20(wheel), cryptography==2.9.2(wheel), docutils==0.15.2(wheel), cffi==1.14.0(wheel), credstash==1.17.1(wheel)}\r\nBuild missing wheels from sdists (C compiling False): set()\r\ncompatible after building wheels (C compiling): {boto3==1.13.15(wheel), python-dateutil==2.8.1(wheel), six==1.15.0(wheel), urllib3==1.25.9(wheel), botocore==1.16.15(wheel), jmespath==0.10.0(wheel), s3transfer==0.3.3(wheel), pycparser==2.20(wheel), cryptography==2.9.2(wheel), docutils==0.15.2(wheel), cffi==1.14.0(wheel), credstash==1.17.1(wheel)}\r\nFinal compatible: {boto3==1.13.15(wheel), python-dateutil==2.8.1(wheel), six==1.15.0(wheel), urllib3==1.25.9(wheel), botocore==1.16.15(wheel), jmespath==0.10.0(wheel), s3transfer==0.3.3(wheel), pycparser==2.20(wheel), cryptography==2.9.2(wheel), docutils==0.15.2(wheel), cffi==1.14.0(wheel), credstash==1.17.1(wheel)}\r\nFinal incompatible: {cffi==1.14.0(wheel), cryptography==2.9.2(wheel)}\r\nFinal missing wheels: set()\r\nPythonPipBuilder:ResolveDependencies succeeded\r\nRunning PythonPipBuilder:CopySource\r\nPythonPipBuilder:CopySource succeeded\r\nBuilding layer 'EirSharedLayer'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nFound workflow 'PythonPipBuilder' to support capabilities 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRunning workflow 'PythonPipBuilder'\r\nRunning PythonPipBuilder:ResolveDependencies\r\ncalling pip download -r /Users/brysontyrrell/Development/Eir/src/layers/eir_shared/requirements.txt --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3ndwceht\r\nFull dependency closure: {pyrsistent==0.16.0(sdist), six==1.15.0(wheel), pyjwt==1.7.1(wheel), jsonschema==3.2.0(wheel), attrs==19.3.0(wheel), setuptools==46.4.0(wheel)}\r\ninitial compatible: {pyjwt==1.7.1(wheel), six==1.15.0(wheel), attrs==19.3.0(wheel), jsonschema==3.2.0(wheel), setuptools==46.4.0(wheel)}\r\ninitial incompatible: {pyrsistent==0.16.0(sdist)}\r\nDownloading missing wheels: {pyrsistent==0.16.0(sdist)}\r\ncalling pip download --only-binary=:all: --no-deps --platform manylinux1_x86_64 --implementation cp --abi cp38 --dest /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3ndwceht pyrsistent==0.16.0\r\ncompatible wheels after second download pass: {pyjwt==1.7.1(wheel), six==1.15.0(wheel), attrs==19.3.0(wheel), jsonschema==3.2.0(wheel), setuptools==46.4.0(wheel)}\r\nBuild missing wheels from sdists (C compiling True): {pyrsistent==0.16.0(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3ndwceht /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3ndwceht/pyrsistent-0.16.0.tar.gz\r\ncompatible after building wheels (no C compiling): {pyjwt==1.7.1(wheel), six==1.15.0(wheel), attrs==19.3.0(wheel), jsonschema==3.2.0(wheel), setuptools==46.4.0(wheel)}\r\nBuild missing wheels from sdists (C compiling False): {pyrsistent==0.16.0(sdist)}\r\ncalling pip wheel --no-deps --wheel-dir /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3ndwceht /var/folders/h8/y0kv0zw94912x9fhc48v46rm0000gn/T/tmp3ndwceht/pyrsistent-0.16.0.tar.gz\r\ncompatible after building wheels (C compiling): {pyjwt==1.7.1(wheel), six==1.15.0(wheel), attrs==19.3.0(wheel), jsonschema==3.2.0(wheel), setuptools==46.4.0(wheel)}\r\nFinal compatible: {pyjwt==1.7.1(wheel), six==1.15.0(wheel), attrs==19.3.0(wheel), jsonschema==3.2.0(wheel), setuptools==46.4.0(wheel)}\r\nFinal incompatible: {pyrsistent==0.16.0(wheel)}\r\nFinal missing wheels: {pyrsistent==0.16.0(sdist)}\r\nPythonPipBuilder:ResolveDependencies failed\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 39, in execute\r\n    package_builder.build_dependencies(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 137, in build_dependencies\r\n    self._dependency_builder.build_site_packages(requirements_path, artifacts_dir_path, scratch_dir_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/packager.py\", line 201, in build_site_packages\r\n    raise MissingDependencyError(packages_without_wheels)\r\naws_lambda_builders.workflows.python_pip.packager.MissingDependencyError: {pyrsistent==0.16.0(sdist)}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/aws_lambda_builders/workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/aws_lambda_builders/workflows/python_pip/actions.py\", line 45, in execute\r\n    raise ActionFailedError(str(ex))\r\naws_lambda_builders.actions.ActionFailedError: {pyrsistent==0.16.0(sdist)}\r\n\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 30920, 'exitReason': 'WorkflowFailedError', 'exitCode': 1, 'requestId': 'da2f0647-65be-412e-93c3-44f21977ba04', 'installationId': '03c2f651-de98-424a-814d-b8f65a7593e7', 'sessionId': '959761b2-d6ba-462a-86fa-f4983464dcf3', 'executionEnvironment': 'CLI', 'pyversion': '3.8.0', 'samcliVersion': '0.51.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: PythonPipBuilder:ResolveDependencies - {pyrsistent==0.16.0(sdist)}\r\n```\r\n\r\n### Expected result\r\n\r\nThe Layer is successfully built.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS 10.15.4\r\n2. `sam --version`: 0.51.0\r\n3. `Python`: 3.8.0\r\n\r\n`Add --debug flag to command you are running`\r\n\r\n# Workaround\r\n\r\nDowngrade to SAM CLI 0.50.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2003", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2003/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2003/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2003/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2003", "id": 622601724, "node_id": "MDU6SXNzdWU2MjI2MDE3MjQ=", "number": 2003, "title": "Wrong absolute path to code is resolved when running in Linux container on Windows host", "user": {"login": "goldsam", "id": 5701782, "node_id": "MDQ6VXNlcjU3MDE3ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5701782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsam", "html_url": "https://github.com/goldsam", "followers_url": "https://api.github.com/users/goldsam/followers", "following_url": "https://api.github.com/users/goldsam/following{/other_user}", "gists_url": "https://api.github.com/users/goldsam/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsam/subscriptions", "organizations_url": "https://api.github.com/users/goldsam/orgs", "repos_url": "https://api.github.com/users/goldsam/repos", "events_url": "https://api.github.com/users/goldsam/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T15:54:55Z", "updated_at": "2020-05-22T03:02:54Z", "closed_at": "2020-05-22T03:02:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWrong absolute path to code is resolved when running in a Linux container on Windows host.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a Linux image which packages aws-sam-cli which will run the follow:\r\n    ```shell\r\n    sam local start-api --docker-volume-basedir \"C:\\Users\\JohnDoe\\path\\to\\build\\base\"\r\n    ```\r\n- Run a container using this image on a windows host\r\n\r\n### Observed result\r\n\r\nWith debug logging enabled:\r\n\r\n```\r\nResolving code path. Cwd=C:\\Users\\JohnDoe\\path\\to\\build\\base, CodeUri=Test\r\nResolved absolute path to code is /app/C:\\Users\\JohnDoe\\path\\to\\build\\base/Test\r\n\r\n.. bunch o' stuff...\r\n\r\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"invalid volume specification: '/app/C:\\Users\\JohnDoe\\path\\to\\build\\base/Test:/var/task:ro,delegated'\")\r\n```\r\n\r\n### Expected result\r\n\r\nThe log line above should have been:\r\n```\r\nResolving code path. Cwd=C:\\Users\\JohnDoe\\path\\to\\build\\base, CodeUri=Test\r\nResolved absolute path to code is C:\\Users\\JohnDoe\\path\\to\\build\\base\\Test\r\n```\r\n\r\nIt is pretty easy to see why this is happening from a quick look in [`codeuri.py`](https://github.com/awslabs/aws-sam-cli/blob/v0.50.0/samcli/lib/utils/codeuri.py#L34-L44). Below is the code in that file with my own comments:\r\n\r\n```python\r\ndef resolve_code_path(cwd, codeuri):\r\n# Intially, we have:\r\n# cwd = \"C:\\Users\\JohnDoe\\path\\to\\build\\base\"\r\n# codeuri =\"Test\"\r\n   \r\n    # Neither of the following conditions are true - skipped\r\n    if not cwd or cwd == PRESENT_DIR:\r\n        cwd = os.getcwd()\r\n\r\n    # my actual CWD in the container is /app\r\n    # posix paths are used since this is an alpine image... herein lies the issue.\r\n    cwd = os.path.abspath(cwd)\r\n    # at this point, cwd  =\"/app/C:\\Users\\JohnDoe\\path\\to\\build\\base\" which is **WRONG**\r\n\r\n    # \"Test\" is clearly not an absolute path\r\n    if not os.path.isabs(codeuri):\r\n        codeuri = os.path.normpath(os.path.join(cwd, codeuri))\r\n\r\n    # at this point, codeuri =\"/app/C:\\Users\\JohnDoe\\path\\to\\build\\base/Test\" which is **WRONG**\r\n    return codeuri\r\n```\r\nThe problem is is that unix paths are assumed even though the argument path is a windows path simply because the container is a linux container. Ideally, a CLI argument would support specifying the host OS type which would cause [Python's host-default `os.path`](https://docs.python.org/3/library/os.path.html) module to be substituted with one of the available os-specific modules (e.g. `posixpath` or `ntpath`). \r\n\r\nThis seems reasonable to me, since no assumptions should be made about the host environment.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n1. HOST OS: Windows 10 Pro\r\n2. Container base image: python:alpine\r\n2. `sam --version`: SAM CLI, version 0.50.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2001", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2001/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2001/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/2001/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/2001", "id": 622278528, "node_id": "MDU6SXNzdWU2MjIyNzg1Mjg=", "number": 2001, "title": "11:51\tError running '[Local] xxx': SAM build command failed", "user": {"login": "uday-docsynk", "id": 62542862, "node_id": "MDQ6VXNlcjYyNTQyODYy", "avatar_url": "https://avatars2.githubusercontent.com/u/62542862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uday-docsynk", "html_url": "https://github.com/uday-docsynk", "followers_url": "https://api.github.com/users/uday-docsynk/followers", "following_url": "https://api.github.com/users/uday-docsynk/following{/other_user}", "gists_url": "https://api.github.com/users/uday-docsynk/gists{/gist_id}", "starred_url": "https://api.github.com/users/uday-docsynk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uday-docsynk/subscriptions", "organizations_url": "https://api.github.com/users/uday-docsynk/orgs", "repos_url": "https://api.github.com/users/uday-docsynk/repos", "events_url": "https://api.github.com/users/uday-docsynk/events{/privacy}", "received_events_url": "https://api.github.com/users/uday-docsynk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}, {"id": 797200194, "node_id": "MDU6TGFiZWw3OTcyMDAxOTQ=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/question", "name": "type/question", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-21T06:23:54Z", "updated_at": "2020-07-10T16:18:46Z", "closed_at": "2020-06-17T18:51:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nSam build command keeps failing every now and then  I keep restarting my docker to ensure it doesnt fail. \r\n\r\n\r\n\r\n### Observed result\r\n\r\n11:41\tError running '[Local] xxx': SAM build command failed\r\n\r\n11:51\tError running '[Local] xxx': SAM build command failed\r\n\r\n11:51\tError running '[Local] xxx': SAM build command failed\r\n\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: windows 10\r\n2. `sam --version`: 0.50\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1999", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1999/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1999/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1999/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1999", "id": 621887280, "node_id": "MDU6SXNzdWU2MjE4ODcyODA=", "number": 1999, "title": "Incorrect inline help in \"sam local generate-event\" command", "user": {"login": "FrcMoya", "id": 33333527, "node_id": "MDQ6VXNlcjMzMzMzNTI3", "avatar_url": "https://avatars0.githubusercontent.com/u/33333527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrcMoya", "html_url": "https://github.com/FrcMoya", "followers_url": "https://api.github.com/users/FrcMoya/followers", "following_url": "https://api.github.com/users/FrcMoya/following{/other_user}", "gists_url": "https://api.github.com/users/FrcMoya/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrcMoya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrcMoya/subscriptions", "organizations_url": "https://api.github.com/users/FrcMoya/orgs", "repos_url": "https://api.github.com/users/FrcMoya/repos", "events_url": "https://api.github.com/users/FrcMoya/events{/privacy}", "received_events_url": "https://api.github.com/users/FrcMoya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200187, "node_id": "MDU6TGFiZWw3OTcyMDAxODc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/contributors/good-first-issue", "name": "contributors/good-first-issue", "color": "0e8a16", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T16:11:21Z", "updated_at": "2020-05-27T07:44:21Z", "closed_at": "2020-05-27T07:43:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). -->\r\n\r\n### Describe your idea/feature/enhancement\r\n\r\nUsing the CLI I had some problems with the inline help of the command \"sam local generate-event\". I was trying to pipe the event generated by that command with \"sam local invoke\" and it failed. The part of the inline help that it is incorrect is this:\r\n\r\n`{...} After you generate a sample event, you can use it to test your Lambda function locally\r\n  $ sam local generate-event s3 [put/delete] --bucket <bucket> --key <key> | sam local invoke <function logical id> {...}`\r\n\r\nIn the web documentation here (https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-generate-event.html) the help is correct:\r\n\r\n`After you generate a sample event, you can use it to test your Lambda function locally\r\nsam local generate-event s3 [put/delete] --bucket <bucket> --key <key> | sam local invoke -e - <function logical id>`\r\n### Proposal\r\n\r\nReplace the incorrect help by the correct one.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1997", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1997/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1997/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1997/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1997", "id": 620813496, "node_id": "MDU6SXNzdWU2MjA4MTM0OTY=", "number": 1997, "title": "Env var not set when value is referenced", "user": {"login": "mims92", "id": 5518873, "node_id": "MDQ6VXNlcjU1MTg4NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5518873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mims92", "html_url": "https://github.com/mims92", "followers_url": "https://api.github.com/users/mims92/followers", "following_url": "https://api.github.com/users/mims92/following{/other_user}", "gists_url": "https://api.github.com/users/mims92/gists{/gist_id}", "starred_url": "https://api.github.com/users/mims92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mims92/subscriptions", "organizations_url": "https://api.github.com/users/mims92/orgs", "repos_url": "https://api.github.com/users/mims92/repos", "events_url": "https://api.github.com/users/mims92/events{/privacy}", "received_events_url": "https://api.github.com/users/mims92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T09:12:54Z", "updated_at": "2020-05-19T14:51:43Z", "closed_at": "2020-05-19T14:51:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nTrying to set an env var in the SAM template. The value is a reference to a cmk arn defined in the same template. The value is replaced by a default one. if the cmk arn value is set to a static string, the result is correct.\r\n\r\n### Steps to reproduce\r\n\r\n```Function:\r\n    Type: AWS::Serverless::Function\r\n    Properties:\r\n      FunctionName: MyFunction\r\n      CodeUri: URI\r\n      Handler: app.lambda_handler\r\n      Runtime: python3.7\r\n      Environment:\r\n        Variables:\r\n          cmkArn:\r\n            Fn::GetAtt:\r\n            - DynamoDBDataKey\r\n            - Arn\r\n```\r\n\r\nIn python:\r\n```\r\nimport os\r\ndef lambda_handler(event, context):\r\n    print(os.getenv('cmkArn'))\r\n```\r\n\r\n### Observed result\r\n\r\nOutput: `arn:aws:lambda:us-east-1:123456789012:function:DynamoDBDataKey`\r\n-> completely not a CMK arn\r\n\r\n### Expected result\r\n\r\nOutput: `arn:aws:kms:{REGION}:{ACCOUNT_ID}:key/***`\r\n\r\nif the cmkArn variable is set to a static string, the result is correct.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Debian \r\n2. `sam --version`: SAM CLI, version 0.49.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1994", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1994/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1994/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1994/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1994", "id": 620050100, "node_id": "MDU6SXNzdWU2MjAwNTAxMDA=", "number": 1994, "title": "sam build is stuck in Mounting ....", "user": {"login": "zxf-thingsmatrix", "id": 65008815, "node_id": "MDQ6VXNlcjY1MDA4ODE1", "avatar_url": "https://avatars1.githubusercontent.com/u/65008815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxf-thingsmatrix", "html_url": "https://github.com/zxf-thingsmatrix", "followers_url": "https://api.github.com/users/zxf-thingsmatrix/followers", "following_url": "https://api.github.com/users/zxf-thingsmatrix/following{/other_user}", "gists_url": "https://api.github.com/users/zxf-thingsmatrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxf-thingsmatrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxf-thingsmatrix/subscriptions", "organizations_url": "https://api.github.com/users/zxf-thingsmatrix/orgs", "repos_url": "https://api.github.com/users/zxf-thingsmatrix/repos", "events_url": "https://api.github.com/users/zxf-thingsmatrix/events{/privacy}", "received_events_url": "https://api.github.com/users/zxf-thingsmatrix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200195, "node_id": "MDU6TGFiZWw3OTcyMDAxOTU=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/docker", "name": "area/docker", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-18T09:22:33Z", "updated_at": "2020-07-20T16:30:36Z", "closed_at": "2020-07-20T16:30:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nE:\\zxf\\software\\aws-sam-cli\\bin\\sam.cmd build function --template E:\\zxf\\git-project\\aws-lambda-developer-guide\\sample-apps\\java-events\\template-mvn.yml --build-dir E:\\zxf\\git-project\\aws-lambda-developer-guide\\sample-apps\\java-events\\.aws-sam\\build --use-container --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nStarting Build inside a container\r\nNo Parameters detected in the template\r\n1 resources found in the template\r\nFound Serverless function with name='function' and CodeUri='target/java-events-1.0-SNAPSHOT.jar'\r\nBuilding resource 'function'\r\nLooking for a supported build workflow in following directories: ['E:\\\\zxf\\\\git-project\\\\aws-lambda-developer-guide\\\\sample-apps\\\\java-events\\\\target\\\\java-events-1.0-SNAPSHOT.jar', 'E:\\\\zxf\\\\git-project\\\\aws-lambda-developer-guide\\\\sample-apps\\\\java-events']\r\nCannot convert host path 'E:\\zxf\\git-project\\aws-lambda-developer-guide\\sample-apps\\java-events' to its equivalent path within the container. Host path is not mounted within the container\r\n\r\nFetching lambci/lambda:build-java8 Docker container image......\r\nMounting E:\\zxf\\git-project\\aws-lambda-developer-guide\\sample-apps\\java-events\\target\\java-events-1.0-SNAPSHOT.jar as /tmp/samcli/source:ro,delegated inside runtime container\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: windows 10\r\n2. `sam --version`: 0.48.0\r\n3. `docker --version`: 19.03.8\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1992", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1992/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1992/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1992/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1992", "id": 619640957, "node_id": "MDU6SXNzdWU2MTk2NDA5NTc=", "number": 1992, "title": "Error when deploying 'sam init' - \"ManagedStackSource tag is missing\"", "user": {"login": "gspasov", "id": 25534303, "node_id": "MDQ6VXNlcjI1NTM0MzAz", "avatar_url": "https://avatars3.githubusercontent.com/u/25534303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gspasov", "html_url": "https://github.com/gspasov", "followers_url": "https://api.github.com/users/gspasov/followers", "following_url": "https://api.github.com/users/gspasov/following{/other_user}", "gists_url": "https://api.github.com/users/gspasov/gists{/gist_id}", "starred_url": "https://api.github.com/users/gspasov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gspasov/subscriptions", "organizations_url": "https://api.github.com/users/gspasov/orgs", "repos_url": "https://api.github.com/users/gspasov/repos", "events_url": "https://api.github.com/users/gspasov/events{/privacy}", "received_events_url": "https://api.github.com/users/gspasov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T08:18:38Z", "updated_at": "2020-05-26T17:11:15Z", "closed_at": "2020-05-26T17:11:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI'm initiating a sam project with `sam init` and immediately call `sam build` and `sam deploy -g` afterwards. When I fill in the steps the following way I get the error. Not sure if I'm missing something in my aws account setup or what, yet I'm able to deploy if I do it manually - call `sam package` and `sam deploy` with manually giving the required fields.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```bash\r\n~/1/a/sam $ sam init -r nodejs12.x\r\nWhich template source would you like to use?\r\n        1 - AWS Quick Start Templates\r\n        2 - Custom Template Location\r\nChoice: 1\r\n\r\nProject name [sam-app]: hello-world\r\n\r\nCloning app templates from https://github.com/awslabs/aws-sam-cli-app-templates.git\r\n\r\n-----------------------\r\nGenerating application:\r\n-----------------------\r\nName: hello-world\r\nRuntime: nodejs12.x\r\nDependency Manager: npm\r\nApplication Template: hello-world\r\nOutput Directory: .\r\n\r\nNext steps can be found in the README file at ./hello-world/README.md\r\n    \r\n~/1/a/sam $ cd hello-world/\r\n~/1/a/s/hello-world $ sam build\r\nBuilding resource 'HelloWorldFunction'\r\nRunning NodejsNpmBuilder:NpmPack\r\nRunning NodejsNpmBuilder:CopyNpmrc\r\nRunning NodejsNpmBuilder:CopySource\r\nRunning NodejsNpmBuilder:NpmInstall\r\nRunning NodejsNpmBuilder:CleanUpNpmrc\r\n\r\nBuild Succeeded\r\n\r\nBuilt Artifacts  : .aws-sam/build\r\nBuilt Template   : .aws-sam/build/template.yaml\r\n\r\nCommands you can use next\r\n=========================\r\n[*] Invoke Function: sam local invoke\r\n[*] Deploy: sam deploy --guided\r\n    \r\n~/1/a/s/hello-world $ sam deploy -g --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\nConfiguring SAM deploy\r\n======================\r\n\r\n        Looking for samconfig.toml :  Not found\r\n\r\n        Setting default arguments for 'sam deploy'\r\n        =========================================\r\n        Stack Name [sam-app]: HelloWordSamStack  \r\n        AWS Region [us-east-1]: eu-central-1\r\n        #Shows you resources changes to be deployed and require a 'Y' to initiate deploy\r\n        Confirm changes before deploy [y/N]: N\r\n        #SAM needs permission to be able to create roles to connect to the resources in your template\r\n        Allow SAM CLI IAM role creation [Y/n]: Y\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='HelloWorldFunction'\r\nDetected Inline Swagger definition\r\nAuth checks done on swagger are not exhaustive!\r\n        HelloWorldFunction may not have authorization defined, Is this okay? [y/N]: y\r\n        Save arguments to samconfig.toml [Y/n]: Y\r\n```\r\n\r\n### Observed result\r\n\r\n```\r\n        Looking for resources needed for deployment: Found!\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam deploy', 'duration': 29557, 'exitReason': 'UserException', 'exitCode': 1, 'requestId': 'eb649800-de68-4d33-934c-d03ee3e88d08', 'installationId': '1239613e-49d3-45ba-8b31-fc799e972190', 'sessionId': 'dd2a893b-88cc-46cc-bf9d-69883795dece', 'executionEnvironment': 'CLI', 'pyversion': '3.6.9', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: Stack  aws-sam-cli-managed-default exists, but the ManagedStackSource tag is missing. Failing as the stack was likely not created by the AWS SAM CLI.\r\n```\r\n\r\n\r\n### Expected result\r\n\r\nI expected a smooth deploy of the initiated sam project.\r\n\r\n### Additional environment details\r\n\r\n1. OS: Linux Ubuntu 18.04.4 LTS\r\n2. `sam --version`: 0.48.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1990", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1990/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1990/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1990/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1990", "id": 619535117, "node_id": "MDU6SXNzdWU2MTk1MzUxMTc=", "number": 1990, "title": "When using guided deploy and accepting the default options I receive a Security Constraints Not Satisfied! error.", "user": {"login": "kyledhebert", "id": 8579837, "node_id": "MDQ6VXNlcjg1Nzk4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8579837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyledhebert", "html_url": "https://github.com/kyledhebert", "followers_url": "https://api.github.com/users/kyledhebert/followers", "following_url": "https://api.github.com/users/kyledhebert/following{/other_user}", "gists_url": "https://api.github.com/users/kyledhebert/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyledhebert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyledhebert/subscriptions", "organizations_url": "https://api.github.com/users/kyledhebert/orgs", "repos_url": "https://api.github.com/users/kyledhebert/repos", "events_url": "https://api.github.com/users/kyledhebert/events{/privacy}", "received_events_url": "https://api.github.com/users/kyledhebert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-16T18:55:58Z", "updated_at": "2020-07-30T19:17:40Z", "closed_at": "2020-05-18T13:37:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nWhen using ```sam deploy --guided``` and accepting the default options I receive a Security Constraints Not Satisfied! error.\r\n\r\nNote: When using the AWS Toolkit in VS Code I am able to deploy the hello world example without issue.\r\n\r\n### Steps to reproduce\r\nI'm following [the hello world tutorial here](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html)\r\n1. ```sam init``` to build a .NET core hello world function\r\n2. ```sam build```\r\n3. ```sam deploy --guided```\r\n\r\n### Observed result\r\n\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\nConfiguring SAM deploy\r\n======================\r\n\r\n        Looking for samconfig.toml :  Not found\r\n\r\n        Setting default arguments for 'sam deploy'\r\n        =========================================\r\n        Stack Name [sam-app]:\r\n        AWS Region [us-east-1]:\r\n        #Shows you resources changes to be deployed and require a 'Y' to initiate deploy\r\n        Confirm changes before deploy [y/N]:\r\n        #SAM needs permission to be able to create roles to connect to the resources in your template\r\n        Allow SAM CLI IAM role creation [Y/n]:\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='HelloWorldFunction'\r\nDetected Inline Swagger definition\r\nAuth checks done on swagger are not exhaustive!\r\n        HelloWorldFunction may not have authorization defined, Is this okay? [y/N]:\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam deploy', 'duration': 14529, 'exitReason': 'GuidedDeployFailedError', 'exitCode': 1, 'requestId': '3818fe20-a378-4ac6-9564-225ea699f51f', 'installationId': 'eff16007-c6c5-4f81-afaf-18df5059d751', 'sessionId': 'f2d02a1c-7328-4483-97fc-6bc880d35f36', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.48.0'}}]}\r\nTelemetry response: 200\r\nError: Security Constraints Not Satisfied!\r\n```\r\n\r\n### Expected result\r\n\r\nI expect the Lambda function and CloudFormation stack to be deployed.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 Pro\r\n2. `sam --version`: SAM CLI, version 0.48.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1987", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1987/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1987/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1987/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1987", "id": 618544495, "node_id": "MDU6SXNzdWU2MTg1NDQ0OTU=", "number": 1987, "title": "0.49.0 brew issue", "user": {"login": "mrichman", "id": 11228, "node_id": "MDQ6VXNlcjExMjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/11228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrichman", "html_url": "https://github.com/mrichman", "followers_url": "https://api.github.com/users/mrichman/followers", "following_url": "https://api.github.com/users/mrichman/following{/other_user}", "gists_url": "https://api.github.com/users/mrichman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrichman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrichman/subscriptions", "organizations_url": "https://api.github.com/users/mrichman/orgs", "repos_url": "https://api.github.com/users/mrichman/repos", "events_url": "https://api.github.com/users/mrichman/events{/privacy}", "received_events_url": "https://api.github.com/users/mrichman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-14T21:23:26Z", "updated_at": "2020-05-15T14:39:54Z", "closed_at": "2020-05-15T14:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "While upgrading 0.48.0 to 0.49.0, an error in the URL gives a 404, which forces brew to build from source:\r\n\r\n```\r\n==> Upgrading 1 outdated package:\r\naws/tap/aws-sam-cli 0.48.0 -> 0.49.0\r\n==> Upgrading aws/tap/aws-sam-cli 0.48.0 -> 0.49.0\r\n==> Downloading https://github.com/awslabs/aws-sam-cli/releases/download/v0.48.0//aws-sam-cli-0.49.0.sierra.bottle.tar.gz\r\n#=#=#\r\ncurl: (22) The requested URL returned error: 404 Not Found\r\nError: Failed to download resource \"aws-sam-cli\"\r\nDownload failed: https://github.com/awslabs/aws-sam-cli/releases/download/v0.48.0//aws-sam-cli-0.49.0.sierra.bottle.tar.gz\r\nWarning: Bottle installation failed: building from source.\r\n==> Downloading https://api.github.com/repos/awslabs/aws-sam-cli/tarball/v0.49.0\r\n==> Downloading from https://codeload.github.com/awslabs/aws-sam-cli/legacy.tar.gz/v0.49.0\r\n######################################################################## 100.0%\r\n==> Downloading https://files.pythonhosted.org/packages/11/74/2c151a13ef41ab9fb43b3c4ff9e788e0496ed7923b2078d42cab30622bdf/virtualenv-16.7.4.tar.gz\r\n######################################################################## 100.0%\r\n==> python3 -c import setuptools... --no-user-cfg install --prefix=/private/tmp/aws-sam-cli--homebrew-virtualenv-20200514-57734-1ap59xn/target --install-scripts=/private/tmp/aws-sam-cli--homebrew-virtualenv-20200514-57734-1ap59xn/target\r\n==> python3 -s /private/tmp/aws-sam-cli--homebrew-virtualenv-20200514-57734-1ap59xn/target/bin/virtualenv -p python3 /usr/local/Cellar/aws-sam-cli/0.49.0/libexec\r\n==> /usr/local/Cellar/aws-sam-cli/0.49.0/libexec/bin/pip install pip==19.2.3\r\n==> /usr/local/Cellar/aws-sam-cli/0.49.0/libexec/bin/pip install -v --ignore-installed /private/tmp/aws-sam-cli-20200514-57734-zvwuv8/awslabs-aws-sam-cli-2f46818\r\n==> /usr/local/Cellar/aws-sam-cli/0.49.0/libexec/bin/pip uninstall -y aws-sam-cli\r\n==> /usr/local/Cellar/aws-sam-cli/0.49.0/libexec/bin/pip install -v --no-deps --no-binary :all: --ignore-installed /private/tmp/aws-sam-cli-20200514-57734-zvwuv8/awslabs-aws-sam-cli-2f46818\r\n\ud83c\udf7a  /usr/local/Cellar/aws-sam-cli/0.49.0: 6,223 files, 81.1MB, built in 1 minute 39 seconds\r\nRemoving: /usr/local/Cellar/aws-sam-cli/0.48.0... (4,719 files, 70MB)\r\nRemoving: /Users/mark/Library/Caches/Homebrew/aws-sam-cli--0.48.0.sierra.bottle.tar.gz... (11.6MB)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1981", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1981/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1981/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1981/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1981", "id": 617473664, "node_id": "MDU6SXNzdWU2MTc0NzM2NjQ=", "number": 1981, "title": "Security Token Invalid when debugging with VS Code and web proxy with self signed CA Certificates", "user": {"login": "boyersnet", "id": 4369044, "node_id": "MDQ6VXNlcjQzNjkwNDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4369044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boyersnet", "html_url": "https://github.com/boyersnet", "followers_url": "https://api.github.com/users/boyersnet/followers", "following_url": "https://api.github.com/users/boyersnet/following{/other_user}", "gists_url": "https://api.github.com/users/boyersnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/boyersnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boyersnet/subscriptions", "organizations_url": "https://api.github.com/users/boyersnet/orgs", "repos_url": "https://api.github.com/users/boyersnet/repos", "events_url": "https://api.github.com/users/boyersnet/events{/privacy}", "received_events_url": "https://api.github.com/users/boyersnet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T13:59:19Z", "updated_at": "2020-05-13T16:49:55Z", "closed_at": "2020-05-13T15:57:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nRequests to AWS API work as expected when invoking a lambda function from the command line (powershell)\r\n\r\n`\r\nsam local invoke --profile MYPROFILE -e testEvent.json --debug\r\n`\r\n\r\nbut fails to execute successfully when executed in VS Code in \"Run\" or \"Debug\" via code lens.  In my environment variables, I'm passing my CA cert bundle as we are behind a web proxy with SSL \"man in the middle\".  The function works as expected when run in the AWS Web Console.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Set the profile in the AWS Toolkit extension\r\n2. Configure the test event and evironment variables by clicking on the configure code lens link and update the json file.\r\n3. Click the Debug Locally code lens link and step through the function.\r\n\r\n### Observed result\r\n\r\n`\r\n2020-05-13T13:42:32.725Z\t97699084-d7f2-1701-a556-18e107b59f4a\tINFO\tUnrecognizedClientException: The security token included in the request is invalid.\r\n    at Request.extractError (/var/runtime/node_modules/aws-sdk/lib/protocol/json.js:51:27)\r\n    at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:106:20)\r\n    at Request.emit (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:78:10)\r\n    at Request.emit (/var/runtime/node_modules/aws-sdk/lib/request.js:683:14)\r\n    at Request.transition (/var/runtime/node_modules/aws-sdk/lib/request.js:22:10)\r\n    at AcceptorStateMachine.runTo (/var/runtime/node_modules/aws-sdk/lib/state_machine.js:14:12)\r\n    at /var/runtime/node_modules/aws-sdk/lib/state_machine.js:26:10\r\n    at Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:38:9)\r\n    at Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:685:12)\r\n    at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:116:18) {\r\n  message: 'The security token included in the request is invalid.',\r\n  code: 'UnrecognizedClientException',\r\n  time: 2020-05-13T13:42:27.440Z,\r\n  requestId: '349615dc-cc68-45a0-8ae0-ab04fcb50aa3',\r\n  statusCode: 400,\r\n  retryable: false,\r\n  retryDelay: 23.370331489961416\r\n} UnrecognizedClientException: The security token included in the request is invalid.\r\n    at Request.extractError (/var/runtime/node_modules/aws-sdk/lib/protocol/json.js:51:27)\r\n    at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:106:20)\r\n    at Request.emit (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:78:10)\r\n    at Request.emit (/var/runtime/node_modules/aws-sdk/lib/request.js:683:14)\r\n    at Request.transition (/var/runtime/node_modules/aws-sdk/lib/request.js:22:10)\r\n    at AcceptorStateMachine.runTo (/var/runtime/node_modules/aws-sdk/lib/state_machine.js:14:12)\r\n    at /var/runtime/node_modules/aws-sdk/lib/state_machine.js:26:10\r\n    at Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:38:9)\r\n    at Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:685:12)\r\n    at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:116:18)\r\n`\r\n\r\n### Expected result\r\n\r\nI expect the function to execute the AWS API request and return the appropriate response.\r\n`\r\nvar ssmResponse = await ssm.getParameters(params).promise();\r\n`\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10\r\n2. `sam --version`: 0.48.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1975", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1975/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1975/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1975/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1975", "id": 615781052, "node_id": "MDU6SXNzdWU2MTU3ODEwNTI=", "number": 1975, "title": "Getting Error: Object cannot be parsed into a string. Raw object: {Fn::FindInMap=[RegionMap, {Ref=AWS::Region}, bucketname]} when trying to publish template", "user": {"login": "SumoSourabh", "id": 45626610, "node_id": "MDQ6VXNlcjQ1NjI2NjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/45626610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SumoSourabh", "html_url": "https://github.com/SumoSourabh", "followers_url": "https://api.github.com/users/SumoSourabh/followers", "following_url": "https://api.github.com/users/SumoSourabh/following{/other_user}", "gists_url": "https://api.github.com/users/SumoSourabh/gists{/gist_id}", "starred_url": "https://api.github.com/users/SumoSourabh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SumoSourabh/subscriptions", "organizations_url": "https://api.github.com/users/SumoSourabh/orgs", "repos_url": "https://api.github.com/users/SumoSourabh/repos", "events_url": "https://api.github.com/users/SumoSourabh/events{/privacy}", "received_events_url": "https://api.github.com/users/SumoSourabh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1192980000, "node_id": "MDU6TGFiZWwxMTkyOTgwMDAw", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/publish", "name": "area/publish", "color": "1590af", "default": false, "description": "Issues/PRs that relate to the `sam publish` command"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-11T10:38:31Z", "updated_at": "2020-07-02T13:53:30Z", "closed_at": "2020-07-02T13:53:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nWhen trying to publish SAM app using a CF template, getting issue as Object cannot be parsed into a string. Raw object: {Fn::FindInMap=[RegionMap, {Ref=AWS::Region}, bucketname]} .\r\n\r\nI am using serverless function resource with bucket as combination of findinmap as below\r\n  SumoLogicHelperFunction:\r\n    Type: 'AWS::Serverless::Function'\r\n    Condition: do_not_use_parent_stack\r\n    Properties:\r\n      FunctionName: !Join\r\n        - \"\"\r\n        - - !Sub \"sumo-lambda-${Section2aAccountAlias}-\"\r\n          - !Select\r\n            - 0\r\n            - !Split\r\n              - \"-\"\r\n              - !Select\r\n                - 2\r\n                - !Split [\"/\", !Ref \"AWS::StackId\"]\r\n      Handler: main.handler\r\n      Runtime: python3.7\r\n      CodeUri:\r\n        Bucket: !FindInMap\r\n          - RegionMap\r\n          - !Ref 'AWS::Region'\r\n          - bucketname\r\n        Key: \"sumologic-aws-observability/SumoLogicAWSObservabilityHelper/SumoLogicAWSObservabilityHelper.zip\"\r\n      MemorySize: 128\r\n      Timeout: 900\r\n      Role:\r\n        Fn::GetAtt:\r\n          - SumoLogicHelperRole\r\n          - Arn\r\n\r\n### Steps to reproduce\r\n\r\nUse the above Resource and try to publish the sam app.\r\n\r\n### Observed result\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nPublish Failed\r\nFailed to publish application to serverlessrepo\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/serverlessrepo/publish.py\", line 45, in publish_application\r\n    response = sar_client.create_application(**request)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/botocore/client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/botocore/client.py\", line 626, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.errorfactory.BadRequestException: An error occurred (BadRequestException) when calling the CreateApplication operation: Object cannot be parsed into a string. Raw object: {Fn::FindInMap=[RegionMap, {Ref=AWS::Region}, bucketname]}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/samcli/commands/publish/command.py\", line 77, in do_cli\r\n    publish_output = publish_application(template_data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/serverlessrepo/publish.py\", line 50, in publish_application\r\n    raise _wrap_client_error(e)\r\nserverlessrepo.exceptions.ServerlessRepoClientError: Object cannot be parsed into a string. Raw object: {Fn::FindInMap=[RegionMap, {Ref=AWS::Region}, bucketname]}\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': 'us-east-1', 'commandName': 'sam publish', 'duration': 2930, 'exitReason': 'ServerlessRepoClientError', 'exitCode': 1, 'requestId': 'e5cfe0b9-d3e6-4594-907d-e8764cda5973', 'installationId': '8590c35b-73ba-4143-ab38-1cd91776b337', 'sessionId': '44464003-11bb-43cc-9902-ed891eb97a40', 'executionEnvironment': 'CLI', 'pyversion': '3.7.1', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: Object cannot be parsed into a string. Raw object: {Fn::FindInMap=[RegionMap, {Ref=AWS::Region}, bucketname]}\r\nPlease follow the instructions in https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-publishing-\r\n\r\n### Expected result\r\n\r\nApp should be published.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: MacOS Mojave\r\n2. `sam --version`: SAM CLI, version 0.48.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1974", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1974/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1974/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1974/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1974", "id": 615777841, "node_id": "MDU6SXNzdWU2MTU3Nzc4NDE=", "number": 1974, "title": "vscode debug fail under WSL2: pip executable not found in your python environment", "user": {"login": "CircleOnCircles", "id": 8089231, "node_id": "MDQ6VXNlcjgwODkyMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8089231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CircleOnCircles", "html_url": "https://github.com/CircleOnCircles", "followers_url": "https://api.github.com/users/CircleOnCircles/followers", "following_url": "https://api.github.com/users/CircleOnCircles/following{/other_user}", "gists_url": "https://api.github.com/users/CircleOnCircles/gists{/gist_id}", "starred_url": "https://api.github.com/users/CircleOnCircles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CircleOnCircles/subscriptions", "organizations_url": "https://api.github.com/users/CircleOnCircles/orgs", "repos_url": "https://api.github.com/users/CircleOnCircles/repos", "events_url": "https://api.github.com/users/CircleOnCircles/events{/privacy}", "received_events_url": "https://api.github.com/users/CircleOnCircles/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200206, "node_id": "MDU6TGFiZWw3OTcyMDAyMDY=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/debugging", "name": "area/debugging", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-11T10:33:21Z", "updated_at": "2020-07-20T22:21:28Z", "closed_at": "2020-07-20T22:21:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nFacing a debug error using vscode WSL2. \r\nAt first, I thought It is likely that my python installation was wrong.\r\n\r\nbut, after using the same python `/usr/bin/python3.8` to\r\n`/usr/bin/python3.8 -m pip` it is work as expect.\r\n\r\n### Steps to reproduce\r\n\r\n1. run Ubuntu on Windows 10 WSL2 \r\n2. Connect Vscode to Ubuntu  WSL2\r\n3. set up aws and aws sam cli\r\n4. click debug locally on the hello world template `lambda_handler()` function\r\n\r\n### Observed result\r\nThis is the log from VScode output AWS Toolkit Logs\r\n```\r\nError logs for this session are permanently stored in /home/cocs/.config/Code/logs/aws_toolkit/aws_toolkit_20200511T171542.log\r\n2020-05-11 17:15:42 [INFO]: Retrieving AWS endpoint data\r\n2020-05-11 17:15:42 [INFO]: OS:  Linux x64 4.19.84-microsoft-standard\r\nVisual Studio Code Version:  1.45.0\r\nAWS Toolkit Version:  1.9.0\r\n\r\n2020-05-11 17:15:50 [INFO]: Preparing to run app.lambda_handler locally...\r\n2020-05-11 17:15:50 [INFO]: Building SAM Application...\r\n2020-05-11 17:15:50 [INFO]: Running command: /home/linuxbrew/.linuxbrew/bin/sam --info\r\n2020-05-11 17:15:50 [INFO]: Running command: /home/linuxbrew/.linuxbrew/bin/sam build --build-dir /tmp/aws-toolkit-vscode/vsctk9rU9B5/output --template /tmp/aws-toolkit-vscode/vsctk9rU9B5/input/input-template.yaml --base-dir /mnt/c/Users/lifep/Devs/jobsbot/jobsbot/hello_world --manifest /tmp/aws-toolkit-vscode/vsctk9rU9B5/debug-requirements.txt\r\n2020-05-11 17:15:52 [ERROR]: Unexpected exitcode (1), expecting (0)\r\n2020-05-11 17:15:52 [ERROR]: Error: undefined\r\n2020-05-11 17:15:52 [ERROR]: stderr: Building resource 'awsToolkitSamLocalResource'\r\n,Running PythonPipBuilder:ResolveDependencies\r\n,Error: PythonPipBuilder:ResolveDependencies - pip executable not found in your python environment at /usr/bin/python3.8\r\n2020-05-11 17:15:52 [ERROR]: stdout: Build Failed\r\n2020-05-11 17:15:52 [ERROR]: An error occurred trying to run SAM Application locally: Error with child process: Building resource 'awsToolkitSamLocalResource'\r\n,Running PythonPipBuilder:ResolveDependencies\r\n,Error: PythonPipBuilder:ResolveDependencies - pip executable not found in your python environment at /usr/bin/python3.8 Error: Error with child process: Building resource 'awsToolkitSamLocalResource'\r\n,Running PythonPipBuilder:ResolveDependencies\r\n,Error: PythonPipBuilder:ResolveDependencies - pip executable not found in your python environment at /usr/bin/python3.8\r\n\tat Object.t.logAndThrowIfUnexpectedExitCode (/home/cocs/.vscode-server/extensions/amazonwebservices.aws-toolkit-vscode-1.9.0/dist/extension.js:2:475204)\r\n\tat t.SamCliBuildInvocation.<anonymous> (/home/cocs/.vscode-server/extensions/amazonwebservices.aws-toolkit-vscode-1.9.0/dist/extension.js:2:1209531)\r\n\tat Generator.next (<anonymous>)\r\n\tat o (/home/cocs/.vscode-server/extensions/amazonwebservices.aws-toolkit-vscode-1.9.0/dist/extension.js:2:1207761)\r\n\tat processTicksAndRejections (internal/process/task_queues.js:89:5)\r\n2020-05-11 17:20:44 [INFO]: Successfully sent a telemetry batch of 20\r\n2020-05-11 17:20:45 [INFO]: Successfully sent a telemetry batch of 5\r\n```\r\n\r\n### Expected result\r\n\r\nIt is successfully debug. \r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 WSL2 Ubuntu\r\n2. VS Code using WSL extension\r\n2. `sam --version`: SAM CLI, version 0.48.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1973", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1973/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1973/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1973/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1973", "id": 615439558, "node_id": "MDU6SXNzdWU2MTU0Mzk1NTg=", "number": 1973, "title": "Official docker image for sam cli? ", "user": {"login": "red8888", "id": 6265399, "node_id": "MDQ6VXNlcjYyNjUzOTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6265399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/red8888", "html_url": "https://github.com/red8888", "followers_url": "https://api.github.com/users/red8888/followers", "following_url": "https://api.github.com/users/red8888/following{/other_user}", "gists_url": "https://api.github.com/users/red8888/gists{/gist_id}", "starred_url": "https://api.github.com/users/red8888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/red8888/subscriptions", "organizations_url": "https://api.github.com/users/red8888/orgs", "repos_url": "https://api.github.com/users/red8888/repos", "events_url": "https://api.github.com/users/red8888/events{/privacy}", "received_events_url": "https://api.github.com/users/red8888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T17:37:42Z", "updated_at": "2020-05-11T02:17:24Z", "closed_at": "2020-05-11T02:17:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "AWS finally released an official image for the awscli but it doesn't look like it includes the sam cli? https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-docker.html\r\n\r\nIs sam going to be added to it or will there be an official sam cli image too? An official image is even _more_ important for the sam cli than the aws cli.\r\n\r\nThis is important especially for CI/CD. The `--use-container` switch is important for building in a supported lambda environment. Running locally thats fine but all modern CI/CD systems build inside of containers already, this means for  `--use-container` to work DinD must be configured correctly which requires additional work/setup and requires more resources for the CI/CD system to run DinD\r\n\r\nBUT if sam itself is already running in a container built from an image of a supported lambda environment `--use-container` isn't necessary.\r\n\r\nOf course I could roll my own sam cli image, but this is something AWS should maintain. So I can reference that official image in my CI/CD build tool easily and not have to rebuild and keep it up to date manually", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1971", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1971/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1971/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1971/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1971", "id": 614915013, "node_id": "MDU6SXNzdWU2MTQ5MTUwMTM=", "number": 1971, "title": "Get an error when trying the AWS tutorial for running a Lambda locally under SAM", "user": {"login": "nickweavers", "id": 194136, "node_id": "MDQ6VXNlcjE5NDEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/194136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickweavers", "html_url": "https://github.com/nickweavers", "followers_url": "https://api.github.com/users/nickweavers/followers", "following_url": "https://api.github.com/users/nickweavers/following{/other_user}", "gists_url": "https://api.github.com/users/nickweavers/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickweavers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickweavers/subscriptions", "organizations_url": "https://api.github.com/users/nickweavers/orgs", "repos_url": "https://api.github.com/users/nickweavers/repos", "events_url": "https://api.github.com/users/nickweavers/events{/privacy}", "received_events_url": "https://api.github.com/users/nickweavers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-08T18:44:28Z", "updated_at": "2020-05-09T13:07:25Z", "closed_at": "2020-05-09T13:07:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nWhen following the Tutorial: Deploying a Hello World Application here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html but using the node 12.x runtime instead of the Python one used in the example, I get an error when I send a request to the endpoint URL that is given.\r\n\r\n### Steps to reproduce\r\n\r\nMy system\r\nWindows 10 Pro version 1909 OS Build 18363.815 with WSL 1 running Ubuntu 18.04\r\nDocker Desktop for Windows \r\nUnder Ubuntu, Docker version 19.03.8, build afacb8b7f0 (Docker client)\r\nDocker Desktop setting\"Expose daemon on tcp://localhost:2375 without TLS\" is checked\r\n.bashrc contains ``export DOCKER_HOST=localhost:2375``\r\n```\r\n$ aws --version\r\naws-cli/2.0.0 Python/3.7.3 Linux/4.4.0-18362-Microsoft botocore/2.0.0dev4\r\n\r\n$ sam --version\r\nSAM CLI, version 0.48.0\r\n\r\n$ npm --version\r\n6.14.4\r\n\r\n$ node --version\r\nv12.16.3\r\n```\r\nWith the above setup, follow the step given in https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html\r\n\r\n### Observed result\r\n\r\n```\r\nnickw@nicks-xps-15-9560:/mnt/c/var/www/lambda\r\n$ sam init\r\n\r\n        SAM CLI now collects telemetry to better understand customer needs.\r\n\r\n        You can OPT OUT and disable telemetry collection by setting the\r\n        environment variable SAM_CLI_TELEMETRY=0 in your shell.\r\n        Thanks for your help!\r\n\r\n        Learn More: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-telemetry.html\r\n\r\nWhich template source would you like to use?\r\n        1 - AWS Quick Start Templates\r\n        2 - Custom Template Location\r\nChoice: 1\r\n\r\nWhich runtime would you like to use?\r\n        1 - nodejs12.x\r\n        2 - python3.8\r\n        3 - ruby2.7\r\n        4 - go1.x\r\n        5 - java11\r\n        6 - dotnetcore3.1\r\n        7 - nodejs10.x\r\n        8 - python3.7\r\n        9 - python3.6\r\n        10 - python2.7\r\n        11 - ruby2.5\r\n        12 - java8\r\n        13 - dotnetcore2.1\r\n        14 - dotnetcore2.0\r\n        15 - dotnetcore1.0\r\nRuntime: 1\r\n\r\nProject name [sam-app]:\r\n\r\nCloning app templates from https://github.com/awslabs/aws-sam-cli-app-templates.git\r\n\r\n-----------------------\r\nGenerating application:\r\n-----------------------\r\nName: sam-app\r\nRuntime: nodejs12.x\r\nDependency Manager: npm\r\nApplication Template: hello-world\r\nOutput Directory: .\r\n\r\nNext steps can be found in the README file at ./sam-app/README.md\r\n\r\nnickw@nicks-xps-15-9560:/mnt/c/var/www/lambda/sam-app\r\n$ sam build\r\nBuilding resource 'HelloWorldFunction'\r\nRunning NodejsNpmBuilder:NpmPack\r\nRunning NodejsNpmBuilder:CopyNpmrc\r\nRunning NodejsNpmBuilder:CopySource\r\nRunning NodejsNpmBuilder:NpmInstall\r\nRunning NodejsNpmBuilder:CleanUpNpmrc\r\n\r\nBuild Succeeded\r\n\r\nBuilt Artifacts  : .aws-sam/build\r\nBuilt Template   : .aws-sam/build/template.yaml\r\n\r\nCommands you can use next\r\n=========================\r\n[*] Invoke Function: sam local invoke\r\n[*] Deploy: sam deploy --guided\r\n\r\nnickw@nicks-xps-15-9560:/mnt/c/var/www/lambda/sam-app\r\n$ sam local start-api --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal start-api command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='HelloWorldFunction'\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound '1' API Events in Serverless function with name 'HelloWorldFunction'\r\nDetected Inline Swagger definition\r\nLambda function integration not found in Swagger document at path='/hello' method='get'\r\nFound '0' APIs in resource 'ServerlessRestApi'\r\nRemoved duplicates from '0' Explicit APIs and '1' Implicit APIs to produce '1' APIs\r\n1 APIs found in the template\r\nMounting HelloWorldFunction at http://127.0.0.1:3000/hello [GET]\r\nYou can now browse to the above endpoints to invoke your functions. You do not need to restart/reload SAM CLI while working on your functions, changes will be reflected instantly/automatically. You only need to restart SAM CLI if you update your AWS SAM template\r\nLocalhost server is starting up. Multi-threading = True\r\n2020-05-08 19:15:25  * Running on http://127.0.0.1:3000/ (Press CTRL+C to quit)\r\n```\r\nWhile the command remains in this running state, bring up another WSL bash terminal and enter\r\n\r\n```\r\nnickw@nicks-xps-15-9560:~\r\n$ curl http://127.0.0.1:3000/hello\r\n{\"message\":\"Internal server error\"}\r\n``` \r\nBack in the terminal that issued the statement ``Mounting HelloWorldFunction at http://127.0.0.1:3000/hello [GET]\r\nYou can now browse to the above endpoints to invoke your functions.``\r\nI see the following happen:\r\n```\r\nConstructed String representation of Event to invoke Lambda. Event: {\"httpMethod\": \"GET\", \"body\": null, \"resource\": \"/hello\", \"requestContext\": {\"resourceId\": \"123456\", \"apiId\": \"1234567890\", \"resourcePath\": \"/hello\", \"httpMethod\": \"GET\", \"requestId\": \"c6af9ac6-7b61-11e6-9a41-93e8deadbeef\", \"accountId\": \"123456789012\", \"stage\": \"Prod\", \"identity\": {\"apiKey\": null, \"userArn\": null, \"cognitoAuthenticationType\": null, \"caller\": null, \"userAgent\": \"Custom User Agent String\", \"user\": null, \"cognitoIdentityPoolId\": null, \"cognitoAuthenticationProvider\": null, \"sourceIp\": \"127.0.0.1\", \"accountId\": null}, \"extendedRequestId\": null, \"path\": \"/hello\"}, \"queryStringParameters\": null, \"multiValueQueryStringParameters\": null, \"headers\": {\"Host\": \"127.0.0.1:3000\", \"User-Agent\": \"curl/7.58.0\", \"Accept\": \"*/*\", \"X-Forwarded-Proto\": \"http\", \"X-Forwarded-Port\": \"3000\"}, \"multiValueHeaders\": {\"Host\": [\"127.0.0.1:3000\"], \"User-Agent\": [\"curl/7.58.0\"], \"Accept\": [\"*/*\"], \"X-Forwarded-Proto\": [\"http\"], \"X-Forwarded-Port\": [\"3000\"]}, \"pathParameters\": null, \"stageVariables\": null, \"path\": \"/hello\", \"isBase64Encoded\": false}\r\nFound one Lambda function with name 'HelloWorldFunction'\r\nInvoking app.lambdaHandler (nodejs12.x)\r\nNo environment variables found for function 'HelloWorldFunction'\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=/mnt/c/var/www/lambda/sam-app/.aws-sam/build, CodeUri=HelloWorldFunction\r\nResolved absolute path to code is /mnt/c/var/www/lambda/sam-app/.aws-sam/build/HelloWorldFunction\r\nCode /mnt/c/var/www/lambda/sam-app/.aws-sam/build/HelloWorldFunction is not a zip/jar file\r\nSkipping building an image since no layers were defined\r\n\r\nFetching lambci/lambda:nodejs12.x Docker container image.....\r\nMounting /mnt/c/var/www/lambda/sam-app/.aws-sam/build/HelloWorldFunction as /var/task:ro,delegated inside runtime container\r\nContainer was not created. Skipping deletion\r\n2020-05-08 19:19:13 Exception on /hello [GET]\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 261, in _raise_for_status\r\n    response.raise_for_status()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/requests/models.py\", line 941, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: http://localhost:2375/v1.35/containers/create\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 2317, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1840, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1743, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/flask/_compat.py\", line 36, in reraise\r\n    raise value\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1838, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1824, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/local/apigw/local_apigw_service.py\", line 200, in _request_handler\r\n    self.lambda_runner.invoke(route.function_name, event, stdout=stdout_stream_writer, stderr=self.stderr)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/local/lib/local_lambda.py\", line 100, in invoke\r\n    self.local_runtime.invoke(config, event, debug_context=self.debug_context, stdout=stdout, stderr=stderr)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/local/lambdafn/runtime.py\", line 83, in invoke\r\n    self._container_manager.run(container)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/local/docker/manager.py\", line 93, in run\r\n    container.create()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/local/docker/container.py\", line 133, in create\r\n    real_container = self.docker_client.containers.create(self._image, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/models/containers.py\", line 861, in create\r\n    resp = self.client.api.create_container(**create_kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/api/container.py\", line 430, in create_container\r\n    return self.create_container_from_config(config, name)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/api/container.py\", line 441, in create_container_from_config\r\n    return self._result(res, True)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 267, in _result\r\n    self._raise_for_status(response)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/api/client.py\", line 263, in _raise_for_status\r\n    raise create_api_error_from_http_exception(e)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/docker/errors.py\", line 31, in create_api_error_from_http_exception\r\n    raise cls(e, response=response, explanation=explanation)\r\ndocker.errors.ImageNotFound: 404 Client Error: Not Found (\"No such image: lambci/lambda:nodejs12.x\")\r\n2020-05-08 19:19:14 127.0.0.1 - - [08/May/2020 19:19:14] \"GET /hello HTTP/1.1\" 502 -\r\n```\r\n\r\n### Expected result\r\n\r\nDescribe what you expected.\r\n\r\nI expected the equivalent output for the Node version of the example that is shown in the https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html at step 4 here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html#serverless-getting-started-hello-world-test-locally where they show the results for a Python example\r\n\r\n```\r\n2019-07-12 15:29:57 Invoking app.lambda_handler (python3.7)\r\n 2019-07-12 15:29:57 Found credentials in shared credentials file: ~/.aws/credentials\r\n\r\n Fetching lambci/lambda:python3.7 Docker container image......\r\n 2019-07-12 15:29:58 Mounting /<working-development-path>/sam-app/.aws-sam/build/HelloWorldFunction as /var/task:ro,delegated inside runtime container\r\n START RequestId: 52fdfc07-2182-154f-163f-5f0f9a621d72 Version: $LATEST\r\n END RequestId: 52fdfc07-2182-154f-163f-5f0f9a621d72\r\n REPORT RequestId: 52fdfc07-2182-154f-163f-5f0f9a621d72  Duration: 7.92 ms       Billed Duration: 100 ms Memory Size: 128 MB     Max Memory Used: 22 MB\r\n {\"statusCode\":200,\"body\":\"{\\\"message\\\": \\\"hello world\\\"}\"}\r\n``` \r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\nWindows 10 Pro version 1909 OS Build 18363.815 with WSL 1 running Ubuntu 18.04\r\nDocker Desktop for Windows \r\nUnder Ubuntu, Docker version 19.03.8, build afacb8b7f0 (Docker client)\r\nDocker Desktop setting\"Expose daemon on tcp://localhost:2375 without TLS\" is checked\r\n.bashrc contains ``export DOCKER_HOST=localhost:2375``\r\n```\r\n$ aws --version\r\naws-cli/2.0.0 Python/3.7.3 Linux/4.4.0-18362-Microsoft botocore/2.0.0dev4\r\n\r\n$ sam --version\r\nSAM CLI, version 0.48.0\r\n\r\n$ npm --version\r\n6.14.4\r\n\r\n$ node --version\r\nv12.16.3\r\n```\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1970", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1970/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1970/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1970/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1970", "id": 614509157, "node_id": "MDU6SXNzdWU2MTQ1MDkxNTc=", "number": 1970, "title": ".net core - sam build command fails when private feeds in Nuget.Config", "user": {"login": "fvilches17", "id": 13502806, "node_id": "MDQ6VXNlcjEzNTAyODA2", "avatar_url": "https://avatars0.githubusercontent.com/u/13502806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fvilches17", "html_url": "https://github.com/fvilches17", "followers_url": "https://api.github.com/users/fvilches17/followers", "following_url": "https://api.github.com/users/fvilches17/following{/other_user}", "gists_url": "https://api.github.com/users/fvilches17/gists{/gist_id}", "starred_url": "https://api.github.com/users/fvilches17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fvilches17/subscriptions", "organizations_url": "https://api.github.com/users/fvilches17/orgs", "repos_url": "https://api.github.com/users/fvilches17/repos", "events_url": "https://api.github.com/users/fvilches17/events{/privacy}", "received_events_url": "https://api.github.com/users/fvilches17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-08T05:15:55Z", "updated_at": "2020-07-27T09:00:59Z", "closed_at": "2020-07-27T09:00:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nUnable to use commands like `sam build` when working with .net core templates.\r\n\r\nThe sam cli uses dotnet global tools(s). \r\n\r\nE.g. from debug logs (i.e. when running sam build --debug):\r\n`executing dotnet: ['dotnet.exe', 'tool', 'install', '-g', 'Amazon.Lambda.Tools']`\r\n\r\nWhen executing these dotnet commands, the dotnet cli will perform a `dotnet restore`. \r\n\r\n`dotnet restore` scans the user's machine global Nuget.Config file in order to get feed sources. *On **Windows** this config file is located in C:\\Users\\<user>\\AppData\\Roaming\\NuGet\r\n\r\nIf the Nuget.Config file contains private feed sources (e.g. Azure Artifacts) this will generate an Http 401 Unauthorized error, which in turn generates an unrecoverable exception.\r\n\r\nAs a result, when running the command `sam build` , we get an error which includes this message\r\n\r\n> executing dotnet: ['dotnet.exe', 'tool', 'update', '-g', 'Amazon.Lambda.Tools']\r\n> C:\\Program Files\\dotnet\\sdk\\3.1.201\\NuGet.targets(124,5): error : Unable to load the service index for source\r\n\r\nTo solve this, Microsoft introduced the flag --ignore-failed-sources. E.g. `dotnet tool install \"Amazon.Lambda.Tools\" -g --ignore-failed-sources`\r\n\r\nThis bug is pretty much a request to add this flag when the sam cli uses the dotnet cli under the hood for the sam build method (and any others applicable ones)\r\n\r\n### Steps to reproduce\r\n\r\n1. Add a private feed. Easiest way to do is through Visual Studio (not vscode). Tools > Nuget Package Manager > Package Manager Settings > Package Sources > Add\r\n\r\n2. Make sure you have the Sam cli installed. https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-windows.html\r\n\r\n3. In command prompt or powershell, run the following command: `sam init`\r\n\r\n4. Choose option 1 (AWS Quick Start Templates)\r\n\r\n5. Choose option 6 (dotnetcore3.1)\r\n\r\n6. Press enter for default project name\r\n\r\n7. step over to the sam-app directory. e.g. `cd sam-app` \r\n\r\n8. run the command `sam build --debug`\r\n\r\n### Observed result\r\n\r\n```\r\nPS C:\\Users\\<user>\\Desktop\\sam-training\\sam-app-netcore> sam build --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nNo Parameters detected in the template\r\n2 resources found in the template\r\nFound Serverless function with name='HelloWorldFunction' and CodeUri='./src/HelloWorld/'\r\nBuilding resource 'HelloWorldFunction'\r\nLoading workflow module 'aws_lambda_builders.workflows'\r\nRegistering workflow 'PythonPipBuilder' with capability 'Capability(language='python', dependency_manager='pip', application_framework=None)'\r\nRegistering workflow 'NodejsNpmBuilder' with capability 'Capability(language='nodejs', dependency_manager='npm', application_framework=None)'\r\nRegistering workflow 'RubyBundlerBuilder' with capability 'Capability(language='ruby', dependency_manager='bundler', application_framework=None)'\r\nRegistering workflow 'GoDepBuilder' with capability 'Capability(language='go', dependency_manager='dep', application_framework=None)'\r\nRegistering workflow 'GoModulesBuilder' with capability 'Capability(language='go', dependency_manager='modules', application_framework=None)'\r\nRegistering workflow 'JavaGradleWorkflow' with capability 'Capability(language='java', dependency_manager='gradle', application_framework=None)'\r\nRegistering workflow 'JavaMavenWorkflow' with capability 'Capability(language='java', dependency_manager='maven', application_framework=None)'\r\nRegistering workflow 'DotnetCliPackageBuilder' with capability 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nFound workflow 'DotnetCliPackageBuilder' to support capabilities 'Capability(language='dotnet', dependency_manager='cli-package', application_framework=None)'\r\nRunning workflow 'DotnetCliPackageBuilder'\r\nRunning DotnetCliPackageBuilder:GlobalToolInstall\r\nInstalling Amazon.Lambda.Tools Global Tool\r\nexecuting dotnet: ['dotnet.exe', 'tool', 'install', '-g', 'Amazon.Lambda.Tools']\r\n\r\nError installing probably due to already installed. Attempt to update to latest version.\r\nexecuting dotnet: ['dotnet.exe', 'tool', 'update', '-g', 'Amazon.Lambda.Tools']\r\nC:\\Program Files\\dotnet\\sdk\\3.1.201\\NuGet.targets(124,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/vmob/_packaging/Plexure%40Local/nuget/v3/index.json. [C:\\Users\\<user>\\AppData\\Local\\Temp\\bnf4whzu.d3g\\restore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.201\\NuGet.targets(124,5): error :   Response status code does not indicate success: 401 (Unauthorized). [C:\\Users\\<user>\\AppData\\Local\\Temp\\bnf4whzu.d3g\\restore.csproj]\r\nDotnetCliPackageBuilder:GlobalToolInstall failed\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\actions.py\", line 33, in execute\r\n    self.subprocess_dotnet.run([\"tool\", \"install\", \"-g\", \"Amazon.Lambda.Tools\"])\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\dotnetcli.py\", line 62, in run\r\n    raise DotnetCLIExecutionError(message=err.decode(\"utf8\").strip())\r\naws_lambda_builders.workflows.dotnet_clipackage.dotnetcli.DotnetCLIExecutionError: Dotnet CLI Failed: Tool 'amazon.lambda.tools' is already installed.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\actions.py\", line 37, in execute\r\n    self.subprocess_dotnet.run([\"tool\", \"update\", \"-g\", \"Amazon.Lambda.Tools\"])\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\dotnetcli.py\", line 62, in run\r\n    raise DotnetCLIExecutionError(message=err.decode(\"utf8\").strip())\r\naws_lambda_builders.workflows.dotnet_clipackage.dotnetcli.DotnetCLIExecutionError: Dotnet CLI Failed: Tool 'amazon.lambda.tools' failed to update due to the following:\r\nThe tool package could not be restored.\r\nTool 'amazon.lambda.tools' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflow.py\", line 269, in run\r\n    action.execute()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\aws_lambda_builders\\workflows\\dotnet_clipackage\\actions.py\", line 39, in execute\r\n    raise ActionFailedError(\"Error configuring the Amazon.Lambda.Tools .NET Core Global Tool: \" + str(ex))\r\naws_lambda_builders.actions.ActionFailedError: Error configuring the Amazon.Lambda.Tools .NET Core Global Tool: Dotnet CLI Failed: Tool 'amazon.lambda.tools' failed to update due to the following:\r\nThe tool package could not be restored.\r\nTool 'amazon.lambda.tools' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n\r\nBuild Failed\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 3561, 'exitReason': 'WorkflowFailedError', 'exitCode': 1, 'requestId': '53cfbe8e-f1ae-474d-8da0-559087c288a8', 'installationId': '63c43b0f-6ab0-4772-ba8b-9940b250a669', 'sessionId': 'c9bf8eb8-82eb-4f42-8919-df6cf1d66b55', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: DotnetCliPackageBuilder:GlobalToolInstall - Error configuring the Amazon.Lambda.Tools .NET Core Global Tool: Dotnet CLI Failed: Tool 'amazon.lambda.tools' failed to update due to the following:\r\nThe tool package could not be restored.\r\nTool 'amazon.lambda.tools' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\nPS C:\\Users\\<user>\\Desktop\\sam-training\\sam-app-netcore>\r\n```\r\n\r\n### Expected result\r\n\r\nAs a workaround, if I uncomment any private feeds in the Nuget.Config file, then it works.\r\n\r\nE.g.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n    <add key=\"Microsoft Visual Studio Offline Packages\" value=\"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\" />\r\n    <!-- <add key=\"myfeed\" value=\"https://pkgs.dev.azure.com/vmob/_packaging/myfeed/nuget/v3/index.json\" /> -->\r\n  </packageSources>\r\n  <packageRestore>\r\n    <add key=\"enabled\" value=\"True\" />\r\n    <add key=\"automatic\" value=\"True\" />\r\n  </packageRestore>\r\n  <bindingRedirects>\r\n    <add key=\"skip\" value=\"False\" />\r\n  </bindingRedirects>\r\n  <packageManagement>\r\n    <add key=\"format\" value=\"0\" />\r\n    <add key=\"disabled\" value=\"False\" />\r\n  </packageManagement>\r\n</configuration>\r\n```\r\n\r\nResult\r\n`sam build`\r\n\r\n```\r\nPS C:\\Users\\<user>\\Desktop\\gh\\sam-app> sam build\r\nBuilding resource 'HelloWorldFunction'\r\nRunning DotnetCliPackageBuilder:GlobalToolInstall\r\n\r\nTool 'amazon.lambda.tools' was reinstalled with the latest stable version (version '4.0.0').\r\nRunning DotnetCliPackageBuilder:RunPackageAction\r\nAmazon Lambda Tools for .NET Core applications (4.0.0)\r\nProject Home: https://github.com/aws/aws-extensions-for-dotnet-cli, https://github.com/aws/aws-lambda-dotnet\r\n\r\nExecuting publish command\r\n... invoking 'dotnet publish', working folder 'C:\\Users\\<user>\\Desktop\\gh\\sam-app\\src\\HelloWorld\\bin\\Release\\netcoreapp3.1\\publish'\r\n... publish: Microsoft (R) Build Engine version 16.5.0+d4cbfca49 for .NET Core\r\n... publish: Copyright (C) Microsoft Corporation. All rights reserved.\r\n... publish:   Restore completed in 201.84 ms for C:\\Users\\<user>\\Desktop\\gh\\sam-app\\src\\HelloWorld\\HelloWorld.csproj.\r\n... publish:   HelloWorld -> C:\\Users\\<user>\\Desktop\\gh\\sam-app\\src\\HelloWorld\\bin\\Release\\netcoreapp3.1\\linux-x64\\HelloWorld.dll\r\n... publish:   HelloWorld -> C:\\Users\\<user>\\Desktop\\gh\\sam-app\\src\\HelloWorld\\bin\\Release\\netcoreapp3.1\\publish\\\r\nZipping publish folder C:\\Users\\<user>\\Desktop\\gh\\sam-app\\src\\HelloWorld\\bin\\Release\\netcoreapp3.1\\publish to C:\\Users\\<user>\\Desktop\\gh\\sam-app\\.aws-sam\\build\\HelloWorldFunction\\HelloWorld.zip\r\nCreating directory C:\\Users\\<user>\\Desktop\\gh\\sam-app\\.aws-sam\\build\\HelloWorldFunction\r\n... zipping: Amazon.Lambda.APIGatewayEvents.dll\r\n... zipping: Amazon.Lambda.Core.dll\r\n... zipping: Amazon.Lambda.Serialization.Json.dll\r\n... zipping: HelloWorld.deps.json\r\n... zipping: HelloWorld.dll\r\n... zipping: HelloWorld.pdb\r\n... zipping: HelloWorld.runtimeconfig.json\r\n... zipping: Newtonsoft.Json.dll\r\nCreated publish archive (C:\\Users\\<user>\\Desktop\\gh\\sam-app\\.aws-sam\\build\\HelloWorldFunction\\HelloWorld.zip).\r\nLambda project successfully packaged: C:\\Users\\<user>\\Desktop\\gh\\sam-app\\.aws-sam\\build\\HelloWorldFunction\\HelloWorld.zip\r\n\r\nBuild Succeeded\r\n\r\nBuilt Artifacts  : .aws-sam\\build\r\nBuilt Template   : .aws-sam\\build\\template.yaml\r\n\r\nCommands you can use next\r\n=========================\r\n[*] Invoke Function: sam local invoke\r\n[*] Deploy: sam deploy --guided\r\n```\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 1909\r\n\r\n2. `sam --version`: 0.48.0\r\n\r\n3. .net core sdk version installed on machine: 3.1.201\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1964", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1964/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1964/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1964/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1964", "id": 612218409, "node_id": "MDU6SXNzdWU2MTIyMTg0MDk=", "number": 1964, "title": "Debugging with custom PHP runtime", "user": {"login": "umair-khokhar", "id": 4765806, "node_id": "MDQ6VXNlcjQ3NjU4MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4765806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umair-khokhar", "html_url": "https://github.com/umair-khokhar", "followers_url": "https://api.github.com/users/umair-khokhar/followers", "following_url": "https://api.github.com/users/umair-khokhar/following{/other_user}", "gists_url": "https://api.github.com/users/umair-khokhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/umair-khokhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umair-khokhar/subscriptions", "organizations_url": "https://api.github.com/users/umair-khokhar/orgs", "repos_url": "https://api.github.com/users/umair-khokhar/repos", "events_url": "https://api.github.com/users/umair-khokhar/events{/privacy}", "received_events_url": "https://api.github.com/users/umair-khokhar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200190, "node_id": "MDU6TGFiZWw3OTcyMDAxOTA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/feature", "name": "type/feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T22:51:02Z", "updated_at": "2020-07-24T20:25:22Z", "closed_at": "2020-07-24T20:25:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have built and compiled custom PHP runtime for my lambda functions. I am using sam cli to run the functions locally. I am using VS code for coding. When I try to debug my application I can't get it to work. See logs below\r\n\r\n```\r\nMounting HelloFunction at http://127.0.0.1:3000/hello [GET]\r\nYou can now browse to the above endpoints to invoke your functions. You do not need to restart/reload SAM CLI while working on your functions, changes will be reflected instantly/automatically. You only need to restart SAM CLI if you update your AWS SAM template\r\n2020-05-04 15:47:33  * Running on http://127.0.0.1:3000/ (Press CTRL+C to quit)\r\nInvoking functions/api/handler.hello (provided)\r\nPHPLayer is a local Layer in the template\r\nBuilding image...\r\n2020-05-04 15:47:44 Exception on /hello [GET]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/local/docker/lambda_debug_settings.py\", line 215, in get_debug_settings\r\n    return entrypoint_mapping[runtime]\r\nKeyError: 'provided'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 2317, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1840, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1743, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/flask/_compat.py\", line 36, in reraise\r\n    raise value\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1838, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/flask/app.py\", line 1824, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/local/apigw/local_apigw_service.py\", line 200, in _request_handler\r\n    self.lambda_runner.invoke(route.function_name, event, stdout=stdout_stream_writer, stderr=self.stderr)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/commands/local/lib/local_lambda.py\", line 100, in invoke\r\n    self.local_runtime.invoke(config, event, debug_context=self.debug_context, stdout=stdout, stderr=stderr)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/local/lambdafn/runtime.py\", line 77, in invoke\r\n    debug_options=debug_context,\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/local/docker/lambda_container.py\", line 74, in __init__\r\n    entry, debug_env_vars = LambdaContainer._get_debug_settings(runtime, debug_options)\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/local/docker/lambda_container.py\", line 207, in _get_debug_settings\r\n    options=LambdaContainer._DEBUG_ENTRYPOINT_OPTIONS,\r\n  File \"/usr/local/Cellar/aws-sam-cli/0.47.0/libexec/lib/python3.7/site-packages/samcli/local/docker/lambda_debug_settings.py\", line 217, in get_debug_settings\r\n    raise DebuggingNotSupported(\"Debugging is not currently supported for {}\".format(runtime))\r\nsamcli.local.docker.lambda_debug_settings.DebuggingNotSupported: Debugging is not currently supported for provided\r\n```\r\n\r\n\r\nMy Vscode launch.json looks like \r\n\r\n```\r\n{\r\n    // Use IntelliSense to learn about possible attributes.\r\n    // Hover to view descriptions of existing attributes.\r\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\r\n    \"version\": \"0.2.0\",\r\n    \"configurations\": [\r\n        {\r\n            \"name\": \"Listen for XDebug\",\r\n            \"type\": \"php\",\r\n            \"request\": \"launch\",\r\n            \"port\": 9000,\r\n            \"pathMappings\": {\r\n                \"/var/task\": \"<path to my code directory>/api\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n### Proposal\r\n\r\nCan we add support to debug while using custom PHP runtime?\r\n\r\n### Additional Details\r\nI am able to run and test functions locally using `sam local start-api`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1963", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1963/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1963/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1963/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1963", "id": 611492335, "node_id": "MDU6SXNzdWU2MTE0OTIzMzU=", "number": 1963, "title": "[ERROR] Runtime.ImportModuleError: Unable to import module", "user": {"login": "debojit777", "id": 9392710, "node_id": "MDQ6VXNlcjkzOTI3MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9392710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debojit777", "html_url": "https://github.com/debojit777", "followers_url": "https://api.github.com/users/debojit777/followers", "following_url": "https://api.github.com/users/debojit777/following{/other_user}", "gists_url": "https://api.github.com/users/debojit777/gists{/gist_id}", "starred_url": "https://api.github.com/users/debojit777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debojit777/subscriptions", "organizations_url": "https://api.github.com/users/debojit777/orgs", "repos_url": "https://api.github.com/users/debojit777/repos", "events_url": "https://api.github.com/users/debojit777/events{/privacy}", "received_events_url": "https://api.github.com/users/debojit777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-03T19:50:46Z", "updated_at": "2020-07-02T09:46:20Z", "closed_at": "2020-05-06T17:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "sam issue\r\n\r\nHello SAM - LAMBDA users,\r\n\r\nOn running :\r\n\r\n```bash\r\nsam local start-api --env-vars test/sample/integration_test/environment.json\r\n```\r\n\r\nand \r\n\r\n```bash\r\ncurl http://127.0.0.1:3000/sample\r\n```\r\nGetting below error  \r\n\r\n```bash\r\nSTART RequestId: 156a4eec-0ec1-182f-d06e-04bfce652b1f Version: $LATEST\r\n[ERROR] Runtime.ImportModuleError: Unable to import module 'list_handler': No module named 'src'\r\nEND RequestId: 156a4eec-0ec1-182f-d06e-04bfce652b1f\r\nREPORT RequestId: 156a4eec-0ec1-182f-d06e-04bfce652b1f  Init Duration: 537.49 ms    Duration: 4.27 ms   Billed Duration: 100 ms Memory Size: 1024 MB    Max Memory Used: 32 MB  \r\nLambda returned empty body!\r\nInvalid API Gateway Response Keys: {'errorType', 'errorMessage'} in {'errorType': 'Runtime.ImportModuleError', 'errorMessage': \"Unable to import module 'list_handler': No module named 'src'\"}\r\n<class 'samcli.local.apigw.local_apigw_service.LambdaResponseParseException'>\r\n```\r\n\r\nThis is my project structure\r\n\r\n```bash\r\n.\r\n\u251c\u2500\u2500 README.md\r\n\u251c\u2500\u2500 api-event.json\r\n\u251c\u2500\u2500 environment.json\r\n\u251c\u2500\u2500 events\r\n\u2502   \u2514\u2500\u2500 event.json\r\n\u251c\u2500\u2500 src\r\n\u2502   \u2514\u2500\u2500 sample\r\n\u2502       \u251c\u2500\u2500 handler\r\n\u2502       \u2502   \u251c\u2500\u2500 create_handler.py\r\n\u2502       \u2502   \u251c\u2500\u2500 get_handler.py\r\n\u2502       \u2502   \u251c\u2500\u2500 list_handler.py\r\n\u2502       \u2502   \u251c\u2500\u2500 requirements.txt\r\n\u2502       \u2514\u2500\u2500 helper\r\n\u2502           \u251c\u2500\u2500 dynamodb_helper.py\r\n\u2502           \u2514\u2500\u2500 logging_helper.py\r\n\u251c\u2500\u2500 template.yaml\r\n\u2514\u2500\u2500 test\r\n    \u2514\u2500\u2500 sample\r\n        \u251c\u2500\u2500 integration_test\r\n        \u2502   \u251c\u2500\u2500 api_tests.py\r\n        \u2502   \u2514\u2500\u2500 environment.json\r\n        \u251c\u2500\u2500 test_helper.py\r\n        \u2514\u2500\u2500 unit_test\r\n```\r\n\r\nThis is my ``template.yaml``\r\n\r\n```bash\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nDescription: >\r\nsample-sam-app\r\n\r\n  SAM Template for sample-sam-app\r\n\r\nGlobals:\r\n  Function:\r\n    Timeout: 20\r\n    MemorySize: 1024\r\n    Environment:\r\n      Variables:\r\n        TABLE_NAME: !Ref SampleTable\r\n        APPLICATION_NAME: \"SAMPLE\"\r\n\r\nResources:\r\n  CreateFunction:\r\n    Type: AWS::Serverless::Function \r\n    Properties:\r\n      CodeUri: src/sample/handler\r\n      Handler: create_handler.lambda_handler\r\n      Runtime: python3.7\r\n      Policies:\r\n        - DynamoDBCrudPolicy:\r\n            TableName: !Ref SampleTable\r\n      Events:\r\n        Create:\r\n          Type: Api \r\n          Properties:\r\n            Path: /sample\r\n            Method: post\r\n\r\n  GetFunction:\r\n    Type: AWS::Serverless::Function\r\n    Properties:\r\n      CodeUri: src/sample/handler\r\n      Handler: get_handler.lambda_handler\r\n      Runtime: python3.7\r\n      Policies:\r\n        - DynamoDBReadPolicy:\r\n            TableName: !Ref SampleTable\r\n      Events:\r\n        Get:\r\n          Type: Api \r\n          Properties:\r\n            Path: /sample/{data_id}\r\n            Method: get\r\n\r\n  ListFunction:\r\n    Type: AWS::Serverless::Function \r\n    Properties:\r\n      CodeUri: src/sample/handler\r\n      Handler: list_handler.lambda_handler\r\n      Runtime: python3.7\r\n      Policies:\r\n        - DynamoDBReadPolicy:\r\n            TableName: !Ref SampleTable\r\n      Events:\r\n        Get:\r\n          Type: Api \r\n          Properties:\r\n            Path: /sample\r\n            Method: get\r\n\r\n  SampleTable:\r\n    Type: AWS::DynamoDB::Table\r\n    Properties:\r\n      TableName: sample\r\n      AttributeDefinitions:\r\n        - AttributeName: user_id\r\n          AttributeType: S\r\n        - AttributeName: data_id\r\n          AttributeType: S\r\n      KeySchema:\r\n        - AttributeName: user_id\r\n          KeyType: HASH\r\n        - AttributeName: data_id\r\n          KeyType: RANGE\r\n      BillingMode: PAY_PER_REQUEST \r\n\r\nOutputs:\r\n    CreateFunction:\r\n      Description: \"Create Lambda Function ARN\"\r\n      Value: !GetAtt CreateFunction.Arn\r\n\r\n    GetFunction:\r\n      Description: \"Get Lambda Function ARN\"\r\n      Value: !GetAtt GetFunction.Arn\r\n\r\n    ListFunction:\r\n      Description: \"List Lambda Function ARN\"\r\n      Value: !GetAtt ListFunction.Arn\r\n```\r\n\r\nAlso my docker doesnt show sam-app\r\n```bash\r\ndocker ps\r\n\r\nCONTAINER ID        IMAGE                   COMMAND                  CREATED             STATUS              PORTS                    NAMES\r\n2e45a561d2ab        amazon/dynamodb-local   \"java -jar DynamoDBL\u2026\"   19 minutes ago      Up 19 minutes       0.0.0.0:8000->8000/tcp   romantic_mahavira\r\n```\r\n\r\n1. OS: MAC\r\n2. `sam --version`: SAM CLI, version 0.48.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1962", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1962/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1962/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1962/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1962", "id": 611262758, "node_id": "MDU6SXNzdWU2MTEyNjI3NTg=", "number": 1962, "title": "Function Handler in Subdirectory", "user": {"login": "destinybonavita", "id": 24532951, "node_id": "MDQ6VXNlcjI0NTMyOTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/24532951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/destinybonavita", "html_url": "https://github.com/destinybonavita", "followers_url": "https://api.github.com/users/destinybonavita/followers", "following_url": "https://api.github.com/users/destinybonavita/following{/other_user}", "gists_url": "https://api.github.com/users/destinybonavita/gists{/gist_id}", "starred_url": "https://api.github.com/users/destinybonavita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/destinybonavita/subscriptions", "organizations_url": "https://api.github.com/users/destinybonavita/orgs", "repos_url": "https://api.github.com/users/destinybonavita/repos", "events_url": "https://api.github.com/users/destinybonavita/events{/privacy}", "received_events_url": "https://api.github.com/users/destinybonavita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-02T19:57:14Z", "updated_at": "2020-05-11T20:16:13Z", "closed_at": "2020-05-11T20:16:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nI'm trying to use the SAM Local CLI to create my cloud-formation stack and I'm having issues having my function handlers in subdirectories. Executing `sam local start-api`  runs fine, but when I execute the api it can't detect any node modules or other files in the parent directory. \r\n\r\n### Steps to reproduce\r\n\r\n1. Use `sam local init` to create NodeJS stack\r\nUse the below to reproduce creating the project\r\n```\r\nWhich template source would you like to use?\r\n        1 - AWS Quick Start Templates\r\n        2 - Custom Template Location\r\nChoice: 1\r\n\r\nWhich runtime would you like to use?\r\n        1 - nodejs12.x\r\n        2 - python3.8\r\n        3 - ruby2.7\r\n        4 - go1.x\r\n        5 - java11\r\n        6 - dotnetcore3.1\r\n        7 - nodejs10.x\r\n        8 - python3.7\r\n        9 - python3.6\r\n        10 - python2.7\r\n        11 - ruby2.5\r\n        12 - java8\r\n        13 - dotnetcore2.1\r\n        14 - dotnetcore2.0\r\n        15 - dotnetcore1.0\r\nRuntime: 1\r\n\r\nProject name [sam-app]: \r\n\r\nCloning app templates from https://github.com/awslabs/aws-sam-cli-app-templates.git\r\n\r\n-----------------------\r\nGenerating application:\r\n-----------------------\r\nName: sam-app\r\nRuntime: nodejs12.x\r\nDependency Manager: npm\r\nApplication Template: hello-world\r\nOutput Directory: .\r\n\r\nNext steps can be found in the README file at ./sam-app/README.md\r\n```\r\n2. Under `sam-app/hello-world` create a folder called `example`\r\n3. Move `sam-app/hello-world/app.js` into `sam-app/hello-world/example/app.js`\r\n4. Update `sam-app/template.yaml` to reflect for the change\r\n5. Create file `sam-app/hello-world/temp.js` with the below contents:\r\n```javascript\r\nexports.ping = () => { return \"Worked!\" }\r\n```\r\n6. Add the below to the top of `sam-app/hello-world/example/app.js`\r\n```javascript\r\nconsole.log(require('../temp.js').ping())\r\n```\r\n7. Execute `sam local start-api` \r\n8. Call `/hello` in a browser or Postman\r\n\r\n### Observed result\r\n\r\n`sam-app/hello-world/temp.js` will fail to be found.\r\n\r\n### Expected result\r\n\r\n`sam-app/hello-world/temp.js` is found successfully and writes \"Worked!\" to the console.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS 10.15.4 (19E287)\r\n2. `sam --version`: SAM CLI, version 0.48.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1960", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1960/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1960/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1960/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1960", "id": 610958708, "node_id": "MDU6SXNzdWU2MTA5NTg3MDg=", "number": 1960, "title": "sam deploy hangs with SAM CLI version higher than 0.41.0", "user": {"login": "piersf", "id": 13417510, "node_id": "MDQ6VXNlcjEzNDE3NTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/13417510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piersf", "html_url": "https://github.com/piersf", "followers_url": "https://api.github.com/users/piersf/followers", "following_url": "https://api.github.com/users/piersf/following{/other_user}", "gists_url": "https://api.github.com/users/piersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/piersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piersf/subscriptions", "organizations_url": "https://api.github.com/users/piersf/orgs", "repos_url": "https://api.github.com/users/piersf/repos", "events_url": "https://api.github.com/users/piersf/events{/privacy}", "received_events_url": "https://api.github.com/users/piersf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200202, "node_id": "MDU6TGFiZWw3OTcyMDAyMDI=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/deploy", "name": "area/deploy", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "c2tarun", "id": 1129670, "node_id": "MDQ6VXNlcjExMjk2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1129670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c2tarun", "html_url": "https://github.com/c2tarun", "followers_url": "https://api.github.com/users/c2tarun/followers", "following_url": "https://api.github.com/users/c2tarun/following{/other_user}", "gists_url": "https://api.github.com/users/c2tarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/c2tarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c2tarun/subscriptions", "organizations_url": "https://api.github.com/users/c2tarun/orgs", "repos_url": "https://api.github.com/users/c2tarun/repos", "events_url": "https://api.github.com/users/c2tarun/events{/privacy}", "received_events_url": "https://api.github.com/users/c2tarun/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "c2tarun", "id": 1129670, "node_id": "MDQ6VXNlcjExMjk2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1129670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c2tarun", "html_url": "https://github.com/c2tarun", "followers_url": "https://api.github.com/users/c2tarun/followers", "following_url": "https://api.github.com/users/c2tarun/following{/other_user}", "gists_url": "https://api.github.com/users/c2tarun/gists{/gist_id}", "starred_url": "https://api.github.com/users/c2tarun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c2tarun/subscriptions", "organizations_url": "https://api.github.com/users/c2tarun/orgs", "repos_url": "https://api.github.com/users/c2tarun/repos", "events_url": "https://api.github.com/users/c2tarun/events{/privacy}", "received_events_url": "https://api.github.com/users/c2tarun/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-05-01T20:42:06Z", "updated_at": "2020-05-15T23:06:11Z", "closed_at": "2020-05-15T20:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nWe have noticed a strange behavior when upgrading SAM CLI to any version higher than `0.41.0`.\r\nThe `sam deploy` command hangs for a long time without doing/outputting anything.\r\n\r\nEven at this point, we have a `sam deploy` process on a VM still running after 2 days. We haven't killed the process in order to be able to troubleshoot.\r\n\r\nThis happens(for us) with every version higher than `0.41.0`. With versions prior to `0.41.0`, we don't see this behavior.\r\n\r\nWe are running SAM CLI inside a Python virtual environment. At first, we thought this could be the version of Python inside the virtual environment(`3.7.4`). So we created a virtual environment with Python `3.7.7`. But the problem still remained and this did not make a difference.\r\n\r\nThe command we are running is:\r\n\r\n```\r\n/path/to/virtualenv/bin/python3.7 /path/to/virtualenv/bin/sam deploy --region REGION --profile PROFILE --template-file /path/to/packaged/template.yaml --stack-name STACK_NAME --s3-bucket S3_BUCKET_NAME --s3-prefix S3_BUCKET_PREFIX --capabilities CAPABILITY_NAMED_IAM --tags Name=value --parameter-overrides Parameter1=value1 Parameter2=value2 Parameter3=value3 ParameterN=valueN --no-fail-on-empty-changeset\r\n```\r\n\r\nLooking at the CloudFormation console while the `sam deploy` command is hanging, there's no stack update happening whatsoever.\r\n\r\nWe tried to add the `--debug` flag, but no additional output is being shown.\r\n\r\nI want to point out that with versions prior to `0.41.0` the deployment works just fine. We don't experience the same behavior.\r\n\r\nIs there something wrong with our command above? Are we missing some kind of flag that is required with versions higher than `0.41.0`?\r\n\r\nHas anyone else experienced something similar? As a result of this, we're unable to go any higher than version `0.41.0`.\r\n\r\n### Steps to reproduce\r\n\r\nUpgrade to SAM CLI version > `0.41.0` and run `sam deploy`\r\n\r\n### Observed result\r\n\r\n`sam deploy` with SAM CLI version higher than `0.41.0` hangs\r\n\r\n### Expected result\r\n\r\n`sam deploy` with SAM CLI version higher than `0.41.0` should not hang\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: `Redhat 7, Debian`\r\n2. `sam --version`: `0.42.0, 0.43.0, 0.44.0, 0.45.0, 0.46.0, 0.47.0, 0.48.0`\r\n3. Python version: `3.7.4, 3.7.7`\r\n\r\n\r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1958", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1958/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1958/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1958/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1958", "id": 610484960, "node_id": "MDU6SXNzdWU2MTA0ODQ5NjA=", "number": 1958, "title": "sam deploy --paramter-override for Function's Layers with Fn::Sub: fails after upgrading to version 0.48.0 fails", "user": {"login": "smurphnturf", "id": 58239200, "node_id": "MDQ6VXNlcjU4MjM5MjAw", "avatar_url": "https://avatars3.githubusercontent.com/u/58239200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smurphnturf", "html_url": "https://github.com/smurphnturf", "followers_url": "https://api.github.com/users/smurphnturf/followers", "following_url": "https://api.github.com/users/smurphnturf/following{/other_user}", "gists_url": "https://api.github.com/users/smurphnturf/gists{/gist_id}", "starred_url": "https://api.github.com/users/smurphnturf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smurphnturf/subscriptions", "organizations_url": "https://api.github.com/users/smurphnturf/orgs", "repos_url": "https://api.github.com/users/smurphnturf/repos", "events_url": "https://api.github.com/users/smurphnturf/events{/privacy}", "received_events_url": "https://api.github.com/users/smurphnturf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-05-01T00:49:29Z", "updated_at": "2020-07-23T15:06:26Z", "closed_at": "2020-05-18T13:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nA Functions Layers referenced by arn has a version look up through parameters that are provided via --parameter-override flag on sam deploy. After upgrading to latest version 0.48.0 the layers fail to substitute any parameters without default values into the layer arn. Thus deployment fails.\r\n\r\n### Steps to reproduce\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nParameters:\r\n  LayerVersion:\r\n    Type: Number\r\n    Description: The version for the layer\r\nResources:\r\n  MyFunction:\r\n    Type: AWS::Serverless::Function\r\n    Properties:\r\n      CodeUri: code\r\n      Handler: index.handler\r\n      Runtime: nodejs12.x\r\n      Layers:\r\n        - Fn:Sub: arn:aws:lambda:us-west-2:11111111:layer:layer-name:${LayerVersion}\r\n\r\n\r\n### Observed result\r\n`\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\n\tDeploying with following values\r\n\t===============================\r\n\tStack name                 : my-stack-name\r\n\tRegion                     : us-west-2\r\n\tConfirm changeset          : False\r\n\tDeployment s3 bucket       : my-bucket-name\r\n\tCapabilities               : [\"CAPABILITY_IAM\"]\r\n\tParameter overrides        : {'LayerVersion': '115'}\r\n\r\nInitiating deployment\r\n=====================\r\nFile with same data is already exists at my-stack-name/9e7216aff9934ea2895cdb12b5f4aa33. Skipping upload\r\n2 resources found in the template\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': 'us-west-2', 'commandName': 'sam deploy', 'duration': 1197, 'exitReason': 'InvalidLayerVersionArn', 'exitCode': 1, 'requestId': '8615248c-be1a-48ca-baf9-48e230fe2ca5', 'installationId': '129e166f-e3d7-4041-88e8-db7a07f6a5ce', 'sessionId': 'a399738e-227e-435c-a53e-fd837506bbba', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: arn:aws:lambda:us-east-1:1111111:layer:layer-name:LayerVersion is an Invalid Layer Arn.\r\n`\r\n### Expected result\r\n\r\nsuccessful deployment with layer arn: \r\narn:aws:lambda:us-west-2:1111111:layer:layer-name:115\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac and Ubuntu\r\n2. `sam --version`: 0.48.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1956", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1956/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1956/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1956/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1956", "id": 610229644, "node_id": "MDU6SXNzdWU2MTAyMjk2NDQ=", "number": 1956, "title": "Validation regression for ApplicationId in AWS::Serverless::Application resources", "user": {"login": "cnnrmtthws", "id": 14077658, "node_id": "MDQ6VXNlcjE0MDc3NjU4", "avatar_url": "https://avatars1.githubusercontent.com/u/14077658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnnrmtthws", "html_url": "https://github.com/cnnrmtthws", "followers_url": "https://api.github.com/users/cnnrmtthws/followers", "following_url": "https://api.github.com/users/cnnrmtthws/following{/other_user}", "gists_url": "https://api.github.com/users/cnnrmtthws/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnnrmtthws/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnnrmtthws/subscriptions", "organizations_url": "https://api.github.com/users/cnnrmtthws/orgs", "repos_url": "https://api.github.com/users/cnnrmtthws/repos", "events_url": "https://api.github.com/users/cnnrmtthws/events{/privacy}", "received_events_url": "https://api.github.com/users/cnnrmtthws/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-30T16:43:56Z", "updated_at": "2020-07-29T21:30:32Z", "closed_at": "2020-05-18T13:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Summary\r\nUsing SAM CLI 0.48.0, if a SAM template includes AWS::Serverless::Application resources and you are using !FindInMap and !Ref in the ApplicaitonId field, attempting to deploy fails with the error (full log below):\r\n```\r\nsamcli.commands.validate.lib.exceptions.InvalidSamDocumentException: [InvalidResourceException('helloworld', \"Property 'ApplicationId' cannot be resolved. Only FindInMap and Ref intrinsic functions are supported.\")] ('helloworld', \"Property 'ApplicationId' cannot be resolved. Only FindInMap and Ref intrinsic functions are supported.\")\r\n```\r\nIf I revert back to a previous version (in this case 0.46.0) the below steps succeed.\r\n\r\n# Steps to reproduce\r\n1. Extract the example template [example.zip](https://github.com/awslabs/aws-sam-cli/files/4559681/example.zip) (template also inline at the bottom of this post)\r\n2. Using SAM CLI 0.48.0:\r\n```\r\nsam deploy -t example.yaml --stack-name testbug --profile cdv --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND\r\n```\r\n# Expected result:\r\nSuccessful deployment\r\n\r\n# Actual result:\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\n        Deploying with following values\r\n        ===============================\r\n        Stack name                 : testbug\r\n        Region                     : None\r\n        Confirm changeset          : False\r\n        Deployment s3 bucket       : None\r\n        Capabilities               : [\"CAPABILITY_IAM\", \"CAPABILITY_AUTO_EXPAND\"]\r\n        Parameter overrides        : {}\r\n\r\nInitiating deployment\r\n=====================\r\nProperty Location of helloworld resource is not a URL\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': True, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam deploy', 'duration': 517, 'exitReason': 'InvalidSamDocumentException', 'exitCode': 255, 'requestId': 'e9cd6e75-4c53-49af-9866-99237d54a9ac', 'installationId': '1218f337-22cf-4127-980f-c061c99f17b5', 'sessionId': 'a74f3059-4ddb-4cc9-bf57-213ebfdc421c', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/samlib/wrapper.py\", line 71, in run_plugins\r\n    parser.parse(template_copy, all_plugins)  # parse() will run all configured plugins\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/samlib/wrapper.py\", line 140, in parse\r\n    raise InvalidDocumentException(document_errors)\r\nsamtranslator.model.exceptions.InvalidDocumentException: [InvalidResourceException('helloworld', \"Property 'ApplicationId' cannot be resolved. Only FindInMap and Ref intrinsic functions are supported.\")]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/linuxbrew/.linuxbrew/bin/sam\", line 11, in <module>\r\n    load_entry_point('aws-sam-cli==0.48.0', 'console_scripts', 'sam')()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/telemetry/metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/command.py\", line 180, in cli\r\n    ctx.profile,\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/command.py\", line 271, in do_cli\r\n    deploy_context.run()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/deploy_context.py\", line 133, in run\r\n    self.confirm_changeset,\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/deploy_context.py\", line 152, in deploy\r\n    auth_required_per_resource = auth_per_resource(parameters, get_template_data(self.template_file))\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/commands/deploy/auth_utils.py\", line 34, in auth_per_resource\r\n    template_dict=template_dict, parameter_overrides=parameter_overrides, ignore_code_extraction_warnings=True\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/providers/sam_function_provider.py\", line 46, in __init__\r\n    self.template_dict = SamBaseProvider.get_template(template_dict, parameter_overrides)\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/providers/sam_base_provider.py\", line 41, in get_template\r\n    template_dict = SamTranslatorWrapper(template_dict).run_plugins()\r\n  File \"/home/linuxbrew/.linuxbrew/Cellar/aws-sam-cli/0.48.0/libexec/lib/python3.7/site-packages/samcli/lib/samlib/wrapper.py\", line 74, in run_plugins\r\n    functools.reduce(lambda message, error: message + \" \" + str(error), e.causes, str(e))\r\nsamcli.commands.validate.lib.exceptions.InvalidSamDocumentException: [InvalidResourceException('helloworld', \"Property 'ApplicationId' cannot be resolved. Only FindInMap and Ref intrinsic functions are supported.\")] ('helloworld', \"Property 'ApplicationId' cannot be resolved. Only FindInMap and Ref intrinsic functions are supported.\")\r\n```\r\n\r\n# Additional environment details\r\n1. Windows via bash terminal using WSL\r\n2. ```sam --version```: ```SAM CLI, version 0.48.0```\r\n\r\n# Template\r\n```\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nDescription: Minimal example to reproduce FindInMap issue with SAM CLI 0.48.0\r\n\r\nMappings:\r\n  MappingExample:\r\n    eu-west-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    eu-west-2:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    eu-west-3:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    eu-central-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    eu-north-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    us-east-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    us-east-2:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    us-west-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    us-west-2:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ap-east-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ap-south-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ap-northeast-2:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ap-southeast-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ap-southeast-2:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ap-northeast-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    ca-central-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    me-south-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n    sa-east-1:\r\n      ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/hello-world\r\n\r\nResources:\r\n\r\n  helloworld:\r\n    Type: AWS::Serverless::Application\r\n    Properties:\r\n      Location:\r\n        ApplicationId: !FindInMap [MappingExample, !Ref AWS::Region, ApplicationId]\r\n        SemanticVersion: 1.0.4\r\n      Parameters: \r\n        IdentityNameParameter: TestName\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1955", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1955/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1955/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1955/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1955", "id": 610187955, "node_id": "MDU6SXNzdWU2MTAxODc5NTU=", "number": 1955, "title": "`sam deploy --guided` doesn't seem to respect additional CLI args", "user": {"login": "afoeder", "id": 1125168, "node_id": "MDQ6VXNlcjExMjUxNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1125168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afoeder", "html_url": "https://github.com/afoeder", "followers_url": "https://api.github.com/users/afoeder/followers", "following_url": "https://api.github.com/users/afoeder/following{/other_user}", "gists_url": "https://api.github.com/users/afoeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/afoeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afoeder/subscriptions", "organizations_url": "https://api.github.com/users/afoeder/orgs", "repos_url": "https://api.github.com/users/afoeder/repos", "events_url": "https://api.github.com/users/afoeder/events{/privacy}", "received_events_url": "https://api.github.com/users/afoeder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200202, "node_id": "MDU6TGFiZWw3OTcyMDAyMDI=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/deploy", "name": "area/deploy", "color": "1d76db", "default": false, "description": null}, {"id": 797200187, "node_id": "MDU6TGFiZWw3OTcyMDAxODc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/contributors/good-first-issue", "name": "contributors/good-first-issue", "color": "0e8a16", "default": false, "description": null}, {"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": {"login": "mndeveci", "id": 5735811, "node_id": "MDQ6VXNlcjU3MzU4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5735811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndeveci", "html_url": "https://github.com/mndeveci", "followers_url": "https://api.github.com/users/mndeveci/followers", "following_url": "https://api.github.com/users/mndeveci/following{/other_user}", "gists_url": "https://api.github.com/users/mndeveci/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndeveci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndeveci/subscriptions", "organizations_url": "https://api.github.com/users/mndeveci/orgs", "repos_url": "https://api.github.com/users/mndeveci/repos", "events_url": "https://api.github.com/users/mndeveci/events{/privacy}", "received_events_url": "https://api.github.com/users/mndeveci/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mndeveci", "id": 5735811, "node_id": "MDQ6VXNlcjU3MzU4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5735811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndeveci", "html_url": "https://github.com/mndeveci", "followers_url": "https://api.github.com/users/mndeveci/followers", "following_url": "https://api.github.com/users/mndeveci/following{/other_user}", "gists_url": "https://api.github.com/users/mndeveci/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndeveci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndeveci/subscriptions", "organizations_url": "https://api.github.com/users/mndeveci/orgs", "repos_url": "https://api.github.com/users/mndeveci/repos", "events_url": "https://api.github.com/users/mndeveci/events{/privacy}", "received_events_url": "https://api.github.com/users/mndeveci/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-04-30T16:02:05Z", "updated_at": "2020-06-17T19:18:17Z", "closed_at": "2020-06-17T19:18:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n\r\nBoth invoke\r\na) `sam deploy --guided --capabilities CAPABILITY_AUTO_EXPAND`\r\nb) `sam deploy                 --capabilities CAPABILITY_AUTO_EXPAND`\r\n\r\n### Observed result\r\n\r\na) Deployment process is invoked with `capabilities = \"CAPABILITY_IAM\"`\r\nb) Deployment process is invoked with `capabilities = \"CAPABILITY_AUTO_EXPAND\"`\r\n\r\n### Expected result\r\n\r\nShould be `CAPABILITY_AUTO_EXPAND` also in case a). \r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac\r\n2. `sam --version`: `SAM CLI, version 0.48.0`\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1953", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1953/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1953/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1953/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1953", "id": 609671751, "node_id": "MDU6SXNzdWU2MDk2NzE3NTE=", "number": 1953, "title": "Degradation of parameter-overrides option", "user": {"login": "imatakeharuhiko", "id": 31247577, "node_id": "MDQ6VXNlcjMxMjQ3NTc3", "avatar_url": "https://avatars3.githubusercontent.com/u/31247577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imatakeharuhiko", "html_url": "https://github.com/imatakeharuhiko", "followers_url": "https://api.github.com/users/imatakeharuhiko/followers", "following_url": "https://api.github.com/users/imatakeharuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/imatakeharuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/imatakeharuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imatakeharuhiko/subscriptions", "organizations_url": "https://api.github.com/users/imatakeharuhiko/orgs", "repos_url": "https://api.github.com/users/imatakeharuhiko/repos", "events_url": "https://api.github.com/users/imatakeharuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/imatakeharuhiko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-30T07:37:06Z", "updated_at": "2020-05-19T05:28:50Z", "closed_at": "2020-05-18T13:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThe parameter-overrides option of the sam deploy command doesn't look to work on Ver. 0.48.0.\r\nThe versions earlier than 0.48.0 work properly.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nsam deploy \\\r\n    --debug \\\r\n    --template-file $1 \\\r\n    --stack-name gs2-${X_GS2_SERVICE//_/-}-lambda \\\r\n    --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \\\r\n    --region=$X_GS2_REGION \\\r\n    --profile gs2-$X_GS2_ENV \\\r\n    --parameter-overrides Gs2CoreLayerVersion=$GS_CORE_LAYER_VERSION Service=${X_GS2_SERVICE//_/-} Gs2Region=$X_GS2_REGION \\\r\n        Gs2Environment=$X_GS2_ENV\r\n```\r\n\r\nThe environment variables are properly set.\r\n\r\nExcerpt of the template:\r\n\r\n```\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nDescription: |\r\n  gs2-gateway\r\n\r\nParameters:\r\n  Gs2CoreLayerVersion:\r\n    Type: Number\r\n    Description: Version of GS2-Core Lambda Layer\r\n  Service:\r\n    Type: String\r\n    Description: service\r\n  Gs2Environment:\r\n    Type: String\r\n    Description: dev or live\r\n  Gs2Region:\r\n    Type: String\r\n    Description: ap-northeast-1\r\n\r\nMappings:\r\n  CertificationArn:\r\n    ap-northeast-1:\r\n      live: arn:aws:acm:ap-northeast-1:258965805804:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n      dev: arn:aws:acm:ap-northeast-1:193652665524:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n    us-east-1:\r\n      live: arn:aws:acm:us-east-1:258965805804:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n      dev: arn:aws:acm:us-east-1:193652665524:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n    eu-west-1:\r\n      live: arn:aws:acm:eu-west-1:258965805804:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n      dev: arn:aws:acm:eu-west-1:193652665524:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n    ap-southeast-1:\r\n      live: arn:aws:acm:ap-southeast-1:258965805804:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n      dev: arn:aws:acm:ap-southeast-1:193652665524:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\r\n\r\nConditions:\r\n  IsLive:\r\n    !Equals [!Ref Gs2Environment, live]\r\n\r\nResources:\r\n  Domain:\r\n    Type: AWS::ApiGateway::DomainName\r\n    Properties:\r\n      DomainName:\r\n        !If [\r\n          \"IsLive\",\r\n          !Join ['.', [!Ref Service, !Ref 'AWS::Region', 'gen2', 'gs2io', 'com']],\r\n          !Join ['.', [!Join ['-', [!Ref Service, !Ref Gs2Environment]], !Ref 'AWS::Region', 'gen2', 'gs2io', 'com']]\r\n        ]\r\n      EndpointConfiguration:\r\n        Types:\r\n          - REGIONAL\r\n      RegionalCertificateArn: !FindInMap ['CertificationArn', !Ref 'AWS::Region', !Ref Gs2Environment]\r\n\r\nOutputs:\r\n  Api:\r\n    Value: !GetAtt\r\n      - Domain\r\n      - RegionalDomainName\r\n```\r\n\r\n### Observed result\r\n\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\n\tDeploying with following values\r\n\t===============================\r\n\tStack name                 : gs2-****-lambda\r\n\tRegion                     : **************\r\n\tConfirm changeset          : False\r\n\tDeployment s3 bucket       : None\r\n\tCapabilities               : [\"CAPABILITY_IAM\", \"CAPABILITY_NAMED_IAM\"]\r\n\tParameter overrides        : {'Gs2CoreLayerVersion': '49', 'Service': '****', 'Gs2Region': '**************', 'Gs2Environment': 'dev'}\r\n\r\nInitiating deployment\r\n=====================\r\nProperty CodeUri of PublicHandlerFunction is already a S3 URL\r\nProperty CodeUri of PrivateHandlerFunction is already a S3 URL\r\nProperty DefinitionUri of Api is already a S3 URL\r\nCollected default values for parameters: {}\r\nUnable to resolve property RegionalCertificateArn: OrderedDict([('Fn::FindInMap', ['CertificationArn', OrderedDict([('Ref', 'AWS::Region')]), OrderedDict([('Ref', 'Gs2Environment')])])]). Leaving as is.\r\nUnable to resolve property Value: OrderedDict([('Fn::GetAtt', ['Domain', 'RegionalDomainName'])]). Leaving as is.\r\n9 resources found in the template\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': True, 'debugFlagProvided': True, 'region': '**************', 'commandName': 'sam deploy', 'duration': 508, 'exitReason': 'InvalidLayerVersionArn', 'exitCode': 1, 'requestId': 'fe2845af-8e42-49d4-a66b-4c1a59ba14a3', 'installationId': 'a7812eee-560e-4e8f-aba0-bf08b5153128', 'sessionId': '95b22ab1-c97d-4da2-8342-a30fba2d9b09', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.48.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nError: arn:aws:lambda:us-east-1:123456789012:layer:gs2-core:Gs2CoreLayerVersion is an Invalid Layer Arn.\r\n```\r\n\r\n### Expected result\r\n\r\nNo error if the client version is earlier than 0.48.0.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 WSL 2 or circleci/python3.7 Docker image\r\n2. `sam --version`: 0.48.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1950", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1950/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1950/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1950/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1950", "id": 608802009, "node_id": "MDU6SXNzdWU2MDg4MDIwMDk=", "number": 1950, "title": "SAM CLI returns null if no output results instead of empty string or success message", "user": {"login": "maveius", "id": 2152176, "node_id": "MDQ6VXNlcjIxNTIxNzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2152176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maveius", "html_url": "https://github.com/maveius", "followers_url": "https://api.github.com/users/maveius/followers", "following_url": "https://api.github.com/users/maveius/following{/other_user}", "gists_url": "https://api.github.com/users/maveius/gists{/gist_id}", "starred_url": "https://api.github.com/users/maveius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maveius/subscriptions", "organizations_url": "https://api.github.com/users/maveius/orgs", "repos_url": "https://api.github.com/users/maveius/repos", "events_url": "https://api.github.com/users/maveius/events{/privacy}", "received_events_url": "https://api.github.com/users/maveius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T06:05:22Z", "updated_at": "2020-05-06T17:20:56Z", "closed_at": "2020-05-06T17:20:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nAfter call `sam invoke MyFunction --template my/path/to/template.yaml --event \"/sqs.json\"`\r\nOutput returns null if no message or errors\r\n\r\n### Steps to reproduce\r\nExecute `sam invoke MyFunction --template my/path/to/template.yaml --event \"/sqs.json\"`\r\n\r\n### Observed result\r\nOutput returns null if no message or errors when no debug flag.\r\n\r\nwith `--debug` flag:\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam local invoke', 'duration': 44176, 'exitReason': 'success', 'exitCode': 0, 'requestId': 'a6e41842-7ca2-4bc6-9adb-a3404a365d83', 'installationId': '2facdfe6-3a4b-4380-976d-e218d0b7beb2', 'sessionId': '75429bac-fed6-48bf-ac06-121ad8893d3e', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.47.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\n\r\n### Expected result\r\nWhen no message, errors and exceptions then should return empty content instead of `null`.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Linux_x64_5.6.7-1-MANJARO\r\n2. `sam --version`: SAM CLI, version 0.47.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1949", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1949/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1949/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1949/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1949", "id": 608794843, "node_id": "MDU6SXNzdWU2MDg3OTQ4NDM=", "number": 1949, "title": "An error occurred (AccessDenied) when calling the PutObject operation: Access Denied", "user": {"login": "lisandrolan", "id": 13839389, "node_id": "MDQ6VXNlcjEzODM5Mzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/13839389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lisandrolan", "html_url": "https://github.com/lisandrolan", "followers_url": "https://api.github.com/users/lisandrolan/followers", "following_url": "https://api.github.com/users/lisandrolan/following{/other_user}", "gists_url": "https://api.github.com/users/lisandrolan/gists{/gist_id}", "starred_url": "https://api.github.com/users/lisandrolan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lisandrolan/subscriptions", "organizations_url": "https://api.github.com/users/lisandrolan/orgs", "repos_url": "https://api.github.com/users/lisandrolan/repos", "events_url": "https://api.github.com/users/lisandrolan/events{/privacy}", "received_events_url": "https://api.github.com/users/lisandrolan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-29T05:45:36Z", "updated_at": "2020-04-29T19:27:05Z", "closed_at": "2020-04-29T19:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n### Description\r\n\r\nEvery time I try to run any of the SAM commands, I get the error \r\nAn error occurred (AccessDenied) when calling the PutObject operation: Access Denied\r\n\r\n### Steps to reproduce\r\n\r\nIm running the following command\r\n\r\nsam package --template ./0.AWSCF/templateCognito.yaml --output-template-file cloudformation.yaml --s3-bucket sqsosam --region us-east-1 && sam deploy --template-file cloudformation.yaml --stack-name sqsoCognitoSAM --capabilities CAPABILITY_NAMED_IAM CAPABILITY_IAM CAPABILITY_AUTO_EXPAND --region us-east-1 \r\n\r\n### Observed result\r\n\r\nError: Unable to upload artifact ../CognitoPostConfirmation/ referenced by CodeUri parameter of CognitoPostConfirmationFunction resource.   \r\nAn error occurred (AccessDenied) when calling the PutObject operation: Access Denied\r\n\r\n### Expected result\r\nThe correct result\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS:\r\n2. `sam --version`:0.47.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1947", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1947/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1947/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1947/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1947", "id": 608467633, "node_id": "MDU6SXNzdWU2MDg0Njc2MzM=", "number": 1947, "title": "Improve exception logging for API Gateway Local Service", "user": {"login": "lfpetrini", "id": 8486437, "node_id": "MDQ6VXNlcjg0ODY0Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8486437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfpetrini", "html_url": "https://github.com/lfpetrini", "followers_url": "https://api.github.com/users/lfpetrini/followers", "following_url": "https://api.github.com/users/lfpetrini/following{/other_user}", "gists_url": "https://api.github.com/users/lfpetrini/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfpetrini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfpetrini/subscriptions", "organizations_url": "https://api.github.com/users/lfpetrini/orgs", "repos_url": "https://api.github.com/users/lfpetrini/repos", "events_url": "https://api.github.com/users/lfpetrini/events{/privacy}", "received_events_url": "https://api.github.com/users/lfpetrini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200187, "node_id": "MDU6TGFiZWw3OTcyMDAxODc=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/contributors/good-first-issue", "name": "contributors/good-first-issue", "color": "0e8a16", "default": false, "description": null}, {"id": 1016168915, "node_id": "MDU6TGFiZWwxMDE2MTY4OTE1", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/waiting-for-release", "name": "stage/waiting-for-release", "color": "0fc619", "default": false, "description": "Stage that indicates the issue was accepted and addressed but waiting on a release"}, {"id": 797200182, "node_id": "MDU6TGFiZWw3OTcyMDAxODI=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/ux", "name": "type/ux", "color": "1d76db", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mndeveci", "id": 5735811, "node_id": "MDQ6VXNlcjU3MzU4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5735811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndeveci", "html_url": "https://github.com/mndeveci", "followers_url": "https://api.github.com/users/mndeveci/followers", "following_url": "https://api.github.com/users/mndeveci/following{/other_user}", "gists_url": "https://api.github.com/users/mndeveci/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndeveci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndeveci/subscriptions", "organizations_url": "https://api.github.com/users/mndeveci/orgs", "repos_url": "https://api.github.com/users/mndeveci/repos", "events_url": "https://api.github.com/users/mndeveci/events{/privacy}", "received_events_url": "https://api.github.com/users/mndeveci/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mndeveci", "id": 5735811, "node_id": "MDQ6VXNlcjU3MzU4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5735811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndeveci", "html_url": "https://github.com/mndeveci", "followers_url": "https://api.github.com/users/mndeveci/followers", "following_url": "https://api.github.com/users/mndeveci/following{/other_user}", "gists_url": "https://api.github.com/users/mndeveci/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndeveci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndeveci/subscriptions", "organizations_url": "https://api.github.com/users/mndeveci/orgs", "repos_url": "https://api.github.com/users/mndeveci/repos", "events_url": "https://api.github.com/users/mndeveci/events{/privacy}", "received_events_url": "https://api.github.com/users/mndeveci/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-04-28T16:53:01Z", "updated_at": "2020-08-13T03:31:24Z", "closed_at": "2020-08-13T03:31:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a very simple request, I didn't know if it could be considered a bug since it's just related to logging, but I have spent hours trying to figure out what is wrong with the response I'm sending back from my lambda function and the only error message I get is this one:\r\n\r\n> \u001b[32mREPORT RequestId: ac7ae76f-bdb4-1dd8-b184-6a7d2ad94f20     Init Duration: 544.64 ms        Duration: 23.88 ms      Billed Duration: 100 ms Memory Size: 128 MB     Max Memory Used: 56 MB      \u001b[0m\r\n> **<class 'samcli.local.apigw.local_apigw_service.LambdaResponseParseException'>**\r\n\r\nI'm new to SAM so I decided to take a look at the [source code](https://github.com/awslabs/aws-sam-cli/blob/develop/samcli/local/apigw/local_apigw_service.py).\r\nEven though the exceptions are raised with very informative messages, at the end it will just log its type instead of anything useful (line 214):\r\n```\r\nexcept LambdaResponseParseException:\r\n            LOG.error(str(LambdaResponseParseException))\r\n            return ServiceErrorResponses.lambda_failure_response()\r\n```\r\n\r\nI suppose an \\__str__ function should be added to the exception, and it should log its instance instead of its type.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1944", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1944/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1944/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1944/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1944", "id": 607416421, "node_id": "MDU6SXNzdWU2MDc0MTY0MjE=", "number": 1944, "title": "sam validate fails when adding UsagePlan to Auth object in AWS::Serverless::Api resource", "user": {"login": "piersf", "id": 13417510, "node_id": "MDQ6VXNlcjEzNDE3NTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/13417510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piersf", "html_url": "https://github.com/piersf", "followers_url": "https://api.github.com/users/piersf/followers", "following_url": "https://api.github.com/users/piersf/following{/other_user}", "gists_url": "https://api.github.com/users/piersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/piersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piersf/subscriptions", "organizations_url": "https://api.github.com/users/piersf/orgs", "repos_url": "https://api.github.com/users/piersf/repos", "events_url": "https://api.github.com/users/piersf/events{/privacy}", "received_events_url": "https://api.github.com/users/piersf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200198, "node_id": "MDU6TGFiZWw3OTcyMDAxOTg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/bug", "name": "type/bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T10:08:11Z", "updated_at": "2020-04-28T22:55:24Z", "closed_at": "2020-04-28T22:55:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\n`sam validate` fails when adding `UsagePlan` to `Auth` object in `AWS::Serverless::Api` resource. However, `sam deploy` does not have any issues in deploying.\r\n\r\nError:\r\n```Error: [InvalidResourceException('AccountManagementApi', \"Invalid value for 'Auth' property\")] ('AccountManagementApi', \"Invalid value for 'Auth' property\")```\r\n\r\n### Steps to reproduce\r\n\r\nRunning `sam validate` for the below resource will reproduce the error:\r\n\r\n```\r\nAccountManagementApi:\r\n    Type: AWS::Serverless::Api\r\n    Properties:\r\n      Name: !Sub \"${environment}-${ApiName}\"\r\n      StageName: !Ref ApiStageName\r\n      Auth:\r\n        UsagePlan:\r\n          UsagePlanName: !Sub \"${environment}-${ApiName}-api-usage-plan\"\r\n          CreateUsagePlan: PER_API\r\n```\r\n\r\n### Observed result\r\nError:\r\n```Error: [InvalidResourceException('AccountManagementApi', \"Invalid value for 'Auth' property\")] ('AccountManagementApi', \"Invalid value for 'Auth' property\")```\r\n\r\n### Expected result\r\n\r\nValidation should succeed as this is a supported configuration.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: `RedHat 7`\r\n2. `sam --version`: `SAM CLI, version 0.41.0`\r\n3. Python version: `Python 3.7.4`\r\n\r\n`Add --debug flag to command you are running`: Adding `--debug` flag does not output anymore info other than the above error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1939", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1939/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1939/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1939/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1939", "id": 606354105, "node_id": "MDU6SXNzdWU2MDYzNTQxMDU=", "number": 1939, "title": "sam deploy: KeyError: 'Outputs'", "user": {"login": "pyk", "id": 2213646, "node_id": "MDQ6VXNlcjIyMTM2NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2213646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyk", "html_url": "https://github.com/pyk", "followers_url": "https://api.github.com/users/pyk/followers", "following_url": "https://api.github.com/users/pyk/following{/other_user}", "gists_url": "https://api.github.com/users/pyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyk/subscriptions", "organizations_url": "https://api.github.com/users/pyk/orgs", "repos_url": "https://api.github.com/users/pyk/repos", "events_url": "https://api.github.com/users/pyk/events{/privacy}", "received_events_url": "https://api.github.com/users/pyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T14:26:21Z", "updated_at": "2020-04-24T14:52:04Z", "closed_at": "2020-04-24T14:52:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nCannot deploy the `HelloWord` example due to error in `sam deploy` command.\r\n\r\n### Steps to reproduce\r\nAWS access key & secret are already configured with `AdministratorAccess`.\r\n\r\n1. Init new project with `sam init`\r\n2. Choose `AWS Quick Start Templates`\r\n3. Choose `python3.8` as runtime\r\n4. Project name: `reproduce-error`\r\n5. Choose `Hello World Example`\r\n6. `cd .\\reproduce-error\\`\r\n7. Build the app: `sam build --use-container`\r\n7. Then deploy the the project `sam deploy --guided --debug`\r\n\r\n### Observed result\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\n\r\n```\r\nPS C:\\Users\\bayu\\pyk\\reproduce-error> sam deploy --guided --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\nConfiguring SAM deploy\r\n======================\r\n\r\n        Looking for samconfig.toml :  Not found\r\n\r\n        Setting default arguments for 'sam deploy'\r\n        =========================================\r\n        Stack Name [sam-app]: reproduce-error\r\n        AWS Region [us-east-1]: ap-southeast-1\r\n        #Shows you resources changes to be deployed and require a 'Y' to initiate deploy\r\n        Confirm changes before deploy [y/N]: Y\r\n        #SAM needs permission to be able to create roles to connect to the resources in your template\r\n        Allow SAM CLI IAM role creation [Y/n]: Y\r\n        Save arguments to samconfig.toml [Y/n]: Y\r\n\r\n        Looking for resources needed for deployment: Found!\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam deploy', 'duration': 33920, 'exitReason': 'KeyError', 'exitCode': 255, 'requestId': '759b0b08-3a42-4a2b-917e-1ac4523e3205', 'installationId': '0401383f-7347-4051-8175-12422b39832c', 'sessionId': '6cd30d66-71ea-4721-8e39-1bf69b0538cb', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.47.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\nTraceback (most recent call last):\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\runpy.py\", line 193, in _run_module_as_main\r\n  File \"D:\\obj\\windows-release\\37amd64_Release\\msi_python\\zip_amd64\\runpy.py\", line 85, in _run_code\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\__main__.py\", line 12, in <module>\r\n    cli(prog_name=\"sam\")\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\click\\core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\telemetry\\metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\deploy\\command.py\", line 180, in cli\r\n    ctx.profile,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\deploy\\command.py\", line 223, in do_cli\r\n    guided_context.run()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\deploy\\guided_context.py\", line 150, in run\r\n    self.guided_prompts(_parameter_override_keys)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\commands\\deploy\\guided_context.py\", line 103, in guided_prompts\r\n    s3_bucket = manage_stack(profile=self.profile, region=region)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\bootstrap\\bootstrap.py\", line 36, in manage_stack\r\n    return _create_or_get_stack(cloudformation_client)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\bootstrap\\bootstrap.py\", line 70, in _create_or_get_stack\r\n    outputs = stack[\"Outputs\"]\r\nKeyError: 'Outputs'\r\n```\r\n\r\n### Expected result\r\n\r\nThe app should be deployed.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10\r\n2. `sam --version`: SAM CLI, version 0.47.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1937", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1937/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1937/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1937/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1937", "id": 606174601, "node_id": "MDU6SXNzdWU2MDYxNzQ2MDE=", "number": 1937, "title": "sam deploy --parameter-overrides doesn't receive underbar contained key", "user": {"login": "hangingman", "id": 1238507, "node_id": "MDQ6VXNlcjEyMzg1MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1238507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hangingman", "html_url": "https://github.com/hangingman", "followers_url": "https://api.github.com/users/hangingman/followers", "following_url": "https://api.github.com/users/hangingman/following{/other_user}", "gists_url": "https://api.github.com/users/hangingman/gists{/gist_id}", "starred_url": "https://api.github.com/users/hangingman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hangingman/subscriptions", "organizations_url": "https://api.github.com/users/hangingman/orgs", "repos_url": "https://api.github.com/users/hangingman/repos", "events_url": "https://api.github.com/users/hangingman/events{/privacy}", "received_events_url": "https://api.github.com/users/hangingman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T09:28:22Z", "updated_at": "2020-04-24T14:30:40Z", "closed_at": "2020-04-24T14:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nsam-cli doesn't receive environment key containing underbar while we can set such keys on AWS Lambda.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n// Prepare a template.yml containing 'AWS::Serverless::Function' as Type\r\n\r\n$ sam deploy --parameter-overrides \"TEST_=a\"\r\n\r\nThen I got following error messages.\r\n\r\nUsage: sam deploy [OPTIONS]\r\nTry 'sam deploy --help' for help.\r\n\r\nError: Invalid value for '--parameter-overrides':  TEST_=a is not in valid format. It must look something like 'ParameterKey=KeyPairName,ParameterValue=MyKey ParameterKey=InstanceType,ParameterValue=t1.micro' or 'KeyPairName=MyKey InstanceType=t1.micro'\r\n```\r\n\r\n### Observed result\r\n\r\nPlease provide command output with `--debug` flag set.\r\n\r\n```\r\n$ sam deploy --debug --parameter-overrides \"TEST_=a\"\r\nUsage: sam deploy [OPTIONS]\r\nTry 'sam deploy --help' for help.\r\n\r\nError: Invalid value for '--parameter-overrides':  TEST_=a is not in valid format. It must look something like 'ParameterKey=KeyPairName,ParameterValue=MyKey ParameterKey=InstanceType,ParameterValue=t1.micro' or 'KeyPairName=MyKey InstanceType=t1.micro'\r\n```\r\n\r\n### Expected result\r\n\r\nWe should able to set under bar contained string as an environment variable. \r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac\r\n2. `sam --version`:\r\n```\r\n$ sam --version\r\nSAM CLI, version 0.47.0\r\n```\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1934", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1934/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1934/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1934/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1934", "id": 605648264, "node_id": "MDU6SXNzdWU2MDU2NDgyNjQ=", "number": 1934, "title": "Runtime deprecation on May 1st 2020", "user": {"login": "jfuss", "id": 32497805, "node_id": "MDQ6VXNlcjMyNDk3ODA1", "avatar_url": "https://avatars2.githubusercontent.com/u/32497805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfuss", "html_url": "https://github.com/jfuss", "followers_url": "https://api.github.com/users/jfuss/followers", "following_url": "https://api.github.com/users/jfuss/following{/other_user}", "gists_url": "https://api.github.com/users/jfuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfuss/subscriptions", "organizations_url": "https://api.github.com/users/jfuss/orgs", "repos_url": "https://api.github.com/users/jfuss/repos", "events_url": "https://api.github.com/users/jfuss/events{/privacy}", "received_events_url": "https://api.github.com/users/jfuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1524998572, "node_id": "MDU6TGFiZWwxNTI0OTk4NTcy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/deprecation", "name": "area/deprecation", "color": "fc4b77", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T15:49:20Z", "updated_at": "2020-05-18T13:42:04Z", "closed_at": "2020-05-18T13:42:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**SAM CLI will stop supporting dotnetcore2.0, nodejs4.3, nodejs6.10, and nodejs8.10 runtimes as of May 1st, 2020.**\r\n\r\nRuntimes Nodejs4.3, Nodejs6.10, Nodejs8.10, and .NetCore 2.0 are no longer supported by AWS Lambda. SAM CLI still currently supports these runtimes in `sam init`, `sam local invoke|start-api|start-lambda` and `sam build`. \r\n\r\n**What is the deprecation schedule?**\r\nIn an upcoming release after May 1st, SAM CLI will no longer allow customers use these depreciated runtimes within the CLI. \r\n\r\n**Am I impacted by this deprecation?**\r\nYou are impacted by this if you are still using one of the following runtimes: nodejs4.3, nodejs6.10, nodejs8.10, or dotnetcore2.0. The recommended path forward is to upgrade your functions to a new AWS Lambda supported runtime. \r\n\r\nFor Nodejs runtimes, you will need to upgrade to nodejs10.x or nodejs12.x.\r\nFor .NetCore, you will need to upgrade to dotnetcore2.1 or dotnetcore3.1.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1930", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1930/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1930/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1930/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1930", "id": 604210392, "node_id": "MDU6SXNzdWU2MDQyMTAzOTI=", "number": 1930, "title": "sam deploy - Unable to upload artifact - SSL validation failed ", "user": {"login": "franck-schmidlin", "id": 46777237, "node_id": "MDQ6VXNlcjQ2Nzc3MjM3", "avatar_url": "https://avatars2.githubusercontent.com/u/46777237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franck-schmidlin", "html_url": "https://github.com/franck-schmidlin", "followers_url": "https://api.github.com/users/franck-schmidlin/followers", "following_url": "https://api.github.com/users/franck-schmidlin/following{/other_user}", "gists_url": "https://api.github.com/users/franck-schmidlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/franck-schmidlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franck-schmidlin/subscriptions", "organizations_url": "https://api.github.com/users/franck-schmidlin/orgs", "repos_url": "https://api.github.com/users/franck-schmidlin/repos", "events_url": "https://api.github.com/users/franck-schmidlin/events{/privacy}", "received_events_url": "https://api.github.com/users/franck-schmidlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T18:57:39Z", "updated_at": "2020-04-23T06:27:17Z", "closed_at": "2020-04-23T06:26:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Description\r\n\r\nUnable to deploy SAM application due to a SSL validation failure.\r\nIssue can be reproduced with `sam deploy`, `sam package` and `aws cloudfront package`.\r\n\r\nWorkaround is to :\r\n1. download the `cacert.pem` file from https://curl.haxx.se/docs/caextract.html file (Certificate data from Mozilla as of: Wed Jan  1 04:12:10 2020 GMT, SHA256: f3bdcd74612952da8476a9d4147f50b29ad0710b7dd95b4c8690500209986d70) and \r\n2. set the `AWS_CA_BUNDLE` environment variable to point to the full path to `cacert.pem`\r\n\r\nbefore running sam deploy.\r\n\r\n### Steps to reproduce\r\n1. Generate a new SAM application with sam init. (dotnetcore3.1)\r\n2. `sam build`\r\n3. `sam deploy --guided --debug` (region = eu-central-1)\r\n\r\n### Observed result\r\n\r\n``` \r\nFailed to create managed resources\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 336, in ssl_wrap_socket\r\n    context.load_verify_locations(ca_certs, ca_cert_dir)\r\nssl.SSLError: [X509] PEM lib (_ssl.c:4109)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\httpsession.py\", line 263, in send\r\n    chunked=self._chunked(request.headers),\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\util\\retry.py\", line 376, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\packages\\six.py\", line 735, in reraise\r\n    raise value\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 376, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 994, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connection.py\", line 360, in connect\r\n    ssl_context=context,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 338, in ssl_wrap_socket\r\n    raise SSLError(e)\r\nurllib3.exceptions.SSLError: [X509] PEM lib (_ssl.c:4109)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\bootstrap\\bootstrap.py\", line 43, in _create_or_get_stack\r\n    ds_resp = cloudformation_client.describe_stacks(StackName=SAM_CLI_STACK_NAME)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\client.py\", line 613, in _make_api_call\r\n    operation_model, request_dict, request_context)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\client.py\", line 632, in _make_request\r\n    return self._endpoint.make_request(operation_model, request_dict)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 102, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 137, in _send_request\r\n    success_response, exception):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 231, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\hooks.py\", line 356, in emit\r\n    return self._emitter.emit(aliased_event_name, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\hooks.py\", line 228, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\hooks.py\", line 211, in _emit\r\n    response = handler(**kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 277, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 223, in __call__\r\n    attempt_number, caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 359, in _check_caught_exception\r\n    raise caught_exception\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 200, in _do_get_response\r\n    http_response = self._send(request)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 244, in _send\r\n    return self.http_session.send(request)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\httpsession.py\", line 281, in send\r\n    raise SSLError(endpoint_url=request.url, error=e)\r\nbotocore.exceptions.SSLError: SSL validation failed for https://cloudformation.eu-central-1.amazonaws.com/ [X509] PEM lib (_ssl.c:4109)\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': 'eu-central-1', 'commandName': 'sam deploy', 'duration': 8463, 'exitReason': 'ManagedStackError', 'exitCode': 1, 'requestId': 'a264a0c5-0928-4e9f-bb53-23ccaf06fd3d', 'installationId': '4ad95fb8-72cf-4f6c-ad25-d91169b7ca76', 'sessionId': 'c8120014-23c2-489c-a977-122adb2be1a1', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.47.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Max retries exceeded with url: /metrics (Caused by SSLError(SSLError(9, '[X509] PEM lib (_ssl.c:4109)')))\r\nError: Failed to create managed resources: SSL validation failed for https://cloudformation.eu-central-1.amazonaws.com/ [X509] PEM lib (_ssl.c:4109)\r\n```\r\n### Expected result\r\n\r\nOut of the box, running a newly installed, up to date AWS and SAM CLI, I should be able to deploy without further faffing.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n1. OS:\r\n```\r\nsysteminfo | findstr /B /C:\"OS Name\" /C:\"OS Version\"\r\nOS Name:                   Microsoft Windows 10 Pro\r\nOS Version:                10.0.17134 N/A Build 17134\r\n```\r\n2. `sam --version`: `SAM CLI, version 0.47.0`\r\n3. `aws --version`: `aws-cli/2.0.8 Python/3.7.5 Windows/10 botocore/2.0.0dev12`\r\n\r\n4. Reproducing sam issue, different error, with `sam package --s3-bucket franck1234 --debug`\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nUnable to export\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 336, in ssl_wrap_socket\r\n    context.load_verify_locations(ca_certs, ca_cert_dir)\r\nssl.SSLError: [X509] PEM lib (_ssl.c:4109)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\httpsession.py\", line 263, in send\r\n    chunked=self._chunked(request.headers),\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\util\\retry.py\", line 376, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\packages\\six.py\", line 735, in reraise\r\n    raise value\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 376, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connectionpool.py\", line 994, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\connection.py\", line 360, in connect\r\n    ssl_context=context,\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 338, in ssl_wrap_socket\r\n    raise SSLError(e)\r\nurllib3.exceptions.SSLError: [X509] PEM lib (_ssl.c:4109)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\artifact_exporter.py\", line 267, in export\r\n    self.do_export(resource_id, resource_dict, parent_dir)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\artifact_exporter.py\", line 283, in do_export\r\n    uploaded_url = upload_local_artifacts(resource_id, resource_dict, self.PROPERTY_NAME, parent_dir, self.uploader)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\artifact_exporter.py\", line 152, in upload_local_artifacts\r\n    return zip_and_upload(local_path, uploader)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\artifact_exporter.py\", line 170, in zip_and_upload\r\n    return uploader.upload_with_dedup(zip_file, precomputed_md5=md5_hash)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\s3_uploader.py\", line 129, in upload_with_dedup\r\n    return self.upload(file_name, remote_path)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\s3_uploader.py\", line 77, in upload\r\n    if not self.force_upload and self.file_exists(remote_path):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\samcli\\lib\\package\\s3_uploader.py\", line 143, in file_exists\r\n    self.s3.head_object(Bucket=self.bucket_name, Key=remote_path)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\client.py\", line 316, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\client.py\", line 613, in _make_api_call\r\n    operation_model, request_dict, request_context)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\client.py\", line 632, in _make_request\r\n    return self._endpoint.make_request(operation_model, request_dict)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 102, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 137, in _send_request\r\n    success_response, exception):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 231, in _needs_retry\r\n    caught_exception=caught_exception, request_dict=request_dict)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\hooks.py\", line 356, in emit\r\n    return self._emitter.emit(aliased_event_name, **kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\hooks.py\", line 228, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\hooks.py\", line 211, in _emit\r\n    response = handler(**kwargs)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 183, in __call__\r\n    if self._checker(attempts, response, caught_exception):\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 251, in __call__\r\n    caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 277, in _should_retry\r\n    return self._checker(attempt_number, response, caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 317, in __call__\r\n    caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 223, in __call__\r\n    attempt_number, caught_exception)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\retryhandler.py\", line 359, in _check_caught_exception\r\n    raise caught_exception\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 200, in _do_get_response\r\n    http_response = self._send(request)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\endpoint.py\", line 244, in _send\r\n    return self.http_session.send(request)\r\n  File \"C:\\Program Files\\Amazon\\AWSSAMCLI\\runtime\\lib\\site-packages\\botocore\\httpsession.py\", line 281, in send\r\n    raise SSLError(endpoint_url=request.url, error=e)\r\nbotocore.exceptions.SSLError: SSL validation failed for https://franck1234.s3.eu-central-1.amazonaws.com/ade152d4ef9c2158c3e654037af9b6a0 [X509] PEM lib (_ssl.c:4109)\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam package', 'duration': 9152, 'exitReason': 'ExportFailedError', 'exitCode': 1, 'requestId': 'd04ade1f-1395-4c75-aa04-1b4deee705ba', 'installationId': '4ad95fb8-72cf-4f6c-ad25-d91169b7ca76', 'sessionId': '32f22bad-83f9-4c53-90e9-f98098db7539', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.47.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Max retries exceeded with url: /metrics (Caused by SSLError(SSLError(9, '[X509] PEM lib (_ssl.c:4109)')))\r\nError: Unable to upload artifact HelloWorldFunction referenced by CodeUri parameter of HelloWorldFunction resource.\r\nSSL validation failed for https://franck1234.s3.eu-central-1.amazonaws.com/ade152d4ef9c2158c3e654037af9b6a0 [X509] PEM lib (_ssl.c:4109)\r\n```\r\n5.  Reproducing same issue, different error, with `aws cloudformation package --s3-bucket franck1234 --debug --template template.yaml`\r\n\r\nCan't reproducing right now - I could swear this was failing earlier today !! :-(\r\nI fact, I believe there is something transient about this issue\r\n\r\n```\r\n2020-04-21 19:53:10,902 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/2.0.8 Python/3.7.5 Windows/10 botocore/2.0.0dev12\r\n2020-04-21 19:53:10,903 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['cloudformation', 'package', '--s3-bucket', 'franck-1234', '--debug', '--template-file', 'template.yaml']\r\n2020-04-21 19:53:10,904 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function add_timestamp_parser at 0x000002B6B26D6168>\r\n2020-04-21 19:53:10,905 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function register_uri_param_handler at 0x000002B6B1726558>\r\n2020-04-21 19:53:10,906 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function add_binary_formatter at 0x000002B6B277EAF8>\r\n2020-04-21 19:53:10,907 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function inject_assume_role_provider_cache at 0x000002B6B174D0D8>\r\n2020-04-21 19:53:10,912 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function attach_history_handler at 0x000002B6B25EEE58>\r\n2020-04-21 19:53:10,913 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler <function inject_json_file_cache at 0x000002B6B2593F78>\r\n2020-04-21 19:53:11,108 - MainThread - botocore.loaders - DEBUG - Loading JSON file: C:\\Program Files\\Amazon\\AWSCLIV2\\botocore\\data\\cloudformation\\2010-05-15\\service-2.json\r\n2020-04-21 19:53:11,125 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cloudformation: calling handler <function inject_commands at 0x000002B6B19AC5E8>\r\n2020-04-21 19:53:11,126 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cloudformation: calling handler <function add_waiters at 0x000002B6B273DB88>\r\n2020-04-21 19:53:11,253 - MainThread - botocore.loaders - DEBUG - Loading JSON file: C:\\Program Files\\Amazon\\AWSCLIV2\\botocore\\data\\cloudformation\\2010-05-15\\waiters-2.json\r\n2020-04-21 19:53:11,256 - MainThread - botocore.hooks - DEBUG - Event building-command-table.package: calling handler <function add_waiters at 0x000002B6B273DB88>\r\n2020-04-21 19:53:11,257 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.template-file: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,258 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.package: calling handler <awscli.argprocess.ParamShorthandParser object at 0x000002B6B171E0C8>\r\n2020-04-21 19:53:11,259 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.s3-bucket: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,260 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.package: calling handler <awscli.argprocess.ParamShorthandParser object at 0x000002B6B171E0C8>\r\n2020-04-21 19:53:11,260 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.s3-prefix: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,262 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.kms-key-id: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,262 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.output-template-file: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,263 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.use-json: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,264 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.package: calling handler <awscli.argprocess.ParamShorthandParser object at 0x000002B6B171E0C8>\r\n2020-04-21 19:53:11,268 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.force-upload: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,269 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.package: calling handler <awscli.argprocess.ParamShorthandParser object at 0x000002B6B171E0C8>\r\n2020-04-21 19:53:11,270 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.package.metadata: calling handler <awscli.paramfile.URIArgumentHandler object at 0x000002B6B2802FC8>\r\n2020-04-21 19:53:11,271 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env\r\n2020-04-21 19:53:11,271 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role\r\n2020-04-21 19:53:11,272 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: assume-role-with-web-identity\r\n2020-04-21 19:53:11,273 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: sso\r\n2020-04-21 19:53:11,273 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: shared-credentials-file\r\n2020-04-21 19:53:11,276 - MainThread - botocore.credentials - INFO - Found credentials in shared credentials file: ~/.aws/credentials\r\n2020-04-21 19:53:11,278 - MainThread - botocore.loaders - DEBUG - Loading JSON file: C:\\Program Files\\Amazon\\AWSCLIV2\\botocore\\data\\endpoints.json\r\n2020-04-21 19:53:11,288 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler <function handle_service_name_alias at 0x000002B6B136D708>\r\n2020-04-21 19:53:11,293 - MainThread - botocore.loaders - DEBUG - Loading JSON file: C:\\Program Files\\Amazon\\AWSCLIV2\\botocore\\data\\s3\\2006-03-01\\service-2.json\r\n2020-04-21 19:53:11,308 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x000002B6B131FB88>\r\n2020-04-21 19:53:11,309 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x000002B6B131F948>\r\n2020-04-21 19:53:11,318 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)\r\n2020-04-21 19:53:11,479 - MainThread - botocore.hooks - DEBUG - Event provide-client-params.s3.HeadObject: calling handler <function base64_decode_input_blobs at 0x000002B6B277EB88>\r\n2020-04-21 19:53:11,480 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler <function sse_md5 at 0x000002B6B1371828>\r\n2020-04-21 19:53:11,481 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler <function validate_bucket_name at 0x000002B6B1371798>\r\n2020-04-21 19:53:11,482 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x000002B6B2B3A088>>\r\n2020-04-21 19:53:11,483 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler <bound method S3ArnParamHandler.handle_arn of <botocore.utils.S3ArnParamHandler object at 0x000002B6B2B3A508>>\r\n2020-04-21 19:53:11,484 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler <function generate_idempotent_uuid at 0x000002B6B13713A8>\r\n2020-04-21 19:53:11,485 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler <function add_expect_header at 0x000002B6B1371AF8>\r\n2020-04-21 19:53:11,486 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x000002B6B2B3A088>>\r\n2020-04-21 19:53:11,487 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler <function inject_api_version_header_if_needed at 0x000002B6B1374E58>\r\n2020-04-21 19:53:11,487 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/franck-1234/7bb3088ea64023a0c272ad4ec3c59442', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/2.0.8 Python/3.7.5 Windows/10 botocore/2.0.0dev12'}, 'body': b'', 'url': 'https://s3.eu-central-1.amazonaws.com/franck-1234/7bb3088ea64023a0c272ad4ec3c59442', 'context': {'client_region': 'eu-central-1', 'client_config': <botocore.config.Config object at 0x000002B6B2B366C8>, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'franck-1234'}}}\r\n2020-04-21 19:53:11,488 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler <function signal_not_transferring at 0x000002B6B19631F8>\r\n2020-04-21 19:53:11,489 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002B6B2DD6B88>>\r\n2020-04-21 19:53:11,489 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler <function set_operation_specific_signer at 0x000002B6B1368438>\r\n2020-04-21 19:53:11,493 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler <bound method S3EndpointSetter.set_endpoint of <botocore.utils.S3EndpointSetter object at 0x000002B6B2B3A5C8>>\r\n2020-04-21 19:53:11,494 - MainThread - botocore.utils - DEBUG - Defaulting to S3 virtual host style addressing with path style addressing fallback.\r\n2020-04-21 19:53:11,495 - MainThread - botocore.utils - DEBUG - Checking for DNS compatible bucket for: https://s3.eu-central-1.amazonaws.com/franck-1234/7bb3088ea64023a0c272ad4ec3c59442\r\n2020-04-21 19:53:11,495 - MainThread - botocore.utils - DEBUG - URI updated to: https://franck-1234.s3.eu-central-1.amazonaws.com/7bb3088ea64023a0c272ad4ec3c59442\r\n2020-04-21 19:53:11,497 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.\r\n2020-04-21 19:53:11,497 - MainThread - botocore.auth - DEBUG - CanonicalRequest:\r\nHEAD\r\n/7bb3088ea64023a0c272ad4ec3c59442\r\n\r\nhost:franck-1234.s3.eu-central-1.amazonaws.com\r\nx-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\nx-amz-date:20200421T185311Z\r\n\r\nhost;x-amz-content-sha256;x-amz-date\r\ne3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\r\n2020-04-21 19:53:11,498 - MainThread - botocore.auth - DEBUG - StringToSign:\r\nAWS4-HMAC-SHA256\r\n20200421T185311Z\r\n20200421/eu-central-1/s3/aws4_request\r\nd0b96ae49e21f1d3a6155067264c4e81d4b567ecbb73cdbf1b46c43612bcf770\r\n2020-04-21 19:53:11,499 - MainThread - botocore.auth - DEBUG - Signature:\r\n8acf83cb578c34620634c6454921c5c183efcd40e44de8920a10fdc349301485\r\n2020-04-21 19:53:11,499 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler <function signal_transferring at 0x000002B6B1963288>\r\n2020-04-21 19:53:11,500 - MainThread - botocore.endpoint - DEBUG - Sending http request: <AWSPreparedRequest stream_output=False, method=HEAD, url=https://franck-1234.s3.eu-central-1.amazonaws.com/7bb3088ea64023a0c272ad4ec3c59442, headers={'User-Agent': b'aws-cli/2.0.8 Python/3.7.5 Windows/10 botocore/2.0.0dev12', 'X-Amz-Date': b'20200421T185311Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIAXCJDS4SYU2PH5OKX/20200421/eu-central-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8acf83cb578c34620634c6454921c5c183efcd40e44de8920a10fdc349301485'}>\r\n2020-04-21 19:53:11,502 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): franck-1234.s3.eu-central-1.amazonaws.com:443\r\n2020-04-21 19:53:12,873 - MainThread - urllib3.connectionpool - DEBUG - https://franck-1234.s3.eu-central-1.amazonaws.com:443 \"HEAD /7bb3088ea64023a0c272ad4ec3c59442 HTTP/1.1\" 404 0\r\n2020-04-21 19:53:12,874 - MainThread - botocore.parsers - DEBUG - Response headers: {'x-amz-request-id': 'EC84D9E2C1E14552', 'x-amz-id-2': 'O4IttvtLZq4k1v6ZPl/shn3ClA8C8n/LHZW64Ayu+vNwNWafpfOTi+tsIHl+AohyzU6Y9GG1KHA=', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Date': 'Tue, 21 Apr 2020 18:53:12 GMT', 'Server': 'AmazonS3'}\r\n2020-04-21 19:53:12,875 - MainThread - botocore.parsers - DEBUG - Response body:\r\nb''\r\n2020-04-21 19:53:12,876 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler <bound method RetryHandler.needs_retry of <botocore.retries.standard.RetryHandler object at 0x000002B6B2B3A448>>\r\n2020-04-21 19:53:12,877 - MainThread - botocore.retries.standard - DEBUG - Not retrying request.\r\n2020-04-21 19:53:12,877 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x000002B6B2B3A088>>\r\n2020-04-21 19:53:12,878 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler <function enhance_error_msg at 0x000002B6B2731AF8>\r\n2020-04-21 19:53:12,879 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler <bound method RetryQuotaChecker.release_retry_quota of <botocore.retries.standard.RetryQuotaChecker object at 0x000002B6B14D09C8>>\r\n2020-04-21 19:53:12,883 - MainThread - s3transfer.utils - DEBUG - Acquiring 0\r\n2020-04-21 19:53:12,885 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': <s3transfer.futures.TransferFuture object at 0x000002B6B2B732C8>}) about to wait for the following futures []\r\n2020-04-21 19:53:12,886 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': <s3transfer.futures.TransferFuture object at 0x000002B6B2B732C8>}) done waiting for dependent futures\r\n2020-04-21 19:53:12,887 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': <s3transfer.futures.TransferFuture object at 0x000002B6B2B732C8>}) with kwargs {'client': <botocore.client.S3 object at 0x000002B6B2DD68C8>, 'config': <s3transfer.manager.TransferConfig object at 0x000002B6B2B3A588>, 'osutil': <s3transfer.utils.OSUtils object at 0x000002B6B2B3A708>, 'request_executor': <s3transfer.futures.BoundedExecutor object at 0x000002B6B2B3A848>, 'transfer_future': <s3transfer.futures.TransferFuture object at 0x000002B6B2B732C8>}\r\n2020-04-21 19:53:12,888 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'franck-1234', 'key': '7bb3088ea64023a0c272ad4ec3c59442', 'extra_args': {'ServerSideEncryption': 'AES256'}}) to executor <s3transfer.futures.BoundedExecutor object at 0x000002B6B2B3A848> for transfer request: 0.\r\n2020-04-21 19:53:12,889 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0\r\n2020-04-21 19:53:12,890 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'franck-1234', 'key': '7bb3088ea64023a0c272ad4ec3c59442', 'extra_args': {'ServerSideEncryption': 'AES256'}}) about to wait for the following futures []\r\n2020-04-21 19:53:12,890 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None\r\n2020-04-21 19:53:12,890 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'franck-1234', 'key': '7bb3088ea64023a0c272ad4ec3c59442', 'extra_args': {'ServerSideEncryption': 'AES256'}}) done waiting for dependent futures\r\n2020-04-21 19:53:12,892 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'franck-1234', 'key': '7bb3088ea64023a0c272ad4ec3c59442', 'extra_args': {'ServerSideEncryption': 'AES256'}}) with kwargs {'client': <botocore.client.S3 object at 0x000002B6B2DD68C8>, 'fileobj': <s3transfer.utils.ReadFileChunk object at 0x000002B6B2B73348>, 'bucket': 'franck-1234', 'key': '7bb3088ea64023a0c272ad4ec3c59442', 'extra_args': {'ServerSideEncryption': 'AES256'}}\r\n2020-04-21 19:53:12,893 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event provide-client-params.s3.PutObject: calling handler <function base64_decode_input_blobs at 0x000002B6B277EB88>\r\n2020-04-21 19:53:12,897 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <function validate_ascii_metadata at 0x000002B6B1374438>\r\n2020-04-21 19:53:12,897 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <function sse_md5 at 0x000002B6B1371828>\r\n2020-04-21 19:53:12,898 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <function convert_body_to_file_like_object at 0x000002B6B1374D38>\r\n2020-04-21 19:53:12,899 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <function validate_bucket_name at 0x000002B6B1371798>\r\n2020-04-21 19:53:12,900 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <bound method S3RegionRedirector.redirect_from_cache of <botocore.utils.S3RegionRedirector object at 0x000002B6B2B3A088>>\r\n2020-04-21 19:53:12,900 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <bound method S3ArnParamHandler.handle_arn of <botocore.utils.S3ArnParamHandler object at 0x000002B6B2B3A508>>\r\n2020-04-21 19:53:12,901 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler <function generate_idempotent_uuid at 0x000002B6B13713A8>\r\n2020-04-21 19:53:12,902 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler <function conditionally_calculate_md5 at 0x000002B6B1371708>\r\n2020-04-21 19:53:12,904 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler <function add_expect_header at 0x000002B6B1371AF8>\r\n2020-04-21 19:53:12,905 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.\r\n2020-04-21 19:53:12,905 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler <bound method S3RegionRedirector.set_request_url of <botocore.utils.S3RegionRedirector object at 0x000002B6B2B3A088>>\r\n2020-04-21 19:53:12,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler <function inject_api_version_header_if_needed at 0x000002B6B1374E58>\r\n2020-04-21 19:53:12,909 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/franck-1234/7bb3088ea64023a0c272ad4ec3c59442', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-server-side-encryption': 'AES256', 'User-Agent': 'aws-cli/2.0.8 Python/3.7.5 Windows/10 botocore/2.0.0dev12', 'Content-MD5': 'e7MIjqZAI6DCcq1Ow8WUQg==', 'Expect': '100-continue'}, 'body': <s3transfer.utils.ReadFileChunk object at 0x000002B6B2B73348>, 'url': 'https://s3.eu-central-1.amazonaws.com/franck-1234/7bb3088ea64023a0c272ad4ec3c59442', 'context': {'client_region': 'eu-central-1', 'client_config': <botocore.config.Config object at 0x000002B6B2B366C8>, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'franck-1234'}}}\r\n2020-04-21 19:53:12,910 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler <function signal_not_transferring at 0x000002B6B19631F8>\r\n2020-04-21 19:53:12,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002B6B2DD6B88>>\r\n2020-04-21 19:53:12,912 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler <function set_operation_specific_signer at 0x000002B6B1368438>\r\n2020-04-21 19:53:12,913 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler <bound method S3EndpointSetter.set_endpoint of <botocore.utils.S3EndpointSetter object at 0x000002B6B2B3A5C8>>\r\n2020-04-21 19:53:12,914 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Checking for DNS compatible bucket for: https://s3.eu-central-1.amazonaws.com/franck-1234/7bb3088ea64023a0c272ad4ec3c59442\r\n2020-04-21 19:53:12,915 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - URI updated to: https://franck-1234.s3.eu-central-1.amazonaws.com/7bb3088ea64023a0c272ad4ec3c59442\r\n2020-04-21 19:53:12,916 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.\r\n2020-04-21 19:53:12,916 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:\r\nPUT\r\n/7bb3088ea64023a0c272ad4ec3c59442\r\n\r\ncontent-md5:e7MIjqZAI6DCcq1Ow8WUQg==\r\nhost:franck-1234.s3.eu-central-1.amazonaws.com\r\nx-amz-content-sha256:UNSIGNED-PAYLOAD\r\nx-amz-date:20200421T185312Z\r\nx-amz-server-side-encryption:AES256\r\n\r\ncontent-md5;host;x-amz-content-sha256;x-amz-date;x-amz-server-side-encryption\r\nUNSIGNED-PAYLOAD\r\n2020-04-21 19:53:12,918 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:\r\nAWS4-HMAC-SHA256\r\n20200421T185312Z\r\n20200421/eu-central-1/s3/aws4_request\r\n9154868690f036a0ee93ab7d72b0f1b6fa43605bfaada1206014b4c3045d62ef\r\n2020-04-21 19:53:12,922 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:\r\n5e1f9373cbf4129ea267f3cab6dc2f53ca93b01a5b8d1709475efa489fab192a\r\n2020-04-21 19:53:12,923 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler <function signal_transferring at 0x000002B6B1963288>\r\n2020-04-21 19:53:12,924 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: <AWSPreparedRequest stream_output=False, method=PUT, url=https://franck-1234.s3.eu-central-1.amazonaws.com/7bb3088ea64023a0c272ad4ec3c59442, headers={'x-amz-server-side-encryption': b'AES256', 'User-Agent': b'aws-cli/2.0.8 Python/3.7.5 Windows/10 botocore/2.0.0dev12', 'Content-MD5': b'e7MIjqZAI6DCcq1Ow8WUQg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20200421T185312Z', 'X-Amz-Content-SHA256': b'UNSIGNED-PAYLOAD', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIAXCJDS4SYU2PH5OKX/20200421/eu-central-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-server-side-encryption, Signature=5e1f9373cbf4129ea267f3cab6dc2f53ca93b01a5b8d1709475efa489fab192a', 'Content-Length': '320929'}>\r\n2020-04-21 19:53:12,926 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.\r\n2020-04-21 19:53:13,157 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.\r\nUploading to 7bb3088ea64023a0c272ad4ec3c59442  262144 / 320929.0  (81.68%)2020-04-21 19:53:22,227 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - https://franck-1234.s3.eu-central-1.amazonaws.com:443 \"PUT /7bb3088ea64023a0c272ad4ec3c59442 HTTP/1.1\" 200 0\r\n2020-04-21 19:53:22,229 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'x-amz-id-2': 'UPI+ZWWmFsQHFK8l/0diuzbcA6kw0S9fe7I1YqTvwKvgfpr/RSiwwfie+yMS9j9XZAvlyIhv+co=', 'x-amz-request-id': '67430DA66AAFEA07', 'Date': 'Tue, 21 Apr 2020 18:53:14 GMT', 'x-amz-server-side-encryption': 'AES256', 'ETag': '\"7bb3088ea64023a0c272ad4ec3c59442\"', 'Content-Length': '0', 'Server': 'AmazonS3'}\r\n2020-04-21 19:53:22,230 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:\r\nb''\r\n2020-04-21 19:53:22,231 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler <bound method RetryHandler.needs_retry of <botocore.retries.standard.RetryHandler object at 0x000002B6B2B3A448>>\r\n2020-04-21 19:53:22,232 - ThreadPoolExecutor-0_0 - botocore.retries.standard - DEBUG - Not retrying request.\r\n2020-04-21 19:53:22,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler <bound method S3RegionRedirector.redirect_from_error of <botocore.utils.S3RegionRedirector object at 0x000002B6B2B3A088>>\r\n2020-04-21 19:53:22,233 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler <function enhance_error_msg at 0x000002B6B2731AF8>\r\n2020-04-21 19:53:22,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler <bound method RetryQuotaChecker.release_retry_quota of <botocore.retries.standard.RetryQuotaChecker object at 0x000002B6B14D09C8>>\r\nUploading to 7bb3088ea64023a0c272ad4ec3c59442  320929 / 320929.0  (100.00%)2020-04-21 19:53:22,236 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None\r\n\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nTransform: AWS::Serverless-2016-10-31\r\nDescription: \"Sample SAM Template for helloworld\\n\"\r\nGlobals:\r\n  Function:\r\n    Timeout: 10\r\nResources:\r\n  HelloWorldFunction:\r\n    Type: AWS::Serverless::Function\r\n    Properties:\r\n      CodeUri: s3://franck-1234/7bb3088ea64023a0c272ad4ec3c59442\r\n      Handler: HelloWorld::HelloWorld.Function::FunctionHandler\r\n      Runtime: dotnetcore3.1\r\n      Environment:\r\n        Variables:\r\n          PARAM1: VALUE\r\n      Events:\r\n        HelloWorld:\r\n          Type: Api\r\n          Properties:\r\n            Path: /hello\r\n            Method: get\r\nOutputs:\r\n  HelloWorldApi:\r\n    Description: API Gateway endpoint URL for Prod stage for Hello World function\r\n    Value:\r\n      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/\r\n  HelloWorldFunction:\r\n    Description: Hello World Lambda Function ARN\r\n    Value:\r\n      Fn::GetAtt:\r\n      - HelloWorldFunction\r\n      - Arn\r\n  HelloWorldFunctionIamRole:\r\n    Description: Implicit IAM Role created for Hello World function\r\n    Value:\r\n      Fn::GetAtt:\r\n      - HelloWorldFunctionRole\r\n      - Arn\r\n```\r\n6. WITH `$env:AWS_CA_BUNDLE = \"C:\\_workspaces\\frog-event-driven\\experience-api\\cacert.pem\"`\r\n\r\nNote the SSL error at the end though\r\n\r\n`sam deploy --debug`\r\n\r\n```\r\nsam deploy --debug\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n\r\n        Deploying with following values\r\n        ===============================\r\n        Stack name                 : helloworld\r\n        Region                     : eu-central-1\r\n        Confirm changeset          : True\r\n        Deployment s3 bucket       : aws-sam-cli-managed-default-samclisourcebucket-1asxxxwuqpoyy\r\n        Capabilities               : [\"CAPABILITY_IAM\"]\r\n        Parameter overrides        : {}\r\n\r\nInitiating deployment\r\n=====================\r\nFile with same data is already exists at helloworld/e7b3ed53868e8df549c794148050335e. Skipping upload\r\nFile with same data is already exists at helloworld/4ccf0bb477d7e8181c4dc649d1e90fc8.template. Skipping upload\r\n\r\nWaiting for changeset to be created..\r\n\r\nCloudFormation stack changeset\r\n---------------------------------------------------------------------------------------------------------------------\r\nOperation                               LogicalResourceId                       ResourceType\r\n---------------------------------------------------------------------------------------------------------------------\r\n+ Add                                   HelloWorldFunctionHelloWorldPermissio   AWS::Lambda::Permission\r\n                                        nProd\r\n+ Add                                   HelloWorldFunctionRole                  AWS::IAM::Role\r\n+ Add                                   HelloWorldFunction                      AWS::Lambda::Function\r\n+ Add                                   ServerlessRestApiDeployment47fc2d5f9d   AWS::ApiGateway::Deployment\r\n+ Add                                   ServerlessRestApiProdStage              AWS::ApiGateway::Stage\r\n+ Add                                   ServerlessRestApi                       AWS::ApiGateway::RestApi\r\n---------------------------------------------------------------------------------------------------------------------\r\n\r\nChangeset created successfully. arn:aws:cloudformation:eu-central-1:123456789012:changeSet/samcli-deploy1587495602/5f44df7b-1932-4f0f-a240-6f5c36947d75\r\n\r\n\r\nPreviewing CloudFormation changeset before deployment\r\n======================================================\r\nDeploy this changeset? [y/N]: y\r\n\r\n2020-04-21 20:00:15 - Waiting for stack create/update to complete\r\n\r\nCloudFormation events from changeset\r\n---------------------------------------------------------------------------------------------------------------------\r\nResourceStatus                ResourceType                  LogicalResourceId             ResourceStatusReason\r\n---------------------------------------------------------------------------------------------------------------------\r\nCREATE_IN_PROGRESS            AWS::IAM::Role                HelloWorldFunctionRole        Resource creation Initiated\r\nCREATE_IN_PROGRESS            AWS::IAM::Role                HelloWorldFunctionRole        -\r\nCREATE_COMPLETE               AWS::IAM::Role                HelloWorldFunctionRole        -\r\nCREATE_IN_PROGRESS            AWS::Lambda::Function         HelloWorldFunction            Resource creation Initiated\r\nCREATE_IN_PROGRESS            AWS::Lambda::Function         HelloWorldFunction            -\r\nCREATE_COMPLETE               AWS::Lambda::Function         HelloWorldFunction            -\r\nCREATE_IN_PROGRESS            AWS::ApiGateway::RestApi      ServerlessRestApi             Resource creation Initiated\r\nCREATE_IN_PROGRESS            AWS::ApiGateway::RestApi      ServerlessRestApi             -\r\nCREATE_COMPLETE               AWS::ApiGateway::RestApi      ServerlessRestApi             -\r\nCREATE_COMPLETE               AWS::ApiGateway::Deployment   ServerlessRestApiDeployment   -\r\n                                                            47fc2d5f9d\r\nCREATE_IN_PROGRESS            AWS::ApiGateway::Deployment   ServerlessRestApiDeployment   Resource creation Initiated\r\n                                                            47fc2d5f9d\r\nCREATE_IN_PROGRESS            AWS::Lambda::Permission       HelloWorldFunctionHelloWorl   Resource creation Initiated\r\n                                                            dPermissionProd\r\nCREATE_IN_PROGRESS            AWS::ApiGateway::Deployment   ServerlessRestApiDeployment   -\r\n                                                            47fc2d5f9d\r\nCREATE_IN_PROGRESS            AWS::Lambda::Permission       HelloWorldFunctionHelloWorl   -\r\n                                                            dPermissionProd\r\nCREATE_IN_PROGRESS            AWS::ApiGateway::Stage        ServerlessRestApiProdStage    -\r\nCREATE_IN_PROGRESS            AWS::ApiGateway::Stage        ServerlessRestApiProdStage    Resource creation Initiated\r\nCREATE_COMPLETE               AWS::ApiGateway::Stage        ServerlessRestApiProdStage    -\r\nCREATE_COMPLETE               AWS::Lambda::Permission       HelloWorldFunctionHelloWorl   -\r\n                                                            dPermissionProd\r\nCREATE_COMPLETE               AWS::CloudFormation::Stack    helloworld                    -\r\n---------------------------------------------------------------------------------------------------------------------\r\n\r\nCloudFormation outputs from deployed stack\r\n---------------------------------------------------------------------------------------------------------------------\r\nOutputs\r\n---------------------------------------------------------------------------------------------------------------------\r\nKey                 HelloWorldFunctionIamRole\r\nDescription         Implicit IAM Role created for Hello World function\r\nValue               arn:aws:iam::123456789012:role/helloworld-HelloWorldFunctionRole-Q60UKA48XTIH\r\n\r\nKey                 HelloWorldApi\r\nDescription         API Gateway endpoint URL for Prod stage for Hello World function\r\nValue               https://2l8grq7que.execute-api.eu-central-1.amazonaws.com/Prod/hello/\r\n\r\nKey                 HelloWorldFunction\r\nDescription         Hello World Lambda Function ARN\r\nValue               arn:aws:lambda:eu-central-1:123456789012:function:helloworld-HelloWorldFunction-I340VP86ZXH4\r\n---------------------------------------------------------------------------------------------------------------------\r\n\r\nSuccessfully created/updated stack - helloworld in eu-central-1\r\n\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': 'eu-central-1', 'commandName': 'sam deploy', 'duration': 55198, 'exitReason': 'success', 'exitCode': 0, 'requestId': '9d3692c9-acf7-4078-91f0-841c30eb0952', 'installationId': '4ad95fb8-72cf-4f6c-ad25-d91169b7ca76', 'sessionId': '370fe88a-63aa-4cb7-ad5d-5bcd4e0da434', 'executionEnvironment': 'CLI', 'pyversion': '3.7.6', 'samcliVersion': '0.47.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Max retries exceeded with url: /metrics (Caused by SSLError(SSLError(9, '[X509] PEM lib (_ssl.c:4109)')))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1927", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1927/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1927/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1927/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1927", "id": 602979514, "node_id": "MDU6SXNzdWU2MDI5Nzk1MTQ=", "number": 1927, "title": "Homebrew does not have aws-sam-cli", "user": {"login": "challapradyumna", "id": 838556, "node_id": "MDQ6VXNlcjgzODU1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/838556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/challapradyumna", "html_url": "https://github.com/challapradyumna", "followers_url": "https://api.github.com/users/challapradyumna/followers", "following_url": "https://api.github.com/users/challapradyumna/following{/other_user}", "gists_url": "https://api.github.com/users/challapradyumna/gists{/gist_id}", "starred_url": "https://api.github.com/users/challapradyumna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/challapradyumna/subscriptions", "organizations_url": "https://api.github.com/users/challapradyumna/orgs", "repos_url": "https://api.github.com/users/challapradyumna/repos", "events_url": "https://api.github.com/users/challapradyumna/events{/privacy}", "received_events_url": "https://api.github.com/users/challapradyumna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-20T06:31:30Z", "updated_at": "2020-07-30T16:27:55Z", "closed_at": "2020-04-20T06:40:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\n\r\nHomebrew does not have aws-sam-cli formula\r\n\r\n### Steps to reproduce\r\n\r\nrun `brew install aws-sam-cli\r\n\r\n### Observed result\r\n\r\nError: No available formula with the name \"aws-sam-cli\"\r\n\r\n### Expected result\r\n\r\nInstall aws-sam-cli on macOS\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: MacOS Catalina 10.15.4\r\n2. Homebrew Version:  2.2.13", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1926", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1926/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1926/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1926/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1926", "id": 602584990, "node_id": "MDU6SXNzdWU2MDI1ODQ5OTA=", "number": 1926, "title": "VS Code debugging not working as per documentation", "user": {"login": "rupe120", "id": 860348, "node_id": "MDQ6VXNlcjg2MDM0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/860348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rupe120", "html_url": "https://github.com/rupe120", "followers_url": "https://api.github.com/users/rupe120/followers", "following_url": "https://api.github.com/users/rupe120/following{/other_user}", "gists_url": "https://api.github.com/users/rupe120/gists{/gist_id}", "starred_url": "https://api.github.com/users/rupe120/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rupe120/subscriptions", "organizations_url": "https://api.github.com/users/rupe120/orgs", "repos_url": "https://api.github.com/users/rupe120/repos", "events_url": "https://api.github.com/users/rupe120/events{/privacy}", "received_events_url": "https://api.github.com/users/rupe120/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200185, "node_id": "MDU6TGFiZWw3OTcyMDAxODU=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/ide", "name": "area/ide", "color": "0e8a16", "default": false, "description": null}, {"id": 797200194, "node_id": "MDU6TGFiZWw3OTcyMDAxOTQ=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/question", "name": "type/question", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-19T00:33:51Z", "updated_at": "2020-06-30T08:15:16Z", "closed_at": "2020-04-21T13:23:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nThe setup described in the following documentation does not seem to work. \r\n\r\nhttps://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-using-debugging-python.html\r\n\r\n### Steps to reproduce\r\n\r\nI setup the following repository to demonstrate\r\n\r\nhttps://github.com/rupe120/aws-sam-python-debugging-test\r\n\r\nAs shown in the readme, I perform the following:\r\n\r\n```\r\nsam build --use-container\r\nsam local invoke -d 5890\r\n```\r\n\r\nI set the breakpoint in the code within `.aws-sam/build` and when I start the debugger the breakpoint is ignored.\r\n\r\nI tried to submit a question to Stackoverflow but this all seems to be in line with the documentation and no one has so far repsoned that this setup is incorrect.\r\n\r\nhttps://stackoverflow.com/questions/61294133/aws-sam-vscode-ptvsd-debugging-not-using-breakpoints\r\n\r\n### Observed result\r\n\r\nThe code executes without pausing at the breakpoint\r\n\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal invoke command is called\r\nCollected default values for parameters: {'OwnerTag': 'jrusso', 'ProjectTag': 'Sandbox'}\r\n4 resources found in the template\r\nFound Serverless function with name='Function1' and CodeUri='Function1'\r\nInvoking app.lambda_handler (python3.8)\r\nNo environment variables found for function 'Function1'\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=C:\\Temp\\aws\\sam-debug-test\\.aws-sam\\build, CodeUri=Function1\r\nResolved absolute path to code is C:\\Temp\\aws\\sam-debug-test\\.aws-sam\\build\\Function1\r\nCode C:\\Temp\\aws\\sam-debug-test\\.aws-sam\\build\\Function1 is not a zip/jar file\r\nSharedLayer1 is a local Layer in the template\r\nResolving code path. Cwd=C:\\Temp\\aws\\sam-debug-test\\.aws-sam\\build, CodeUri=..\\..\\shared_layer1\r\nBuilding image...\r\nRequested to skip pulling images ...\r\n\r\nMounting C:\\Temp\\aws\\sam-debug-test\\.aws-sam\\build\\Function1 as /var/task:ro,delegated inside runtime container\r\nSetting up SIGTERM interrupt handler\r\nSTART RequestId: 3a6600aa-d448-11c6-1bfd-d540c30b8aa3 Version: $LATEST\r\nApp 3 shared helper: global stuff\r\nEND RequestId: 3a6600aa-d448-11c6-1bfd-d540c30b8aa3\r\nREPORT RequestId: 3a6600aa-d448-11c6-1bfd-d540c30b8aa3  Init Duration: 9515.91 ms       Duration: 14.20 ms      Billed\r\nDuration: 100 ms        Memory Size: 128 MB     Max Memory Used: 41 MB\r\n\r\nnull\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam local invoke', 'duration': 11429, 'exitReason': 'success', 'exitCode': 0, 'requestId': 'c34706ec-0bae-46e7-bb6f-2c002ec9f1c2', 'installationId': '4589c86c-7c3b-4188-86f1-13ee7d6298fa', 'sessionId': 'd0263246-baed-4585-8736-841018b3fb48', 'executionEnvironment': 'CLI', 'pyversion': '3.8.2', 'samcliVersion': '0.47.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\n```\r\n\r\n### Expected result\r\n\r\nThe debugger pauses at the breakpoint\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Windows 10 Pro 1909\r\n2. `sam --version`: SAM CLI, version 0.47.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1925", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1925/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1925/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1925/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1925", "id": 602092833, "node_id": "MDU6SXNzdWU2MDIwOTI4MzM=", "number": 1925, "title": "sam deploy improperly handles whitespace in tags", "user": {"login": "zsabin", "id": 13442871, "node_id": "MDQ6VXNlcjEzNDQyODcx", "avatar_url": "https://avatars2.githubusercontent.com/u/13442871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zsabin", "html_url": "https://github.com/zsabin", "followers_url": "https://api.github.com/users/zsabin/followers", "following_url": "https://api.github.com/users/zsabin/following{/other_user}", "gists_url": "https://api.github.com/users/zsabin/gists{/gist_id}", "starred_url": "https://api.github.com/users/zsabin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zsabin/subscriptions", "organizations_url": "https://api.github.com/users/zsabin/orgs", "repos_url": "https://api.github.com/users/zsabin/repos", "events_url": "https://api.github.com/users/zsabin/events{/privacy}", "received_events_url": "https://api.github.com/users/zsabin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200198, "node_id": "MDU6TGFiZWw3OTcyMDAxOTg=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/bug", "name": "type/bug", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-17T16:25:27Z", "updated_at": "2020-07-20T22:23:38Z", "closed_at": "2020-07-20T22:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n`sam deploy` fails to correctly handle whitespace in tag keys and values when passed using the `--tags` flag. AWS Cloudformation docs specify that whitespace is valid for both keys and values: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html.\r\n\r\n### Steps to reproduce\r\n\r\nsam deploy\r\n    --debug\r\n    --profile <>\r\n    --template-file <>\r\n    --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM\r\n    --parameter-overrides <>\r\n    --stack-name <>\r\n    --tags \"key name=foo bar\"\r\n\r\n### Observed result\r\nThe command above will tag resources as `name=foo`\r\n\r\n### Expected result\r\nShould tag resources as `key name=foo bar`\r\n\r\nThe same tags specified using the `aws cloudformation deploy` command will produce the expected result.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: macOS\r\n2. `sam --version`:\r\n`SAM CLI, version 0.47.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1924", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1924/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1924/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1924/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1924", "id": 601929110, "node_id": "MDU6SXNzdWU2MDE5MjkxMTA=", "number": 1924, "title": "Stop docker from occupying large amount of disk space", "user": {"login": "tobiasfeil", "id": 17533713, "node_id": "MDQ6VXNlcjE3NTMzNzEz", "avatar_url": "https://avatars1.githubusercontent.com/u/17533713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobiasfeil", "html_url": "https://github.com/tobiasfeil", "followers_url": "https://api.github.com/users/tobiasfeil/followers", "following_url": "https://api.github.com/users/tobiasfeil/following{/other_user}", "gists_url": "https://api.github.com/users/tobiasfeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobiasfeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobiasfeil/subscriptions", "organizations_url": "https://api.github.com/users/tobiasfeil/orgs", "repos_url": "https://api.github.com/users/tobiasfeil/repos", "events_url": "https://api.github.com/users/tobiasfeil/events{/privacy}", "received_events_url": "https://api.github.com/users/tobiasfeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-17T12:09:04Z", "updated_at": "2020-04-20T11:40:20Z", "closed_at": "2020-04-20T11:40:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not a docker expert, but just ran into an alert of my disk space being full - after some investigation, I found out that `/var/lib/docker/overlay2` was 44GB large, and I only use docker for SAM. I suspect this is because every time I run my SAM application, the image is somehow duplicated on my disk (because it's not downloaded all over again as runs start very quickly). Is it possible to somehow delete old images every time `sam local invoke` is executed so disk usage is constant?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1923", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1923/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1923/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1923/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1923", "id": 601191888, "node_id": "MDU6SXNzdWU2MDExOTE4ODg=", "number": 1923, "title": "Allow Local Invoke of Lambdas in sub Applications", "user": {"login": "rupe120", "id": 860348, "node_id": "MDQ6VXNlcjg2MDM0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/860348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rupe120", "html_url": "https://github.com/rupe120", "followers_url": "https://api.github.com/users/rupe120/followers", "following_url": "https://api.github.com/users/rupe120/following{/other_user}", "gists_url": "https://api.github.com/users/rupe120/gists{/gist_id}", "starred_url": "https://api.github.com/users/rupe120/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rupe120/subscriptions", "organizations_url": "https://api.github.com/users/rupe120/orgs", "repos_url": "https://api.github.com/users/rupe120/repos", "events_url": "https://api.github.com/users/rupe120/events{/privacy}", "received_events_url": "https://api.github.com/users/rupe120/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200190, "node_id": "MDU6TGFiZWw3OTcyMDAxOTA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/feature", "name": "type/feature", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T15:52:11Z", "updated_at": "2020-07-24T20:10:36Z", "closed_at": "2020-07-24T20:10:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe your idea/feature/enhancement\r\n\r\nFor large applications, it is sometimes beneficial to break the template up into multiple applications. Those applications may still require a common base template for shared layers. \r\n\r\nI would like to be able to do the following in a base template:\r\n- Define an application reference (`AWS::Serverless::Application`) which references a separate local template\r\n- Call `sam local invoke <application resource name>.<lambda name> ...`\r\n\r\n### Proposal\r\n\r\nI believe this could be added by pulling out the list of application template refrences in the `invoke_context.py` similar to the way the functions are pulled.\r\n\r\nA list of `InvokeContext` instances would then be created for each application template found. Passing in all of the current values and swapping out the `template_file` value\r\n\r\nThe `sam local invoke` command could then be expanded to allow for `<application resource name>.<lambda name>` or even multiple applications deep\r\n\r\n### Additional Details\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1921", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1921/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1921/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1921/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1921", "id": 599857901, "node_id": "MDU6SXNzdWU1OTk4NTc5MDE=", "number": 1921, "title": "sam local start-api doesn't update on changes", "user": {"login": "fakekamrankhan", "id": 9968974, "node_id": "MDQ6VXNlcjk5Njg5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9968974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fakekamrankhan", "html_url": "https://github.com/fakekamrankhan", "followers_url": "https://api.github.com/users/fakekamrankhan/followers", "following_url": "https://api.github.com/users/fakekamrankhan/following{/other_user}", "gists_url": "https://api.github.com/users/fakekamrankhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/fakekamrankhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fakekamrankhan/subscriptions", "organizations_url": "https://api.github.com/users/fakekamrankhan/orgs", "repos_url": "https://api.github.com/users/fakekamrankhan/repos", "events_url": "https://api.github.com/users/fakekamrankhan/events{/privacy}", "received_events_url": "https://api.github.com/users/fakekamrankhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-04-14T21:03:51Z", "updated_at": "2020-05-30T04:37:26Z", "closed_at": "2020-04-14T22:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nI am using the sample **hello-world** application on nodejs12.x using `sam init` but when I invoke `sam build` and `sam local start-api` any subsequent changes I make to the lambda function don't update on the port.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nsam init\r\nChoice: 1 (AWS Quick Start Templates)\r\nRuntime: 1 (nodejs12.x)\r\ncd sam-app\r\nsam build && sam local start-api\r\n```\r\n\r\nInside the `hello-world/app.js` response object I change the message property and save.\r\n\r\n### Observed result\r\n\r\nI refresh 127.0.0.1:3000/hello on the browser and nothing changes.\r\n\r\n### Expected result\r\n\r\nI should see the message updated as per how `sam local start-api` is meant to work.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n`sam --version`\r\nSAM CLI, version 0.47.0\r\n\r\n`docker --version`\r\nDocker version 19.03.8, build afacb8b\r\n\r\n`aws --version`\r\naws-cli/1.11.80 Python/2.7.10 Darwin/18.7.0 botocore/1.5.43", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1922", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1922/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1922/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1922/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1922", "id": 599885835, "node_id": "MDU6SXNzdWU1OTk4ODU4MzU=", "number": 1922, "title": "local change in source code is not available on every invoke when use  \"sam local start-api\"", "user": {"login": "linjungz", "id": 35800534, "node_id": "MDQ6VXNlcjM1ODAwNTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/35800534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linjungz", "html_url": "https://github.com/linjungz", "followers_url": "https://api.github.com/users/linjungz/followers", "following_url": "https://api.github.com/users/linjungz/following{/other_user}", "gists_url": "https://api.github.com/users/linjungz/gists{/gist_id}", "starred_url": "https://api.github.com/users/linjungz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linjungz/subscriptions", "organizations_url": "https://api.github.com/users/linjungz/orgs", "repos_url": "https://api.github.com/users/linjungz/repos", "events_url": "https://api.github.com/users/linjungz/events{/privacy}", "received_events_url": "https://api.github.com/users/linjungz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T05:51:42Z", "updated_at": "2020-04-15T01:54:32Z", "closed_at": "2020-04-15T01:54:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\nWhen use \"sam local start-api\", local change in source code (python) is not available on every invoke.\r\n\r\n**Steps to reproduce the issue:**\r\n1. \"sam init\" to create a hello world function\r\n2. \"sam deploy\"\r\n3. \"sam local start-api\"\r\n4. make some local change\r\n\r\n**Observed result:**\r\nLocal change on source code (file specified in CodeUri property) is not available on every invoke. The output of SAM is:\r\nounting HelloWorldFunction at http://127.0.0.1:3000/hello [GET]\r\nYou can now browse to the above endpoints to invoke your functions. You do not need to restart/reload SAM CLI while working on your functions, changes will be reflected instantly/automatically. You only need to restart SAM CLI if you update your AWS SAM template\r\n2020-04-14 12:18:04  * Running on http://127.0.0.1:3000/ (Press CTRL+C to quit)\r\nInvoking app.lambda_handler (python3.7)\r\nFailed to download a new lambci/lambda:python3.7 image. Invoking with the already downloaded image.\r\nMounting /Users/linjungz/projects/sandbox/weride-demo/.aws-sam/build/HelloWorldFunction as /var/task:ro,delegated inside runtime container\r\nSTART RequestId: 209f8cff-b2f9-168b-4847-d58133d862ca Version: $LATEST\r\nEND RequestId: 209f8cff-b2f9-168b-4847-d58133d862ca\r\nREPORT RequestId: 209f8cff-b2f9-168b-4847-d58133d862ca  Init Duration: 342.71 ms        Duration: 6.80 ms        Billed Duration: 100 ms Memory Size: 128 MB     Max Memory Used: 23 MB\r\nNo Content-Type given. Defaulting to 'application/json'.\r\n\r\n**Expected result:**\r\nLocal change on source code should be available on every invoke as stated in documentation: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-start-api.html \r\nThe path to mount is .aws-sam/build/ instead of the path specified in CodeUri property.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1919", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1919/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1919/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1919/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1919", "id": 598424606, "node_id": "MDU6SXNzdWU1OTg0MjQ2MDY=", "number": 1919, "title": "How to use secure parameters in AWS SAM?", "user": {"login": "singhs020", "id": 12469462, "node_id": "MDQ6VXNlcjEyNDY5NDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/12469462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singhs020", "html_url": "https://github.com/singhs020", "followers_url": "https://api.github.com/users/singhs020/followers", "following_url": "https://api.github.com/users/singhs020/following{/other_user}", "gists_url": "https://api.github.com/users/singhs020/gists{/gist_id}", "starred_url": "https://api.github.com/users/singhs020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singhs020/subscriptions", "organizations_url": "https://api.github.com/users/singhs020/orgs", "repos_url": "https://api.github.com/users/singhs020/repos", "events_url": "https://api.github.com/users/singhs020/events{/privacy}", "received_events_url": "https://api.github.com/users/singhs020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}, {"id": 797200194, "node_id": "MDU6TGFiZWw3OTcyMDAxOTQ=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/question", "name": "type/question", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-12T06:54:17Z", "updated_at": "2020-04-14T00:53:05Z", "closed_at": "2020-04-14T00:53:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nWe pass secure credentials via environment variables to our app, but SAM deploy and lambda console prints out the value. Is there a recommended way to pass on the secured values to lambda function using AWS SAM?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1915", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1915/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1915/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1915/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1915", "id": 595987311, "node_id": "MDU6SXNzdWU1OTU5ODczMTE=", "number": 1915, "title": "Sam guided deploy not passing correct StackName", "user": {"login": "am2jm", "id": 11247204, "node_id": "MDQ6VXNlcjExMjQ3MjA0", "avatar_url": "https://avatars2.githubusercontent.com/u/11247204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/am2jm", "html_url": "https://github.com/am2jm", "followers_url": "https://api.github.com/users/am2jm/followers", "following_url": "https://api.github.com/users/am2jm/following{/other_user}", "gists_url": "https://api.github.com/users/am2jm/gists{/gist_id}", "starred_url": "https://api.github.com/users/am2jm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/am2jm/subscriptions", "organizations_url": "https://api.github.com/users/am2jm/orgs", "repos_url": "https://api.github.com/users/am2jm/repos", "events_url": "https://api.github.com/users/am2jm/events{/privacy}", "received_events_url": "https://api.github.com/users/am2jm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797200202, "node_id": "MDU6TGFiZWw3OTcyMDAyMDI=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/deploy", "name": "area/deploy", "color": "1d76db", "default": false, "description": null}, {"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-07T16:12:15Z", "updated_at": "2020-04-27T18:51:26Z", "closed_at": "2020-04-27T18:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\nGuided deploy is always using the same default StackName.\r\n\r\n[Manage_stack ](https://github.com/awslabs/aws-sam-cli/blob/2bbc26a0f629841fefcf8e9a22e304f8eabbf88e/samcli/commands/deploy/guided_context.py#L103)is only called with the region and profile, so then when the bootstrap script is called it'll always pass in the [default value](https://github.com/awslabs/aws-sam-cli/blob/7ba1b444a926a9771e86d5fd023510f6f07c0ea0/samcli/lib/bootstrap/bootstrap.py#L21) and won't actually pass through the value the user gives the guided deploy.\r\n\r\n### Steps to reproduce\r\n\r\nFollow hello-world SAM tutorial: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html\r\n\r\nAt the `sam deploy --guided` stage be sure to enter a unique Stack Name\r\n\r\n### Observed result\r\nKeyError like in this closed issue https://github.com/awslabs/aws-sam-cli/issues/1640 because it's always searching for the same stack, and doesn't try to create a new one if I pass a new StackName into it.\r\n\r\n### Expected result\r\nThe continued output of the guided deploy like in the Hello World tutorial.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac\r\n2. `sam --version`: 0.47.0\r\n\r\nI edited the two python scripts I linked above in my local environment and was able to proceed with the guided deploy which generated the .toml file for future runs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1914", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1914/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1914/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1914/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1914", "id": 595107276, "node_id": "MDU6SXNzdWU1OTUxMDcyNzY=", "number": 1914, "title": "deploying to different AWS account", "user": {"login": "singhs020", "id": 12469462, "node_id": "MDQ6VXNlcjEyNDY5NDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/12469462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singhs020", "html_url": "https://github.com/singhs020", "followers_url": "https://api.github.com/users/singhs020/followers", "following_url": "https://api.github.com/users/singhs020/following{/other_user}", "gists_url": "https://api.github.com/users/singhs020/gists{/gist_id}", "starred_url": "https://api.github.com/users/singhs020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singhs020/subscriptions", "organizations_url": "https://api.github.com/users/singhs020/orgs", "repos_url": "https://api.github.com/users/singhs020/repos", "events_url": "https://api.github.com/users/singhs020/events{/privacy}", "received_events_url": "https://api.github.com/users/singhs020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 978571860, "node_id": "MDU6TGFiZWw5Nzg1NzE4NjA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/close-if-inactive", "name": "stage/close-if-inactive", "color": "9cdb30", "default": false, "description": ""}, {"id": 797200194, "node_id": "MDU6TGFiZWw3OTcyMDAxOTQ=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/type/question", "name": "type/question", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-06T13:16:37Z", "updated_at": "2020-04-29T01:38:27Z", "closed_at": "2020-04-06T20:09:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\n\nWe have two different AWS account, one is for live env and one is for test. The packages are created on our lower environment and we use Sam to do this.\n\nIs there a way where we can use the same packaged.yaml file to deploy to our live environment or we have to build the application again to generate a different file for the new environment?\n\nThanks & Regards\nSimranjeet ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1913", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1913/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1913/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1913/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1913", "id": 594691190, "node_id": "MDU6SXNzdWU1OTQ2OTExOTA=", "number": 1913, "title": "Local golang function no response", "user": {"login": "blackout1208", "id": 12602104, "node_id": "MDQ6VXNlcjEyNjAyMTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/12602104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackout1208", "html_url": "https://github.com/blackout1208", "followers_url": "https://api.github.com/users/blackout1208/followers", "following_url": "https://api.github.com/users/blackout1208/following{/other_user}", "gists_url": "https://api.github.com/users/blackout1208/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackout1208/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackout1208/subscriptions", "organizations_url": "https://api.github.com/users/blackout1208/orgs", "repos_url": "https://api.github.com/users/blackout1208/repos", "events_url": "https://api.github.com/users/blackout1208/events{/privacy}", "received_events_url": "https://api.github.com/users/blackout1208/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-05T22:49:52Z", "updated_at": "2020-04-06T15:14:16Z", "closed_at": "2020-04-06T15:11:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Make sure we don't have an existing Issue that reports the bug you are seeing (both open and closed). \r\nIf you do find an existing Issue, re-open or add a comment to that Issue instead of creating a new one. -->\r\n\r\n### Description\r\nOn requesting locally a golang function response is hanged and on console got a message saying that my code is not a zip/jar file. After that, the execution is stuck on fetching a docker container image. \r\n\r\nPS: Am I not supposed to be able to see a new container when I run `docker ps -a` while I'm running a function through aws-sam?\r\n\r\n### Steps to reproduce\r\n\r\n1. sam init\r\n2. Choice: 1\r\n3. Choice: 4 \r\n4. make deps\r\n5. make build\r\n6. sam local start-api --debug\r\n7. postman request -> GET - http://127.0.0.1:3000/hello\r\n\r\n### Observed result\r\n\r\n![image](https://user-images.githubusercontent.com/12602104/78511779-81d5cf80-779f-11ea-8be8-23bb0f649202.png)\r\n\r\n\r\n### Expected result\r\n\r\nExpected a status 200\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac Catalina 10.15.3\r\n2. `sam --version`:  0.47.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1911", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1911/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1911/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1911/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1911", "id": 593375539, "node_id": "MDU6SXNzdWU1OTMzNzU1Mzk=", "number": 1911, "title": "SAM local invocation with CDK generated template not resolving dependencies in requirements.txt", "user": {"login": "OFranke", "id": 12813089, "node_id": "MDQ6VXNlcjEyODEzMDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/12813089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OFranke", "html_url": "https://github.com/OFranke", "followers_url": "https://api.github.com/users/OFranke/followers", "following_url": "https://api.github.com/users/OFranke/following{/other_user}", "gists_url": "https://api.github.com/users/OFranke/gists{/gist_id}", "starred_url": "https://api.github.com/users/OFranke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OFranke/subscriptions", "organizations_url": "https://api.github.com/users/OFranke/orgs", "repos_url": "https://api.github.com/users/OFranke/repos", "events_url": "https://api.github.com/users/OFranke/events{/privacy}", "received_events_url": "https://api.github.com/users/OFranke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1841561429, "node_id": "MDU6TGFiZWwxODQxNTYxNDI5", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/local/invoke", "name": "area/local/invoke", "color": "9dfc94", "default": false, "description": ""}, {"id": 797200200, "node_id": "MDU6TGFiZWw3OTcyMDAyMDA=", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/stage/more-info-needed", "name": "stage/more-info-needed", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-03T13:17:17Z", "updated_at": "2020-04-09T21:57:12Z", "closed_at": "2020-04-09T17:50:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nLocal python dependencies are installed as defined but not found using local invoke. I am using CDK and SAM together, therefore my Cloud Formation file in `template.yaml` contains something like:\r\n```  \r\nmywidgetserviceWidgetHandlerFAB6825C:\r\n    Type: AWS::Lambda::Function\r\n       Properties:\r\n```\r\n\r\nIt seems to work with the samples that are created using `sam init`. Those are using `Type: AWS::Serverless::Function` in their `template.yaml` file\r\n\r\nmy handler.py:\r\n```\r\nimport pandas as pd\r\n\r\ndef main(event, context):\r\n    # save event to logs\r\n    print(event)\r\n    pd.DataFrame({\"hans\": [\"wurst\"]})\r\n    return {\"statusCode\": 200, \"body\": \"test\"}\r\n```\r\n\r\nmy requirements.txt\r\n```\r\npandas\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nI created a sample repository to reproduce the issue: https://github.com/OFranke/sam-cdk-bug. To reproduce run:\r\n- run `yarn`\r\n- run `yarn build`\r\n- run `cdk bootstrap`\r\n- run `sam build` -> notice correct python pandas dependency in `.aws-sam/build/pickletovizservicePickleToVizHandler68C6D6E2/pandas`\r\n- run `sam local invoke` -> notice error `Unable to import module 'handler': No module named 'pandas'`\r\n\r\n\r\n### Observed result\r\n\r\n```\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\nlocal invoke command is called\r\nCollected default values for parameters: {}\r\n13 resources found in the template\r\nFound Lambda function with name='pickletovizservicePickleToVizHandler68C6D6E2' and CodeUri='/Users/ofranke/Projects/Customers/sam-cdk-example/src/handlers/pickleToViz'\r\nFound one Lambda function with name 'pickletovizservicePickleToVizHandler68C6D6E2'\r\nInvoking handler.main (python3.6)\r\nNo environment variables found for function 'pickletovizservicePickleToVizHandler68C6D6E2'\r\nEnvironment variables overrides data is standard format\r\nLoading AWS credentials from session with profile 'None'\r\nResolving code path. Cwd=/Users/ofranke/Projects/Customers/sam-cdk-example/.aws-sam/build, CodeUri=/Users/ofranke/Projects/Customers/sam-cdk-example/src/handlers/pickleToViz\r\nResolved absolute path to code is /Users/ofranke/Projects/Customers/sam-cdk-example/src/handlers/pickleToViz\r\nCode /Users/ofranke/Projects/Customers/sam-cdk-example/src/handlers/pickleToViz is not a zip/jar file\r\nSkipping building an image since no layers were defined\r\n\r\nFetching lambci/lambda:python3.6 Docker container image......\r\nMounting /Users/ofranke/Projects/Customers/sam-cdk-example/src/handlers/pickleToViz as /var/task:ro,delegated inside runtime container\r\nStarting a timer for 60 seconds for function 'pickletovizservicePickleToVizHandler68C6D6E2'\r\nSTART RequestId: 6fe1f267-fa1a-11fa-76f0-0bd2c73478c8 Version: $LATEST\r\nUnable to import module 'handler': No module named 'pandas'\r\nEND RequestId: 6fe1f267-fa1a-11fa-76f0-0bd2c73478c8\r\nREPORT RequestId: 6fe1f267-fa1a-11fa-76f0-0bd2c73478c8  Init Duration: 214.34 ms        Duration: 7.33 ms       Billed Duration: 100 ms Memory Size: 128 MB     Max Memory Used: 26 MB\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam local invoke', 'duration': 2593, 'exitReason': 'success', 'exitCode': 0, 'requestId': '2b3b1f45-3754-42ad-a68f-30be5950557f', 'installationId': '0a0f7d35-30c2-4ea0-bd16-b6fd5634ca99', 'sessionId': '2052dce3-5e4e-4ec5-a354-d7a593b25247', 'executionEnvironment': 'CLI', 'pyversion': '3.7.7', 'samcliVersion': '0.37.0'}}]}\r\nHTTPSConnectionPool(host='aws-serverless-tools-telemetry.us-west-2.amazonaws.com', port=443): Read timed out. (read timeout=0.1)\r\n\r\n{\"errorMessage\":\"Unable to import module 'handler'\"}\r\n```\r\n\r\n### Expected result\r\n\r\nsuccessful invocation with response\r\n```\r\n{\r\n  \"statusCode\": 200, \r\n  \"body\": \"test\"\r\n}\r\n```\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: MacOSX\r\n2. `sam --version`: tested with 0.47 and 0.37\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1907", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1907/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1907/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1907/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1907", "id": 590036793, "node_id": "MDU6SXNzdWU1OTAwMzY3OTM=", "number": 1907, "title": "SAM cli throws error for git layer", "user": {"login": "kunjalr", "id": 53238498, "node_id": "MDQ6VXNlcjUzMjM4NDk4", "avatar_url": "https://avatars2.githubusercontent.com/u/53238498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunjalr", "html_url": "https://github.com/kunjalr", "followers_url": "https://api.github.com/users/kunjalr/followers", "following_url": "https://api.github.com/users/kunjalr/following{/other_user}", "gists_url": "https://api.github.com/users/kunjalr/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunjalr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunjalr/subscriptions", "organizations_url": "https://api.github.com/users/kunjalr/orgs", "repos_url": "https://api.github.com/users/kunjalr/repos", "events_url": "https://api.github.com/users/kunjalr/events{/privacy}", "received_events_url": "https://api.github.com/users/kunjalr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1146177264, "node_id": "MDU6TGFiZWwxMTQ2MTc3MjY0", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/layers", "name": "area/layers", "color": "35eab4", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-30T06:46:08Z", "updated_at": "2020-03-30T18:55:33Z", "closed_at": "2020-03-30T18:55:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nAfter adding git layer in template sam build throws InvalidResourceException error\r\n\r\n### Steps to reproduce\r\n\r\n- install aws-sam-cli to python directory in site-packages, it was done pycharm can use for aws toolkit\r\n- python version: 3.8.2\r\n-install pip 19.2.3 from /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pip (python 3.8)\r\n- Run sam build\r\n\r\nTemplate: \r\n\r\n    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction\r\n    Properties:\r\n      CodeUri: /Users/xyz/test\r\n      Handler: gitclone.lambda_handler\r\n      layers:\r\n        - 'arn:aws:lambda:us-west-2:553035198032:layer:git-lambda2:4'\r\n      Runtime: python3.8\r\n      Events:\r\n        InvokeScan:\r\n          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api\r\n          Properties:\r\n            Path: /scan\r\n            Method: any\r\n\r\n### Observed result\r\n\r\nTelemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics\r\n'build' command is called\r\nSending Telemetry: {'metrics': [{'commandRun': {'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'duration': 243, 'exitReason': 'InvalidSamDocumentException', 'exitCode': 255, 'requestId': '34caf461-178e-4060-bd07-ff22dc62ba23', 'installationId': '07e1f297-5c77-4490-a00b-486043a9420a', 'sessionId': 'aae9a6d2-45eb-4d7d-811e-235d0cfb571e', 'executionEnvironment': 'CLI', 'pyversion': '3.8.2', 'samcliVersion': '0.46.0'}}]}\r\nTelemetry response: 200\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/samlib/wrapper.py\", line 71, in run_plugins\r\n    parser.parse(template_copy, all_plugins)  # parse() will run all configured plugins\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/samlib/wrapper.py\", line 140, in parse\r\n    raise InvalidDocumentException(document_errors)\r\nsamtranslator.model.exceptions.InvalidDocumentException: [InvalidResourceException('ScanRequestFunction', 'property layers not defined for resource of type AWS::Serverless::Function')]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/bin/sam\", line 10, in <module>\r\n    sys.exit(cli())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/decorators.py\", line 73, in new_func\r\n    return ctx.invoke(f, obj, *args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/telemetry/metrics.py\", line 96, in wrapped\r\n    raise exception  # pylint: disable=raising-bad-type\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/telemetry/metrics.py\", line 62, in wrapped\r\n    return_value = func(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/commands/build/command.py\", line 117, in cli\r\n    do_cli(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/commands/build/command.py\", line 167, in do_cli\r\n    with BuildContext(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/commands/build/build_context.py\", line 61, in __enter__\r\n    self._function_provider = SamFunctionProvider(self._template_dict, self._parameter_overrides)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/providers/sam_function_provider.py\", line 44, in __init__\r\n    self.template_dict = SamBaseProvider.get_template(template_dict, parameter_overrides)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/providers/sam_base_provider.py\", line 41, in get_template\r\n    template_dict = SamTranslatorWrapper(template_dict).run_plugins()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/samcli/lib/samlib/wrapper.py\", line 73, in run_plugins\r\n    raise InvalidSamDocumentException(\r\nsamcli.commands.validate.lib.exceptions.InvalidSamDocumentException: [InvalidResourceException('ScanRequestFunction', 'property layers not defined for resource of type AWS::Serverless::Function')] ('ScanRequestFunction', 'property layers not defined for resource of type AWS::Serverless::Function')\r\n\r\n\r\n### Expected result\r\n\r\nThe build should have been successful with git installed in container during sam build.\r\n\r\n### Additional environment details (Ex: Windows, Mac, Amazon Linux etc)\r\n\r\n1. OS: Mac 10.14.6\r\n2. `sam --version`: 0.46.0\r\n\r\n`Add --debug flag to command you are running`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1906", "repository_url": "https://api.github.com/repos/awslabs/aws-sam-cli", "labels_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1906/labels{/name}", "comments_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1906/comments", "events_url": "https://api.github.com/repos/awslabs/aws-sam-cli/issues/1906/events", "html_url": "https://github.com/awslabs/aws-sam-cli/issues/1906", "id": 589635010, "node_id": "MDU6SXNzdWU1ODk2MzUwMTA=", "number": 1906, "title": "Sam Build Failed: NodejsNpmBuilder:NpmPack", "user": {"login": "chestongo", "id": 26504635, "node_id": "MDQ6VXNlcjI2NTA0NjM1", "avatar_url": "https://avatars2.githubusercontent.com/u/26504635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chestongo", "html_url": "https://github.com/chestongo", "followers_url": "https://api.github.com/users/chestongo/followers", "following_url": "https://api.github.com/users/chestongo/following{/other_user}", "gists_url": "https://api.github.com/users/chestongo/gists{/gist_id}", "starred_url": "https://api.github.com/users/chestongo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chestongo/subscriptions", "organizations_url": "https://api.github.com/users/chestongo/orgs", "repos_url": "https://api.github.com/users/chestongo/repos", "events_url": "https://api.github.com/users/chestongo/events{/privacy}", "received_events_url": "https://api.github.com/users/chestongo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1134332612, "node_id": "MDU6TGFiZWwxMTM0MzMyNjEy", "url": "https://api.github.com/repos/awslabs/aws-sam-cli/labels/area/build", "name": "area/build", "color": "1c828c", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-03-28T18:43:01Z", "updated_at": "2020-04-23T01:35:32Z", "closed_at": "2020-04-14T14:54:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "After trying a SAM project using python, I suddenly need to create a package.json file for each lambda function.\r\n\r\nOtherwise, I will get an error: \r\n```\r\nBuild Failed\r\nError: NodejsNpmBuilder:NpmPack - NPM Failed: npm ERR! code ENOLOCAL\r\n```\r\n\r\nI don't need any node_modules for my lambda function, so I would like not to include it in my folder.\r\n\r\nFor each function, this script will run.\r\n```\r\nRunning NodejsNpmBuilder:NpmPack\r\nRunning NodejsNpmBuilder:CopyNpmrc\r\nRunning NodejsNpmBuilder:CopySource\r\nRunning NodejsNpmBuilder:NpmInstall\r\nRunning NodejsNpmBuilder:CleanUpNpmrc\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}