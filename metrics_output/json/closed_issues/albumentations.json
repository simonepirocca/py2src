{"total_count": 188, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/682", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/682/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/682/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/682", "id": 681740369, "node_id": "MDU6SXNzdWU2ODE3NDAzNjk=", "number": 682, "title": "CLAHE not deterministic", "user": {"login": "a1302z", "id": 15774442, "node_id": "MDQ6VXNlcjE1Nzc0NDQy", "avatar_url": "https://avatars2.githubusercontent.com/u/15774442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1302z", "html_url": "https://github.com/a1302z", "followers_url": "https://api.github.com/users/a1302z/followers", "following_url": "https://api.github.com/users/a1302z/following{/other_user}", "gists_url": "https://api.github.com/users/a1302z/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1302z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1302z/subscriptions", "organizations_url": "https://api.github.com/users/a1302z/orgs", "repos_url": "https://api.github.com/users/a1302z/repos", "events_url": "https://api.github.com/users/a1302z/events{/privacy}", "received_events_url": "https://api.github.com/users/a1302z/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-19T10:44:37Z", "updated_at": "2020-08-19T11:29:47Z", "closed_at": "2020-08-19T11:03:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nIf you apply CLAHE multiple times to the same image you get different results each time. Doesn't matter if image or clahe are reinitialized every time or not, never the exact same result.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n```\r\nimport albumentations as a\r\nimport numpy as np\r\nfrom PIL import Image\r\nc = a.CLAHE(always_apply=True, p=1.0)\r\nimg = Image.open(_path_to_img_)\r\nimg = np.array(img)\r\nc(image=img)[\"image\"].mean()\r\n```\r\ngives different results every time its executed. For my application it would be crucial to be deterministic.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nEverytime the code above is executed you get the exact same result.\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.4.6\r\n - Python version (e.g., 3.7): 3.7.1\r\n - OS (e.g., Linux): Kubuntu 20.04\r\n - How you installed albumentations (`conda`, `pip`, source): conda\r\n - Any other relevant information: None\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/680", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/680/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/680/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/680", "id": 678954082, "node_id": "MDU6SXNzdWU2Nzg5NTQwODI=", "number": 680, "title": "AssertionError: force_apply must have bool or int type", "user": {"login": "adriangrepo", "id": 37989457, "node_id": "MDQ6VXNlcjM3OTg5NDU3", "avatar_url": "https://avatars2.githubusercontent.com/u/37989457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriangrepo", "html_url": "https://github.com/adriangrepo", "followers_url": "https://api.github.com/users/adriangrepo/followers", "following_url": "https://api.github.com/users/adriangrepo/following{/other_user}", "gists_url": "https://api.github.com/users/adriangrepo/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriangrepo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriangrepo/subscriptions", "organizations_url": "https://api.github.com/users/adriangrepo/orgs", "repos_url": "https://api.github.com/users/adriangrepo/repos", "events_url": "https://api.github.com/users/adriangrepo/events{/privacy}", "received_events_url": "https://api.github.com/users/adriangrepo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T07:14:02Z", "updated_at": "2020-08-14T07:51:30Z", "closed_at": "2020-08-14T07:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sample code to reproduce error:\r\n\r\n```\r\nfrom PIL import Image\r\nimport albumentations as A\r\nfrom albumentations.pytorch import ToTensorV2\r\n\r\nimage= Image.open('some_image.png').convert('RGB')\r\n\r\nalbu_image_transform = A.Compose(\r\n    [\r\n        A.Resize(224, 224),\r\n        ToTensorV2()\r\n    ]\r\n)\r\n\r\ndef visualize(image):\r\n    plt.figure(figsize=(10, 10))\r\n    plt.axis('off')\r\n    plt.imshow(image)\r\n    \r\nprint(type(image))\r\n#PIL to cv2\r\nimage=np.array(image)\r\nimage[...,[0,2]]=image[...,[2,0]]   \r\nprint(image.shape)\r\naugmented_image = albu_image_transform(image) #error here\r\n                          \r\nvisualize(augmented_image)\r\n```\r\n>>\r\n<class 'PIL.Image.Image'>\r\n(400, 265, 3)\r\n\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-27-01d25b293057> in <module>\r\n     29 image[...,[0,2]]=image[...,[2,0]]\r\n     30 print(image.shape)\r\n---> 31 augmented_image = albu_image_transform(image)\r\n     32 \r\n     33 visualize(augmented_image)\r\n\r\n~/env/lib/python3.8/site-packages/albumentations/core/composition.py in __call__(self, force_apply, **data)\r\n    162 \r\n    163     def __call__(self, force_apply=False, **data):\r\n--> 164         assert isinstance(force_apply, (bool, int)), \"force_apply must have bool or int type\"\r\n    165         need_to_run = force_apply or random.random() < self.p\r\n    166         for p in self.processors.values():AssertionError: force_apply must have bool or int type\r\n\r\nNot sure what I'm doing wrongly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/678", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/678/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/678/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/678", "id": 676474576, "node_id": "MDU6SXNzdWU2NzY0NzQ1NzY=", "number": 678, "title": "Equivalent of 'imgaug.augmenters.size.PadToSquare' in albumentations", "user": {"login": "akum04", "id": 34163713, "node_id": "MDQ6VXNlcjM0MTYzNzEz", "avatar_url": "https://avatars2.githubusercontent.com/u/34163713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akum04", "html_url": "https://github.com/akum04", "followers_url": "https://api.github.com/users/akum04/followers", "following_url": "https://api.github.com/users/akum04/following{/other_user}", "gists_url": "https://api.github.com/users/akum04/gists{/gist_id}", "starred_url": "https://api.github.com/users/akum04/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akum04/subscriptions", "organizations_url": "https://api.github.com/users/akum04/orgs", "repos_url": "https://api.github.com/users/akum04/repos", "events_url": "https://api.github.com/users/akum04/events{/privacy}", "received_events_url": "https://api.github.com/users/akum04/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-10T23:24:07Z", "updated_at": "2020-08-11T09:56:07Z", "closed_at": "2020-08-10T23:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm new to albumentations, I'm trying to pad the image with different aspect ratios to square one, the input image sizes are different for each image. RESIZE option changes the geometry of the object within the image. How to implement the 'pad to square' (helps keeping the original geometry of the target object). Also, want to transform the  associated keypoints as well.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/673", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/673/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/673/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/673", "id": 669415485, "node_id": "MDU6SXNzdWU2Njk0MTU0ODU=", "number": 673, "title": "Support passing 'sigma' as an argument for GaussianBlur", "user": {"login": "yaox12", "id": 3831900, "node_id": "MDQ6VXNlcjM4MzE5MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3831900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaox12", "html_url": "https://github.com/yaox12", "followers_url": "https://api.github.com/users/yaox12/followers", "following_url": "https://api.github.com/users/yaox12/following{/other_user}", "gists_url": "https://api.github.com/users/yaox12/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaox12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaox12/subscriptions", "organizations_url": "https://api.github.com/users/yaox12/orgs", "repos_url": "https://api.github.com/users/yaox12/repos", "events_url": "https://api.github.com/users/yaox12/events{/privacy}", "received_events_url": "https://api.github.com/users/yaox12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950859, "node_id": "MDU6TGFiZWw5NTU5NTA4NTk=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-31T05:03:08Z", "updated_at": "2020-08-07T10:00:03Z", "closed_at": "2020-08-07T10:00:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In recent self-supervised learning papers, they usually adopt the `GaussianBlur` augmentation with a random standard\r\ndeviation `sigma`. For example, in SimCLR [[code]](https://github.com/google-research/simclr) [[paper]](https://arxiv.org/abs/2002.05709), they randomly sample sigma in [0.1, 2.0]. I hope you can support this feature. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/672", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/672/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/672/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/672", "id": 669411010, "node_id": "MDU6SXNzdWU2Njk0MTEwMTA=", "number": 672, "title": "How to make an equivalent migration from torchvision.transforms.ColorJitter to  albumentations", "user": {"login": "yaox12", "id": 3831900, "node_id": "MDQ6VXNlcjM4MzE5MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3831900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaox12", "html_url": "https://github.com/yaox12", "followers_url": "https://api.github.com/users/yaox12/followers", "following_url": "https://api.github.com/users/yaox12/following{/other_user}", "gists_url": "https://api.github.com/users/yaox12/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaox12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaox12/subscriptions", "organizations_url": "https://api.github.com/users/yaox12/orgs", "repos_url": "https://api.github.com/users/yaox12/repos", "events_url": "https://api.github.com/users/yaox12/events{/privacy}", "received_events_url": "https://api.github.com/users/yaox12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-31T04:54:20Z", "updated_at": "2020-07-31T08:27:06Z", "closed_at": "2020-07-31T08:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "`torchvision.transforms.ColorJitter` randomly changes the brightness, contrast and saturation of an image.\r\n\r\nI find that `albumentations.augmentations.transforms.RandomBrightnessContrast` provides similar api for changing brightness and constrast, while `albumentations.augmentations.transforms.HueSaturationValue` seems to have very different args. \r\n\r\nIn `ColorJitter`, saturation and hue accept small float numbers, e.g., 0.2. Then the saturation_factor is chosen uniformly from [max(0, 1 - saturation), 1 + saturation] or the given [min, max] and hue_factor is chosen uniformly from [-hue, hue] or the given [min, max].\r\nWhile in `HueSaturationValue`, hue_shift_limit and sat_shift_limit accept large int numbers. So how can I make an equivalent migration from `torchvision.transforms.ColorJitter` to `albumentations` without much domain knowledge about image processing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/668", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/668/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/668/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/668", "id": 665787996, "node_id": "MDU6SXNzdWU2NjU3ODc5OTY=", "number": 668, "title": "what new in 0.4.6?", "user": {"login": "K-Mike", "id": 22145213, "node_id": "MDQ6VXNlcjIyMTQ1MjEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22145213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/K-Mike", "html_url": "https://github.com/K-Mike", "followers_url": "https://api.github.com/users/K-Mike/followers", "following_url": "https://api.github.com/users/K-Mike/following{/other_user}", "gists_url": "https://api.github.com/users/K-Mike/gists{/gist_id}", "starred_url": "https://api.github.com/users/K-Mike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/K-Mike/subscriptions", "organizations_url": "https://api.github.com/users/K-Mike/orgs", "repos_url": "https://api.github.com/users/K-Mike/repos", "events_url": "https://api.github.com/users/K-Mike/events{/privacy}", "received_events_url": "https://api.github.com/users/K-Mike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-26T14:14:16Z", "updated_at": "2020-07-27T16:00:52Z", "closed_at": "2020-07-27T15:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\n<!-- A clear and concise description of what content in https://albumentations.readthedocs.io is an issue. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/666", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/666/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/666/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/666", "id": 664210640, "node_id": "MDU6SXNzdWU2NjQyMTA2NDA=", "number": 666, "title": "CoarseDropout for bbox error", "user": {"login": "cswwp", "id": 11901683, "node_id": "MDQ6VXNlcjExOTAxNjgz", "avatar_url": "https://avatars0.githubusercontent.com/u/11901683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cswwp", "html_url": "https://github.com/cswwp", "followers_url": "https://api.github.com/users/cswwp/followers", "following_url": "https://api.github.com/users/cswwp/following{/other_user}", "gists_url": "https://api.github.com/users/cswwp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cswwp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cswwp/subscriptions", "organizations_url": "https://api.github.com/users/cswwp/orgs", "repos_url": "https://api.github.com/users/cswwp/repos", "events_url": "https://api.github.com/users/cswwp/events{/privacy}", "received_events_url": "https://api.github.com/users/cswwp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-23T05:22:51Z", "updated_at": "2020-07-23T08:36:18Z", "closed_at": "2020-07-23T08:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use random block dropout with albu, but it seems some bbox with Occluded not remove, Does albu's CoarseDropout support object detection augment?\r\n\r\n![image](https://user-images.githubusercontent.com/11901683/88254314-7cb57580-cce7-11ea-8c97-fa5275a7e30c.png)\r\nand my code is followed\r\n![image](https://user-images.githubusercontent.com/11901683/88254337-98b91700-cce7-11ea-8188-6e84fe87f3b8.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/665", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/665/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/665/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/665", "id": 664199714, "node_id": "MDU6SXNzdWU2NjQxOTk3MTQ=", "number": 665, "title": "How to set a random color fill value with CoarseDropout", "user": {"login": "cswwp", "id": 11901683, "node_id": "MDQ6VXNlcjExOTAxNjgz", "avatar_url": "https://avatars0.githubusercontent.com/u/11901683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cswwp", "html_url": "https://github.com/cswwp", "followers_url": "https://api.github.com/users/cswwp/followers", "following_url": "https://api.github.com/users/cswwp/following{/other_user}", "gists_url": "https://api.github.com/users/cswwp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cswwp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cswwp/subscriptions", "organizations_url": "https://api.github.com/users/cswwp/orgs", "repos_url": "https://api.github.com/users/cswwp/repos", "events_url": "https://api.github.com/users/cswwp/events{/privacy}", "received_events_url": "https://api.github.com/users/cswwp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-23T04:46:02Z", "updated_at": "2020-07-23T05:24:13Z", "closed_at": "2020-07-23T05:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to set a random color fill value with CoarseDropout, it seems just set an value(all channel same value), even thought i set fillvalue = [random.randint(64, 191)/255.0 for _ in range(3)], it still alway one color in all image augments, how to fix it? Anyone help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/664", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/664/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/664/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/664", "id": 663696413, "node_id": "MDU6SXNzdWU2NjM2OTY0MTM=", "number": 664, "title": "Normalize() issue", "user": {"login": "kylerioux", "id": 35410495, "node_id": "MDQ6VXNlcjM1NDEwNDk1", "avatar_url": "https://avatars0.githubusercontent.com/u/35410495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylerioux", "html_url": "https://github.com/kylerioux", "followers_url": "https://api.github.com/users/kylerioux/followers", "following_url": "https://api.github.com/users/kylerioux/following{/other_user}", "gists_url": "https://api.github.com/users/kylerioux/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylerioux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylerioux/subscriptions", "organizations_url": "https://api.github.com/users/kylerioux/orgs", "repos_url": "https://api.github.com/users/kylerioux/repos", "events_url": "https://api.github.com/users/kylerioux/events{/privacy}", "received_events_url": "https://api.github.com/users/kylerioux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T11:41:02Z", "updated_at": "2020-07-22T11:51:41Z", "closed_at": "2020-07-22T11:48:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the relevant part of the log:   \r\nFile \"C:\\Users\\User\\Desktop\\school\\Unet_pytorch\\train.py\", line 74, in __getitem__\r\n    augmentation = self.transform(image=img, mask=mask)\r\n  File \"C:\\Users\\User\\AppData\\Roaming\\Python\\Python37\\site-packages\\albumentations\\core\\composition.py\", line 176, in __call__\r\n    data = t(force_apply=force_apply, **data)\r\n  File \"C:\\Users\\User\\AppData\\Roaming\\Python\\Python37\\site-packages\\albumentations\\core\\transforms_interface.py\", line 87, in __call__\r\n    return self.apply_with_params(params, **kwargs)\r\n  File \"C:\\Users\\User\\AppData\\Roaming\\Python\\Python37\\site-packages\\albumentations\\core\\transforms_interface.py\", line 100, in apply_with_params\r\n    res[key] = target_function(arg, **dict(params, **target_dependencies))\r\n  File \"C:\\Users\\User\\AppData\\Roaming\\Python\\Python37\\site-packages\\albumentations\\augmentations\\transforms.py\", line 1436, in apply\r\n    return F.normalize(image, self.mean, self.std, self.max_pixel_value)\r\n  File \"C:\\Users\\User\\AppData\\Roaming\\Python\\Python37\\site-packages\\albumentations\\augmentations\\functional.py\", line 141, in normalize\r\n    img -= mean\r\nValueError: operands could not be broadcast together with shapes (572,572) (3,) (572,572)\r\n\r\nThe default mean value is the tuple (0.485, 0.456, 0.406) (although I don't really understand why). And the images I'm feeding into my network are (572,572). Any ideas on how to resolve this shape conflict?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/657", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/657/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/657/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/657", "id": 654123247, "node_id": "MDU6SXNzdWU2NTQxMjMyNDc=", "number": 657, "title": "Request to bump the imgaug dependency to latest version", "user": {"login": "GokulNC", "id": 10559293, "node_id": "MDQ6VXNlcjEwNTU5Mjkz", "avatar_url": "https://avatars2.githubusercontent.com/u/10559293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GokulNC", "html_url": "https://github.com/GokulNC", "followers_url": "https://api.github.com/users/GokulNC/followers", "following_url": "https://api.github.com/users/GokulNC/following{/other_user}", "gists_url": "https://api.github.com/users/GokulNC/gists{/gist_id}", "starred_url": "https://api.github.com/users/GokulNC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GokulNC/subscriptions", "organizations_url": "https://api.github.com/users/GokulNC/orgs", "repos_url": "https://api.github.com/users/GokulNC/repos", "events_url": "https://api.github.com/users/GokulNC/events{/privacy}", "received_events_url": "https://api.github.com/users/GokulNC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T14:51:16Z", "updated_at": "2020-07-09T17:05:26Z", "closed_at": "2020-07-09T17:05:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installing `albumentations`, I saw the following:\r\n\r\n```\r\nInstalling collected packages: imgaug, albumentations\r\n  Attempting uninstall: imgaug\r\n    Found existing installation: imgaug 0.4.0\r\n    Uninstalling imgaug-0.4.0:\r\n      Successfully uninstalled imgaug-0.4.0\r\nSuccessfully installed albumentations-0.4.5 imgaug-0.2.6\r\n```\r\n\r\nIt basically downgraded my `imgaug` version, because of which I face the following error in that library:\r\nhttps://github.com/aleju/imgaug/issues/490\r\n\r\nPlease modify your `setup.py` to support the latest `imgaug` after testing if the latest one works.\r\nCheers!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/655", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/655/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/655/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/655/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/655", "id": 650986408, "node_id": "MDU6SXNzdWU2NTA5ODY0MDg=", "number": 655, "title": "mask is not corresponting with images after augmentation", "user": {"login": "bozhenhhu", "id": 37445920, "node_id": "MDQ6VXNlcjM3NDQ1OTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/37445920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bozhenhhu", "html_url": "https://github.com/bozhenhhu", "followers_url": "https://api.github.com/users/bozhenhhu/followers", "following_url": "https://api.github.com/users/bozhenhhu/following{/other_user}", "gists_url": "https://api.github.com/users/bozhenhhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bozhenhhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bozhenhhu/subscriptions", "organizations_url": "https://api.github.com/users/bozhenhhu/orgs", "repos_url": "https://api.github.com/users/bozhenhhu/repos", "events_url": "https://api.github.com/users/bozhenhhu/events{/privacy}", "received_events_url": "https://api.github.com/users/bozhenhhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-05T02:13:15Z", "updated_at": "2020-07-05T05:44:23Z", "closed_at": "2020-07-05T05:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\n<!-- A clear and concise description of what content in https://albumentations.readthedocs.io is an issue. -->\r\nMy codes are as follows: \r\ndef get_transforms(phase='train', p=1):\r\n    if phase == \"train\":\r\n        list_transforms = []\r\n        list_transforms.extend(\r\n            [\r\n                HorizontalFlip(), VerticalFlip(),\r\n                # OneOf([\r\n                #     IAAAdditiveGaussianNoise(),\r\n                #     GaussNoise(),\r\n                # ], p=0.1),\r\n                # OneOf([\r\n                #     MotionBlur(p=.2),\r\n                #     MedianBlur(blur_limit=3, p=.1),\r\n                #     Blur(blur_limit=3, p=.1),\r\n                # ], p=0.1),\r\n                # OneOf([\r\n                #     GridDistortion(p=.1),\r\n                #     IAAPiecewiseAffine(p=0.2),\r\n                # ], p=0.3),\r\n                # OneOf([\r\n                #     CLAHE(clip_limit=2),\r\n                #     IAASharpen(),\r\n                #     IAAEmboss(),\r\n                #     RandomBrightnessContrast(),\r\n                # ], p=0.2),\r\n                HueSaturationValue(p=0.3),\r\n            ]\r\n        )\r\n        list_trfms = Compose(list_transforms,p=p)\r\n        return list_trfms\r\n\r\ntransforms = get_transforms(phase='train')\r\nheigth = 256\r\nwidth = 256\r\nimg = cv2.imread(label_path, 0)\r\nfor i in range(0, data.shape[2], 2):\r\n       pre_frame = np.tile(np.expand_dims(data[:, :, i], axis=-1), (1, 1, 3))\r\n       pre_frame = pre_frame.astype(np.uint8)\r\n       aug_data = {\"image\":pre_frame, \"mask\":img}\r\n       augmented = transforms(**aug_data)\r\n       pre_frame, img = augmented['image'][:, :, 0], augmented['mask']\r\n       pre_frame = cv2.resize(pre_frame, (height, width))\r\n       if img.shape != (height, width):\r\n            img = cv2.resize(img, (height, width))\r\n       scipy.misc.imsave('./ims/im_{}.png'.format(i), pre_frame)\r\n       scipy.misc.imsave('./ims_label/label_{}.png'.format(i), img)\r\n\r\nHowever, when I checked the augmented images and labels, I found that the transformed images are different with corresponding transformed masks,for example, one image is rotated 90 degree while its mask is not rotated correctly , I don't know why and how to revise the codes???", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/653", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/653/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/653/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/653", "id": 647004034, "node_id": "MDU6SXNzdWU2NDcwMDQwMzQ=", "number": 653, "title": "Index Error when importing albumentations.pytorch.transforms", "user": {"login": "hpschrei", "id": 19766048, "node_id": "MDQ6VXNlcjE5NzY2MDQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/19766048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpschrei", "html_url": "https://github.com/hpschrei", "followers_url": "https://api.github.com/users/hpschrei/followers", "following_url": "https://api.github.com/users/hpschrei/following{/other_user}", "gists_url": "https://api.github.com/users/hpschrei/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpschrei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpschrei/subscriptions", "organizations_url": "https://api.github.com/users/hpschrei/orgs", "repos_url": "https://api.github.com/users/hpschrei/repos", "events_url": "https://api.github.com/users/hpschrei/events{/privacy}", "received_events_url": "https://api.github.com/users/hpschrei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-28T20:58:29Z", "updated_at": "2020-06-29T13:59:28Z", "closed_at": "2020-06-29T13:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nWhen importing albumentations.pytorch.transforms I get an \"IndexError: list index out of range\" error.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. import albumentations.pytorch.transforms\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-12-5bbab2123c88> in <module>\r\n----> 1 import albumentations.pytorch.transforms\r\n\r\n~/anaconda3/lib/python3.7/site-packages/albumentations/pytorch/__init__.py in <module>\r\n      1 from __future__ import absolute_import\r\n      2 \r\n----> 3 from .transforms import *\r\n\r\n~/anaconda3/lib/python3.7/site-packages/albumentations/pytorch/transforms.py in <module>\r\n      5 import numpy as np\r\n      6 import torch\r\n----> 7 from torchvision.transforms import functional as F\r\n      8 \r\n      9 from ..core.transforms_interface import BasicTransform\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torchvision/__init__.py in <module>\r\n      1 import warnings\r\n      2 \r\n----> 3 from torchvision import models\r\n      4 from torchvision import datasets\r\n      5 from torchvision import ops\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torchvision/models/__init__.py in <module>\r\n     10 from .shufflenetv2 import *\r\n     11 from . import segmentation\r\n---> 12 from . import detection\r\n     13 from . import video\r\n     14 from . import quantization\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/__init__.py in <module>\r\n----> 1 from .faster_rcnn import *\r\n      2 from .mask_rcnn import *\r\n      3 from .keypoint_rcnn import *\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/faster_rcnn.py in <module>\r\n     12 from .generalized_rcnn import GeneralizedRCNN\r\n     13 from .rpn import AnchorGenerator, RPNHead, RegionProposalNetwork\r\n---> 14 from .roi_heads import RoIHeads\r\n     15 from .transform import GeneralizedRCNNTransform\r\n     16 from .backbone_utils import resnet_fpn_backbone\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torchvision/models/detection/roi_heads.py in <module>\r\n    209 \r\n    210 \r\n--> 211 @torch.jit.script\r\n    212 def _onnx_heatmaps_to_keypoints_loop(maps, rois, widths_ceil, heights_ceil,\r\n    213                                      widths, heights, offset_x, offset_y, num_keypoints):\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py in script(obj, optimize, _frames_up, _rcb)\r\n   1288         raise RuntimeError(\"interface must be applied to a class\")\r\n   1289     if not _is_new_style_class(obj):\r\n-> 1290         raise RuntimeError(\"TorchScript interfaces must inherit from 'object'\")\r\n   1291 \r\n   1292     is_module_interface = issubclass(obj, torch.nn.Module) and len(obj.mro()) == 3\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/_recursive.py in try_compile_fn(fn, loc)\r\n    566 \r\n    567 def compile_unbound_method(concrete_type, fn):\r\n--> 568     if _jit_internal.is_ignored_fn(fn):\r\n    569         return None\r\n    570     stub = make_stub(fn)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py in script(obj, optimize, _frames_up, _rcb)\r\n   1288         raise RuntimeError(\"interface must be applied to a class\")\r\n   1289     if not _is_new_style_class(obj):\r\n-> 1290         raise RuntimeError(\"TorchScript interfaces must inherit from 'object'\")\r\n   1291 \r\n   1292     is_module_interface = issubclass(obj, torch.nn.Module) and len(obj.mro()) == 3\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py in _get_overloads(obj)\r\n   2028 _compiled_overloaded_fns = {}\r\n   2029 \r\n-> 2030 def _compile_function_with_overload(qual_name, impl_fn, overload_decl, overload_defaults):\r\n   2031     impl_ast = torch.jit.get_jit_def(impl_fn)\r\n   2032     _rcb = _jit_internal.createResolutionCallbackFromClosure(impl_fn)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py in _compile_function_with_overload(overload_fn, qual_name, impl_fn)\r\n   2015 \r\n   2016 \r\n-> 2017 def _get_script_class(name):\r\n   2018     global _script_classes\r\n   2019     if name not in _script_classes:\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/_recursive.py in try_compile_fn(fn, loc)\r\n    566 \r\n    567 def compile_unbound_method(concrete_type, fn):\r\n--> 568     if _jit_internal.is_ignored_fn(fn):\r\n    569         return None\r\n    570     stub = make_stub(fn)\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py in script(obj, optimize, _frames_up, _rcb)\r\n   1285 \r\n   1286 def interface(obj):\r\n-> 1287     if not inspect.isclass(obj):\r\n   1288         raise RuntimeError(\"interface must be applied to a class\")\r\n   1289     if not _is_new_style_class(obj):\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/jit/frontend.py in get_jit_def(fn, self_name)\r\n    162     sourcelines, file_lineno, filename = get_source_lines_and_file(fn)\r\n    163     source = ''.join(sourcelines)\r\n--> 164     dedent_src = dedent(source)\r\n    165     py_ast = ast.parse(dedent_src)\r\n    166     if len(py_ast.body) != 1 or not isinstance(py_ast.body[0], ast.FunctionDef):\r\n\r\n~/anaconda3/lib/python3.7/site-packages/torch/_utils_internal.py in get_source_lines_and_file(obj, error_msg)\r\n     44     try:\r\n     45         filename = inspect.getsourcefile(obj)\r\n---> 46         sourcelines, file_lineno = inspect.getsourcelines(obj)\r\n     47     except OSError as e:\r\n     48         raise OSError((\r\n\r\n~/anaconda3/lib/python3.7/inspect.py in getsourcelines(object)\r\n    953     raised if the source code cannot be retrieved.\"\"\"\r\n    954     object = unwrap(object)\r\n--> 955     lines, lnum = findsource(object)\r\n    956 \r\n    957     if istraceback(object):\r\n\r\n~/anaconda3/lib/python3.7/inspect.py in findsource(object)\r\n    826         pat = re.compile(r'^(\\s*def\\s)|(\\s*async\\s+def\\s)|(.*(?<!\\w)lambda(:|\\s))|^(\\s*@)')\r\n    827         while lnum > 0:\r\n--> 828             if pat.match(lines[lnum]): break\r\n    829             lnum = lnum - 1\r\n    830         return lines, lnum\r\n\r\nIndexError: list index out of range\r\n\r\n## Expected behavior\r\n\r\nImport of albumentations.pytorch.transforms without an index error.\r\n\r\n## Environment\r\n\r\n<details>\r\n  <summary>'conda info'</summary>\r\n<pre>     active environment : base\r\n    active env location : /home/hps/anaconda3\r\n            shell level : 1\r\n       user config file : /home/hps/.condarc\r\n populated config files : \r\n          conda version : 4.8.3\r\n    conda-build version : 3.18.9\r\n         python version : 3.7.4.final.0\r\n       virtual packages : __cuda=10.2\r\n                          __glibc=2.31\r\n       base environment : /home/hps/anaconda3  (writable)\r\n           channel URLs : https://repo.anaconda.com/pkgs/main/linux-64\r\n                          https://repo.anaconda.com/pkgs/main/noarch\r\n                          https://repo.anaconda.com/pkgs/r/linux-64\r\n                          https://repo.anaconda.com/pkgs/r/noarch\r\n          package cache : /home/hps/anaconda3/pkgs\r\n                          /home/hps/.conda/pkgs\r\n       envs directories : /home/hps/anaconda3/envs\r\n                          /home/hps/.conda/envs\r\n               platform : linux-64\r\n             user-agent : conda/4.8.3 requests/2.24.0 CPython/3.7.4 Linux/5.4.0-050400rc5-generic pop/20.04 glibc/2.31\r\n                UID:GID : 1000:1000\r\n             netrc file : None\r\n           offline mode : False\r\n</pre>\r\n</details>\r\n<details>\r\n<summary>'conda list --show-channel-url'</summary>\r\n<pre># packages in environment at /home/hps/anaconda3:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_anaconda_depends         2020.02                  py37_0    defaults\r\n_ipyw_jlab_nb_ext_conf    0.1.0                    py37_0    defaults\r\n_libgcc_mutex             0.1                        main    defaults\r\n_pytorch_select           0.2                       gpu_0    defaults\r\nalabaster                 0.7.12                   py37_0    defaults\r\nalbumentations            0.4.5                    pypi_0    pypi\r\nanaconda                  custom                   py37_1    defaults\r\nanaconda-client           1.7.2                    py37_0    defaults\r\nanaconda-navigator        1.9.7                    py37_0    defaults\r\nanaconda-project          0.8.4                      py_0    defaults\r\nargh                      0.26.2                   py37_0    defaults\r\narviz                     0.6.1                      py_0    defaults\r\nasn1crypto                1.3.0                    py37_0    defaults\r\nastroid                   2.4.2                    py37_0    defaults\r\nastropy                   4.0.1.post1      py37h7b6447c_1    defaults\r\nastunparse                1.6.3                    pypi_0    pypi\r\natomicwrites              1.4.0                      py_0    defaults\r\nattrs                     19.3.0                     py_0    defaults\r\nautograd                  1.3                      pypi_0    pypi\r\nautopep8                  1.5.3                      py_0    defaults\r\nbabel                     2.8.0                      py_0    defaults\r\nbackcall                  0.2.0                      py_0    defaults\r\nbackports                 1.0                        py_2    defaults\r\nbackports.functools_lru_cache 1.6.1                      py_0    defaults\r\nbackports.shutil_get_terminal_size 1.0.0                    py37_2    defaults\r\nbackports.tempfile        1.0                        py_1    defaults\r\nbackports.weakref         1.0.post1                  py_1    defaults\r\nbeautifulsoup4            4.9.1                    py37_0    defaults\r\nbinutils_impl_linux-64    2.33.1               he6710b0_7    defaults\r\nbinutils_linux-64         2.33.1              h9595d00_15    defaults\r\nbitarray                  1.2.2            py37h7b6447c_0    defaults\r\nbkcharts                  0.2                      py37_0    defaults\r\nblas                      1.0                         mkl    defaults\r\nbleach                    3.1.5                      py_0    defaults\r\nblosc                     1.19.0               hd408876_0    defaults\r\nbokeh                     2.1.1                    py37_0    defaults\r\nboto                      2.49.0                   py37_0    defaults\r\nbottleneck                1.3.2            py37heb32a55_1    defaults\r\nbrotlipy                  0.7.0           py37h7b6447c_1000    defaults\r\nbzip2                     1.0.8                h7b6447c_0    defaults\r\nca-certificates           2020.1.1                      0    defaults\r\ncairo                     1.14.12              h8948797_3    defaults\r\ncertifi                   2020.6.20                py37_0    defaults\r\ncffi                      1.14.0           py37h2e261b9_0    defaults\r\ncftime                    1.1.2            py37heb32a55_0    defaults\r\nchardet                   3.0.4                 py37_1003    defaults\r\nclick                     7.1.2                      py_0    defaults\r\ncloudpickle               1.4.1                      py_0    defaults\r\nclyent                    1.2.2                    py37_1    defaults\r\ncmdstanpy                 0.4.0                    pypi_0    pypi\r\ncolorama                  0.4.3                      py_0    defaults\r\nconda                     4.8.3                    py37_0    defaults\r\nconda-build               3.18.9                   py37_3    defaults\r\nconda-env                 2.6.0                         1    defaults\r\nconda-package-handling    1.6.1            py37h7b6447c_0    defaults\r\nconda-verify              3.4.2                      py_1    defaults\r\nconfuse                   1.0.0                    pypi_0    pypi\r\ncontextlib2               0.6.0.post1                py_0    defaults\r\nconvertdate               2.2.1                    pypi_0    pypi\r\ncrayons                   0.3.1                    pypi_0    pypi\r\ncryptography              2.9.2            py37h1ba5d50_0    defaults\r\ncudatoolkit               10.1.243             h6bb024c_0    defaults\r\ncudnn                     7.6.5                cuda10.1_0    defaults\r\ncurl                      7.69.1               hbc83047_0    defaults\r\ncycler                    0.10.0                   py37_0    defaults\r\ncython                    0.29.20          py37he6710b0_0    defaults\r\ncytoolz                   0.10.1           py37h7b6447c_0    defaults\r\ndask                      2.19.0                     py_0    defaults\r\ndask-core                 2.19.0                     py_0    defaults\r\ndbus                      1.13.16              hb2f20db_0    defaults\r\ndecorator                 4.4.2                      py_0    defaults\r\ndefusedxml                0.6.0                      py_0    defaults\r\ndiff-match-patch          20181111                   py_0    defaults\r\ndill                      0.3.1.1                  pypi_0    pypi\r\ndistributed               2.19.0                   py37_0    defaults\r\ndocutils                  0.16                     py37_1    defaults\r\nefficientnet-pytorch      0.6.3                    pypi_0    pypi\r\nentrypoints               0.3                      py37_0    defaults\r\nephem                     3.7.7.1                  pypi_0    pypi\r\net_xmlfile                1.0.1                    py37_0    defaults\r\nexpat                     2.2.9                he6710b0_2    defaults\r\nfastcache                 1.1.0            py37h7b6447c_0    defaults\r\nfbprophet                 0.6                      pypi_0    pypi\r\nffmpeg                    4.0                  hcdf2ecd_0    defaults\r\nfilelock                  3.0.12                     py_0    defaults\r\nfix-yahoo-finance         0.1.37                   pypi_0    pypi\r\nflake8                    3.8.2                    pypi_0    pypi\r\nflask                     1.1.2                      py_0    defaults\r\nfontconfig                2.13.0               h9420a91_0    defaults\r\nfreeglut                  3.0.0                hf484d3e_5    defaults\r\nfreetype                  2.10.2               h5ab3b9f_0    defaults\r\nfribidi                   1.0.9                h7b6447c_0    defaults\r\nfsspec                    0.7.4                      py_0    defaults\r\nfuture                    0.18.2                   py37_1    defaults\r\ngcc_impl_linux-64         7.3.0                habb00fd_1    defaults\r\ngcc_linux-64              7.3.0               h553295d_15    defaults\r\ngeojson                   2.5.0                    pypi_0    pypi\r\ngeos                      3.8.0                he6710b0_0    defaults\r\nget_terminal_size         1.0.0                haa9412d_0    defaults\r\ngevent                    20.6.2           py37h7b6447c_0    defaults\r\nglib                      2.63.1               h5a9c865_0    defaults\r\nglob2                     0.7                        py_0    defaults\r\ngmp                       6.1.2                h6c8ec71_1    defaults\r\ngmpy2                     2.0.8            py37h10f8cd9_2    defaults\r\ngraphite2                 1.3.14               h23475e2_0    defaults\r\ngreenlet                  0.4.16           py37h7b6447c_0    defaults\r\ngst-plugins-base          1.14.0               hbbd80ab_1    defaults\r\ngstreamer                 1.14.0               hb453b48_1    defaults\r\ngxx_impl_linux-64         7.3.0                hdf63c60_1    defaults\r\ngxx_linux-64              7.3.0               h553295d_15    defaults\r\nh5py                      2.8.0            py37h989c5e5_3    defaults\r\nharfbuzz                  1.8.8                hffaf4a1_0    defaults\r\nhdf4                      4.2.13               h3ca952b_2    defaults\r\nhdf5                      1.10.2               hba1933b_1    defaults\r\nheapdict                  1.0.1                      py_0    defaults\r\nholidays                  0.10.2                   pypi_0    pypi\r\nhtml5lib                  1.0.1                    py37_0    defaults\r\nhtmlmin                   0.1.12                   pypi_0    pypi\r\nhypothesis                5.16.1                     py_0    defaults\r\nicu                       58.2                 he6710b0_3    defaults\r\nidna                      2.9                        py_1    defaults\r\nimageio                   2.8.0                      py_0    defaults\r\nimagesize                 1.2.0                      py_0    defaults\r\nimgaug                    0.2.6                    pypi_0    pypi\r\nimportlib-metadata        1.6.1                    py37_0    defaults\r\nimportlib_metadata        1.6.1                         0    defaults\r\ninflection                0.3.1                    py37_1    defaults\r\nintel-openmp              2020.1                      217    defaults\r\nintervaltree              3.0.2                      py_0    defaults\r\nipykernel                 5.3.0            py37h5ca1d4c_0    defaults\r\nipython                   7.15.0                   py37_0    defaults\r\nipython_genutils          0.2.0                    py37_0    defaults\r\nipywidgets                7.5.1                      py_0    defaults\r\nisort                     4.3.21                   py37_0    defaults\r\nitsdangerous              1.1.0                    py37_0    defaults\r\njasper                    2.0.14               h07fcdf6_1    defaults\r\njbig                      2.1                  hdba287a_0    defaults\r\njdcal                     1.4.1                      py_0    defaults\r\njedi                      0.15.2                   py37_0    defaults\r\njeepney                   0.4.3                      py_0    defaults\r\njinja2                    2.11.2                     py_0    defaults\r\njoblib                    0.15.1                     py_0    defaults\r\njpeg                      9b                   h024ee3a_2    defaults\r\njson5                     0.9.5                      py_0    defaults\r\njsonschema                3.2.0                    py37_0    defaults\r\njupyter                   1.0.0                    py37_7    defaults\r\njupyter_client            6.1.3                      py_0    defaults\r\njupyter_console           6.1.0                      py_0    defaults\r\njupyter_core              4.6.3                    py37_0    defaults\r\njupyterlab                2.1.4                      py_1    defaults\r\njupyterlab_server         1.1.5                      py_0    defaults\r\nkeyring                   21.2.1                   py37_0    defaults\r\nkiwisolver                1.2.0            py37hfd86e86_0    defaults\r\nkorean-lunar-calendar     0.2.1                    pypi_0    pypi\r\nkrb5                      1.17.1               h173b8e3_0    defaults\r\nlazy-object-proxy         1.4.3            py37h7b6447c_0    defaults\r\nld_impl_linux-64          2.33.1               h53a641e_7    defaults\r\nlibarchive                3.4.2                h62408e4_0    defaults\r\nlibcurl                   7.69.1               h20c2e04_0    defaults\r\nlibedit                   3.1.20191231         h7b6447c_0    defaults\r\nlibffi                    3.2.1                hd88cf55_4    defaults\r\nlibgcc-ng                 9.1.0                hdf63c60_0    defaults\r\nlibgfortran-ng            7.3.0                hdf63c60_0    defaults\r\nlibglu                    9.0.0                hf484d3e_1    defaults\r\nlibgpuarray               0.7.6                h14c3975_0    defaults\r\nliblief                   0.10.1               he6710b0_0    defaults\r\nlibnetcdf                 4.6.1                h10edf3e_2    defaults\r\nlibopencv                 3.4.2                hb342d67_1    defaults\r\nlibopus                   1.3.1                h7b6447c_0    defaults\r\nlibpng                    1.6.37               hbc83047_0    defaults\r\nlibsodium                 1.0.18               h7b6447c_0    defaults\r\nlibspatialindex           1.9.3                he6710b0_0    defaults\r\nlibssh2                   1.9.0                h1ba5d50_1    defaults\r\nlibstdcxx-ng              9.1.0                hdf63c60_0    defaults\r\nlibtiff                   4.1.0                h2733197_1    defaults\r\nlibtool                   2.4.6                h7b6447c_5    defaults\r\nlibuuid                   1.0.3                h1bed415_2    defaults\r\nlibvpx                    1.7.0                h439df22_0    defaults\r\nlibxcb                    1.13                 h1bed415_1    defaults\r\nlibxml2                   2.9.10               he19cac6_1    defaults\r\nlibxslt                   1.1.34               hc22bd24_0    defaults\r\nlifetimes                 0.11.1                   pypi_0    pypi\r\nlightgbm                  2.3.0            py37he6710b0_0    defaults\r\nllvmlite                  0.32.1           py37hd408876_0    defaults\r\nlocket                    0.2.0                    py37_1    defaults\r\nlunarcalendar             0.0.9                    pypi_0    pypi\r\nlxml                      4.5.1            py37hefd8a0e_0    defaults\r\nlz4-c                     1.9.2                he6710b0_0    defaults\r\nlzo                       2.10                 h7b6447c_2    defaults\r\nmako                      1.1.3                      py_0    defaults\r\nmarkdown                  3.2.2                    pypi_0    pypi\r\nmarkupsafe                1.1.1            py37h7b6447c_0    defaults\r\nmatplotlib                1.5.1                    pypi_0    pypi\r\nmatplotlib-base           3.2.2            py37hef1b27d_0    defaults\r\nmccabe                    0.6.1                    py37_1    defaults\r\nmissingno                 0.4.2                    pypi_0    pypi\r\nmistune                   0.8.4            py37h7b6447c_0    defaults\r\nmkl                       2020.1                      217    defaults\r\nmkl-service               2.3.0            py37he904b0f_0    defaults\r\nmkl_fft                   1.1.0            py37h23d657b_0    defaults\r\nmkl_random                1.1.1            py37h0573a6f_0    defaults\r\nmock                      4.0.2                      py_0    defaults\r\nmore-itertools            8.4.0                      py_0    defaults\r\nmpc                       1.1.0                h10f8cd9_1    defaults\r\nmpfr                      4.0.2                hb69a4c5_1    defaults\r\nmpld3                     0.5.1                    pypi_0    pypi\r\nmpmath                    1.1.0                    py37_0    defaults\r\nmsgpack-python            1.0.0            py37hfd86e86_1    defaults\r\nmultipledispatch          0.6.0                    py37_0    defaults\r\nmultitasking              0.0.9                    pypi_0    pypi\r\nnavigator-updater         0.2.1                    py37_0    defaults\r\nnbconvert                 5.6.1                    py37_0    defaults\r\nnbformat                  5.0.7                      py_0    defaults\r\nnbopen                    0.6                      pypi_0    pypi\r\nncurses                   6.2                  he6710b0_1    defaults\r\nnetcdf4                   1.4.2            py37h4b4f87f_0    defaults\r\nnetworkx                  2.4                        py_0    defaults\r\nninja                     1.9.0            py37hfd86e86_0    defaults\r\nnltk                      3.5                        py_0    defaults\r\nnonlinshrink              0.6                       dev_0    &lt;develop&gt;\r\nnose                      1.3.7                    py37_2    defaults\r\nnotebook                  6.0.3                    py37_0    defaults\r\nnumba                     0.49.1           py37h0573a6f_0    defaults\r\nnumexpr                   2.7.1            py37h423224d_0    defaults\r\nnumpy                     1.18.5           py37ha1c710e_0    defaults\r\nnumpy-base                1.18.5           py37hde5b4d6_0    defaults\r\nnumpydoc                  1.0.0                      py_0    defaults\r\nolefile                   0.46                     py37_0    defaults\r\nopencv                    3.4.2            py37h6fd60c2_1    defaults\r\nopencv-python             4.2.0.34                 pypi_0    pypi\r\nopencv-python-headless    4.2.0.34                 pypi_0    pypi\r\nopenpyxl                  3.0.3                      py_0    defaults\r\nopenssl                   1.1.1g               h7b6447c_0    defaults\r\npackaging                 20.4                       py_0    defaults\r\npandas                    1.0.5            py37h0573a6f_0    defaults\r\npandas-datareader         0.8.1                    pypi_0    pypi\r\npandas-profiling          2.3.0                    pypi_0    pypi\r\npandoc                    2.9.2.1                       0    defaults\r\npandocfilters             1.4.2                    py37_1    defaults\r\npango                     1.42.4               h049681c_0    defaults\r\nparso                     0.5.2                      py_0    defaults\r\npartd                     1.1.0                      py_0    defaults\r\npatchelf                  0.11                 he6710b0_0    defaults\r\npath                      14.0.1                   py37_0    defaults\r\npath.py                   12.0.2                     py_0    defaults\r\npathlib2                  2.3.5                    py37_0    defaults\r\npathtools                 0.1.2                      py_1    defaults\r\npatsy                     0.5.1                    py37_0    defaults\r\npcre                      8.44                 he6710b0_0    defaults\r\npep8                      1.7.1                    py37_0    defaults\r\npexpect                   4.8.0                    py37_0    defaults\r\nphik                      0.9.8                    pypi_0    pypi\r\npickleshare               0.7.5                    py37_0    defaults\r\npiexif                    1.1.3                    pypi_0    pypi\r\npillow                    6.2.2                    pypi_0    pypi\r\npip                       19.3.1                   pypi_0    pypi\r\npixiedust                 1.1.18                   pypi_0    pypi\r\npixman                    0.40.0               h7b6447c_0    defaults\r\npkginfo                   1.5.0.1                  py37_0    defaults\r\nplotly                    4.6.0                      py_0    defaults\r\npluggy                    0.13.1                   py37_0    defaults\r\nply                       3.11                     py37_0    defaults\r\nprometheus_client         0.8.0                      py_0    defaults\r\nprompt-toolkit            3.0.5                      py_0    defaults\r\nprompt_toolkit            3.0.5                         0    defaults\r\npsutil                    5.7.0            py37h7b6447c_0    defaults\r\nptyprocess                0.6.0                    py37_0    defaults\r\npy                        1.8.2                      py_0    defaults\r\npy-lief                   0.10.1           py37h403a769_0    defaults\r\npy-opencv                 3.4.2            py37hb342d67_1    defaults\r\npycodestyle               2.6.0                      py_0    defaults\r\npycosat                   0.6.3            py37h7b6447c_0    defaults\r\npycparser                 2.20                       py_0    defaults\r\npycrypto                  2.6.1           py37h7b6447c_10    defaults\r\npycurl                    7.43.0.5         py37h1ba5d50_0    defaults\r\npydocstyle                5.0.2                      py_0    defaults\r\npyflakes                  2.2.0                      py_0    defaults\r\npygments                  2.6.1                      py_0    defaults\r\npygpu                     0.7.6            py37heb32a55_0    defaults\r\npylint                    2.5.3                    py37_0    defaults\r\npymc3                     3.8                        py_0    defaults\r\npymeeus                   0.3.7                    pypi_0    pypi\r\npyodbc                    4.0.30           py37he6710b0_0    defaults\r\npyopenssl                 19.1.0                   py37_0    defaults\r\npyparsing                 2.4.7                      py_0    defaults\r\npyqt                      5.9.2            py37h05f1152_2    defaults\r\npyreadline                2.1                      pypi_0    pypi\r\npyrsistent                0.16.0           py37h7b6447c_0    defaults\r\npysocks                   1.7.1                    py37_0    defaults\r\npystan                    2.19.1.1                 pypi_0    pypi\r\npytables                  3.4.4            py37ha205bf6_0    defaults\r\npytest                    5.4.3                    py37_0    defaults\r\npytest-arraydiff          0.3              py37h39e3cac_0    defaults\r\npytest-astropy            0.8.0                      py_0    defaults\r\npytest-astropy-header     0.1.2                      py_0    defaults\r\npytest-doctestplus        0.7.0                      py_0    defaults\r\npytest-openfiles          0.5.0                      py_0    defaults\r\npytest-pylint             0.14.1                   pypi_0    pypi\r\npytest-remotedata         0.3.2                    py37_0    defaults\r\npython                    3.7.4                h265db76_1    defaults\r\npython-dateutil           2.8.1                      py_0    defaults\r\npython-jsonrpc-server     0.3.4                      py_0    defaults\r\npython-language-server    0.31.9                   py37_0    defaults\r\npython-libarchive-c       2.9                        py_0    defaults\r\npytorch                   1.4.0           cuda101py37h02f0884_0    defaults\r\npytz                      2020.1                     py_0    defaults\r\npywavelets                1.1.1            py37h7b6447c_0    defaults\r\npyxdg                     0.26                       py_0    defaults\r\npyyaml                    5.3.1            py37h7b6447c_1    defaults\r\npyzmq                     19.0.1           py37he6710b0_1    defaults\r\nqdarkstyle                2.8.1                      py_0    defaults\r\nqt                        5.9.7                h5867ecd_1    defaults\r\nqtawesome                 0.7.2                      py_0    defaults\r\nqtconsole                 4.7.5                      py_0    defaults\r\nqtpy                      1.9.0                      py_0    defaults\r\nquandl                    3.4.8                    py37_0    defaults\r\nreadline                  7.0                  h7b6447c_5    defaults\r\nregex                     2020.5.14        py37h7b6447c_0    defaults\r\nrequests                  2.24.0                     py_0    defaults\r\nretrying                  1.3.3                    py37_2    defaults\r\nripgrep                   11.0.2               he32d670_0    defaults\r\nrope                      0.17.0                     py_0    defaults\r\nrtree                     0.9.4                    py37_1    defaults\r\nruamel_yaml               0.15.87          py37h7b6447c_1    defaults\r\nscikit-image              0.16.2           py37h0573a6f_0    defaults\r\nscikit-learn              0.23.1           py37h423224d_0    defaults\r\nscipy                     1.5.0            py37h0b6359f_0    defaults\r\nseaborn                   0.10.1                     py_0    defaults\r\nsecretstorage             3.1.2                    py37_0    defaults\r\nsend2trash                1.5.0                    py37_0    defaults\r\nsetuptools                47.3.1                   py37_0    defaults\r\nsetuptools-git            1.2                      pypi_0    pypi\r\nshapely                   1.7.0            py37h98ec03d_0    defaults\r\nsimplegeneric             0.8.1                    py37_2    defaults\r\nsingledispatch            3.4.0.3                  py37_0    defaults\r\nsip                       4.19.8           py37hf484d3e_0    defaults\r\nsix                       1.15.0                     py_0    defaults\r\nsnappy                    1.1.8                he6710b0_0    defaults\r\nsnowballstemmer           2.0.0                      py_0    defaults\r\nsortedcollections         1.2.1                      py_0    defaults\r\nsortedcontainers          2.2.2                      py_0    defaults\r\nsoupsieve                 2.0.1                      py_0    defaults\r\nsphinx                    3.1.1                      py_0    defaults\r\nsphinxcontrib             1.0                      py37_1    defaults\r\nsphinxcontrib-applehelp   1.0.2                      py_0    defaults\r\nsphinxcontrib-devhelp     1.0.2                      py_0    defaults\r\nsphinxcontrib-htmlhelp    1.0.3                      py_0    defaults\r\nsphinxcontrib-jsmath      1.0.1                      py_0    defaults\r\nsphinxcontrib-qthelp      1.0.3                      py_0    defaults\r\nsphinxcontrib-serializinghtml 1.1.4                      py_0    defaults\r\nsphinxcontrib-websupport  1.2.2                      py_0    defaults\r\nspyder                    4.1.3                    py37_0    defaults\r\nspyder-kernels            1.9.1                    py37_0    defaults\r\nsqlalchemy                1.3.17           py37h7b6447c_0    defaults\r\nsqlite                    3.32.3               h62c20be_0    defaults\r\nstart_jupyter_cm          2.1.0                      py_0    conda-forge\r\nstatsmodels               0.11.1           py37h7b6447c_0    defaults\r\nstegano                   0.9.8                    pypi_0    pypi\r\nsympy                     1.6                      py37_0    defaults\r\ntbb                       2020.0               hfd86e86_0    defaults\r\ntblib                     1.6.0                      py_0    defaults\r\nterminado                 0.8.3                    py37_0    defaults\r\ntestpath                  0.4.4                      py_0    defaults\r\ntheano                    0.8.2                    pypi_0    pypi\r\nthreadpoolctl             2.1.0              pyh5ca1d4c_0    defaults\r\ntk                        8.6.10               hbc83047_0    defaults\r\ntoml                      0.10.1                     py_0    defaults\r\ntoolz                     0.10.0                     py_0    defaults\r\ntorch                     1.5.1                    pypi_0    pypi\r\ntorchvision               0.5.0                py37_cu101    pytorch\r\ntornado                   6.0.4            py37h7b6447c_1    defaults\r\ntqdm                      4.46.1                     py_0    defaults\r\ntraitlets                 4.3.3                    py37_0    defaults\r\ntyped-ast                 1.4.0                    pypi_0    pypi\r\ntyping_extensions         3.7.4.2                    py_0    defaults\r\nujson                     1.35             py37h14c3975_0    defaults\r\nunicodecsv                0.14.1                   py37_0    defaults\r\nunixodbc                  2.3.7                h14c3975_0    defaults\r\nurllib3                   1.25.9                     py_0    defaults\r\nwatchdog                  0.10.2                   py37_0    defaults\r\nwcwidth                   0.2.4                      py_0    defaults\r\nwebencodings              0.5.1                    py37_1    defaults\r\nwerkzeug                  1.0.1                      py_0    defaults\r\nwheel                     0.34.2                   py37_0    defaults\r\nwidgetsnbextension        3.5.1                    py37_0    defaults\r\nwrapt                     1.11.2           py37h7b6447c_0    defaults\r\nwurlitzer                 2.0.0                    py37_0    defaults\r\nxarray                    0.15.1                     py_0    defaults\r\nxlrd                      1.2.0                    py37_0    defaults\r\nxlsxwriter                1.2.9                      py_0    defaults\r\nxlwt                      1.3.0                    py37_0    defaults\r\nxz                        5.2.5                h7b6447c_0    defaults\r\nyaml                      0.2.5                h7b6447c_0    defaults\r\nyapf                      0.29.0                     py_0    defaults\r\nyfinance                  0.1.54                   pypi_0    pypi\r\nzeromq                    4.3.2                he6710b0_2    defaults\r\nzict                      2.0.0                      py_0    defaults\r\nzipp                      3.1.0                      py_0    defaults\r\nzlib                      1.2.11               h7b6447c_3    defaults\r\nzope                      1.0                      py37_1    defaults\r\nzope.event                4.4                      py37_0    defaults\r\nzope.interface            4.7.1            py37h7b6447c_0    defaults\r\nzstd                      1.4.4                h0b5b093_3    defaults\r\n</pre>\r\n</details>\r\n\r\n## Additional context\r\n\r\nGiven that the error occurs immediately at import, it seems likely to me that it is a versioning issue, possibly caused by a particular version configuration on my side.\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/646", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/646/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/646/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/646", "id": 638419602, "node_id": "MDU6SXNzdWU2Mzg0MTk2MDI=", "number": 646, "title": "Question -- add data or just transform data?", "user": {"login": "aamster", "id": 5454341, "node_id": "MDQ6VXNlcjU0NTQzNDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5454341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aamster", "html_url": "https://github.com/aamster", "followers_url": "https://api.github.com/users/aamster/followers", "following_url": "https://api.github.com/users/aamster/following{/other_user}", "gists_url": "https://api.github.com/users/aamster/gists{/gist_id}", "starred_url": "https://api.github.com/users/aamster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aamster/subscriptions", "organizations_url": "https://api.github.com/users/aamster/orgs", "repos_url": "https://api.github.com/users/aamster/repos", "events_url": "https://api.github.com/users/aamster/events{/privacy}", "received_events_url": "https://api.github.com/users/aamster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-14T19:57:40Z", "updated_at": "2020-06-14T20:41:11Z", "closed_at": "2020-06-14T20:41:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "My understanding of data augmentation is that we should take whatever data we have, and then to this dataset _add_ augmented images. However with albumentations, my understanding is that with the `p` argument, we can control whether the augmentation gets applied or not, but the amount of data that we have is still the same. Shouldn't albumentations work by _adding_ augmented images to the dataset instead of just applying transformations to the existing dataset or am I wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/645", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/645/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/645/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/645", "id": 638090696, "node_id": "MDU6SXNzdWU2MzgwOTA2OTY=", "number": 645, "title": "CUDA backend support", "user": {"login": "briankosw", "id": 10988056, "node_id": "MDQ6VXNlcjEwOTg4MDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/10988056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briankosw", "html_url": "https://github.com/briankosw", "followers_url": "https://api.github.com/users/briankosw/followers", "following_url": "https://api.github.com/users/briankosw/following{/other_user}", "gists_url": "https://api.github.com/users/briankosw/gists{/gist_id}", "starred_url": "https://api.github.com/users/briankosw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briankosw/subscriptions", "organizations_url": "https://api.github.com/users/briankosw/orgs", "repos_url": "https://api.github.com/users/briankosw/repos", "events_url": "https://api.github.com/users/briankosw/events{/privacy}", "received_events_url": "https://api.github.com/users/briankosw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-13T04:03:01Z", "updated_at": "2020-07-29T09:56:32Z", "closed_at": "2020-06-13T04:59:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there plans to add CUDA backend support? It seems natural that image augmentation and preprocessing would have GPU acceleration.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/644", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/644/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/644/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/644", "id": 637696410, "node_id": "MDU6SXNzdWU2Mzc2OTY0MTA=", "number": 644, "title": "ToTransform before Normalize causes Tensor no attribute astype Error", "user": {"login": "sarmientoj24", "id": 8830319, "node_id": "MDQ6VXNlcjg4MzAzMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8830319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarmientoj24", "html_url": "https://github.com/sarmientoj24", "followers_url": "https://api.github.com/users/sarmientoj24/followers", "following_url": "https://api.github.com/users/sarmientoj24/following{/other_user}", "gists_url": "https://api.github.com/users/sarmientoj24/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarmientoj24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarmientoj24/subscriptions", "organizations_url": "https://api.github.com/users/sarmientoj24/orgs", "repos_url": "https://api.github.com/users/sarmientoj24/repos", "events_url": "https://api.github.com/users/sarmientoj24/events{/privacy}", "received_events_url": "https://api.github.com/users/sarmientoj24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-06-12T11:51:57Z", "updated_at": "2020-06-13T11:59:02Z", "closed_at": "2020-06-13T04:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my albumentations transform. Before, this was Normalize --> ToTensor.\r\nChanging the order (which I think is the right order) produces an error.\r\n\r\n```\r\ndef get_transforms(phase, mean, std):\r\n    list_transforms = []\r\n    if phase == \"train\":\r\n        list_transforms.extend(\r\n            [\r\n                HorizontalFlip(p=0.2),\r\n                ShiftScaleRotate(\r\n                    shift_limit=0,  # no resizing\r\n                    scale_limit=0.1,\r\n                    rotate_limit=10, # rotate\r\n                    p=0.5,\r\n                    border_mode=cv2.BORDER_CONSTANT\r\n                )\r\n                # albu.RandomRotate90(),\r\n                # albu.Cutout(),\r\n                # albu.RandomBrightnessContrast(\r\n                #     brightness_limit=0.2, contrast_limit=0.2, p=0.3\r\n                # ),\r\n                # # albu.GridDistortion(p=0.3),\r\n                # albu.HueSaturationValue(p=0.2),\r\n                # albu.RandomContrast(p=0.2),\r\n                # albu.MedianBlur(p=0.2)\r\n                # Resize(320, 480),\r\n            ]\r\n        )\r\n    list_transforms.extend(\r\n        [\r\n            ToTensor(),\r\n            Normalize(mean=mean, std=std, p=1),\r\n            \r\n        ]\r\n    )\r\n\r\n    list_trfms = Compose(list_transforms)\r\n    return list_trfms\r\n```\r\n\r\nWhen loading using DataLoader, it generates an error\r\n```\r\n     90     denominator = np.reciprocal(std, dtype=np.float32)\r\n     91 \r\n---> 92     img = img.astype(np.float32)\r\n     93     img -= mean\r\n     94     img *= denominator\r\n\r\nAttributeError: 'Tensor' object has no attribute 'astype'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/643", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/643/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/643/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/643", "id": 637086872, "node_id": "MDU6SXNzdWU2MzcwODY4NzI=", "number": 643, "title": "Inconsistent augmentations in the multi-target case", "user": {"login": "emirkonuk", "id": 3155072, "node_id": "MDQ6VXNlcjMxNTUwNzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3155072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emirkonuk", "html_url": "https://github.com/emirkonuk", "followers_url": "https://api.github.com/users/emirkonuk/followers", "following_url": "https://api.github.com/users/emirkonuk/following{/other_user}", "gists_url": "https://api.github.com/users/emirkonuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/emirkonuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emirkonuk/subscriptions", "organizations_url": "https://api.github.com/users/emirkonuk/orgs", "repos_url": "https://api.github.com/users/emirkonuk/repos", "events_url": "https://api.github.com/users/emirkonuk/events{/privacy}", "received_events_url": "https://api.github.com/users/emirkonuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-11T14:58:58Z", "updated_at": "2020-08-07T17:22:06Z", "closed_at": "2020-08-07T17:22:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nInconsistent augmentations in the multi-target case for HorizontalFlip(). Say we have an input_image and a target_image and we want to apply the same HorizontalFlip() consistently. Happens only when using with a pytorch Dataset object. \r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\nimport cv2\r\nimport albumentations\r\nimport numpy as np\r\n\r\ntransform = albumentations.Compose([albumentations.HorizontalFlip()],\r\n                                   additional_targets={'target_image':'image'})\r\nclass Dataset(torch.utils.data.Dataset):\r\n    def __init__(self, transform=None):\r\n        super(Dataset, self).__init__()\r\n        self.transform = transform\r\n        self.length = 100\r\n        self.input_image = np.random.rand(224,224,3)\r\n        \r\n        \r\n    def __len__(self):\r\n        return self.length \r\n        \r\n    def __getitem__(self, idx):        \r\n        augmented = self.transform(image=self.input_image, \r\n                                   target_image=self.input_image)\r\n        input_image = augmented['image']\r\n        target_image = augmented['target_image']\r\n        return input_image, target_image\r\n```\r\n\r\n```\r\ndataset = Dataset(transform)\r\nfor idx in range(100):\r\n    assert np.alltrue(dataset[idx][1] == dataset[idx][0])\r\n```\r\n\r\n## Expected behavior\r\n\r\nIt works without a pytorch Dataset object:\r\n\r\n```\r\nfor _ in range(100):\r\n    input_image = np.random.rand(224,224,3)\r\n    transform = albumentations.Compose([albumentations.HorizontalFlip()],\r\n                                       additional_targets={'target_image':'image'})\r\n    augmented = transform(image=input_image, target_image=input_image)\r\n    assert np.alltrue(augmented['image'] == augmented['target_image'])\r\n```\r\n\r\n## Environment\r\n\r\n - Albumentations version: 0.4.5\r\n - Python version: 3.8.2\r\n - OS: Ubuntu 18.04\r\n - How you installed albumentations: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/640", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/640/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/640/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/640", "id": 630166720, "node_id": "MDU6SXNzdWU2MzAxNjY3MjA=", "number": 640, "title": "Pass custom parameters to Lambda-function", "user": {"login": "stvogel", "id": 4895281, "node_id": "MDQ6VXNlcjQ4OTUyODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4895281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stvogel", "html_url": "https://github.com/stvogel", "followers_url": "https://api.github.com/users/stvogel/followers", "following_url": "https://api.github.com/users/stvogel/following{/other_user}", "gists_url": "https://api.github.com/users/stvogel/gists{/gist_id}", "starred_url": "https://api.github.com/users/stvogel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stvogel/subscriptions", "organizations_url": "https://api.github.com/users/stvogel/orgs", "repos_url": "https://api.github.com/users/stvogel/repos", "events_url": "https://api.github.com/users/stvogel/events{/privacy}", "received_events_url": "https://api.github.com/users/stvogel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-03T17:02:19Z", "updated_at": "2020-06-08T07:41:57Z", "closed_at": "2020-06-04T06:19:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe this is more a feature-request or I simply cannot find any example in the docs.\r\n\r\nI have a custom function, e.g.:\r\n```\r\nimport albumentations as A\r\ndef pixel_dropout(image, **kwargs):\r\n    # do something with image, depending on parameter \"level\"\r\n    return image\r\n```\r\nTo compose my custom augmentation with other augmentations I do:\r\n```\r\naug = A.Compose([\r\n    A.Lambda(name='pixel_dropout', image=pixel_dropout, p=1),\r\n    A.VerticalFlip(p=0.5)\r\n], p=0.5)\r\n```\r\nHow can I add parameters to my custom Lambda-function: \"pixel_dropout\"?\r\nWhen adding them to `A.Lambda(name='pixel_dropout', image=pixel_dropout, level=1, p=1)` I get:\r\n```\r\n      3 aug = A.Compose([\r\n----> 4     A.Lambda(name='pixel_dropout', image=pixel_dropout, level=1, p=1),\r\n      5     A.VerticalFlip(p=1)\r\n      6 ], p=1)\r\nTypeError: __init__() got an unexpected keyword argument 'level'\r\n```\r\nand as documented only parameters: `image, mask, keypoint, bbox, always_apply, p` are valid.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/636", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/636/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/636/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/636", "id": 623549710, "node_id": "MDU6SXNzdWU2MjM1NDk3MTA=", "number": 636, "title": "Rotation induced mirroring doesnt mirror boxes", "user": {"login": "julled", "id": 8696195, "node_id": "MDQ6VXNlcjg2OTYxOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8696195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julled", "html_url": "https://github.com/julled", "followers_url": "https://api.github.com/users/julled/followers", "following_url": "https://api.github.com/users/julled/following{/other_user}", "gists_url": "https://api.github.com/users/julled/gists{/gist_id}", "starred_url": "https://api.github.com/users/julled/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julled/subscriptions", "organizations_url": "https://api.github.com/users/julled/orgs", "repos_url": "https://api.github.com/users/julled/repos", "events_url": "https://api.github.com/users/julled/events{/privacy}", "received_events_url": "https://api.github.com/users/julled/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-23T01:58:59Z", "updated_at": "2020-05-24T18:45:35Z", "closed_at": "2020-05-24T18:45:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nI encountered a problem when rotation fills the gaps at the image border by mirroring (default cv2 bordermode is cv2.BORDER_REFLECT_101). If a rotation is applied, the box of the object isnt mirrored. Thus there is a new object in the image created, but without a corresponding box.\r\nExample:\r\n![rotation](https://user-images.githubusercontent.com/8696195/82719299-8996f800-9ca9-11ea-896b-d98cdc22419a.png)\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Rotate a image with a box next to the image border\r\n\r\n## Expected behavior\r\n\r\nI expect to have a new box created which encloses the mirrored objects/parts.\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): albumentations     0.4.3\r\n - Python version (e.g., 3.7): 3.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/633", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/633/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/633/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/633", "id": 620583924, "node_id": "MDU6SXNzdWU2MjA1ODM5MjQ=", "number": 633, "title": "How to resize images annotated with Labelimg?", "user": {"login": "abdou31", "id": 19480228, "node_id": "MDQ6VXNlcjE5NDgwMjI4", "avatar_url": "https://avatars3.githubusercontent.com/u/19480228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abdou31", "html_url": "https://github.com/abdou31", "followers_url": "https://api.github.com/users/abdou31/followers", "following_url": "https://api.github.com/users/abdou31/following{/other_user}", "gists_url": "https://api.github.com/users/abdou31/gists{/gist_id}", "starred_url": "https://api.github.com/users/abdou31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abdou31/subscriptions", "organizations_url": "https://api.github.com/users/abdou31/orgs", "repos_url": "https://api.github.com/users/abdou31/repos", "events_url": "https://api.github.com/users/abdou31/events{/privacy}", "received_events_url": "https://api.github.com/users/abdou31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T00:18:00Z", "updated_at": "2020-05-19T08:01:02Z", "closed_at": "2020-05-19T08:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): Last version\r\n - Python version (e.g., 3.7):3.6\r\n - OS (e.g., Linux):Windows 10 x64\r\n - How you installed albumentations (`conda`, `pip`, source):\r\n - Any other relevant information:\r\n\r\n\r\n\r\nHello, I would like to know is it a guide of how to use albumentations to resize dataset ( images annotated with bounding box using Labelimg )?\r\nThanks.\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/631", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/631/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/631/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/631", "id": 616578554, "node_id": "MDU6SXNzdWU2MTY1Nzg1NTQ=", "number": 631, "title": "Failed building wheel for imagecodecs, not able to install albumentation library", "user": {"login": "Ambika-Gowda", "id": 53007403, "node_id": "MDQ6VXNlcjUzMDA3NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/53007403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ambika-Gowda", "html_url": "https://github.com/Ambika-Gowda", "followers_url": "https://api.github.com/users/Ambika-Gowda/followers", "following_url": "https://api.github.com/users/Ambika-Gowda/following{/other_user}", "gists_url": "https://api.github.com/users/Ambika-Gowda/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ambika-Gowda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ambika-Gowda/subscriptions", "organizations_url": "https://api.github.com/users/Ambika-Gowda/orgs", "repos_url": "https://api.github.com/users/Ambika-Gowda/repos", "events_url": "https://api.github.com/users/Ambika-Gowda/events{/privacy}", "received_events_url": "https://api.github.com/users/Ambika-Gowda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-12T11:24:27Z", "updated_at": "2020-05-12T12:12:57Z", "closed_at": "2020-05-12T12:12:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am not able to install albumentation library. I have given below log output Error.\r\n\r\nAny help is appreciated !!\r\n\r\n$ pip3 install -U git+https://github.com/albu/albumentations\r\n\r\nCollecting git+https://github.com/albu/albumentations\r\n  Cloning https://github.com/albu/albumentations to /tmp/pip-req-build-5c_xhmh0\r\nRequirement already satisfied, skipping upgrade: numpy>=1.11.1 in /usr/lib/python3/dist-packages (from albumentations==0.4.5) (1.16.2)\r\nRequirement already satisfied, skipping upgrade: scipy in /usr/local/lib/python3.7/dist-packages (from albumentations==0.4.5) (1.4.1)\r\nCollecting imgaug<0.2.7,>=0.2.5 (from albumentations==0.4.5)\r\nRequirement already satisfied, skipping upgrade: PyYAML in /usr/lib/python3/dist-packages (from albumentations==0.4.5) (5.1.2)\r\nRequirement already satisfied, skipping upgrade: opencv-python>=4.1.1 in ./.local/lib/python3.7/site-packages (from albumentations==0.4.5) (4.2.0.34)\r\nRequirement already satisfied, skipping upgrade: six in /usr/lib/python3/dist-packages (from imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (1.12.0)\r\nCollecting scikit-image>=0.11.0 (from imgaug<0.2.7,>=0.2.5->albumentations==0.4.5)\r\n  Using cached https://files.pythonhosted.org/packages/d8/ab/6ae48b75262f7bdb4f7b5217bca8ce2fb4935f0c0581263b66fd31b64b46/scikit_image-0.17.1-cp37-cp37m-manylinux1_x86_64.whl\r\nRequirement already satisfied, skipping upgrade: matplotlib!=3.0.0,>=2.0.0 in ./.local/lib/python3.7/site-packages (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (3.2.1)\r\nCollecting tifffile>=2019.7.26 (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5)\r\n  Using cached https://files.pythonhosted.org/packages/2b/6c/32815fe6c0953e231cf9c2769f8ac135ac8400b851f8a14d310852de4102/tifffile-2020.5.11-py3-none-any.whl\r\nRequirement already satisfied, skipping upgrade: networkx>=2.0 in ./.local/lib/python3.7/site-packages (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (2.4)\r\nRequirement already satisfied, skipping upgrade: imageio>=2.3.0 in ./.local/lib/python3.7/site-packages (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (2.8.0)\r\nRequirement already satisfied, skipping upgrade: pillow!=7.1.0,!=7.1.1,>=4.3.0 in /usr/lib/python3/dist-packages (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (6.1.0)\r\nRequirement already satisfied, skipping upgrade: PyWavelets>=1.1.1 in ./.local/lib/python3.7/site-packages (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (1.1.1)\r\nRequirement already satisfied, skipping upgrade: pooch>=0.5.2 in ./.local/lib/python3.7/site-packages (from scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (1.1.0)\r\nRequirement already satisfied, skipping upgrade: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in ./.local/lib/python3.7/site-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (2.4.7)\r\nRequirement already satisfied, skipping upgrade: python-dateutil>=2.1 in /usr/lib/python3/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (2.7.3)\r\nRequirement already satisfied, skipping upgrade: kiwisolver>=1.0.1 in ./.local/lib/python3.7/site-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (1.2.0)\r\nRequirement already satisfied, skipping upgrade: cycler>=0.10 in ./.local/lib/python3.7/site-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (0.10.0)\r\nCollecting imagecodecs>=2020.2.18 (from tifffile>=2019.7.26->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5)\r\n  Using cached https://files.pythonhosted.org/packages/75/95/3699360d15e5e5d450bbd16ea554fb185117947e76fc772078c4f59ae1c1/imagecodecs-2020.2.18.tar.gz\r\nRequirement already satisfied, skipping upgrade: decorator>=4.3.0 in ./.local/lib/python3.7/site-packages (from networkx>=2.0->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (4.4.2)\r\nRequirement already satisfied, skipping upgrade: requests in /usr/lib/python3/dist-packages (from pooch>=0.5.2->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (2.21.0)\r\nRequirement already satisfied, skipping upgrade: packaging in ./.local/lib/python3.7/site-packages (from pooch>=0.5.2->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (20.3)\r\nRequirement already satisfied, skipping upgrade: appdirs in ./.local/lib/python3.7/site-packages (from pooch>=0.5.2->scikit-image>=0.11.0->imgaug<0.2.7,>=0.2.5->albumentations==0.4.5) (1.4.4)\r\nBuilding wheels for collected packages: albumentations, imagecodecs\r\n  Running setup.py bdist_wheel for albumentations ... done\r\n  Stored in directory: /tmp/pip-ephem-wheel-cache-3udynv5w/wheels/45/8b/e4/2837bbcf517d00732b8e394f8646f22b8723ac00993230188b\r\n  Running setup.py bdist_wheel for imagecodecs ... error\r\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-dpm2bf7a/imagecodecs/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/pip-wheel-0n01uurk --python-tag cp37:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-x86_64-3.7\r\n  creating build/lib.linux-x86_64-3.7/imagecodecs\r\n  copying imagecodecs/__main__.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n  copying imagecodecs/__init__.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n  copying imagecodecs/imagecodecs.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n  copying imagecodecs/_imagecodecs.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n  creating build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-libtiff -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-zlib -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-lzf -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-lz4 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-bitshuffle -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-charls -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-giflib -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-fastlz -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-jpeg -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-libaec -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-openjpeg -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-snappy -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-zopfli -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-brunsli -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-brotli -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-bzip2 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-libwebp -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-jpg_0xc3 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-libpng -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-libmng -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-jxrlib -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-blosc -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-lcms2 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-zfp -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-liblzma -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-zstd -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  copying imagecodecs/licenses/LICENSE-libjpeg-turbo -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n  running build_ext\r\n  building 'imagecodecs._aec' extension\r\n  creating build/temp.linux-x86_64-3.7\r\n  creating build/temp.linux-x86_64-3.7/imagecodecs\r\n  x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -Iimagecodecs -I/usr/include/python3.7m -I/usr/lib/python3/dist-packages/numpy/core/include -c imagecodecs/_aec.c -o build/temp.linux-x86_64-3.7/imagecodecs/_aec.o\r\n  imagecodecs/_aec.c:602:10: fatal error: libaec.h: No such file or directory\r\n    602 | #include \"libaec.h\"\r\n        |          ^~~~~~~~~~\r\n  compilation terminated.\r\n  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n  \r\n  ----------------------------------------\r\n  **Failed building wheel for imagecodecs**\r\n  Running setup.py clean for imagecodecs\r\nSuccessfully built albumentations\r\nFailed to build imagecodecs\r\nInstalling collected packages: imagecodecs, tifffile, scikit-image, imgaug, albumentations\r\n  Running setup.py install for imagecodecs ... error\r\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-dpm2bf7a/imagecodecs/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-kvwbgwhp/install-record.txt --single-version-externally-managed --compile --user --prefix=:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.7\r\n    creating build/lib.linux-x86_64-3.7/imagecodecs\r\n    copying imagecodecs/__main__.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n    copying imagecodecs/__init__.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n    copying imagecodecs/imagecodecs.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n    copying imagecodecs/_imagecodecs.py -> build/lib.linux-x86_64-3.7/imagecodecs\r\n    creating build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-libtiff -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-zlib -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-lzf -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-lz4 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-bitshuffle -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-charls -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-giflib -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-fastlz -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-jpeg -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-libaec -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-openjpeg -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-snappy -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-zopfli -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-brunsli -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-brotli -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-bzip2 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-libwebp -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-jpg_0xc3 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-libpng -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-libmng -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-jxrlib -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-blosc -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-lcms2 -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-zfp -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-liblzma -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-zstd -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    copying imagecodecs/licenses/LICENSE-libjpeg-turbo -> build/lib.linux-x86_64-3.7/imagecodecs/licenses\r\n    running build_ext\r\n    building 'imagecodecs._aec' extension\r\n    creating build/temp.linux-x86_64-3.7\r\n    creating build/temp.linux-x86_64-3.7/imagecodecs\r\n    x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -Iimagecodecs -I/usr/include/python3.7m -I/usr/lib/python3/dist-packages/numpy/core/include -c imagecodecs/_aec.c -o build/temp.linux-x86_64-3.7/imagecodecs/_aec.o\r\n    imagecodecs/_aec.c:602:10: fatal error: libaec.h: No such file or directory\r\n      602 | #include \"libaec.h\"\r\n          |          ^~~~~~~~~~\r\n    compilation terminated.\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\n**Command \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-dpm2bf7a/imagecodecs/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-kvwbgwhp/install-record.txt --single-version-externally-managed --compile --user --prefix=\" failed with error code 1 in /tmp/pip-install-dpm2bf7a/imagecodecs/**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/630", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/630/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/630/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/630", "id": 615115613, "node_id": "MDU6SXNzdWU2MTUxMTU2MTM=", "number": 630, "title": "pip install albumentations is failed with error code", "user": {"login": "Hansoluo", "id": 21060177, "node_id": "MDQ6VXNlcjIxMDYwMTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/21060177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hansoluo", "html_url": "https://github.com/Hansoluo", "followers_url": "https://api.github.com/users/Hansoluo/followers", "following_url": "https://api.github.com/users/Hansoluo/following{/other_user}", "gists_url": "https://api.github.com/users/Hansoluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hansoluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hansoluo/subscriptions", "organizations_url": "https://api.github.com/users/Hansoluo/orgs", "repos_url": "https://api.github.com/users/Hansoluo/repos", "events_url": "https://api.github.com/users/Hansoluo/events{/privacy}", "received_events_url": "https://api.github.com/users/Hansoluo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-09T07:35:33Z", "updated_at": "2020-05-11T11:11:59Z", "closed_at": "2020-05-09T08:50:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\npip install error, somthing related with `imagecodecs`, what other package should be installed? \r\n\r\n## Environment\r\n\r\n - Albumentations version : 0.4.5\r\n - Python version : 3.6\r\n - OS : Linux Ubuntu 16.04\r\n - How you installed albumentations : pip\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n```bash\r\nrunning build_ext\r\nbuilding 'imagecodecs._aec' extension\r\ncreating build/temp.linux-x86_64-3.6\r\ncreating build/temp.linux-x86_64-3.6/imagecodecs\r\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong-Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -Iimagecodecs -I/usr/include/python3.6m -I/home/user/.local/lib/python3.6/site-packages/numpy/core/include -c imagecodecs/_aec.c -o build/temp.linux-x86_64-3.6/imagecodecs/_aec.o\r\nIn file included from /home/user/.local/lib/python3.6/site-packages/numpy/core/include/numpy/ndarraytypes.h:1832:0,\r\n                     from /home/user/.local/lib/python3.6/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,\r\n                     from /home/user/.local/lib/python3.6/site-packages/numpy/core/include/numpy/arrayobject.h:4,\r\n                     from imagecodecs/_aec.c:598:\r\n/home/user/.local/lib/python3.6/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning \"Using deprecated NumPy API, disable it with \" \"#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION\" [-Wcpp]\r\n     #warning \"Using deprecated NumPy API, disable it with \" \\\r\n      ^\r\n    imagecodecs/_aec.c:602:20: fatal error: libaec.h: No such file or directory\r\n    compilation terminated.\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    \r\n    ----------------------------------------\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/629", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/629/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/629/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/629", "id": 614615718, "node_id": "MDU6SXNzdWU2MTQ2MTU3MTg=", "number": 629, "title": "Test Time Dropout", "user": {"login": "luistelmocosta", "id": 7799750, "node_id": "MDQ6VXNlcjc3OTk3NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7799750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luistelmocosta", "html_url": "https://github.com/luistelmocosta", "followers_url": "https://api.github.com/users/luistelmocosta/followers", "following_url": "https://api.github.com/users/luistelmocosta/following{/other_user}", "gists_url": "https://api.github.com/users/luistelmocosta/gists{/gist_id}", "starred_url": "https://api.github.com/users/luistelmocosta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luistelmocosta/subscriptions", "organizations_url": "https://api.github.com/users/luistelmocosta/orgs", "repos_url": "https://api.github.com/users/luistelmocosta/repos", "events_url": "https://api.github.com/users/luistelmocosta/events{/privacy}", "received_events_url": "https://api.github.com/users/luistelmocosta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T09:10:17Z", "updated_at": "2020-05-08T09:20:53Z", "closed_at": "2020-05-08T09:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I was looking for a test time dropout to include it on my project and I was wondering if this amazing library has something like that. I did a quick research and I could not find anything. However, I would like to know if you plan to add it or if something has escaped me.\r\n\r\nKind Regards ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/625", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/625/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/625/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/625", "id": 613734665, "node_id": "MDU6SXNzdWU2MTM3MzQ2NjU=", "number": 625, "title": "Bounding box resize?", "user": {"login": "tienthegainz", "id": 34891363, "node_id": "MDQ6VXNlcjM0ODkxMzYz", "avatar_url": "https://avatars3.githubusercontent.com/u/34891363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tienthegainz", "html_url": "https://github.com/tienthegainz", "followers_url": "https://api.github.com/users/tienthegainz/followers", "following_url": "https://api.github.com/users/tienthegainz/following{/other_user}", "gists_url": "https://api.github.com/users/tienthegainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tienthegainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tienthegainz/subscriptions", "organizations_url": "https://api.github.com/users/tienthegainz/orgs", "repos_url": "https://api.github.com/users/tienthegainz/repos", "events_url": "https://api.github.com/users/tienthegainz/events{/privacy}", "received_events_url": "https://api.github.com/users/tienthegainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T02:48:14Z", "updated_at": "2020-05-08T07:15:57Z", "closed_at": "2020-05-08T07:15:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I want to resize bounding boxes back to image size after doing `Resize()` for evaluation purpose.\r\nI tried to scale by:\r\n```\r\n# width is the image original width\r\n# height is the image original height\r\n# s is the resize shape, let say 512\r\n# bbox is in voc style.\r\nboxes[:, 0] *= (width/s)\r\nboxes[:, 1] *= (height/s)\r\nboxes[:, 2] *= (width/s)\r\nboxes[:, 3] *= (height/s)\r\n```\r\nSome cases are correct, but some are not. Can you tell me the correct way to do it?\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/622", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/622/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/622/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/622", "id": 612383296, "node_id": "MDU6SXNzdWU2MTIzODMyOTY=", "number": 622, "title": "What is a reason that serialization.to_dict() doesn't work on ReplayCompose?", "user": {"login": "IlyaOvodov", "id": 34230114, "node_id": "MDQ6VXNlcjM0MjMwMTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/34230114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaOvodov", "html_url": "https://github.com/IlyaOvodov", "followers_url": "https://api.github.com/users/IlyaOvodov/followers", "following_url": "https://api.github.com/users/IlyaOvodov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaOvodov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaOvodov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaOvodov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaOvodov/orgs", "repos_url": "https://api.github.com/users/IlyaOvodov/repos", "events_url": "https://api.github.com/users/IlyaOvodov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaOvodov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T07:02:47Z", "updated_at": "2020-05-19T21:29:54Z", "closed_at": "2020-05-19T21:29:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "it is declared as `raise NotImplementedError(\"You cannot serialize ReplayCompose\")` in `ReplayCompose`.\r\nFrom the first sight I see no difference between ReplayCompose and Compose for serialization.\r\nWhat obstacles prevent serializing ReplayCompose?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/621", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/621/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/621/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/621", "id": 612375682, "node_id": "MDU6SXNzdWU2MTIzNzU2ODI=", "number": 621, "title": "Check with Black (3.8) fails on PR with no descriptive message", "user": {"login": "IlyaOvodov", "id": 34230114, "node_id": "MDQ6VXNlcjM0MjMwMTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/34230114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaOvodov", "html_url": "https://github.com/IlyaOvodov", "followers_url": "https://api.github.com/users/IlyaOvodov/followers", "following_url": "https://api.github.com/users/IlyaOvodov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaOvodov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaOvodov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaOvodov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaOvodov/orgs", "repos_url": "https://api.github.com/users/IlyaOvodov/repos", "events_url": "https://api.github.com/users/IlyaOvodov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaOvodov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T06:45:14Z", "updated_at": "2020-05-05T09:03:21Z", "closed_at": "2020-05-05T09:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "CI / Check code formatting with Black (3.8) fails but produces no descriptive message.\r\nSee example here: https://github.com/albumentations-team/albumentations/pull/618/checks?check_run_id=642536352\r\nOnly information I found there is:\r\n```\r\nRun black --config=black.toml --check .\r\nwould reformat /home/runner/work/albumentations/albumentations/albumentations/augmentations/bbox_utils.py\r\nwould reformat /home/runner/work/albumentations/albumentations/albumentations/core/composition.py\r\nAll done! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n2 files would be reformatted, 32 files would be left unchanged.\r\n##[error]Process completed with exit code 1.\r\n```\r\nHow to find what is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/606", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/606/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/606/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/606", "id": 609093931, "node_id": "MDU6SXNzdWU2MDkwOTM5MzE=", "number": 606, "title": "module 'albumentations' has no attribute 'KeypointParams'", "user": {"login": "ashwath98", "id": 26197766, "node_id": "MDQ6VXNlcjI2MTk3NzY2", "avatar_url": "https://avatars3.githubusercontent.com/u/26197766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwath98", "html_url": "https://github.com/ashwath98", "followers_url": "https://api.github.com/users/ashwath98/followers", "following_url": "https://api.github.com/users/ashwath98/following{/other_user}", "gists_url": "https://api.github.com/users/ashwath98/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwath98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwath98/subscriptions", "organizations_url": "https://api.github.com/users/ashwath98/orgs", "repos_url": "https://api.github.com/users/ashwath98/repos", "events_url": "https://api.github.com/users/ashwath98/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwath98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950865, "node_id": "MDU6TGFiZWw5NTU5NTA4NjU=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-29T14:16:28Z", "updated_at": "2020-04-29T15:43:11Z", "closed_at": "2020-04-29T15:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nthere seems to be no KeypointParams module in the library\r\nI was trying out the code from the example_keypoints notebook when I ran into this issue\r\n## CODE From notebook\r\n\r\nalbu.Compose(transformations, p=1, \r\n                        keypoint_params=albu.KeypointParams(format='xy'))(image=image, keypoints=landmarks)\r\n\r\n## Error that arises \r\nmodule 'albumentations' has no attribute 'KeypointParams'\r\n\r\n## Additional context\r\n\r\nI have also tried executing it individually using \r\nalbu.KeypointParams(format='xy')\r\nand I get the same error\r\n\r\nEnvironment :\r\nGoogle Colab\r\n\r\nInstallation : \r\nPIP\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/603", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/603/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/603/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/603", "id": 608414316, "node_id": "MDU6SXNzdWU2MDg0MTQzMTY=", "number": 603, "title": "Issue on cv2.cvtColor() when using Albumentation", "user": {"login": "Bai426", "id": 44070434, "node_id": "MDQ6VXNlcjQ0MDcwNDM0", "avatar_url": "https://avatars1.githubusercontent.com/u/44070434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bai426", "html_url": "https://github.com/Bai426", "followers_url": "https://api.github.com/users/Bai426/followers", "following_url": "https://api.github.com/users/Bai426/following{/other_user}", "gists_url": "https://api.github.com/users/Bai426/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bai426/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bai426/subscriptions", "organizations_url": "https://api.github.com/users/Bai426/orgs", "repos_url": "https://api.github.com/users/Bai426/repos", "events_url": "https://api.github.com/users/Bai426/events{/privacy}", "received_events_url": "https://api.github.com/users/Bai426/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T15:35:09Z", "updated_at": "2020-04-28T18:48:59Z", "closed_at": "2020-04-28T18:48:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nWhen I used Albumentation to augment my data, the function cv2.cvtColor is incorrect, so there is problem, I adjusted like this according to official guideline on how to use cv2.cvtColor.\r\n\r\nThe original one in line 39 of normalize.py:\r\n**cv2.cvtColor(img, cv2.COLOR_BGR2RGB, img)** \r\nThe revised one:\r\n**img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)**\r\nand it works after revising, my python version is 3.7.2.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/602", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/602/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/602/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/602", "id": 608339193, "node_id": "MDU6SXNzdWU2MDgzMzkxOTM=", "number": 602, "title": "Do not install opencv-python when there is already opencv-contrib-python", "user": {"login": "sluki", "id": 10222653, "node_id": "MDQ6VXNlcjEwMjIyNjUz", "avatar_url": "https://avatars0.githubusercontent.com/u/10222653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sluki", "html_url": "https://github.com/sluki", "followers_url": "https://api.github.com/users/sluki/followers", "following_url": "https://api.github.com/users/sluki/following{/other_user}", "gists_url": "https://api.github.com/users/sluki/gists{/gist_id}", "starred_url": "https://api.github.com/users/sluki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sluki/subscriptions", "organizations_url": "https://api.github.com/users/sluki/orgs", "repos_url": "https://api.github.com/users/sluki/repos", "events_url": "https://api.github.com/users/sluki/events{/privacy}", "received_events_url": "https://api.github.com/users/sluki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T13:55:25Z", "updated_at": "2020-04-29T16:29:22Z", "closed_at": "2020-04-29T16:29:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Even better would be to allow human to select which OpenCV wrapper human wants as an extra (e.g. albumentations[opencv-contrib-ptyhon-headless]==0.4.5) and use opencv-python-headless as a default. I already see that there is some trick to use opencv-python-headless only if there is no opencv-python, but there are more wrappers for OpenCV.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/599", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/599/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/599/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/599", "id": 606254194, "node_id": "MDU6SXNzdWU2MDYyNTQxOTQ=", "number": 599, "title": "Error in export GaussNoise(): AttributeError: 'GaussNoise' object has no attribute 'var_limit'", "user": {"login": "Hekrdla", "id": 64261281, "node_id": "MDQ6VXNlcjY0MjYxMjgx", "avatar_url": "https://avatars3.githubusercontent.com/u/64261281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hekrdla", "html_url": "https://github.com/Hekrdla", "followers_url": "https://api.github.com/users/Hekrdla/followers", "following_url": "https://api.github.com/users/Hekrdla/following{/other_user}", "gists_url": "https://api.github.com/users/Hekrdla/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hekrdla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hekrdla/subscriptions", "organizations_url": "https://api.github.com/users/Hekrdla/orgs", "repos_url": "https://api.github.com/users/Hekrdla/repos", "events_url": "https://api.github.com/users/Hekrdla/events{/privacy}", "received_events_url": "https://api.github.com/users/Hekrdla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950857, "node_id": "MDU6TGFiZWw5NTU5NTA4NTc=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2028984597, "node_id": "MDU6TGFiZWwyMDI4OTg0NTk3", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/resolved", "name": "resolved", "color": "a4fcce", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-24T11:47:15Z", "updated_at": "2020-05-01T10:34:52Z", "closed_at": "2020-05-01T10:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nIt seems that there is a problem in export of GaussNoise().\r\n## To Reproduce\r\nThis is a minimal example:\r\n\r\nimport albumentations as alb\r\ntrans = alb.GaussNoise()\r\npath = '/tmp/trans.json'\r\nalb.save(trans, path)\r\nloaded_trans = alb.load(path)\r\nloaded_trans\r\n\r\nwith error: \r\nAttributeError: 'GaussNoise' object has no attribute 'var_limit'\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1.\r\n1.\r\n1.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.4.5\r\n - Python version (e.g., 3.7): 3.7.7\r\n - OS (e.g., Linux): linux\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/598", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/598/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/598/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/598", "id": 606007883, "node_id": "MDU6SXNzdWU2MDYwMDc4ODM=", "number": 598, "title": "rotation augmentations apply method uses angle=0 and not a random angle within provided limit", "user": {"login": "AbdullahAly", "id": 17130920, "node_id": "MDQ6VXNlcjE3MTMwOTIw", "avatar_url": "https://avatars3.githubusercontent.com/u/17130920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdullahAly", "html_url": "https://github.com/AbdullahAly", "followers_url": "https://api.github.com/users/AbdullahAly/followers", "following_url": "https://api.github.com/users/AbdullahAly/following{/other_user}", "gists_url": "https://api.github.com/users/AbdullahAly/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdullahAly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdullahAly/subscriptions", "organizations_url": "https://api.github.com/users/AbdullahAly/orgs", "repos_url": "https://api.github.com/users/AbdullahAly/repos", "events_url": "https://api.github.com/users/AbdullahAly/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdullahAly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950864, "node_id": "MDU6TGFiZWw5NTU5NTA4NjQ=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/invalid", "name": "invalid", "color": "e4e669", "default": true, "description": "This doesn't seem right"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-24T03:15:09Z", "updated_at": "2020-04-24T12:43:23Z", "closed_at": "2020-04-24T12:42:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe apply method for `albumentations.augmentations.transforms.Rotate` has an `angle` parameter that has a default of 0. This is in contrast to the `limit` initialization parameter. Using the apply method without supplying an angle will return the original method.\r\n\r\n## To Reproduce\r\n\r\nCreate the transform object. Apply the transformation to an image using the .apply method of the transform object without supplying the angle parameter. The returned image is just the original image.\r\n\r\n```\r\nimport nibabel as nib\r\ntransformation = albumentations.augmentations.transforms.Rotate(limit=180, interpolation=2, border_mode=1, p=0.5)\r\nnib_file = nib.load('path/to/image/img19.nii.gz')\r\nimg = nib_file.get_fdata()\r\naffine = nib_file.affine\r\n\r\nnew_img = transformation.apply(img)\r\nnib.save(nib.Nifti1Image(new_img.astype('float64'), affine), 'path/to/image/test_transform.nii.gz')\r\n```\r\n\r\n## Expected behavior\r\nI would expect that the .apply would rotate the image by a random angle that is within the limit provided during initialization instead the .apply method has angle=0 as a default which would mean that the user has to supply the random angle (which is not intuitive in the context of the documentation and initialization parameters);\r\n\r\n## Environment\r\n\r\n - Albumentations version: 0.4.5\r\n - Python version: 3.7.4\r\n - Linux\r\n - pip install albumentations", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/595", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/595/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/595/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/595", "id": 603310981, "node_id": "MDU6SXNzdWU2MDMzMTA5ODE=", "number": 595, "title": "Resize - parameters per target", "user": {"login": "millerjv", "id": 313922, "node_id": "MDQ6VXNlcjMxMzkyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/313922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/millerjv", "html_url": "https://github.com/millerjv", "followers_url": "https://api.github.com/users/millerjv/followers", "following_url": "https://api.github.com/users/millerjv/following{/other_user}", "gists_url": "https://api.github.com/users/millerjv/gists{/gist_id}", "starred_url": "https://api.github.com/users/millerjv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/millerjv/subscriptions", "organizations_url": "https://api.github.com/users/millerjv/orgs", "repos_url": "https://api.github.com/users/millerjv/repos", "events_url": "https://api.github.com/users/millerjv/events{/privacy}", "received_events_url": "https://api.github.com/users/millerjv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T15:07:13Z", "updated_at": "2020-04-20T15:17:56Z", "closed_at": "2020-04-20T15:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to specify either \r\n\r\n1. Which targets are to be transformed?\r\n2. Different parameters for each target?\r\n\r\nSpecific to the Resize transform (not a random transformation), I have a use case where my image and masks each need to be resized but they need to be resized to different sizes.  Is this possible? Or do I need to write my own transform?\r\n\r\nFeatures like this would allow me to use Albumentations for many data prep steps, not just for generating augmented data.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/593", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/593/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/593/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/593", "id": 603120048, "node_id": "MDU6SXNzdWU2MDMxMjAwNDg=", "number": 593, "title": "Modify Resize after Compose", "user": {"login": "tienthegainz", "id": 34891363, "node_id": "MDQ6VXNlcjM0ODkxMzYz", "avatar_url": "https://avatars3.githubusercontent.com/u/34891363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tienthegainz", "html_url": "https://github.com/tienthegainz", "followers_url": "https://api.github.com/users/tienthegainz/followers", "following_url": "https://api.github.com/users/tienthegainz/following{/other_user}", "gists_url": "https://api.github.com/users/tienthegainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tienthegainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tienthegainz/subscriptions", "organizations_url": "https://api.github.com/users/tienthegainz/orgs", "repos_url": "https://api.github.com/users/tienthegainz/repos", "events_url": "https://api.github.com/users/tienthegainz/events{/privacy}", "received_events_url": "https://api.github.com/users/tienthegainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T10:17:57Z", "updated_at": "2020-04-20T11:21:06Z", "closed_at": "2020-04-20T11:20:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I want to do multi-size training for object detection task with albumentations.\r\nFor example:\r\n```\r\ntfms = Compose([Resize(height=512, width=512), ToTensorV2()], bbox_params=BboxParams(format='pascal_voc', label_fields=['category_id']))\r\n```\r\nIs there any way to change `height` and `width` in `Resize` after calling `Compose`?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/592", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/592/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/592/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/592", "id": 603039031, "node_id": "MDU6SXNzdWU2MDMwMzkwMzE=", "number": 592, "title": "GridDistortion artifacts at left and bottom margins", "user": {"login": "stepelu", "id": 6617696, "node_id": "MDQ6VXNlcjY2MTc2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6617696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepelu", "html_url": "https://github.com/stepelu", "followers_url": "https://api.github.com/users/stepelu/followers", "following_url": "https://api.github.com/users/stepelu/following{/other_user}", "gists_url": "https://api.github.com/users/stepelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepelu/subscriptions", "organizations_url": "https://api.github.com/users/stepelu/orgs", "repos_url": "https://api.github.com/users/stepelu/repos", "events_url": "https://api.github.com/users/stepelu/events{/privacy}", "received_events_url": "https://api.github.com/users/stepelu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950865, "node_id": "MDU6TGFiZWw5NTU5NTA4NjU=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-20T08:20:00Z", "updated_at": "2020-04-20T16:52:55Z", "closed_at": "2020-04-20T16:52:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `GridDistortion` transformation results in artifacts at left and bottom margins.\r\nSee example (watch carefully and notice that this happens also at the bottom of the image, where there is no padding):\r\n<img width=\"565\" alt=\"Screen Shot 2020-04-20 at 17 15 35\" src=\"https://user-images.githubusercontent.com/6617696/79729575-9fbc3c00-832a-11ea-984f-bba468fd4c08.png\">\r\nTested with albumentations head.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/589", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/589/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/589/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/589", "id": 597687694, "node_id": "MDU6SXNzdWU1OTc2ODc2OTQ=", "number": 589, "title": "ColorJitter Equivalent", "user": {"login": "kailasdayanandan", "id": 12158374, "node_id": "MDQ6VXNlcjEyMTU4Mzc0", "avatar_url": "https://avatars3.githubusercontent.com/u/12158374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kailasdayanandan", "html_url": "https://github.com/kailasdayanandan", "followers_url": "https://api.github.com/users/kailasdayanandan/followers", "following_url": "https://api.github.com/users/kailasdayanandan/following{/other_user}", "gists_url": "https://api.github.com/users/kailasdayanandan/gists{/gist_id}", "starred_url": "https://api.github.com/users/kailasdayanandan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kailasdayanandan/subscriptions", "organizations_url": "https://api.github.com/users/kailasdayanandan/orgs", "repos_url": "https://api.github.com/users/kailasdayanandan/repos", "events_url": "https://api.github.com/users/kailasdayanandan/events{/privacy}", "received_events_url": "https://api.github.com/users/kailasdayanandan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-10T04:27:27Z", "updated_at": "2020-04-15T01:22:50Z", "closed_at": "2020-04-10T04:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThere is a transform in ColorJitter in torchvision.transforms. Can you add an equivalent. \r\nOr is there an equivalent way to reproduce the same.\r\n\r\ntransforms.ColorJitter(0.3, 0.3, 0.3)\r\n\r\nBTW Having transform of same name can help in easy migration to Albumentations from PyTorch.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/588", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/588/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/588/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/588", "id": 596556375, "node_id": "MDU6SXNzdWU1OTY1NTYzNzU=", "number": 588, "title": "opencv-python-headless", "user": {"login": "Bryce1010", "id": 30361513, "node_id": "MDQ6VXNlcjMwMzYxNTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/30361513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryce1010", "html_url": "https://github.com/Bryce1010", "followers_url": "https://api.github.com/users/Bryce1010/followers", "following_url": "https://api.github.com/users/Bryce1010/following{/other_user}", "gists_url": "https://api.github.com/users/Bryce1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryce1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryce1010/subscriptions", "organizations_url": "https://api.github.com/users/Bryce1010/orgs", "repos_url": "https://api.github.com/users/Bryce1010/repos", "events_url": "https://api.github.com/users/Bryce1010/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryce1010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T12:55:32Z", "updated_at": "2020-04-19T12:10:55Z", "closed_at": "2020-04-19T12:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nwhen I setup the albumentations via pip: \r\n```python\r\npip install albumentations\r\n```\r\nThe error occurs:  \r\n```sh\r\nCollecting albumentations                                                                                                                                                                                           \r\n  Using cached albumentations-0.4.5.tar.gz (116 kB)                                                                                                                                                                 \r\nRequirement already satisfied: numpy>=1.11.1 in /opt/anaconda/envs/wmlce/lib/python3.7/site-packages (from albumentations) (1.17.4)                                                                                 \r\nRequirement already satisfied: scipy in /opt/anaconda/envs/wmlce/lib/python3.7/site-packages (from albumentations) (1.3.1)                                                                                          \r\nCollecting imgaug<0.2.7,>=0.2.5                                                                                                                                                                                     \r\n  Using cached imgaug-0.2.6.tar.gz (631 kB)                                                                                                                                                                         \r\nRequirement already satisfied: PyYAML in /opt/anaconda/envs/wmlce/lib/python3.7/site-packages (from albumentations) (5.1.2)                                                                                         \r\nERROR: Could not find a version that satisfies the requirement opencv-python-headless>=4.1.1 (from albumentations) (from versions: none)                                                                            \r\nERROR: No matching distribution found for opencv-python-headless>=4.1.1 (from albumentations)  \r\n```\r\n\r\nCurrently, I can install opencv-python 3.4.8, but I don't get what's the meaning of this error.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/587", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/587/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/587/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/587/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/587", "id": 596448307, "node_id": "MDU6SXNzdWU1OTY0NDgzMDc=", "number": 587, "title": "Feature request : mosaic augmentation", "user": {"login": "pfeatherstone", "id": 45853521, "node_id": "MDQ6VXNlcjQ1ODUzNTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/45853521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfeatherstone", "html_url": "https://github.com/pfeatherstone", "followers_url": "https://api.github.com/users/pfeatherstone/followers", "following_url": "https://api.github.com/users/pfeatherstone/following{/other_user}", "gists_url": "https://api.github.com/users/pfeatherstone/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfeatherstone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfeatherstone/subscriptions", "organizations_url": "https://api.github.com/users/pfeatherstone/orgs", "repos_url": "https://api.github.com/users/pfeatherstone/repos", "events_url": "https://api.github.com/users/pfeatherstone/events{/privacy}", "received_events_url": "https://api.github.com/users/pfeatherstone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950867, "node_id": "MDU6TGFiZWw5NTU5NTA4Njc=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-08T09:45:13Z", "updated_at": "2020-04-26T09:23:49Z", "closed_at": "2020-04-20T19:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature request : mosaic augmenter.\r\nFor example, the mosaic augmenter could take 4 images say, and transform them into 4 mixed mosaics. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/586", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/586/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/586/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/586", "id": 596422426, "node_id": "MDU6SXNzdWU1OTY0MjI0MjY=", "number": 586, "title": "The explanation of probabilities of OneOf is confusing.", "user": {"login": "WaterKnight1998", "id": 41203448, "node_id": "MDQ6VXNlcjQxMjAzNDQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/41203448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaterKnight1998", "html_url": "https://github.com/WaterKnight1998", "followers_url": "https://api.github.com/users/WaterKnight1998/followers", "following_url": "https://api.github.com/users/WaterKnight1998/following{/other_user}", "gists_url": "https://api.github.com/users/WaterKnight1998/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaterKnight1998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaterKnight1998/subscriptions", "organizations_url": "https://api.github.com/users/WaterKnight1998/orgs", "repos_url": "https://api.github.com/users/WaterKnight1998/repos", "events_url": "https://api.github.com/users/WaterKnight1998/events{/privacy}", "received_events_url": "https://api.github.com/users/WaterKnight1998/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T09:01:59Z", "updated_at": "2020-04-08T09:34:09Z", "closed_at": "2020-04-08T09:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\n<!--\r\n\r\nhttps://albumentations.readthedocs.io/en/latest/probabilities.html\r\n\r\nOneOf Block\r\nTo decide which augmentation within OneOf block is used the following rule is applied.\r\n\r\nWe normalize all probabilities within a block to one. After this we pick augmentation based on the normalized probabilities. In the example above IAAAdditiveGaussianNoise has probability 0.9 and GaussNoise probability 0.6. After normalization, they become 0.6 and 0.4. Which means that we decide if we should use IAAAdditiveGaussianNoise with probability 0.6 and GaussNoise otherwise.\r\nIf we picked to consider GaussNoise the next step will be to decide if we should use it or not and p=0.6 will be used in this case.\r\n\r\n-->\r\n\r\n\r\nFor example:\r\n\r\n```\r\nOneOf([\r\n                                Flip(p=0.6),\r\n                                Rotate(p=0.2,limit=20),\r\n                                Transpose(p=0.2)\r\n                            ],p=0.5)\r\n```\r\n\r\nThe previous OneOf will be applied to 50% of images.\r\nFor selecting, which operation will be applied is based on the normalized probabilities.\r\n\r\nSi, in the previous example. For half of the images OneOf will be applied. If OneOf is applied 60% of the times will be a Flip, 20% will be a Rotate and 20% will be a Transpose.\r\n\r\nIs this correct?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/581", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/581/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/581/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/581", "id": 593613200, "node_id": "MDU6SXNzdWU1OTM2MTMyMDA=", "number": 581, "title": "Bug: BoundingBox is not rescaled with the image", "user": {"login": "rubengrab", "id": 10176319, "node_id": "MDQ6VXNlcjEwMTc2MzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/10176319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubengrab", "html_url": "https://github.com/rubengrab", "followers_url": "https://api.github.com/users/rubengrab/followers", "following_url": "https://api.github.com/users/rubengrab/following{/other_user}", "gists_url": "https://api.github.com/users/rubengrab/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubengrab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubengrab/subscriptions", "organizations_url": "https://api.github.com/users/rubengrab/orgs", "repos_url": "https://api.github.com/users/rubengrab/repos", "events_url": "https://api.github.com/users/rubengrab/events{/privacy}", "received_events_url": "https://api.github.com/users/rubengrab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T20:09:18Z", "updated_at": "2020-04-05T19:20:45Z", "closed_at": "2020-04-05T19:20:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/albumentations-team/albumentations/blob/4f35cda5adf73ab8ceacbba827400a1348cfb77f/albumentations/augmentations/transforms.py#L394-L395", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/577", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/577/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/577/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/577", "id": 590503449, "node_id": "MDU6SXNzdWU1OTA1MDM0NDk=", "number": 577, "title": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 GlassBlur() \u043a\u0440\u0438\u0432\u043e \u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043e.", "user": {"login": "MichaelMonashev", "id": 6323434, "node_id": "MDQ6VXNlcjYzMjM0MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6323434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelMonashev", "html_url": "https://github.com/MichaelMonashev", "followers_url": "https://api.github.com/users/MichaelMonashev/followers", "following_url": "https://api.github.com/users/MichaelMonashev/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelMonashev/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelMonashev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelMonashev/subscriptions", "organizations_url": "https://api.github.com/users/MichaelMonashev/orgs", "repos_url": "https://api.github.com/users/MichaelMonashev/repos", "events_url": "https://api.github.com/users/MichaelMonashev/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelMonashev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T18:34:48Z", "updated_at": "2020-04-08T07:28:07Z", "closed_at": "2020-04-08T07:28:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\n\u0423 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 GlassBlur() \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0435\u043e\u0442\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c. \u0422\u0430\u043a\u043e\u0435 \u043e\u0449\u0443\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e \u043f\u0430\u0440\u0441\u0435\u0440 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430 \u0443 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u0425\u043e\u0442\u044f \u043f\u043e \u0441\u0430\u043c\u043e\u043c\u0443 \u0442\u0435\u043a\u0441\u0442\u0443 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430 \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c, \u0447\u0442\u043e \u0442\u0430\u043c \u043d\u0435 \u0442\u0430\u043a. \u0425\u043e\u0442\u044f \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043c\u043e\u0442\u0440\u0435\u043b. \r\nhttps://albumentations.readthedocs.io/en/latest/api/augmentations.html#albumentations.augmentations.transforms.GlassBlur\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/564", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/564/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/564/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/564", "id": 581779731, "node_id": "MDU6SXNzdWU1ODE3Nzk3MzE=", "number": 564, "title": "Not able to import CoarseDropout", "user": {"login": "shan18", "id": 12576178, "node_id": "MDQ6VXNlcjEyNTc2MTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/12576178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shan18", "html_url": "https://github.com/shan18", "followers_url": "https://api.github.com/users/shan18/followers", "following_url": "https://api.github.com/users/shan18/following{/other_user}", "gists_url": "https://api.github.com/users/shan18/gists{/gist_id}", "starred_url": "https://api.github.com/users/shan18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shan18/subscriptions", "organizations_url": "https://api.github.com/users/shan18/orgs", "repos_url": "https://api.github.com/users/shan18/repos", "events_url": "https://api.github.com/users/shan18/events{/privacy}", "received_events_url": "https://api.github.com/users/shan18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-15T18:44:57Z", "updated_at": "2020-03-16T14:32:39Z", "closed_at": "2020-03-16T08:33:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe documentation specifies that the CoarseDropout method is present in the `albumentations.augmentations.transforms` module but no such method is found on importing.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. `from albumentations import CoarseDropout`\r\n1. `from albumentations.augmentations.transforms import CoarseDropout`\r\n1. `dir(albumentations)`, no CoarseDropout method is present in the list\r\n\r\nThe first two lines give the following error:\r\n```[python]\r\nImportError: cannot import name 'CoarseDropout'\r\n```\r\n\r\n## Expected behavior\r\n\r\nThere shouldn't have been any errors.\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.1.8\r\n - Python version (e.g., 3.7): 3.6.10\r\n - OS (e.g., Linux): Linux Ubuntu 18.04 64-bit\r\n - How you installed albumentations (`conda`, `pip`, source): Tried with both conda and pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/562", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/562/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/562/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/562", "id": 581150135, "node_id": "MDU6SXNzdWU1ODExNTAxMzU=", "number": 562, "title": "Facing issue while applying Albumentations 0.4.5 with CIFAR10", "user": {"login": "Sanket-DataEnt", "id": 25937235, "node_id": "MDQ6VXNlcjI1OTM3MjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/25937235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sanket-DataEnt", "html_url": "https://github.com/Sanket-DataEnt", "followers_url": "https://api.github.com/users/Sanket-DataEnt/followers", "following_url": "https://api.github.com/users/Sanket-DataEnt/following{/other_user}", "gists_url": "https://api.github.com/users/Sanket-DataEnt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sanket-DataEnt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sanket-DataEnt/subscriptions", "organizations_url": "https://api.github.com/users/Sanket-DataEnt/orgs", "repos_url": "https://api.github.com/users/Sanket-DataEnt/repos", "events_url": "https://api.github.com/users/Sanket-DataEnt/events{/privacy}", "received_events_url": "https://api.github.com/users/Sanket-DataEnt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-14T10:43:07Z", "updated_at": "2020-03-16T08:27:40Z", "closed_at": "2020-03-14T10:46:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have you started supporting integer datatype in albumentation 0.4.5. I am facing the issue while working on CIFAR 10 dataset.\r\n\r\ndata_transforms = albumentations.Compose([\r\nalbumentations.HorizontalFlip(),\r\nalbumentations.RandomBrightness(),\r\nalbumentations.ShiftScaleRotate(rotate_limit=15, scale_limit=0.10),\r\nalbumentations.JpegCompression(80),\r\nalbumentations.HueSaturationValue(),\r\nalbumentations.Normalize(),\r\nToTensor()\r\n])\r\n\r\ntrainset = torchvision.datasets.CIFAR10(root='./data', train=True,\r\ndownload=True, transform=data_transforms)\r\n\r\nSEED = 1\r\ncuda = torch.cuda.is_available()\r\nprint(\"CUDA Available?\", cuda)\r\ntorch.manual_seed(SEED)\r\n\r\nif cuda:\r\ntorch.cuda.manual_seed(SEED)\r\ndataloader_args = dict(shuffle=True, batch_size=128, num_workers=4, pin_memory=True) if cuda else dict(shuffle=True, batch_size=64\r\ntrain dataloader\r\n\r\ntrain_loader = torch.utils.data.DataLoader(trainset, **dataloader_args)\r\n\r\nclasses = ('plane', 'car', 'bird', 'cat',\r\n'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\r\nfunctions to show an image\r\n\r\ndef imshow(img):\r\nimg = img / 2 + 0.5 # unnormalize\r\nnpimg = img.numpy()\r\nplt.imshow(np.transpose(npimg, (1, 2, 0)))\r\nget some random training images\r\n\r\ndataiter = iter(train_loader)\r\nimages, labels = dataiter.next()\r\nshow images\r\n\r\nimshow(torchvision.utils.make_grid(images))\r\nprint labels\r\n\r\nprint(' '.join('%5s' % classes[labels[j]] for j in range(4)))\r\n-------------ERROR------------------\r\n\r\nTypeError Traceback (most recent call last)\r\n\r\nin ()\r\n7 # get some random training images\r\n8 dataiter = iter(train_loader)\r\n----> 9 images, labels = dataiter.next()\r\n10\r\n11 # show images\r\n\r\n3 frames\r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/_utils.py in reraise(self)\r\n392 # (https://bugs.python.org/issue2651), so we work around it.\r\n393 msg = KeyErrorMessage(msg)\r\n--> 394 raise self.exc_type(msg)\r\n\r\nTypeError: Caught TypeError in DataLoader worker process 0.\r\nOriginal Traceback (most recent call last):\r\nFile \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/_utils/worker.py\", line 178, in _worker_loop\r\ndata = fetcher.fetch(index)\r\nFile \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/_utils/fetch.py\", line 44, in fetch\r\ndata = [self.dataset[idx] for idx in possibly_batched_index]\r\nFile \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/_utils/fetch.py\", line 44, in\r\ndata = [self.dataset[idx] for idx in possibly_batched_index]\r\nFile \"/usr/local/lib/python3.6/dist-packages/torchvision/datasets/cifar.py\", line 125, in getitem\r\nimg = self.transform(img)\r\nTypeError: call() takes 1 positional argument but 2 were given", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/559", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/559/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/559/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/559", "id": 581128062, "node_id": "MDU6SXNzdWU1ODExMjgwNjI=", "number": 559, "title": "force_apply must have bool or int type", "user": {"login": "GadirajuSanjayvarma", "id": 60250577, "node_id": "MDQ6VXNlcjYwMjUwNTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/60250577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GadirajuSanjayvarma", "html_url": "https://github.com/GadirajuSanjayvarma", "followers_url": "https://api.github.com/users/GadirajuSanjayvarma/followers", "following_url": "https://api.github.com/users/GadirajuSanjayvarma/following{/other_user}", "gists_url": "https://api.github.com/users/GadirajuSanjayvarma/gists{/gist_id}", "starred_url": "https://api.github.com/users/GadirajuSanjayvarma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GadirajuSanjayvarma/subscriptions", "organizations_url": "https://api.github.com/users/GadirajuSanjayvarma/orgs", "repos_url": "https://api.github.com/users/GadirajuSanjayvarma/repos", "events_url": "https://api.github.com/users/GadirajuSanjayvarma/events{/privacy}", "received_events_url": "https://api.github.com/users/GadirajuSanjayvarma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-14T09:35:18Z", "updated_at": "2020-03-14T10:54:02Z", "closed_at": "2020-03-14T09:58:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to this albumentations.I used various transformations.When i try to iterate over my dataset i am having error like\r\nforce_apply must have bool or int type.\r\nWhen i try to print the value of force_apply it is of PIL format.\r\nThe transformations i apply are\r\ntrain_transforms = trans.train_transforms([\r\n                                    A.augmentations.transforms.Rotate(limit=(-15.0, 15.0),value=list(fillmeans)),\r\n                                  \r\n                                       A.augmentations.transforms.HorizontalFlip()\r\n                                       ], \r\n                                   A.augmentations.transforms.Cutout(num_holes=1,fill_value=channel_means)\r\n                                        ])\r\nPlz help me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/549", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/549/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/549/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/549", "id": 576905719, "node_id": "MDU6SXNzdWU1NzY5MDU3MTk=", "number": 549, "title": "HorizontalFlip and VerticalFlip inconsistent with multilabel masks", "user": {"login": "Geeks-Sid", "id": 20500704, "node_id": "MDQ6VXNlcjIwNTAwNzA0", "avatar_url": "https://avatars1.githubusercontent.com/u/20500704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geeks-Sid", "html_url": "https://github.com/Geeks-Sid", "followers_url": "https://api.github.com/users/Geeks-Sid/followers", "following_url": "https://api.github.com/users/Geeks-Sid/following{/other_user}", "gists_url": "https://api.github.com/users/Geeks-Sid/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geeks-Sid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geeks-Sid/subscriptions", "organizations_url": "https://api.github.com/users/Geeks-Sid/orgs", "repos_url": "https://api.github.com/users/Geeks-Sid/repos", "events_url": "https://api.github.com/users/Geeks-Sid/events{/privacy}", "received_events_url": "https://api.github.com/users/Geeks-Sid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-06T12:38:21Z", "updated_at": "2020-03-08T20:30:30Z", "closed_at": "2020-03-08T20:30:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nGiven a pair of image and its corresponding mask, the generated output for the augmented mask through augmentation is not the same as the image.(it is inconsistent) when HorizontalFlip() and VerticalFlip() are included in the augmentations.\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\nThe following snippet is a small dataloader that i usually use. Can't share code.\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n        self.aug = Compose([\r\n                            RandomBrightnessContrast(),\r\n                            HueSaturationValue(),\r\n                            RandomGamma(),\r\n                            GaussNoise(),\r\n                            GaussianBlur(),\r\n                            # HorizontalFlip(),\r\n                            # VerticalFlip(),\r\n                            ])\r\n    def __getitem__(self, patient_id):\r\n        image_path = os.path.join(self.df.iloc[patient_id, 0])\r\n        z = np.load(image_path)\r\n        image = z['patch']\r\n        gt_data = z['patch_gt']\r\n        # print(\"Pre : \", image.shape, gt_data.shape)\r\n        gt_data = gt_data.swapaxes(0, 2)\r\n        # print(\"Pre swapped: \", image.shape, gt_data.shape)\r\n        # gt_data = gt_data[:4, :, :]\r\n        if not self.valid:\r\n            augmented = self.aug(image=image, mask=gt_data)\r\n            image = augmented['image']\r\n            gt_data = augmented['mask']\r\n        image = (image/255).astype(np.float32)\r\n        # print(\"Post Augment :\", image.shape, gt_data.shape)\r\n        image = image.swapaxes(0, 2)\r\n        gt_data = gt_data.swapaxes(0, 2)\r\n        # print(\"Post Augment Swapped: \", image.shape, gt_data.shape)\r\n        image = torch.FloatTensor(image)\r\n        gt_data = torch.FloatTensor(gt_data)\r\n        #mask.shape = (5, 256, 256)\r\n        #image.shape = (256, 256, 3)\r\n        return image, gt_data\r\n\r\n\r\n\r\n## Expected behavior\r\nThe augmentation over the images for horizontal and vertical flip should be working fine for both the mask and the image, but for some reason, there are errors in mask augmentations during horizontal and vertical flips.\r\n\r\nImage shape : 256, 256, 3\r\nMask Shape : 5, 256, 256\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n - Albumentations version : 0.43.\r\n - Python version : 3.6\r\n - OS (e.g., Linux): Linux\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/539", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/539/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/539/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/539", "id": 568097559, "node_id": "MDU6SXNzdWU1NjgwOTc1NTk=", "number": 539, "title": "Failed to apply RandomResizedCrop or RandomSizedCrop for augmentation in segmentation task", "user": {"login": "ipScore", "id": 30183023, "node_id": "MDQ6VXNlcjMwMTgzMDIz", "avatar_url": "https://avatars2.githubusercontent.com/u/30183023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipScore", "html_url": "https://github.com/ipScore", "followers_url": "https://api.github.com/users/ipScore/followers", "following_url": "https://api.github.com/users/ipScore/following{/other_user}", "gists_url": "https://api.github.com/users/ipScore/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipScore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipScore/subscriptions", "organizations_url": "https://api.github.com/users/ipScore/orgs", "repos_url": "https://api.github.com/users/ipScore/repos", "events_url": "https://api.github.com/users/ipScore/events{/privacy}", "received_events_url": "https://api.github.com/users/ipScore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-20T07:12:32Z", "updated_at": "2020-02-20T08:41:50Z", "closed_at": "2020-02-20T08:41:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nEnvironment:\r\nCentos 7.6 \r\nPython 3.6.8\r\nopencv-python 4.2.0.32\r\ntorch  1.4.0\r\nalbumentations 0.4.3\r\n```\r\n\r\nHi, @Dipet Is there any suggested fix for this issue?\r\nWhen I apply RandomResizedCrop or RandomSizedCrop for image augmentation as the following:\r\n```\r\ndef augmentation(image, mask):\r\n\r\n    original_height, original_width = image.shape[0], image.shape[1]\r\n    augmented = Compose([\r\n        # RandomSizedCrop(min_max_height=(450, 501), height=original_height, width=original_width, p=1),\r\n        RandomResizedCrop(height=original_height, width=original_width, scale=(0.75, 0.95), p=1),])\r\n    tf_sample = augmented(image=image, mask=mask)\r\n\r\n    return tf_sample\r\n```\r\nIt raised out:\r\n\r\n```\r\nOriginal Traceback (most recent call last):\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/torch/utils/data/_utils/worker.py\", line 178, in _worker_loop\r\n    data = fetcher.fetch(index)\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/torch/utils/data/_utils/fetch.py\", line 44, in fetch\r\n    data = [self.dataset[idx] for idx in possibly_batched_index]\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/torch/utils/data/_utils/fetch.py\", line 44, in <listcomp>\r\n    data = [self.dataset[idx] for idx in possibly_batched_index]\r\n  File \"/gs/home/songkq/workspace/pyroom/DeepLabHPC/dataloader/dataloader_update.py\", line 49, in __getitem__\r\n    sample = self.augmentation(image=image, mask=mask)\r\n  File \"/gs/home/songkq/workspace/pyroom/DeepLabHPC/dataloader/transform.py\", line 62, in augmentation\r\n    tf_sample = augmented(image=image, mask=mask[0, :, :])\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/core/composition.py\", line 176, in __call__\r\n    data = t(force_apply=force_apply, **data)\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/core/transforms_interface.py\", line 87, in __call__\r\n    return self.apply_with_params(params, **kwargs)\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/core/transforms_interface.py\", line 100, in apply_with_params\r\n    res[key] = target_function(arg, **dict(params, **target_dependencies))\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/core/transforms_interface.py\", line 223, in apply_to_mask\r\n    return self.apply(img, **{k: cv2.INTER_NEAREST if k == \"interpolation\" else v for k, v in params.items()})\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/augmentations/transforms.py\", line 808, in apply\r\n    return F.resize(crop, self.height, self.width, interpolation)\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/augmentations/functional.py\", line 70, in wrapped_function\r\n    result = func(img, *args, **kwargs)\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/augmentations/functional.py\", line 200, in resize\r\n    return resize_fn(img)\r\n  File \"/gs/home/songkq/anaconda/envs/torchEnv/lib/python3.6/site-packages/albumentations/augmentations/functional.py\", line 180, in __process_fn\r\n    img = process_fn(img, **kwargs)\r\nTypeError: Expected Ptr<cv::UMat> for argument 'src'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/538", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/538/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/538/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/538", "id": 567609203, "node_id": "MDU6SXNzdWU1Njc2MDkyMDM=", "number": 538, "title": "Negative values in bounding boxes", "user": {"login": "i7p9h9", "id": 7444163, "node_id": "MDQ6VXNlcjc0NDQxNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7444163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/i7p9h9", "html_url": "https://github.com/i7p9h9", "followers_url": "https://api.github.com/users/i7p9h9/followers", "following_url": "https://api.github.com/users/i7p9h9/following{/other_user}", "gists_url": "https://api.github.com/users/i7p9h9/gists{/gist_id}", "starred_url": "https://api.github.com/users/i7p9h9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/i7p9h9/subscriptions", "organizations_url": "https://api.github.com/users/i7p9h9/orgs", "repos_url": "https://api.github.com/users/i7p9h9/repos", "events_url": "https://api.github.com/users/i7p9h9/events{/privacy}", "received_events_url": "https://api.github.com/users/i7p9h9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T14:29:36Z", "updated_at": "2020-02-19T14:46:07Z", "closed_at": "2020-02-19T14:46:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nNegative values \u200b\u200bfor bounding boxes can be obtained after \"h/v/-flipping\"\r\n\r\n## To Reproduce\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport albumentations as alb\r\n\r\n\r\nx = np.zeros((1080, 1920, 3), dtype=\"uint8\")\r\nxmin, xmax, ymin, ymax = 0, 200, 0, 200\r\nx[xmin:xmax, ymin:ymax, :] = 255\r\n\r\nannotations = {'image': x, 'bboxes': [(xmin, ymin, xmax, ymax)]}\r\nx_vf = alb.VerticalFlip(p=1)(**annotations)\r\nx_hf = alb.HorizontalFlip(p=1)(**annotations)\r\n```\r\n\r\n```\r\nplt.subplot(1, 2, 1)\r\nplt.imshow(x_vf[\"image\"])\r\nprint(\"bbox after vertical flip: {}\".format(x_vf[\"bboxes\"]))\r\n\r\nplt.subplot(1, 2, 2)\r\nplt.imshow(x_hf[\"image\"])\r\nprint(\"bbox after horizontal flip: {}\".format(x_hf[\"bboxes\"]))\r\n```\r\n\r\noutput:\r\n```\r\nbbox after vertical flip: [(0, -199, 200, 1)]\r\nbbox after horizontal flip: [(-199, 0, 1, 200)]\r\n```\r\n### But for normalized box it's work normal\r\n```\r\nx = np.zeros((1080, 1920, 3), dtype=\"uint8\")\r\nxmin, xmax, ymin, ymax = 0, 200, 0, 200\r\nx[xmin:xmax, ymin:ymax, :] = 255\r\n\r\nk_norm = np.array([1080, 1920, 1080, 1920])\r\nannotations = {'image': x, 'bboxes': np.asarray([[xmin, ymin, xmax, ymax]]) / k_norm}\r\nx_vf = alb.VerticalFlip(p=1)(**annotations)\r\nx_hf = alb.HorizontalFlip(p=1)(**annotations)\r\n```\r\n\r\n```\r\nplt.subplot(1, 2, 1)\r\nplt.imshow(x_vf[\"image\"])\r\nprint(\"bbox after vertical flip: {}\".format(np.array(x_vf[\"bboxes\"]) * k_norm))\r\n\r\nplt.subplot(1, 2, 2)\r\nplt.imshow(x_hf[\"image\"])\r\nprint(\"bbox after horizontal flip: {}\".format(np.array(x_hf[\"bboxes\"]) * k_norm))\r\n```\r\n\r\noutput:\r\n```\r\nbbox after vertical flip: [[   0. 1720.  200. 1920.]]\r\nbbox after horizontal flip: [[ 880.    0. 1080.  200.]]\r\n```\r\n\r\n## Expected behavior\r\nActually in this case [xmin, ymin, xmax, ymax] is equal to [xmin, ymin, w, h], i think output incorrect for both case\r\nthe result contain negative values, i think correct answer should be:\r\n```\r\nbbox after vertical flip: [(0, 1720, 200, 1920)]\r\nbbox after horizontal flip: [(880, 0, 1080, 200)]\r\n```\r\n\r\n## Environment\r\n\r\n - Albumentations version 0.4.3:\r\n - Python version 3.6:\r\n - OS Ubuntu 18.04\r\n - Install from pip\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/534", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/534/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/534/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/534", "id": 564199023, "node_id": "MDU6SXNzdWU1NjQxOTkwMjM=", "number": 534, "title": "Reason for making ReplayCompose not serializable?", "user": {"login": "jmerkow", "id": 5933681, "node_id": "MDQ6VXNlcjU5MzM2ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5933681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmerkow", "html_url": "https://github.com/jmerkow", "followers_url": "https://api.github.com/users/jmerkow/followers", "following_url": "https://api.github.com/users/jmerkow/following{/other_user}", "gists_url": "https://api.github.com/users/jmerkow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmerkow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmerkow/subscriptions", "organizations_url": "https://api.github.com/users/jmerkow/orgs", "repos_url": "https://api.github.com/users/jmerkow/repos", "events_url": "https://api.github.com/users/jmerkow/events{/privacy}", "received_events_url": "https://api.github.com/users/jmerkow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-12T18:54:50Z", "updated_at": "2020-05-19T21:29:54Z", "closed_at": "2020-05-19T21:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the reason that `ReplayCompose` specifically broke serialization?\r\nLooking at the code, I do not see any reason why the ability to replay would mean that serialization doesn't work. Given the fact that `ReplayCompose` is used in the exact same way as `Compose`, only it allows you to call `replay` rather than `__call__`, this doesn't make sense.\r\n\r\nConsider a (typical) example usage:\r\n```\r\nimages = [\r\n   cv2.imread('./images/image_1.jpg'), \r\n   cv2.imread('./images/image_2.jpg'), \r\n   cv2.imread('./images/image_3.jpg')\r\n] # as many images as you want\r\n\r\ntransform = A.ReplayCompose([\r\n    A.Resize(512, 512, always_apply=True),\r\n    A.RandomCrop(200, 200, always_apply=True),\r\n    A.OneOf([\r\n        A.RGBShift(), \r\n        A.HueSaturationValue()\r\n    ]),\r\n])\r\n\r\nreplay = None\r\naug_images = []\r\nfor image in images:\r\n    if replay is None:\r\n        a = transform(image=image)\r\n        replay = a.pop('replay')\r\n    else:\r\n       a = transform.replay(replay, image=image)\r\n    aug_images.append(a)\r\n```\r\n\r\n\r\n\r\nThe replay parameters aren't stored anywhere in `ReplayCompose` the only addition is that it adds the `'replay'` dictionary to the output, which is typically popped or ignored (it will mess with torch.utils.data.Dataloader collation).  Since the state is not stored on the object, there is no real difference with `ReplayCompose` and `Compose` from a serialization/de-serialization standpoint.\r\nIn fact, the only parameter missing is `save_key` which can easily be added.  I've been using this in my code and it all works fine. \r\nIt looks like the code to break serialization added [here](https://github.com/albumentations-team/albumentations/pull/350/commits/7febf9f9f33a70832a7c8033cb48a903c8bc4772), possibly with the intention of returning to it later?\r\n\r\nI was considering contributing the changes to make `ReplayCompose` serializable. However, since it was specifically prevented and given the low hurdle to make it serializable, I wanted to check why this was before moving forward.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/532", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/532/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/532/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/532", "id": 563676780, "node_id": "MDU6SXNzdWU1NjM2NzY3ODA=", "number": 532, "title": "Failed to serialize ImageCompression class with albumentations.core.serialization.save", "user": {"login": "ni4muraano", "id": 60785001, "node_id": "MDQ6VXNlcjYwNzg1MDAx", "avatar_url": "https://avatars1.githubusercontent.com/u/60785001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ni4muraano", "html_url": "https://github.com/ni4muraano", "followers_url": "https://api.github.com/users/ni4muraano/followers", "following_url": "https://api.github.com/users/ni4muraano/following{/other_user}", "gists_url": "https://api.github.com/users/ni4muraano/gists{/gist_id}", "starred_url": "https://api.github.com/users/ni4muraano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ni4muraano/subscriptions", "organizations_url": "https://api.github.com/users/ni4muraano/orgs", "repos_url": "https://api.github.com/users/ni4muraano/repos", "events_url": "https://api.github.com/users/ni4muraano/events{/privacy}", "received_events_url": "https://api.github.com/users/ni4muraano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T01:30:51Z", "updated_at": "2020-03-23T00:30:29Z", "closed_at": "2020-03-22T16:49:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Wrap ImageCompression class with Compose\r\n2. Save the compose in yaml format using albumentations.core.serialization.save\r\n3. An error happens\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\nTraceback (most recent call last):\r\n  File \"augmentation_yaml_creator.py\", line 31, in <module>\r\n    save(train_compose, '..' + os.sep + 'configs' + os.sep + 'train_augmentation.yaml', data_format='yaml')\r\n  File \"lib\\site-packages\\albumentations\\core\\serialization.py\", line 128, in save\r\n    dump_fn(transform_dict, f)\r\n  File \"lib\\site-packages\\yaml\\__init__.py\", line 306, in safe_dump\r\n    return dump_all([data], stream, Dumper=SafeDumper, **kwds)\r\n  File \"lib\\site-packages\\yaml\\__init__.py\", line 278, in dump_all\r\n    dumper.represent(data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 27, in represent\r\n    node = self.represent_data(data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 48, in represent_data\r\n    node = self.yaml_representers[data_types[0]](self, data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 207, in represent_dict\r\n    return self.represent_mapping('tag:yaml.org,2002:map', data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 118, in represent_mapping\r\n    node_value = self.represent_data(item_value)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 48, in represent_data\r\n    node = self.yaml_representers[data_types[0]](self, data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 207, in represent_dict\r\n    return self.represent_mapping('tag:yaml.org,2002:map', data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 118, in represent_mapping\r\n    node_value = self.represent_data(item_value)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 48, in represent_data\r\n    node = self.yaml_representers[data_types[0]](self, data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 199, in represent_list\r\n    return self.represent_sequence('tag:yaml.org,2002:seq', data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 92, in represent_sequence\r\n    node_item = self.represent_data(item)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 48, in represent_data\r\n    node = self.yaml_representers[data_types[0]](self, data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 207, in represent_dict\r\n    return self.represent_mapping('tag:yaml.org,2002:map', data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 118, in represent_mapping\r\n    node_value = self.represent_data(item_value)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 58, in represent_data\r\n    node = self.yaml_representers[None](self, data)\r\n  File \"lib\\site-packages\\yaml\\representer.py\", line 231, in represent_undefined\r\n    raise RepresenterError(\"cannot represent an object\", data)\r\nyaml.representer.RepresenterError: ('cannot represent an object', <ImageCompressionType.JPEG: 0>)\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nyaml file which contains augmentation infi is created.\r\nThis error does not happen if I use JPEGCompression instead of ImageCompression.\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.4.3\r\n - Python version (e.g., 3.7): 3.7\r\n - OS (e.g., Linux): Windows10\r\n - How you installed albumentations (`conda`, `pip`, source): conda\r\n\r\n## Code to reproduce the error\r\n```\r\nfrom albumentations import Compose\r\nfrom albumentations.core.serialization import save\r\nfrom albumentations.augmentations.transforms import ImageCompression\r\n\r\ntrain_compose = Compose([\r\n        ImageCompression(quality_lower=50, quality_upper=50, p=1.0),\r\n    ])\r\nsave(train_compose, 'test.yaml', data_format='yaml')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/529", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/529/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/529/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/529", "id": 561562548, "node_id": "MDU6SXNzdWU1NjE1NjI1NDg=", "number": 529, "title": "Update speed benchmark vs. imgaug 0.4", "user": {"login": "ogencoglu", "id": 8182738, "node_id": "MDQ6VXNlcjgxODI3Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8182738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogencoglu", "html_url": "https://github.com/ogencoglu", "followers_url": "https://api.github.com/users/ogencoglu/followers", "following_url": "https://api.github.com/users/ogencoglu/following{/other_user}", "gists_url": "https://api.github.com/users/ogencoglu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogencoglu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogencoglu/subscriptions", "organizations_url": "https://api.github.com/users/ogencoglu/orgs", "repos_url": "https://api.github.com/users/ogencoglu/repos", "events_url": "https://api.github.com/users/ogencoglu/events{/privacy}", "received_events_url": "https://api.github.com/users/ogencoglu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T10:49:43Z", "updated_at": "2020-03-08T05:00:34Z", "closed_at": "2020-03-08T05:00:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\nSpeed benchmarks need to be updated vs. _imgaug 0.4_\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/515", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/515/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/515/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/515", "id": 553422088, "node_id": "MDU6SXNzdWU1NTM0MjIwODg=", "number": 515, "title": "A CoarseDropout fails with rgb", "user": {"login": "korabelnikov", "id": 3808833, "node_id": "MDQ6VXNlcjM4MDg4MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3808833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korabelnikov", "html_url": "https://github.com/korabelnikov", "followers_url": "https://api.github.com/users/korabelnikov/followers", "following_url": "https://api.github.com/users/korabelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/korabelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/korabelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korabelnikov/subscriptions", "organizations_url": "https://api.github.com/users/korabelnikov/orgs", "repos_url": "https://api.github.com/users/korabelnikov/repos", "events_url": "https://api.github.com/users/korabelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/korabelnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-22T09:45:10Z", "updated_at": "2020-01-22T13:30:45Z", "closed_at": "2020-01-22T13:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Documentation says nothing about 1-channel input\r\n`    \"\"\"CoarseDropout of the rectangular regions in the image.\r\n\r\n    Args:\r\n        max_holes (int): Maximum number of regions to zero out.\r\n        max_height (int): Maximum height of the hole.\r\n        min_width (int): Maximum width of the hole.\r\n        min_holes (int): Minimum number of regions to zero out. If `None`,\r\n            `min_holes` is be set to `max_holes`. Default: `None`.\r\n        min_height (int): Minimum height of the hole. Default: None. If `None`,\r\n            `min_height` is set to `max_height`. Default: `None`.\r\n        min_width (int): Minimum width of the hole. If `None`, `min_height` is\r\n            set to `max_width`. Default: `None`.\r\n        fill_value (int, float, lisf of int, list of float): value for dropped pixels.\r\n\r\n    Targets:\r\n        image\r\n\r\n    Image types:\r\n        uint8, float32`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/513", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/513/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/513/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/513", "id": 549720019, "node_id": "MDU6SXNzdWU1NDk3MjAwMTk=", "number": 513, "title": "feature request: Grid Mask augmentation", "user": {"login": "n01z3", "id": 7601796, "node_id": "MDQ6VXNlcjc2MDE3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7601796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n01z3", "html_url": "https://github.com/n01z3", "followers_url": "https://api.github.com/users/n01z3/followers", "following_url": "https://api.github.com/users/n01z3/following{/other_user}", "gists_url": "https://api.github.com/users/n01z3/gists{/gist_id}", "starred_url": "https://api.github.com/users/n01z3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n01z3/subscriptions", "organizations_url": "https://api.github.com/users/n01z3/orgs", "repos_url": "https://api.github.com/users/n01z3/repos", "events_url": "https://api.github.com/users/n01z3/events{/privacy}", "received_events_url": "https://api.github.com/users/n01z3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950859, "node_id": "MDU6TGFiZWw5NTU5NTA4NTk=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T17:43:07Z", "updated_at": "2020-02-20T08:18:05Z", "closed_at": "2020-02-20T08:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Implement GridMask augmentation from paper \r\nhttps://arxiv.org/pdf/2001.04086.pdf", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/508", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/508/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/508/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/508", "id": 545773714, "node_id": "MDU6SXNzdWU1NDU3NzM3MTQ=", "number": 508, "title": "AttributeError: 'MpoImageFile' object has no attribute 'shape'", "user": {"login": "imazerty", "id": 35704478, "node_id": "MDQ6VXNlcjM1NzA0NDc4", "avatar_url": "https://avatars3.githubusercontent.com/u/35704478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imazerty", "html_url": "https://github.com/imazerty", "followers_url": "https://api.github.com/users/imazerty/followers", "following_url": "https://api.github.com/users/imazerty/following{/other_user}", "gists_url": "https://api.github.com/users/imazerty/gists{/gist_id}", "starred_url": "https://api.github.com/users/imazerty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imazerty/subscriptions", "organizations_url": "https://api.github.com/users/imazerty/orgs", "repos_url": "https://api.github.com/users/imazerty/repos", "events_url": "https://api.github.com/users/imazerty/events{/privacy}", "received_events_url": "https://api.github.com/users/imazerty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950867, "node_id": "MDU6TGFiZWw5NTU5NTA4Njc=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-06T15:05:45Z", "updated_at": "2020-03-17T17:41:33Z", "closed_at": "2020-01-06T15:30:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThis line triggers the error :\r\n\r\n**images, labels = next(iter(self.loader))**\r\ngrid = torchvision.utils.make_grid(images)\r\n\r\nI have a custom dataset class where I load each image (RGB) from an url :\r\n\r\n**image = Image.open(urllib.request.urlopen(URL))**\r\n\r\nand I apply some albumentations transforms:\r\n**image = image_transform(image=image)[\"image\"]**\r\nwhere image_transform is the custom transform I prepared.\r\nThe code works when I read an image for which I have a path using cv2.\r\nHowever, it doesn't work when I read an image from the url. \r\nNote that I verified that the urls aren't broken. \r\n\r\nHere's the traceback:\r\n\r\n<!--images, labels = next(iter(self.loader))\r\ngrid = torchvision.utils.make_grid(images)--!>\r\n`\r\n/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py in __next__(self)\r\n    344     def __next__(self):\r\n    345         index = self._next_index()  # may raise StopIteration\r\n--> 346         data = self._dataset_fetcher.fetch(index)  # may raise StopIteration\r\n    347         if self._pin_memory:\r\n    348             data = _utils.pin_memory.pin_memory(data)\r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/utils/data/_utils/fetch.py in fetch(self, possibly_batched_index)\r\n     42     def fetch(self, possibly_batched_index):\r\n     43         if self.auto_collation:\r\n---> 44             data = [self.dataset[idx] for idx in possibly_batched_index]\r\n     45         else:\r\n     46             data = self.dataset[possibly_batched_index]\r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/utils/data/_utils/fetch.py in <listcomp>(.0)\r\n     42     def fetch(self, possibly_batched_index):\r\n     43         if self.auto_collation:\r\n---> 44             data = [self.dataset[idx] for idx in possibly_batched_index]\r\n     45         else:\r\n     46             data = self.dataset[possibly_batched_index]\r\n\r\n/content/transform_dataset.py in __getitem__(self, idx)\r\n     49     labels = torch.from_numpy(item[2:].values.astype(\"float32\"))\r\n     50     #print(\"self.root,item,self.image_transform,self.transform,self.size\", self.root,item,self.image_transform,self.transform,self.size)\r\n---> 51     image = load_image(self.root,item.ID,item.URL,self.image_transform)\r\n     52     return image, labels\r\n     53 \r\n\r\n/content/transform_dataset.py in load_image(root, ID, URL, image_transform)\r\n     81     print(image.shape)\r\n     82     image = cv2.cvtColor(image,cv2.COLOR_BGR2RGB)\r\n---> 83   image = image_transform(image=image)[\"image\"]\r\n     84   return image\r\n\r\n/usr/local/lib/python3.6/dist-packages/albumentations/core/composition.py in __call__(self, **data)\r\n    169                                               convert_keypoints_to_albumentations, data)\r\n    170 \r\n--> 171             data = t(**data)\r\n    172 \r\n    173             if dual_start_end is not None and idx == dual_start_end[1]:\r\n\r\n/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py in __call__(self, **kwargs)\r\n     26         if (random.random() < self.p) or self.always_apply:\r\n     27             params = self.get_params()\r\n---> 28             params = self.update_params(params, **kwargs)\r\n     29             if self.targets_as_params:\r\n     30                 targets_as_params = {k: kwargs[k] for k in self.targets_as_params}\r\n\r\n/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py in update_params(self, params, **kwargs)\r\n     66         if hasattr(self, 'interpolation'):\r\n     67             params['interpolation'] = self.interpolation\r\n---> 68         params.update({'cols': kwargs['image'].shape[1], 'rows': kwargs['image'].shape[0]})\r\n     69         return params\r\n     70 \r\n\r\nAttributeError: 'MpoImageFile' object has no attribute 'shape'`\r\n\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8):\r\n - Python version (e.g., 3.7):\r\n - OS (e.g., Linux):\r\n-  Google colab\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/503", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/503/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/503/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/503", "id": 544122347, "node_id": "MDU6SXNzdWU1NDQxMjIzNDc=", "number": 503, "title": "bbox_params = {'label_fields': []} results in error", "user": {"login": "IlyaOvodov", "id": 34230114, "node_id": "MDQ6VXNlcjM0MjMwMTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/34230114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaOvodov", "html_url": "https://github.com/IlyaOvodov", "followers_url": "https://api.github.com/users/IlyaOvodov/followers", "following_url": "https://api.github.com/users/IlyaOvodov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaOvodov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaOvodov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaOvodov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaOvodov/orgs", "repos_url": "https://api.github.com/users/IlyaOvodov/repos", "events_url": "https://api.github.com/users/IlyaOvodov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaOvodov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-31T08:11:29Z", "updated_at": "2020-03-10T20:20:41Z", "closed_at": "2020-03-10T20:20:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nSetting `'label_fields'` to `[]` for `bbox_params` when creating `Compose` objects results in empty resulting `bbox` tuples after augmentationas are applied. The error appeared after v.0.3.1, for v.0.3.1 if worker correcly.\r\nThe problem is caused that `DataProcessor.data_length` is not initialized at `DataProcessor.add_label_fields_to_data` in this case and remains 0, but is used at `DataProcessor.remove_label_fields_from_data` to cut `data`.\r\nAlso I noted that using `DataProcessor.data_length` implies that all `data_fields` have the same data length. An opposite case is probably seldom but will result in error.\r\n\r\n## To Reproduce\r\n\r\n```code=python\r\nimport albumentations as A\r\nimport albumentations.augmentations.transforms as T\r\nimport numpy as np\r\n\r\naugs_list = [T.HorizontalFlip(p=1.)]\r\nalb = A.Compose(augs_list, bbox_params={'format': 'pascal_voc',\r\n        'label_fields': [] # if you comment out this line it will operate properly\r\n})\r\nimg = np.zeros((256,512,3), dtype = np.uint8)\r\nrects = [[131, 129, 173, 175, 15], [173, 115, 216, 177, 4],]\r\naug_res = alb(image=img, bboxes=rects)\r\nprint(aug_res['image'].shape, aug_res['bboxes'])\r\n->\r\n(256, 512, 3) [(), ()]\r\n```\r\n\r\n## Expected behavior\r\n\r\n`(256, 512, 3) [(339.0, 129.0, 381.0, 175.0, 15), (296.0, 115.0, 339.0, 177.0, 4)]` in the above example.\r\n\r\n## Environment\r\n - Albumentations version (master rev. c5807e )\r\n - Python version (e.g., 3.6)\r\n - OS (Windows)\r\n - How you installed albumentations (git clone)\r\n\r\n## Additional information\r\nI'll fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/502", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/502/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/502/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/502", "id": 543131884, "node_id": "MDU6SXNzdWU1NDMxMzE4ODQ=", "number": 502, "title": " ImportError: cannot import name 'BboxParams' (in albumentations/notebooks/example_bboxes.ipynb)", "user": {"login": "kitarikes", "id": 52794486, "node_id": "MDQ6VXNlcjUyNzk0NDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/52794486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitarikes", "html_url": "https://github.com/kitarikes", "followers_url": "https://api.github.com/users/kitarikes/followers", "following_url": "https://api.github.com/users/kitarikes/following{/other_user}", "gists_url": "https://api.github.com/users/kitarikes/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitarikes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitarikes/subscriptions", "organizations_url": "https://api.github.com/users/kitarikes/orgs", "repos_url": "https://api.github.com/users/kitarikes/repos", "events_url": "https://api.github.com/users/kitarikes/events{/privacy}", "received_events_url": "https://api.github.com/users/kitarikes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-28T11:45:53Z", "updated_at": "2020-05-19T01:44:41Z", "closed_at": "2019-12-30T06:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. !pip install -U git+https://github.com/albu/albumentations on google colab\r\n2. from albumentations import BboxParams (like 1st cell in albumentations/notebooks/example_bboxes.ipynb)\r\n3. error occured :(  but, run except BboxParams module\r\n```\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-5-374b6504bebe> in <module>()\r\n----> 1 from albumentations import BboxParams\r\n\r\nImportError: cannot import name 'BboxParams'\r\n\r\nNOTE: If your import is failing due to a missing package, you can\r\nmanually install dependencies using either !pip or !apt.\r\n\r\nTo view examples of installing some common dependencies, click the\r\n\"Open Examples\" button below.\r\n```\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n - Albumentations version is latest\r\n - on Google colab\r\n - How you installed albumentations ( `pip`, source): !pip install -U git+https://github.com/albu/albumentations\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/501", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/501/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/501/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/501", "id": 542317092, "node_id": "MDU6SXNzdWU1NDIzMTcwOTI=", "number": 501, "title": "Add AdditiveNoise", "user": {"login": "Dipet", "id": 7512250, "node_id": "MDQ6VXNlcjc1MTIyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7512250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dipet", "html_url": "https://github.com/Dipet", "followers_url": "https://api.github.com/users/Dipet/followers", "following_url": "https://api.github.com/users/Dipet/following{/other_user}", "gists_url": "https://api.github.com/users/Dipet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dipet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dipet/subscriptions", "organizations_url": "https://api.github.com/users/Dipet/orgs", "repos_url": "https://api.github.com/users/Dipet/repos", "events_url": "https://api.github.com/users/Dipet/events{/privacy}", "received_events_url": "https://api.github.com/users/Dipet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950859, "node_id": "MDU6TGFiZWw5NTU5NTA4NTk=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-25T10:34:33Z", "updated_at": "2020-03-26T11:53:14Z", "closed_at": "2020-03-26T11:14:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "~~1. Add `AdditiveNoise` like `MultiplicativeNoise`.~~\r\n2. Add warning message for `shift_hsv`: `Do not use shift_hsv for grayscale image. Use AdditiveNoise with argument elementwise=False.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/486", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/486/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/486/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/486", "id": 532438940, "node_id": "MDU6SXNzdWU1MzI0Mzg5NDA=", "number": 486, "title": "How resize with adaptive h/w ration", "user": {"login": "cswwp", "id": 11901683, "node_id": "MDQ6VXNlcjExOTAxNjgz", "avatar_url": "https://avatars0.githubusercontent.com/u/11901683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cswwp", "html_url": "https://github.com/cswwp", "followers_url": "https://api.github.com/users/cswwp/followers", "following_url": "https://api.github.com/users/cswwp/following{/other_user}", "gists_url": "https://api.github.com/users/cswwp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cswwp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cswwp/subscriptions", "organizations_url": "https://api.github.com/users/cswwp/orgs", "repos_url": "https://api.github.com/users/cswwp/repos", "events_url": "https://api.github.com/users/cswwp/events{/privacy}", "received_events_url": "https://api.github.com/users/cswwp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-04T04:15:01Z", "updated_at": "2019-12-04T06:54:11Z", "closed_at": "2019-12-04T06:54:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "How resize with adaptive h/w ratio, just give height or width, the ALBU auto calculate the width or height with h/w ratio", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/484", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/484/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/484/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/484", "id": 531295007, "node_id": "MDU6SXNzdWU1MzEyOTUwMDc=", "number": 484, "title": "Order of Execution", "user": {"login": "MentalGear", "id": 2837147, "node_id": "MDQ6VXNlcjI4MzcxNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2837147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MentalGear", "html_url": "https://github.com/MentalGear", "followers_url": "https://api.github.com/users/MentalGear/followers", "following_url": "https://api.github.com/users/MentalGear/following{/other_user}", "gists_url": "https://api.github.com/users/MentalGear/gists{/gist_id}", "starred_url": "https://api.github.com/users/MentalGear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MentalGear/subscriptions", "organizations_url": "https://api.github.com/users/MentalGear/orgs", "repos_url": "https://api.github.com/users/MentalGear/repos", "events_url": "https://api.github.com/users/MentalGear/events{/privacy}", "received_events_url": "https://api.github.com/users/MentalGear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-02T16:58:29Z", "updated_at": "2019-12-03T10:15:30Z", "closed_at": "2019-12-03T10:15:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\nIs the order of execution for augmentations sequentially as provided by filter order, or is it applied at random ?\r\n\r\nExample:\r\n```\r\nfilters = [\r\n\r\n           PadIfNeeded(\r\n                min_height=biggestSide,\r\n                min_width=biggestSide,\r\n                border_mode=0,\r\n                value=trimmedImage.getpixel( (0,0) ),\r\n                always_apply=True,\r\n                p=1.0),\r\n\r\n            RandomShadow( p=0.5, shadow_roi=(0, 0, 1, 1), num_shadows_lower=1, num_shadows_upper=2, shadow_dimension=random.randint(1,10) ),\r\n\r\n\r\n          ]\r\n\r\naugment = Compose ( filters )\r\n\r\n```\r\nWill this always apply the padding before the shadow overlay, or can it also happen that the shadow is applied before padding is done, resulting in an augmentation with white edges?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/481", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/481/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/481/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/481", "id": 530623842, "node_id": "MDU6SXNzdWU1MzA2MjM4NDI=", "number": 481, "title": "stacked images augmentation (4,256,256,3)", "user": {"login": "ninjakx", "id": 29797787, "node_id": "MDQ6VXNlcjI5Nzk3Nzg3", "avatar_url": "https://avatars2.githubusercontent.com/u/29797787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninjakx", "html_url": "https://github.com/ninjakx", "followers_url": "https://api.github.com/users/ninjakx/followers", "following_url": "https://api.github.com/users/ninjakx/following{/other_user}", "gists_url": "https://api.github.com/users/ninjakx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninjakx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninjakx/subscriptions", "organizations_url": "https://api.github.com/users/ninjakx/orgs", "repos_url": "https://api.github.com/users/ninjakx/repos", "events_url": "https://api.github.com/users/ninjakx/events{/privacy}", "received_events_url": "https://api.github.com/users/ninjakx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T20:03:51Z", "updated_at": "2019-12-01T08:32:37Z", "closed_at": "2019-12-01T07:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have stacked 4 brain MRI t1, t1c, t2, flair together to create (2,256,256,3)\r\nHow to perform augmentation? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/467", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/467/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/467/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/467", "id": 520698013, "node_id": "MDU6SXNzdWU1MjA2OTgwMTM=", "number": 467, "title": "Type Error when Transpose with keypoints", "user": {"login": "super233", "id": 35358984, "node_id": "MDQ6VXNlcjM1MzU4OTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/35358984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/super233", "html_url": "https://github.com/super233", "followers_url": "https://api.github.com/users/super233/followers", "following_url": "https://api.github.com/users/super233/following{/other_user}", "gists_url": "https://api.github.com/users/super233/gists{/gist_id}", "starred_url": "https://api.github.com/users/super233/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/super233/subscriptions", "organizations_url": "https://api.github.com/users/super233/orgs", "repos_url": "https://api.github.com/users/super233/repos", "events_url": "https://api.github.com/users/super233/events{/privacy}", "received_events_url": "https://api.github.com/users/super233/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-11T01:55:26Z", "updated_at": "2019-11-11T07:29:53Z", "closed_at": "2019-11-11T07:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "&emsp;&emsp;When Transpose with keypoints, I encountered `TypeError: can only concatenate tuple (not \"list\") to tuple`, but the keypoints have right input format `[(x1, y1), (x2,y2), ...]` which is the same with the format in  [example_keypoints.ipynb](https://github.com/albu/albumentations/blob/master/notebooks/example_keypoints.ipynb).\r\n\r\n&emsp;&emsp;The following codes in `albumentations\\core\\transforms_interface.py\"` cause this error:\r\n```python\r\ndef apply_to_keypoints(self, keypoints, **params): \r\n    keypoints = [list(keypoint) for keypoint in keypoints]\r\n    return [self.apply_to_keypoint(keypoint[:4], **params) + keypoint[4:] for keypoint in keypoints]\r\n```\r\n&emsp;&emsp;Obviously, the code `keypoints = [list(keypoint) for keypoint in keypoints]` may be the key of the error. Can you please give some advice how to avoid such error? \r\n\r\n\r\n&emsp;&emsp;The complete error report is as following: \r\n```\r\nFile \"F:/Workspace/Python Workspace/Pycharm Workspace/Test/test.py\", line 25, in <module>\r\n    augmented = aug(image=image, keypoints=keypoints)\r\n  File \"F:\\Anaconda3\\lib\\site-packages\\albumentations\\core\\composition.py\", line 176, in __call__\r\n    data = t(force_apply=force_apply, **data)\r\n  File \"F:\\Anaconda3\\lib\\site-packages\\albumentations\\core\\transforms_interface.py\", line 87, in __call__\r\n    return self.apply_with_params(params, **kwargs)\r\n  File \"F:\\Anaconda3\\lib\\site-packages\\albumentations\\core\\transforms_interface.py\", line 100, in apply_with_params\r\n    res[key] = target_function(arg, **dict(params, **target_dependencies))\r\n  File \"F:\\Anaconda3\\lib\\site-packages\\albumentations\\core\\transforms_interface.py\", line 222, in apply_to_keypoints\r\n    return [self.apply_to_keypoint(keypoint[:4], **params) + keypoint[4:] for keypoint in keypoints]\r\n  File \"F:\\Anaconda3\\lib\\site-packages\\albumentations\\core\\transforms_interface.py\", line 222, in <listcomp>\r\n    return [self.apply_to_keypoint(keypoint[:4], **params) + keypoint[4:] for keypoint in keypoints]\r\nTypeError: can only concatenate tuple (not \"list\") to tuple\r\n```\r\n\r\nEnviroment:\r\n- Albumentations version (e.g., 0.1.8): 0.4.1\r\n- Python version (e.g., 3.7): 3.6.5\r\n- OS (e.g., Linux): Windows\r\n- How you installed albumentations (`conda`, `pip`, source): pip", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/459", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/459/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/459/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/459", "id": 516057513, "node_id": "MDU6SXNzdWU1MTYwNTc1MTM=", "number": 459, "title": "ValueError: Expected x_max for bbox (0.94375, 0.5775173611111111, 1.003125, 0.6372395833333333, 0) to be in the range [0.0, 1.0], got 1.003125.", "user": {"login": "adelkaiarullin", "id": 38398697, "node_id": "MDQ6VXNlcjM4Mzk4Njk3", "avatar_url": "https://avatars2.githubusercontent.com/u/38398697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adelkaiarullin", "html_url": "https://github.com/adelkaiarullin", "followers_url": "https://api.github.com/users/adelkaiarullin/followers", "following_url": "https://api.github.com/users/adelkaiarullin/following{/other_user}", "gists_url": "https://api.github.com/users/adelkaiarullin/gists{/gist_id}", "starred_url": "https://api.github.com/users/adelkaiarullin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adelkaiarullin/subscriptions", "organizations_url": "https://api.github.com/users/adelkaiarullin/orgs", "repos_url": "https://api.github.com/users/adelkaiarullin/repos", "events_url": "https://api.github.com/users/adelkaiarullin/events{/privacy}", "received_events_url": "https://api.github.com/users/adelkaiarullin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-01T11:26:31Z", "updated_at": "2019-11-05T10:55:35Z", "closed_at": "2019-11-05T10:55:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nI tried to use any of transforms like VerticalFlip, RandomSizedBBoxSafeCrop and others box coordinate transformations but always i got the error \"Expected x_max for bbox (0.9515625, 0.5316840277777778, 1.003125, 0.6955729166666667, 0) to be in the range [0.0, 1.0], got 1.003125\". \r\nif i replace   lines x_min, x_max = x_min / cols, x_max / cols,  y_min, y_max = y_min / rows, y_max / rows   in bbox_utils.py in normalize_bbox method by   x_min, x_max = min(x_min / cols, 1.0), min(x_max / cols, 1.0),  y_min, y_max = min(y_min / rows, 1.0), min(y_max / rows, 1.0) . it works correctly.\r\n               \r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n1.    transforms = [\r\n    VerticalFlip(),\r\n    RandomBrightnessContrast(),\r\n    RandomShadow(p=0.5),\r\n    RandomSnow(p=0.5),\r\n    RandomFog(),\r\n    JpegCompression()]\r\n    augmentor = Compose(transforms, bbox_params=BboxParams(format='yolo', label_fields=['category_id']))\r\n2. Input bboxes \r\n[[0.492578125, 0.5118055555555555, 0.01328125, 0.02638888888888889], [0.501171875, 0.5013888888888889, 0.01171875, 0.019444444444444445], [0.509765625, 0.5020833333333333, 0.01328125, 0.020833333333333332], [0.51640625, 0.51875, 0.0265625, 0.034722222222222224], [0.581640625, 0.5131944444444444, 0.02265625, 0.029166666666666667], [0.613671875, 0.5145833333333333, 0.02734375, 0.034722222222222224], [0.7546875, 0.5319444444444444, 0.0859375, 0.08055555555555556], [0.46796875, 0.5423611111111111, 0.065625, 0.10138888888888889], [0.9734375, 0.6097222222222223, 0.0515625, 0.1638888888888889]]\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\nTraceback (most recent call last):\r\n  File \"/home/robo/Code/Python/ONNX/mobilenetv2.py\", line 655, in <module>\r\n    for batch_data, boxes in det_dataset.get_batchGPU(batch_size):\r\n  File \"/home/robo/Code/Python/ONNX/mobilenetv2.py\", line 609, in get_batchGPU\r\n    max_length_box = self.get_image(start_index, batch_size, batch, labels)\r\n  File \"/home/robo/Code/Python/ONNX/mobilenetv2.py\", line 579, in get_image\r\n    sample = self.getItemGPURandomGreed(start_index)\r\n  File \"/home/robo/Code/Python/ONNX/mobilenetv2.py\", line 569, in getItemGPURandomGreed\r\n    return self.getItemGPUVariableGreed(indx, np.random.randint(1, 3), np.random.randint(1, 3))\r\n  File \"/home/robo/Code/Python/ONNX/mobilenetv2.py\", line 564, in getItemGPUVariableGreed\r\n    aug = augmentor(**annotation)\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/core/composition.py\", line 174, in __call__\r\n    p.preprocess(data)\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/core/utils.py\", line 63, in preprocess\r\n    data[data_name] = self.check_and_convert(data[data_name], rows, cols, direction=\"to\")\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/core/utils.py\", line 71, in check_and_convert\r\n    return self.convert_to_albumentations(data, rows, cols)\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/augmentations/bbox_utils.py\", line 51, in convert_to_albumentations\r\n    return convert_bboxes_to_albumentations(data, self.params.format, rows, cols, check_validity=True)\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/augmentations/bbox_utils.py\", line 305, in convert_bboxes_to_albumentations\r\n    return [convert_bbox_to_albumentations(bbox, source_format, rows, cols, check_validity) for bbox in bboxes]\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/augmentations/bbox_utils.py\", line 305, in <listcomp>\r\n    return [convert_bbox_to_albumentations(bbox, source_format, rows, cols, check_validity) for bbox in bboxes]\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/augmentations/bbox_utils.py\", line 253, in convert_bbox_to_albumentations\r\n    check_bbox(bbox)\r\n  File \"/home/robo/.local/lib/python3.6/site-packages/albumentations/augmentations/bbox_utils.py\", line 332, in check_bbox\r\n    \"to be in the range [0.0, 1.0], got {value}.\".format(bbox=bbox, name=name, value=value)\r\nValueError: Expected x_max for bbox (0.9515625, 0.5316840277777778, 1.003125, 0.6955729166666667, 0) to be in the range [0.0, 1.0], got 1.003125.\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n - Albumentations version 0.4.2:\r\n - Python version 3.6.8:\r\n - OS Ubuntu 18.04:\r\n - pip :\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/457", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/457/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/457/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/457", "id": 515230252, "node_id": "MDU6SXNzdWU1MTUyMzAyNTI=", "number": 457, "title": "some boxes can\u2019t transfer correctly", "user": {"login": "GYxiaOH", "id": 26561924, "node_id": "MDQ6VXNlcjI2NTYxOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/26561924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GYxiaOH", "html_url": "https://github.com/GYxiaOH", "followers_url": "https://api.github.com/users/GYxiaOH/followers", "following_url": "https://api.github.com/users/GYxiaOH/following{/other_user}", "gists_url": "https://api.github.com/users/GYxiaOH/gists{/gist_id}", "starred_url": "https://api.github.com/users/GYxiaOH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GYxiaOH/subscriptions", "organizations_url": "https://api.github.com/users/GYxiaOH/orgs", "repos_url": "https://api.github.com/users/GYxiaOH/repos", "events_url": "https://api.github.com/users/GYxiaOH/events{/privacy}", "received_events_url": "https://api.github.com/users/GYxiaOH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-31T07:46:06Z", "updated_at": "2019-10-31T09:01:49Z", "closed_at": "2019-10-31T09:01:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nfor example: i have a bbox,[152.  35.] [205.  17.] [208.  26.] [155.  43.],it's a valid bbox ,but in check_bbox,it's a invalid bbox......\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8):\r\n - Python version (e.g., 3.7):\r\n - OS (e.g., Linux):\r\n - How you installed albumentations ( `pip`):\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/453", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/453/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/453/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/453", "id": 513771090, "node_id": "MDU6SXNzdWU1MTM3NzEwOTA=", "number": 453, "title": "albumentations/core/composition.py differs from package installed", "user": {"login": "JenniferOH", "id": 46743323, "node_id": "MDQ6VXNlcjQ2NzQzMzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/46743323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JenniferOH", "html_url": "https://github.com/JenniferOH", "followers_url": "https://api.github.com/users/JenniferOH/followers", "following_url": "https://api.github.com/users/JenniferOH/following{/other_user}", "gists_url": "https://api.github.com/users/JenniferOH/gists{/gist_id}", "starred_url": "https://api.github.com/users/JenniferOH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JenniferOH/subscriptions", "organizations_url": "https://api.github.com/users/JenniferOH/orgs", "repos_url": "https://api.github.com/users/JenniferOH/repos", "events_url": "https://api.github.com/users/JenniferOH/events{/privacy}", "received_events_url": "https://api.github.com/users/JenniferOH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-29T08:47:27Z", "updated_at": "2019-10-29T09:11:24Z", "closed_at": "2019-10-29T09:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n(Using anaconda3 python3.7 env)\r\n1. install albumentation following the Conda install instruction\r\n\r\n$ conda install -c conda-forge imgaug\r\n$ conda install albumentations -c albumentations\r\n\r\nas a result I get albumentations==0.1.8 installed in my conda env\r\n\r\n2. try to call PerChannel method from albumentations\r\n\r\n$ python\r\n> import albumentations as albu\r\n> albu.PerChannel\r\n\r\nas a result I get \"AttributeError: module 'albumentations' has no attribute 'PerChannel' \"\r\n\r\nbut when I call albu.OneOrOther the error doesn't occur \r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n albu.PerChannel should result in something like 'albumentations.core.composition.PerChannel'\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.1.8\r\n - Python version (e.g., 3.7): 3.7\r\n - OS (e.g., Linux): MacOS\r\n - How you installed albumentations (`conda`, `pip`, source): conda\r\n - Any other relevant information: I've checked the package file installed in my conda environment({user_dir}/.conda/envs/albu/lib/python3.7/site-packages/albumentations/core/composition.py) and found out that the code under 'OneOrOther' is missing. I'm not sure why this happened but could you please check?\r\nThanks.\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/444", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/444/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/444/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/444", "id": 512185513, "node_id": "MDU6SXNzdWU1MTIxODU1MTM=", "number": 444, "title": "Do the transformations apply to BOTH the image AND its instance segmentation mask?  Or do the transformations only apply to the image and not to the segmentation mask?", "user": {"login": "cpoptic", "id": 7234261, "node_id": "MDQ6VXNlcjcyMzQyNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7234261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpoptic", "html_url": "https://github.com/cpoptic", "followers_url": "https://api.github.com/users/cpoptic/followers", "following_url": "https://api.github.com/users/cpoptic/following{/other_user}", "gists_url": "https://api.github.com/users/cpoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpoptic/subscriptions", "organizations_url": "https://api.github.com/users/cpoptic/orgs", "repos_url": "https://api.github.com/users/cpoptic/repos", "events_url": "https://api.github.com/users/cpoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/cpoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-24T21:16:27Z", "updated_at": "2019-10-24T23:56:59Z", "closed_at": "2019-10-24T21:20:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/439", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/439/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/439/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/439", "id": 510151791, "node_id": "MDU6SXNzdWU1MTAxNTE3OTE=", "number": 439, "title": "speckle noise?", "user": {"login": "mobassir94", "id": 24439592, "node_id": "MDQ6VXNlcjI0NDM5NTky", "avatar_url": "https://avatars2.githubusercontent.com/u/24439592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mobassir94", "html_url": "https://github.com/mobassir94", "followers_url": "https://api.github.com/users/mobassir94/followers", "following_url": "https://api.github.com/users/mobassir94/following{/other_user}", "gists_url": "https://api.github.com/users/mobassir94/gists{/gist_id}", "starred_url": "https://api.github.com/users/mobassir94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mobassir94/subscriptions", "organizations_url": "https://api.github.com/users/mobassir94/orgs", "repos_url": "https://api.github.com/users/mobassir94/repos", "events_url": "https://api.github.com/users/mobassir94/events{/privacy}", "received_events_url": "https://api.github.com/users/mobassir94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-21T17:40:11Z", "updated_at": "2019-10-29T18:07:36Z", "closed_at": "2019-10-29T18:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want to apply speckle noise on my image training set,how can i do it using albumentation pytorch? i am not finding it here.please help,thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/436", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/436/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/436/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/436", "id": 509924620, "node_id": "MDU6SXNzdWU1MDk5MjQ2MjA=", "number": 436, "title": "Unexpected behavior of `max_holes` in CoarseDropout", "user": {"login": "t-hanya", "id": 18238865, "node_id": "MDQ6VXNlcjE4MjM4ODY1", "avatar_url": "https://avatars1.githubusercontent.com/u/18238865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-hanya", "html_url": "https://github.com/t-hanya", "followers_url": "https://api.github.com/users/t-hanya/followers", "following_url": "https://api.github.com/users/t-hanya/following{/other_user}", "gists_url": "https://api.github.com/users/t-hanya/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-hanya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-hanya/subscriptions", "organizations_url": "https://api.github.com/users/t-hanya/orgs", "repos_url": "https://api.github.com/users/t-hanya/repos", "events_url": "https://api.github.com/users/t-hanya/events{/privacy}", "received_events_url": "https://api.github.com/users/t-hanya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T12:16:56Z", "updated_at": "2019-10-21T20:23:26Z", "closed_at": "2019-10-21T20:23:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nCoarseDropout may produce `max_holes + 1` holes. \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n<img width=\"932\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2019-10-21 21 00 58\" src=\"https://user-images.githubusercontent.com/18238865/67203592-73406980-f446-11e9-865c-88337a34899c.png\">\r\n\r\nIn CoarseDropout code, the number of holes is determined by `random.randint(self.min_holes, self.max_holes + 1)`, but `random.randint(a, b)` function returns random integer in range[a, b], including both end points.\r\n\r\n```python\r\n>>> import random\r\n>>> for _ in range(10):\r\n...     print(random.randint(0, 1))\r\n... \r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n>>> \r\n```\r\n\r\n## Expected behavior\r\n\r\nFor option name `max_holes`, we expect CoarseDropout function produces at most `max_holes` holes.\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.4.1\r\n - Python version (e.g., 3.7): 3.6.5\r\n - OS (e.g., Linux): macOS\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/430", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/430/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/430/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/430", "id": 508209995, "node_id": "MDU6SXNzdWU1MDgyMDk5OTU=", "number": 430, "title": "The function return a list, instead of a tuple", "user": {"login": "maruschin", "id": 678620, "node_id": "MDQ6VXNlcjY3ODYyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/678620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maruschin", "html_url": "https://github.com/maruschin", "followers_url": "https://api.github.com/users/maruschin/followers", "following_url": "https://api.github.com/users/maruschin/following{/other_user}", "gists_url": "https://api.github.com/users/maruschin/gists{/gist_id}", "starred_url": "https://api.github.com/users/maruschin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maruschin/subscriptions", "organizations_url": "https://api.github.com/users/maruschin/orgs", "repos_url": "https://api.github.com/users/maruschin/repos", "events_url": "https://api.github.com/users/maruschin/events{/privacy}", "received_events_url": "https://api.github.com/users/maruschin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-17T03:23:48Z", "updated_at": "2019-10-23T22:18:11Z", "closed_at": "2019-10-23T22:18:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Somewhere, a function returns a tuple, and somewhere a list. Although it is logically clear that structured data is being returned, and at this point it would be more logical to use a tuple or even a named tuple.\r\n\r\nReturn tuple:\r\nhttps://github.com/albu/albumentations/blob/e0b92cfba2b40483e6cbac63e8412c20d4cc1ab1/albumentations/augmentations/functional.py#L1622\r\n\r\nReturn list:\r\nhttps://github.com/albu/albumentations/blob/e0b92cfba2b40483e6cbac63e8412c20d4cc1ab1/albumentations/augmentations/functional.py#L1558\r\nhttps://github.com/albu/albumentations/blob/e0b92cfba2b40483e6cbac63e8412c20d4cc1ab1/albumentations/augmentations/functional.py#L1552\r\nhttps://github.com/albu/albumentations/blob/e0b92cfba2b40483e6cbac63e8412c20d4cc1ab1/albumentations/augmentations/functional.py#L1505\r\n\r\nAnd so on, there are a lot of examples in code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/424", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/424/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/424/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/424", "id": 507612864, "node_id": "MDU6SXNzdWU1MDc2MTI4NjQ=", "number": 424, "title": "Redundant code in angle normalize function", "user": {"login": "maruschin", "id": 678620, "node_id": "MDQ6VXNlcjY3ODYyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/678620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maruschin", "html_url": "https://github.com/maruschin", "followers_url": "https://api.github.com/users/maruschin/followers", "following_url": "https://api.github.com/users/maruschin/following{/other_user}", "gists_url": "https://api.github.com/users/maruschin/gists{/gist_id}", "starred_url": "https://api.github.com/users/maruschin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maruschin/subscriptions", "organizations_url": "https://api.github.com/users/maruschin/orgs", "repos_url": "https://api.github.com/users/maruschin/repos", "events_url": "https://api.github.com/users/maruschin/events{/privacy}", "received_events_url": "https://api.github.com/users/maruschin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Dipet", "id": 7512250, "node_id": "MDQ6VXNlcjc1MTIyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7512250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dipet", "html_url": "https://github.com/Dipet", "followers_url": "https://api.github.com/users/Dipet/followers", "following_url": "https://api.github.com/users/Dipet/following{/other_user}", "gists_url": "https://api.github.com/users/Dipet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dipet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dipet/subscriptions", "organizations_url": "https://api.github.com/users/Dipet/orgs", "repos_url": "https://api.github.com/users/Dipet/repos", "events_url": "https://api.github.com/users/Dipet/events{/privacy}", "received_events_url": "https://api.github.com/users/Dipet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Dipet", "id": 7512250, "node_id": "MDQ6VXNlcjc1MTIyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7512250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dipet", "html_url": "https://github.com/Dipet", "followers_url": "https://api.github.com/users/Dipet/followers", "following_url": "https://api.github.com/users/Dipet/following{/other_user}", "gists_url": "https://api.github.com/users/Dipet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dipet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dipet/subscriptions", "organizations_url": "https://api.github.com/users/Dipet/orgs", "repos_url": "https://api.github.com/users/Dipet/repos", "events_url": "https://api.github.com/users/Dipet/events{/privacy}", "received_events_url": "https://api.github.com/users/Dipet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-16T04:52:42Z", "updated_at": "2019-11-05T04:47:14Z", "closed_at": "2019-11-05T04:47:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python correctly returns the remainder of the division of negative numbers. It's always positive.\r\n\r\nhttps://github.com/albu/albumentations/blob/ff1a17f52f363a3901f2b7a2d720b7745e1c3bc4/albumentations/augmentations/functional.py#L40\r\n\r\nThis line is redundant.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/422", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/422/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/422/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/422", "id": 507224155, "node_id": "MDU6SXNzdWU1MDcyMjQxNTU=", "number": 422, "title": "Multiple images", "user": {"login": "theRealSuperMario", "id": 6517465, "node_id": "MDQ6VXNlcjY1MTc0NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6517465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealSuperMario", "html_url": "https://github.com/theRealSuperMario", "followers_url": "https://api.github.com/users/theRealSuperMario/followers", "following_url": "https://api.github.com/users/theRealSuperMario/following{/other_user}", "gists_url": "https://api.github.com/users/theRealSuperMario/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealSuperMario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealSuperMario/subscriptions", "organizations_url": "https://api.github.com/users/theRealSuperMario/orgs", "repos_url": "https://api.github.com/users/theRealSuperMario/repos", "events_url": "https://api.github.com/users/theRealSuperMario/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealSuperMario/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-15T12:51:33Z", "updated_at": "2019-10-15T12:52:29Z", "closed_at": "2019-10-15T12:52:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI just found this amazing library for image augmentation and wanted to adapt it my usecase.\r\nIs it possible to apply the same augmentation that I get from the compose interface to a list of images.\r\n\r\nKinda like\r\n```\r\ndata = {\"image_1\": im1, \"image_2\": im2}\r\naugmented = augmentation(**data)\r\n```\r\n\r\nCould not get it to work so far. Thanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/418", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/418/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/418/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/418", "id": 506786914, "node_id": "MDU6SXNzdWU1MDY3ODY5MTQ=", "number": 418, "title": "Cutout does nothing", "user": {"login": "igriffer", "id": 3995813, "node_id": "MDQ6VXNlcjM5OTU4MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3995813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igriffer", "html_url": "https://github.com/igriffer", "followers_url": "https://api.github.com/users/igriffer/followers", "following_url": "https://api.github.com/users/igriffer/following{/other_user}", "gists_url": "https://api.github.com/users/igriffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/igriffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igriffer/subscriptions", "organizations_url": "https://api.github.com/users/igriffer/orgs", "repos_url": "https://api.github.com/users/igriffer/repos", "events_url": "https://api.github.com/users/igriffer/events{/privacy}", "received_events_url": "https://api.github.com/users/igriffer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-14T17:38:27Z", "updated_at": "2020-04-20T15:42:44Z", "closed_at": "2020-04-20T15:42:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nCutout with max_h_size == 1 or max_w_size == 1 does nothing\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\naug = Cutout(max_h_size=1, max_w_size=80, p=1) \r\naugment_and_show(aug, image)\r\n\r\n## Expected behavior\r\n\r\n8 black lines with height 1px\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.3.3\r\n - Python version (e.g., 3.7): 3.6.8\r\n - OS (e.g., Linux): Linux\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/417", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/417/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/417/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/417", "id": 506276014, "node_id": "MDU6SXNzdWU1MDYyNzYwMTQ=", "number": 417, "title": "There are no modules \"augmenters\" in albumentations\\albumentations\\imgaug", "user": {"login": "Kwongy", "id": 31445071, "node_id": "MDQ6VXNlcjMxNDQ1MDcx", "avatar_url": "https://avatars2.githubusercontent.com/u/31445071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kwongy", "html_url": "https://github.com/Kwongy", "followers_url": "https://api.github.com/users/Kwongy/followers", "following_url": "https://api.github.com/users/Kwongy/following{/other_user}", "gists_url": "https://api.github.com/users/Kwongy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kwongy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kwongy/subscriptions", "organizations_url": "https://api.github.com/users/Kwongy/orgs", "repos_url": "https://api.github.com/users/Kwongy/repos", "events_url": "https://api.github.com/users/Kwongy/events{/privacy}", "received_events_url": "https://api.github.com/users/Kwongy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-13T05:15:38Z", "updated_at": "2019-10-25T13:44:33Z", "closed_at": "2019-10-25T13:44:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\n<!-- A clear and concise description of what content in https://albumentations.readthedocs.io is an issue. -->\r\n\r\nfrom imgaug import augmenters as iaa\r\nModuleNotFoundError: No module named 'imgaug'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/415", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/415/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/415/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/415", "id": 505985247, "node_id": "MDU6SXNzdWU1MDU5ODUyNDc=", "number": 415, "title": "ImportError: libXrender.so.1: cannot open shared object file: No such file or directory", "user": {"login": "mobassir94", "id": 24439592, "node_id": "MDQ6VXNlcjI0NDM5NTky", "avatar_url": "https://avatars2.githubusercontent.com/u/24439592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mobassir94", "html_url": "https://github.com/mobassir94", "followers_url": "https://api.github.com/users/mobassir94/followers", "following_url": "https://api.github.com/users/mobassir94/following{/other_user}", "gists_url": "https://api.github.com/users/mobassir94/gists{/gist_id}", "starred_url": "https://api.github.com/users/mobassir94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mobassir94/subscriptions", "organizations_url": "https://api.github.com/users/mobassir94/orgs", "repos_url": "https://api.github.com/users/mobassir94/repos", "events_url": "https://api.github.com/users/mobassir94/events{/privacy}", "received_events_url": "https://api.github.com/users/mobassir94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-11T18:02:51Z", "updated_at": "2019-10-11T20:42:41Z", "closed_at": "2019-10-11T20:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried both **pip install -U git+https://github.com/albu/albumentations** and **pip install albumentations** in paperspace but while importing the library i get this error : \r\n\r\n\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-18-4a5d86dffb20> in <module>\r\n     67 \r\n     68 #from albumentations import (HorizontalFlip,VerticalFlip,Cutout,SmallestMaxSize,ToGray,CenterCrop, ShiftScaleRotate,RandomBrightnessContrast, Blur,Normalize, Resize, Compose, GaussNoise)\r\n---> 69 from albumentations.pytorch import ToTensor\r\n     70 \r\n     71 warnings.filterwarnings(\"ignore\")\r\n\r\n/usr/local/lib/python3.6/dist-packages/albumentations/__init__.py in <module>\r\n      3 __version__ = '0.3.3'\r\n      4 \r\n----> 5 from .core.composition import *\r\n      6 from .core.transforms_interface import *\r\n      7 from .core.serialization import *\r\n\r\n/usr/local/lib/python3.6/dist-packages/albumentations/core/composition.py in <module>\r\n      8 from albumentations.core.serialization import SerializableMeta\r\n      9 from albumentations.core.six import add_metaclass\r\n---> 10 from albumentations.core.transforms_interface import DualTransform\r\n     11 from albumentations.core.utils import format_args, Params\r\n     12 from albumentations.augmentations.bbox_utils import BboxProcessor\r\n\r\n/usr/local/lib/python3.6/dist-packages/albumentations/core/transforms_interface.py in <module>\r\n      3 import random\r\n      4 \r\n----> 5 import cv2\r\n      6 \r\n      7 from albumentations.core.serialization import SerializableMeta\r\n\r\n/usr/local/lib/python3.6/dist-packages/cv2/__init__.py in <module>\r\n      1 import importlib\r\n      2 \r\n----> 3 from .cv2 import *\r\n      4 from .data import *\r\n      5 \r\n\r\nImportError: libXrender.so.1: cannot open shared object file: No such file or directory", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/414", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/414/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/414/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/414", "id": 505954423, "node_id": "MDU6SXNzdWU1MDU5NTQ0MjM=", "number": 414, "title": "AttributeError: module 'albumentations' has no attribute 'Lambda'", "user": {"login": "bluesky314", "id": 35393972, "node_id": "MDQ6VXNlcjM1MzkzOTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/35393972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluesky314", "html_url": "https://github.com/bluesky314", "followers_url": "https://api.github.com/users/bluesky314/followers", "following_url": "https://api.github.com/users/bluesky314/following{/other_user}", "gists_url": "https://api.github.com/users/bluesky314/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluesky314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluesky314/subscriptions", "organizations_url": "https://api.github.com/users/bluesky314/orgs", "repos_url": "https://api.github.com/users/bluesky314/repos", "events_url": "https://api.github.com/users/bluesky314/events{/privacy}", "received_events_url": "https://api.github.com/users/bluesky314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-11T16:46:10Z", "updated_at": "2020-07-16T10:46:02Z", "closed_at": "2020-07-16T10:46:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am getting `AttributeError: module 'albumentations' has no attribute 'Lambda'` when I try to use albumentations.Lambda even though it is clearly listed in documentation. I am using 0.1.12 on Colab. How to fix? ( If I have to upgrade please let me know how, I did pip upgrade before)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/410", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/410/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/410/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/410", "id": 504496200, "node_id": "MDU6SXNzdWU1MDQ0OTYyMDA=", "number": 410, "title": "Artifacts when applying Resize", "user": {"login": "IlyaDobrynin", "id": 21102661, "node_id": "MDQ6VXNlcjIxMTAyNjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/21102661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaDobrynin", "html_url": "https://github.com/IlyaDobrynin", "followers_url": "https://api.github.com/users/IlyaDobrynin/followers", "following_url": "https://api.github.com/users/IlyaDobrynin/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaDobrynin/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaDobrynin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaDobrynin/subscriptions", "organizations_url": "https://api.github.com/users/IlyaDobrynin/orgs", "repos_url": "https://api.github.com/users/IlyaDobrynin/repos", "events_url": "https://api.github.com/users/IlyaDobrynin/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaDobrynin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T08:31:26Z", "updated_at": "2019-10-09T08:44:14Z", "closed_at": "2019-10-09T08:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe bug appears after using Resize augmentation for the masks with number of channels >4.\r\nActually, the problem is in the cv2.resize function, which is under the hood of the Resize.\r\nPossible solution: change the resizing core method for the masks with number of channels >4\r\n\r\n## To Reproduce\r\n\r\nTo reproduce this bug simple apply the Resize augmentation to the mask with number of channels >4\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): 0.2.3\r\n - Open CV version: 4.1.1.26\r\n - Python version (e.g., 3.7): 3.6\r\n - OS (e.g., Linux): Ubuntu 18.04\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\nArtifacts example:\r\n![image](https://user-images.githubusercontent.com/21102661/66464741-36f52c80-ea88-11e9-8352-2bc23ed2e78c.png)\r\n![image](https://user-images.githubusercontent.com/21102661/66464796-4ffddd80-ea88-11e9-82aa-09fc814b971b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/399", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/399/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/399/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/399", "id": 502733040, "node_id": "MDU6SXNzdWU1MDI3MzMwNDA=", "number": 399, "title": "Bug with ToTensorV2", "user": {"login": "vfdev-5", "id": 2459423, "node_id": "MDQ6VXNlcjI0NTk0MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2459423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vfdev-5", "html_url": "https://github.com/vfdev-5", "followers_url": "https://api.github.com/users/vfdev-5/followers", "following_url": "https://api.github.com/users/vfdev-5/following{/other_user}", "gists_url": "https://api.github.com/users/vfdev-5/gists{/gist_id}", "starred_url": "https://api.github.com/users/vfdev-5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vfdev-5/subscriptions", "organizations_url": "https://api.github.com/users/vfdev-5/orgs", "repos_url": "https://api.github.com/users/vfdev-5/repos", "events_url": "https://api.github.com/users/vfdev-5/events{/privacy}", "received_events_url": "https://api.github.com/users/vfdev-5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-04T16:32:59Z", "updated_at": "2019-10-06T17:52:06Z", "closed_at": "2019-10-06T17:52:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nError with `ToTensorV2` (sorry for my previous faulty PR).\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-53-ff0c00a2db0e> in <module>\r\n     10 res = t(**kwargs)\r\n     11 \r\n---> 12 res2 = A.ReplayCompose.replay(res['replay'], **kwargs)\r\n\r\n/opt/conda/lib/python3.7/site-packages/albumentations/core/composition.py in replay(saved_augmentations, **kwargs)\r\n    295     @staticmethod\r\n    296     def replay(saved_augmentations, **kwargs):\r\n--> 297         augs = ReplayCompose._restore_for_replay(saved_augmentations)\r\n    298         return augs(force_apply=True, **kwargs)\r\n    299 \r\n\r\n/opt/conda/lib/python3.7/site-packages/albumentations/core/composition.py in _restore_for_replay(transform_dict, lambda_transforms)\r\n    322                 args[\"transforms\"] = [\r\n    323                     ReplayCompose._restore_for_replay(t, lambda_transforms=lambda_transforms)\r\n--> 324                     for t in args[\"transforms\"]\r\n    325                 ]\r\n    326             transform = cls(**args)\r\n\r\n/opt/conda/lib/python3.7/site-packages/albumentations/core/composition.py in <listcomp>(.0)\r\n    322                 args[\"transforms\"] = [\r\n    323                     ReplayCompose._restore_for_replay(t, lambda_transforms=lambda_transforms)\r\n--> 324                     for t in args[\"transforms\"]\r\n    325                 ]\r\n    326             transform = cls(**args)\r\n\r\n/opt/conda/lib/python3.7/site-packages/albumentations/core/composition.py in _restore_for_replay(transform_dict, lambda_transforms)\r\n    324                     for t in args[\"transforms\"]\r\n    325                 ]\r\n--> 326             transform = cls(**args)\r\n    327 \r\n    328         transform.params = params\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'always_apply'\r\n```\r\n\r\n## To Reproduce\r\n```python\r\nimport albumentations as A\r\nfrom albumentations.pytorch import ToTensorV2\r\n\r\n\r\nt = A.ReplayCompose([\r\n    ToTensorV2()\r\n])\r\n\r\nkwargs = {\r\n    'image': np.ones((20, 20, 3), dtype='uint8'),\r\n    'mask': np.ones((20, 20, 3), dtype='uint8'),    \r\n}\r\n\r\nres = t(**kwargs)\r\nres2 = A.ReplayCompose.replay(res['replay'], **kwargs)\r\n```\r\n\r\n## Expected behavior\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8): stable\r\n - Python version (e.g., 3.7): 3.7\r\n - OS (e.g., Linux): linux\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/397", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/397/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/397/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/397", "id": 502081033, "node_id": "MDU6SXNzdWU1MDIwODEwMzM=", "number": 397, "title": "How to make identical composed random/elastic transforms on  image pair(input,target) for segmentation?", "user": {"login": "AlexLuya", "id": 303353, "node_id": "MDQ6VXNlcjMwMzM1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/303353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexLuya", "html_url": "https://github.com/AlexLuya", "followers_url": "https://api.github.com/users/AlexLuya/followers", "following_url": "https://api.github.com/users/AlexLuya/following{/other_user}", "gists_url": "https://api.github.com/users/AlexLuya/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexLuya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexLuya/subscriptions", "organizations_url": "https://api.github.com/users/AlexLuya/orgs", "repos_url": "https://api.github.com/users/AlexLuya/repos", "events_url": "https://api.github.com/users/AlexLuya/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexLuya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-03T13:52:56Z", "updated_at": "2019-10-04T02:53:17Z", "closed_at": "2019-10-03T14:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,in segmentation task,identical spatial transforming result are expected on image pair (input,target),even for random(crop/rotation) or elastic transforms.Google tells to set random seed,so I did it like this:\r\n```\r\n        # ensure same randomness on both image and mask\r\n        seed = np.random.randint(2147483647)\r\n        random.seed(seed) \r\n\r\n       spatialTransforms=Compose(ElasticTransform(),RandomCrop()....)\r\n        \r\n        # read images\r\n        image = imread(..)\r\n        mask = imread(...)\r\n        \r\n        # apply spatial transforms on both image and mask\r\n         transformedImage = spatialTransforms(image = image)\r\n         transformedMask = spatialTransforms(image = mask) \r\n```\r\nbut doesn't worked as expected,so how to do it right?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/394", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/394/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/394/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/394", "id": 501423681, "node_id": "MDU6SXNzdWU1MDE0MjM2ODE=", "number": 394, "title": "Need fix keypoints changes ", "user": {"login": "Dipet", "id": 7512250, "node_id": "MDQ6VXNlcjc1MTIyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7512250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dipet", "html_url": "https://github.com/Dipet", "followers_url": "https://api.github.com/users/Dipet/followers", "following_url": "https://api.github.com/users/Dipet/following{/other_user}", "gists_url": "https://api.github.com/users/Dipet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dipet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dipet/subscriptions", "organizations_url": "https://api.github.com/users/Dipet/orgs", "repos_url": "https://api.github.com/users/Dipet/repos", "events_url": "https://api.github.com/users/Dipet/events{/privacy}", "received_events_url": "https://api.github.com/users/Dipet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 955950862, "node_id": "MDU6TGFiZWw5NTU5NTA4NjI=", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1606172193, "node_id": "MDU6TGFiZWwxNjA2MTcyMTkz", "url": "https://api.github.com/repos/albumentations-team/albumentations/labels/hacktoberfest", "name": "hacktoberfest", "color": "8c39b5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "BloodAxe", "id": 532320, "node_id": "MDQ6VXNlcjUzMjMyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/532320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BloodAxe", "html_url": "https://github.com/BloodAxe", "followers_url": "https://api.github.com/users/BloodAxe/followers", "following_url": "https://api.github.com/users/BloodAxe/following{/other_user}", "gists_url": "https://api.github.com/users/BloodAxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BloodAxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BloodAxe/subscriptions", "organizations_url": "https://api.github.com/users/BloodAxe/orgs", "repos_url": "https://api.github.com/users/BloodAxe/repos", "events_url": "https://api.github.com/users/BloodAxe/events{/privacy}", "received_events_url": "https://api.github.com/users/BloodAxe/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "BloodAxe", "id": 532320, "node_id": "MDQ6VXNlcjUzMjMyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/532320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BloodAxe", "html_url": "https://github.com/BloodAxe", "followers_url": "https://api.github.com/users/BloodAxe/followers", "following_url": "https://api.github.com/users/BloodAxe/following{/other_user}", "gists_url": "https://api.github.com/users/BloodAxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/BloodAxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BloodAxe/subscriptions", "organizations_url": "https://api.github.com/users/BloodAxe/orgs", "repos_url": "https://api.github.com/users/BloodAxe/repos", "events_url": "https://api.github.com/users/BloodAxe/events{/privacy}", "received_events_url": "https://api.github.com/users/BloodAxe/received_events", "type": "User", "site_admin": false}, {"login": "Dipet", "id": 7512250, "node_id": "MDQ6VXNlcjc1MTIyNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7512250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dipet", "html_url": "https://github.com/Dipet", "followers_url": "https://api.github.com/users/Dipet/followers", "following_url": "https://api.github.com/users/Dipet/following{/other_user}", "gists_url": "https://api.github.com/users/Dipet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dipet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dipet/subscriptions", "organizations_url": "https://api.github.com/users/Dipet/orgs", "repos_url": "https://api.github.com/users/Dipet/repos", "events_url": "https://api.github.com/users/Dipet/events{/privacy}", "received_events_url": "https://api.github.com/users/Dipet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-10-02T11:10:11Z", "updated_at": "2019-10-15T15:53:07Z", "closed_at": "2019-10-15T15:45:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Need change angle\r\n- [ ] VerticalFlip\r\n- [ ] HorizontalFlip\r\n- [ ] Flip\r\n\r\nCurrent  version:\r\n```\r\ndef keypoint_vflip(kp, rows, cols):\r\n    \"\"\"Flip a keypoint vertically around the x-axis.\"\"\"\r\n    x, y, angle, scale = kp\r\n    c = math.cos(angle)\r\n    s = math.sin(angle)\r\n    angle = math.atan2(-s, c)\r\n    return [x, (rows - 1) - y, angle, scale]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/390", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/390/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/390/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/390", "id": 500635563, "node_id": "MDU6SXNzdWU1MDA2MzU1NjM=", "number": 390, "title": "caching", "user": {"login": "rpgit12", "id": 15933987, "node_id": "MDQ6VXNlcjE1OTMzOTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/15933987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgit12", "html_url": "https://github.com/rpgit12", "followers_url": "https://api.github.com/users/rpgit12/followers", "following_url": "https://api.github.com/users/rpgit12/following{/other_user}", "gists_url": "https://api.github.com/users/rpgit12/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgit12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgit12/subscriptions", "organizations_url": "https://api.github.com/users/rpgit12/orgs", "repos_url": "https://api.github.com/users/rpgit12/repos", "events_url": "https://api.github.com/users/rpgit12/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgit12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-01T03:20:09Z", "updated_at": "2019-10-06T02:02:53Z", "closed_at": "2019-10-04T08:36:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "It'd be nice if some sort of cache element could be inserted that automatically caches images after a certain step in the pipeline, and skips preceding portions if a cached image exists. I think that would fit neatly into how pipelines are set up.\r\n\r\nI use two separate pipelines which arguably works fine too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/383", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/383/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/383/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/383", "id": 498731241, "node_id": "MDU6SXNzdWU0OTg3MzEyNDE=", "number": 383, "title": "Bounding boxes disappearing after RandomCrop", "user": {"login": "kevinlu1211", "id": 12663823, "node_id": "MDQ6VXNlcjEyNjYzODIz", "avatar_url": "https://avatars0.githubusercontent.com/u/12663823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinlu1211", "html_url": "https://github.com/kevinlu1211", "followers_url": "https://api.github.com/users/kevinlu1211/followers", "following_url": "https://api.github.com/users/kevinlu1211/following{/other_user}", "gists_url": "https://api.github.com/users/kevinlu1211/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinlu1211/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinlu1211/subscriptions", "organizations_url": "https://api.github.com/users/kevinlu1211/orgs", "repos_url": "https://api.github.com/users/kevinlu1211/repos", "events_url": "https://api.github.com/users/kevinlu1211/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinlu1211/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T08:16:54Z", "updated_at": "2019-09-26T09:49:25Z", "closed_at": "2019-09-26T09:49:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nThe bounding boxes disappear after augmentation.\r\n\r\nImage before augmentation:\r\n```\r\nimage, labels, bboxes, mask, weight_map = sample.data\r\n_, axs = plt.subplots(1, 4, figsize=(12, 12))\r\naxs[0].imshow(image)\r\naxs[1].imshow(plot_bounding_boxes_on_image(image, bboxes, thickness=3))\r\naxs[2].imshow(mask)\r\naxs[3].imshow(weight_map)\r\n```\r\n![image](https://user-images.githubusercontent.com/12663823/65670678-28bb0f80-e089-11e9-8f31-7acd19f1cfad.png)\r\n\r\n```\r\nimage.shape:  (256, 256, 3)\r\nlen(bboxes): 53\r\nbboxes: array([[ 81,  69,  93,  81],\r\n       [146, 221, 155, 232],\r\n       [141, 156, 154, 166],\r\n       [252, 238, 256, 248],\r\n       [  2, 238,  11, 248],\r\n       [177,  33, 189,  44],\r\n       [241,  13, 249,  21],\r\n       [245,  18, 255,  28],\r\n       [  9,  13,  17,  23],\r\n       [  0,  40,   4,  48],\r\n       [253, 212, 256, 221],\r\n       [193, 112, 202, 122],\r\n       [105,  66, 116,  77],\r\n       [111, 234, 118, 245],\r\n       [219, 214, 226, 221],\r\n       [ 17, 187,  25, 195],\r\n       [118, 102, 123, 107],\r\n       [231, 224, 238, 232],\r\n       [214,  25, 226,  34],\r\n       [ 86, 191,  95, 199],\r\n       [191,  44, 203,  54],\r\n       [173,  97, 184, 109],\r\n       [ 95, 114, 104, 123],\r\n       [137,  89, 147, 101],\r\n       [219,  77, 231,  88],\r\n       [ 22, 238,  27, 243],\r\n       [183, 234, 194, 246],\r\n       [196, 201, 201, 206],\r\n       [ 82, 148,  96, 157],\r\n       [ 85, 176,  90, 181],\r\n       [107, 171, 112, 176],\r\n       [ 39, 174,  47, 182],\r\n       [252, 187, 256, 197],\r\n       [105, 162, 111, 172],\r\n       [192, 121, 199, 129],\r\n       [189, 173, 201, 184],\r\n       [186,   3, 194,  14],\r\n       [  0, 217,   4, 227],\r\n       [116, 141, 126, 154],\r\n       [244,  91, 253,  99],\r\n       [157, 247, 168, 256],\r\n       [108, 224, 113, 229],\r\n       [239,  63, 247,  73],\r\n       [249, 103, 256, 115],\r\n       [252, 159, 256, 170],\r\n       [ 30, 165,  38, 172],\r\n       [  1,  36,   7,  41],\r\n       [ 63, 111,  68, 116],\r\n       [144,  73, 149,  78],\r\n       [185, 199, 196, 209],\r\n       [224,  87, 234,  99],\r\n       [ 32, 214,  37, 219],\r\n       [137, 120, 150, 132]])\r\n```\r\n\r\nCode for augmentation:\r\n```\r\nrandom_crop = A.RandomCrop(height=256, width=256, p=1)\r\nbbox_params = dict(\r\n    format=\"pascal_voc\",\r\n    min_area=0,\r\n    min_visibility=0,\r\n    label_fields=['labels']\r\n)\r\naug = A.Compose([random_crop], bbox_params=bbox_params)\r\naugmented = aug(image=image, masks=[mask, weight_map], bboxes=bboxes, labels=labels)\r\n\r\nimage = augmented['image']\r\nbboxes = np.around(augmented['bboxes']).astype(np.int)\r\nmask, weight_map = augmented['masks'][0], augmented['masks'][1]\r\n_, axs = plt.subplots(1, 4, figsize=(12, 12))\r\naxs[0].imshow(augmented['image'])\r\naxs[1].imshow(plot_bounding_boxes_on_image(augmented['image'],\r\n                                           np.around(augmented['bboxes']).astype(np.int),\r\n                                           thickness=3))\r\naxs[2].imshow(mask)\r\naxs[3].imshow(weight_map)\r\n```\r\n![image](https://user-images.githubusercontent.com/12663823/65671062-e7772f80-e089-11e9-84a5-5b2bce174654.png)\r\n\r\n```\r\nimage.shape: (256, 256, 3)\r\nlen(bboxes): 27\r\nbboxes: array([[ 81,  69,  93,  81],\r\n       [146, 221, 155, 232],\r\n       [141, 156, 154, 166],\r\n       [252, 238, 256, 248],\r\n       [  2, 238,  11, 248],\r\n       [177,  33, 189,  44],\r\n       [241,  13, 249,  21],\r\n       [245,  18, 255,  28],\r\n       [  9,  13,  17,  23],\r\n       [  0,  40,   4,  48],\r\n       [253, 212, 256, 221],\r\n       [193, 112, 202, 122],\r\n       [105,  66, 116,  77],\r\n       [111, 234, 118, 245],\r\n       [219, 214, 226, 221],\r\n       [ 17, 187,  25, 195],\r\n       [118, 102, 123, 107],\r\n       [231, 224, 238, 232],\r\n       [214,  25, 226,  34],\r\n       [ 86, 191,  95, 199],\r\n       [191,  44, 203,  54],\r\n       [173,  97, 184, 109],\r\n       [ 95, 114, 104, 123],\r\n       [137,  89, 147, 101],\r\n       [219,  77, 231,  88],\r\n       [ 22, 238,  27, 243],\r\n       [183, 234, 194, 246]])\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe bounding boxes shouldn't disappear\r\n\r\n## Environment\r\n\r\n - Albumentations version: 0.3.0\r\n - Python version: 3.7\r\n - OS (e.g., Linux): Ubuntu 18.04\r\n - How you installed albumentations: pip\r\n - Any other relevant information:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/381", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/381/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/381/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/381", "id": 498118029, "node_id": "MDU6SXNzdWU0OTgxMTgwMjk=", "number": 381, "title": "Propose to save used parameters and was transform applied or not as a parameter", "user": {"login": "IlyaOvodov", "id": 34230114, "node_id": "MDQ6VXNlcjM0MjMwMTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/34230114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaOvodov", "html_url": "https://github.com/IlyaOvodov", "followers_url": "https://api.github.com/users/IlyaOvodov/followers", "following_url": "https://api.github.com/users/IlyaOvodov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaOvodov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaOvodov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaOvodov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaOvodov/orgs", "repos_url": "https://api.github.com/users/IlyaOvodov/repos", "events_url": "https://api.github.com/users/IlyaOvodov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaOvodov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-25T08:04:03Z", "updated_at": "2020-05-03T15:07:09Z", "closed_at": "2020-05-03T15:07:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Sometimes it is nesessary to know was a particular transform applied or not and with what randomly chosen parameters.\r\nFor instance, flips can be an acceptable transform for classification or detection task provided that labels would be changed in a proper way (say, \"left turn\" road sign should be changed to \"right turn\" if hflip was applied).\r\nI dont thing it is worth handling all such cases by the Albumentations library itself and sometimes it is better to leave it for user side.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/368", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/368/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/368/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/368", "id": 496491022, "node_id": "MDU6SXNzdWU0OTY0OTEwMjI=", "number": 368, "title": "Links to imgaug helpers in the README are broken", "user": {"login": "dniku", "id": 1315874, "node_id": "MDQ6VXNlcjEzMTU4NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1315874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dniku", "html_url": "https://github.com/dniku", "followers_url": "https://api.github.com/users/dniku/followers", "following_url": "https://api.github.com/users/dniku/following{/other_user}", "gists_url": "https://api.github.com/users/dniku/gists{/gist_id}", "starred_url": "https://api.github.com/users/dniku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dniku/subscriptions", "organizations_url": "https://api.github.com/users/dniku/orgs", "repos_url": "https://api.github.com/users/dniku/repos", "events_url": "https://api.github.com/users/dniku/events{/privacy}", "received_events_url": "https://api.github.com/users/dniku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T18:32:48Z", "updated_at": "2019-09-23T19:49:40Z", "closed_at": "2019-09-23T19:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Links to `imgaug` helpers in https://github.com/albu/albumentations/blob/master/README.md are broken.\r\n\r\nFor example, the link for `IAAAdditiveGaussianNoise` points to\r\n\r\nhttps://albumentations.readthedocs.io/en/latest/api/augmentations.html#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise\r\n\r\ninstead of\r\n\r\nhttps://albumentations.readthedocs.io/en/latest/api/imgaug.html#albumentations.imgaug.transforms.IAAAdditiveGaussianNoise\r\n\r\nBasically, `augmentations.html` should be replaced with `imgaug.html`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/365", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/365/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/365/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/365", "id": 495915265, "node_id": "MDU6SXNzdWU0OTU5MTUyNjU=", "number": 365, "title": "is there a way to simulate imgaug to_deterministic ?", "user": {"login": "charlielito", "id": 8033598, "node_id": "MDQ6VXNlcjgwMzM1OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8033598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlielito", "html_url": "https://github.com/charlielito", "followers_url": "https://api.github.com/users/charlielito/followers", "following_url": "https://api.github.com/users/charlielito/following{/other_user}", "gists_url": "https://api.github.com/users/charlielito/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlielito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlielito/subscriptions", "organizations_url": "https://api.github.com/users/charlielito/orgs", "repos_url": "https://api.github.com/users/charlielito/repos", "events_url": "https://api.github.com/users/charlielito/events{/privacy}", "received_events_url": "https://api.github.com/users/charlielito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T16:50:16Z", "updated_at": "2019-10-25T19:36:46Z", "closed_at": "2019-10-25T19:36:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "`imgaug` has this method called `to_deterministic` that returns a transform that the first time it is called it behaves randomly but after that, all calls are with the random parameters from the first call. \r\nIs there a way to do this for a transform in albumentations\u00bf?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/363", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/363/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/363/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/363", "id": 495810799, "node_id": "MDU6SXNzdWU0OTU4MTA3OTk=", "number": 363, "title": "Contributions not possible without forking", "user": {"login": "nsfabina", "id": 545940, "node_id": "MDQ6VXNlcjU0NTk0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/545940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsfabina", "html_url": "https://github.com/nsfabina", "followers_url": "https://api.github.com/users/nsfabina/followers", "following_url": "https://api.github.com/users/nsfabina/following{/other_user}", "gists_url": "https://api.github.com/users/nsfabina/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsfabina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsfabina/subscriptions", "organizations_url": "https://api.github.com/users/nsfabina/orgs", "repos_url": "https://api.github.com/users/nsfabina/repos", "events_url": "https://api.github.com/users/nsfabina/events{/privacy}", "received_events_url": "https://api.github.com/users/nsfabina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-19T13:46:48Z", "updated_at": "2019-09-23T02:19:28Z", "closed_at": "2019-09-23T02:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nContributions are not possible without forking.\r\n\r\nProject needs to have permissions updated or documentation modified to explain fork -> modify -> PR process.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/361", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/361/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/361/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/361", "id": 495747632, "node_id": "MDU6SXNzdWU0OTU3NDc2MzI=", "number": 361, "title": "RandomFog and other augmentations can get stuck in infinite while loops", "user": {"login": "nsfabina", "id": 545940, "node_id": "MDQ6VXNlcjU0NTk0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/545940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsfabina", "html_url": "https://github.com/nsfabina", "followers_url": "https://api.github.com/users/nsfabina/followers", "following_url": "https://api.github.com/users/nsfabina/following{/other_user}", "gists_url": "https://api.github.com/users/nsfabina/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsfabina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsfabina/subscriptions", "organizations_url": "https://api.github.com/users/nsfabina/orgs", "repos_url": "https://api.github.com/users/nsfabina/repos", "events_url": "https://api.github.com/users/nsfabina/events{/privacy}", "received_events_url": "https://api.github.com/users/nsfabina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T11:45:29Z", "updated_at": "2019-09-20T15:41:35Z", "closed_at": "2019-09-20T15:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nRandomFog (and other augmentations with while loops) may get stuck in infinite while loops under certain conditions. At least one of those conditions is when an image has been augmented prior to RandomFog being applied.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nI was able to get this bug with an image using the following compose operation:\r\n```\r\n    return albumentations.Compose([\r\n        albumentations.RGBShift(r_shift_limit=0.2, g_shift_limit=0.2, b_shift_limit=0.2, p=1),\r\n        albumentations.RandomFog(fog_coef_lower=0, fog_coef_upper=1, alpha_coef=0.08, p=1),\r\n    ])\r\n```\r\nAfter ~2 mins of waiting, I interrupted and the code was still here\r\n```\r\n~/miniconda3/envs/asu/lib/python3.7/site-packages/albumentations/augmentations/transforms.py in get_params_dependent_on_targets(self, params)\r\n   1609\r\n   1610         while midx > -hw or midy > - hw:\r\n-> 1611             for i in range(hw // 10 * index):\r\n   1612                 x = random.randint(midx, width - midx - hw)\r\n   1613                 y = random.randint(midy, height - midy - hw)\r\n```\r\n\r\n## Expected behavior\r\n\r\nA few thoughts after testing the library:\r\n- many augmentations appear to be order-of-operations dependent, might be worth putting a note in the documentation about how results can vary drastically depending on this order\r\n- specifically for RandomFog and other augmentations where results depend on the image properties, perhaps a warning that they should be applied first, or perhaps a warning that they can have suboptimal interactions with other augmentations\r\n- augmentations with while loops may need some sort of time- or iteration-based limit to avoid hangs or excessive pre-processing\r\n- (that's all I've got, sorry, it's still early here!)\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8):  albumentations==0.3.3\r\n - Python version (e.g., 3.7):  3.7\r\n - OS (e.g., Linux):  OSX\r\n - How you installed albumentations (`conda`, `pip`, source): conda\r\n - Any other relevant information: nope\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/357", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/357/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/357/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/357", "id": 495102671, "node_id": "MDU6SXNzdWU0OTUxMDI2NzE=", "number": 357, "title": "ToTensorV2 does not use additional targets", "user": {"login": "albu", "id": 1128788, "node_id": "MDQ6VXNlcjExMjg3ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1128788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albu", "html_url": "https://github.com/albu", "followers_url": "https://api.github.com/users/albu/followers", "following_url": "https://api.github.com/users/albu/following{/other_user}", "gists_url": "https://api.github.com/users/albu/gists{/gist_id}", "starred_url": "https://api.github.com/users/albu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albu/subscriptions", "organizations_url": "https://api.github.com/users/albu/orgs", "repos_url": "https://api.github.com/users/albu/repos", "events_url": "https://api.github.com/users/albu/events{/privacy}", "received_events_url": "https://api.github.com/users/albu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-18T09:26:57Z", "updated_at": "2019-09-19T13:37:41Z", "closed_at": "2019-09-19T13:37:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We also want to apply ToTensorV2 to additional targets but it haven't been done in initial PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/356", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/356/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/356/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/356", "id": 495022442, "node_id": "MDU6SXNzdWU0OTUwMjI0NDI=", "number": 356, "title": "probability 1.0 not working", "user": {"login": "sonfire86", "id": 26105224, "node_id": "MDQ6VXNlcjI2MTA1MjI0", "avatar_url": "https://avatars0.githubusercontent.com/u/26105224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonfire86", "html_url": "https://github.com/sonfire86", "followers_url": "https://api.github.com/users/sonfire86/followers", "following_url": "https://api.github.com/users/sonfire86/following{/other_user}", "gists_url": "https://api.github.com/users/sonfire86/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonfire86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonfire86/subscriptions", "organizations_url": "https://api.github.com/users/sonfire86/orgs", "repos_url": "https://api.github.com/users/sonfire86/repos", "events_url": "https://api.github.com/users/sonfire86/events{/privacy}", "received_events_url": "https://api.github.com/users/sonfire86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-18T06:46:11Z", "updated_at": "2019-09-18T07:08:14Z", "closed_at": "2019-09-18T07:08:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "probability with a value of 1.0 does not always work. There should be a 100% response, but in the next 80%\r\n\r\n```\r\nimage = cv2.imread(i)\r\naug = A.Blur(p=1, blur_limit = 9)\r\nimage = aug(image=image)['image']\r\n```\r\n\r\nWindows 10\r\nalbumentations 0.3.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/355", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/355/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/355/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/355", "id": 494585403, "node_id": "MDU6SXNzdWU0OTQ1ODU0MDM=", "number": 355, "title": "can't import albumentations.torch in latest version", "user": {"login": "ChenJiaDong9219", "id": 19198964, "node_id": "MDQ6VXNlcjE5MTk4OTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/19198964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChenJiaDong9219", "html_url": "https://github.com/ChenJiaDong9219", "followers_url": "https://api.github.com/users/ChenJiaDong9219/followers", "following_url": "https://api.github.com/users/ChenJiaDong9219/following{/other_user}", "gists_url": "https://api.github.com/users/ChenJiaDong9219/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChenJiaDong9219/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChenJiaDong9219/subscriptions", "organizations_url": "https://api.github.com/users/ChenJiaDong9219/orgs", "repos_url": "https://api.github.com/users/ChenJiaDong9219/repos", "events_url": "https://api.github.com/users/ChenJiaDong9219/events{/privacy}", "received_events_url": "https://api.github.com/users/ChenJiaDong9219/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T12:13:08Z", "updated_at": "2019-09-17T12:14:05Z", "closed_at": "2019-09-17T12:14:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\nI installed this package about 3 days ago, then I could import albumentations.torch.\r\nI reinstalled this package today, I couldn't import albumentations.torch. Then after I reverted to the two days older version, I could.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/354", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/354/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/354/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/354", "id": 494514541, "node_id": "MDU6SXNzdWU0OTQ1MTQ1NDE=", "number": 354, "title": "all the input arrays must have same number of dimensions", "user": {"login": "hazardwayne", "id": 45623193, "node_id": "MDQ6VXNlcjQ1NjIzMTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/45623193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hazardwayne", "html_url": "https://github.com/hazardwayne", "followers_url": "https://api.github.com/users/hazardwayne/followers", "following_url": "https://api.github.com/users/hazardwayne/following{/other_user}", "gists_url": "https://api.github.com/users/hazardwayne/gists{/gist_id}", "starred_url": "https://api.github.com/users/hazardwayne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hazardwayne/subscriptions", "organizations_url": "https://api.github.com/users/hazardwayne/orgs", "repos_url": "https://api.github.com/users/hazardwayne/repos", "events_url": "https://api.github.com/users/hazardwayne/events{/privacy}", "received_events_url": "https://api.github.com/users/hazardwayne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-09-17T09:41:02Z", "updated_at": "2019-09-23T08:25:37Z", "closed_at": "2019-09-23T08:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nwhen i use the notebook from https://github.com/qubvel/segmentation_models/blob/master/examples/multiclass%20segmentation%20(camvid).ipynb, with Resize transform turn on, raises the above error.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n - Albumentations version (0.3.3):\r\n - Python version (3.6):\r\n - OS (Linux):\r\n - How you installed albumentations (`pip`):\r\n - Any other relevant information: segmentation models version(1.0.0)\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/351", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/351/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/351/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/351", "id": 493685098, "node_id": "MDU6SXNzdWU0OTM2ODUwOTg=", "number": 351, "title": "no attribute 'Equalize'", "user": {"login": "vadik6666", "id": 8616777, "node_id": "MDQ6VXNlcjg2MTY3Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8616777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadik6666", "html_url": "https://github.com/vadik6666", "followers_url": "https://api.github.com/users/vadik6666/followers", "following_url": "https://api.github.com/users/vadik6666/following{/other_user}", "gists_url": "https://api.github.com/users/vadik6666/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadik6666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadik6666/subscriptions", "organizations_url": "https://api.github.com/users/vadik6666/orgs", "repos_url": "https://api.github.com/users/vadik6666/repos", "events_url": "https://api.github.com/users/vadik6666/events{/privacy}", "received_events_url": "https://api.github.com/users/vadik6666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-15T01:54:41Z", "updated_at": "2019-09-16T09:35:56Z", "closed_at": "2019-09-15T17:21:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "How should I use Equalize? \r\nI tried\r\n```\r\nimport albumentations as A\r\nprint(A.__version__)\r\naug = A.Equalize()\r\n```\r\nand got `AttributeError: module 'albumentations' has no attribute 'Equalize'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/343", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/343/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/343/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/343", "id": 490786389, "node_id": "MDU6SXNzdWU0OTA3ODYzODk=", "number": 343, "title": "TypeError: 'int' object is not subscriptable for RandomGamma show", "user": {"login": "Rishi5583", "id": 17529836, "node_id": "MDQ6VXNlcjE3NTI5ODM2", "avatar_url": "https://avatars0.githubusercontent.com/u/17529836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rishi5583", "html_url": "https://github.com/Rishi5583", "followers_url": "https://api.github.com/users/Rishi5583/followers", "following_url": "https://api.github.com/users/Rishi5583/following{/other_user}", "gists_url": "https://api.github.com/users/Rishi5583/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rishi5583/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rishi5583/subscriptions", "organizations_url": "https://api.github.com/users/Rishi5583/orgs", "repos_url": "https://api.github.com/users/Rishi5583/repos", "events_url": "https://api.github.com/users/Rishi5583/events{/privacy}", "received_events_url": "https://api.github.com/users/Rishi5583/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-08T18:25:14Z", "updated_at": "2019-09-11T17:23:44Z", "closed_at": "2019-09-11T17:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nalbumentations.RandomGamma is showing  by cv2 : 'int' object is not subscriptable. same problem in google colab also \r\nalbumentations\\augmentations\\transforms.py\", line 2122, in get_params\r\n    'gamma': np.random.randint(int(self.gamma_limit[0]), int(self.gamma_limit[1])) / 100.0\r\nTypeError: 'int' object is not subscriptable.\r\n## To Reproduce\r\ndef augment_and_show(aug, image):\r\n    image = aug(image=image)['image']\r\n    cv2.imshow('im',image)\r\n\r\n>>> aug=RandomGamma(gamma_limit=70, p=1)\r\n>>> augment_and_show(aug, image)\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1.simple following the example:\r\nIn [7]:\r\n\r\ndef augment_and_show(aug, image):\r\n    image = aug(image=image)['image']\r\n    plt.figure(figsize=(10, 10))\r\n    plt.imshow(image)\r\n\r\nIn [8]:\r\n\r\naug = HorizontalFlip(p=1)\r\naugment_and_show(aug, image)\r\n1.\r\n1.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\ntried in transforms.py \r\nby changing : gamma': np.random.randint(int(self.gamma_limit[0]), int(self.gamma_limit[1])) / 100.0\r\nIt works only one time , after that again same error is showing, any clue ?\r\n\r\n\r\n## Environment\r\n\r\n - Albumentations version (e.g., 0.1.8):\r\n - Python version (e.g., 3.6.8):\r\n - win 10 \r\n - How you installed albumentations (` `pip`, source):\r\n - Any other relevant information:\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/327", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/327/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/327/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/327", "id": 485732731, "node_id": "MDU6SXNzdWU0ODU3MzI3MzE=", "number": 327, "title": "Unsupported Annontations", "user": {"login": "MentalGear", "id": 2837147, "node_id": "MDQ6VXNlcjI4MzcxNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2837147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MentalGear", "html_url": "https://github.com/MentalGear", "followers_url": "https://api.github.com/users/MentalGear/followers", "following_url": "https://api.github.com/users/MentalGear/following{/other_user}", "gists_url": "https://api.github.com/users/MentalGear/gists{/gist_id}", "starred_url": "https://api.github.com/users/MentalGear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MentalGear/subscriptions", "organizations_url": "https://api.github.com/users/MentalGear/orgs", "repos_url": "https://api.github.com/users/MentalGear/repos", "events_url": "https://api.github.com/users/MentalGear/events{/privacy}", "received_events_url": "https://api.github.com/users/MentalGear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-27T10:44:24Z", "updated_at": "2019-08-27T12:25:14Z", "closed_at": "2019-08-27T11:05:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was a bit surprised that some bounding/mask/annotation data was not supported on filters like \"ElasticTransform\", since they are available and supported on the imgaug library.\r\nAs this library aims to be a wrapper for those augmentation libraries, it would be great if it would also support their annontation spectrum.\r\n`NotImplementedError: Method apply_to_bbox is not implemented in class ElasticTransform`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/326", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/326/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/326/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/326", "id": 484871608, "node_id": "MDU6SXNzdWU0ODQ4NzE2MDg=", "number": 326, "title": "image specific parameters, custom transform", "user": {"login": "rpgit12", "id": 15933987, "node_id": "MDQ6VXNlcjE1OTMzOTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/15933987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgit12", "html_url": "https://github.com/rpgit12", "followers_url": "https://api.github.com/users/rpgit12/followers", "following_url": "https://api.github.com/users/rpgit12/following{/other_user}", "gists_url": "https://api.github.com/users/rpgit12/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgit12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgit12/subscriptions", "organizations_url": "https://api.github.com/users/rpgit12/orgs", "repos_url": "https://api.github.com/users/rpgit12/repos", "events_url": "https://api.github.com/users/rpgit12/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgit12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-24T23:15:58Z", "updated_at": "2019-09-14T14:09:27Z", "closed_at": "2019-09-14T14:09:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to pass parameters along with images into the pipeline? That would allow adjusting the transformations based on specific image properties.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/323", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/323/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/323/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/323", "id": 484360628, "node_id": "MDU6SXNzdWU0ODQzNjA2Mjg=", "number": 323, "title": "Bounding Boxes Example", "user": {"login": "MentalGear", "id": 2837147, "node_id": "MDQ6VXNlcjI4MzcxNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2837147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MentalGear", "html_url": "https://github.com/MentalGear", "followers_url": "https://api.github.com/users/MentalGear/followers", "following_url": "https://api.github.com/users/MentalGear/following{/other_user}", "gists_url": "https://api.github.com/users/MentalGear/gists{/gist_id}", "starred_url": "https://api.github.com/users/MentalGear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MentalGear/subscriptions", "organizations_url": "https://api.github.com/users/MentalGear/orgs", "repos_url": "https://api.github.com/users/MentalGear/repos", "events_url": "https://api.github.com/users/MentalGear/events{/privacy}", "received_events_url": "https://api.github.com/users/MentalGear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-23T06:53:46Z", "updated_at": "2019-08-24T14:55:51Z", "closed_at": "2019-08-23T15:22:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\nVery interesting library, though it would be great if we could have an example on how to use if we need Bounding Box support. Espeically, if we want to retain the label(id) of the bounding box.\r\n\r\nExample: Picture with a bootle and a glass. How does one not only specifiy the coordinates of the BB but also the names ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/322", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/322/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/322/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/322", "id": 483990385, "node_id": "MDU6SXNzdWU0ODM5OTAzODU=", "number": 322, "title": "Enhancement: Add inverse for geometric transformations", "user": {"login": "VasLem", "id": 18720200, "node_id": "MDQ6VXNlcjE4NzIwMjAw", "avatar_url": "https://avatars0.githubusercontent.com/u/18720200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VasLem", "html_url": "https://github.com/VasLem", "followers_url": "https://api.github.com/users/VasLem/followers", "following_url": "https://api.github.com/users/VasLem/following{/other_user}", "gists_url": "https://api.github.com/users/VasLem/gists{/gist_id}", "starred_url": "https://api.github.com/users/VasLem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VasLem/subscriptions", "organizations_url": "https://api.github.com/users/VasLem/orgs", "repos_url": "https://api.github.com/users/VasLem/repos", "events_url": "https://api.github.com/users/VasLem/events{/privacy}", "received_events_url": "https://api.github.com/users/VasLem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-22T13:19:46Z", "updated_at": "2019-08-22T13:32:24Z", "closed_at": "2019-08-22T13:25:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In order to perform comparison between geometrically altered images (eg. TTA), there should be a way to perform the inverse transformation from the one issued on a sample. To accomplish this we need:\r\n- A memory to keep up with what transformations were applied to each image\r\n- An inverse transform for each transformation, or an inverse approximation(eg. for interpolations). If such thing is not implemented or cannot be done, a suitable exception will be raised.\r\n\r\nIs this sth that is generally wanted or is it quite an overkill?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/321", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/321/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/321/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/321", "id": 482741173, "node_id": "MDU6SXNzdWU0ODI3NDExNzM=", "number": 321, "title": "PadIfNeeded got an unexpected keyword argument 'mask_value'", "user": {"login": "wangyunpengbio", "id": 19491433, "node_id": "MDQ6VXNlcjE5NDkxNDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/19491433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangyunpengbio", "html_url": "https://github.com/wangyunpengbio", "followers_url": "https://api.github.com/users/wangyunpengbio/followers", "following_url": "https://api.github.com/users/wangyunpengbio/following{/other_user}", "gists_url": "https://api.github.com/users/wangyunpengbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangyunpengbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangyunpengbio/subscriptions", "organizations_url": "https://api.github.com/users/wangyunpengbio/orgs", "repos_url": "https://api.github.com/users/wangyunpengbio/repos", "events_url": "https://api.github.com/users/wangyunpengbio/events{/privacy}", "received_events_url": "https://api.github.com/users/wangyunpengbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-20T09:15:19Z", "updated_at": "2019-08-20T16:35:20Z", "closed_at": "2019-08-20T16:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\n<!-- A clear and concise description of what content in https://albumentations.readthedocs.io is an issue. -->\r\nIn the documentation, the **PadIfNeeded** has the argument **mask_value**. However, when I use this function, it fails because of no keyword **mask_value**.\r\n**albumentations         0.3.0**\r\nI install from `pip install albumentations`\r\nIsn't this the latest version? Look forward to your reply", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/313", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/313/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/313/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/313", "id": 480802541, "node_id": "MDU6SXNzdWU0ODA4MDI1NDE=", "number": 313, "title": "GaussNoise not centered at 0", "user": {"login": "TontonTremblay", "id": 5629088, "node_id": "MDQ6VXNlcjU2MjkwODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5629088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TontonTremblay", "html_url": "https://github.com/TontonTremblay", "followers_url": "https://api.github.com/users/TontonTremblay/followers", "following_url": "https://api.github.com/users/TontonTremblay/following{/other_user}", "gists_url": "https://api.github.com/users/TontonTremblay/gists{/gist_id}", "starred_url": "https://api.github.com/users/TontonTremblay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TontonTremblay/subscriptions", "organizations_url": "https://api.github.com/users/TontonTremblay/orgs", "repos_url": "https://api.github.com/users/TontonTremblay/repos", "events_url": "https://api.github.com/users/TontonTremblay/events{/privacy}", "received_events_url": "https://api.github.com/users/TontonTremblay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-14T17:37:34Z", "updated_at": "2019-08-20T04:50:34Z", "closed_at": "2019-08-20T04:50:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nWe were looking at the GaussNoise function and noticed that the noise is not centered at zero. \r\n\r\nhttps://github.com/albu/albumentations/blob/master/albumentations/augmentations/transforms.py#L1814\r\n\r\nIs that on purpose? We have a PR ready for that one if you are interested. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/308", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/308/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/308/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/308", "id": 475744701, "node_id": "MDU6SXNzdWU0NzU3NDQ3MDE=", "number": 308, "title": "Normalized mask??", "user": {"login": "jlevy44", "id": 19698023, "node_id": "MDQ6VXNlcjE5Njk4MDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/19698023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlevy44", "html_url": "https://github.com/jlevy44", "followers_url": "https://api.github.com/users/jlevy44/followers", "following_url": "https://api.github.com/users/jlevy44/following{/other_user}", "gists_url": "https://api.github.com/users/jlevy44/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlevy44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlevy44/subscriptions", "organizations_url": "https://api.github.com/users/jlevy44/orgs", "repos_url": "https://api.github.com/users/jlevy44/repos", "events_url": "https://api.github.com/users/jlevy44/events{/privacy}", "received_events_url": "https://api.github.com/users/jlevy44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-01T15:21:16Z", "updated_at": "2019-08-05T16:41:37Z", "closed_at": "2019-08-05T16:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. Great package. \r\n\r\nI seem to be having a big issue though, and I'm not sure why this is occurring now. I'm feeding in my image and mask into albumentations transformer.\r\n\r\n```\r\nalbtorch.transforms.ToTensor(normalize=...\r\n```\r\n\r\nThere is a totensor and normalization portion of the composed transformer. For some reason, my masks are going from (pysnooper):\r\n```\r\nmask = array([[2, 2, 2, ..., 2, 2, 2],       [2, 2, 2,...0],       [0, 0, 1, ..., 0, 0, 0]], dtype=uint8)\r\n```\r\nto \r\n```\r\nmask = tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0078, ... 0.0078, 0.0078,  ..., 0.0000, 0.0000, 0.0000]]])\r\n```\r\nShould I separate the normalizer and only apply it to the image pytorch tensor?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/306", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/306/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/306/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/306", "id": 474047579, "node_id": "MDU6SXNzdWU0NzQwNDc1Nzk=", "number": 306, "title": "GaussNoise makes black and white rectanles instead of images.", "user": {"login": "MichaelMonashev", "id": 6323434, "node_id": "MDQ6VXNlcjYzMjM0MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6323434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MichaelMonashev", "html_url": "https://github.com/MichaelMonashev", "followers_url": "https://api.github.com/users/MichaelMonashev/followers", "following_url": "https://api.github.com/users/MichaelMonashev/following{/other_user}", "gists_url": "https://api.github.com/users/MichaelMonashev/gists{/gist_id}", "starred_url": "https://api.github.com/users/MichaelMonashev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MichaelMonashev/subscriptions", "organizations_url": "https://api.github.com/users/MichaelMonashev/orgs", "repos_url": "https://api.github.com/users/MichaelMonashev/repos", "events_url": "https://api.github.com/users/MichaelMonashev/events{/privacy}", "received_events_url": "https://api.github.com/users/MichaelMonashev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-29T13:19:57Z", "updated_at": "2019-07-31T18:04:44Z", "closed_at": "2019-07-29T19:55:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\n\r\n\u041f\u043e\u0441\u043b\u0435 \u0430\u0443\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0447\u0430\u0441\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043a\u0430\u043a \u0447\u0451\u0440\u043d\u044b\u0439 \u0438\u043b\u0438 \u0431\u0435\u043b\u044b\u0439 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a. \u041f\u0440\u0438\u043c\u0435\u0440: https://prnt.sc/oli43a .\r\n\r\n## To Reproduce\r\n\r\n\u0412\u043e\u0442 \u0442\u0430\u043a\u0430\u044f \u0430\u0443\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u0430\u0451\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443:\r\n```\r\nIMG_HEIGHT = 96\r\nIMG_WIDTH = 48\r\n\r\n    def aug_train(p=1.0):\r\n        return Compose([\r\n            LongestMaxSize(max_size=max(IMG_HEIGHT, IMG_WIDTH)),\r\n            PadIfNeeded(min_height=IMG_HEIGHT, min_width=IMG_WIDTH),\r\n            GaussNoise(),\r\n            ToGray(p=1.0),\r\n            Cutout(),\r\n        ], p=p)\r\n```\r\n\r\n\u0431\u0435\u0437 GaussNoise(), \u0432\u0441\u0451 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u043e.\r\n\r\n## Expected behavior\r\n\r\n\u0410\u0443\u0433\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0431\u0435\u0437 \u0447\u0451\u0440\u043d\u044b\u0445 \u0438 \u0431\u0435\u043b\u044b\u0445 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u0432.\r\n\r\n## Environment\r\n\r\n\u0412\u0435\u0440\u0441\u0438\u044e \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0442\u043e \u043e\u0431\u043d\u043e\u0432\u0438\u043b \u0447\u0435\u0440\u0435\u0437 pip3 install -U git+https://github.com/albu/albumentations , \u043d\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0438\u0441\u0447\u0435\u0437\u043b\u0430.\r\nPython 3.5.3 (default, Sep 27 2018, 17:25:39)\r\n[GCC 6.3.0 20170516] on linux\r\nSMP Debian 4.9.88-1+deb9u1 (2018-05-07) x86_64 GNU/Linux\r\n\r\n## Additional context\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/300", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/300/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/300/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/300", "id": 471732452, "node_id": "MDU6SXNzdWU0NzE3MzI0NTI=", "number": 300, "title": "Add per-channel compose", "user": {"login": "jveitchmichaelis", "id": 3159591, "node_id": "MDQ6VXNlcjMxNTk1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3159591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jveitchmichaelis", "html_url": "https://github.com/jveitchmichaelis", "followers_url": "https://api.github.com/users/jveitchmichaelis/followers", "following_url": "https://api.github.com/users/jveitchmichaelis/following{/other_user}", "gists_url": "https://api.github.com/users/jveitchmichaelis/gists{/gist_id}", "starred_url": "https://api.github.com/users/jveitchmichaelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jveitchmichaelis/subscriptions", "organizations_url": "https://api.github.com/users/jveitchmichaelis/orgs", "repos_url": "https://api.github.com/users/jveitchmichaelis/repos", "events_url": "https://api.github.com/users/jveitchmichaelis/events{/privacy}", "received_events_url": "https://api.github.com/users/jveitchmichaelis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-23T14:31:03Z", "updated_at": "2019-08-09T15:33:13Z", "closed_at": "2019-08-09T15:33:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've added a new composition function to apply transformations on a per-channel basis. My particular application is to simulate inter-band misalignment in satellite imagery, but I can imagine other uses (for example to simulate fringing/aberration). I initially wrote a transform to do per-channel affine shifts, but it seemed more useful to have a generic composer.\r\n\r\nHere's an example of usage:\r\n\r\n```\r\nPerChannel([ShiftScaleRotate(shift_limit=0.0125, scale_limit=0.01, rotate_limit=0.1)])\r\n```\r\n\r\nAnd a sample output:\r\n\r\n![Lenna](https://i.imgur.com/hxMQeSR.png)\r\n\r\nThe code is here: https://github.com/jveitchmichaelis/albumentations/blob/6fc672b80393464c9a52c9ba292715e834227e23/albumentations/core/composition.py#L310-L343\r\n\r\nI'm keen to have some feedback on a few things:\r\n\r\n* I've added some crude detection for mono images, in this case I expand the dimensions to keep the code compact. Is this OK or would a separate case help?\r\n* This works really well with ShiftScaleRotate to add colour fringing, but i'm assuming that this composer should really only use pixel-level transforms because it's not clear how the segmentation map should be modified. `PerChannel` doesn't ever touch segmentation masks/bboxes anyway.\r\n* I've added a couple of basic test cases for mono and multi-channel images. Anything more needed here?\r\n* I'm not too familiar with how transform probabilities are propagated, so it would be good to check if this is OK - e.g. the constructor takes a `p` which I think works as expected. I copied the structure for `OneOf`\r\n\r\nOtherwise I think it's good to review: https://github.com/albu/albumentations/pull/301", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/299", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/299/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/299/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/299", "id": 471580695, "node_id": "MDU6SXNzdWU0NzE1ODA2OTU=", "number": 299, "title": "how to print compose information like torchvision", "user": {"login": "valencebond", "id": 44313446, "node_id": "MDQ6VXNlcjQ0MzEzNDQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/44313446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valencebond", "html_url": "https://github.com/valencebond", "followers_url": "https://api.github.com/users/valencebond/followers", "following_url": "https://api.github.com/users/valencebond/following{/other_user}", "gists_url": "https://api.github.com/users/valencebond/gists{/gist_id}", "starred_url": "https://api.github.com/users/valencebond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valencebond/subscriptions", "organizations_url": "https://api.github.com/users/valencebond/orgs", "repos_url": "https://api.github.com/users/valencebond/repos", "events_url": "https://api.github.com/users/valencebond/events{/privacy}", "received_events_url": "https://api.github.com/users/valencebond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-23T09:20:12Z", "updated_at": "2019-07-29T19:57:54Z", "closed_at": "2019-07-29T19:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom torchvision.transforms import Compose, RandomCrop, ToTensor, RandomHorizontalFlip\r\ntrain_transform = Compose([\r\n        RandomCrop(256, 256),\r\n        RandomHorizontalFlip(),\r\n        ToTensor()\r\n    ])\r\nprint(train_transform)\r\n\r\n```\r\nget \r\n```\r\nCompose(\r\n    RandomCrop(size=(256, 256), padding=256)\r\n    RandomHorizontalFlip(p=0.5)\r\n    ToTensor()\r\n)\r\n```\r\n\r\nprint albumentations.Compose can not get detailed information", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/294", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/294/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/294/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/294", "id": 467819687, "node_id": "MDU6SXNzdWU0Njc4MTk2ODc=", "number": 294, "title": "ChannelDropout always dropout first channel.", "user": {"login": "lkhphuc", "id": 12573521, "node_id": "MDQ6VXNlcjEyNTczNTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/12573521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkhphuc", "html_url": "https://github.com/lkhphuc", "followers_url": "https://api.github.com/users/lkhphuc/followers", "following_url": "https://api.github.com/users/lkhphuc/following{/other_user}", "gists_url": "https://api.github.com/users/lkhphuc/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkhphuc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkhphuc/subscriptions", "organizations_url": "https://api.github.com/users/lkhphuc/orgs", "repos_url": "https://api.github.com/users/lkhphuc/repos", "events_url": "https://api.github.com/users/lkhphuc/events{/privacy}", "received_events_url": "https://api.github.com/users/lkhphuc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ternaus", "id": 5481618, "node_id": "MDQ6VXNlcjU0ODE2MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5481618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ternaus", "html_url": "https://github.com/ternaus", "followers_url": "https://api.github.com/users/ternaus/followers", "following_url": "https://api.github.com/users/ternaus/following{/other_user}", "gists_url": "https://api.github.com/users/ternaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ternaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ternaus/subscriptions", "organizations_url": "https://api.github.com/users/ternaus/orgs", "repos_url": "https://api.github.com/users/ternaus/repos", "events_url": "https://api.github.com/users/ternaus/events{/privacy}", "received_events_url": "https://api.github.com/users/ternaus/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ternaus", "id": 5481618, "node_id": "MDQ6VXNlcjU0ODE2MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5481618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ternaus", "html_url": "https://github.com/ternaus", "followers_url": "https://api.github.com/users/ternaus/followers", "following_url": "https://api.github.com/users/ternaus/following{/other_user}", "gists_url": "https://api.github.com/users/ternaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ternaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ternaus/subscriptions", "organizations_url": "https://api.github.com/users/ternaus/orgs", "repos_url": "https://api.github.com/users/ternaus/repos", "events_url": "https://api.github.com/users/ternaus/events{/privacy}", "received_events_url": "https://api.github.com/users/ternaus/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-07-14T10:21:29Z", "updated_at": "2019-07-20T22:00:20Z", "closed_at": "2019-07-20T22:00:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udc1b Bug\r\nChannelDropout only dropout the first channels of the image.\r\nWhen step in the debugger, error `AttributeError: 'ChannelDropout' object has no attribute 'channel_drop_range'` appears.\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\nRun each line in a Jupyter Notebook to shows stack traces.\r\n1. `import ChannelDropout`\r\n1. `ChannelDropout()`\r\n\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n/opt/anaconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj)\r\n    700                 type_pprinters=self.type_printers,\r\n    701                 deferred_pprinters=self.deferred_printers)\r\n--> 702             printer.pretty(obj)\r\n    703             printer.flush()\r\n    704             return stream.getvalue()\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/IPython/lib/pretty.py in pretty(self, obj)\r\n    400                         if cls is not object \\\r\n    401                                 and callable(cls.__dict__.get('__repr__')):\r\n--> 402                             return _repr_pprint(obj, self, cycle)\r\n    403 \r\n    404             return _default_pprint(obj, self, cycle)\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/IPython/lib/pretty.py in _repr_pprint(obj, p, cycle)\r\n    695     \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    696     # Find newlines and replace them with p.break_()\r\n--> 697     output = repr(obj)\r\n    698     for idx,output_line in enumerate(output.splitlines()):\r\n    699         if idx:\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/albumentations/core/transforms_interface.py in __repr__(self)\r\n     71     def __repr__(self):\r\n     72         state = self.get_base_init_args()\r\n---> 73         state.update(self.get_transform_init_args())\r\n     74         return '{name}({args})'.format(name=self.__class__.__name__, args=format_args(state))\r\n     75 \r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/albumentations/core/transforms_interface.py in get_transform_init_args(self)\r\n    147 \r\n    148     def get_transform_init_args(self):\r\n--> 149         return {k: getattr(self, k) for k in self.get_transform_init_args_names()}\r\n    150 \r\n    151     def _to_dict(self):\r\n\r\n/opt/anaconda3/lib/python3.7/site-packages/albumentations/core/transforms_interface.py in <dictcomp>(.0)\r\n    147 \r\n    148     def get_transform_init_args(self):\r\n--> 149         return {k: getattr(self, k) for k in self.get_transform_init_args_names()}\r\n    150 \r\n    151     def _to_dict(self):\r\n\r\nAttributeError: 'ChannelDropout' object has no attribute 'channel_drop_range'\r\n```\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\nA random channel is dropped everytime.\r\n\r\n## Environment\r\n\r\n - Albumentations version : 0.3.0\r\n - Python version : 3.7.3\r\n - OS (e.g., Linux): Linux\r\n - How you installed albumentations (`conda`, `pip`, source): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/albumentations-team/albumentations/issues/293", "repository_url": "https://api.github.com/repos/albumentations-team/albumentations", "labels_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/293/comments", "events_url": "https://api.github.com/repos/albumentations-team/albumentations/issues/293/events", "html_url": "https://github.com/albumentations-team/albumentations/issues/293", "id": 466874901, "node_id": "MDU6SXNzdWU0NjY4NzQ5MDE=", "number": 293, "title": "Please provide an example for augmentation and classification with pytorch", "user": {"login": "dreamflasher", "id": 31695, "node_id": "MDQ6VXNlcjMxNjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/31695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamflasher", "html_url": "https://github.com/dreamflasher", "followers_url": "https://api.github.com/users/dreamflasher/followers", "following_url": "https://api.github.com/users/dreamflasher/following{/other_user}", "gists_url": "https://api.github.com/users/dreamflasher/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamflasher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamflasher/subscriptions", "organizations_url": "https://api.github.com/users/dreamflasher/orgs", "repos_url": "https://api.github.com/users/dreamflasher/repos", "events_url": "https://api.github.com/users/dreamflasher/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamflasher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-11T12:53:59Z", "updated_at": "2019-07-12T22:09:41Z", "closed_at": "2019-07-12T22:09:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "## \ud83d\udcda Documentation\r\n\r\nREADME.md links to this: https://github.com/albu/albumentations/blob/master/notebooks/example.ipynb \u2013 with a title of \"classification\". But there is no classification inside.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}]}