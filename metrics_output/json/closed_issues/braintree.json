{"total_count": 84, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/braintree/braintree_python/issues/123", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/123/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/123/events", "html_url": "https://github.com/braintree/braintree_python/issues/123", "id": 670712882, "node_id": "MDU6SXNzdWU2NzA3MTI4ODI=", "number": 123, "title": "Cannot Update CreditCard as default payment method to FALSE", "user": {"login": "TheAshwanik", "id": 2206818, "node_id": "MDQ6VXNlcjIyMDY4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2206818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheAshwanik", "html_url": "https://github.com/TheAshwanik", "followers_url": "https://api.github.com/users/TheAshwanik/followers", "following_url": "https://api.github.com/users/TheAshwanik/following{/other_user}", "gists_url": "https://api.github.com/users/TheAshwanik/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheAshwanik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheAshwanik/subscriptions", "organizations_url": "https://api.github.com/users/TheAshwanik/orgs", "repos_url": "https://api.github.com/users/TheAshwanik/repos", "events_url": "https://api.github.com/users/TheAshwanik/events{/privacy}", "received_events_url": "https://api.github.com/users/TheAshwanik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-01T09:47:05Z", "updated_at": "2020-08-04T15:44:18Z", "closed_at": "2020-08-03T16:34:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- Only open an issue here if you think you've found an issue with our SDK. If you need help troubleshooting your integration, reach out to Braintree Support at https://help.braintreepayments.com. -->\r\n\r\n### General information\r\n\r\n* SDK/Library version: \r\n$ cat /app/.local/lib/python3.7/site-packages/braintree/version.py\r\nVersion = \"4.2.0\"\r\n\r\n* Environment: Sandbox\r\n\r\n* Language, language version, and OS:  Python 3\r\n\r\n### Issue description\r\n\r\n i am able to update a credit card as default payment method for the selected customer using this code.\r\n\r\n```\r\nresult = braintree.CreditCard.update(token,{\r\n         \"options\": {\r\n                       \"make_default\": True,\r\n         },\r\n})\r\n```\r\n\r\n**But I am not able to make same card as non_default . This does not work:**\r\n\r\n```\r\nresult = braintree.CreditCard.update(token,{\r\n         \"options\": {\r\n                       \"make_default\": False,\r\n         },\r\n})\r\n```\r\n\r\nI have some assumption , just wanted to check.\r\nIs it not working because there must be one creditCard set as default? and by make it false, it does not allow me?\r\n\r\nDoes it mean - make_default can only make some payment method as True and not False?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/122", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/122/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/122/events", "html_url": "https://github.com/braintree/braintree_python/issues/122", "id": 655757237, "node_id": "MDU6SXNzdWU2NTU3NTcyMzc=", "number": 122, "title": "Dates are in utc?", "user": {"login": "Noushida", "id": 30041568, "node_id": "MDQ6VXNlcjMwMDQxNTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/30041568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noushida", "html_url": "https://github.com/Noushida", "followers_url": "https://api.github.com/users/Noushida/followers", "following_url": "https://api.github.com/users/Noushida/following{/other_user}", "gists_url": "https://api.github.com/users/Noushida/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noushida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noushida/subscriptions", "organizations_url": "https://api.github.com/users/Noushida/orgs", "repos_url": "https://api.github.com/users/Noushida/repos", "events_url": "https://api.github.com/users/Noushida/events{/privacy}", "received_events_url": "https://api.github.com/users/Noushida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T10:57:40Z", "updated_at": "2020-07-13T14:38:19Z", "closed_at": "2020-07-13T14:38:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\nIs Settlement date  and created date of transaction search result are in utc or local?\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/121", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/121/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/121/events", "html_url": "https://github.com/braintree/braintree_python/issues/121", "id": 584840288, "node_id": "MDU6SXNzdWU1ODQ4NDAyODg=", "number": 121, "title": "braintree_subscription first_billing_date not in GMT timezone", "user": {"login": "anu-kailash", "id": 56872944, "node_id": "MDQ6VXNlcjU2ODcyOTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/56872944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anu-kailash", "html_url": "https://github.com/anu-kailash", "followers_url": "https://api.github.com/users/anu-kailash/followers", "following_url": "https://api.github.com/users/anu-kailash/following{/other_user}", "gists_url": "https://api.github.com/users/anu-kailash/gists{/gist_id}", "starred_url": "https://api.github.com/users/anu-kailash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anu-kailash/subscriptions", "organizations_url": "https://api.github.com/users/anu-kailash/orgs", "repos_url": "https://api.github.com/users/anu-kailash/repos", "events_url": "https://api.github.com/users/anu-kailash/events{/privacy}", "received_events_url": "https://api.github.com/users/anu-kailash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T04:40:26Z", "updated_at": "2020-03-20T14:50:14Z", "closed_at": "2020-03-20T14:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.56\r\n* Environment: Sandbox\r\n* Language, language version, and OS: Irrespective of Python version. Test on 2.7 and 3 on Debian Stretch\r\n\r\n### Issue description\r\nWe create a new subscription with an yearly plan and ensure that the subscription created date matches today's date. However, when we compare the first billing date with today's date + 1 year, it does not match until the time is past 5:00AM GMT. If the same test is run immediately after 5:00AM GMT it passes.\r\n\r\nLooks like the first billing date is calculated in a different timezone (GMT - 5) while the created time is based on GMT.\r\n\r\ntest snippet=============================================================\r\n```\r\n    def test_create_subscription_for_prepaid_account_no_date(self):\r\n        # given\r\n        prepaid_account = create_bt_prepaid_account_with_card_on_plan(\r\n            self.session, subscription_plan_id=self.TEST_PLAN)\r\n\r\n        # when\r\n        subscription = self.braintree_subscription.create(\r\n            prepaid_account,\r\n            None)\r\n\r\n        # then\r\n        braintree_subs = braintree.Subscription.find(\r\n            subscription.subscription_id\r\n        )\r\n        self.assertEqual(braintree_subs.plan_id, self.TEST_PLAN)\r\n        self.assertEqual(braintree_subs.created_at.date(),\r\n                         datetime.date.today())\r\n        **self.assertEqual(\r\n            braintree_subs.first_billing_date,\r\n            datetime.date.today() + relativedelta(years=1))**\r\n```\r\n======================================================================\r\n```\r\nFAIL: bnkpcore.test.services.subscriptions.braintree:BraintreeSubscriptionTest.test_create_subscription_for_prepaid_account_no_date\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/src/bnkpcore/test/services/subscriptions/braintree.py\", line 53, in test_create_subscription_for_prepaid_account_no_date\r\n    datetime.date.today() + relativedelta(months=12))\r\nAssertionError: datetime.date(2021, 3, 19) != datetime.date(2021, 3, 20)\r\n```\r\n\r\nTEST_PLAN used ========================================================\r\n\r\nPlan ID\r\n    yearly\r\nName\r\n    yearly\r\nDescription\r\nPrice\r\n    \u00a310.00 GBP\r\n\r\nTrial Period\r\n\r\nDuration\r\n    12 months\r\n\r\nBilling Details\r\n\r\nBilling Cycle\r\n    Every 12 Month(s)\r\nBilling Start\r\n    Immediately after trial\r\nNumber of Billing Cycles\r\n    Never Expires\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/118", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/118/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/118/events", "html_url": "https://github.com/braintree/braintree_python/issues/118", "id": 550654419, "node_id": "MDU6SXNzdWU1NTA2NTQ0MTk=", "number": 118, "title": "Issues with plan:all method and search customers", "user": {"login": "ngodichat", "id": 11161907, "node_id": "MDQ6VXNlcjExMTYxOTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/11161907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngodichat", "html_url": "https://github.com/ngodichat", "followers_url": "https://api.github.com/users/ngodichat/followers", "following_url": "https://api.github.com/users/ngodichat/following{/other_user}", "gists_url": "https://api.github.com/users/ngodichat/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngodichat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngodichat/subscriptions", "organizations_url": "https://api.github.com/users/ngodichat/orgs", "repos_url": "https://api.github.com/users/ngodichat/repos", "events_url": "https://api.github.com/users/ngodichat/events{/privacy}", "received_events_url": "https://api.github.com/users/ngodichat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-16T08:36:28Z", "updated_at": "2020-01-16T23:29:50Z", "closed_at": "2020-01-16T15:29:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.58.0\r\n* Environment: Sandbox \r\n* Language, language version, and OS:  Python 3.7.3 on Windows 10\r\n\r\n### Issue description\r\nI have 3 issues:\r\n\r\n1. I cannot search customers by their emails:\r\n```py\r\nimport braintree\r\n\r\ngateway = braintree.BraintreeGateway(access_token='access_token$')\r\ncollection = gateway.transaction.search([\r\n    braintree.TransactionSearch.customer_email != \"abc\"\r\n])\r\n\r\ncollection = gateway.customer.search(braintree.CustomerSearch.email != \"abc@gmail.com\")\r\nfor customer in collection.items:\r\n    print('first_name: ',customer)\r\n```\r\n\r\nThe server always return `Error: braintree.exceptions.server_error.ServerError`\r\n\r\n2. I can't get all plans by doing as written in the documentation, it always returns `braintree.exceptions.authorization_error.AuthorizationError: None` while there's no Resource-oriented OAuth scopes for this method. \r\nThe code is as follow:\r\n```py\r\nimport braintree\r\n\r\ngateway = braintree.BraintreeGateway(access_token='access_token$')\r\ncollection = gateway.plan.all()\r\n\r\ncollection = gateway.customer.search(braintree.CustomerSearch.email != \"abc@gmail.com\")\r\nfor plan in collection.items:\r\n    print('first_name: ', plan)\r\n```\r\n3. And I can't find the customer id in the search result of transaction, what is the best way to get that information?\r\n\r\nThank you very much!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/116", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/116/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/116/events", "html_url": "https://github.com/braintree/braintree_python/issues/116", "id": 531973123, "node_id": "MDU6SXNzdWU1MzE5NzMxMjM=", "number": 116, "title": "Braintree ID's Length", "user": {"login": "UmairShahzad", "id": 47004375, "node_id": "MDQ6VXNlcjQ3MDA0Mzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/47004375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/UmairShahzad", "html_url": "https://github.com/UmairShahzad", "followers_url": "https://api.github.com/users/UmairShahzad/followers", "following_url": "https://api.github.com/users/UmairShahzad/following{/other_user}", "gists_url": "https://api.github.com/users/UmairShahzad/gists{/gist_id}", "starred_url": "https://api.github.com/users/UmairShahzad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/UmairShahzad/subscriptions", "organizations_url": "https://api.github.com/users/UmairShahzad/orgs", "repos_url": "https://api.github.com/users/UmairShahzad/repos", "events_url": "https://api.github.com/users/UmairShahzad/events{/privacy}", "received_events_url": "https://api.github.com/users/UmairShahzad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T13:09:35Z", "updated_at": "2019-12-04T15:15:27Z", "closed_at": "2019-12-04T15:15:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.20.0\r\n* Environment: Sandbox & Production\r\n* Language, language version, and OS: Python 2.7 on Mac OS\r\n### Issue description\r\n\r\nThe Docs suggest that the subscription ID can consist of 36 characters max, however, the API or Braintree do not impose any such limits. I can create subscriptions with IDs of length even greater than 255. Is this the desired behaviour? Will braintree restrict this future or can I rely on ID's with length > 36?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/115", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/115/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/115/events", "html_url": "https://github.com/braintree/braintree_python/issues/115", "id": 523384710, "node_id": "MDU6SXNzdWU1MjMzODQ3MTA=", "number": 115, "title": "'BraintreeGateway' object has no attribute 'report'", "user": {"login": "dmitriyshashkin", "id": 11873939, "node_id": "MDQ6VXNlcjExODczOTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/11873939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitriyshashkin", "html_url": "https://github.com/dmitriyshashkin", "followers_url": "https://api.github.com/users/dmitriyshashkin/followers", "following_url": "https://api.github.com/users/dmitriyshashkin/following{/other_user}", "gists_url": "https://api.github.com/users/dmitriyshashkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitriyshashkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitriyshashkin/subscriptions", "organizations_url": "https://api.github.com/users/dmitriyshashkin/orgs", "repos_url": "https://api.github.com/users/dmitriyshashkin/repos", "events_url": "https://api.github.com/users/dmitriyshashkin/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitriyshashkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T10:23:49Z", "updated_at": "2019-11-15T22:56:55Z", "closed_at": "2019-11-15T22:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.57.1\r\n* Environment: Production\r\n* Language, language version, and OS: Python 3.7.0 on Fedora 29\r\n\r\n### Issue description\r\n\r\nI tried to access the report using the documentation here.\r\nhttps://developers.braintreepayments.com/reference/request/report/transaction-level-fees/python\r\n\r\nGot the following error: `AttributeError: 'BraintreeGateway' object has no attribute 'report'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/112", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/112/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/112/events", "html_url": "https://github.com/braintree/braintree_python/issues/112", "id": 415152209, "node_id": "MDU6SXNzdWU0MTUxNTIyMDk=", "number": 112, "title": "docs don't match code in braintree.transaction.Status", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-27T14:29:03Z", "updated_at": "2019-06-10T17:55:47Z", "closed_at": "2019-06-10T17:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/braintree/braintree_python/blob/e3347b2b81ad1ff0e6fecabfee72dccdc6cd9ec6/braintree/transaction.py#L205-L235\r\n\r\nThe docs list transaction status that aren't in the code (ex. `braintree.Transaction.Status.Void`) and the code lists status not in the docs (ex. `braintree.Transaction.Status.SettlementConfirmed`).  I assume the code is the one to rely on, but then why have the docs there?\r\n\r\nCode also lists `Unrecognized` but isn't in the official docs:  https://developers.braintreepayments.com/reference/response/transaction/python#status", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/109", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/109/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/109/events", "html_url": "https://github.com/braintree/braintree_python/issues/109", "id": 392411199, "node_id": "MDU6SXNzdWUzOTI0MTExOTk=", "number": 109, "title": "TypeError: cannot concatenate 'str' and 'NoneType' objects", "user": {"login": "sharifyounes", "id": 10647864, "node_id": "MDQ6VXNlcjEwNjQ3ODY0", "avatar_url": "https://avatars3.githubusercontent.com/u/10647864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharifyounes", "html_url": "https://github.com/sharifyounes", "followers_url": "https://api.github.com/users/sharifyounes/followers", "following_url": "https://api.github.com/users/sharifyounes/following{/other_user}", "gists_url": "https://api.github.com/users/sharifyounes/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharifyounes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharifyounes/subscriptions", "organizations_url": "https://api.github.com/users/sharifyounes/orgs", "repos_url": "https://api.github.com/users/sharifyounes/repos", "events_url": "https://api.github.com/users/sharifyounes/events{/privacy}", "received_events_url": "https://api.github.com/users/sharifyounes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-19T02:07:12Z", "updated_at": "2019-06-27T18:09:03Z", "closed_at": "2019-06-27T18:09:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I do `subscription.find(user.subscription_id)`, I get this error if `user.subscription_id==None`. I can of course change my code to:\r\n```\r\nif user.subscription_id:\r\n    subscription.find(user.subscription_id)\r\n```\r\nso no real issue here :)\r\n\r\nThe \"offending\" code is here:\r\nhttps://github.com/braintree/braintree_python/blob/master/braintree/subscription_gateway.py#L38\r\n\r\nAnd there's possibly a similar issue here (though it might be wise not to `repr(nonce)`, I'm not sure):\r\nhttps://github.com/braintree/braintree_python/blob/master/braintree/credit_card_gateway.py#L58\r\n\r\nSuggesting those should be, respectively,\r\n\r\n* `raise NotFoundError(\"subscription with id \" + repr(subscription_id) + \" not found\")`\r\n* `raise NotFoundError(\"payment method with nonce \" + repr(nonce) + \" locked, consumed or not found\")`\r\n\r\nTests:\r\n\r\nFor `test_subscription.py`:\r\n\r\n```\r\n    @raises(NotFoundError)\r\n    def test_finding_none_raises_not_found_exception(self):\r\n        Subscription.find(None)\r\n```\r\n\r\nFor `test_credit_card.py`:\r\n```\r\n    @raises(NotFoundError)\r\n    def test_from_nonce_as_none_raises_not_found_exception(self):\r\n        CreditCard.from_nonce(None)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/108", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/108/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/108/events", "html_url": "https://github.com/braintree/braintree_python/issues/108", "id": 392361355, "node_id": "MDU6SXNzdWUzOTIzNjEzNTU=", "number": 108, "title": "correct service for generating 'transaction_level_fee_reports'", "user": {"login": "xudongstadium", "id": 44806589, "node_id": "MDQ6VXNlcjQ0ODA2NTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/44806589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xudongstadium", "html_url": "https://github.com/xudongstadium", "followers_url": "https://api.github.com/users/xudongstadium/followers", "following_url": "https://api.github.com/users/xudongstadium/following{/other_user}", "gists_url": "https://api.github.com/users/xudongstadium/gists{/gist_id}", "starred_url": "https://api.github.com/users/xudongstadium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xudongstadium/subscriptions", "organizations_url": "https://api.github.com/users/xudongstadium/orgs", "repos_url": "https://api.github.com/users/xudongstadium/repos", "events_url": "https://api.github.com/users/xudongstadium/events{/privacy}", "received_events_url": "https://api.github.com/users/xudongstadium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-18T22:24:01Z", "updated_at": "2018-12-19T15:33:04Z", "closed_at": "2018-12-19T15:33:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: most recent version<!-- Example: 3.37.0 -->\r\n* Environment: Production <!-- Is this issue in Sandbox or Production? -->\r\n* Language, language version, and OS:  Windows Python 3.7<!-- Example: Python 2.7.0 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\nAfter reading the sample code on https://developers.braintreepayments.com/guides/reports/custom/python\r\nI parsed my first transaction response, but it is actually the report under 'Transaction Search', which has no info regarding the transaction fee; \r\n\r\nI know the sample use service 'gateway.transaction.search', so of course will generate 'Transaction Search',  Could anybody give me the hint of which service I should use to generate  'transaction_level_fee_reports'? which contains these info:\r\n(Discount Credit | Per Transaction Fee | Per Transaction Fee Credit | Braintree Total Amount | Multicurrency Fee Amount | Multicurrency Fee Credit | Total Fee   Amount)\r\n\r\nThanks in advance\r\n\r\n\r\n\r\n\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/107", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/107/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/107/events", "html_url": "https://github.com/braintree/braintree_python/issues/107", "id": 370383631, "node_id": "MDU6SXNzdWUzNzAzODM2MzE=", "number": 107, "title": "Recommended approach to unit/integration-tests for APIs wrapping this library", "user": {"login": "somada141", "id": 272419, "node_id": "MDQ6VXNlcjI3MjQxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/272419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/somada141", "html_url": "https://github.com/somada141", "followers_url": "https://api.github.com/users/somada141/followers", "following_url": "https://api.github.com/users/somada141/following{/other_user}", "gists_url": "https://api.github.com/users/somada141/gists{/gist_id}", "starred_url": "https://api.github.com/users/somada141/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/somada141/subscriptions", "organizations_url": "https://api.github.com/users/somada141/orgs", "repos_url": "https://api.github.com/users/somada141/repos", "events_url": "https://api.github.com/users/somada141/events{/privacy}", "received_events_url": "https://api.github.com/users/somada141/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-15T23:35:58Z", "updated_at": "2018-10-16T21:34:34Z", "closed_at": "2018-10-16T15:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.49.0\r\n* Environment: Sandbox\r\n* Language, language version, and OS: Python 3.6 on Ubuntu 16.04\r\n\r\n### Issue description\r\n\r\nTo my understanding Braintree essentially requires developers to develop a wrapper API around this library for use with a given app (I'm working on an Angular 6 app with Python backend APIs) in order to create/retrieve customers, generate tokens, create transactions/subscriptions etc.\r\n\r\nGiven that I was wondering what your recommended approach to testing said API is (referring primarily to unit-tests and integration-tests). \r\n- Per your example (https://github.com/braintree/braintree_flask_example) you seem to opt for mocking which fares well in unit-tests but not integration testing.\r\n- Your recommendation for https://github.com/venmo/btnamespace in the README is nice but to my understanding the library depends on monkey-patching and wouldn't allow for changes in the deployed version of Braintree to break the tests. What's more this library is rather limited in that they only patch a small number of the gateway methods.\r\n- My approach thus far has been to use a testing-specific sandbox which, however, makes testing fairly slow due to the round-trips and, as its not possible to programmatically purge a sandbox, ends up contaminated causing subsequent tests to fail.\r\n\r\nI've noticed that this library is tested via a `development` environment against a server that's supposed to be running on `localhost:3000`. Is there any chance for that development variant of Braintree to be released in order to allow for integration testing without depending on mocks or actual sandboxes? Even having a closed-source binary that'd integrate with this library would be very useful.\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/106", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/106/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/106/events", "html_url": "https://github.com/braintree/braintree_python/issues/106", "id": 366582023, "node_id": "MDU6SXNzdWUzNjY1ODIwMjM=", "number": 106, "title": "Feature Request: Ability to Log API Request & Response", "user": {"login": "npinchot", "id": 174529, "node_id": "MDQ6VXNlcjE3NDUyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/174529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npinchot", "html_url": "https://github.com/npinchot", "followers_url": "https://api.github.com/users/npinchot/followers", "following_url": "https://api.github.com/users/npinchot/following{/other_user}", "gists_url": "https://api.github.com/users/npinchot/gists{/gist_id}", "starred_url": "https://api.github.com/users/npinchot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npinchot/subscriptions", "organizations_url": "https://api.github.com/users/npinchot/orgs", "repos_url": "https://api.github.com/users/npinchot/repos", "events_url": "https://api.github.com/users/npinchot/events{/privacy}", "received_events_url": "https://api.github.com/users/npinchot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-04T00:48:53Z", "updated_at": "2018-10-11T21:27:55Z", "closed_at": "2018-10-11T21:27:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.48.0\r\n* Environment: All\r\n* Language, language version, and OS: Python 2.7.15 on Ubuntu 16.04.5 LTS\r\n\r\n### Issue description\r\n\r\nI would like to be able to easily get a log or representation of the request and response that was sent & received for the API call. This is helpful in case we did not handle a request or response properly we can debug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/104", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/104/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/104/events", "html_url": "https://github.com/braintree/braintree_python/issues/104", "id": 361101510, "node_id": "MDU6SXNzdWUzNjExMDE1MTA=", "number": 104, "title": "As a developer, I'd like to differentiate between Timeout exceptions, so that I can handle them differently", "user": {"login": "bhargavrpatel", "id": 911413, "node_id": "MDQ6VXNlcjkxMTQxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/911413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhargavrpatel", "html_url": "https://github.com/bhargavrpatel", "followers_url": "https://api.github.com/users/bhargavrpatel/followers", "following_url": "https://api.github.com/users/bhargavrpatel/following{/other_user}", "gists_url": "https://api.github.com/users/bhargavrpatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhargavrpatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhargavrpatel/subscriptions", "organizations_url": "https://api.github.com/users/bhargavrpatel/orgs", "repos_url": "https://api.github.com/users/bhargavrpatel/repos", "events_url": "https://api.github.com/users/bhargavrpatel/events{/privacy}", "received_events_url": "https://api.github.com/users/bhargavrpatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-18T01:27:12Z", "updated_at": "2019-06-27T18:09:12Z", "closed_at": "2019-06-27T18:09:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: HEAD (Edit: https://github.com/braintree/braintree_python/commit/d2eaf7c1b52f3548331a7a05bb34532c88bc4e4e)\r\n* Environment: N/A\r\n* Language, language version, and OS: Python, Python 2.7.4+, any\r\n\r\n### Issue description\r\n\r\n**Story:** As a developer, I'd like to differentiate between Timeout exceptions, so that I can handle them differently.\r\n\r\n**Context:** Braintree Python implementation utilizes the [requests](http://docs.python-requests.org/en/master/) library and re-raises certain exception as its Braintree counterparts. At the moment, it seems we re-raise `requests.exceptions.TimeoutError` as `braintree.exceptions.http.TimeoutError`. \r\n\r\nAs documented in the Requests module [exceptions documentation](http://docs.python-requests.org/en/master/_modules/requests/exceptions/), `requests.exceptions.TimeoutError` is a generic exception which is used by `requests.exceptions.ConnectTimeout` as well as `requests.exceptions.ReadTimeout`.\r\n\r\nBraintree documentation notes that not all timeouts imply a failed operation; a blind retry can lead to double auths and charges. I do believe that Connection timeouts can be retried as the connection between Client and Server was never established. Read Timeouts are where things get dicey and Timeout Reversals come into play.\r\n\r\nI wonder if we can differentiate between `requests.exceptions.ConnectTimeout`, and `requests.exceptions.ReadTimeout` so that we can handle the two cases accordingly.\r\n\r\nhttps://github.com/braintree/braintree_python/blob/d2eaf7c1b52f3548331a7a05bb34532c88bc4e4e/braintree/util/http.py#L112-L120\r\n\r\nThe above snippet shows the function that handles the exceptions. A caveat is that `ConnectTimeout` is additionally a child of `ConnectionError` which we handle first; so we'll raise `braintree.exceptions.http.ConectionError`! The issue there also is that a similar inheritance hierarchy/MRO does not exist for the BrainTree exceptions. Additionally, I'd still like to differentiate between other connection errors (such as SSL errors) which may require human intervention.\r\n\r\n**Solutions:**\r\n\r\n1. Add a similar inheritance hierarchy/MRO as the requests library\r\n2. Subclass `braintree.exceptions.TimeoutError` and raise `braintree.exceptions.ReadTimeoutError` and `braintree.exceptions.ConnectTimeoutError` accordingly.\r\n\r\nP.S: We've been using this library for quite some time so I wanted to say thank you for the awesome documentation.\r\n\r\nP.P.S: More than happy to propose a PR as well.\r\n\r\nThanks,\r\nBRP\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/103", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/103/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/103/events", "html_url": "https://github.com/braintree/braintree_python/issues/103", "id": 358039489, "node_id": "MDU6SXNzdWUzNTgwMzk0ODk=", "number": 103, "title": "Support Python 3.6 and 3.7", "user": {"login": "sybrenstuvel", "id": 1092128, "node_id": "MDQ6VXNlcjEwOTIxMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1092128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sybrenstuvel", "html_url": "https://github.com/sybrenstuvel", "followers_url": "https://api.github.com/users/sybrenstuvel/followers", "following_url": "https://api.github.com/users/sybrenstuvel/following{/other_user}", "gists_url": "https://api.github.com/users/sybrenstuvel/gists{/gist_id}", "starred_url": "https://api.github.com/users/sybrenstuvel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sybrenstuvel/subscriptions", "organizations_url": "https://api.github.com/users/sybrenstuvel/orgs", "repos_url": "https://api.github.com/users/sybrenstuvel/repos", "events_url": "https://api.github.com/users/sybrenstuvel/events{/privacy}", "received_events_url": "https://api.github.com/users/sybrenstuvel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-07T12:01:30Z", "updated_at": "2019-06-19T15:18:09Z", "closed_at": "2019-01-28T15:54:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: current master (591f322b5bbc)\r\n* Environment: n/a\r\n* Language, language version, and OS: Python 3.6/3.7 on any OS\r\n\r\n### Issue description\r\n\r\nAccording to the `README.md` and `setup.py` files, the latest supported version of Python 3.5. Version 3.6 was released almost two years ago. Please test & support with the latest official release.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/102", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/102/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/102/events", "html_url": "https://github.com/braintree/braintree_python/issues/102", "id": 341235509, "node_id": "MDU6SXNzdWUzNDEyMzU1MDk=", "number": 102, "title": "Unable to JSON Serialize Result", "user": {"login": "selected-pixel-jameson", "id": 28204537, "node_id": "MDQ6VXNlcjI4MjA0NTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/28204537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selected-pixel-jameson", "html_url": "https://github.com/selected-pixel-jameson", "followers_url": "https://api.github.com/users/selected-pixel-jameson/followers", "following_url": "https://api.github.com/users/selected-pixel-jameson/following{/other_user}", "gists_url": "https://api.github.com/users/selected-pixel-jameson/gists{/gist_id}", "starred_url": "https://api.github.com/users/selected-pixel-jameson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selected-pixel-jameson/subscriptions", "organizations_url": "https://api.github.com/users/selected-pixel-jameson/orgs", "repos_url": "https://api.github.com/users/selected-pixel-jameson/repos", "events_url": "https://api.github.com/users/selected-pixel-jameson/events{/privacy}", "received_events_url": "https://api.github.com/users/selected-pixel-jameson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-14T13:10:18Z", "updated_at": "2020-07-30T20:35:36Z", "closed_at": "2018-07-16T22:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.46.0\r\n* Language, language version, and OS: Python 2.7.0 | MacOS\r\n\r\n### Issue description\r\n\r\nHello, I'm having trouble JSON serializing the result object that is returned when calling `gateway.subscription.create`. I've tried using json.dumps and it just tells me the object cannot be serialized. I'm sure this is something I'm doing wrong, but I don't really know where else to go. \r\n\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/101", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/101/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/101/events", "html_url": "https://github.com/braintree/braintree_python/issues/101", "id": 330403417, "node_id": "MDU6SXNzdWUzMzA0MDM0MTc=", "number": 101, "title": "Pagination on `transactions/advanced_search_ids` endpoint.", "user": {"login": "luanfonceca", "id": 1490875, "node_id": "MDQ6VXNlcjE0OTA4NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1490875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luanfonceca", "html_url": "https://github.com/luanfonceca", "followers_url": "https://api.github.com/users/luanfonceca/followers", "following_url": "https://api.github.com/users/luanfonceca/following{/other_user}", "gists_url": "https://api.github.com/users/luanfonceca/gists{/gist_id}", "starred_url": "https://api.github.com/users/luanfonceca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luanfonceca/subscriptions", "organizations_url": "https://api.github.com/users/luanfonceca/orgs", "repos_url": "https://api.github.com/users/luanfonceca/repos", "events_url": "https://api.github.com/users/luanfonceca/events{/privacy}", "received_events_url": "https://api.github.com/users/luanfonceca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T19:23:12Z", "updated_at": "2018-07-12T21:20:36Z", "closed_at": "2018-07-12T21:20:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.46.0\r\n* Environment: Sandbox\r\n* Language, language version, and OS: Python 3.6.1\r\n\r\n### Issue description\r\n\r\nIt should be nice if the [`TransactionGateway.search`](https://github.com/braintree/braintree_python/blob/master/braintree/transaction_gateway.py#L84) method to return a `PaginatedCollection` and `PaginatedResult` as the [`DisputeGateway`](https://github.com/braintree/braintree_python/blob/master/braintree/dispute_gateway.py#L142) does.\r\nI did:\r\n```py\r\nresponse = self.config.http().post(\r\n    self.config.base_merchant_path() + \"/transactions/advanced_search_ids?page=1&page_size=10\",\r\n    {\"search\": self.__criteria(query)}\r\n)\r\n```\r\n\r\nBut that didn't worked, i still were receiving:\r\n```py\r\n{'search_results': {'page_size': 50, 'ids': [... 68 items ...]}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/100", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/100/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/100/events", "html_url": "https://github.com/braintree/braintree_python/issues/100", "id": 314146449, "node_id": "MDU6SXNzdWUzMTQxNDY0NDk=", "number": 100, "title": "error on empty search", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-13T15:12:27Z", "updated_at": "2018-04-17T20:27:19Z", "closed_at": "2018-04-17T20:27:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import braintree\r\n>>> braintree.Transaction.search()\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/braintree/transaction.py\", line 384, in search\r\n    return Configuration.gateway().transaction.search(*query)\r\n  File \"/usr/local/lib/python2.7/site-packages/braintree/transaction_gateway.py\", line 81, in search\r\n    if isinstance(query[0], list):\r\nIndexError: tuple index out of range\r\n>>> \r\n```\r\n\r\n[`if isinstance(query[0], list):`](https://github.com/braintree/braintree_python/blob/282079f09943b0d8cb63e39e7db73b136982ff07/braintree/transaction_gateway.py#L81)\r\n\r\nneeds to be changed to:  `if query and isinstance(query[0], list):`\r\n\r\nEmpty search is allowed, but requires getting around this bug by running `braintree.Transaction.search([])` which shouldn't be necessary.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/97", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/97/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/97/events", "html_url": "https://github.com/braintree/braintree_python/issues/97", "id": 285820563, "node_id": "MDU6SXNzdWUyODU4MjA1NjM=", "number": 97, "title": "Search vault customer by \"Custom Fields\"", "user": {"login": "JosephDev", "id": 7818008, "node_id": "MDQ6VXNlcjc4MTgwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7818008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephDev", "html_url": "https://github.com/JosephDev", "followers_url": "https://api.github.com/users/JosephDev/followers", "following_url": "https://api.github.com/users/JosephDev/following{/other_user}", "gists_url": "https://api.github.com/users/JosephDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephDev/subscriptions", "organizations_url": "https://api.github.com/users/JosephDev/orgs", "repos_url": "https://api.github.com/users/JosephDev/repos", "events_url": "https://api.github.com/users/JosephDev/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-03T21:53:28Z", "updated_at": "2018-01-04T20:13:32Z", "closed_at": "2018-01-04T20:12:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.39.1\r\n* Environment: Sandbox\r\n* Language, language version, and OS: python 3.x\r\n\r\n### Issue description\r\nI'd like to record custom fields to map customer between BT and our own system.\r\nis there any chance to add this feature on your system?\r\nI know I can assign `id` but I need one more uniq field.\r\nex)\r\n```\r\nbraintree.Customer.create({\r\n\t\"first_name\": \"john\",\r\n\t\"last_name\": \"doe\",\r\n\t\"company\": \"democom\",\r\n\t\"email\": \"demo@demo.com\",\r\n\t\"phone\": \"xxx.xxx.xxxxx\",\r\n\t\"fax\": \"\",\r\n\t\"website\": \"\",\r\n\t\"custom_fields\": {\r\n                \"own_custom_id\": \"123456\"\r\n\t}\r\n})\r\n```\r\nand search like\r\n```\r\ncollection = braintree.Customer.search(\r\n    braintree.CustomerSearch.custom_fields.own_custom_id == '123456'\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/96", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/96/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/96/events", "html_url": "https://github.com/braintree/braintree_python/issues/96", "id": 278392358, "node_id": "MDU6SXNzdWUyNzgzOTIzNTg=", "number": 96, "title": "UnexpectedError: Unexpected HTTP_RESPONSE 406 on Customer.find", "user": {"login": "vmihalachi", "id": 956257, "node_id": "MDQ6VXNlcjk1NjI1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/956257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmihalachi", "html_url": "https://github.com/vmihalachi", "followers_url": "https://api.github.com/users/vmihalachi/followers", "following_url": "https://api.github.com/users/vmihalachi/following{/other_user}", "gists_url": "https://api.github.com/users/vmihalachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmihalachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmihalachi/subscriptions", "organizations_url": "https://api.github.com/users/vmihalachi/orgs", "repos_url": "https://api.github.com/users/vmihalachi/repos", "events_url": "https://api.github.com/users/vmihalachi/events{/privacy}", "received_events_url": "https://api.github.com/users/vmihalachi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-01T08:30:17Z", "updated_at": "2017-12-02T12:30:32Z", "closed_at": "2017-12-02T12:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.39.0\r\n* Environment: Sandbox\r\n* Language, language version, and OS: Python 3.6.3 on Mac OS 10.13.1\r\n\r\n### Issue description\r\nHi, until yestarday it was all working. But today when I try to find the customer I get this error message. \r\n\r\n**Python code**\r\n```\r\ntry:\r\n        return braintree.Customer.find(braintree_id)\r\n    except NotFoundError:\r\n        return None\r\n```\r\n\r\n**Stacktrace**\r\n```\r\nInternal Server Error: /braintree/get_saved_payment_info\r\nTraceback (most recent call last):\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/django/views/decorators/csrf.py\", line 58, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/django/views/generic/base.py\", line 68, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/rest_framework/views.py\", line 489, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/rest_framework/views.py\", line 449, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/rest_framework/views.py\", line 486, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/rest_framework/decorators.py\", line 53, in handler\r\n    return func(*args, **kwargs)\r\n  File \"/Users/mac/PycharmProjects/clickandrap/braintree_module/views.py\", line 59, in get_saved_payment_info\r\n    credit_card = bt_helper.get_credit_card_payment_method(braintree_id)\r\n  File \"/Users/mac/PycharmProjects/clickandrap/braintree_module/bt_helper.py\", line 53, in get_credit_card_payment_method\r\n    payment_methods = get_payment_methods(braintree_id)\r\n  File \"/Users/mac/PycharmProjects/clickandrap/braintree_module/bt_helper.py\", line 40, in get_payment_methods\r\n    customer: Customer = get_braintree_customer(braintree_id)\r\n  File \"/Users/mac/PycharmProjects/clickandrap/braintree_module/bt_helper.py\", line 30, in get_braintree_customer\r\n    return braintree.Customer.find(braintree_id)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/braintree/customer.py\", line 146, in find\r\n    return Configuration.gateway().customer.find(customer_id)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/braintree/customer_gateway.py\", line 36, in find\r\n    response = self.config.http().get(self.config.base_merchant_path() + \"/customers/\" + customer_id)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/braintree/util/http.py\", line 62, in get\r\n    return self.__http_do(\"GET\", path, Http.ContentType.Xml)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/braintree/util/http.py\", line 91, in __http_do\r\n    Http.raise_exception_from_status(status)\r\n  File \"/Users/mac/.local/share/virtualenvs/clickandrap-0ABdElTc/lib/python3.6/site-packages/braintree/util/http.py\", line 49, in raise_exception_from_status\r\n    raise UnexpectedError(\"Unexpected HTTP_RESPONSE \" + str(status))\r\nbraintree.exceptions.unexpected_error.UnexpectedError: Unexpected HTTP_RESPONSE 406\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/95", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/95/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/95/events", "html_url": "https://github.com/braintree/braintree_python/issues/95", "id": 271229514, "node_id": "MDU6SXNzdWUyNzEyMjk1MTQ=", "number": 95, "title": "Py", "user": {"login": "imelmz2019", "id": 33253200, "node_id": "MDQ6VXNlcjMzMjUzMjAw", "avatar_url": "https://avatars1.githubusercontent.com/u/33253200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imelmz2019", "html_url": "https://github.com/imelmz2019", "followers_url": "https://api.github.com/users/imelmz2019/followers", "following_url": "https://api.github.com/users/imelmz2019/following{/other_user}", "gists_url": "https://api.github.com/users/imelmz2019/gists{/gist_id}", "starred_url": "https://api.github.com/users/imelmz2019/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imelmz2019/subscriptions", "organizations_url": "https://api.github.com/users/imelmz2019/orgs", "repos_url": "https://api.github.com/users/imelmz2019/repos", "events_url": "https://api.github.com/users/imelmz2019/events{/privacy}", "received_events_url": "https://api.github.com/users/imelmz2019/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-04T21:55:19Z", "updated_at": "2017-11-05T12:28:29Z", "closed_at": "2017-11-05T12:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: <!-- Example: 3.37.0 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* Language, language version, and OS: <!-- Example: Python 2.7.0 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/94", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/94/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/94/events", "html_url": "https://github.com/braintree/braintree_python/issues/94", "id": 265445379, "node_id": "MDU6SXNzdWUyNjU0NDUzNzk=", "number": 94, "title": "Can't import braintree", "user": {"login": "colourful-land", "id": 548435, "node_id": "MDQ6VXNlcjU0ODQzNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/548435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colourful-land", "html_url": "https://github.com/colourful-land", "followers_url": "https://api.github.com/users/colourful-land/followers", "following_url": "https://api.github.com/users/colourful-land/following{/other_user}", "gists_url": "https://api.github.com/users/colourful-land/gists{/gist_id}", "starred_url": "https://api.github.com/users/colourful-land/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colourful-land/subscriptions", "organizations_url": "https://api.github.com/users/colourful-land/orgs", "repos_url": "https://api.github.com/users/colourful-land/repos", "events_url": "https://api.github.com/users/colourful-land/events{/privacy}", "received_events_url": "https://api.github.com/users/colourful-land/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-13T23:44:49Z", "updated_at": "2019-12-03T13:12:05Z", "closed_at": "2017-10-17T02:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ pip install braintree\r\nCollecting braintree\r\n  Using cached braintree-3.38.0-py2.py3-none-any.whl\r\nCollecting requests<3.0,>=0.11.1 (from braintree)\r\n  Using cached requests-2.18.4-py2.py3-none-any.whl\r\nCollecting urllib3<1.23,>=1.21.1 (from requests<3.0,>=0.11.1->braintree)\r\n  Using cached urllib3-1.22-py2.py3-none-any.whl\r\nCollecting idna<2.7,>=2.5 (from requests<3.0,>=0.11.1->braintree)\r\n  Using cached idna-2.6-py2.py3-none-any.whl\r\nCollecting chardet<3.1.0,>=3.0.2 (from requests<3.0,>=0.11.1->braintree)\r\n  Using cached chardet-3.0.4-py2.py3-none-any.whl\r\nCollecting certifi>=2017.4.17 (from requests<3.0,>=0.11.1->braintree)\r\n  Using cached certifi-2017.7.27.1-py2.py3-none-any.whl\r\nInstalling collected packages: urllib3, idna, chardet, certifi, requests, braintree\r\nSuccessfully installed braintree-3.38.0 certifi-2017.7.27.1 chardet-3.0.4 idna-2.6 requests-2.18.4 urllib3-1.22\r\n$ python \r\nPython 2.7.13 (default, Jan 19 2017, 14:48:08) \r\n[GCC 6.3.0 20170118] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import braintree\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"braintree.py\", line 5, in <module>\r\n    braintree.Configuration.configure(braintree.Environment.Sandbox,\r\nAttributeError: 'module' object has no attribute 'Configuration'\r\n>>> \r\n```\r\n\r\nAs you can see, braintree module version is 3.38. The system is Debian Linux 9 with Python 2.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/93", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/93/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/93/events", "html_url": "https://github.com/braintree/braintree_python/issues/93", "id": 251897669, "node_id": "MDU6SXNzdWUyNTE4OTc2Njk=", "number": 93, "title": "Retrieving all subscriptions and transactions", "user": {"login": "mpclarkson", "id": 4843821, "node_id": "MDQ6VXNlcjQ4NDM4MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4843821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpclarkson", "html_url": "https://github.com/mpclarkson", "followers_url": "https://api.github.com/users/mpclarkson/followers", "following_url": "https://api.github.com/users/mpclarkson/following{/other_user}", "gists_url": "https://api.github.com/users/mpclarkson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpclarkson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpclarkson/subscriptions", "organizations_url": "https://api.github.com/users/mpclarkson/orgs", "repos_url": "https://api.github.com/users/mpclarkson/repos", "events_url": "https://api.github.com/users/mpclarkson/events{/privacy}", "received_events_url": "https://api.github.com/users/mpclarkson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-22T09:41:52Z", "updated_at": "2020-07-14T19:31:45Z", "closed_at": "2017-08-23T20:04:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: Current\r\n* Environment: All\r\n* Language, language version, and OS: Python 3.6\r\n\r\n### Issue description\r\n\r\nIt is possible to retrieve all customers via `braintree.Customer.all()` and all plans via `braintree.Plan.all()` but the `all` method does not exist for `Transactions` or `Subscriptions`. \r\n\r\nHow can these these be retrieved efficiently? I don't want to find or search - I need the complete lists.\r\n\r\nMany thanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/92", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/92/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/92/events", "html_url": "https://github.com/braintree/braintree_python/issues/92", "id": 249929847, "node_id": "MDU6SXNzdWUyNDk5Mjk4NDc=", "number": 92, "title": "Deprecation warnings for encodestring and decodestring", "user": {"login": "carlosfunk", "id": 907689, "node_id": "MDQ6VXNlcjkwNzY4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/907689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosfunk", "html_url": "https://github.com/carlosfunk", "followers_url": "https://api.github.com/users/carlosfunk/followers", "following_url": "https://api.github.com/users/carlosfunk/following{/other_user}", "gists_url": "https://api.github.com/users/carlosfunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosfunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosfunk/subscriptions", "organizations_url": "https://api.github.com/users/carlosfunk/orgs", "repos_url": "https://api.github.com/users/carlosfunk/repos", "events_url": "https://api.github.com/users/carlosfunk/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosfunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-14T04:19:01Z", "updated_at": "2017-11-17T22:40:19Z", "closed_at": "2017-11-17T22:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.37.2\r\n* Language, language version, and OS: Python 3\r\n\r\n### Issue description\r\nI've noticed some warnings when running some tests:\r\n\r\n```\r\nsite-packages/braintree/webhook_notification_gateway.py:26: DeprecationWarning: decodestring() is a deprecated alias since Python 3.1, use decodebytes()\r\nsite-packages/braintree/webhook_testing_gateway.py:12: DeprecationWarning: encodestring() is a deprecated alias since 3.1, use encodebytes()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/91", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/91/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/91/events", "html_url": "https://github.com/braintree/braintree_python/issues/91", "id": 235950563, "node_id": "MDU6SXNzdWUyMzU5NTA1NjM=", "number": 91, "title": "Search subscriptions by `updated_at` field?", "user": {"login": "frnsys", "id": 1059947, "node_id": "MDQ6VXNlcjEwNTk5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1059947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frnsys", "html_url": "https://github.com/frnsys", "followers_url": "https://api.github.com/users/frnsys/followers", "following_url": "https://api.github.com/users/frnsys/following{/other_user}", "gists_url": "https://api.github.com/users/frnsys/gists{/gist_id}", "starred_url": "https://api.github.com/users/frnsys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frnsys/subscriptions", "organizations_url": "https://api.github.com/users/frnsys/orgs", "repos_url": "https://api.github.com/users/frnsys/repos", "events_url": "https://api.github.com/users/frnsys/events{/privacy}", "received_events_url": "https://api.github.com/users/frnsys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T17:17:07Z", "updated_at": "2017-09-20T22:00:27Z", "closed_at": "2017-09-20T22:00:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to search subscriptions by `updated_at`? I'm trying to query the number of cancellations given a datetime range and currently there doesn't seem to be a way to do that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/90", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/90/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/90/events", "html_url": "https://github.com/braintree/braintree_python/issues/90", "id": 232630585, "node_id": "MDU6SXNzdWUyMzI2MzA1ODU=", "number": 90, "title": "Unable to create subscription on 31st day with credit card expires in certain months.", "user": {"login": "eytoss", "id": 435708, "node_id": "MDQ6VXNlcjQzNTcwOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/435708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eytoss", "html_url": "https://github.com/eytoss", "followers_url": "https://api.github.com/users/eytoss/followers", "following_url": "https://api.github.com/users/eytoss/following{/other_user}", "gists_url": "https://api.github.com/users/eytoss/gists{/gist_id}", "starred_url": "https://api.github.com/users/eytoss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eytoss/subscriptions", "organizations_url": "https://api.github.com/users/eytoss/orgs", "repos_url": "https://api.github.com/users/eytoss/repos", "events_url": "https://api.github.com/users/eytoss/events{/privacy}", "received_events_url": "https://api.github.com/users/eytoss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-31T16:56:02Z", "updated_at": "2017-05-31T17:54:43Z", "closed_at": "2017-05-31T17:54:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 3.37.2\r\n* Environment: Both Sandbox And Production\r\n* Language Python 2.7\r\n\r\n### Issue description\r\nOn 31st day of any month(we've tested March and May), unable to create subscription using a credit card with an expiration month in  [02, 04, 06, 09, 11]\r\n\r\nMore details coming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/89", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/89/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/89/events", "html_url": "https://github.com/braintree/braintree_python/issues/89", "id": 225217789, "node_id": "MDU6SXNzdWUyMjUyMTc3ODk=", "number": 89, "title": "Braintree modules cannot be imported", "user": {"login": "horaceleung", "id": 16663831, "node_id": "MDQ6VXNlcjE2NjYzODMx", "avatar_url": "https://avatars3.githubusercontent.com/u/16663831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/horaceleung", "html_url": "https://github.com/horaceleung", "followers_url": "https://api.github.com/users/horaceleung/followers", "following_url": "https://api.github.com/users/horaceleung/following{/other_user}", "gists_url": "https://api.github.com/users/horaceleung/gists{/gist_id}", "starred_url": "https://api.github.com/users/horaceleung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/horaceleung/subscriptions", "organizations_url": "https://api.github.com/users/horaceleung/orgs", "repos_url": "https://api.github.com/users/horaceleung/repos", "events_url": "https://api.github.com/users/horaceleung/events{/privacy}", "received_events_url": "https://api.github.com/users/horaceleung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-28T23:52:01Z", "updated_at": "2017-05-01T16:41:46Z", "closed_at": "2017-05-01T16:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have encountered following error after upgrading from 3.35.0 to 3.36.0 causing some modules unable to be imported.\r\n\r\nplugins_1    |     import braintree\r\nplugins_1    |   File \"/usr/local/lib/python3.4/site-packages/braintree/_init_.py\", line 1, in <module>\r\nplugins_1    |     from braintree.ach_mandate import AchMandate\r\nplugins_1    |   File \"/usr/local/lib/python3.4/site-packages/braintree/ach_mandate.py\", line 2, in <module>\r\nplugins_1    |     from braintree.util.datetime_parser import parse_datetime\r\nplugins_1    | ImportError: No module named 'braintree.util.datetime_parser'\r\nplugins_1 exited with code 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/87", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/87/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/87/events", "html_url": "https://github.com/braintree/braintree_python/issues/87", "id": 221039738, "node_id": "MDU6SXNzdWUyMjEwMzk3Mzg=", "number": 87, "title": "ValueError in datetime.strptime", "user": {"login": "petercgrant", "id": 1656850, "node_id": "MDQ6VXNlcjE2NTY4NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1656850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petercgrant", "html_url": "https://github.com/petercgrant", "followers_url": "https://api.github.com/users/petercgrant/followers", "following_url": "https://api.github.com/users/petercgrant/following{/other_user}", "gists_url": "https://api.github.com/users/petercgrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/petercgrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petercgrant/subscriptions", "organizations_url": "https://api.github.com/users/petercgrant/orgs", "repos_url": "https://api.github.com/users/petercgrant/repos", "events_url": "https://api.github.com/users/petercgrant/events{/privacy}", "received_events_url": "https://api.github.com/users/petercgrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-11T18:27:43Z", "updated_at": "2017-04-12T06:59:37Z", "closed_at": "2017-04-12T06:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Started receiving dispute webhook notifications today containing a datetime tag that fails to parse: `<created-at type=\"datetime\">2017-04-11T14:03:40+00:00</created-at>`\r\n\r\nThe error `ValueError: time data '2017-04-11T14:03:40+00:00' does not match format '%Y-%m-%dT%H:%M:%SZ'` occurs at [braintree/util/parser.py:41](https://github.com/braintree/braintree_python/blob/master/braintree/util/parser.py#L41)\r\n\r\nThe value is a valid ISO8601 datetime, but parsing fails at the timezone (expected: Z, actual: +00:00). strptime does not support proper parsing of ISO8601 datetime formats and has trouble with timezones in particular. Even with the addition of %z in Python 3, strptime does not properly parse the offset `+00:00`. Recommend using [iso8601.parse_date](http://pyiso8601.readthedocs.io/en/latest/#iso8601.parse_date) or similar.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/86", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/86/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/86/events", "html_url": "https://github.com/braintree/braintree_python/issues/86", "id": 213583313, "node_id": "MDU6SXNzdWUyMTM1ODMzMTM=", "number": 86, "title": "Test nonces don't work?", "user": {"login": "frnsys", "id": 1059947, "node_id": "MDQ6VXNlcjEwNTk5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1059947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frnsys", "html_url": "https://github.com/frnsys", "followers_url": "https://api.github.com/users/frnsys/followers", "following_url": "https://api.github.com/users/frnsys/following{/other_user}", "gists_url": "https://api.github.com/users/frnsys/gists{/gist_id}", "starred_url": "https://api.github.com/users/frnsys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frnsys/subscriptions", "organizations_url": "https://api.github.com/users/frnsys/orgs", "repos_url": "https://api.github.com/users/frnsys/repos", "events_url": "https://api.github.com/users/frnsys/events{/privacy}", "received_events_url": "https://api.github.com/users/frnsys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-12T05:25:37Z", "updated_at": "2018-02-15T16:29:33Z", "closed_at": "2017-04-17T19:18:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "not sure what I'm doing wrong here, but I'm in a sandbox environment using `nonce='fake-valid-nonce'` here:\r\n\r\n```\r\n    resp = braintree.Subscription.create({\r\n        'payment_method_nonce': nonce,\r\n        'plan_id': config.BRAINTREE_SUBSCRIPTION_PLAN_ID\r\n    })\r\n```\r\n\r\nand keep getting the error \"Payment method nonce is invalid.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/84", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/84/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/84/events", "html_url": "https://github.com/braintree/braintree_python/issues/84", "id": 210744124, "node_id": "MDU6SXNzdWUyMTA3NDQxMjQ=", "number": 84, "title": "Create transaction error - RuntimeError: Unexpected XML node type: <class 'float'>", "user": {"login": "ittus", "id": 5120965, "node_id": "MDQ6VXNlcjUxMjA5NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5120965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ittus", "html_url": "https://github.com/ittus", "followers_url": "https://api.github.com/users/ittus/followers", "following_url": "https://api.github.com/users/ittus/following{/other_user}", "gists_url": "https://api.github.com/users/ittus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ittus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ittus/subscriptions", "organizations_url": "https://api.github.com/users/ittus/orgs", "repos_url": "https://api.github.com/users/ittus/repos", "events_url": "https://api.github.com/users/ittus/events{/privacy}", "received_events_url": "https://api.github.com/users/ittus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-28T10:20:07Z", "updated_at": "2017-03-10T15:41:03Z", "closed_at": "2017-03-10T15:41:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\n\r\nI created a transaction with following code:\r\n\r\n```python\r\nbraintree.Transaction.sale({\r\n            \"amount\": 9.9,\r\n            \"payment_method_token\": payment_method_token,\r\n            \"options\": {\r\n                \"submit_for_settlement\": True\r\n            }\r\n        }\r\n)\r\n```\r\n\r\nor \r\n```python\r\nfrom decimal import Decimal\r\nbraintree.Transaction.sale({\r\n            \"amount\": Decimal(9.9),\r\n            \"payment_method_token\": payment_method_token,\r\n            \"options\": {\r\n                \"submit_for_settlement\": True\r\n            }\r\n        }\r\n)\r\n```\r\nand got error:\r\n```\r\n../python3.4/site-packages/braintree/util/generator.py\", line 70, in __generate_node\r\n    raise RuntimeError(\"Unexpected XML node type: \" + str(type(value)))\r\nRuntimeError: Unexpected XML node type: <class 'float'>\r\n```\r\n\r\nIf I do\r\n\r\n```python\r\nbraintree.Transaction.sale({\r\n            \"amount\": str(9.9), # convert to string\r\n            \"payment_method_token\": payment_method_token,\r\n            \"options\": {\r\n                \"submit_for_settlement\": True\r\n            }\r\n        }\r\n)\r\n```\r\n\r\nor \r\n\r\n```python\r\nbraintree.Transaction.sale({\r\n            \"amount\": 9, # integer value\r\n            \"payment_method_token\": payment_method_token,\r\n            \"options\": {\r\n                \"submit_for_settlement\": True\r\n            }\r\n        }\r\n)\r\n```\r\n\r\nthen it's ok.\r\n\r\nWhy doesn't `braintree/util/generator.py` check for `float` type?\r\n\r\n**Enviroment:**\r\nbraintree==3.35.0\r\npython3.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/83", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/83/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/83/events", "html_url": "https://github.com/braintree/braintree_python/issues/83", "id": 209610299, "node_id": "MDU6SXNzdWUyMDk2MTAyOTk=", "number": 83, "title": "Getting TypeError: data must be a byte string ", "user": {"login": "ydaniels", "id": 8302768, "node_id": "MDQ6VXNlcjgzMDI3Njg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8302768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydaniels", "html_url": "https://github.com/ydaniels", "followers_url": "https://api.github.com/users/ydaniels/followers", "following_url": "https://api.github.com/users/ydaniels/following{/other_user}", "gists_url": "https://api.github.com/users/ydaniels/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydaniels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydaniels/subscriptions", "organizations_url": "https://api.github.com/users/ydaniels/orgs", "repos_url": "https://api.github.com/users/ydaniels/repos", "events_url": "https://api.github.com/users/ydaniels/events{/privacy}", "received_events_url": "https://api.github.com/users/ydaniels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-22T23:04:39Z", "updated_at": "2017-02-22T23:23:14Z", "closed_at": "2017-02-22T23:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am getting this error when trying to create sale transaction on test server but works on local and yes i have downgraded to requests==2.60. Whats the exact way to solve this problem", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/82", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/82/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/82/events", "html_url": "https://github.com/braintree/braintree_python/issues/82", "id": 204967281, "node_id": "MDU6SXNzdWUyMDQ5NjcyODE=", "number": 82, "title": "Translating errors", "user": {"login": "manikos", "id": 4214167, "node_id": "MDQ6VXNlcjQyMTQxNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4214167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manikos", "html_url": "https://github.com/manikos", "followers_url": "https://api.github.com/users/manikos/followers", "following_url": "https://api.github.com/users/manikos/following{/other_user}", "gists_url": "https://api.github.com/users/manikos/gists{/gist_id}", "starred_url": "https://api.github.com/users/manikos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manikos/subscriptions", "organizations_url": "https://api.github.com/users/manikos/orgs", "repos_url": "https://api.github.com/users/manikos/repos", "events_url": "https://api.github.com/users/manikos/events{/privacy}", "received_events_url": "https://api.github.com/users/manikos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-02T19:11:18Z", "updated_at": "2017-02-06T22:38:47Z", "closed_at": "2017-02-06T22:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any plans or may I contribute somehow in order to translate (at least in my language, Greek) all the error codes (or at least most of them)?\r\n\r\nI am asking this because I have a multilingual website and I want any potential errors produced (e.g \r\n`code: 81715`, `text: Credit card number is invalid`) to appear on the language selected by the user.\r\n\r\nMaybe [transifex](https://www.transifex.com/) be used (same service used by [Django](https://www.djangoproject.com/))?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/81", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/81/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/81/events", "html_url": "https://github.com/braintree/braintree_python/issues/81", "id": 198379022, "node_id": "MDU6SXNzdWUxOTgzNzkwMjI=", "number": 81, "title": "Document updates", "user": {"login": "akshaybabloo", "id": 7360286, "node_id": "MDQ6VXNlcjczNjAyODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7360286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshaybabloo", "html_url": "https://github.com/akshaybabloo", "followers_url": "https://api.github.com/users/akshaybabloo/followers", "following_url": "https://api.github.com/users/akshaybabloo/following{/other_user}", "gists_url": "https://api.github.com/users/akshaybabloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshaybabloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshaybabloo/subscriptions", "organizations_url": "https://api.github.com/users/akshaybabloo/orgs", "repos_url": "https://api.github.com/users/akshaybabloo/repos", "events_url": "https://api.github.com/users/akshaybabloo/events{/privacy}", "received_events_url": "https://api.github.com/users/akshaybabloo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-02T20:43:05Z", "updated_at": "2017-02-07T21:55:11Z", "closed_at": "2017-02-07T21:55:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think you should update the documents in https://developers.braintreepayments.com/start/hello-server/python saying that the Python 3.5 is supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/80", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/80/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/80/events", "html_url": "https://github.com/braintree/braintree_python/issues/80", "id": 195645792, "node_id": "MDU6SXNzdWUxOTU2NDU3OTI=", "number": 80, "title": "SSLError (just started, this was working yesterday)", "user": {"login": "teewuane", "id": 535433, "node_id": "MDQ6VXNlcjUzNTQzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/535433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teewuane", "html_url": "https://github.com/teewuane", "followers_url": "https://api.github.com/users/teewuane/followers", "following_url": "https://api.github.com/users/teewuane/following{/other_user}", "gists_url": "https://api.github.com/users/teewuane/gists{/gist_id}", "starred_url": "https://api.github.com/users/teewuane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teewuane/subscriptions", "organizations_url": "https://api.github.com/users/teewuane/orgs", "repos_url": "https://api.github.com/users/teewuane/repos", "events_url": "https://api.github.com/users/teewuane/events{/privacy}", "received_events_url": "https://api.github.com/users/teewuane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-14T21:06:48Z", "updated_at": "2017-06-05T23:36:11Z", "closed_at": "2016-12-14T23:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a traceback, I use braintree in my django app.\r\n\r\nInternal Server Error: /my-django-url/\r\nTraceback (most recent call last):\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/myuser/Projects/my_env/my_project/my_app/views.py\", line 56, in my_function\r\n    bt_authorization = braintree.ClientToken.generate()\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/braintree/client_token.py\", line 16, in generate\r\n    return gateway.generate(params)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/braintree/client_token_gateway.py\", line 24, in generate\r\n    response = self.config.http().post(self.config.base_merchant_path() + \"/client_token\", params)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/braintree/util/http.py\", line 52, in post\r\n    return self.__http_do(\"POST\", path, params)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/braintree/util/http.py\", line 70, in __http_do\r\n    status, response_body = http_strategy.http_do(http_verb, full_path, self.__headers(), request_body)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/braintree/util/http.py\", line 91, in http_do\r\n    timeout=self.config.timeout\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/requests/api.py\", line 110, in post\r\n    return request('post', url, data=data, json=json, **kwargs)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/requests/api.py\", line 56, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/requests/sessions.py\", line 488, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/requests/sessions.py\", line 609, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/Users/myuser/Projects/my_env/lib/python2.7/site-packages/requests/adapters.py\", line 497, in send\r\n    raise SSLError(e, request=request)\r\nSSLError: [SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:590)\r\n\r\n\r\nSo, I'm not sure if this is a requests issue or how braintree is using requests. Pretty odd though!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/70", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/70/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/70/events", "html_url": "https://github.com/braintree/braintree_python/issues/70", "id": 160751760, "node_id": "MDU6SXNzdWUxNjA3NTE3NjA=", "number": 70, "title": "TypeError: Cannot convert None to Decimal", "user": {"login": "jimrrchen", "id": 580362, "node_id": "MDQ6VXNlcjU4MDM2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/580362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimrrchen", "html_url": "https://github.com/jimrrchen", "followers_url": "https://api.github.com/users/jimrrchen/followers", "following_url": "https://api.github.com/users/jimrrchen/following{/other_user}", "gists_url": "https://api.github.com/users/jimrrchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimrrchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimrrchen/subscriptions", "organizations_url": "https://api.github.com/users/jimrrchen/orgs", "repos_url": "https://api.github.com/users/jimrrchen/repos", "events_url": "https://api.github.com/users/jimrrchen/events{/privacy}", "received_events_url": "https://api.github.com/users/jimrrchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-16T20:21:22Z", "updated_at": "2017-11-17T22:40:29Z", "closed_at": "2017-11-17T22:40:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\n\nI'm getting \"TypeError: Cannot convert None to Decimal\" whenever I tried to fetch some certain transactions. Here are the tracebacks. The transaction looks fine in Braintree dashboard. \n\n```\n----> 1 braintree.Transaction.find(\"2vx88hy\")\n\n/production/sweeper/persistent/virtualenv/local/lib/python2.7/site-packages/braintree/transaction.pyc in find(transaction_id)\n    259             transaction = braintree.Transaction.find(\"my_transaction_id\")\n    260         \"\"\"\n--> 261         return Configuration.gateway().transaction.find(transaction_id)\n    262 \n    263 \n\n/production/sweeper/persistent/virtualenv/local/lib/python2.7/site-packages/braintree/transaction_gateway.pyc in find(self, transaction_id)\n     38                 raise NotFoundError()\n     39             response = self.config.http().get(self.config.base_merchant_path() + \"/transactions/\" + transaction_id)\n---> 40             return Transaction(self.gateway, response[\"transaction\"])\n     41         except NotFoundError:\n     42             raise NotFoundError(\"transaction with id \" + repr(transaction_id) + \" not found\")\n\n\n/production/sweeper/persistent/virtualenv/local/lib/python2.7/site-packages/braintree/transaction.pyc in __init__(self, gateway, attributes)\n    526             self.discounts = [Discount(gateway, discount) for discount in self.discounts]\n    527         if \"status_history\" in attributes:\n--> 528             self.status_history = [StatusEvent(gateway, status_event) for status_event in self.status_history]\n    529         if \"subscription\" in attributes:\n    530             self.subscription_details = SubscriptionDetails(attributes.pop(\"subscription\"))\n\n/production/sweeper/persistent/virtualenv/local/lib/python2.7/site-packages/braintree/status_event.pyc in __init__(self, gateway, attributes)\n      6         Resource.__init__(self, gateway, attributes)\n      7 \n----> 8         self.amount = Decimal(self.amount)\n\n/usr/lib/python2.7/decimal.pyc in __new__(cls, value, context)\n    656             return self\n    657 \n--> 658         raise TypeError(\"Cannot convert %r to Decimal\" % value)\n    659 \n    660     # @classmethod, but @decorator is not valid Python 2.3 syntax, so\n\nTypeError: Cannot convert None to Decimal\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/69", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/69/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/69/events", "html_url": "https://github.com/braintree/braintree_python/issues/69", "id": 151731672, "node_id": "MDU6SXNzdWUxNTE3MzE2NzI=", "number": 69, "title": "Making API calls using different sets of credentials.", "user": {"login": "tjratch", "id": 14169397, "node_id": "MDQ6VXNlcjE0MTY5Mzk3", "avatar_url": "https://avatars3.githubusercontent.com/u/14169397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjratch", "html_url": "https://github.com/tjratch", "followers_url": "https://api.github.com/users/tjratch/followers", "following_url": "https://api.github.com/users/tjratch/following{/other_user}", "gists_url": "https://api.github.com/users/tjratch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjratch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjratch/subscriptions", "organizations_url": "https://api.github.com/users/tjratch/orgs", "repos_url": "https://api.github.com/users/tjratch/repos", "events_url": "https://api.github.com/users/tjratch/events{/privacy}", "received_events_url": "https://api.github.com/users/tjratch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-28T20:08:55Z", "updated_at": "2016-04-29T15:05:33Z", "closed_at": "2016-04-29T14:52:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi There,\n\nWe're a third party metrics provider for Braintree need to make API calls with a different set of credentials depending on the company we are working with. However, from using the API it's only possible to specify credentials globally when you first configure the Braintree module (e.g. braintree.Configuration.configure) and cannot specify them on a per API call basis. This is problematic because API calls are no longer thread safe because the global configuration could changed before making an API request.\n\nFrom looking at configuration.py I could create my own wrapper class and call gateway() directly, but this will require me to wrap a lot of methods this way. Would it be possible to specify a way to specify API credentials on a per call basis OR make an encapsulated object instead of specifying the credentials globally?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/68", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/68/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/68/events", "html_url": "https://github.com/braintree/braintree_python/issues/68", "id": 142022076, "node_id": "MDU6SXNzdWUxNDIwMjIwNzY=", "number": 68, "title": "AttributeError: 'unicode' object has no attribute 'items'", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-19T03:11:46Z", "updated_at": "2016-04-11T20:21:41Z", "closed_at": "2016-04-11T19:01:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[This line](https://github.com/braintree/braintree_python/blob/0cb2f690772703c2cba0c3831ee55c5879811d9d/braintree/resource.py#L20) misses Python2 unicode strings, eventually causing an `AttributeError` exception.\n\n``` python\nTraceback (most recent call last):\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/subscription.py\", line 150, in update\n    return Configuration.gateway().subscription.update(subscription_id, params)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/subscription_gateway.py\", line 59, in update\n    Resource.verify_keys(params, Subscription.update_signature())\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/resource.py\", line 9, in verify_keys\n    params_keys = Resource.__flattened_params_keys(params)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/resource.py\", line 27, in __flattened_params_keys\n    keys += Resource.__flattened_params_keys(val, full_key)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/resource.py\", line 30, in __flattened_params_keys\n    keys += Resource.__flattened_params_keys(item, full_key)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/resource.py\", line 24, in __flattened_params_keys\n    for key, val in params.items():\nAttributeError: 'unicode' object has no attribute 'items'\n```\n\nShould be `basestring` instead of `str`, or even better use [six.string_types](http://pythonhosted.org/six/#six.string_types) for Python 3 compatibility.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/67", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/67/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/67/events", "html_url": "https://github.com/braintree/braintree_python/issues/67", "id": 132835807, "node_id": "MDU6SXNzdWUxMzI4MzU4MDc=", "number": 67, "title": "i'm getting the following error. not sure if this is on braintree server side", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-10T22:34:15Z", "updated_at": "2016-02-10T22:36:16Z", "closed_at": "2016-02-10T22:36:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "braintree1/lib/python2.7/site-packages/requests/packages/urllib3/util/ssl_.py:315: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#snimissingwarning.\n  SNIMissingWarning\n\nbraintree1/lib/python2.7/site-packages/requests/packages/urllib3/util/ssl_.py:120: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/66", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/66/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/66/events", "html_url": "https://github.com/braintree/braintree_python/issues/66", "id": 129323340, "node_id": "MDU6SXNzdWUxMjkzMjMzNDA=", "number": 66, "title": "Cannot Update default payment method", "user": {"login": "sparkline-charlie", "id": 15224937, "node_id": "MDQ6VXNlcjE1MjI0OTM3", "avatar_url": "https://avatars1.githubusercontent.com/u/15224937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkline-charlie", "html_url": "https://github.com/sparkline-charlie", "followers_url": "https://api.github.com/users/sparkline-charlie/followers", "following_url": "https://api.github.com/users/sparkline-charlie/following{/other_user}", "gists_url": "https://api.github.com/users/sparkline-charlie/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkline-charlie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkline-charlie/subscriptions", "organizations_url": "https://api.github.com/users/sparkline-charlie/orgs", "repos_url": "https://api.github.com/users/sparkline-charlie/repos", "events_url": "https://api.github.com/users/sparkline-charlie/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkline-charlie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-28T03:38:05Z", "updated_at": "2016-01-28T16:58:15Z", "closed_at": "2016-01-28T16:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nHope you can find some time to check on my problem.\n\nCurrently, i'm creating a maintenance application and display the payment method used by clients. Clients may have multiple payment method.\n\n![image](https://cloud.githubusercontent.com/assets/15224937/12634274/f92e6b26-c5b2-11e5-8f59-aaf9bbb0fd83.png)\n\nMy concern here is i am not able to update the default payment method for the selected customer using this code.\n\nresult = braintree.CreditCard.update(token,{\n        \"options\": {\n            \"make_default\": True,\n        },\n    })\n\nAfter checking the command prompt for any logs. I've found this\n\n![image](https://cloud.githubusercontent.com/assets/15224937/12634323/6a906b7a-c5b3-11e5-9a1e-8e7773254586.png)\n\nBelow is the complete code of the method i've used.\n\n![image](https://cloud.githubusercontent.com/assets/15224937/12634336/88977d34-c5b3-11e5-864b-3043682e7f56.png)\n\nHope you can assist me.\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/65", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/65/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/65/events", "html_url": "https://github.com/braintree/braintree_python/issues/65", "id": 128714462, "node_id": "MDU6SXNzdWUxMjg3MTQ0NjI=", "number": 65, "title": "Missing values while paying with a fake android pay token", "user": {"login": "bar", "id": 88155, "node_id": "MDQ6VXNlcjg4MTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/88155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bar", "html_url": "https://github.com/bar", "followers_url": "https://api.github.com/users/bar/followers", "following_url": "https://api.github.com/users/bar/following{/other_user}", "gists_url": "https://api.github.com/users/bar/gists{/gist_id}", "starred_url": "https://api.github.com/users/bar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bar/subscriptions", "organizations_url": "https://api.github.com/users/bar/orgs", "repos_url": "https://api.github.com/users/bar/repos", "events_url": "https://api.github.com/users/bar/events{/privacy}", "received_events_url": "https://api.github.com/users/bar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-26T03:38:10Z", "updated_at": "2016-01-26T03:58:47Z", "closed_at": "2016-01-26T03:58:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After paying with a `fake-android-pay-amex-nonce`, if I inspect the response and try to get the `bin` or `last_4`, they are `None`, which causes `masked_number` to also fail\n\n```\nipdb> type(credit_card)\n<class 'braintree.credit_card.CreditCard'>\nipdb> pi credit_card\ncredit_card._setattrs      = [u'bin', u'expiration_month', u'unique_number_identifier', u'prepaid', u'expirat\ncredit_card.billing_address= None\ncredit_card.bin            = None\ncredit_card.card_type      = None\ncredit_card.cardholder_name= None\ncredit_card.commercial     = u'Unknown'\ncredit_card.country_of_issuance= u'Unknown'\ncredit_card.customer_location= None\ncredit_card.debit          = u'Unknown'\ncredit_card.durbin_regulated= u'Unknown'\ncredit_card.expiration_month= ''\ncredit_card.expiration_year= ''\ncredit_card.gateway        = <braintree.braintree_gateway.BraintreeGateway object at 0x4670a10>\ncredit_card.healthcare     = u'Unknown'\ncredit_card.image_url      = u'https://assets.braintreegateway.com/payment_method_logo/unknown.png?environmen\ncredit_card.is_expired     = <function expired at 0x3221578>\ncredit_card.issuing_bank   = u'Unknown'\ncredit_card.last_4         = None\ncredit_card.payroll        = u'Unknown'\ncredit_card.prepaid        = u'Unknown'\ncredit_card.product_id     = u'Unknown'\ncredit_card.token          = u'74tj66'\ncredit_card.unique_number_identifier= None\ncredit_card.venmo_sdk      = False\nipdb> credit_card.bin\nipdb> credit_card.last_4\nipdb> credit_card.masked_number\n*** TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/64", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/64/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/64/events", "html_url": "https://github.com/braintree/braintree_python/issues/64", "id": 123335831, "node_id": "MDU6SXNzdWUxMjMzMzU4MzE=", "number": 64, "title": "datetime is not timezone aware", "user": {"login": "tisdall", "id": 4029388, "node_id": "MDQ6VXNlcjQwMjkzODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4029388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tisdall", "html_url": "https://github.com/tisdall", "followers_url": "https://api.github.com/users/tisdall/followers", "following_url": "https://api.github.com/users/tisdall/following{/other_user}", "gists_url": "https://api.github.com/users/tisdall/gists{/gist_id}", "starred_url": "https://api.github.com/users/tisdall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tisdall/subscriptions", "organizations_url": "https://api.github.com/users/tisdall/orgs", "repos_url": "https://api.github.com/users/tisdall/repos", "events_url": "https://api.github.com/users/tisdall/events{/privacy}", "received_events_url": "https://api.github.com/users/tisdall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-21T18:48:00Z", "updated_at": "2015-12-22T20:34:41Z", "closed_at": "2015-12-22T20:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs mention than search results and such are always in UTC, but the datetime.datetime objects being created with this library are not timezone aware.  I can understand not wanting to add pytz just to accomplish this, so you could define your own UTC object (as shown in the datetime docs) that could be used in this case.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/62", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/62/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/62/events", "html_url": "https://github.com/braintree/braintree_python/issues/62", "id": 112913389, "node_id": "MDU6SXNzdWUxMTI5MTMzODk=", "number": 62, "title": "TypeError: cannot make memory view because object does not have the buffer interface", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-10-22T23:41:08Z", "updated_at": "2016-01-13T05:43:25Z", "closed_at": "2015-10-23T01:53:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This error happens when running `braintree.Customer.create({'email': email})` where email is the user's email address.\n\n```\nTraceback (most recent call last):\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/flask_login.py\", line 792, in decorated_view\n    return func(*args, **kwargs)\n  File \"/opt/wakatime/current/app/api_v1.py\", line 295, in post_users_current_payment_method\n    app.current_user.update_payment_method(processor_type, **form.data)\n  File \"/opt/wakatime/current/app/models.py\", line 924, in update_payment_method\n    self.processor.update_payment_method(kwargs['token'])\n  File \"/opt/wakatime/current/app/models.py\", line 3435, in update_payment_method\n    'customer_id': self.customer.id,\n  File \"/opt/wakatime/current/app/models.py\", line 3319, in customer\n    self._customer = PaymentProcessor.get_customer(self.user, self.type)[0]\n  File \"/opt/wakatime/current/app/models.py\", line 3294, in get_customer\n    'email': user.email,\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/customer.py\", line 102, in create\n    return Configuration.gateway().customer.create(params)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/customer_gateway.py\", line 26, in create\n    return self._post(\"/customers\", {\"customer\": params})\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/customer_gateway.py\", line 88, in _post\n    response = self.config.http().post(self.config.base_merchant_path() + url, params)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/util/http.py\", line 49, in post\n    return self.__http_do(\"POST\", path, params)\n  File \"/opt/wakatime/current/venv/local/lib/python2.7/site-packages/braintree/util/http.py\", line 72, in __http_do\n    raise e\nTypeError: cannot make memory view because object does not have the buffer interface\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/61", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/61/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/61/events", "html_url": "https://github.com/braintree/braintree_python/issues/61", "id": 106451961, "node_id": "MDU6SXNzdWUxMDY0NTE5NjE=", "number": 61, "title": "[deleted]", "user": {"login": "R00tCat", "id": 14284566, "node_id": "MDQ6VXNlcjE0Mjg0NTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/14284566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/R00tCat", "html_url": "https://github.com/R00tCat", "followers_url": "https://api.github.com/users/R00tCat/followers", "following_url": "https://api.github.com/users/R00tCat/following{/other_user}", "gists_url": "https://api.github.com/users/R00tCat/gists{/gist_id}", "starred_url": "https://api.github.com/users/R00tCat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/R00tCat/subscriptions", "organizations_url": "https://api.github.com/users/R00tCat/orgs", "repos_url": "https://api.github.com/users/R00tCat/repos", "events_url": "https://api.github.com/users/R00tCat/events{/privacy}", "received_events_url": "https://api.github.com/users/R00tCat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-15T00:13:35Z", "updated_at": "2015-09-16T21:34:35Z", "closed_at": "2015-09-16T16:49:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "[deleted]\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/57", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/57/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/57/events", "html_url": "https://github.com/braintree/braintree_python/issues/57", "id": 81581019, "node_id": "MDU6SXNzdWU4MTU4MTAxOQ==", "number": 57, "title": "Access to the error response code", "user": {"login": "andymckay", "id": 74699, "node_id": "MDQ6VXNlcjc0Njk5", "avatar_url": "https://avatars2.githubusercontent.com/u/74699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andymckay", "html_url": "https://github.com/andymckay", "followers_url": "https://api.github.com/users/andymckay/followers", "following_url": "https://api.github.com/users/andymckay/following{/other_user}", "gists_url": "https://api.github.com/users/andymckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/andymckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andymckay/subscriptions", "organizations_url": "https://api.github.com/users/andymckay/orgs", "repos_url": "https://api.github.com/users/andymckay/repos", "events_url": "https://api.github.com/users/andymckay/events{/privacy}", "received_events_url": "https://api.github.com/users/andymckay/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-27T19:05:19Z", "updated_at": "2015-05-28T16:41:47Z", "closed_at": "2015-05-28T16:41:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like there are some errors that return an error code, but the result of the parsing in ErrorResult is that the actual response code is thrown away.\n\nHere's an example, given the gist at https://gist.github.com/andymckay/a9340d1b0a7ce483025e:\n\n```\nIn [6]: from braintree.error_result import ErrorResult\n\nIn [7]: err = ErrorResult(None, data)\n\nIn [8]: data['message']\nOut[8]: u'Invalid Secure Payment Data'\n\nIn [9]: data['transaction']['processor_response_code']\nOut[9]: u'2078'\n```\n\nYou can access that in the response, but once it gets parsed into a Transaction, its lost, because Transaction doesn't parse that at all:\n\n```\nIn [10]: err.params\nOut[10]: \n{u'descriptor': {u'name': u'Mozilla*product', u'url': u'mozilla.org'},\n u'payment_method_token': u'7fk5cg',\n u'plan_id': u'mozilla-concrete-brick',\n u'trial_period': u'false'}\n\nIn [12]: err.transaction\nOut[12]: <Transaction {amount: Decimal('2078.00'), credit_card: {u'bin': u'411111', u'card_type': u'Visa', u'unique_number_identifier': u'21ee4272998b10107aeee9d50d6fe1ae', u'expiration_year': u'2016', u'prepaid': u'Unknown', u'durbin_regulated': u'Unknown', u'commercial': u'Unknown', u'healthcare': u'Unknown', u'payroll': u'Unknown', u'issuing_bank': u'Unknown', u'last_4': u'1111', u'expiration_month': u'12', u'cardholder_name': u'a', u'token': u'7fk5cg', u'customer_location': u'US', u'image_url': u'https://assets.braintreegateway.com/payment_method_logo/visa.png?environment=sandbox', u'country_of_issuance': u'Unknown', u'debit': u'Unknown', u'venmo_sdk': False, u'product_id': u'Unknown'}} at 4426039504>\n```\n\nNote that if you pass the Transaction information to the Verification object, you can get something useful:\n\n```\nIn [15]: cc = CreditCardVerification(None, data['transaction'])\n\nIn [16]: cc.processor_response_code\nOut[16]: u'2078'\n```\n\nWe'd like to be able to return that unique to braintree response code up the stack, log it etc. But we can't unless we monkey patch ErrorResult. Unless I'm missing something on how to process the response for this kind of error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/56", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/56/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/56/events", "html_url": "https://github.com/braintree/braintree_python/issues/56", "id": 80679161, "node_id": "MDU6SXNzdWU4MDY3OTE2MQ==", "number": 56, "title": "Extract dictionnary from object", "user": {"login": "PhilipGarnero", "id": 5165169, "node_id": "MDQ6VXNlcjUxNjUxNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5165169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilipGarnero", "html_url": "https://github.com/PhilipGarnero", "followers_url": "https://api.github.com/users/PhilipGarnero/followers", "following_url": "https://api.github.com/users/PhilipGarnero/following{/other_user}", "gists_url": "https://api.github.com/users/PhilipGarnero/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilipGarnero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilipGarnero/subscriptions", "organizations_url": "https://api.github.com/users/PhilipGarnero/orgs", "repos_url": "https://api.github.com/users/PhilipGarnero/repos", "events_url": "https://api.github.com/users/PhilipGarnero/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilipGarnero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-25T21:45:40Z", "updated_at": "2016-12-20T10:02:13Z", "closed_at": "2015-05-28T15:37:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if we could get the dictionnary representing a braintree object.\nWe could extract data or send some objects directly to the clients like plans for example.\n\nI managed to do this by adding this small function to your `AttributeGetter` but it's just monkey patching :\n\n```\ndef serialize(self):\n    data = {}\n    for key in self._setattrs:\n        if hasattr(getattr(self, key), \"serialize\"):\n            data[key] = getattr(self, key).serialize()\n        else:\n            data[key] = getattr(self, key)\n    return data\n```\n\nIf I want to get the dictionnary from an object, I'll be able to do `my_object.serialize()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/55", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/55/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/55/events", "html_url": "https://github.com/braintree/braintree_python/issues/55", "id": 80611513, "node_id": "MDU6SXNzdWU4MDYxMTUxMw==", "number": 55, "title": "strptime not thread safe", "user": {"login": "andymckay", "id": 74699, "node_id": "MDQ6VXNlcjc0Njk5", "avatar_url": "https://avatars2.githubusercontent.com/u/74699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andymckay", "html_url": "https://github.com/andymckay", "followers_url": "https://api.github.com/users/andymckay/followers", "following_url": "https://api.github.com/users/andymckay/following{/other_user}", "gists_url": "https://api.github.com/users/andymckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/andymckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andymckay/subscriptions", "organizations_url": "https://api.github.com/users/andymckay/orgs", "repos_url": "https://api.github.com/users/andymckay/repos", "events_url": "https://api.github.com/users/andymckay/events{/privacy}", "received_events_url": "https://api.github.com/users/andymckay/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-25T17:43:59Z", "updated_at": "2015-05-26T17:04:58Z", "closed_at": "2015-05-26T17:04:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been getting intermittent errors in parsing webhooks from braintree:\n\n```\n    return self.__node_content(root, child.nodeValue)\n  File \"/opt/rh/python27/root/usr/lib/python2.7/site-packages/braintree/util/parser.py\", line 87, in __node_content\n    return self.__convert_to_datetime(content)\n  File \"/opt/rh/python27/root/usr/lib/python2.7/site-packages/braintree/util/parser.py\", line 42, in __convert_to_datetime\n    return datetime.strptime(value, \"%Y-%m-%dT%H:%M:%SZ\")\nAttributeError: _strptime\n```\n\nI think the cause is this:\n\nhttps://bugs.python.org/issue7980\n\nIn my case I'm using braintree_python in Django and runserver. It sounds like this would occur in our prod environment using uwsgi too. Since the webhooks can be retried, this isn't a terrible problem, but it could be an issue in areas other than webhook.\n\nSince the dates are consistent and well formatted from Braintree, perhaps just working around strptime will be easier.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/54", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/54/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/54/events", "html_url": "https://github.com/braintree/braintree_python/issues/54", "id": 78388592, "node_id": "MDU6SXNzdWU3ODM4ODU5Mg==", "number": 54, "title": "Webhook verify Accept Header incorrect", "user": {"login": "andymckay", "id": 74699, "node_id": "MDQ6VXNlcjc0Njk5", "avatar_url": "https://avatars2.githubusercontent.com/u/74699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andymckay", "html_url": "https://github.com/andymckay", "followers_url": "https://api.github.com/users/andymckay/followers", "following_url": "https://api.github.com/users/andymckay/following{/other_user}", "gists_url": "https://api.github.com/users/andymckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/andymckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andymckay/subscriptions", "organizations_url": "https://api.github.com/users/andymckay/orgs", "repos_url": "https://api.github.com/users/andymckay/repos", "events_url": "https://api.github.com/users/andymckay/events{/privacy}", "received_events_url": "https://api.github.com/users/andymckay/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-20T06:06:27Z", "updated_at": "2015-09-08T21:19:59Z", "closed_at": "2015-09-08T21:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you set up webhook on braintree it sends a request to the server to check it can receive that request. The docs recommend getting that request, verifying and returning the response, for example:\n\nhttps://developers.braintreepayments.com/javascript+python/guides/webhooks/create#bt-challenge\n\nWhat they don't say is that the request from braintree will send Accept headers in the request that look like this:\n\n[u'_/_; q=0.5', u'application/xml']\n\nBut the Braintree end of things does not accept any response or \"application/xml\". It only accepts one things and that is the response echoed back, no XML or JSON encoding applied. It does not accept _/_. \n\nThe request for the verify end point should send an Accept header of: text/plain.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/53", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/53/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/53/events", "html_url": "https://github.com/braintree/braintree_python/issues/53", "id": 75309503, "node_id": "MDU6SXNzdWU3NTMwOTUwMw==", "number": 53, "title": "Unable to use braintree_python on Google App Engine", "user": {"login": "vrypan", "id": 58812, "node_id": "MDQ6VXNlcjU4ODEy", "avatar_url": "https://avatars2.githubusercontent.com/u/58812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrypan", "html_url": "https://github.com/vrypan", "followers_url": "https://api.github.com/users/vrypan/followers", "following_url": "https://api.github.com/users/vrypan/following{/other_user}", "gists_url": "https://api.github.com/users/vrypan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrypan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrypan/subscriptions", "organizations_url": "https://api.github.com/users/vrypan/orgs", "repos_url": "https://api.github.com/users/vrypan/repos", "events_url": "https://api.github.com/users/vrypan/events{/privacy}", "received_events_url": "https://api.github.com/users/vrypan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-05-11T18:11:48Z", "updated_at": "2015-05-13T20:13:01Z", "closed_at": "2015-05-13T20:11:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "AI responses are gzip-encoded, but the python library (probably the requests library) treats them as ASCII.\n\n```\nFile \"xtras/braintree/customer.py\", line 126, in find\n    return Configuration.gateway().customer.find(customer_id)\n  File \"xtras/braintree/customer_gateway.py\", line 36, in find\n    response = self.config.http().get(\"/customers/\" + customer_id)\n  File \"xtras/braintree/util/http.py\", line 57, in get\n    return self.__http_do(\"GET\", path)\n  File \"xtras/braintree/util/http.py\", line 82, in __http_do\n    return XmlUtil.dict_from_xml(response_body)\n  File \"xtras/braintree/util/xml_util.py\", line 11, in dict_from_xml\n    return Parser(xml).parse()\n  File \"xtras/braintree/util/parser.py\", line 15, in __init__\n    self.doc = minidom.parseString(\"><\".join(re.split(\">\\s+<\", xml)).strip())\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/dom/minidom.py\", line 1928, in parseString\n    return expatbuilder.parseString(string)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/dom/expatbuilder.py\", line 940, in parseString\n    return builder.parseString(string)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/dom/expatbuilder.py\", line 223, in parseString\n    parser.Parse(string, True)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\ufffd' in position 0: ordinal not in range(128)\n```\n\nModifying http_do() in util/http.py to unzip the content, makes the library work again, but this is probably a fragile way to fix this. (unzip() is just a wrapper to unzip raw data, nothing special.)\n\n```\n   def http_do(self, http_verb, path, headers, request_body):\n        response = self.__request_function(http_verb)(\n            self.environment.base_url + path,\n            headers=headers,\n            data=request_body,\n            verify=self.environment.ssl_certificate,\n            timeout=self.config.timeout\n        )\n        if response.headers['content-encoding']=='gzip':\n            return [response.status_code, unzip(response.content)]\n        else:\n            return [response.status_code, response.text]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/52", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/52/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/52/events", "html_url": "https://github.com/braintree/braintree_python/issues/52", "id": 71658583, "node_id": "MDU6SXNzdWU3MTY1ODU4Mw==", "number": 52, "title": "Plan not returning price as decimal", "user": {"login": "andymckay", "id": 74699, "node_id": "MDQ6VXNlcjc0Njk5", "avatar_url": "https://avatars2.githubusercontent.com/u/74699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andymckay", "html_url": "https://github.com/andymckay", "followers_url": "https://api.github.com/users/andymckay/followers", "following_url": "https://api.github.com/users/andymckay/following{/other_user}", "gists_url": "https://api.github.com/users/andymckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/andymckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andymckay/subscriptions", "organizations_url": "https://api.github.com/users/andymckay/orgs", "repos_url": "https://api.github.com/users/andymckay/repos", "events_url": "https://api.github.com/users/andymckay/events{/privacy}", "received_events_url": "https://api.github.com/users/andymckay/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-28T17:58:15Z", "updated_at": "2015-04-30T16:11:37Z", "closed_at": "2015-04-30T16:11:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [12]: plans[0]      \nOut[12]: <Plan {billing_day_of_month: None, trial_duration: None, description: u'A brick', billing_frequency: 1, trial_period: False, price: u'10.00', currency_iso_code: u'USD', updated_at: datetime.datetime(2015, 4, 3, 15, 10, 30), trial_duration_unit: u'day', number_of_billing_cycles: None, discounts: [], add_ons: [], created_at: datetime.datetime(2015, 4, 3, 15, 10, 30), merchant_id: u'tbb7hb44zx28jhsh', id: u'concrete-brick', name: u'Concrete'} at 62648720>\n\nIn [13]: plans[0].price\nOut[13]: u'10.00'\n```\n\nWould be easier to use if it was parsed as a decimal.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/51", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/51/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/51/events", "html_url": "https://github.com/braintree/braintree_python/issues/51", "id": 69702570, "node_id": "MDU6SXNzdWU2OTcwMjU3MA==", "number": 51, "title": "Document how to test would be nice", "user": {"login": "andymckay", "id": 74699, "node_id": "MDQ6VXNlcjc0Njk5", "avatar_url": "https://avatars2.githubusercontent.com/u/74699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andymckay", "html_url": "https://github.com/andymckay", "followers_url": "https://api.github.com/users/andymckay/followers", "following_url": "https://api.github.com/users/andymckay/following{/other_user}", "gists_url": "https://api.github.com/users/andymckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/andymckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andymckay/subscriptions", "organizations_url": "https://api.github.com/users/andymckay/orgs", "repos_url": "https://api.github.com/users/andymckay/repos", "events_url": "https://api.github.com/users/andymckay/events{/privacy}", "received_events_url": "https://api.github.com/users/andymckay/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-20T23:20:48Z", "updated_at": "2015-05-20T16:42:37Z", "closed_at": "2015-05-19T19:19:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "How you run the unit tests in this library isn't obvious. I figured out how to test the unit tests:\n\n```\npip install nose\nnosetests tests/unit\n```\n\nLess clear how to run the integration tests:\n\n```\nnosetests test/integration/\n[snip]\nFAILED (errors=464, failures=2)\n```\n\nAm I meant to be running a server? It's making lots of urllib3 connections:\n\n```\nConnectionError: ('Connection aborted.', error(61, 'Connection refused'))\n-------------------- >> begin captured logging << --------------------\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTP connection (1): localhost\n```\n\nGot an issue and possible pull request to send to you, but don't know how to run the tests :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/50", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/50/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/50/events", "html_url": "https://github.com/braintree/braintree_python/issues/50", "id": 62811624, "node_id": "MDU6SXNzdWU2MjgxMTYyNA==", "number": 50, "title": "HTTP POST failing with latest requests lib", "user": {"login": "acechase", "id": 8802, "node_id": "MDQ6VXNlcjg4MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acechase", "html_url": "https://github.com/acechase", "followers_url": "https://api.github.com/users/acechase/followers", "following_url": "https://api.github.com/users/acechase/following{/other_user}", "gists_url": "https://api.github.com/users/acechase/gists{/gist_id}", "starred_url": "https://api.github.com/users/acechase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acechase/subscriptions", "organizations_url": "https://api.github.com/users/acechase/orgs", "repos_url": "https://api.github.com/users/acechase/repos", "events_url": "https://api.github.com/users/acechase/events{/privacy}", "received_events_url": "https://api.github.com/users/acechase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-18T21:50:40Z", "updated_at": "2015-05-11T20:43:41Z", "closed_at": "2015-05-11T20:43:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have recently updated the requests library in my project to version 2.6.0. Specifically, I ran \"pip install --upgrade requests[security]\" and the following requirements were changed:\n\n```\n< XlsxWriter==0.6.2\n\n---\n> XlsxWriter==0.6.3\n17d16\n< cffi==0.9.2\n20d18\n< cryptography==0.8\n33d30\n< django-sql-stacktrace==0.2.2\n40d36\n< enum34==1.0.4\n65d60\n< ndg-httpsclient==0.3.3\n71,73d65\n< pyOpenSSL==0.14\n< pyasn1==0.1.7\n< pycparser==2.10\n81c73\n< requests==2.6.0\n\n---\n> requests==2.4.3\n87c79\n< six==1.9.0\n\n---\n> six==1.8.0\n```\n\nAfter making that update I see the following errors occurring when attempting to communicate with braintree:\n\n```\n  File \"/Users/andrew/code/EatWith/EatWith/apps/credit_cards/braintree/braintree_interaction_manager.py\", line 231, in braintree_sale\n    result = braintree.Transaction.sale(braintree_data)\n  File \"/Users/andrew/.virtualenvs/EatWith/lib/python2.7/site-packages/braintree/transaction.py\", line 312, in sale\n    return Transaction.create(params)\n  File \"/Users/andrew/.virtualenvs/EatWith/lib/python2.7/site-packages/braintree/transaction.py\", line 407, in create\n    return Configuration.gateway().transaction.create(params)\n  File \"/Users/andrew/.virtualenvs/EatWith/lib/python2.7/site-packages/braintree/transaction_gateway.py\", line 33, in create\n    return self._post(\"/transactions\", {\"transaction\": params})\n  File \"/Users/andrew/.virtualenvs/EatWith/lib/python2.7/site-packages/braintree/transaction_gateway.py\", line 137, in _post\n    response = self.config.http().post(url, params)\n  File \"/Users/andrew/.virtualenvs/EatWith/lib/python2.7/site-packages/braintree/util/http.py\", line 49, in post\n    return self.__http_do(\"POST\", path, params)\n  File \"/Users/andrew/.virtualenvs/EatWith/lib/python2.7/site-packages/braintree/util/http.py\", line 71, in __http_do\n    raise e\nTypeError: data must be a byte string\n```\n\nI have observed this behavior both on localhost (on my macbook) running in the development environment, as well as running on the heroku cedar-14 stack (ubuntu based) in the production environment.\n\nIt seems to me that the most recent updates to the requests library have introduce an incompatibility with the braintree lib. Does this sound correct? \n\nAlso, I see support for different http strategies in the configuration object, but I can't find documentation or examples anywhere showing how to use a different strategy. Would appreciate any pointers to references that may be available.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/47", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/47/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/47/events", "html_url": "https://github.com/braintree/braintree_python/issues/47", "id": 59567166, "node_id": "MDU6SXNzdWU1OTU2NzE2Ng==", "number": 47, "title": "'Configuration' has no attribute 'environment'", "user": {"login": "jiujitsu", "id": 587510, "node_id": "MDQ6VXNlcjU4NzUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/587510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiujitsu", "html_url": "https://github.com/jiujitsu", "followers_url": "https://api.github.com/users/jiujitsu/followers", "following_url": "https://api.github.com/users/jiujitsu/following{/other_user}", "gists_url": "https://api.github.com/users/jiujitsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiujitsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiujitsu/subscriptions", "organizations_url": "https://api.github.com/users/jiujitsu/orgs", "repos_url": "https://api.github.com/users/jiujitsu/repos", "events_url": "https://api.github.com/users/jiujitsu/events{/privacy}", "received_events_url": "https://api.github.com/users/jiujitsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-02T23:08:53Z", "updated_at": "2015-03-03T00:57:22Z", "closed_at": "2015-03-03T00:57:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code:\n\n``` python\nWebhookTesting.sample_notification(\n    WebhookNotification.Kind.SubscriptionWentPastDue,\n    'some_id'\n)\n```\n\nthrows this exception:\n\n``` python\nTraceback (most recent call last):\n  File \"/vagrant/plug/payment/tests/acceptance/test_braintree_webhooks.py\", line 21, in test\n    'some_id'\n  File \"/usr/local/lib/python2.7/dist-packages/braintree/webhook_testing.py\", line 7, in sample_notification\n    return Configuration.gateway().webhook_testing.sample_notification(kind, id)\n  File \"/usr/local/lib/python2.7/dist-packages/braintree/configuration.py\", line 41, in gateway\n    return braintree.braintree_gateway.BraintreeGateway(Configuration.instantiate())\n  File \"/usr/local/lib/python2.7/dist-packages/braintree/configuration.py\", line 46, in instantiate\n    environment=Configuration.environment,\nAttributeError: type object 'Configuration' has no attribute 'environment'\n```\n\nI am using version 3.11.1.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/46", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/46/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/46/events", "html_url": "https://github.com/braintree/braintree_python/issues/46", "id": 59007888, "node_id": "MDU6SXNzdWU1OTAwNzg4OA==", "number": 46, "title": "3.11.0 failed Python 3.x tests", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-26T02:29:34Z", "updated_at": "2015-02-27T05:00:44Z", "closed_at": "2015-02-27T05:00:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Failed with Python 3.4.2. It works fine with Python 2.7.9. Below are the detailed errors:\n\n```\n.............................................................................E...E............................................................................................................................\n======================================================================\nERROR: test_create_signature (tests.unit.test_payment_method_gateway.TestPaymentMethodGateway)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/felix/projects/arch/archlinuxcn/python-braintree/src/braintree_python-3.11.0/tests/unit/test_payment_method_gateway.py\", line 67, in test_create_signature\n    self.assertItemsEqual(expected_signature, actual_signature)\nAttributeError: 'TestPaymentMethodGateway' object has no attribute 'assertItemsEqual'\n\n======================================================================\nERROR: test_update_signature (tests.unit.test_payment_method_gateway.TestPaymentMethodGateway)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/felix/projects/arch/archlinuxcn/python-braintree/src/braintree_python-3.11.0/tests/unit/test_payment_method_gateway.py\", line 99, in test_update_signature\n    self.assertItemsEqual(expected_signature, actual_signature)\nAttributeError: 'TestPaymentMethodGateway' object has no attribute 'assertItemsEqual'\n\n----------------------------------------------------------------------\nRan 206 tests in 0.084s\n\nFAILED (errors=2)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/45", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/45/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/45/events", "html_url": "https://github.com/braintree/braintree_python/issues/45", "id": 58823931, "node_id": "MDU6SXNzdWU1ODgyMzkzMQ==", "number": 45, "title": "PaymentMethod.create() doesn't accept all allowed params", "user": {"login": "jiujitsu", "id": 587510, "node_id": "MDQ6VXNlcjU4NzUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/587510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiujitsu", "html_url": "https://github.com/jiujitsu", "followers_url": "https://api.github.com/users/jiujitsu/followers", "following_url": "https://api.github.com/users/jiujitsu/following{/other_user}", "gists_url": "https://api.github.com/users/jiujitsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiujitsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiujitsu/subscriptions", "organizations_url": "https://api.github.com/users/jiujitsu/orgs", "repos_url": "https://api.github.com/users/jiujitsu/repos", "events_url": "https://api.github.com/users/jiujitsu/events{/privacy}", "received_events_url": "https://api.github.com/users/jiujitsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-24T23:29:55Z", "updated_at": "2015-02-26T20:27:29Z", "closed_at": "2015-02-26T20:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to this: https://developers.braintreepayments.com/javascript+python/reference/request/payment-method/create\n\nIt looks like this method should allow these additional parameters:\n- number\n- expiration_date\n- expiration_month\n- expiration_year\n- cardholder_name\n- cvv\n- venmo_sdk_payment_method_code\n\nHowever, trying to use any combination of those results in an error such as:\n\n``` python\n  vi +9   /usr/local/lib/python2.7/dist-packages/braintree/payment_method.py  # create\n    return Configuration.gateway().payment_method.create(params)\n  vi +22  /usr/local/lib/python2.7/dist-packages/braintree/payment_method_gateway.py  # create\n    Resource.verify_keys(params, PaymentMethod.create_signature())\n  vi +17  /usr/local/lib/python2.7/dist-packages/braintree/resource.py  # verify_keys\n    raise KeyError(\"Invalid keys: \" + keys_string)\nKeyError: 'Invalid keys: expiration_month, cardholder_name, expiration_year, cvv, number'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/44", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/44/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/44/events", "html_url": "https://github.com/braintree/braintree_python/issues/44", "id": 46429908, "node_id": "MDU6SXNzdWU0NjQyOTkwOA==", "number": 44, "title": "PaymentInstrumentType should handle apple_pay_card", "user": {"login": "mwildehahn", "id": 704593, "node_id": "MDQ6VXNlcjcwNDU5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/704593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwildehahn", "html_url": "https://github.com/mwildehahn", "followers_url": "https://api.github.com/users/mwildehahn/followers", "following_url": "https://api.github.com/users/mwildehahn/following{/other_user}", "gists_url": "https://api.github.com/users/mwildehahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwildehahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwildehahn/subscriptions", "organizations_url": "https://api.github.com/users/mwildehahn/orgs", "repos_url": "https://api.github.com/users/mwildehahn/repos", "events_url": "https://api.github.com/users/mwildehahn/events{/privacy}", "received_events_url": "https://api.github.com/users/mwildehahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-21T18:49:40Z", "updated_at": "2014-11-07T22:01:56Z", "closed_at": "2014-11-07T22:01:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/braintree/braintree_python/blob/master/braintree/payment_instrument_type.py\n\nshould support `apple_pay_card` as well\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/43", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/43/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/43/events", "html_url": "https://github.com/braintree/braintree_python/issues/43", "id": 37184932, "node_id": "MDU6SXNzdWUzNzE4NDkzMg==", "number": 43, "title": "Need to be more generous about numeric customer ids", "user": {"login": "ye", "id": 133924, "node_id": "MDQ6VXNlcjEzMzkyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/133924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ye", "html_url": "https://github.com/ye", "followers_url": "https://api.github.com/users/ye/followers", "following_url": "https://api.github.com/users/ye/following{/other_user}", "gists_url": "https://api.github.com/users/ye/gists{/gist_id}", "starred_url": "https://api.github.com/users/ye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ye/subscriptions", "organizations_url": "https://api.github.com/users/ye/orgs", "repos_url": "https://api.github.com/users/ye/repos", "events_url": "https://api.github.com/users/ye/events{/privacy}", "received_events_url": "https://api.github.com/users/ye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-04T20:05:26Z", "updated_at": "2014-07-14T15:28:51Z", "closed_at": "2014-07-14T15:28:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When call `Customer.update`, customer id was assumed to be a string. It should be more fault tolerant to allow other types like `integer` to be allowed. \n\nHere is the code to reproduce:\n\n``` python\nIn [87]: bt_customer\nOut[87]: \n{'credit_card': {'billing_address': {'country_code_alpha2': 'US',\n   'extended_address': '',\n   'locality': 'New York',\n   'postal_code': '10016',\n   'region': 'NY',\n   'street_address': '2 Park Ave'},\n  'cardholder_name': 'Ye Wang',\n  'expiration_date': '03/15',\n  'number': '4000111111111115',\n  'options': {'make_default': True, 'update_existing_token': '1717648'}},\n 'first_name': 'Ye',\n 'last_name': 'Wang'}\n\nIn [88]: result1 = braintree.Customer.update(2963, bt_customer)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-88-5096251d7619> in <module>()\n----> 1 result1 = braintree.Customer.update(2963, bt_customer)\n\n/Users/ye/.envs/dbi/lib/python2.7/site-packages/braintree/customer.pyc in update(customer_id, params)\n    165         \"\"\"\n    166 \n--> 167         return Configuration.gateway().customer.update(customer_id, params)\n    168 \n    169     @staticmethod\n\n/Users/ye/.envs/dbi/lib/python2.7/site-packages/braintree/customer_gateway.pyc in update(self, customer_id, params)\n     64     def update(self, customer_id, params={}):\n     65         Resource.verify_keys(params, Customer.update_signature())\n---> 66         response = self.config.http().put(\"/customers/\" + customer_id, {\"customer\": params})\n     67         if \"customer\" in response:\n     68             return SuccessfulResult({\"customer\": Customer(self.gateway, response[\"customer\"])})\n\nTypeError: cannot concatenate 'str' and 'int' objects\n```\n\nA simple fix of using string formatting on line 66 of `customer_gateway.py` would fix it.\n\n``` python\nresponse = self.config.http().put(\"/customers/%s\" % customer_id, {\"customer\": params})\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/42", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/42/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/42/events", "html_url": "https://github.com/braintree/braintree_python/issues/42", "id": 31114204, "node_id": "MDU6SXNzdWUzMTExNDIwNA==", "number": 42, "title": "btnamespace", "user": {"login": "simon-weber", "id": 950506, "node_id": "MDQ6VXNlcjk1MDUwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/950506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-weber", "html_url": "https://github.com/simon-weber", "followers_url": "https://api.github.com/users/simon-weber/followers", "following_url": "https://api.github.com/users/simon-weber/following{/other_user}", "gists_url": "https://api.github.com/users/simon-weber/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-weber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-weber/subscriptions", "organizations_url": "https://api.github.com/users/simon-weber/orgs", "repos_url": "https://api.github.com/users/simon-weber/repos", "events_url": "https://api.github.com/users/simon-weber/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-weber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-08T22:16:46Z", "updated_at": "2014-04-10T16:22:38Z", "closed_at": "2014-04-10T16:22:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "We (Venmo) recently open sourced https://github.com/venmo/btnamespace. Linking to it in your README might save your users some headaches =)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/37", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/37/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/37/events", "html_url": "https://github.com/braintree/braintree_python/issues/37", "id": 26251258, "node_id": "MDU6SXNzdWUyNjI1MTI1OA==", "number": 37, "title": "NameError: global name 'requests' is not defined", "user": {"login": "gonvaled", "id": 224267, "node_id": "MDQ6VXNlcjIyNDI2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/224267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonvaled", "html_url": "https://github.com/gonvaled", "followers_url": "https://api.github.com/users/gonvaled/followers", "following_url": "https://api.github.com/users/gonvaled/following{/other_user}", "gists_url": "https://api.github.com/users/gonvaled/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonvaled/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonvaled/subscriptions", "organizations_url": "https://api.github.com/users/gonvaled/orgs", "repos_url": "https://api.github.com/users/gonvaled/repos", "events_url": "https://api.github.com/users/gonvaled/events{/privacy}", "received_events_url": "https://api.github.com/users/gonvaled/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-24T16:14:39Z", "updated_at": "2014-01-29T18:43:16Z", "closed_at": "2014-01-29T18:43:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the example causes an exception:\n\n```\nTraceback (most recent call last):\n  File \"braintree_test.py\", line 26, in <module>\n    \"expiration_year\": \"2012\"\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/transaction.py\", line 297, in sale\n    return Transaction.create(params)\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/transaction.py\", line 392, in create\n    return Configuration.gateway().transaction.create(params)\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/transaction_gateway.py\", line 33, in create\n    return self._post(\"/transactions\", {\"transaction\": params})\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/transaction_gateway.py\", line 137, in _post\n    response = self.config.http().post(url, params)\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/util/http.py\", line 40, in post\n    return self.__http_do(\"POST\", path, params)\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/util/http.py\", line 55, in __http_do\n    status, response_body = http_strategy.http_do(http_verb, full_path, self.__headers(), request_body)\n  File \"/home/gonvaled/.virtualenvs/python2.7.3-wavilon1/local/lib/python2.7/site-packages/braintree/util/http_strategy/requests_strategy.py\", line 12, in http_do\n    response = requests.request(\nNameError: global name 'requests' is not defined\n```\n\n```\nimport braintree\n\nbraintree.Configuration.configure(\n    braintree.Environment.Sandbox,\n    BRAINTREE_MERCHANT_ID,\n    BRAINTREE_PUBLIC_KEY,\n    BRAINTREE_PRIVATE_KEY\n)\n\nresult = braintree.Transaction.sale({\n    \"amount\": \"1000.00\",\n    \"credit_card\": {\n        \"number\": \"4111111111111111\",\n        \"expiration_month\": \"05\",\n        \"expiration_year\": \"2012\"\n    }\n})\n\nif result.is_success:\n    print \"success!: \" + result.transaction.id\nelif result.transaction:\n    print \"Error processing transaction:\"\n    print \"  message: \" + result.message\n    print \"  code:    \" + result.transaction.processor_response_code\n    print \"  text:    \" + result.transaction.processor_response_text\nelse:\n    print \"message: \" + result.message\n    for error in result.errors.deep_errors:\n        print \"attribute: \" + error.attribute\n        print \"  code: \" + error.code\n        print \"  message: \" + error.message\n```\n\nI have python 2.7.3, and according to pip freeze:\n\n```\nrequests==1.1.0\nbraintree==2.26.0\n```\n\nRunning on `Crunchbang Linux`:\n\n```\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 7.2 (wheezy)\nRelease:    7.2\nCodename:   wheezy\n\n$ uname -a\nLinux pegasus 3.2.0-4-686-pae #1 SMP Debian 3.2.51-1 i686 GNU/Linux\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/32", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/32/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/32/events", "html_url": "https://github.com/braintree/braintree_python/issues/32", "id": 21649210, "node_id": "MDU6SXNzdWUyMTY0OTIxMA==", "number": 32, "title": "Braintree fails to install over pip", "user": {"login": "lucassimon994", "id": 1832482, "node_id": "MDQ6VXNlcjE4MzI0ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1832482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucassimon994", "html_url": "https://github.com/lucassimon994", "followers_url": "https://api.github.com/users/lucassimon994/followers", "following_url": "https://api.github.com/users/lucassimon994/following{/other_user}", "gists_url": "https://api.github.com/users/lucassimon994/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucassimon994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucassimon994/subscriptions", "organizations_url": "https://api.github.com/users/lucassimon994/orgs", "repos_url": "https://api.github.com/users/lucassimon994/repos", "events_url": "https://api.github.com/users/lucassimon994/events{/privacy}", "received_events_url": "https://api.github.com/users/lucassimon994/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-27T08:38:06Z", "updated_at": "2013-12-10T21:54:44Z", "closed_at": "2013-12-10T21:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have python 3.3 running on fedora 19 64-bit with virtualenv and requests installed. When running \n\n```\npip install braintree\n```\n\nI am given the following traceback error\n\n```\nDownloading/unpacking braintree\nDownloading braintree-2.23.1.tar.gz\nRunning setup.py egg_info for package braintree\n  Traceback (most recent call last):\n  File \"<string>\", line 16, in <module>\n  File \"/home/.../venv/build/braintree/setup.py\", line 1, in <module>\n    import braintree\n  File \"./braintree/__init__.py\", line 1, in <module>\n    from braintree.add_on import AddOn\n  File \"./braintree/add_on.py\", line 1, in <module>\n    from braintree.configuration import Configuration\n  File \"./braintree/configuration.py\", line 4, in <module>\n    import braintree.util.http_strategy.pycurl_strategy\n  File \"./braintree/util/http_strategy/pycurl_strategy.py\", line 1, in <module>\n    import httplib\nImportError: No module named 'httplib'\nComplete output from command python setup.py egg_info:\nTraceback (most recent call last):\n\nFile \"<string>\", line 16, in <module>\n\nFile \"/home/.../venv/build/braintree/setup.py\", line 1, in <module>\n\nimport braintree\n\nFile \"./braintree/__init__.py\", line 1, in <module>\n\n  from braintree.add_on import AddOn\n\nFile \"./braintree/add_on.py\", line 1, in <module>\n\n  from braintree.configuration import Configuration\n\nFile \"./braintree/configuration.py\", line 4, in <module>\n\n  import braintree.util.http_strategy.pycurl_strategy\n\nFile \"./braintree/util/http_strategy/pycurl_strategy.py\", line 1, in <module>\n\n  import httplib\n\nImportError: No module named 'httplib'\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in        \n/home/.../venv/build/braintree\nStoring complete log in ~/.pip/pip.log\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/31", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/31/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/31/events", "html_url": "https://github.com/braintree/braintree_python/issues/31", "id": 20073113, "node_id": "MDU6SXNzdWUyMDA3MzExMw==", "number": 31, "title": "Allow for the 2.0+ version of requests", "user": {"login": "jzempel", "id": 143773, "node_id": "MDQ6VXNlcjE0Mzc3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/143773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jzempel", "html_url": "https://github.com/jzempel", "followers_url": "https://api.github.com/users/jzempel/followers", "following_url": "https://api.github.com/users/jzempel/following{/other_user}", "gists_url": "https://api.github.com/users/jzempel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jzempel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jzempel/subscriptions", "organizations_url": "https://api.github.com/users/jzempel/orgs", "repos_url": "https://api.github.com/users/jzempel/repos", "events_url": "https://api.github.com/users/jzempel/events{/privacy}", "received_events_url": "https://api.github.com/users/jzempel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-25T22:03:12Z", "updated_at": "2013-10-18T19:11:58Z", "closed_at": "2013-10-18T19:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "See #23\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/30", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/30/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/30/events", "html_url": "https://github.com/braintree/braintree_python/issues/30", "id": 18270168, "node_id": "MDU6SXNzdWUxODI3MDE2OA==", "number": 30, "title": "setup.py will fail when trying to install under python 3.3", "user": {"login": "pfrantz", "id": 2443004, "node_id": "MDQ6VXNlcjI0NDMwMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2443004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfrantz", "html_url": "https://github.com/pfrantz", "followers_url": "https://api.github.com/users/pfrantz/followers", "following_url": "https://api.github.com/users/pfrantz/following{/other_user}", "gists_url": "https://api.github.com/users/pfrantz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfrantz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfrantz/subscriptions", "organizations_url": "https://api.github.com/users/pfrantz/orgs", "repos_url": "https://api.github.com/users/pfrantz/repos", "events_url": "https://api.github.com/users/pfrantz/events{/privacy}", "received_events_url": "https://api.github.com/users/pfrantz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-19T23:33:45Z", "updated_at": "2013-08-20T22:10:13Z", "closed_at": "2013-08-20T16:28:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The 2to3 utility is needed to convert braintree_python to be compatible with python 3. This would be better if it was done as part of the setup.py (that way python 3 users could use pip) I have added the code that is needed to do this.  Setuptools is needed for this to work but thats a pretty standard module. After doing this the \n\npython setup.py build\npython setup.py install\n\nworks fine.\n\n``` python\nimport distutils.core\nimport sys\n\n# a hack to just get the version without calling the package init \n# which is necessary as the import will fail on python > 3 due to the \n# 2to3 needing to be run as part of the install\nsys.path.append(\"braintree\")\nfrom version import Version\n\n# Importing setuptools adds some features like \"setup.py develop\", but\n# it's optional so swallow the error if it's not there.\ntry:\n    import setuptools\nexcept ImportError:\n    pass\n\nmajor, minor = sys.version_info[:2]\n\nkwargs = {}\nif major >= 3:\n    import setuptools  # setuptools is required for use_2to3\n    kwargs[\"use_2to3\"] = True\n\ndistutils.core.setup(\n    name=\"braintree\",\n    version=Version,\n    description=\"Braintree Python Library\",\n    author=\"Braintree\",\n    author_email=\"support@braintreepayments.com\",\n    url=\"https://www.braintreepayments.com/docs/python\",\n    packages=[\"braintree\", \"braintree.exceptions\", \"braintree.util\", \"braintree.test\", \"braintree.util.http_strategy\"],\n    package_data={\"braintree\": [\"ssl/*\"]},\n    install_requires=[\"requests>=0.11.1,<2.0\"],\n    zip_safe=False,\n    **kwargs\n)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/29", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/29/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/29/events", "html_url": "https://github.com/braintree/braintree_python/issues/29", "id": 16193844, "node_id": "MDU6SXNzdWUxNjE5Mzg0NA==", "number": 29, "title": "TypeError: unicode argument without an encoding", "user": {"login": "seedifferently", "id": 50830, "node_id": "MDQ6VXNlcjUwODMw", "avatar_url": "https://avatars0.githubusercontent.com/u/50830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seedifferently", "html_url": "https://github.com/seedifferently", "followers_url": "https://api.github.com/users/seedifferently/followers", "following_url": "https://api.github.com/users/seedifferently/following{/other_user}", "gists_url": "https://api.github.com/users/seedifferently/gists{/gist_id}", "starred_url": "https://api.github.com/users/seedifferently/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seedifferently/subscriptions", "organizations_url": "https://api.github.com/users/seedifferently/orgs", "repos_url": "https://api.github.com/users/seedifferently/repos", "events_url": "https://api.github.com/users/seedifferently/events{/privacy}", "received_events_url": "https://api.github.com/users/seedifferently/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-06-30T21:44:04Z", "updated_at": "2013-10-03T21:46:36Z", "closed_at": "2013-07-01T00:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to parse the webhooks signature and payload, I am getting:\n\n```\nTraceback (most recent call last):\n  File \"/src/djangoapp/apps/braintree/views.py\", line 61, in webhook\n    request.POST['bt_signature'], request.POST['bt_payload']\n  File \"/.virtualenvs/djangoapp/local/lib/python2.7/site-packages/braintree/webhook_notification.py\", line 17, in parse\n    return Configuration.gateway().webhook_notification.parse(signature, payload)\n  File \"/.virtualenvs/djangoapp/local/lib/python2.7/site-packages/braintree/webhook_notification_gateway.py\", line 13, in parse\n    self.__validate_signature(signature, payload)\n  File \"/.virtualenvs/djangoapp/local/lib/python2.7/site-packages/braintree/webhook_notification_gateway.py\", line 32, in __validate_signature\n    if not Crypto.secure_compare(payload_signature, matching_signature):\n  File \"/.virtualenvs/djangoapp/local/lib/python2.7/site-packages/braintree/util/crypto.py\", line 15, in secure_compare\n    right_bytes = bytearray(right)\nTypeError: unicode argument without an encoding\n```\n\nI am using Django 1.4, and have this code in my Django view which is throwing the exception:\n\n```\nwebhook_notification = braintree.WebhookNotification.parse(\n    request.POST['bt_signature'], request.POST['bt_payload']\n)\n```\n\nThis was taken from your Python docs here: https://www.braintreepayments.com/docs/python/webhooks/parsing\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/27", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/27/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/27/events", "html_url": "https://github.com/braintree/braintree_python/issues/27", "id": 10405455, "node_id": "MDU6SXNzdWUxMDQwNTQ1NQ==", "number": 27, "title": "Webhook `timestamp`s are not timezone aware", "user": {"login": "timheap", "id": 132147, "node_id": "MDQ6VXNlcjEzMjE0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/132147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timheap", "html_url": "https://github.com/timheap", "followers_url": "https://api.github.com/users/timheap/followers", "following_url": "https://api.github.com/users/timheap/following{/other_user}", "gists_url": "https://api.github.com/users/timheap/gists{/gist_id}", "starred_url": "https://api.github.com/users/timheap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timheap/subscriptions", "organizations_url": "https://api.github.com/users/timheap/orgs", "repos_url": "https://api.github.com/users/timheap/repos", "events_url": "https://api.github.com/users/timheap/events{/privacy}", "received_events_url": "https://api.github.com/users/timheap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-01-29T05:28:05Z", "updated_at": "2013-01-29T20:41:30Z", "closed_at": "2013-01-29T17:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `timestamp`s on `WebhookNotification` instances are 'naive' datetime instances (see the [`datetime` docs](http://docs.python.org/2/library/datetime.html)). This means that they do not have any associated timezone - they are just a time. Python best practices state that `datetime`/`time` objects should _always_ have a timezone. Given that your API states in [other locations](https://www.braintreepayments.com/docs/python/transactions/search#status_changes) that times are returned as UTC, attaching the UTC timezone to `datetime`s returned by the API would make everything consistent with itself and Python best practices.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/26", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/26/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/26/events", "html_url": "https://github.com/braintree/braintree_python/issues/26", "id": 10397061, "node_id": "MDU6SXNzdWUxMDM5NzA2MQ==", "number": 26, "title": "There is no `subscription_changed_plan` webhook or similar", "user": {"login": "timheap", "id": 132147, "node_id": "MDQ6VXNlcjEzMjE0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/132147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timheap", "html_url": "https://github.com/timheap", "followers_url": "https://api.github.com/users/timheap/followers", "following_url": "https://api.github.com/users/timheap/following{/other_user}", "gists_url": "https://api.github.com/users/timheap/gists{/gist_id}", "starred_url": "https://api.github.com/users/timheap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timheap/subscriptions", "organizations_url": "https://api.github.com/users/timheap/orgs", "repos_url": "https://api.github.com/users/timheap/repos", "events_url": "https://api.github.com/users/timheap/events{/privacy}", "received_events_url": "https://api.github.com/users/timheap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-01-28T23:06:57Z", "updated_at": "2014-03-24T17:40:49Z", "closed_at": "2013-03-22T15:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are webhooks for every state change of a subscription, and for all attempted transactions, but there is no webhook for when a subscription changes plan.\n\nIn our application, different plans open up extra features of the application. The standard plan has a limited feature set, while the Delux Ultimate Pro++ plan has all of the features. People can upgrade and downgrade their plan at any time. Tracking these changes is quite important to our application.\n\nWith the other webhooks provided by braintree, our application can rely solely on the events posted to us by braintree for subscription status management. This great, because it allows us to not make a duplicate backend in our application to manage subscriptions, as the client can just use braintree if they want to manually add, manage and remove subscriptions. However, if the client upgrades a user to another plan through the braintree administration interface, our application will not know about it and the customer will not be upgraded.\n\nCould a webhook be added to notify applications when the plan of a subscription changes?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/25", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/25/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/25/events", "html_url": "https://github.com/braintree/braintree_python/issues/25", "id": 9793192, "node_id": "MDU6SXNzdWU5NzkzMTky", "number": 25, "title": "Documentation does not state where exceptions are found.", "user": {"login": "timheap", "id": 132147, "node_id": "MDQ6VXNlcjEzMjE0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/132147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timheap", "html_url": "https://github.com/timheap", "followers_url": "https://api.github.com/users/timheap/followers", "following_url": "https://api.github.com/users/timheap/following{/other_user}", "gists_url": "https://api.github.com/users/timheap/gists{/gist_id}", "starred_url": "https://api.github.com/users/timheap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timheap/subscriptions", "organizations_url": "https://api.github.com/users/timheap/orgs", "repos_url": "https://api.github.com/users/timheap/repos", "events_url": "https://api.github.com/users/timheap/events{/privacy}", "received_events_url": "https://api.github.com/users/timheap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-09T04:20:56Z", "updated_at": "2013-01-22T22:47:45Z", "closed_at": "2013-01-22T22:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation lists all the exceptions Braintree can throw, but does not say where to find them in the braintree package. It is easy to find them once you go looking, but stating in the documentation where to find each exception would be even clearer.\n\nAdditionally, the exceptions are listed in the documentation in a human friendly way with spaces, while the actual exception classes are named slightly differently.\n\nFor a good example, look at the [errors and exceptions](http://docs.python-requests.org/en/latest/user/quickstart/#errors-and-exceptions) section of the `requests` documentation. It states each error it throws, with the actual class name of the error, states which package it exists in, and mentioned the base class each exception inherits from. All this information should be found in the documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/24", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/24/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/24/events", "html_url": "https://github.com/braintree/braintree_python/issues/24", "id": 9793086, "node_id": "MDU6SXNzdWU5NzkzMDg2", "number": 24, "title": "Can not retrieve single plan via `braintree.Plan.find(plan_id)` or similar methods", "user": {"login": "timheap", "id": 132147, "node_id": "MDQ6VXNlcjEzMjE0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/132147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timheap", "html_url": "https://github.com/timheap", "followers_url": "https://api.github.com/users/timheap/followers", "following_url": "https://api.github.com/users/timheap/following{/other_user}", "gists_url": "https://api.github.com/users/timheap/gists{/gist_id}", "starred_url": "https://api.github.com/users/timheap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timheap/subscriptions", "organizations_url": "https://api.github.com/users/timheap/orgs", "repos_url": "https://api.github.com/users/timheap/repos", "events_url": "https://api.github.com/users/timheap/events{/privacy}", "received_events_url": "https://api.github.com/users/timheap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-09T04:13:08Z", "updated_at": "2013-01-22T21:57:46Z", "closed_at": "2013-01-22T21:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Customers, Transactions, and probably other models have a `find(id)` method that allows you to get a single instance back from Braintree. Plans do not have this. If I want to retrieve a single plan from Braintree, I have to get all plans and find the one with a matching id.\n\nCould a `Plan.find(plan_id)` method be created, similar to the methods for Customers and Transactions?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/23", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/23/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/23/events", "html_url": "https://github.com/braintree/braintree_python/issues/23", "id": 9691532, "node_id": "MDU6SXNzdWU5NjkxNTMy", "number": 23, "title": "Allow for the refactored 1.0+ version of requests", "user": {"login": "jzempel", "id": 143773, "node_id": "MDQ6VXNlcjE0Mzc3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/143773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jzempel", "html_url": "https://github.com/jzempel", "followers_url": "https://api.github.com/users/jzempel/followers", "following_url": "https://api.github.com/users/jzempel/following{/other_user}", "gists_url": "https://api.github.com/users/jzempel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jzempel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jzempel/subscriptions", "organizations_url": "https://api.github.com/users/jzempel/orgs", "repos_url": "https://api.github.com/users/jzempel/repos", "events_url": "https://api.github.com/users/jzempel/events{/privacy}", "received_events_url": "https://api.github.com/users/jzempel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-01-04T19:12:54Z", "updated_at": "2013-09-25T22:03:12Z", "closed_at": "2013-02-14T22:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Forcing a `<1.0` version of [requests](https://github.com/kennethreitz/requests) in [setup.py](https://github.com/braintree/braintree_python/blob/master/setup.py) prevents installing the latest/greatest for any project that adds braintree as a requirement.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/22", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/22/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/22/events", "html_url": "https://github.com/braintree/braintree_python/issues/22", "id": 4781827, "node_id": "MDU6SXNzdWU0NzgxODI3", "number": 22, "title": "Provide `__repr__` to all classes", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-05-28T15:23:25Z", "updated_at": "2012-08-21T11:48:00Z", "closed_at": "2012-05-29T16:01:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please provide an informative `__repr__` method to all Braintree classes, so we could see something more useful than `<braintree.credit_card.CreditCard object at 0x038ED550>`.\n\nPerhaps something like `<Nancy's AmEx-4413 credit card at 0x038ED550>`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/21", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/21/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/21/events", "html_url": "https://github.com/braintree/braintree_python/issues/21", "id": 4227022, "node_id": "MDU6SXNzdWU0MjI3MDIy", "number": 21, "title": "2.14.0 is missing a package in setup.py", "user": {"login": "napsel", "id": 1243399, "node_id": "MDQ6VXNlcjEyNDMzOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1243399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/napsel", "html_url": "https://github.com/napsel", "followers_url": "https://api.github.com/users/napsel/followers", "following_url": "https://api.github.com/users/napsel/following{/other_user}", "gists_url": "https://api.github.com/users/napsel/gists{/gist_id}", "starred_url": "https://api.github.com/users/napsel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/napsel/subscriptions", "organizations_url": "https://api.github.com/users/napsel/orgs", "repos_url": "https://api.github.com/users/napsel/repos", "events_url": "https://api.github.com/users/napsel/events{/privacy}", "received_events_url": "https://api.github.com/users/napsel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-04-22T01:45:21Z", "updated_at": "2012-04-23T15:21:59Z", "closed_at": "2012-04-23T15:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe setup.py is missing the following package: braintree.util.http_strategy\n\nWhen I attempt to install the latest python version (2.14.0) I get the following error:\nImportError: No module named http_strategy.pycurl_strategy\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/19", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/19/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/19/events", "html_url": "https://github.com/braintree/braintree_python/issues/19", "id": 1803504, "node_id": "MDU6SXNzdWUxODAzNTA0", "number": 19, "title": "server certificate verification failed", "user": {"login": "sidmitra", "id": 108775, "node_id": "MDQ6VXNlcjEwODc3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/108775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidmitra", "html_url": "https://github.com/sidmitra", "followers_url": "https://api.github.com/users/sidmitra/followers", "following_url": "https://api.github.com/users/sidmitra/following{/other_user}", "gists_url": "https://api.github.com/users/sidmitra/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidmitra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidmitra/subscriptions", "organizations_url": "https://api.github.com/users/sidmitra/orgs", "repos_url": "https://api.github.com/users/sidmitra/repos", "events_url": "https://api.github.com/users/sidmitra/events{/privacy}", "received_events_url": "https://api.github.com/users/sidmitra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-10-03T15:18:04Z", "updated_at": "2011-10-04T15:34:34Z", "closed_at": "2011-10-04T15:16:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nTraceback (most recent call last):\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/core/handlers/base.py\", line 117, in get_response\n    response = middleware_method(request, e)\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n\n  File \"/home/ubuntu/webapps/app/common/decorators.py\", line 24, in new_func\n    return view_func(request, *args, **kwargs)\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/contrib/auth/decorators.py\", line 23, in _wrapped_view\n    return view_func(request, *args, **kwargs)\n\n  File \"/home/ubuntu/webapps/app/app/profiles/views/expert.py\", line 651, in checkout\n    form_initial_data_dict = payments_helper.get_billing_info_dict(request.user)\n\n  File \"/home/ubuntu/webapps/app/common/payments/utils.py\", line 199, in get_billing_info_dict\n    customer = braintree.Customer.find(customer_id)\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/braintree/customer.py\", line 111, in find\n    return Configuration.gateway().customer.find(customer_id)\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/braintree/customer_gateway.py\", line 34, in find\n    response = self.config.http().get(\"/customers/\" + customer_id)\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/braintree/util/http.py\", line 47, in get\n    return self.__http_do(\"GET\", path)\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/braintree/util/http.py\", line 54, in __http_do\n    self.__verify_ssl()\n\n  File \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/braintree/util/http.py\", line 116, in __verify_ssl\n    curl.perform()\n\nerror: (60, 'server certificate verification failed. CAfile: /home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/braintree/ssl/www_braintreegateway_com.ca.crt CRLfile: none')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/17", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/17/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/17/events", "html_url": "https://github.com/braintree/braintree_python/issues/17", "id": 874740, "node_id": "MDU6SXNzdWU4NzQ3NDA=", "number": 17, "title": "pycurl is unable to write to .crt when braintree installed as zipped egg", "user": {"login": "rduplain", "id": 36428, "node_id": "MDQ6VXNlcjM2NDI4", "avatar_url": "https://avatars1.githubusercontent.com/u/36428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rduplain", "html_url": "https://github.com/rduplain", "followers_url": "https://api.github.com/users/rduplain/followers", "following_url": "https://api.github.com/users/rduplain/following{/other_user}", "gists_url": "https://api.github.com/users/rduplain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rduplain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rduplain/subscriptions", "organizations_url": "https://api.github.com/users/rduplain/orgs", "repos_url": "https://api.github.com/users/rduplain/repos", "events_url": "https://api.github.com/users/rduplain/events{/privacy}", "received_events_url": "https://api.github.com/users/rduplain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2011-05-10T03:37:53Z", "updated_at": "2012-01-04T16:12:19Z", "closed_at": "2012-01-04T16:12:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have 'braintree' listed as an install_requires in my setup.py file, using setuptools on Python 2.6.  Running `python setup.py develop` installs braintree as a zipped .egg, which causes this error:\n\n```\nerror: (77, 'error setting certificate verify locations:\\n  CAfile: /path/to/virtualenv/lib/python2.6/site-packages/braintree-2.10.0-py2.6.egg/braintree/ssl/sandbox_braintreegateway_com.ca.crt\\n  CApath: /etc/ssl/certs\\n')\n```\n\nBeing a zipped .egg, Python cannot write to the data files within the braintree distribution.  Setting `zip_safe=False` in braintree_python/setup.py should correct this issue.\n\n-Ron\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/16", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/16/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/16/events", "html_url": "https://github.com/braintree/braintree_python/issues/16", "id": 795578, "node_id": "MDU6SXNzdWU3OTU1Nzg=", "number": 16, "title": "TransparentRedirect.confirm() is tricky to use when non-braintree query parameters are involved", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-04-20T19:39:06Z", "updated_at": "2012-04-10T16:33:28Z", "closed_at": "2012-04-10T16:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to add a query parameter to my application's after-transparent-redirect landing url, indicating what page the user should be taken to next.  This would allow a single endpoint to check transparent redirect results and send the user on his way, no matter what application flow is in progress when the transparent redirect takes place.  (In other words, code reuse.)  I'd also like to be able to use arbitrary query parameters for other reasons.\n\nUnfortunately, TransparentRedirect.confirm() chokes when passed a query string without its expected query parameters, and the braintree api doesn't seem to offer away to distinguish its parameters from others that might be present.  This effectively leaves two ways to avoid the non-braintree exception:\n1. Parse the query string, filter out all expected non-braintree parameters, check whether any others remain, and if they do, call TransparentRedirect.confirm().\n2. Look in the braintree code for the query parameters it expects, parse the query string, check for braintree parameters, and if they are present, call TransparentRedirect.confirm().\n\nThe first approach is cumbersome, especially when multiple non-braintree query parameters might be in use.  The second approach is cleaner, but very fragile.  This would be much cleaner if the braintree api provided a way to detect whether transparent redirect results are present in a query string, or if TransparentRedirect.confirm() reported missing query parameters efficiently and gracefully.\n\n(Related note: the OpenID protocol also uses redirects, and prefixes its query parameters with 'openid.' to help with issues like this.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/14", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/14/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/14/events", "html_url": "https://github.com/braintree/braintree_python/issues/14", "id": 373841, "node_id": "MDU6SXNzdWUzNzM4NDE=", "number": 14, "title": "Feature Request:  get_view_url() on Subscription and other objects", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-10-21T01:00:49Z", "updated_at": "2012-04-10T16:30:56Z", "closed_at": "2012-04-10T16:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very convenient for our application's administrators if its web interface could link directly to Braintree's web page for any given subscription, customer, etc.  Would you folks consider adding a method on such objects to generate the appropriate URL for viewing the object in Braintree's UI?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/13", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/13/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/13/events", "html_url": "https://github.com/braintree/braintree_python/issues/13", "id": 373739, "node_id": "MDU6SXNzdWUzNzM3Mzk=", "number": 13, "title": "Documentation says to use depricated attribute Transaction.refund_id", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-10-20T23:46:44Z", "updated_at": "2010-10-22T20:41:04Z", "closed_at": "2010-10-22T20:41:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation says to use `Transaction.refund_id`, but when used, the SDK reports it as deprecated and suggests `refund_ids` instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/12", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/12/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/12/events", "html_url": "https://github.com/braintree/braintree_python/issues/12", "id": 326833, "node_id": "MDU6SXNzdWUzMjY4MzM=", "number": 12, "title": "Subscription.find('') raises UnexpectedError", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2010-09-21T18:59:13Z", "updated_at": "2011-11-04T22:38:43Z", "closed_at": "2011-11-04T14:27:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "While testing, I came across the following exception when calling Subscription.find(\"\"):\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.6/dist-packages/braintree/subscription.py\", line 109, in find\n    return Configuration.gateway().subscription.find(subscription_id)\n  File \"/usr/local/lib/python2.6/dist-packages/braintree/subscription_gateway.py\", line 33, in find\n    response = self.config.http().get(\"/subscriptions/\" + subscription_id)\n  File \"/usr/local/lib/python2.6/dist-packages/braintree/util/http.py\", line 47, in get\n    return self.__http_do(\"GET\", path)\n  File \"/usr/local/lib/python2.6/dist-packages/braintree/util/http.py\", line 70, in __http_do\n    Http.raise_exception_from_status(status)\n  File \"/usr/local/lib/python2.6/dist-packages/braintree/util/http.py\", line 34, in raise_exception_from_status\n    raise UnexpectedError(\"Unexpected HTTP_RESPONSE \" + str(status))\nbraintree.exceptions.unexpected_error.UnexpectedError: Unexpected HTTP_RESPONSE 405\n```\n\nNot a big deal, since I don't expect to pass an empty string to find() in practice, but I thought you folks would like to know since it seems like the expected result would have been a NotFoundError.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/11", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/11/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/11/events", "html_url": "https://github.com/braintree/braintree_python/issues/11", "id": 300222, "node_id": "MDU6SXNzdWUzMDAyMjI=", "number": 11, "title": "Documentation says to use depricated method retryCharge()", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-09-02T21:54:12Z", "updated_at": "2010-09-02T22:13:26Z", "closed_at": "2010-09-03T05:09:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://www.braintreepaymentsolutions.com/docs/python/subscriptions/retry_charge\n\nThe documentation says to use Subscription.retryCharge(), but calling that method yields a warning that it is deprecated in favor of retry_charge().\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/10", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/10/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/10/events", "html_url": "https://github.com/braintree/braintree_python/issues/10", "id": 290129, "node_id": "MDU6SXNzdWUyOTAxMjk=", "number": 10, "title": "braintree calls raise NoCertificate when setdefaulttimeout() has been used.", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2010-08-25T19:47:54Z", "updated_at": "2011-03-16T17:18:44Z", "closed_at": "2010-09-21T01:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently seeing this problem with Customer.create(), but it probably applies to all braintree API calls which contact the server.  These calls are failing, raising a spurious NoCertificate exception with this message: \"peer did not return certificate\"\n\nThis appears to be caused by a known bug in m2crypto:\nhttps://bugzilla.osafoundation.org/show_bug.cgi?id=2341\nhttp://bytes.com/topic/python/answers/586302-wierd-m2crypto-bug-phony-peer-did-not-return-certificate-error\n\nOur application calls socket.setdefaulttimeout() to make it gracefully handle cases when third-party libraries contact unresponsive servers. This is still pretty common in the python world, since per-connection timeout support was only recently added to urllib2 and many libraries have not yet started using that feature.  That means we can't reasonably stop using socket.setdefaulttimeout().  Unfortunately, it causes braintree calls to fail.\n\nSo, as long as the braintree library depends on m2crypto for its https support, it seems we are stuck with either an incompatibility or (if we were to disable socket timeouts to work around the bug) a reliability problem.\n\nPerhaps it would make sense for the braintree python library to use pycurl instead of m2crypto, or better yet, expose a pluggable http/https fetcher API?  (The latter would be especially nice when we migrate to App Engine.  Of course, such a plugin API should support caller-specified timeouts.  :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/9", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/9/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/9/events", "html_url": "https://github.com/braintree/braintree_python/issues/9", "id": 280434, "node_id": "MDU6SXNzdWUyODA0MzQ=", "number": 9, "title": "Docs refer to properties as methods", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-08-17T00:38:43Z", "updated_at": "2010-09-20T18:44:25Z", "closed_at": "2010-09-20T18:44:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are a couple of places where the docs mention a method that is actually a property.  Examples:\n\nhttp://www.braintreepaymentsolutions.com/docs/python/general/result_objects#success_results\n\"If the API call was successful, the `success` method on the result object will return true.\"\n\nhttp://www.braintreepaymentsolutions.com/docs/python/general/validation_errors#errors_at_specific_levels\n\"From a specific level, you can also get the number of errors at that level using the `size` method.\"\n\nSince methods and properties have different calling semantics, this might lead a developer to write invalid code.  For example, testing `size()` instead of `size`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/8", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/8/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/8/events", "html_url": "https://github.com/braintree/braintree_python/issues/8", "id": 280431, "node_id": "MDU6SXNzdWUyODA0MzE=", "number": 8, "title": "Docs refer to a nonexistent result attribute: \"success\"", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-08-17T00:35:03Z", "updated_at": "2010-09-20T18:45:01Z", "closed_at": "2010-09-20T18:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://www.braintreepaymentsolutions.com/docs/python/general/result_objects#success_results\n\nThe docs say, \"the success method on the result object will return true.\"  That should be `is_success`.  As far as I have seen, there is no `success` attribute in a result object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/7", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/7/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/7/events", "html_url": "https://github.com/braintree/braintree_python/issues/7", "id": 278012, "node_id": "MDU6SXNzdWUyNzgwMTI=", "number": 7, "title": "result.is_success is False but result.errors.size == 0", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2010-08-13T23:32:21Z", "updated_at": "2012-04-10T16:29:16Z", "closed_at": "2012-04-10T16:29:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "While testing the python api against the sandbox server, I am inducing a subscription failure using a $2,099.00 plan.  When Subscription.create() fails, result.message is set but result.errors.size is 0.  This breaks code that looks in result.errors.deep_errors[0] for the error code of the failure (see issue #6) apparently giving me no programmatic way to determine the error code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/6", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/6/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/6/events", "html_url": "https://github.com/braintree/braintree_python/issues/6", "id": 277104, "node_id": "MDU6SXNzdWUyNzcxMDQ=", "number": 6, "title": "ErrorResult could use a top-level 'code' attribute to match the 'message' attribute", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2010-08-13T01:19:05Z", "updated_at": "2011-09-26T22:10:38Z", "closed_at": "2011-09-26T22:10:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The ErrorResult class has a top-level `message` attribute which is a convenient alternative to groveling through the children of `errors` when only the first/main error message is needed for display.  Unfortunately, there is no matching `code` attribute, so there's no good way to take programmatic action based on what kind of error it is.\n\nAs far as I can tell, there is also no documentation indicating which child of `errors` was used for the top-level `message`, so grabbing an error code from there would seem unreliable at best.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/5", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/5/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/5/events", "html_url": "https://github.com/braintree/braintree_python/issues/5", "id": 273532, "node_id": "MDU6SXNzdWUyNzM1MzI=", "number": 5, "title": "Configuration doc string needs updating", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-08-09T23:02:09Z", "updated_at": "2010-08-15T16:50:21Z", "closed_at": "2010-08-15T16:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example code in the configuration.py doc string currently refers to a constant called `braintree.Environment.SANDBOX`, which does not exist.  It should read `braintree.Environment.Sandbox`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/4", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/4/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/4/events", "html_url": "https://github.com/braintree/braintree_python/issues/4", "id": 270987, "node_id": "MDU6SXNzdWUyNzA5ODc=", "number": 4, "title": "Transparent Redirect field name brackets make integration difficult", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2010-08-06T22:47:46Z", "updated_at": "2010-09-14T01:44:58Z", "closed_at": "2010-08-15T23:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is not python-specific, but since I don't see a general Braintree tracker, I'm writing it up here.\n\nThe bracket characters in Transparent Redirect field names make Braintree integration rather a pain.  Aside from looking confusingly similar to first-class subscripting syntax in various programming languages, I have seen two specific problems so far:\n1. They are incompatible with web form construction/validation libraries that use native-language variables to represent form fields.  (For example, the [WTForms](http://wtforms.simplecodes.com/) python library.)  Since brackets are not allowed in most languages' variable names, creating a Braintree form in a project that uses such libraries requires either laboriously writing form-processing code by hand, or else jumping through hoops to make the libraries work with reduced functionality.\n2. They do not conform to the HTML [ID](http://www.w3.org/TR/html4/types.html#h-6.2) and [NAME](http://www.w3.org/TR/html4/types.html#h-6.2) requirements, and therefore produce invalid HTML when used in templating systems that generate `<input id=\"\">` and `<label for=\"\">` tags from field names.\n\nThere are workarounds for these problems, of course, but they make for overly-complicated special-case code, wasted time, and frustrated programmers.\n\nWould you folks consider supporting an alternative syntax for embedding structure in your field names?  Separating sub-fields with double-underscores ought to work nicely.  For example, instead of writing `credit_card[options][make_default]` one might write `credit_card__options__make_default`, which would be no longer than the former syntax and would also work as a variable/id name in every language that comes to mind.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/3", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/3/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/3/events", "html_url": "https://github.com/braintree/braintree_python/issues/3", "id": 261411, "node_id": "MDU6SXNzdWUyNjE0MTE=", "number": 3, "title": "exceptions need a common base class", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-07-28T00:12:32Z", "updated_at": "2010-08-15T16:49:17Z", "closed_at": "2010-08-15T16:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "All the exceptions in the braintree package derive directly from Exception, which makes them indistinguishable from standard python exceptions unless I write special cases for each one of them (and hope new ones never show up).  For example:\n\n```\ntry:\n    braintree.Customer.create( dict( first_name=\"John\", last_name=\"Doe\"))\nexcept (AuthenticationError, \n    AuthorizationError, \n    DownForMaintenanceError,\n    ForgedQueryStringError,\n    NotFoundError,\n    ServerError,\n    UnexpectedError,\n    UpgradeRequiredError):\n    print \"braintree raised an exception\"\n```\n\nAll these exception classes really need a common ancestor that doesn't belong to the python standard library.  braintree.Error, perhaps.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/2", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/2/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/2/events", "html_url": "https://github.com/braintree/braintree_python/issues/2", "id": 261359, "node_id": "MDU6SXNzdWUyNjEzNTk=", "number": 2, "title": "global configuration prevents use with multi-personality servers", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2010-07-27T23:02:56Z", "updated_at": "2010-08-16T19:32:30Z", "closed_at": "2010-08-16T19:32:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "The braintree package currently stores account-specific configuration settings in globally-shared class attributes.  This prevents it from being used by applications that (like mine) handle traffic for multiple store fronts in the same process space.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/braintree/braintree_python/issues/1", "repository_url": "https://api.github.com/repos/braintree/braintree_python", "labels_url": "https://api.github.com/repos/braintree/braintree_python/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/braintree/braintree_python/issues/1/comments", "events_url": "https://api.github.com/repos/braintree/braintree_python/issues/1/events", "html_url": "https://github.com/braintree/braintree_python/issues/1", "id": 257753, "node_id": "MDU6SXNzdWUyNTc3NTM=", "number": 1, "title": "python braintree package will not install with m2crypto 0.20.1", "user": {"login": "foresto", "id": 322134, "node_id": "MDQ6VXNlcjMyMjEzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/322134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foresto", "html_url": "https://github.com/foresto", "followers_url": "https://api.github.com/users/foresto/followers", "following_url": "https://api.github.com/users/foresto/following{/other_user}", "gists_url": "https://api.github.com/users/foresto/gists{/gist_id}", "starred_url": "https://api.github.com/users/foresto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foresto/subscriptions", "organizations_url": "https://api.github.com/users/foresto/orgs", "repos_url": "https://api.github.com/users/foresto/repos", "events_url": "https://api.github.com/users/foresto/events{/privacy}", "received_events_url": "https://api.github.com/users/foresto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2010-07-23T18:09:42Z", "updated_at": "2010-07-23T20:49:29Z", "closed_at": "2010-07-23T20:49:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Ubuntu Lucid, pip install braintree fails with the following error:\n\nVersionConflict: (M2Crypto 0.20.1 (/usr/lib/pymodules/python2.6), Requirement.parse('M2Crypto==0.20.2'))\n\nFrom what I see in the m2crypto changelog, there's no reason the braintree package shouldn't work with m2crypto 0.20.1.  Can you folks update your version requirement so it will work with Ubuntu's standard m2crypto installation?\n\nhttp://websvn.osafoundation.org/filedetails.php?repname=m2crypto&path=%2Ftrunk%2FCHANGES\n", "performed_via_github_app": null, "score": 1.0}]}